MethodDeclaration Modifier public testForkedCapture IOException StatementExpression MethodInvocation MethodInvocation Literal Literal "true" setProperty getProject StatementExpression MethodInvocation testNonForkedCapture StatementExpression MethodInvocation MethodInvocation getOutput Literal "output" assertNoPrint StatementExpression MethodInvocation MethodInvocation getError Literal "error output" assertNoPrint StatementExpression MethodInvocation assertOutput	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator s Cast ReferenceType ModifiedSelector MethodInvocation getSelector LocalVariableDeclaration ReferenceType ModifiedSelector ReferenceType ComparatorName VariableDeclarator compName ClassCreator ReferenceType ModifiedSelector ReferenceType ComparatorName StatementExpression MethodInvocation compName Literal setValue StatementExpression MethodInvocation s MemberReference compName TryStatement StatementExpression MethodInvocation MemberReference s Literal "TTTTTTTTTTTT" performTests StatementExpression MethodInvocation s MethodInvocation delete getCache	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createJvmarg ReturnStatement MethodInvocation MethodInvocation getCommandline	0
MethodDeclaration Modifier public FormalParameter BasicType boolean aBoolean StatementExpression Assignment MemberReference nogenic MemberReference aBoolean =	0
MethodDeclaration Modifier public reset StatementExpression SuperMethodInvocation reset StatementExpression Assignment MemberReference emptyBehavior Literal "create" = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference filesetManifestConfig Literal null = StatementExpression Assignment MemberReference mergeManifestsMain Literal false = StatementExpression Assignment MemberReference manifestFile Literal null = StatementExpression Assignment MemberReference index Literal false =	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "patternSet{ includes: " MemberReference includeList Literal " excludes: " MemberReference excludeList Literal " }"	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String value StatementExpression Assignment MemberReference name MemberReference value =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator cachefile ClassCreator ReferenceType File MemberReference basedir Literal "cachefile.properties" LocalVariableDeclaration ReferenceType PropertiesfileCache VariableDeclarator cache ClassCreator ReferenceType PropertiesfileCache StatementExpression MethodInvocation cache MemberReference cachefile setCachefile StatementExpression MethodInvocation cache Literal "key" Literal "value" put StatementExpression MethodInvocation cache save StatementExpression MethodInvocation Literal "Cachefile not created." MethodInvocation cachefile exists assertTrue StatementExpression MethodInvocation cache delete StatementExpression MethodInvocation Literal "Cachefile not MethodInvocation cachefile exists assertFalse	0
MethodDeclaration Modifier public FormalParameter BasicType boolean resolveExecutable StatementExpression Assignment This MemberReference resolveExecutable MemberReference resolveExecutable =	0
MethodDeclaration Modifier public testOrderOfIncludePatternsIrrelevant IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expectedFiles ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal "alpha/beta" Literal "alpha/beta/gamma" LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/be?a/**" Literal "alpha/beta/gamma/" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds MemberReference expectedFiles MemberReference compareFiles StatementExpression Assignment MemberReference ds MethodInvocation myFTPTask MemberReference ftp newScanner = StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/" Literal "alpha/be?a/**" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds MemberReference expectedFiles MemberReference compareFiles	0
MethodDeclaration Modifier public static ReferenceType String getTestName FormalParameter ReferenceType String text LocalVariableDeclaration BasicType int VariableDeclarator p1 MethodInvocation text Literal '(' indexOf ReturnStatement MethodInvocation text Literal 0 MemberReference p1 substring	0
MethodDeclaration Modifier public static ReferenceType XMLReader BuildException TryStatement ReturnStatement MethodInvocation MethodInvocation getXMLReader MethodInvocation getNSParserFactory newSAXParser CatchClause CatchClauseParameter SAXException e ThrowStatement MethodInvocation MemberReference e	0
MethodDeclaration Modifier public setSkipEmptyFilesets FormalParameter BasicType boolean skip ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the skipemptyfileset attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier static protected ReferenceType AntHandler ReturnStatement MemberReference mainHandler	0
MethodDeclaration Modifier public setContentType FormalParameter ReferenceType String contentType StatementExpression Assignment This MemberReference contentType MemberReference contentType =	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Properties VariableDeclarator original ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator propsFile Literal null TryStatement StatementExpression Assignment MemberReference propsFile ClassCreator ReferenceType FileInputStream ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal "/replaceregexp.properties" = StatementExpression MethodInvocation original MemberReference propsFile load IfStatement BinaryOperation != MemberReference propsFile Literal null BlockStatement StatementExpression MethodInvocation propsFile close StatementExpression Assignment MemberReference propsFile Literal null = StatementExpression MethodInvocation Literal "Def" MethodInvocation original Literal "OldAbc" get assertEquals StatementExpression MethodInvocation Literal "testReplace" executeTarget LocalVariableDeclaration ReferenceType Properties VariableDeclarator after ClassCreator ReferenceType Properties TryStatement StatementExpression Assignment MemberReference propsFile ClassCreator ReferenceType FileInputStream ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal = StatementExpression MethodInvocation after MemberReference propsFile load IfStatement BinaryOperation != MemberReference propsFile Literal null BlockStatement StatementExpression MethodInvocation propsFile close StatementExpression Assignment MemberReference propsFile Literal null = StatementExpression MethodInvocation MethodInvocation after Literal "OldAbc" get assertNull StatementExpression MethodInvocation Literal "AbcDef" MethodInvocation after Literal "NewProp" get assertEquals	1
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation MethodInvocation MethodInvocation getProject createClasspath MethodInvocation createPath getCommandLine	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType FileSelector selector ReturnStatement MethodInvocation MemberReference mirrordir MemberReference mirrorfiles MemberReference selector selectionString	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier private getFile FormalParameter ReferenceType ChannelSftp channel FormalParameter ReferenceType ChannelSftp ReferenceType LsEntry le FormalParameter ReferenceType File localFile IOException SftpException LocalVariableDeclaration ReferenceType String VariableDeclarator remoteFile MethodInvocation le getFilename IfStatement MethodInvocation ! localFile exists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation localFile getAbsolutePath LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 IfStatement BinaryOperation != Assignment MemberReference i MethodInvocation path MemberReference File pathSeparator lastIndexOf = Literal - 1 BlockStatement IfStatement BinaryOperation > MethodInvocation path length MethodInvocation File.pathSeparator length BlockStatement StatementExpression ClassCreator MethodInvocation mkdirs ReferenceType File MethodInvocation path Literal 0 MemberReference i substring IfStatement MethodInvocation localFile isDirectory BlockStatement StatementExpression Assignment MemberReference localFile ClassCreator ReferenceType File MemberReference localFile MemberReference remoteFile = LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator totalLength MethodInvocation le MethodInvocation getSize getAttrs LocalVariableDeclaration ReferenceType VariableDeclarator monitor Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator trackProgress BinaryOperation && MethodInvocation getVerbose BinaryOperation > MemberReference totalLength Literal 102400 IfStatement MemberReference trackProgress BlockStatement StatementExpression Assignment MemberReference monitor MethodInvocation = TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Receiving: " MemberReference remoteFile Literal " : " MethodInvocation le MethodInvocation getSize getAttrs log StatementExpression MethodInvocation channel MemberReference remoteFile MethodInvocation localFile getAbsolutePath MemberReference monitor get LocalVariableDeclaration BasicType long VariableDeclarator endTime MethodInvocation System currentTimeMillis StatementExpression MethodInvocation MemberReference startTime MemberReference endTime Cast BasicType int MemberReference totalLength	1
MethodDeclaration Modifier public testNested2 TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "condition not satisfied; testNested2 must not fail" fail	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean proceed StatementExpression Assignment MemberReference failOnError MemberReference ! proceed =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation javac getTarget assertNull	0
MethodDeclaration Modifier protected BasicType boolean run FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType ProjectComponent log BuildException LocalVariableDeclaration ReferenceType ExecuteJava VariableDeclarator ej ClassCreator ReferenceType ExecuteJava LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation getN2aClass IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Couldn't load Kaffe's Native2Ascii" Literal " class" StatementExpression MethodInvocation cmd MethodInvocation c getName setExecutable StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand StatementExpression MethodInvocation ej MethodInvocation log getProject execute ReturnStatement Literal true	1
MethodDeclaration Modifier private BasicType int getBuildNumber FormalParameter Modifier final ReferenceType Properties properties BuildException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator buildNumber MethodInvocation properties MethodInvocation trim MemberReference DEFAULT_PROPERTY_NAME Literal "0" getProperty TryStatement ReturnStatement MethodInvocation Integer MemberReference buildNumber parseInt CatchClause CatchClauseParameter NumberFormatException nfe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + MemberReference myFile Literal " contains a non build number: " MemberReference buildNumber ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference nfe	0
MethodDeclaration Modifier public ReferenceType String getFullpath FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MemberReference p getRef ReturnStatement MemberReference fullpath	0
MethodDeclaration Modifier protected ReferenceType Mapper getRef ReturnStatement Cast ReferenceType Mapper MethodInvocation getCheckedRef	0
MethodDeclaration Modifier public FormalParameter ReferenceType String polyType StatementExpression Assignment This MemberReference polyType MemberReference polyType =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration BasicType int VariableDeclarator yesvotes Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator novotes Literal 0 LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements LocalVariableDeclaration BasicType boolean VariableDeclarator result WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType FileSelector MethodInvocation e nextElement = IfStatement MemberReference result BlockStatement StatementExpression Assignment MemberReference yesvotes BinaryOperation + MemberReference yesvotes Literal 1 = BlockStatement StatementExpression Assignment MemberReference novotes BinaryOperation + MemberReference novotes Literal 1 = IfStatement BinaryOperation > MemberReference yesvotes MemberReference novotes BlockStatement ReturnStatement Literal true IfStatement BinaryOperation > MemberReference novotes MemberReference yesvotes BlockStatement ReturnStatement Literal false ReturnStatement MemberReference allowtie	1
MethodDeclaration Modifier public setDestFile FormalParameter ReferenceType File destFile StatementExpression Assignment This MemberReference destFile MemberReference destFile =	0
MethodDeclaration Modifier public testPlainTask StatementExpression MethodInvocation Literal "testPlainTask" executeTarget LocalVariableDeclaration ReferenceType VariableDeclarator e Cast ReferenceType MethodInvocation MethodInvocation Literal "echo" getReference getProject StatementExpression MethodInvocation BinaryOperation == MethodInvocation e getLocation MemberReference Location UNKNOWN_LOCATION assertFalse StatementExpression MethodInvocation BinaryOperation == MethodInvocation e MethodInvocation getLineNumber getLocation Literal 0 assertFalse	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Execute exe FormalParameter ReferenceType String command StatementExpression MethodInvocation exe Literal true setVMLauncher LocalVariableDeclaration ReferenceType File VariableDeclarator vmsJavaOptionFile Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayCreator ReferenceType String BinaryOperation - MemberReference command length Literal 1 StatementExpression MethodInvocation System MemberReference command Literal 1 MemberReference args Literal 0 BinaryOperation - MemberReference command length Literal 1 arraycopy StatementExpression Assignment MemberReference vmsJavaOptionFile MethodInvocation JavaEnvUtils MemberReference args createVmsJavaOptionFile = StatementExpression MethodInvocation vmsJavaOptionFile deleteOnExit LocalVariableDeclaration ReferenceType String VariableDeclarator vmsCmd ArrayInitializer MemberReference ArraySelector Literal 0 command Literal "-V" MethodInvocation vmsJavaOptionFile getPath StatementExpression MethodInvocation exe MemberReference vmsCmd setCommandline CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Failed to create a temporary file for \"-V\" switch"	1
MethodDeclaration Modifier public FormalParameter BasicType int size StatementExpression Assignment This MemberReference readBufferSize MemberReference size =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "testNoSrc" Literal "expected failure" MemberReference WsdlToDotnet.Schema ERROR_NONE_DECLARED expectBuildExceptionContaining	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "testNoParams" Literal "expected failure" MemberReference WsdlToDotnet ERROR_NO_DEST_FILE expectBuildExceptionContaining	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String inputEncoding IfStatement BinaryOperation == MemberReference inputEncoding Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must not be null" BlockStatement StatementExpression Assignment This MemberReference inputEncoding MemberReference inputEncoding =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation MethodInvocation getCommandline toString	0
MethodDeclaration Modifier protected validate BuildException StatementExpression SuperMethodInvocation validate IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "DestFile was not specified"	0
MethodDeclaration Modifier public visitClassDeclaration FormalParameter ReferenceType ClassDeclaration d StatementExpression MethodInvocation BinaryOperation + Literal "visiting " MethodInvocation d getQualifiedName	0
MethodDeclaration Modifier public testAlternateIncludeExclude LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/**" Literal "alpha/beta/gamma/**" setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/**" setExcludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" compareFiles	0
MethodDeclaration Modifier public BasicType int getLevel ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef StatementExpression MethodInvocation connect TryStatement ReturnStatement MethodInvocation conn getInputStream StatementExpression Assignment MemberReference conn Literal null =	1
MethodDeclaration Modifier public BasicType byte getLocalFileDataExtra LocalVariableDeclaration BasicType byte VariableDeclarator extra MethodInvocation getExtra ReturnStatement TernaryExpression BinaryOperation != MemberReference extra Literal null MemberReference extra ArrayCreator BasicType byte Literal 0	0
MethodDeclaration Modifier private scanDir FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File destDir FormalParameter ReferenceType String files ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File MemberReference srcDir MemberReference ArraySelector MemberReference i files LocalVariableDeclaration ReferenceType File VariableDeclarator destFile ClassCreator ReferenceType File MemberReference destDir MemberReference ArraySelector MemberReference i files LocalVariableDeclaration ReferenceType String VariableDeclarator filename MemberReference ArraySelector MemberReference i files IfStatement MethodInvocation filename MethodInvocation Literal ".nrx" endsWith toLowerCase BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator classFile ClassCreator ReferenceType File MemberReference destDir BinaryOperation + MethodInvocation filename Literal 0 MethodInvocation filename Literal '.' lastIndexOf substring Literal ".class" IfStatement BinaryOperation || MemberReference ! compile BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation classFile lastModified BlockStatement StatementExpression MethodInvocation filecopyList MethodInvocation srcFile getAbsolutePath MethodInvocation destFile getAbsolutePath put StatementExpression MethodInvocation compileList MethodInvocation destFile getAbsolutePath addElement BlockStatement IfStatement BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation destFile lastModified BlockStatement StatementExpression MethodInvocation filecopyList MethodInvocation srcFile getAbsolutePath MethodInvocation destFile getAbsolutePath put	1
MethodDeclaration Modifier protected ReferenceType Collection getCollection ReturnStatement MethodInvocation Literal false getCollection	0
MethodDeclaration Modifier private FormalParameter ReferenceType String name FormalParameter ReferenceType File file FormalParameter ReferenceType Vector inc FormalParameter ReferenceType Vector exc FormalParameter ReferenceType Vector des IfStatement BinaryOperation || BinaryOperation || MethodInvocation inc MemberReference name contains MethodInvocation exc MemberReference name contains MethodInvocation des MemberReference name contains BlockStatement ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator included Literal false IfStatement MethodInvocation MemberReference name isExcluded BlockStatement StatementExpression MethodInvocation exc MemberReference name add IfStatement MethodInvocation MemberReference name MemberReference file isSelected BlockStatement StatementExpression Assignment MemberReference included Literal true = StatementExpression MethodInvocation inc MemberReference name add BlockStatement StatementExpression MethodInvocation des MemberReference name add StatementExpression Assignment MemberReference everythingIncluded MemberReference included &=	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test IfStatement MethodInvocation Boolean.TRUE MethodInvocation failed MemberReference test get equals BlockStatement ReturnStatement SynchronizedStatement MemberReference wri StatementExpression MethodInvocation wri BinaryOperation + Literal " MethodInvocation JUnitVersionHelper MemberReference test getTestCaseName print LocalVariableDeclaration ReferenceType Long VariableDeclarator l Cast ReferenceType Long MethodInvocation MemberReference test get LocalVariableDeclaration BasicType double VariableDeclarator Literal 0 IfStatement BinaryOperation != MemberReference l Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation / BinaryOperation - MethodInvocation System currentTimeMillis MethodInvocation l longValue Literal 1000.0 = StatementExpression MethodInvocation wri BinaryOperation + BinaryOperation + Literal " took " MethodInvocation nf MemberReference format Literal " sec" println	0
MethodDeclaration Modifier public error FormalParameter Modifier final ReferenceType String message StatementExpression MethodInvocation task MemberReference message MemberReference Project MSG_ERR log	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count SAXParseException StatementExpression MethodInvocation currentHandler MemberReference buf MemberReference start MemberReference count MemberReference context characters	1
MethodDeclaration Modifier private static BasicType boolean isEqual FormalParameter Modifier final ReferenceType Specification specification FormalParameter Modifier final ReferenceType Specification other ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation specification MethodInvocation MethodInvocation other equals MethodInvocation specification MethodInvocation MethodInvocation other isEqual MethodInvocation specification MethodInvocation MethodInvocation other getSpecificationVendor equals getSpecificationVendor MethodInvocation specification MethodInvocation MethodInvocation other equals MethodInvocation specification MethodInvocation MethodInvocation other equals MethodInvocation specification MethodInvocation MethodInvocation other equals	0
MethodDeclaration Modifier public ReferenceType Hashtable getReferences ReturnStatement MemberReference references	1
MethodDeclaration Modifier private ReferenceType getInputHandler IfStatement BinaryOperation != MemberReference type Literal null BlockStatement ReturnStatement MethodInvocation type getInputHandler IfStatement BinaryOperation != MemberReference refid Literal null BlockStatement TryStatement ReturnStatement Cast ReferenceType MethodInvocation getProject CatchClause CatchClauseParameter ClassCastException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference refid Literal " does not an MemberReference e IfStatement BinaryOperation != MemberReference classname Literal null BlockStatement ReturnStatement Cast ReferenceType MethodInvocation ClasspathUtils MemberReference classname MethodInvocation createLoader ClassReference ReferenceType newInstance ThrowStatement ClassCreator ReferenceType BuildException Literal specify classname or type"	0
MethodDeclaration Modifier private ReferenceType String mapElement FormalParameter ReferenceType String elem LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation prefixMap size IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator entry Cast ReferenceType MethodInvocation prefixMap MemberReference i elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator newElem MethodInvocation entry MemberReference elem apply IfStatement BinaryOperation != MemberReference newElem MemberReference elem BlockStatement StatementExpression Assignment MemberReference elem MemberReference newElem = BreakStatement ReturnStatement MemberReference elem	1
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs SAXParseException LocalVariableDeclaration ReferenceType AntHandler VariableDeclarator next MethodInvocation currentHandler MemberReference uri MemberReference tag MemberReference qname MemberReference attrs MemberReference context onStartChild StatementExpression MethodInvocation antHandlers MemberReference currentHandler push StatementExpression Assignment MemberReference currentHandler MemberReference next = StatementExpression MethodInvocation currentHandler MemberReference uri MemberReference tag MemberReference qname MemberReference attrs MemberReference context onStartElement	0
MethodDeclaration Modifier protected writeCentralFileHeader FormalParameter ReferenceType ZipEntry ze IOException StatementExpression MethodInvocation MemberReference CFH_SIG writeOut StatementExpression Assignment MemberReference written Literal 4 += StatementExpression MethodInvocation MethodInvocation ZipShort BinaryOperation | BinaryOperation << MethodInvocation ze getPlatform Literal 8 Literal 20 getBytes writeOut StatementExpression Assignment MemberReference written Literal 2 += IfStatement BinaryOperation && BinaryOperation == MethodInvocation ze getMethod MemberReference DEFLATED BinaryOperation == MemberReference raf Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation ZipShort Literal 20 getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipShort Literal 8 getBytes writeOut BlockStatement StatementExpression MethodInvocation MethodInvocation ZipShort Literal 10 getBytes writeOut StatementExpression MethodInvocation MemberReference ZERO writeOut StatementExpression Assignment MemberReference written Literal 4 += StatementExpression MethodInvocation MethodInvocation ZipShort MethodInvocation ze getMethod getBytes writeOut StatementExpression Assignment MemberReference written Literal 2 += StatementExpression MethodInvocation MethodInvocation MethodInvocation ze getTime writeOut StatementExpression Assignment MemberReference written Literal 4 += StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getCrc getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getCompressedSize getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getSize getBytes writeOut StatementExpression Assignment MemberReference written Literal 12 += LocalVariableDeclaration BasicType byte VariableDeclarator name MethodInvocation MethodInvocation ze getName getBytes StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference name length getBytes writeOut StatementExpression Assignment MemberReference written Literal 2 += LocalVariableDeclaration BasicType byte VariableDeclarator extra MethodInvocation ze getCentralDirectoryExtra StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference extra length getBytes writeOut StatementExpression Assignment MemberReference written Literal 2 += LocalVariableDeclaration ReferenceType String VariableDeclarator comm MethodInvocation ze IfStatement BinaryOperation == MemberReference comm Literal null BlockStatement StatementExpression Assignment MemberReference comm Literal "" = LocalVariableDeclaration BasicType byte VariableDeclarator commentB MethodInvocation MemberReference comm getBytes StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference commentB length getBytes writeOut StatementExpression Assignment MemberReference written Literal 2 += StatementExpression MethodInvocation MemberReference ZERO writeOut StatementExpression Assignment MemberReference written Literal 2 += StatementExpression MethodInvocation MethodInvocation ZipShort MethodInvocation ze getBytes writeOut StatementExpression Assignment MemberReference written Literal 2 += StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getExternalAttributes getBytes writeOut StatementExpression Assignment MemberReference written Literal 4 += StatementExpression MethodInvocation Cast BasicType byte MethodInvocation offsets MemberReference ze get writeOut StatementExpression Assignment MemberReference written Literal 4 += StatementExpression MethodInvocation MemberReference name writeOut StatementExpression Assignment MemberReference written MemberReference name length += StatementExpression MethodInvocation MemberReference extra writeOut StatementExpression Assignment MemberReference written MemberReference extra length += StatementExpression MethodInvocation MemberReference commentB writeOut StatementExpression Assignment MemberReference written MemberReference commentB length +=	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType path StatementExpression MethodInvocation collector MemberReference path setPath	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/abstractcvstask.xml" configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType File f StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference f setFile createArgument	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter BasicType boolean overwrite IOException StatementExpression MethodInvocation MemberReference sourceFile MemberReference destFile MemberReference filters MemberReference overwrite Literal false copyFile	0
MethodDeclaration Modifier private addClassFiles FormalParameter ReferenceType Vector classFileList FormalParameter ReferenceType File dir FormalParameter ReferenceType File root LocalVariableDeclaration ReferenceType String VariableDeclarator filesInDir MethodInvocation dir list IfStatement BinaryOperation == MemberReference filesInDir Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator length MemberReference filesInDir length LocalVariableDeclaration BasicType int VariableDeclarator rootLength MethodInvocation root MethodInvocation length getPath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference i filesInDir IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression MethodInvocation MemberReference classFileList MemberReference file MemberReference root addClassFiles IfStatement MethodInvocation file MethodInvocation Literal ".class" endsWith getName BlockStatement LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator info ClassCreator ReferenceType ClassFileInfo StatementExpression Assignment MemberReference info absoluteFile MemberReference file = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation file MethodInvocation BinaryOperation + MemberReference rootLength Literal 1 BinaryOperation - MethodInvocation file MethodInvocation length getPath Literal 6 substring getPath StatementExpression Assignment MemberReference info className MethodInvocation ClassFileUtils MemberReference convertSlashName = StatementExpression Assignment MemberReference info sourceFile MethodInvocation MemberReference findSourceFile = StatementExpression MethodInvocation classFileList MemberReference info addElement	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r ReturnStatement MethodInvocation ! sel MemberReference r isSelected	1
MethodDeclaration Modifier public FormalParameter ReferenceType address StatementExpression MethodInvocation toList MemberReference address addElement	0
MethodDeclaration Modifier protected ReferenceType Resource selectFileResources FormalParameter ReferenceType Resource orig IfStatement BinaryOperation == MemberReference orig length Literal 0 BlockStatement ReturnStatement MemberReference orig LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector MemberReference orig length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference orig length MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation isDirectory orig BlockStatement StatementExpression MethodInvocation v MemberReference ArraySelector MemberReference i orig addElement BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Ignoring directory " MemberReference ArraySelector MemberReference i MethodInvocation getName orig Literal " as only files will be added." MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MethodInvocation v size MemberReference orig length BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r ArrayCreator ReferenceType Resource MethodInvocation v size StatementExpression MethodInvocation v MemberReference r copyInto ReturnStatement MemberReference r ReturnStatement MemberReference orig	1
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation Cast ReferenceType ResourceCollection MemberReference fs add	0
MethodDeclaration Modifier public test LocalVariableDeclaration ReferenceType File VariableDeclarator dir Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator files Literal null LocalVariableDeclaration BasicType int VariableDeclarator filecount StatementExpression MethodInvocation Literal "containsregexp" executeTarget StatementExpression Assignment MemberReference dir ClassCreator ReferenceType File BinaryOperation + MethodInvocation getProjectDir Literal "/regexpseltestdest/" = StatementExpression Assignment MemberReference files MethodInvocation dir listFiles = StatementExpression Assignment MemberReference filecount MemberReference files length = IfStatement BinaryOperation != MemberReference filecount Literal 1 StatementExpression MethodInvocation Literal "ContainsRegexp test should have 1 file" Literal 1 MemberReference files length assertEquals	1
MethodDeclaration Modifier public ReferenceType InputStream getInputStream FormalParameter ReferenceType ZipEntry ze IOException ZipException LocalVariableDeclaration ReferenceType OffsetEntry VariableDeclarator offsetEntry Cast ReferenceType OffsetEntry MethodInvocation entries MemberReference ze get IfStatement BinaryOperation == MemberReference offsetEntry Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration BasicType long VariableDeclarator start MemberReference offsetEntry dataOffset LocalVariableDeclaration ReferenceType BoundedInputStream VariableDeclarator bis ClassCreator ReferenceType BoundedInputStream MemberReference start MethodInvocation ze getCompressedSize SwitchStatement MethodInvocation ze getMethod SwitchStatementCase MemberReference ZipEntry STORED ReturnStatement MemberReference bis SwitchStatementCase MemberReference ZipEntry DEFLATED StatementExpression MethodInvocation bis addDummy ReturnStatement ClassCreator ReferenceType InflaterInputStream MemberReference bis ClassCreator ReferenceType Inflater Literal true SwitchStatementCase ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + Literal "Found unsupported method " MethodInvocation ze getMethod	1
MethodDeclaration Modifier public setSource FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference source MemberReference v =	0
MethodDeclaration Modifier private log FormalParameter ReferenceType String msg IfStatement MemberReference BlockStatement StatementExpression MethodInvocation System.out MemberReference msg println	1
MethodDeclaration Modifier public ReferenceType String getRemotePath ReturnStatement MemberReference remotePath	0
MethodDeclaration Modifier protected ReferenceType getRef ReturnStatement Cast ReferenceType MethodInvocation ClassReference ReferenceType Literal getCheckedRef	0
MethodDeclaration Modifier public static ReferenceType ClassLoader getContextClassLoader LocalVariableDeclaration ReferenceType Thread VariableDeclarator currentThread MethodInvocation Thread currentThread ReturnStatement MethodInvocation currentThread getContextClassLoader	0
MethodDeclaration Modifier protected BasicType boolean accept FormalParameter ReferenceType file ReturnStatement Literal true	0
MethodDeclaration close IOException StatementExpression MethodInvocation reader close	0
MethodDeclaration Modifier public static BasicType int compareContent FormalParameter ReferenceType Resource r1 FormalParameter ReferenceType Resource r2 FormalParameter BasicType boolean text IOException IfStatement MethodInvocation r1 MemberReference r2 equals BlockStatement ReturnStatement Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator e1 MethodInvocation r1 isExists LocalVariableDeclaration BasicType boolean VariableDeclarator e2 MethodInvocation r2 isExists IfStatement BinaryOperation || MemberReference e1 MemberReference e2 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation != MemberReference e1 MemberReference e2 BlockStatement ReturnStatement TernaryExpression MemberReference e1 Literal 1 Literal - 1 LocalVariableDeclaration BasicType boolean VariableDeclarator d1 MethodInvocation r1 isDirectory LocalVariableDeclaration BasicType boolean VariableDeclarator d2 MethodInvocation r2 isDirectory IfStatement BinaryOperation && MemberReference d1 MemberReference d2 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation || MemberReference d1 MemberReference d2 BlockStatement ReturnStatement TernaryExpression MemberReference d1 Literal - 1 Literal 1 ReturnStatement TernaryExpression MemberReference text MethodInvocation MemberReference r1 MemberReference r2 textCompare MethodInvocation MemberReference r1 MemberReference r2 binaryCompare	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator uri Literal "http://foo.com/bar/blah.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator uriLoc Literal "etc/testcases/taskdefs/optional/xml/about.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator base Literal null TryStatement StatementExpression Assignment MemberReference base BinaryOperation + MethodInvocation MethodInvocation project getBaseDir toURLString Literal = CatchClause CatchClauseParameter MalformedURLException ex StatementExpression MethodInvocation MethodInvocation ex toString fail LocalVariableDeclaration ReferenceType VariableDeclarator entity ClassCreator ReferenceType StatementExpression MethodInvocation entity MemberReference uri setPublicId StatementExpression MethodInvocation entity MemberReference uriLoc setLocation StatementExpression MethodInvocation catalog MemberReference entity addEntity LocalVariableDeclaration ReferenceType File VariableDeclarator xmlFile MethodInvocation project BinaryOperation + Literal "src/" MemberReference uriLoc resolveFile TryStatement LocalVariableDeclaration ReferenceType Source VariableDeclarator result MethodInvocation catalog MemberReference uri MemberReference base resolve StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference xmlFile toURLString MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "resolve() MethodInvocation e toString fail	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator value IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + Literal "Name = " MemberReference name Literal ", type = " MemberReference type = BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + Literal "Name index = " MemberReference nameIndex Literal ", descriptor index = " MemberReference descriptorIndex = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation Literal "MyTask log	0
MethodDeclaration Modifier private addSourceFiles FormalParameter ReferenceType Vector sf LocalVariableDeclaration ReferenceType Iterator VariableDeclarator e MethodInvocation nestedSourceFiles iterator WhileStatement MethodInvocation e hasNext BlockStatement LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc Cast ReferenceType ResourceCollection MethodInvocation e next IfStatement MethodInvocation ! rc isFilesystemOnly BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only file system based resources are" Literal " supported by javadoc" IfStatement BinaryOperation instanceof MemberReference rc ReferenceType FileSet BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MemberReference rc IfStatement BinaryOperation && MethodInvocation ! fs hasPatterns MethodInvocation ! fs hasSelectors BlockStatement StatementExpression Assignment MemberReference fs Cast ReferenceType FileSet MethodInvocation fs clone = StatementExpression MethodInvocation fs MethodInvocation Literal "**/*.java" setName createInclude IfStatement MemberReference includeNoSourcePackages BlockStatement StatementExpression MethodInvocation fs MethodInvocation Literal "**/package.html" setName createInclude LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation rc iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation sf ClassCreator ReferenceType SourceFile Cast ReferenceType FileResource MethodInvocation iter next addElement	1
MethodDeclaration Modifier public setUp Exception StatementExpression MethodInvocation destroyTempFiles StatementExpression MethodInvocation initTestPropFile StatementExpression MethodInvocation initBuildPropFile StatementExpression MethodInvocation MemberReference projectFilePath configureProject StatementExpression MethodInvocation project MemberReference MemberReference setProperty	0
MethodDeclaration Modifier static protected BasicType int FormalParameter BasicType byte ReturnStatement ClassCreator MethodInvocation intValue ReferenceType BigInteger MemberReference	0
MethodDeclaration Modifier protected scanDir FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File destDir FormalParameter ReferenceType String files LocalVariableDeclaration ReferenceType GlobPatternMapper VariableDeclarator m ClassCreator ReferenceType GlobPatternMapper StatementExpression MethodInvocation m Literal "*.java" StatementExpression MethodInvocation m Literal "*.class" LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator sfs ClassCreator ReferenceType SourceFileScanner This LocalVariableDeclaration ReferenceType File VariableDeclarator newFiles MethodInvocation sfs MemberReference files MemberReference srcDir MemberReference destDir MemberReference m restrictAsFiles IfStatement BinaryOperation > MemberReference newFiles length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator newCompileList ArrayCreator ReferenceType File BinaryOperation + MemberReference compileList length MemberReference newFiles length StatementExpression MethodInvocation System MemberReference compileList Literal 0 MemberReference newCompileList Literal 0 MemberReference compileList length arraycopy StatementExpression MethodInvocation System MemberReference newFiles Literal 0 MemberReference newCompileList MemberReference compileList length MemberReference newFiles length arraycopy StatementExpression Assignment MemberReference compileList MemberReference newCompileList =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected ReferenceType getUserInfo ReturnStatement MemberReference userInfo	0
MethodDeclaration Modifier public BasicType boolean getTrim ReturnStatement MemberReference trim	0
MethodDeclaration Modifier public setGetLocalCopy FormalParameter BasicType boolean get StatementExpression SuperMethodInvocation MemberReference get setInternalGetLocalCopy	0
MethodDeclaration Modifier public ReferenceType AntHandler onStartChild FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType RuntimeConfigurable2 VariableDeclarator wrapper MethodInvocation context currentWrapper LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation wrapper getProxy IfStatement BinaryOperation instanceof MemberReference element ReferenceType TaskContainer BlockStatement StatementExpression MethodInvocation System.err Literal "Shouldn't - println TryStatement ThrowStatement ClassCreator ReferenceType Exception CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace ReturnStatement MemberReference elementHandler BlockStatement ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object next ThrowStatement ClassCreator ReferenceType NoSuchElementException	0
MethodDeclaration Modifier public onEndChild FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType context SAXParseException	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FileUtils MethodInvocation MethodInvocation MethodInvocation Literal "../asf-logo.gif" resolveFile getProject MethodInvocation MethodInvocation Literal "testout/asf-logo.gif.gz" resolveFile getProject contentEquals getFileUtils assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "filesmatch-match" Literal "filesmatch-match" expectPropertySet	0
MethodDeclaration Modifier public setProperty FormalParameter Modifier final ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String contains StatementExpression Assignment This MemberReference contains MemberReference contains =	0
MethodDeclaration Modifier public addText FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count StatementExpression MethodInvocation ClassCreator ReferenceType String MemberReference buf MemberReference start MemberReference count addText	0
MethodDeclaration Modifier public setPattern FormalParameter ReferenceType String from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public ReferenceType File getParentFile FormalParameter ReferenceType File f ReturnStatement TernaryExpression BinaryOperation == MemberReference f Literal null Literal null MethodInvocation f getParentFile	1
MethodDeclaration Modifier public ReferenceType Throwable getException ReturnStatement MemberReference exception	0
MethodDeclaration Modifier public setException FormalParameter ReferenceType Throwable exception StatementExpression Assignment This MemberReference exception MemberReference exception =	0
MethodDeclaration Modifier private static hbCreateDecodeTables FormalParameter Modifier final BasicType int limit FormalParameter Modifier final BasicType int base FormalParameter Modifier final BasicType int perm FormalParameter Modifier final BasicType char length FormalParameter Modifier final BasicType int minLen FormalParameter Modifier final BasicType int maxLen FormalParameter Modifier final BasicType int alphaSize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference minLen VariableDeclarator pp Literal 0 BinaryOperation <= MemberReference i MemberReference maxLen MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference alphaSize MemberReference ++ j BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference j length MemberReference i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pp perm MemberReference j = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference MAX_CODE_LEN BinaryOperation > MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i base Literal 0 = StatementExpression Assignment MemberReference ArraySelector MemberReference i limit Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement StatementExpression MemberReference ++ ArraySelector BinaryOperation + MemberReference ArraySelector MemberReference i length Literal 1 base ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 VariableDeclarator b MemberReference ArraySelector Literal 0 base BinaryOperation < MemberReference i MemberReference MAX_CODE_LEN MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference b MemberReference ArraySelector MemberReference i base += StatementExpression Assignment MemberReference ArraySelector MemberReference i base MemberReference b = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference minLen VariableDeclarator vec Literal 0 VariableDeclarator b MemberReference ArraySelector MemberReference i base BinaryOperation <= MemberReference i MemberReference maxLen MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nb MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 base StatementExpression Assignment MemberReference vec BinaryOperation - MemberReference nb MemberReference b += StatementExpression Assignment MemberReference b MemberReference nb = StatementExpression Assignment MemberReference ArraySelector MemberReference i limit BinaryOperation - MemberReference vec Literal 1 = StatementExpression Assignment MemberReference vec Literal 1 <<= ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference minLen Literal 1 BinaryOperation <= MemberReference i MemberReference maxLen MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i base BinaryOperation - BinaryOperation << BinaryOperation + MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 limit Literal 1 Literal 1 MemberReference ArraySelector MemberReference i base =	1
MethodDeclaration Modifier public synchronized setWhen FormalParameter ReferenceType Comparison when IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference when MemberReference when =	0
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed ReturnStatement MethodInvocation MemberReference excludeList	0
MethodDeclaration Modifier public setFileLastModified FormalParameter ReferenceType File file FormalParameter BasicType long time BuildException StatementExpression MethodInvocation FILE_UTILS MemberReference file MemberReference time setFileLastModified StatementExpression MethodInvocation BinaryOperation + Literal "Setting modification time for " MemberReference file MemberReference MSG_VERBOSE log	1
MethodDeclaration Modifier public setCommontokenaction FormalParameter BasicType boolean commonTokenAction StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference commonTokenAction MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public setAttribute FormalParameter ReferenceType Project p FormalParameter ReferenceType Object element FormalParameter ReferenceType String attributeName FormalParameter ReferenceType String value BuildException LocalVariableDeclaration ReferenceType AttributeSetter VariableDeclarator as Cast ReferenceType AttributeSetter MethodInvocation attributeSetters MethodInvocation attributeName MemberReference Locale US toLowerCase get IfStatement BinaryOperation == MemberReference as Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference element ReferenceType DynamicAttributeNS BlockStatement LocalVariableDeclaration ReferenceType DynamicAttributeNS VariableDeclarator dc Cast ReferenceType DynamicAttributeNS MemberReference element LocalVariableDeclaration ReferenceType String VariableDeclarator uriPlusPrefix MethodInvocation ProjectHelper MemberReference attributeName extractUriFromComponentName LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation ProjectHelper MemberReference uriPlusPrefix extractUriFromComponentName LocalVariableDeclaration ReferenceType String VariableDeclarator localName MethodInvocation ProjectHelper MemberReference attributeName extractNameFromComponentName LocalVariableDeclaration ReferenceType String VariableDeclarator qName TernaryExpression Literal MethodInvocation MemberReference uri equals "" MemberReference localName BinaryOperation + BinaryOperation + MemberReference uri Literal ":" MemberReference localName StatementExpression MethodInvocation dc MemberReference uri MemberReference localName MemberReference qName MemberReference value setDynamicAttribute ReturnStatement IfStatement BinaryOperation instanceof MemberReference element ReferenceType DynamicAttribute BlockStatement LocalVariableDeclaration ReferenceType DynamicAttribute VariableDeclarator dc Cast ReferenceType DynamicAttribute MemberReference element StatementExpression MethodInvocation dc MethodInvocation attributeName MemberReference Locale US toLowerCase MemberReference value setDynamicAttribute ReturnStatement BlockStatement IfStatement BinaryOperation != MethodInvocation attributeName Literal ':' indexOf Literal - 1 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation MemberReference p MemberReference element getElementName Literal " doesn't support the \"" MemberReference attributeName Literal "\" attribute." ThrowStatement ClassCreator ReferenceType UnsupportedAttributeException MemberReference msg MemberReference attributeName TryStatement StatementExpression MethodInvocation as MemberReference p MemberReference element MemberReference value set CatchClause CatchClauseParameter IllegalAccessException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie CatchClause CatchClauseParameter InvocationTargetException ite LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ite getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public setValue FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference value TernaryExpression MemberReference value MemberReference Boolean TRUE MemberReference Boolean FALSE =	0
MethodDeclaration Modifier public setObjSel FormalParameter ReferenceType String objsel StatementExpression Assignment MemberReference MemberReference objsel =	0
MethodDeclaration Modifier public BasicType boolean matches FormalParameter ReferenceType String input FormalParameter BasicType int options BuildException LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation MemberReference options getCompiledPattern ReturnStatement MethodInvocation matcher MemberReference input MemberReference p contains	1
MethodDeclaration Modifier protected setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String token StatementExpression Assignment This MemberReference token MemberReference token =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "recursive expectBuildException	0
MethodDeclaration Modifier public BasicType int ReturnStatement Literal 0	0
MethodDeclaration Modifier private ReferenceType String getFileString FormalParameter ReferenceType String filename IOException LocalVariableDeclaration ReferenceType Reader VariableDeclarator r Literal null TryStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType FileReader MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject MemberReference filename resolveFile = ReturnStatement MethodInvocation FileUtils MemberReference r readFully StatementExpression MethodInvocation FileUtils MemberReference r close	1
MethodDeclaration Modifier public ReferenceType String getSource ReturnStatement TernaryExpression BinaryOperation != MemberReference source Literal null MemberReference source MethodInvocation MethodInvocation MemberReference MagicNames BUILD_JAVAC_SOURCE getProperty getProject	0
MethodDeclaration Modifier private static registerTestCase FormalParameter ReferenceType String testCase IfStatement BinaryOperation != MemberReference crashFile Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileWriter MemberReference crashFile = StatementExpression MethodInvocation out BinaryOperation + MemberReference testCase Literal "\n" write StatementExpression MethodInvocation out flush IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier private ReferenceType NameEntry FormalParameter ReferenceType Vector list LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator result ClassCreator ReferenceType NameEntry StatementExpression MethodInvocation list MemberReference result addElement ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected handleErrorOutput FormalParameter ReferenceType String line StatementExpression Assignment MemberReference line MethodInvocation line trim = IfStatement BinaryOperation && BinaryOperation != MethodInvocation line length Literal 0 MethodInvocation ! line MemberReference randomErrValue equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Received = [" MemberReference line Literal expected = [" MemberReference randomErrValue Literal "]" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression Assignment MemberReference errorReceived Literal true =	0
MethodDeclaration Modifier public ReferenceType PlanarImage executeTransformOperation FormalParameter ReferenceType PlanarImage image LocalVariableDeclaration ReferenceType BufferedImage VariableDeclarator bi Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement ReturnStatement MethodInvocation MemberReference image performScale IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = StatementExpression Assignment MemberReference image Cast ReferenceType TransformOperation MemberReference instr = StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = ReturnStatement MethodInvocation MemberReference image performScale	1
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String s StatementExpression Assignment MemberReference message MemberReference s =	0
MethodDeclaration Modifier public execute IOException JSchException LocalVariableDeclaration ReferenceType String VariableDeclarator command Literal "scp -f " IfStatement MemberReference isRecursive BlockStatement StatementExpression Assignment MemberReference command Literal "-r " += StatementExpression Assignment MemberReference command MemberReference remoteFile += LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel MethodInvocation MemberReference command openExecChannel TryStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out MethodInvocation channel getOutputStream LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation channel getInputStream StatementExpression MethodInvocation channel connect StatementExpression MethodInvocation MemberReference out sendAck StatementExpression MethodInvocation MemberReference in MemberReference out MemberReference localFile startRemoteCpProtocol IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel disconnect StatementExpression MethodInvocation Literal "done\n" log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator checkprop MethodInvocation project Literal "file.wo.suf" getProperty StatementExpression MethodInvocation Literal "" MemberReference checkprop assertEquals	0
MethodDeclaration Modifier protected writeJar FormalParameter ReferenceType String baseName FormalParameter ReferenceType File jarFile FormalParameter ReferenceType Hashtable files FormalParameter ReferenceType String publicId BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator genericJarFile SuperMethodInvocation MemberReference baseName getVendorOutputJarFile StatementExpression SuperMethodInvocation MemberReference baseName MemberReference genericJarFile MemberReference files MemberReference publicId writeJar IfStatement BinaryOperation || MemberReference alwaysRebuild MethodInvocation MemberReference genericJarFile MemberReference jarFile isRebuildRequired BlockStatement StatementExpression MethodInvocation MemberReference genericJarFile MemberReference jarFile MemberReference publicId buildWeblogicJar IfStatement MemberReference ! keepGeneric BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "deleting generic jar " MethodInvocation genericJarFile toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genericJarFile delete	1
MethodDeclaration Modifier public setOverwrite FormalParameter BasicType boolean ow StatementExpression Assignment MemberReference mOverwrite MemberReference ow =	0
MethodDeclaration Modifier private ReferenceType File getOutputJavaFile FormalParameter ReferenceType File outputdir FormalParameter ReferenceType File srcfile LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation srcfile getPath LocalVariableDeclaration BasicType int VariableDeclarator startBasename MethodInvocation path MemberReference File separator lastIndexOf IfStatement BinaryOperation != MemberReference startBasename Literal - 1 BlockStatement StatementExpression Assignment MemberReference path MethodInvocation path BinaryOperation + MemberReference startBasename Literal 1 substring = LocalVariableDeclaration BasicType int VariableDeclarator startExtn MethodInvocation path Literal '.' lastIndexOf IfStatement BinaryOperation != MemberReference startExtn Literal - 1 BlockStatement StatementExpression Assignment MemberReference path BinaryOperation + MethodInvocation path Literal 0 MemberReference startExtn substring Literal ".java" = BlockStatement StatementExpression Assignment MemberReference path Literal ".java" += IfStatement BinaryOperation != MemberReference outputdir Literal null BlockStatement StatementExpression Assignment MemberReference path BinaryOperation + BinaryOperation + MemberReference outputdir MemberReference File separator MemberReference path = ReturnStatement ClassCreator ReferenceType File MemberReference path	0
MethodDeclaration Modifier public test11 StatementExpression MethodInvocation Literal "test11" executeTarget	0
MethodDeclaration Modifier public NotestForking Exception StatementExpression MethodInvocation Literal "testForking" executeTarget	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference components length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal '.' append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i components append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/gzip.xml" configureProject	0
MethodDeclaration Modifier public ReferenceType String getPrompt ReturnStatement MemberReference prompt	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation helper This setProjectComponent	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected makeBed StatementExpression Assignment MemberReference tbed ClassCreator ReferenceType TaskdefForMakingBed Literal "setupfiles" = StatementExpression MethodInvocation tbed setUp StatementExpression MethodInvocation tbed makeTestbed	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Should have got Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public checkExit FormalParameter BasicType int status LocalVariableDeclaration ReferenceType java ReferenceType security ReferenceType Permission VariableDeclarator perm ClassCreator ReferenceType java ReferenceType lang ReferenceType RuntimePermission Literal "exitVM" Literal null TryStatement StatementExpression MethodInvocation MemberReference perm checkPermission CatchClause CatchClauseParameter SecurityException e ThrowStatement ClassCreator ReferenceType ExitException MethodInvocation e getMessage MemberReference status	1
MethodDeclaration Modifier protected IfStatement BinaryOperation != MemberReference commentFile Literal null BlockStatement StatementExpression MethodInvocation commentFile delete	0
MethodDeclaration Modifier public ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarFileSet MethodInvocation MethodInvocation getProject getRef BlockStatement ReturnStatement SuperMethodInvocation clone	1
MethodDeclaration Modifier private initBuildPropFile Exception LocalVariableDeclaration ReferenceType Properties VariableDeclarator buildProps ClassCreator ReferenceType Properties StatementExpression MethodInvocation buildProps MemberReference testPropertyFileKey MemberReference testPropertyFile put StatementExpression MethodInvocation buildProps MemberReference FNAME_KEY MemberReference NEW_FNAME put StatementExpression MethodInvocation buildProps MemberReference LNAME_KEY MemberReference NEW_LNAME put StatementExpression MethodInvocation buildProps MemberReference EMAIL_KEY MemberReference NEW_EMAIL put StatementExpression MethodInvocation buildProps MemberReference MemberReference NEW_PHONE put StatementExpression MethodInvocation buildProps MemberReference MemberReference NEW_AGE put StatementExpression MethodInvocation buildProps MemberReference MemberReference NEW_DATE put LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference buildPropsFilePath StatementExpression MethodInvocation buildProps MemberReference fos Literal null store StatementExpression MethodInvocation fos close	1
MethodDeclaration Modifier private cleanup StatementExpression MethodInvocation recorderEntries clear StatementExpression MethodInvocation MethodInvocation This removeBuildListener getProject	0
MethodDeclaration Modifier public ReferenceType RExecSubTask createWrite LocalVariableDeclaration ReferenceType RExecSubTask VariableDeclarator task Cast ReferenceType RExecSubTask ClassCreator ReferenceType RExecWrite StatementExpression MethodInvocation MemberReference task addElement ReturnStatement MemberReference task	0
MethodDeclaration Modifier public static ReferenceType Enumeration fromArray FormalParameter ReferenceType Object array ReturnStatement ClassCreator ReferenceType ArrayEnumeration MemberReference array	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" Literal "target is file" expectBuildException	0
MethodDeclaration Modifier public static ReferenceType String genComponentName FormalParameter ReferenceType String uri FormalParameter ReferenceType String name IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference uri Literal null MethodInvocation uri Literal "" equals MethodInvocation uri MemberReference ANT_CORE_URI equals BlockStatement ReturnStatement MemberReference name ReturnStatement BinaryOperation + BinaryOperation + MemberReference uri Literal ":" MemberReference name	0
MethodDeclaration Modifier public testEndsWithSameString StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal Literal endsWith assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal exception Literal "Exception raised inside called program" expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal "-splitindex" addArgIf	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference username Literal null BinaryOperation == MemberReference password Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal username and password must both be set" IfStatement BinaryOperation == MemberReference serverURL Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The url of the weblogic server must be provided." LocalVariableDeclaration ReferenceType Java VariableDeclarator weblogicAdmin ClassCreator ReferenceType Java This StatementExpression MethodInvocation weblogicAdmin Literal true setFork StatementExpression MethodInvocation weblogicAdmin Literal "weblogic.Admin" setClassname LocalVariableDeclaration ReferenceType String VariableDeclarator args IfStatement BinaryOperation == MemberReference beaHome Literal null BlockStatement StatementExpression Assignment MemberReference args BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference serverURL Literal " SHUTDOWN " MemberReference username Literal " " MemberReference password Literal " " MemberReference delay = BlockStatement StatementExpression Assignment MemberReference args BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " -url " MemberReference serverURL Literal " -username " MemberReference username Literal " -password " MemberReference password Literal " SHUTDOWN " Literal " " MemberReference delay = StatementExpression MethodInvocation weblogicAdmin MethodInvocation MemberReference args setLine createArg StatementExpression MethodInvocation weblogicAdmin MemberReference classpath setClasspath StatementExpression MethodInvocation weblogicAdmin execute	1
MethodDeclaration Modifier private ReferenceType String removeFragment FormalParameter ReferenceType String uri LocalVariableDeclaration ReferenceType String VariableDeclarator result MemberReference uri LocalVariableDeclaration BasicType int VariableDeclarator hashPos MethodInvocation uri Literal "#" indexOf IfStatement BinaryOperation >= MemberReference hashPos Literal 0 BlockStatement StatementExpression Assignment MemberReference result MethodInvocation uri Literal 0 MemberReference hashPos substring = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Exception raised inside called program" expectLogContaining	0
MethodDeclaration Modifier public setImplicitTarget FormalParameter ReferenceType Target target StatementExpression Assignment This MemberReference implicitTarget MemberReference target =	0
MethodDeclaration Modifier private ReferenceType Class getAttributeClass FormalParameter ReferenceType String type XDocletException LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz Literal null TryStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference type forName = CatchClause CatchClauseParameter ClassNotFoundException e LocalVariableDeclaration BasicType int VariableDeclarator lastDotPosition MethodInvocation type Literal '.' lastIndexOf IfStatement BinaryOperation < MemberReference lastDotPosition Literal 0 BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference type BinaryOperation + BinaryOperation + MethodInvocation type Literal 0 MemberReference lastDotPosition substring Literal "$" MethodInvocation type BinaryOperation + MemberReference lastDotPosition Literal 1 substring = TryStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference type forName = CatchClause CatchClauseParameter ClassNotFoundException e1 ThrowStatement ClassCreator ReferenceType XDocletException MethodInvocation e1 getMessage ReturnStatement MemberReference clazz	1
MethodDeclaration Modifier public setFailOnError FormalParameter BasicType boolean failonerror StatementExpression Assignment This MemberReference failonerror MemberReference failonerror =	0
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation MethodInvocation createClasspath getDelegate	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation runner ClassReference TestCases MethodInvocation getName ReferenceType FailSetupTestSuite StatementExpression MethodInvocation runner run SynchronizedStatement This WhileStatement MemberReference ! done BlockStatement StatementExpression MethodInvocation wait StatementExpression MethodInvocation Literal 1 MethodInvocation size assertEquals StatementExpression MethodInvocation Literal 1 MethodInvocation size assertEquals	0
MethodDeclaration Modifier protected doTest FormalParameter ReferenceType Comparator comp LocalVariableDeclaration ReferenceType Object VariableDeclarator o1 ClassCreator ReferenceType String Literal "string1" LocalVariableDeclaration ReferenceType Object VariableDeclarator o2 ClassCreator ReferenceType String Literal "string2" LocalVariableDeclaration ReferenceType Object VariableDeclarator o3 ClassCreator ReferenceType String Literal "string2" StatementExpression MethodInvocation Literal "Comparator gave wrong value." BinaryOperation != MethodInvocation comp MemberReference o1 MemberReference o2 compare Literal 0 assertTrue StatementExpression MethodInvocation Literal "Comparator gave wrong value." BinaryOperation != MethodInvocation comp MemberReference o1 MemberReference o3 compare Literal 0 assertTrue StatementExpression MethodInvocation Literal "Comparator gave wrong value." BinaryOperation == MethodInvocation comp MemberReference o2 MemberReference o3 compare Literal 0 assertTrue	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection r IfStatement BinaryOperation != MemberReference rc Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ONE_NESTED_MESSAGE StatementExpression Assignment MemberReference rc MemberReference r =	0
MethodDeclaration Modifier protected parseOutput FormalParameter ReferenceType BufferedReader reader IOException IfStatement MemberReference emacsMode BlockStatement StatementExpression MethodInvocation MemberReference reader parseEmacsOutput BlockStatement StatementExpression MethodInvocation MemberReference reader	0
MethodDeclaration * g get the target type or null for no argument * @return The */ Modifier protected ReferenceType String getTargetTypeParameter IfStatement MethodInvocation ! MemberReference targetType notEmpty BlockStatement ReturnStatement Literal null IfStatement MethodInvocation targetType Literal equals BlockStatement ReturnStatement Literal IfStatement MethodInvocation targetType Literal equals BlockStatement ReturnStatement Literal BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier protected BuildException IfStatement BinaryOperation == MemberReference viewpath Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid viewpath" IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference commentFile MethodInvocation CCUtils MemberReference createCommentFile = LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation getOptions StatementExpression Assignment MemberReference options ArrayCreator ReferenceType String MethodInvocation v size = StatementExpression MethodInvocation v MemberReference options copyInto	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Permission: " MemberReference className Literal " (\"" MemberReference name Literal "\", \"" MemberReference actions Literal "\")"	1
MethodDeclaration Modifier private ReferenceType String tailFilter FormalParameter ReferenceType String line IfStatement MemberReference ! completedReadAhead BlockStatement IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation lineList MemberReference line add IfStatement BinaryOperation == MemberReference lines Literal - 1 BlockStatement IfStatement BinaryOperation > MethodInvocation lineList size MemberReference skip BlockStatement ReturnStatement Cast ReferenceType String MethodInvocation lineList removeFirst BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator linesToKeep BinaryOperation + MemberReference lines TernaryExpression BinaryOperation > MemberReference skip Literal 0 MemberReference skip Literal 0 IfStatement BinaryOperation < MemberReference linesToKeep MethodInvocation lineList size BlockStatement StatementExpression MethodInvocation lineList removeFirst ReturnStatement Literal "" StatementExpression Assignment MemberReference completedReadAhead Literal true = IfStatement BinaryOperation > MemberReference skip Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference skip MemberReference ++ i BlockStatement StatementExpression MethodInvocation lineList removeLast IfStatement BinaryOperation > MemberReference lines Literal - 1 BlockStatement WhileStatement BinaryOperation > MethodInvocation lineList size MemberReference lines BlockStatement StatementExpression MethodInvocation lineList removeFirst IfStatement BinaryOperation > MethodInvocation lineList size Literal 0 BlockStatement ReturnStatement Cast ReferenceType String MethodInvocation lineList removeFirst ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object next ReturnStatement MethodInvocation e nextElement	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private addAllFiles FormalParameter ReferenceType File file FormalParameter ReferenceType String rootDir FormalParameter ReferenceType Hashtable hashtable IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType String VariableDeclarator newRootDir IfStatement MethodInvocation file isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation file listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MethodInvocation rootDir length Literal 0 BlockStatement StatementExpression Assignment MemberReference newRootDir BinaryOperation + BinaryOperation + MemberReference rootDir MemberReference File separator MemberReference ArraySelector MemberReference i MethodInvocation getName files = BlockStatement StatementExpression Assignment MemberReference newRootDir MemberReference ArraySelector MemberReference i MethodInvocation getName files = StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i files MemberReference newRootDir MemberReference hashtable addAllFiles BlockStatement StatementExpression MethodInvocation hashtable MemberReference rootDir MemberReference file put	1
MethodDeclaration Modifier private expectFileContains FormalParameter ReferenceType String name FormalParameter ReferenceType String contains IOException LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation MemberReference name getFileString StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expecting file " MemberReference name Literal " to contain " MemberReference contains Literal " but got " MemberReference content BinaryOperation > MethodInvocation content MemberReference contains indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier protected processBuffer TryStatement StatementExpression SuperMethodInvocation processBuffer CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Impossible IOException caught: " MemberReference e	1
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String executable StatementExpression Assignment This MemberReference executable MemberReference executable =	0
MethodDeclaration Modifier protected deleteDir FormalParameter ReferenceType File d StatementExpression MethodInvocation MemberReference d Literal false deleteDir	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference buildpath Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No buildpath specified" LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator filenames MethodInvocation buildpath list LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MemberReference filenames length IfStatement BinaryOperation < MemberReference count Literal 1 BlockStatement StatementExpression MethodInvocation Literal "No sub-builds to iterate on" MemberReference Project MSG_WARN log ReturnStatement LocalVariableDeclaration ReferenceType BuildException VariableDeclarator buildException Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator subdirPath Literal null LocalVariableDeclaration ReferenceType Throwable VariableDeclarator thrownException Literal null TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator directory Literal null StatementExpression Assignment MemberReference file ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i filenames = IfStatement MethodInvocation file isDirectory BlockStatement IfStatement MemberReference verbose BlockStatement StatementExpression Assignment MemberReference subdirPath MethodInvocation file getPath = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Entering directory: " MemberReference subdirPath Literal "\n" MemberReference Project MSG_INFO log IfStatement BinaryOperation != MemberReference genericantfile Literal null BlockStatement StatementExpression Assignment MemberReference directory MemberReference file = StatementExpression Assignment MemberReference file MemberReference genericantfile = BlockStatement StatementExpression Assignment MemberReference file ClassCreator ReferenceType File MemberReference file MemberReference antfile = StatementExpression MethodInvocation MemberReference file MemberReference directory execute IfStatement BinaryOperation && MemberReference verbose BinaryOperation != MemberReference subdirPath Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Leaving directory: " MemberReference subdirPath Literal "\n" MemberReference Project MSG_INFO log CatchClause CatchClauseParameter RuntimeException ex IfStatement MethodInvocation ! getProject BlockStatement IfStatement BinaryOperation && MemberReference verbose BinaryOperation != MemberReference subdirPath Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Leaving directory: " MemberReference subdirPath Literal "\n" MemberReference Project MSG_INFO log ThrowStatement MemberReference ex StatementExpression Assignment MemberReference thrownException MemberReference ex = CatchClause CatchClauseParameter Throwable ex IfStatement MethodInvocation ! getProject BlockStatement IfStatement BinaryOperation && MemberReference verbose BinaryOperation != MemberReference subdirPath Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Leaving directory: " MemberReference subdirPath Literal "\n" MemberReference Project MSG_INFO log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression Assignment MemberReference thrownException MemberReference ex = IfStatement BinaryOperation != MemberReference thrownException Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference thrownException ReferenceType BuildException BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File '" MemberReference file Literal "' failed with message '" MethodInvocation thrownException getMessage Literal "'." MemberReference Project MSG_ERR log IfStatement BinaryOperation == MemberReference buildException Literal null BlockStatement StatementExpression Assignment MemberReference buildException Cast ReferenceType BuildException MemberReference thrownException = BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Target '" MemberReference file Literal "' failed with message '" MethodInvocation thrownException getMessage Literal "'." MemberReference Project MSG_ERR log StatementExpression MethodInvocation thrownException MemberReference System err printStackTrace IfStatement BinaryOperation == MemberReference buildException Literal null BlockStatement StatementExpression Assignment MemberReference buildException ClassCreator ReferenceType BuildException MemberReference thrownException = IfStatement BinaryOperation && MemberReference verbose BinaryOperation != MemberReference subdirPath Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Leaving directory: " MemberReference subdirPath Literal "\n" MemberReference Project MSG_INFO log IfStatement BinaryOperation != MemberReference buildException Literal null BlockStatement ThrowStatement MemberReference buildException	1
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType TestRunListener listener FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation listener MemberReference evt onTestFailure	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String argv LocalVariableDeclaration BasicType int VariableDeclarator exitCode Literal 0 IfStatement BinaryOperation > MemberReference argv length Literal 0 BlockStatement TryStatement StatementExpression Assignment MemberReference exitCode MethodInvocation Integer MemberReference ArraySelector Literal 0 argv parseInt = CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression Assignment MemberReference exitCode Literal - 1 = IfStatement BinaryOperation > MemberReference argv length Literal 1 BlockStatement StatementExpression MethodInvocation System.out MemberReference ArraySelector Literal 1 argv println IfStatement BinaryOperation > MemberReference argv length Literal 2 BlockStatement StatementExpression MethodInvocation System.err MemberReference ArraySelector Literal 2 argv println IfStatement BinaryOperation != MemberReference exitCode Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference exitCode exit	0
MethodDeclaration Modifier private makeMaps LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator inUse This MemberReference data MemberReference inUse LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator seqToUnseq This MemberReference data MemberReference seqToUnseq LocalVariableDeclaration BasicType int VariableDeclarator nInUseShadow Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 256 MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i inUse StatementExpression Assignment MemberReference ArraySelector MemberReference ++ nInUseShadow seqToUnseq Cast BasicType byte MemberReference i = StatementExpression Assignment This MemberReference nInUse MemberReference nInUseShadow =	1
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference UNITS	0
MethodDeclaration Modifier private ReferenceType ScriptRunnerBase createRunner FormalParameter ReferenceType String checkManager FormalParameter ReferenceType String managerClass FormalParameter ReferenceType String runnerClass LocalVariableDeclaration ReferenceType ScriptRunnerBase VariableDeclarator runner Literal null IfStatement BinaryOperation && MethodInvocation ! manager MemberReference AUTO equals MethodInvocation ! manager MemberReference checkManager equals BlockStatement ReturnStatement Literal null IfStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference managerClass getResource Literal null BlockStatement ReturnStatement Literal null TryStatement StatementExpression Assignment MemberReference runner Cast ReferenceType ScriptRunnerBase MethodInvocation Class MethodInvocation newInstance MemberReference runnerClass Literal true MemberReference forName = StatementExpression MethodInvocation runner MemberReference project setProject CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ReflectUtil MemberReference ex throwBuildException StatementExpression MethodInvocation runner MemberReference language setLanguage StatementExpression MethodInvocation runner MemberReference ReturnStatement MemberReference runner	1
MethodDeclaration Modifier public testRedirect1 IOException StatementExpression MethodInvocation Literal "redirect1" executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expectedOut BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " out\n" MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " err\n" StatementExpression MethodInvocation Literal "unexpected output" MemberReference expectedOut MethodInvocation Literal "redirect.out" getFileString assertEquals	0
MethodDeclaration Modifier public ReferenceType Mapper getMapper ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MemberReference mapper getRef MemberReference mapper	0
MethodDeclaration Modifier public ReferenceType Vector getFilterReaders ReturnStatement MemberReference filterReaders	1
MethodDeclaration Modifier public testValidate LocalVariableDeclaration ReferenceType VariableDeclarator s Cast ReferenceType MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s createMapper StatementExpression MethodInvocation s createMapper StatementExpression MethodInvocation Literal "DependSelector allowed more than one mapper." fail CatchClause CatchClauseParameter BuildException be1 StatementExpression MethodInvocation Literal "Cannot define more than one MethodInvocation be1 getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "DependSelector did not check for required fields" fail CatchClause CatchClauseParameter BuildException be2 StatementExpression MethodInvocation Literal "The targetdir attribute is required." MethodInvocation be2 getMessage assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testManifestOnlyJar" Literal "Building MANIFEST-only jar: " expectLogContaining LocalVariableDeclaration ReferenceType File VariableDeclarator manifestFile MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference tempDir Literal "META-INF" MemberReference File separator Literal resolveFile getProject StatementExpression MethodInvocation MethodInvocation manifestFile exists assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testPathAndSignedJar" Literal "incompatible MemberReference SignJar expectBuildExceptionContaining	0
MethodDeclaration Modifier public setDestFile FormalParameter ReferenceType File destFile StatementExpression Assignment This MemberReference tarFile MemberReference destFile =	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement BinaryOperation != This MemberReference in Literal null BlockStatement ReturnStatement MethodInvocation read0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "stream closed"	1
MethodDeclaration Modifier public ReferenceType Object createDataType FormalParameter ReferenceType String typeName BuildException ReturnStatement MethodInvocation ComponentHelper MethodInvocation MemberReference typeName createDataType This getComponentHelper	1
MethodDeclaration Modifier public FormalParameter ReferenceType String resource StatementExpression Assignment This MemberReference resource MemberReference resource =	0
MethodDeclaration Modifier public testContent LocalVariableDeclaration ReferenceType AsiExtraField VariableDeclarator a ClassCreator ReferenceType AsiExtraField StatementExpression MethodInvocation a Literal 0123 setMode StatementExpression MethodInvocation a Literal 5 setUserId StatementExpression MethodInvocation a Literal 6 LocalVariableDeclaration BasicType byte VariableDeclarator b MethodInvocation a getLocalFileDataData LocalVariableDeclaration BasicType byte VariableDeclarator expect ArrayInitializer Cast BasicType byte Literal 0xC6 Literal 0x02 Literal 0x78 Cast BasicType byte Literal 0xB6 Literal 0123 Cast BasicType byte Literal 0x80 Literal 0 Literal 0 Literal 0 Literal 0 Literal 5 Literal 0 Literal 6 Literal 0 StatementExpression MethodInvocation Literal "no link" MemberReference expect length MemberReference b length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference expect length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "no link, byte " MemberReference i MemberReference ArraySelector MemberReference i expect MemberReference ArraySelector MemberReference i b assertEquals StatementExpression MethodInvocation a Literal "test" setLinkedFile StatementExpression Assignment MemberReference expect ArrayCreator BasicType byte ArrayInitializer Literal 0x75 Cast BasicType byte Literal 0x8E Literal 0x41 Cast BasicType byte Literal 0xFD Literal 0123 Cast BasicType byte Literal 0xA0 Literal 4 Literal 0 Literal 0 Literal 0 Literal 5 Literal 0 Literal 6 Literal 0 Cast BasicType byte Literal 't' Cast BasicType byte Literal 'e' Cast BasicType byte Literal 's' Cast BasicType byte Literal 't' = StatementExpression Assignment MemberReference b MethodInvocation a getLocalFileDataData = StatementExpression MethodInvocation Literal "no link" MemberReference expect length MemberReference b length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference expect length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "no link, byte " MemberReference i MemberReference ArraySelector MemberReference i expect MemberReference ArraySelector MemberReference i b assertEquals	1
MethodDeclaration Modifier public setTask FormalParameter ReferenceType Task task StatementExpression Assignment This MemberReference task MemberReference task =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal BinaryOperation + Literal "Should fail due to ref " Literal "not being a class loader" Literal not reference a class loader" expectBuildExceptionContaining	0
MethodDeclaration Modifier public synchronized setFile FormalParameter ReferenceType File file IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation file getParentFile setDir StatementExpression MethodInvocation MethodInvocation MethodInvocation file getName setName createInclude	0
MethodDeclaration Modifier public FormalParameter BasicType boolean aBoolean StatementExpression Assignment MemberReference novalidation MemberReference aBoolean =	0
MethodDeclaration Modifier public testNoOverwrite IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation unknownElements MemberReference nestedTask add	0
MethodDeclaration Modifier private static BasicType boolean isSemanticAttribute FormalParameter ReferenceType String attributeName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ATTRIBUTES length MemberReference ++ i BlockStatement IfStatement MethodInvocation attributeName MemberReference ArraySelector MemberReference i ATTRIBUTES equals BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType String IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation getRef ReturnStatement MemberReference endOfToken	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" executeTarget	0
MethodDeclaration Modifier public setXMLCatalog FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public clearDependencies StatementExpression MethodInvocation dependencies clear	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "Required argument repository not specified" expectBuildException	0
MethodDeclaration * Creates a new TokenFilter using the passed * Reader for * @param reader A Reader object providing the underlying * @return a new filter based on this */ Modifier public final ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader reader LocalVariableDeclaration ReferenceType TokenFilter VariableDeclarator newFilter ClassCreator ReferenceType TokenFilter MemberReference reader StatementExpression Assignment MemberReference newFilter filters MemberReference filters = StatementExpression Assignment MemberReference newFilter tokenizer MemberReference tokenizer = StatementExpression Assignment MemberReference newFilter MemberReference = StatementExpression MethodInvocation newFilter MethodInvocation getProject setProject ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public setFiltertrace FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter BasicType int comparisonResult IfStatement BinaryOperation == MethodInvocation getIndex Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Comparison value not set." LocalVariableDeclaration BasicType int VariableDeclarator i TernaryExpression BinaryOperation < MemberReference comparisonResult Literal 0 MemberReference LESS_INDEX TernaryExpression BinaryOperation > MemberReference comparisonResult Literal 0 MemberReference GREATER_INDEX MemberReference EQUAL_INDEX ReturnStatement BinaryOperation >= MethodInvocation Arrays MemberReference i MethodInvocation getIndex binarySearch Literal 0	1
MethodDeclaration Modifier public ReferenceType Target getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public ReferenceType getClasspath ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public testConditionTask StatementExpression MethodInvocation Literal Literal "My Condition execution" expectLogContaining	0
MethodDeclaration Modifier public addError FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t StatementExpression MethodInvocation MemberReference ERROR MemberReference test MemberReference t formatError	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator bft ClassCreator ReferenceType Literal "modifiedselector" StatementExpression MethodInvocation bft Literal "modifiedselectortest-ResourceSelresTrue" StatementExpression MethodInvocation bft Literal not provide an InputStream" assertLogContaining StatementExpression MethodInvocation bft deleteCachefile	0
MethodDeclaration Modifier public setOutputFile FormalParameter ReferenceType File outputFile StatementExpression Assignment This MemberReference outputFile MemberReference outputFile =	0
MethodDeclaration Modifier public setSize FormalParameter BasicType long size StatementExpression MethodInvocation StatementExpression Assignment This MemberReference size ClassCreator ReferenceType Long TernaryExpression BinaryOperation > MemberReference size MemberReference UNKNOWN_SIZE MemberReference size MemberReference UNKNOWN_SIZE =	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean createEmptyZip FormalParameter ReferenceType File zipFile BuildException IfStatement MemberReference ! createEmpty BlockStatement ReturnStatement Literal true IfStatement MethodInvocation emptyBehavior Literal "skip" equals BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: skipping " MemberReference archiveType Literal " archive " MemberReference zipFile Literal " because no files were included." MemberReference Project MSG_WARN log ReturnStatement Literal true IfStatement MethodInvocation emptyBehavior Literal "fail" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot create " MemberReference archiveType Literal " archive " MemberReference zipFile Literal ": no files were included." MethodInvocation getLocation LocalVariableDeclaration ReferenceType ZipOutputStream VariableDeclarator zOut Literal null TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Building MANIFEST-only jar: " MethodInvocation MethodInvocation getAbsolutePath log StatementExpression Assignment MemberReference zOut ClassCreator ReferenceType ZipOutputStream ClassCreator ReferenceType FileOutputStream MethodInvocation = StatementExpression MethodInvocation zOut MethodInvocation getEncoding setEncoding IfStatement MethodInvocation isCompress BlockStatement StatementExpression MethodInvocation zOut MemberReference ZipOutputStream DEFLATED setMethod BlockStatement StatementExpression MethodInvocation zOut MemberReference ZipOutputStream STORED setMethod StatementExpression MethodInvocation MemberReference zOut initZipOutputStream StatementExpression MethodInvocation MemberReference zOut finalizeZipOutputStream CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create almost empty JAR archive" Literal " (" MethodInvocation ioe getMessage Literal ")" MemberReference ioe MethodInvocation getLocation TryStatement IfStatement BinaryOperation != MemberReference zOut Literal null BlockStatement StatementExpression MethodInvocation zOut close CatchClause CatchClauseParameter IOException ex StatementExpression Assignment MemberReference createEmpty Literal false = ReturnStatement Literal true	1
MethodDeclaration Modifier public addText FormalParameter ReferenceType String data StatementExpression MethodInvocation characters MemberReference data append	0
MethodDeclaration Modifier public test3 TryStatement StatementExpression MethodInvocation Literal "test3" executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal not detected - " BinaryOperation != MethodInvocation e MethodInvocation Literal "was defined" indexOf getMessage Literal - 1 assertTrue ReturnStatement StatementExpression MethodInvocation Literal "Did not throw exception on exception" fail	0
MethodDeclaration Modifier private setNoNamespaceSchemaProperty FormalParameter ReferenceType String property LocalVariableDeclaration ReferenceType String VariableDeclarator anonSchema MethodInvocation getNoNamespaceSchemaURL IfStatement BinaryOperation != MemberReference anonSchema Literal null BlockStatement StatementExpression MethodInvocation MemberReference property MemberReference anonSchema setProperty	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference exactly	0
MethodDeclaration Modifier public setKeyfile FormalParameter ReferenceType File keyfile StatementExpression Assignment This MemberReference keyfile MemberReference keyfile =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection c StatementExpression MethodInvocation checkChildrenAllowed IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference union Literal null BlockStatement StatementExpression Assignment MemberReference union ClassCreator ReferenceType = StatementExpression MethodInvocation union MethodInvocation getProject setProject StatementExpression MethodInvocation union Literal false StatementExpression MethodInvocation union MemberReference c add StatementExpression MethodInvocation Literal false setChecked	0
MethodDeclaration Modifier public setPrefix FormalParameter ReferenceType String prefix StatementExpression Assignment This MemberReference prefix MemberReference prefix =	0
MethodDeclaration Modifier private ReferenceType String describeCheckout FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File remotefile ReturnStatement MethodInvocation MemberReference remotefile Literal null describeCheckout	0
MethodDeclaration Modifier public FormalParameter ReferenceType ProjectComponent pc StatementExpression Assignment This MemberReference managingPc MemberReference pc =	0
MethodDeclaration complete StatementExpression MethodInvocation ps close	0
MethodDeclaration Modifier public setTimezone FormalParameter ReferenceType String id StatementExpression Assignment MemberReference timeZone MethodInvocation TimeZone MemberReference id getTimeZone =	0
MethodDeclaration Modifier public setLocation FormalParameter Modifier final ReferenceType String location StatementExpression Assignment This MemberReference location MemberReference location =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected failure" MemberReference WsdlToDotnet ERROR_DEST_FILE_IS_DIR expectBuildExceptionContaining	0
MethodDeclaration Modifier public testNoFile StatementExpression MethodInvocation Literal "testNoFile" Literal "missing file" Literal "file" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation params size LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType boolean VariableDeclarator firstPass Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement IfStatement MemberReference ! firstPass BlockStatement StatementExpression MethodInvocation sb Literal " append StatementExpression Assignment MemberReference firstPass Literal false = LocalVariableDeclaration Modifier final ReferenceType DnameParam VariableDeclarator param Cast ReferenceType DnameParam MethodInvocation params MemberReference i elementAt StatementExpression MethodInvocation sb MethodInvocation MethodInvocation param getName encode append StatementExpression MethodInvocation sb Literal '=' append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation param getValue encode append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public setStylesheet FormalParameter ReferenceType File stylesheet Exception LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr ClassCreator ReferenceType FileResource StatementExpression MethodInvocation fr MemberReference project setProject StatementExpression MethodInvocation fr MemberReference stylesheet setFile StatementExpression MethodInvocation MemberReference fr setStylesheet	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public testAptNewFactory StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation assertProcessed	0
MethodDeclaration Modifier public FormalParameter BasicType boolean oneTable StatementExpression MethodInvocation optionalAttrs MemberReference ONE_TABLE TernaryExpression MemberReference oneTable MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType Substitution IfStatement BinaryOperation != MemberReference subs Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only one expression is " Literal "allowed" StatementExpression Assignment MemberReference subs ClassCreator ReferenceType Substitution = ReturnStatement MemberReference subs	0
MethodDeclaration Modifier public setProcessOutputStream FormalParameter ReferenceType InputStream is IOException TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference is LocalVariableDeclaration ReferenceType String VariableDeclarator javafile WhileStatement BinaryOperation != Assignment MemberReference javafile MethodInvocation reader readLine = Literal null BlockStatement IfStatement MethodInvocation javafile Literal ".java" endsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classfile MethodInvocation MemberReference javafile toClassFile LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation classfile BinaryOperation + MethodInvocation MemberReference srcDir MethodInvocation getAbsolutePath MethodInvocation length getConfig Literal 1 substring StatementExpression MethodInvocation genfiles MemberReference key ClassCreator ReferenceType File MemberReference classfile put StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while parsing java2iiop output. Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation util Literal "/^Options:/" MemberReference line match BlockStatement StatementExpression Assignment MemberReference line BinaryOperation + Literal "Options: " MemberReference lock = StatementExpression MethodInvocation labelSpec BinaryOperation + MemberReference line Literal "\n" append	0
MethodDeclaration Modifier public BasicType boolean isLinkOffline ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType ClassLoader getContextClassLoader IfStatement MethodInvocation ! isContextLoaderAvailable BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation getContextClassLoader	0
MethodDeclaration Modifier private validate IfStatement BinaryOperation == Literal null MemberReference url BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal specify URL" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference destdir BinaryOperation == Literal null MemberReference destfile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal specify destination file or directory" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference destdir BinaryOperation != Literal null MemberReference destfile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal not specify both destination file or directory" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool StatementExpression Assignment MemberReference className Cast ReferenceType Utf8CPInfo MethodInvocation constantPool MemberReference index getEntry = StatementExpression SuperMethodInvocation MemberReference constantPool resolve	1
MethodDeclaration Modifier private checkTarFileSetAttributesAllowed IfStatement BinaryOperation || BinaryOperation == MethodInvocation getProject Literal null BinaryOperation && MethodInvocation isReference BinaryOperation instanceof MethodInvocation MethodInvocation MethodInvocation getProject getReferencedObject getRefid ReferenceType TarFileSet BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean hasUserNameBeenSet ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType String getJreExecutable FormalParameter ReferenceType String command IfStatement MemberReference IS_NETWARE BlockStatement ReturnStatement MemberReference command LocalVariableDeclaration ReferenceType File VariableDeclarator jExecutable Literal null IfStatement MemberReference IS_AIX BlockStatement StatementExpression Assignment MemberReference jExecutable MethodInvocation BinaryOperation + MemberReference JAVA_HOME Literal "/sh" MemberReference command = IfStatement BinaryOperation == MemberReference jExecutable Literal null BlockStatement StatementExpression Assignment MemberReference jExecutable MethodInvocation BinaryOperation + MemberReference JAVA_HOME Literal "/bin" MemberReference command = IfStatement BinaryOperation != MemberReference jExecutable Literal null BlockStatement ReturnStatement MethodInvocation jExecutable getAbsolutePath BlockStatement ReturnStatement MethodInvocation MemberReference command addExtension	1
MethodDeclaration Modifier public setAutomaticResponseFileThreshold FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setExtra FormalParameter BasicType byte extra RuntimeException TryStatement StatementExpression MethodInvocation MethodInvocation ExtraFieldUtils MemberReference extra parse setExtraFields CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType RuntimeException MethodInvocation e getMessage	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation ClassCreator ReferenceType Literal "name <address>" expectNameAddress	0
MethodDeclaration Modifier public IOException TryStatement StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "Should trigger once this bug is fixed. {@since 1.2}" fail CatchClause CatchClauseParameter AssertionFailedError e	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "multiple assertions Literal "Only one assertion declaration is allowed" expectBuildExceptionContaining	0
MethodDeclaration Modifier public synchronized BasicType long getSize IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef IfStatement MethodInvocation ! Literal false isExists BlockStatement ReturnStatement Literal 0L TryStatement StatementExpression MethodInvocation connect LocalVariableDeclaration BasicType long VariableDeclarator contentlength MethodInvocation conn getContentLength StatementExpression MethodInvocation close ReturnStatement MemberReference contentlength CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference UNKNOWN_SIZE	1
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createJvmarg FormalParameter ReferenceType CommandlineJava commandline ReturnStatement MethodInvocation commandline	0
MethodDeclaration Modifier protected setInternalLocalPath FormalParameter Modifier final ReferenceType String localPath StatementExpression Assignment This MemberReference localPath MemberReference localPath =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "jar.classpath" BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "../../lib/acme-core.jar " Literal "../../lib/acme-pres.jar " Literal "../dsp-core/ " Literal "../dsp-pres/ " Literal "../dsp-void/ " Literal "../../generated/dsp-core/ " Literal "../../generated/dsp-pres/ " Literal "../../generated/dsp-void/ " Literal "../../resources/dsp-core/ " Literal "../../resources/dsp-pres/ " Literal "../../resources/dsp-void/" assertPropertyEquals	0
MethodDeclaration Modifier private ReferenceType HashSet findLinks FormalParameter ReferenceType Vector v LocalVariableDeclaration ReferenceType HashSet VariableDeclarator result ClassCreator ReferenceType HashSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation v size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation v MemberReference i get LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator fnd ArrayCreator ReferenceType String ArrayInitializer MethodInvocation ds getIncludedFiles MethodInvocation ds getIncludedDirectories LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation fs MethodInvocation getProject getDir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference fnd length MemberReference ++ j BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 0 BinaryOperation < MemberReference k MemberReference ArraySelector MemberReference j MemberReference length fnd MemberReference ++ k BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference j ArraySelector MemberReference k fnd LocalVariableDeclaration ReferenceType File VariableDeclarator pf MethodInvocation f getParentFile LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation f getName IfStatement MethodInvocation FILE_UTILS MemberReference pf MemberReference name isSymbolicLink BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType File MethodInvocation pf getCanonicalFile MemberReference name add CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "IOException: " MemberReference ArraySelector MemberReference j ArraySelector MemberReference k fnd Literal " handleError ReturnStatement MemberReference result	1
MethodDeclaration Modifier public testCopyAndRemove StatementExpression MethodInvocation Literal testCopyAndRemove	0
MethodDeclaration Modifier static protected ReferenceType String getMainClass FormalParameter ReferenceType path FormalParameter BasicType int type BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator packagePrefix Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator mainClass Literal null LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator l ClassCreator ReferenceType AntClassLoader StatementExpression MethodInvocation l MethodInvocation path Literal "ignore" concatSystemClasspath setClassPath LocalVariableDeclaration ReferenceType String VariableDeclarator javaccClass BinaryOperation + MemberReference COM_PACKAGE MemberReference COM_JAVACC_CLASS LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation l BinaryOperation + MethodInvocation javaccClass Literal '.' Literal '/' replace Literal ".class" getResourceAsStream IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference packagePrefix MemberReference COM_PACKAGE = SwitchStatement MemberReference type SwitchStatementCase TASKDEF_TYPE_JAVACC StatementExpression Assignment MemberReference mainClass MemberReference COM_JAVACC_CLASS = BreakStatement SwitchStatementCase TASKDEF_TYPE_JJTREE StatementExpression Assignment MemberReference mainClass MemberReference COM_JJTREE_CLASS = BreakStatement SwitchStatementCase TASKDEF_TYPE_JJDOC StatementExpression Assignment MemberReference mainClass MemberReference COM_JJDOC_CLASS = BreakStatement SwitchStatementCase BlockStatement StatementExpression Assignment MemberReference javaccClass BinaryOperation + MemberReference ORG_PACKAGE_3_1 MemberReference ORG_JAVACC_CLASS = StatementExpression Assignment MemberReference is MethodInvocation l BinaryOperation + MethodInvocation javaccClass Literal '.' Literal '/' replace Literal ".class" getResourceAsStream = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference packagePrefix MemberReference ORG_PACKAGE_3_1 = BlockStatement StatementExpression Assignment MemberReference javaccClass BinaryOperation + MemberReference ORG_PACKAGE_3_0 MemberReference ORG_JAVACC_CLASS = StatementExpression Assignment MemberReference is MethodInvocation l BinaryOperation + MethodInvocation javaccClass Literal '.' Literal '/' replace Literal ".class" getResourceAsStream = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference packagePrefix MemberReference ORG_PACKAGE_3_0 = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement SwitchStatement MemberReference type SwitchStatementCase TASKDEF_TYPE_JAVACC StatementExpression Assignment MemberReference mainClass MemberReference ORG_JAVACC_CLASS = BreakStatement SwitchStatementCase TASKDEF_TYPE_JJTREE StatementExpression Assignment MemberReference mainClass MemberReference ORG_JJTREE_CLASS = BreakStatement SwitchStatementCase TASKDEF_TYPE_JJDOC StatementExpression Assignment MemberReference mainClass MemberReference ORG_JJDOC_CLASS = BreakStatement SwitchStatementCase IfStatement BinaryOperation == MemberReference packagePrefix Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "failed to load JavaCC" IfStatement BinaryOperation == MemberReference mainClass Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "unknown task type " MemberReference type ReturnStatement BinaryOperation + MemberReference packagePrefix MemberReference mainClass	1
MethodDeclaration Modifier public setMessageOutputLevel FormalParameter BasicType int level StatementExpression Assignment MemberReference msgOutputLevel MemberReference level =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation getProjectDir Literal StatementExpression MethodInvocation MethodInvocation file exists assertTrue	0
MethodDeclaration Modifier public testAlternateIncludeExclude IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/**" Literal "alpha/beta/gamma/**" setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/**" setExcludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" compareFiles	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference dest	0
MethodDeclaration ReferenceType String FormalParameter ReferenceType Vector v LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation v elements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation buf MethodInvocation e nextElement append IfStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation buf Literal ", " append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier protected ReferenceType OutputStream getOut ReturnStatement MemberReference out	0
MethodDeclaration Modifier public StatementExpression MethodInvocation p MemberReference mbl StatementExpression MethodInvocation p Literal "Ok" ClassReference ReferenceType DummyTaskOk StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskOk MethodInvocation p MethodInvocation Literal "Ok" get getTaskDefinitions assertEquals StatementExpression MethodInvocation p Literal "OkNonTask" ClassReference ReferenceType DummyTaskOkNonTask StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskOkNonTask MethodInvocation p MethodInvocation Literal "OkNonTask" get getTaskDefinitions assertEquals StatementExpression MethodInvocation mbl StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskPrivate BinaryOperation + ClassReference ReferenceType DummyTaskPrivate Literal " is not public" assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskProtected BinaryOperation + ClassReference ReferenceType DummyTaskProtected Literal " is not public" assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskPackage BinaryOperation + ClassReference ReferenceType DummyTaskPackage Literal " is not public" assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskAbstract BinaryOperation + ClassReference ReferenceType DummyTaskAbstract Literal " is abstract" assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskInterface BinaryOperation + ClassReference ReferenceType DummyTaskInterface Literal " is abstract" assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskWithoutDefaultConstructor BinaryOperation + Literal "No public no-arg constructor in " ClassReference ReferenceType DummyTaskWithoutDefaultConstructor assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskWithoutPublicConstructor BinaryOperation + Literal "No public no-arg constructor in " ClassReference ReferenceType DummyTaskWithoutPublicConstructor assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskWithoutExecute BinaryOperation + Literal "No public in " ClassReference ReferenceType DummyTaskWithoutExecute assertTaskDefFails StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskWithNonPublicExecute BinaryOperation + Literal "No public in " ClassReference ReferenceType DummyTaskWithNonPublicExecute assertTaskDefFails StatementExpression MethodInvocation mbl BinaryOperation + Literal "return type of should be void but was in " ClassReference ReferenceType DummyTaskWithNonVoidExecute MemberReference Project MSG_WARN StatementExpression MethodInvocation p Literal "NonVoidExecute" ClassReference ReferenceType DummyTaskWithNonVoidExecute StatementExpression MethodInvocation mbl StatementExpression MethodInvocation ClassReference ReferenceType DummyTaskWithNonVoidExecute MethodInvocation p MethodInvocation Literal "NonVoidExecute" get getTaskDefinitions assertEquals	0
MethodDeclaration Modifier private assertEqualsIgnoreDriveCase FormalParameter ReferenceType String s1 FormalParameter ReferenceType String s2 IfStatement BinaryOperation && BinaryOperation && BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal "netware" isFamily BinaryOperation >= MethodInvocation s1 length Literal 1 BinaryOperation >= MethodInvocation s2 length Literal 1 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb1 ClassCreator ReferenceType StringBuffer MemberReference s1 LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb2 ClassCreator ReferenceType StringBuffer MemberReference s2 StatementExpression MethodInvocation sb1 Literal 0 MethodInvocation Character MethodInvocation s1 Literal 0 charAt toUpperCase setCharAt StatementExpression MethodInvocation sb2 Literal 0 MethodInvocation Character MethodInvocation s2 Literal 0 charAt toUpperCase setCharAt StatementExpression MethodInvocation MethodInvocation sb1 toString MethodInvocation sb2 toString assertEquals BlockStatement StatementExpression MethodInvocation MemberReference s1 MemberReference s2 assertEquals	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference p ClassCreator ReferenceType Project = StatementExpression MethodInvocation p MemberReference projectBasedir setBasedir StatementExpression Assignment MemberReference ih MethodInvocation IntrospectionHelper MethodInvocation getClass getHelper =	0
MethodDeclaration Modifier public bcc FormalParameter ReferenceType String bcc StatementExpression MethodInvocation bccList MemberReference bcc add	0
MethodDeclaration Modifier private static printMessage FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation t getMessage IfStatement BinaryOperation != MemberReference message Literal null BlockStatement StatementExpression MethodInvocation System.err MemberReference message println	1
MethodDeclaration Modifier public BasicType int getSize ReturnStatement MemberReference components length	0
MethodDeclaration Modifier public final BasicType long skip FormalParameter Modifier final BasicType long n IOException IllegalArgumentException IfStatement BinaryOperation < MemberReference n Literal 0L BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "skip value is negative" ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference n MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation read Literal - 1 BlockStatement ReturnStatement MemberReference i ReturnStatement MemberReference n	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MemberReference p getRef ReturnStatement MemberReference fileMode	0
MethodDeclaration Modifier public testTestZipTask java.io.IOException StatementExpression MethodInvocation Literal "testZipTask" executeTarget StatementExpression MethodInvocation assertLogoUncorrupted	1
MethodDeclaration Modifier public final testAttributes LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator f Cast ReferenceType ZipFileSet MethodInvocation getInstance StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.zip" setSrc TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "examples" setDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "can add dir to " MethodInvocation f getDataTypeName Literal " when a src is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both dir and src MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType ZipFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "examples" setDir TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.zip" setSrc StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "can add src to " MethodInvocation f getDataTypeName Literal " when a dir is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both dir and src MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType ZipFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.zip" setSrc StatementExpression MethodInvocation f Literal "/examples" setPrefix TryStatement StatementExpression MethodInvocation f Literal "/doc/manual/index.html" StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add fullpath to " MethodInvocation f getDataTypeName Literal " when a prefix is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both fullpath and prefix MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType ZipFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.zip" setSrc StatementExpression MethodInvocation f Literal "/doc/manual/index.html" TryStatement StatementExpression MethodInvocation f Literal "/examples" setPrefix StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add prefix to " MethodInvocation f getDataTypeName Literal " when a fullpath is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both fullpath and prefix MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType ZipFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "test" setRefid TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.zip" setSrc StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add src to " MethodInvocation f getDataTypeName Literal " when a refid is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one " Literal when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType ZipFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.zip" setSrc StatementExpression MethodInvocation f Literal "/examples" setPrefix StatementExpression MethodInvocation f Literal "600" setFileMode StatementExpression MethodInvocation f Literal "530" setDirMode StatementExpression MethodInvocation MethodInvocation Literal "test" MemberReference f getProject LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator zid Cast ReferenceType ZipFileSet MethodInvocation getInstance StatementExpression MethodInvocation zid ClassCreator ReferenceType Literal "test" setRefid StatementExpression MethodInvocation Literal "src attribute by copy constructor" MethodInvocation zid MethodInvocation MethodInvocation f MethodInvocation getProject getSrc equals MethodInvocation getProject getSrc assertTrue StatementExpression MethodInvocation Literal attribute by copy constructor" MethodInvocation f MethodInvocation MethodInvocation zid MethodInvocation getProject getPrefix equals MethodInvocation getProject getPrefix assertTrue StatementExpression MethodInvocation Literal "file mode attribute by copy constructor" BinaryOperation == MethodInvocation f MethodInvocation getProject MethodInvocation zid MethodInvocation getProject assertTrue StatementExpression MethodInvocation Literal "dir mode attribute by copy constructor" BinaryOperation == MethodInvocation f MethodInvocation getProject MethodInvocation zid MethodInvocation getProject assertTrue	0
MethodDeclaration Modifier public BasicType boolean editsBlocked ReturnStatement BinaryOperation || MemberReference editsBlocked SuperMethodInvocation editsBlocked	1
MethodDeclaration Modifier public BasicType boolean ready java.io.IOException ReturnStatement MethodInvocation in ready	1
MethodDeclaration Modifier private startProject StatementExpression Assignment MemberReference timeStarted ClassCreator ReferenceType GregorianCalendar = StatementExpression MethodInvocation project MemberReference target executeTarget StatementExpression Assignment MemberReference timeFinished ClassCreator ReferenceType GregorianCalendar =	0
MethodDeclaration Modifier static protected ReferenceType String rpad FormalParameter ReferenceType String s FormalParameter BasicType int padlen StatementExpression Assignment MemberReference s BinaryOperation + MemberReference BLANK_STRING MemberReference s = ReturnStatement MethodInvocation s BinaryOperation - MethodInvocation s length MemberReference padlen substring	0
MethodDeclaration Modifier public ReferenceType Connection connect FormalParameter ReferenceType String url FormalParameter ReferenceType Properties info SQLException ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier private ReferenceType Class loadClass FormalParameter ReferenceType String classname Exception IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement ReturnStatement MethodInvocation Class MemberReference classname forName BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = StatementExpression MethodInvocation loader setThreadContextLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class MemberReference classname Literal true MemberReference loader forName ReturnStatement MemberReference c	1
MethodDeclaration Modifier protected IfStatement BinaryOperation != MemberReference tbed Literal null BlockStatement StatementExpression MethodInvocation tbed deleteMirror StatementExpression Assignment MemberReference tbed Literal null =	0
MethodDeclaration Modifier public ReferenceType String apply FormalParameter ReferenceType String elem IfStatement BinaryOperation || BinaryOperation == MemberReference from Literal null BinaryOperation == MemberReference to Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Both 'from' and 'to' must be set " Literal "in a map entry" LocalVariableDeclaration ReferenceType String VariableDeclarator cmpElem TernaryExpression MemberReference onWindows MethodInvocation elem MethodInvocation Literal '\\' Literal '/' replace toLowerCase MemberReference elem LocalVariableDeclaration ReferenceType String VariableDeclarator cmpFrom TernaryExpression MemberReference onWindows MethodInvocation from MethodInvocation Literal '\\' Literal '/' replace toLowerCase MemberReference from ReturnStatement TernaryExpression MethodInvocation cmpElem MemberReference cmpFrom startsWith BinaryOperation + MemberReference to MethodInvocation elem MethodInvocation from length substring MemberReference elem	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object key StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference key Literal ")" log ReturnStatement MemberReference key	0
MethodDeclaration Modifier static protected ReferenceType AntHandler getTargetHandler ReturnStatement MemberReference targetHandler	0
MethodDeclaration Modifier synchronized protected handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation == MemberReference outPrintStream Literal null BlockStatement StatementExpression Assignment MemberReference outPrintStream ClassCreator ReferenceType PrintStream MemberReference outputStream = StatementExpression MethodInvocation outPrintStream MemberReference output print StatementExpression MethodInvocation outPrintStream flush	0
MethodDeclaration Modifier private static handleLogfile IfStatement MemberReference isLogFileUsed BlockStatement StatementExpression MethodInvocation FileUtils MemberReference out close StatementExpression MethodInvocation FileUtils MemberReference err close	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected cleanUp StatementExpression MethodInvocation clear StatementExpression MethodInvocation addedFiles removeAllElements StatementExpression MethodInvocation entries clear StatementExpression Assignment MemberReference addingNewFiles Literal false = StatementExpression Assignment MemberReference doUpdate MemberReference savedDoUpdate = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator zf Cast ReferenceType ZipFileSet MethodInvocation e nextElement StatementExpression MethodInvocation resources MemberReference zf removeElement StatementExpression MethodInvocation removeAllElements	0
MethodDeclaration Modifier public FormalParameter ReferenceType File fileName StatementExpression Assignment MemberReference win32icon MemberReference fileName =	0
MethodDeclaration Modifier public addConfiguredXMLCatalog FormalParameter ReferenceType catalog StatementExpression MethodInvocation MemberReference catalog addConfiguredXMLCatalog	0
MethodDeclaration Modifier public ReferenceType String getElementTag ReturnStatement MemberReference elementTag	0
MethodDeclaration Modifier public ReferenceType String getPvcsbin ReturnStatement MemberReference pvcsbin	0
MethodDeclaration Modifier public printTargetDecl FormalParameter ReferenceType PrintWriter out StatementExpression MethodInvocation Assert MemberReference assertTrue StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MethodInvocation Assert Literal 0 MemberReference assertEquals StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier private sendFileToRemote FormalParameter ReferenceType File localFile FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out IOException LocalVariableDeclaration BasicType long VariableDeclarator filesize MethodInvocation localFile length LocalVariableDeclaration ReferenceType String VariableDeclarator command BinaryOperation + BinaryOperation + Literal " MemberReference filesize Literal " " StatementExpression Assignment MemberReference command MethodInvocation localFile getName += StatementExpression Assignment MemberReference command Literal "\n" += StatementExpression MethodInvocation out MethodInvocation command getBytes write StatementExpression MethodInvocation out flush StatementExpression MethodInvocation MemberReference in waitForAck LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference localFile LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte MemberReference BUFFER_SIZE LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator totalLength Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator trackProgress BinaryOperation && MethodInvocation getVerbose BinaryOperation > MemberReference filesize Literal 102400 LocalVariableDeclaration BasicType long VariableDeclarator initFilesize MemberReference filesize LocalVariableDeclaration BasicType int VariableDeclarator percentTransmitted Literal 0 TryStatement IfStatement This MethodInvocation getVerbose BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Sending: " MethodInvocation localFile getName Literal " : " MethodInvocation localFile length log WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation fis MemberReference buf Literal 0 MemberReference buf length read IfStatement BinaryOperation <= MemberReference len Literal 0 BlockStatement BreakStatement StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference len write StatementExpression Assignment MemberReference totalLength MemberReference len += IfStatement MemberReference trackProgress BlockStatement StatementExpression Assignment MemberReference percentTransmitted MethodInvocation MemberReference initFilesize MemberReference totalLength MemberReference percentTransmitted trackProgress = StatementExpression MethodInvocation out flush StatementExpression MethodInvocation MemberReference out sendAck StatementExpression MethodInvocation MemberReference in waitForAck IfStatement This MethodInvocation getVerbose BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator endTime MethodInvocation System currentTimeMillis StatementExpression MethodInvocation MemberReference startTime MemberReference endTime MemberReference totalLength StatementExpression MethodInvocation fis close	0
MethodDeclaration Modifier protected ReferenceType String getWritable ReturnStatement TernaryExpression MemberReference writable MemberReference FLAG_WRITABLE Literal ""	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public addVmExit FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror aFormatter FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType String message FormalParameter ReferenceType String testCase LocalVariableDeclaration ReferenceType JUnitResultFormatter VariableDeclarator formatter Cast ReferenceType JUnitResultFormatter MemberReference aFormatter StatementExpression MethodInvocation formatter MemberReference out setOutput StatementExpression MethodInvocation formatter MemberReference test startTestSuite LocalVariableDeclaration ReferenceType TestCase VariableDeclarator t ClassCreator ReferenceType VmExitErrorTest MemberReference message MemberReference test MemberReference testCase StatementExpression MethodInvocation formatter MemberReference t StatementExpression MethodInvocation formatter MemberReference t ClassCreator ReferenceType AssertionFailedError MemberReference message addError StatementExpression MethodInvocation formatter MemberReference test endTestSuite	0
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only single argument resource collections" Literal " are supported as archives" StatementExpression MethodInvocation Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator setSrcResource	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType Checksum c StatementExpression MethodInvocation conditions MemberReference c addElement	0
MethodDeclaration Modifier private ReferenceType java ReferenceType io ReferenceType File getLocalRootMapping FormalParameter ReferenceType Folder starteamrootfolder LocalVariableDeclaration ReferenceType String VariableDeclarator localrootfolder IfStatement BinaryOperation != Literal null This MemberReference rootLocalFolder BlockStatement StatementExpression Assignment MemberReference localrootfolder MemberReference rootLocalFolder = BlockStatement StatementExpression Assignment MemberReference localrootfolder MethodInvocation starteamrootfolder = ReturnStatement ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference localrootfolder	0
MethodDeclaration Modifier private ReferenceType Properties mergePropertySets LocalVariableDeclaration ReferenceType Properties VariableDeclarator p ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps Cast ReferenceType MethodInvocation e nextElement StatementExpression MethodInvocation p MethodInvocation ps getProperties putAll ReturnStatement MemberReference p	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty assertNull	0
MethodDeclaration Modifier public BasicType byte getLocalFileDataData ReturnStatement MemberReference localData	0
MethodDeclaration Modifier public addPresent FormalParameter ReferenceType PresentSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType String encode FormalParameter ReferenceType String s ReturnStatement MethodInvocation MethodInvocation s getBytes encode	0
MethodDeclaration Modifier public setRebuild FormalParameter BasicType boolean rebuild StatementExpression Assignment This MemberReference alwaysRebuild MemberReference rebuild =	0
MethodDeclaration Modifier public final ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr ReturnStatement MethodInvocation filter MemberReference rdr chain	0
MethodDeclaration Modifier static protected BasicType byte FormalParameter BasicType long t LocalVariableDeclaration ReferenceType Date VariableDeclarator time ClassCreator ReferenceType Date MemberReference t LocalVariableDeclaration BasicType int VariableDeclarator year BinaryOperation + MethodInvocation time getYear Literal 1900 IfStatement BinaryOperation < MemberReference year Literal 1980 BlockStatement ReturnStatement MemberReference DOS_TIME_MIN LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation time getMonth Literal 1 LocalVariableDeclaration BasicType long VariableDeclarator value BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation << BinaryOperation - MemberReference year Literal 1980 Literal 25 BinaryOperation << MemberReference Literal 21 BinaryOperation << MethodInvocation time getDate Literal 16 BinaryOperation << MethodInvocation time getHours Literal 11 BinaryOperation << MethodInvocation time getMinutes Literal 5 BinaryOperation >> MethodInvocation time getSeconds Literal 1 ReturnStatement MethodInvocation ZipLong MemberReference value getBytes	1
MethodDeclaration Modifier private IfStatement MemberReference initialized BlockStatement ReturnStatement StatementExpression Assignment MemberReference options MethodInvocation MemberReference flags convertRegexOptions = IfStatement BinaryOperation == MemberReference from Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing pattern in StatementExpression Assignment MemberReference regularExpression ClassCreator ReferenceType RegularExpression = StatementExpression MethodInvocation regularExpression MemberReference from setPattern StatementExpression Assignment MemberReference regexp MethodInvocation regularExpression MethodInvocation getProject = IfStatement BinaryOperation == MemberReference to Literal null BlockStatement StatementExpression Assignment MemberReference to Literal "" = StatementExpression Assignment MemberReference ClassCreator ReferenceType Substitution = StatementExpression MethodInvocation MemberReference to	0
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation helper createClasspath	0
MethodDeclaration Modifier static protected FormalParameter ReferenceType AntHandler handler StatementExpression Assignment MemberReference targetHandler MemberReference handler =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference MemberReference v =	0
MethodDeclaration Modifier protected setInternalVersion FormalParameter ReferenceType String text StatementExpression Assignment MemberReference version MemberReference text =	0
MethodDeclaration Modifier public final testAttributes LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator f Cast ReferenceType TarFileSet MethodInvocation getInstance StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.tar" setSrc TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "examples" setDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "can add dir to " MethodInvocation f getDataTypeName Literal " when a src is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both dir and src MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType TarFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "examples" setDir TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.tar" setSrc StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "can add src to " MethodInvocation f getDataTypeName Literal " when a dir is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both dir and src MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType TarFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.tar" setSrc StatementExpression MethodInvocation f Literal "/examples" setPrefix TryStatement StatementExpression MethodInvocation f Literal "/doc/manual/index.html" StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add fullpath to " MethodInvocation f getDataTypeName Literal " when a prefix is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both fullpath and prefix MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType TarFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.tar" setSrc StatementExpression MethodInvocation f Literal "/doc/manual/index.html" TryStatement StatementExpression MethodInvocation f Literal "/examples" setPrefix StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add prefix to " MethodInvocation f getDataTypeName Literal " when a fullpath is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "Cannot set both fullpath and prefix MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType TarFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "test" setRefid TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.tar" setSrc StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add src to " MethodInvocation f getDataTypeName Literal " when a refid is already present" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one " Literal when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f Cast ReferenceType TarFileSet MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "example.tar" setSrc StatementExpression MethodInvocation f Literal "/examples" setPrefix StatementExpression MethodInvocation f Literal "600" setFileMode StatementExpression MethodInvocation f Literal "530" setDirMode StatementExpression MethodInvocation MethodInvocation Literal "test" MemberReference f getProject LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator zid Cast ReferenceType TarFileSet MethodInvocation getInstance StatementExpression MethodInvocation zid ClassCreator ReferenceType Literal "test" setRefid StatementExpression MethodInvocation Literal "src attribute by copy constructor" MethodInvocation zid MethodInvocation MethodInvocation f MethodInvocation getProject getSrc equals MethodInvocation getProject getSrc assertTrue StatementExpression MethodInvocation Literal attribute by copy constructor" MethodInvocation f MethodInvocation MethodInvocation zid MethodInvocation getProject getPrefix equals MethodInvocation getProject getPrefix assertTrue StatementExpression MethodInvocation Literal "file mode attribute by copy constructor" BinaryOperation == MethodInvocation f MethodInvocation getProject MethodInvocation zid MethodInvocation getProject assertTrue StatementExpression MethodInvocation Literal "dir mode attribute by copy constructor" BinaryOperation == MethodInvocation f MethodInvocation getProject MethodInvocation zid MethodInvocation getProject assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType String parameterizeURL BuildException IfStatement BinaryOperation == MethodInvocation params size Literal 0 BlockStatement ReturnStatement MethodInvocation getURL LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MethodInvocation getURL StatementExpression MethodInvocation buf TernaryExpression BinaryOperation == MethodInvocation source Literal '?' indexOf Literal - 1 Literal '?' Literal '&' append LocalVariableDeclaration ReferenceType VariableDeclarator param ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation params size MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal '&' append StatementExpression Assignment MemberReference param Cast ReferenceType MethodInvocation params MemberReference i get = StatementExpression MethodInvocation buf MethodInvocation param toString append ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType String application StatementExpression Assignment This MemberReference application MemberReference application =	0
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator checkprop MethodInvocation project Literal getProperty StatementExpression MethodInvocation Literal MemberReference checkprop assertEquals	0
MethodDeclaration Modifier public setEndTag FormalParameter ReferenceType String s StatementExpression Assignment MemberReference myendTag MemberReference s =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "fork-timeout-not" Literal "Package: org.apache.tools.ant.util.facade" expectLogContaining	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType VariableDeclarator pkg MethodInvocation clazz getPackage ReturnStatement MethodInvocation pkg	0
MethodDeclaration Modifier protected beginExecution StatementExpression Assignment MemberReference redirector MethodInvocation createRedirector =	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet fileset StatementExpression MethodInvocation fileSets MemberReference fileset add	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument missing" expectBuildException	0
MethodDeclaration Modifier private resolve FormalParameter ReferenceType Properties props FormalParameter ReferenceType String name FormalParameter ReferenceType Stack referencesSeen BuildException IfStatement MethodInvocation referencesSeen MemberReference name contains BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Property " MemberReference name Literal " was " Literal "defined." LocalVariableDeclaration ReferenceType String VariableDeclarator propertyValue MethodInvocation props MemberReference name getProperty LocalVariableDeclaration ReferenceType Vector VariableDeclarator fragments ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator propertyRefs ClassCreator ReferenceType Vector StatementExpression MethodInvocation PropertyHelper MethodInvocation MemberReference propertyValue MemberReference fragments MemberReference propertyRefs parsePropertyString This MethodInvocation getProject getPropertyHelper IfStatement BinaryOperation != MethodInvocation propertyRefs size Literal 0 BlockStatement StatementExpression MethodInvocation referencesSeen MemberReference name push LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation fragments elements LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator j MethodInvocation propertyRefs elements WhileStatement MethodInvocation i hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fragment Cast ReferenceType String MethodInvocation i nextElement IfStatement BinaryOperation == MemberReference fragment Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName Cast ReferenceType String MethodInvocation j nextElement StatementExpression Assignment MemberReference fragment MethodInvocation MethodInvocation MemberReference propertyName getProperty getProject = IfStatement BinaryOperation == MemberReference fragment Literal null BlockStatement IfStatement MethodInvocation props MemberReference propertyName containsKey BlockStatement StatementExpression MethodInvocation MemberReference props MemberReference propertyName MemberReference referencesSeen resolve StatementExpression Assignment MemberReference fragment MethodInvocation props MemberReference propertyName getProperty = BlockStatement StatementExpression Assignment MemberReference fragment BinaryOperation + BinaryOperation + Literal "${" MemberReference propertyName Literal "}" = StatementExpression MethodInvocation sb MemberReference fragment append StatementExpression Assignment MemberReference propertyValue MethodInvocation sb toString = StatementExpression MethodInvocation props MemberReference name MemberReference propertyValue put StatementExpression MethodInvocation referencesSeen pop	1
MethodDeclaration Modifier private ReferenceType String getRelativePath FormalParameter ReferenceType String currentPath FormalParameter ReferenceType String currentRelativePath LocalVariableDeclaration ReferenceType Vector VariableDeclarator pathElements MethodInvocation SelectorUtils MethodInvocation getAbsolutePath MemberReference remoteFileSep tokenizePath LocalVariableDeclaration ReferenceType Vector VariableDeclarator pathElements2 MethodInvocation SelectorUtils MemberReference currentPath MemberReference remoteFileSep tokenizePath LocalVariableDeclaration ReferenceType String VariableDeclarator relPath MemberReference currentRelativePath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator pcount MethodInvocation pathElements2 size BinaryOperation < MemberReference pcount MethodInvocation pathElements size MemberReference ++ pcount BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentElement Cast ReferenceType String MethodInvocation pathElements MemberReference pcount elementAt LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator theFiles MethodInvocation MemberReference currentPath listFiles LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator theFile Literal null IfStatement BinaryOperation != MemberReference theFiles Literal null BlockStatement StatementExpression Assignment MemberReference theFile MethodInvocation MemberReference theFiles MemberReference currentElement getFile = IfStatement MethodInvocation ! relPath Literal "" equals BlockStatement StatementExpression Assignment MemberReference relPath BinaryOperation + MemberReference relPath MemberReference remoteFileSep = IfStatement BinaryOperation == MemberReference theFile Literal null BlockStatement StatementExpression Assignment MemberReference relPath BinaryOperation + MemberReference relPath MemberReference currentElement = StatementExpression Assignment MemberReference currentPath BinaryOperation + BinaryOperation + MemberReference currentPath MemberReference remoteFileSep MemberReference currentElement = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Hidden file " MemberReference relPath Literal " assumed to not be a symlink." MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression Assignment MemberReference traversesSymlinks BinaryOperation || MemberReference traversesSymlinks MethodInvocation theFile isSymbolicLink = StatementExpression Assignment MemberReference relPath BinaryOperation + MemberReference relPath MethodInvocation theFile getName = StatementExpression Assignment MemberReference currentPath BinaryOperation + BinaryOperation + MemberReference currentPath MemberReference remoteFileSep MethodInvocation theFile getName = ReturnStatement MemberReference relPath	1
MethodDeclaration Modifier public testCompleteDirectoryMoveFileToDirWithExistingDir StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected determineDependencies FormalParameter ReferenceType Vector files FormalParameter ReferenceType Vector classes LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencies ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator containers ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator toAnalyze ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation getRootClasses MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation toAnalyze MemberReference classname MemberReference classname put LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator maxCount TernaryExpression MethodInvocation isClosureRequired MemberReference MAX_LOOPS Literal 2 WhileStatement BinaryOperation && BinaryOperation != MethodInvocation toAnalyze size Literal 0 BinaryOperation < MemberReference ++ count MemberReference maxCount BlockStatement LocalVariableDeclaration ReferenceType DependencyVisitor VariableDeclarator dependencyVisitor ClassCreator ReferenceType DependencyVisitor ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation toAnalyze keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation dependencies MemberReference classname MemberReference classname put TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator container MethodInvocation MemberReference classname getClassContainer IfStatement BinaryOperation == MemberReference container Literal null BlockStatement ContinueStatement StatementExpression MethodInvocation containers MemberReference container MemberReference container put LocalVariableDeclaration ReferenceType ClassParser VariableDeclarator parser Literal null IfStatement MethodInvocation container MethodInvocation Literal ".class" endsWith getName BlockStatement StatementExpression Assignment MemberReference parser ClassCreator ReferenceType ClassParser MethodInvocation container getPath = BlockStatement StatementExpression Assignment MemberReference parser ClassCreator ReferenceType ClassParser MethodInvocation container getPath BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".class" = LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator javaClass MethodInvocation parser parse LocalVariableDeclaration ReferenceType DescendingVisitor VariableDeclarator traverser ClassCreator ReferenceType DescendingVisitor MemberReference javaClass MemberReference dependencyVisitor StatementExpression MethodInvocation traverser visit CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation toAnalyze clear LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator depsEnum MethodInvocation dependencyVisitor getDependencies WhileStatement MethodInvocation depsEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation depsEnum nextElement IfStatement MethodInvocation ! dependencies MemberReference className containsKey BlockStatement StatementExpression MethodInvocation toAnalyze MemberReference className MemberReference className put StatementExpression MethodInvocation files removeAllElements ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation containers keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation files Cast ReferenceType File MethodInvocation e nextElement addElement StatementExpression MethodInvocation classes removeAllElements ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dependencies keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation classes Cast ReferenceType String MethodInvocation e nextElement addElement	1
MethodDeclaration Modifier public addModified FormalParameter ReferenceType ModifiedSelector selector StatementExpression MethodInvocation fileset MemberReference selector addModified	1
MethodDeclaration Modifier public static BasicType boolean isContextLoaderAvailable ReturnStatement Literal true	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public setMaxParallel FormalParameter BasicType int max ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the maxparallel attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Vector files StatementExpression Assignment This MemberReference files MemberReference files =	1
MethodDeclaration Modifier public setPath FormalParameter ReferenceType path IfStatement BinaryOperation == This MemberReference path Literal null BlockStatement StatementExpression Assignment This MemberReference path MemberReference path = BlockStatement StatementExpression This MemberReference path MethodInvocation MemberReference path append	0
MethodDeclaration Modifier private static assertTrue FormalParameter ReferenceType String message FormalParameter BasicType boolean condition IfStatement MemberReference ! condition BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Assertion Error: " MemberReference message	1
MethodDeclaration Modifier public setPreserveTime FormalParameter BasicType boolean ptime StatementExpression Assignment MemberReference mPtime MemberReference ptime =	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String msg IfStatement BinaryOperation && MemberReference messageAttribute Literal MethodInvocation MethodInvocation msg trim equals "" BlockStatement ReturnStatement StatementExpression Assignment MemberReference message MethodInvocation MethodInvocation MemberReference msg replaceProperties getProject +=	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true setInitialized LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference prependReader Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation prependReader read = IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement StatementExpression MethodInvocation prependReader close StatementExpression Assignment MemberReference prependReader Literal null = IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement StatementExpression Assignment MemberReference ch SuperMethodInvocation read = IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement IfStatement BinaryOperation != MemberReference appendReader Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation appendReader read = IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement StatementExpression MethodInvocation appendReader close StatementExpression Assignment MemberReference appendReader Literal null = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier private BasicType long getTimeDiff FormalParameter ReferenceType FTPClient ftp LocalVariableDeclaration BasicType long VariableDeclarator returnValue Literal 0 LocalVariableDeclaration ReferenceType File VariableDeclarator tempFile MethodInvocation MemberReference ftp findFileName TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference tempFile createNewFile LocalVariableDeclaration BasicType long VariableDeclarator localTimeStamp MethodInvocation tempFile lastModified LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator instream ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference tempFile StatementExpression MethodInvocation ftp MethodInvocation tempFile getName MemberReference instream storeFile StatementExpression MethodInvocation instream close LocalVariableDeclaration BasicType boolean VariableDeclarator success MethodInvocation FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion IfStatement MemberReference success BlockStatement LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator ftpFiles MethodInvocation ftp MethodInvocation tempFile getName listFiles IfStatement BinaryOperation == MemberReference ftpFiles length Literal 1 BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator remoteTimeStamp MemberReference ArraySelector Literal 0 MethodInvocation MethodInvocation getTime MethodInvocation getTime ftpFiles StatementExpression Assignment MemberReference returnValue BinaryOperation - MemberReference localTimeStamp MemberReference remoteTimeStamp = StatementExpression MethodInvocation ftp MemberReference ArraySelector Literal 0 MethodInvocation getName ftpFiles deleteFile LocalVariableDeclaration ReferenceType Delete VariableDeclarator mydelete ClassCreator ReferenceType Delete StatementExpression MethodInvocation mydelete This bindToOwner StatementExpression MethodInvocation mydelete MethodInvocation tempFile getCanonicalFile setFile StatementExpression MethodInvocation mydelete execute CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation ReturnStatement MemberReference returnValue	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference implementationVendorID	0
MethodDeclaration Modifier protected ReferenceType String getOptionCompareParameter IfStatement BinaryOperation && BinaryOperation != MemberReference optionCompare Literal null Literal MethodInvocation MemberReference optionCompare equalsIgnoreCase "text" BlockStatement ReturnStatement Literal BlockStatement ReturnStatement Literal "/optioncompare:binary"	0
MethodDeclaration Modifier protected doSiteCommand FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String theCMD IOException BuildException LocalVariableDeclaration BasicType boolean VariableDeclarator rc LocalVariableDeclaration ReferenceType String VariableDeclarator myReply Literal null StatementExpression MethodInvocation BinaryOperation + Literal "Doing Site Command: " MemberReference theCMD MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rc MethodInvocation ftp MemberReference theCMD sendSiteCommand = IfStatement MemberReference ! rc BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Failed to issue Site Command: " MemberReference theCMD MemberReference Project MSG_WARN log BlockStatement StatementExpression Assignment MemberReference myReply MethodInvocation ftp getReplyStrings = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator x Literal 0 BinaryOperation < MemberReference x MemberReference myReply length MemberReference ++ x BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference x MethodInvocation Literal indexOf myReply Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference x myReply MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal "test1" executeTarget StatementExpression MethodInvocation Literal not thrown" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal "cvsroot is required" MethodInvocation e getMessage assertEquals	0
MethodDeclaration Modifier public static ReferenceType Node importNode FormalParameter ReferenceType Node parent FormalParameter ReferenceType Node child LocalVariableDeclaration ReferenceType Node VariableDeclarator copy Literal null LocalVariableDeclaration Modifier final ReferenceType Document VariableDeclarator doc MethodInvocation parent SwitchStatement MethodInvocation child getNodeType SwitchStatementCase MemberReference Node CDATA_SECTION_NODE StatementExpression Assignment MemberReference copy MethodInvocation doc Cast ReferenceType MemberReference child createCDATASection = BreakStatement SwitchStatementCase MemberReference Node COMMENT_NODE StatementExpression Assignment MemberReference copy MethodInvocation doc Cast ReferenceType MemberReference child createComment = BreakStatement SwitchStatementCase MemberReference Node DOCUMENT_FRAGMENT_NODE StatementExpression Assignment MemberReference copy MethodInvocation doc createDocumentFragment = BreakStatement SwitchStatementCase MemberReference Node ELEMENT_NODE LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator elem MethodInvocation doc Cast ReferenceType Element MemberReference child createElement StatementExpression Assignment MemberReference copy MemberReference elem = LocalVariableDeclaration Modifier final ReferenceType NamedNodeMap VariableDeclarator attributes MethodInvocation child getAttributes IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation attributes getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Attr VariableDeclarator attr Cast ReferenceType Attr MethodInvocation attributes MemberReference i item StatementExpression MethodInvocation elem MethodInvocation attr getName MethodInvocation attr getValue setAttribute BreakStatement SwitchStatementCase MemberReference Node ENTITY_REFERENCE_NODE StatementExpression Assignment MemberReference copy MethodInvocation doc MethodInvocation child getNodeName = BreakStatement SwitchStatementCase MemberReference Node PROCESSING_INSTRUCTION_NODE LocalVariableDeclaration Modifier final ReferenceType ProcessingInstruction VariableDeclarator pi Cast ReferenceType ProcessingInstruction MemberReference child StatementExpression Assignment MemberReference copy MethodInvocation doc MethodInvocation pi getTarget MethodInvocation pi getData = BreakStatement SwitchStatementCase MemberReference Node TEXT_NODE StatementExpression Assignment MemberReference copy MethodInvocation doc Cast ReferenceType Text MemberReference child createTextNode = BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Invalid node type: " MethodInvocation child getNodeType TryStatement LocalVariableDeclaration Modifier final ReferenceType NodeList VariableDeclarator children MethodInvocation child getChildNodes IfStatement BinaryOperation != MemberReference children Literal null BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation children getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Node VariableDeclarator newChild MethodInvocation children MemberReference i item IfStatement BinaryOperation != MemberReference newChild Literal null BlockStatement StatementExpression MethodInvocation MemberReference copy MemberReference newChild importNode CatchClause CatchClauseParameter DOMException ignored StatementExpression MethodInvocation parent MemberReference copy appendChild ReturnStatement MemberReference copy	0
MethodDeclaration Modifier private ReferenceType String getFileString FormalParameter ReferenceType String target FormalParameter ReferenceType String filename IOException StatementExpression MethodInvocation MemberReference target executeTarget ReturnStatement MethodInvocation MemberReference filename getFileString	0
MethodDeclaration Modifier public ReferenceType createWLClasspath IfStatement BinaryOperation == MemberReference weblogicClasspath Literal null BlockStatement StatementExpression Assignment MemberReference weblogicClasspath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation weblogicClasspath createPath	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getBranch ReturnStatement MemberReference mBranch	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal 2	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "istrue" Literal "istrue" expectPropertySet	0
MethodDeclaration Modifier public setTargetType FormalParameter ReferenceType String ttype BuildException StatementExpression Assignment MemberReference ttype MethodInvocation ttype toLowerCase = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation ttype Literal equals MethodInvocation ttype Literal equals MethodInvocation ttype Literal "module" equals MethodInvocation ttype Literal "winexe" equals BlockStatement StatementExpression Assignment MemberReference targetType MemberReference ttype = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "targetType " MemberReference ttype Literal " is not one of 'exe', 'module', 'winexe' or 'library'"	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType NetCommand command StatementExpression MethodInvocation command MethodInvocation getIncludeDefaultReferencesParameter addArgument StatementExpression MethodInvocation command MethodInvocation getWarnLevelParameter addArgument StatementExpression MethodInvocation command MethodInvocation getDocFileParameter addArgument StatementExpression MethodInvocation command MethodInvocation getFullPathsParameter addArgument StatementExpression MethodInvocation command MethodInvocation getFileAlignParameter addArgument StatementExpression MethodInvocation command MethodInvocation getIncrementalParameter addArgument StatementExpression MethodInvocation command MethodInvocation getNoConfigParameter addArgument StatementExpression MethodInvocation command MethodInvocation getUnsafeParameter addArgument	0
MethodDeclaration Modifier public testStandaloneCR IOException TryStatement StatementExpression SuperMethodInvocation testStandaloneCR StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public testWindowsLineSeparator2 IOException TryStatement StatementExpression SuperMethodInvocation testWindowsLineSeparator2 StatementExpression MethodInvocation Literal "Should trigger when this bug is fixed. {@since 1.2}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public setDestdir FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private addExistingToClasspath FormalParameter ReferenceType StringBuffer target FormalParameter ReferenceType String source LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference source MethodInvocation System Literal "path.separator" getProperty Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation MethodInvocation tok nextToken resolveFile getProject IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation target MemberReference File pathSeparator append StatementExpression MethodInvocation target MethodInvocation f getAbsolutePath append BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Dropping from classpath: " MethodInvocation f getAbsolutePath MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public testDestDir StatementExpression MethodInvocation Literal "testDestDir" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getCmpDescriptors LocalVariableDeclaration ReferenceType List VariableDeclarator returnList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType EjbInfo VariableDeclarator ejbs MethodInvocation handler ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ejbs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator descriptors Cast ReferenceType List MemberReference ArraySelector MemberReference i MethodInvocation getCmpDescriptors ejbs StatementExpression MethodInvocation returnList MemberReference descriptors addAll ReturnStatement Cast ReferenceType String MethodInvocation returnList ArrayCreator ReferenceType String MethodInvocation returnList size toArray	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" executeTarget	0
MethodDeclaration Modifier protected BasicType boolean is272 LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator l Literal null TryStatement StatementExpression Assignment MemberReference l MethodInvocation MethodInvocation MethodInvocation commandline getClasspath createClassLoader getProject = StatementExpression MethodInvocation l Literal loadClass ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException e ReturnStatement Literal false IfStatement BinaryOperation != MemberReference l Literal null BlockStatement StatementExpression MethodInvocation l cleanup	0
MethodDeclaration Modifier public synchronized setProxy FormalParameter ReferenceType Object proxy StatementExpression Assignment MemberReference MemberReference proxy = StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public setExcludes FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference Literal ", " Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation tok nextToken setName	0
MethodDeclaration Modifier protected ReferenceType String getDestFileParameter IfStatement BinaryOperation != MemberReference outputFile Literal null BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation outputFile toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Formatter createFilterFormatter FormalParameter ReferenceType Formatter f BuildException TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation Class MemberReference classname forName IfStatement ClassReference ! MethodInvocation MemberReference clazz isAssignableFrom ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference clazz Literal " must be a LocalVariableDeclaration ReferenceType Constructor VariableDeclarator ctor MethodInvocation clazz ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Formatter getConstructor ReturnStatement Cast ReferenceType Formatter MethodInvocation ctor ArrayCreator ReferenceType Object ArrayInitializer MemberReference f newInstance CatchClause CatchClauseParameter BuildException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public testNoName StatementExpression MethodInvocation Literal Literal "Absence of name attribute not detected" Literal "scriptdef requires a name attribute" expectBuildExceptionContaining	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testNonFileResource" executeTarget	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration * @return an instance of the this compiler */ Modifier public ReferenceType JspMangler ReturnStatement MemberReference	0
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException	0
MethodDeclaration Modifier public show ThrowStatement ClassCreator ReferenceType BuildException Literal	0
MethodDeclaration Modifier public synchronized addChild FormalParameter ReferenceType RuntimeConfigurable child StatementExpression Assignment MemberReference children TernaryExpression BinaryOperation == MemberReference children Literal null ClassCreator ReferenceType ArrayList MemberReference children = StatementExpression MethodInvocation children MemberReference child add	0
MethodDeclaration Modifier public setRemoteTofile FormalParameter ReferenceType String aToUri StatementExpression MethodInvocation MemberReference aToUri StatementExpression Assignment This MemberReference isToRemote Literal true =	1
MethodDeclaration Modifier public setPattern FormalParameter ReferenceType String pattern StatementExpression Assignment This MemberReference pattern MemberReference pattern =	0
MethodDeclaration Modifier public synchronized static ReferenceType PropertyHelper getPropertyHelper FormalParameter ReferenceType Project project LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator helper Cast ReferenceType PropertyHelper MethodInvocation project MemberReference MagicNames getReference IfStatement BinaryOperation != MemberReference helper Literal null BlockStatement ReturnStatement MemberReference helper StatementExpression Assignment MemberReference helper ClassCreator ReferenceType PropertyHelper = StatementExpression MethodInvocation helper MemberReference project setProject StatementExpression MethodInvocation project MemberReference MagicNames MemberReference helper ReturnStatement MemberReference helper	0
MethodDeclaration Modifier public verbose FormalParameter Modifier final ReferenceType String message StatementExpression MethodInvocation task MemberReference message MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public testFilesmatchExistence StatementExpression MethodInvocation Literal "filesmatch-existence" Literal "filesmatch-existence" expectPropertyUnset	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator file Literal null IfStatement BinaryOperation == MemberReference File separatorChar Literal '\\' BlockStatement StatementExpression Assignment MemberReference file ClassCreator ReferenceType File Literal "d:\\jdk" = BlockStatement StatementExpression Assignment MemberReference file ClassCreator ReferenceType File Literal "/user/local/bin" = LocalVariableDeclaration ReferenceType String VariableDeclarator systemid MethodInvocation JAXPUtils MemberReference file getSystemId StatementExpression MethodInvocation Literal "SystemIDs should start by file:/" MethodInvocation systemid Literal "file:/" startsWith assertTrue StatementExpression MethodInvocation Literal "SystemIDs should not start with file:////" MethodInvocation ! systemid Literal "file:////" startsWith assertTrue	0
MethodDeclaration Modifier public ReferenceType createDTD LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal message" Literal doesn't support the" expectBuildExceptionContaining	0
MethodDeclaration Modifier public setVersion FormalParameter ReferenceType String version StatementExpression SuperMethodInvocation MemberReference version setInternalVersion	0
MethodDeclaration Modifier public setBinary FormalParameter BasicType boolean b StatementExpression Assignment MemberReference binary MemberReference b =	0
MethodDeclaration Modifier private ReferenceType StringBuffer buildFilterChain FormalParameter ReferenceType StringBuffer inputBuffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf MemberReference inputBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator filter Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation filter MemberReference buf setInputBuffer StatementExpression Assignment MemberReference buf MethodInvocation filter getOutputBuffer = ReturnStatement MemberReference buf	1
MethodDeclaration Modifier public log FormalParameter ReferenceType String msg FormalParameter BasicType int msgLevel IfStatement BinaryOperation != MethodInvocation getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation This MemberReference msg MemberReference msgLevel log getProject BlockStatement StatementExpression SuperMethodInvocation MemberReference msg MemberReference msgLevel log	1
MethodDeclaration Modifier public ReferenceType String getVariables BuildException IfStatement BinaryOperation == MethodInvocation variables size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MethodInvocation variables size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference result length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result Cast ReferenceType Variable MethodInvocation variables MemberReference i elementAt = ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType Element createDocument LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator builder MethodInvocation getDocumentBuilder LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation builder newDocument LocalVariableDeclaration ReferenceType Element VariableDeclarator rootElement MethodInvocation doc MemberReference TESTSUITES createElement StatementExpression MethodInvocation doc MemberReference rootElement appendChild StatementExpression Assignment MemberReference generatedId Literal 0 = LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation getFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MemberReference ArraySelector MemberReference i files TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Parsing file: '" MemberReference file Literal "'" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation > MethodInvocation file length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Document VariableDeclarator testsuiteDoc MethodInvocation builder MethodInvocation FileUtils MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getAbsolutePath files toURI getFileUtils parse LocalVariableDeclaration ReferenceType Element VariableDeclarator elem MethodInvocation testsuiteDoc getDocumentElement IfStatement MethodInvocation MethodInvocation elem getNodeName equals BlockStatement StatementExpression MethodInvocation MemberReference rootElement MemberReference elem addTestSuite StatementExpression MemberReference ++ generatedId BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "the file " MemberReference file MemberReference WARNING_INVALID_ROOT_ELEMENT MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "the file " MemberReference file MemberReference WARNING_EMPTY_FILE MemberReference Project MSG_WARN log CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "The file " MemberReference file MemberReference WARNING_IS_POSSIBLY_CORRUPTED MemberReference Project MSG_WARN log StatementExpression MethodInvocation MethodInvocation StringUtils MemberReference e getStackTrace MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error while accessing file " MemberReference file Literal ": " MethodInvocation e getMessage MemberReference Project MSG_ERR log ReturnStatement MemberReference rootElement	1
MethodDeclaration Modifier protected BasicType boolean renameFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite IOException BuildException LocalVariableDeclaration BasicType boolean VariableDeclarator renamed Literal false IfStatement BinaryOperation && BinaryOperation == BinaryOperation + MethodInvocation MethodInvocation size getFilterSets MethodInvocation MethodInvocation size getFilterChains Literal 0 BinaryOperation || MemberReference filtering MethodInvocation destFile isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation destFile getParentFile IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null MethodInvocation ! parent exists BlockStatement StatementExpression MethodInvocation parent mkdirs IfStatement BinaryOperation && BinaryOperation && MethodInvocation destFile isFile MethodInvocation ! destFile MemberReference sourceFile equals MethodInvocation ! destFile delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to remove existing " Literal "file " MemberReference destFile StatementExpression Assignment MemberReference renamed MethodInvocation sourceFile MemberReference destFile renameTo = ReturnStatement MemberReference renamed	1
MethodDeclaration Modifier public setPort FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public applyAssertions FormalParameter Modifier final ReferenceType ListIterator commandIterator StatementExpression MethodInvocation MethodInvocation Literal "Applying assertions" MemberReference Project MSG_DEBUG log getProject LocalVariableDeclaration ReferenceType VariableDeclarator clause MethodInvocation IfStatement MethodInvocation Boolean.TRUE MemberReference clause equals BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "Enabling system assertions" MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation commandIterator Literal add IfStatement MethodInvocation Boolean.FALSE MemberReference clause equals BlockStatement StatementExpression MethodInvocation MethodInvocation Literal system assertions" MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation commandIterator Literal add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator assertion Cast ReferenceType MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation assertion toCommand StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "adding assertion " MemberReference arg MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation commandIterator MemberReference arg add	0
MethodDeclaration Modifier public handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference systemError Literal null BlockStatement StatementExpression MethodInvocation systemError MemberReference output print	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference mypackage BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Package/module must be set." IfStatement BinaryOperation == Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Destfile must be set." IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference mystartTag BinaryOperation == Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Start tag or start date must be set." IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference mystartTag BinaryOperation != Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only one of start tag and start date " Literal "must be set." IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference myendTag BinaryOperation == Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "End tag or end date must be set." IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference myendTag BinaryOperation != Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only one of end tag and end date must " Literal "be set."	0
MethodDeclaration Modifier public setCommand FormalParameter ReferenceType Commandline cmdl ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the command attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean isValidRmiRemote FormalParameter ReferenceType String classname TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator testClass MethodInvocation loader MemberReference classname loadClass IfStatement BinaryOperation && BinaryOperation && MethodInvocation testClass isInterface MemberReference ! iiop MemberReference ! idl BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation MemberReference testClass isValidRmiRemote CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference ERROR_UNABLE_TO_VERIFY_CLASS MemberReference classname MemberReference ERROR_NOT_FOUND MemberReference Project MSG_WARN log CatchClause CatchClauseParameter NoClassDefFoundError e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference ERROR_UNABLE_TO_VERIFY_CLASS MemberReference classname MemberReference ERROR_NOT_DEFINED MemberReference Project MSG_WARN log CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference ERROR_UNABLE_TO_VERIFY_CLASS MemberReference classname MemberReference ERROR_LOADING_CAUSED_EXCEPTION MethodInvocation t getMessage MemberReference Project MSG_WARN log ReturnStatement Literal false	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private scanme LocalVariableDeclaration ReferenceType Resource VariableDeclarator thisresource ClassCreator ReferenceType Resource MethodInvocation src getName MethodInvocation src isExists MethodInvocation src getLastModified IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference lastScannedResource Literal null MethodInvocation lastScannedResource MethodInvocation MethodInvocation thisresource getName equals getName BinaryOperation == MethodInvocation lastScannedResource getLastModified MethodInvocation thisresource getLastModified BlockStatement ReturnStatement StatementExpression MethodInvocation init StatementExpression MethodInvocation fileEntries clear StatementExpression MethodInvocation dirEntries clear StatementExpression MethodInvocation matchFileEntries clear StatementExpression MethodInvocation matchDirEntries clear StatementExpression MethodInvocation MemberReference src MemberReference encoding MemberReference fileEntries MemberReference matchFileEntries MemberReference dirEntries MemberReference matchDirEntries fillMapsFromArchive StatementExpression Assignment MemberReference lastScannedResource MemberReference thisresource =	0
MethodDeclaration Modifier public FormalParameter ReferenceType SysProperties sysp StatementExpression MethodInvocation sysProperties MemberReference sysp	0
MethodDeclaration Modifier public BasicType boolean doGet FormalParameter BasicType int logLevel FormalParameter ReferenceType DownloadProgress progress IOException IfStatement BinaryOperation == MemberReference source Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "src attribute is required" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "dest attribute is required" MethodInvocation getLocation IfStatement BinaryOperation && MethodInvocation dest exists MethodInvocation dest isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The specified destination is a directory" MethodInvocation getLocation IfStatement BinaryOperation && MethodInvocation dest exists MethodInvocation ! dest canWrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Can't write to " MethodInvocation dest getAbsolutePath MethodInvocation getLocation IfStatement BinaryOperation == MemberReference progress Literal null BlockStatement StatementExpression Assignment MemberReference progress ClassCreator ReferenceType NullProgress = StatementExpression MethodInvocation BinaryOperation + Literal "Getting: " MemberReference source MemberReference logLevel log StatementExpression MethodInvocation BinaryOperation + Literal "To: " MethodInvocation dest getAbsolutePath MemberReference logLevel log LocalVariableDeclaration BasicType long VariableDeclarator Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator hasTimestamp Literal false IfStatement BinaryOperation && MemberReference useTimestamp MethodInvocation dest exists BlockStatement StatementExpression Assignment MemberReference MethodInvocation dest lastModified = IfStatement MemberReference verbose BlockStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator t ClassCreator ReferenceType Date MemberReference StatementExpression MethodInvocation BinaryOperation + Literal "local file date : " MethodInvocation t toString MemberReference logLevel log StatementExpression Assignment MemberReference hasTimestamp Literal true = LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator connection MethodInvocation source openConnection IfStatement MemberReference hasTimestamp BlockStatement StatementExpression MethodInvocation connection MemberReference setIfModifiedSince IfStatement BinaryOperation || BinaryOperation != MemberReference uname Literal null BinaryOperation != MemberReference pword Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator up BinaryOperation + BinaryOperation + MemberReference uname Literal ":" MemberReference pword LocalVariableDeclaration ReferenceType String VariableDeclarator encoding LocalVariableDeclaration ReferenceType Base64Converter VariableDeclarator encoder ClassCreator ReferenceType Base64Converter StatementExpression Assignment MemberReference encoding MethodInvocation encoder MethodInvocation up getBytes encode = StatementExpression MethodInvocation connection Literal BinaryOperation + Literal "Basic " MemberReference encoding setRequestProperty StatementExpression MethodInvocation connection connect IfStatement BinaryOperation instanceof MemberReference connection ReferenceType HttpURLConnection BlockStatement LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator httpConnection Cast ReferenceType HttpURLConnection MemberReference connection LocalVariableDeclaration BasicType long VariableDeclarator lastModified MethodInvocation httpConnection getLastModified IfStatement BinaryOperation || BinaryOperation == MethodInvocation httpConnection getResponseCode MemberReference HttpURLConnection HTTP_NOT_MODIFIED BinaryOperation && BinaryOperation && BinaryOperation != MemberReference lastModified Literal 0 MemberReference hasTimestamp BinaryOperation >= MemberReference MemberReference lastModified BlockStatement StatementExpression MethodInvocation Literal "Not modified - so not downloaded" MemberReference logLevel log ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation httpConnection getResponseCode MemberReference HttpURLConnection HTTP_UNAUTHORIZED BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal "HTTP Authorization failure" IfStatement MemberReference ignoreErrors BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference logLevel log ReturnStatement Literal false BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 3 MemberReference ++ i BlockStatement TryStatement StatementExpression Assignment MemberReference is MethodInvocation connection getInputStream = BreakStatement CatchClause CatchClauseParameter IOException ex StatementExpression MethodInvocation BinaryOperation + Literal "Error opening connection " MemberReference ex MemberReference logLevel log IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Can't get " MemberReference source Literal " to " MemberReference dest MemberReference logLevel log IfStatement MemberReference ignoreErrors BlockStatement ReturnStatement Literal false ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Can't get " MemberReference source Literal " to " MemberReference dest MethodInvocation getLocation LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference dest StatementExpression MethodInvocation progress beginDownload LocalVariableDeclaration BasicType boolean VariableDeclarator finished Literal false TryStatement LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 100 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator length WhileStatement BinaryOperation >= Assignment MemberReference length MethodInvocation is MemberReference buffer read = Literal 0 BlockStatement StatementExpression MethodInvocation fos MemberReference buffer Literal 0 MemberReference length write StatementExpression MethodInvocation progress onTick StatementExpression Assignment MemberReference finished Literal true = StatementExpression MethodInvocation FileUtils MemberReference fos close StatementExpression MethodInvocation FileUtils MemberReference is close IfStatement MemberReference ! finished BlockStatement StatementExpression MethodInvocation dest delete StatementExpression MethodInvocation progress endDownload IfStatement MemberReference useTimestamp BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator remoteTimestamp MethodInvocation connection getLastModified IfStatement MemberReference verbose BlockStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator t ClassCreator ReferenceType Date MemberReference remoteTimestamp StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "last modified = " MethodInvocation t toString TernaryExpression BinaryOperation == MemberReference remoteTimestamp Literal 0 Literal " - using current time instead" Literal "" MemberReference logLevel log IfStatement BinaryOperation != MemberReference remoteTimestamp Literal 0 BlockStatement StatementExpression MethodInvocation FILE_UTILS MemberReference dest MemberReference remoteTimestamp setFileLastModified ReturnStatement Literal true	1
MethodDeclaration Modifier public write FormalParameter BasicType byte buf FormalParameter BasicType int off FormalParameter BasicType int len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector BinaryOperation + MemberReference off MemberReference i buf write	1
MethodDeclaration Modifier public setJavafiles FormalParameter BasicType boolean javafiles StatementExpression Assignment This MemberReference javafiles MemberReference javafiles =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference DEFAULT_EXTENSION	0
MethodDeclaration Modifier public BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileList MethodInvocation MethodInvocation getProject getRef ReturnStatement MethodInvocation filenames size	1
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String desc StatementExpression Assignment MemberReference description MemberReference desc =	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation MethodInvocation getLineNumber getLocation MemberReference Project MSG_INFO log	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File prepend StatementExpression Assignment This MemberReference prepend MemberReference prepend =	0
MethodDeclaration Modifier public ReferenceType Enumeration getFileDependencies IfStatement MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "File dependencies are not supported " Literal "by this analyzer" IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference fileDependencies MemberReference determineDependencies ReturnStatement MethodInvocation fileDependencies elements	1
MethodDeclaration Modifier protected BasicType int getMode FormalParameter BasicType int mode LocalVariableDeclaration BasicType int VariableDeclarator type MemberReference FILE_FLAG IfStatement MethodInvocation isLink BlockStatement StatementExpression Assignment MemberReference type MemberReference LINK_FLAG = IfStatement MethodInvocation isDirectory BlockStatement StatementExpression Assignment MemberReference type MemberReference DIR_FLAG = ReturnStatement BinaryOperation | MemberReference type BinaryOperation & MemberReference mode MemberReference	0
MethodDeclaration Modifier public testCheckinExceptions StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/optional/sos/sos.xml" configureProject StatementExpression MethodInvocation Literal Literal "some cause" Literal "sosserverpath attribute must be set!" expectSpecificBuildException StatementExpression MethodInvocation Literal Literal "some cause" Literal "username attribute must be set!" expectSpecificBuildException StatementExpression MethodInvocation Literal Literal "some cause" Literal "vssserverpath attribute must be set!" expectSpecificBuildException StatementExpression MethodInvocation Literal Literal "some cause" Literal "projectpath attribute must be set!" expectSpecificBuildException	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType ContainsSelector	1
MethodDeclaration ReferenceType Extension toExtension BuildException IfStatement BinaryOperation == Literal null MemberReference extensionName BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal is missing name." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message LocalVariableDeclaration ReferenceType String VariableDeclarator specificationVersionString Literal null IfStatement BinaryOperation != Literal null MemberReference specificationVersion BlockStatement StatementExpression Assignment MemberReference specificationVersionString MethodInvocation specificationVersion toString = LocalVariableDeclaration ReferenceType String VariableDeclarator implementationVersionString Literal null IfStatement BinaryOperation != Literal null MemberReference implementationVersion BlockStatement StatementExpression Assignment MemberReference implementationVersionString MethodInvocation implementationVersion toString = ReturnStatement ClassCreator ReferenceType Extension MemberReference extensionName MemberReference specificationVersionString MemberReference specificationVendor MemberReference implementationVersionString MemberReference implementationVendor MemberReference implementationVendorID MemberReference implementationURL	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation LINES_KEY MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression Assignment MemberReference lines ClassCreator MethodInvocation longValue ReferenceType Long MemberReference ArraySelector MemberReference i MethodInvocation getValue params = ContinueStatement IfStatement MethodInvocation SKIP_KEY MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression Assignment MemberReference skip ClassCreator MethodInvocation longValue ReferenceType Long MemberReference ArraySelector MemberReference i MethodInvocation getValue params = ContinueStatement	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType getSrcdir ReturnStatement MemberReference src	0
MethodDeclaration Modifier private static transferFormatters FormalParameter ReferenceType runner FormalParameter ReferenceType JUnitTest test StatementExpression MethodInvocation runner ClassCreator ReferenceType JUnitResultFormatter MethodDeclaration Modifier public startTestSuite FormalParameter ReferenceType JUnitTest suite BuildException MethodDeclaration Modifier public endTestSuite FormalParameter ReferenceType JUnitTest suite BuildException MethodDeclaration Modifier public setOutput FormalParameter ReferenceType OutputStream out MethodDeclaration Modifier public FormalParameter ReferenceType String out MethodDeclaration Modifier public FormalParameter ReferenceType String err MethodDeclaration Modifier public addError FormalParameter ReferenceType Test arg0 FormalParameter ReferenceType Throwable arg1 MethodDeclaration Modifier public addFailure FormalParameter ReferenceType Test arg0 FormalParameter ReferenceType AssertionFailedError arg1 MethodDeclaration Modifier public FormalParameter ReferenceType Test arg0 MethodDeclaration Modifier public FormalParameter ReferenceType Test arg0 StatementExpression MethodInvocation MethodInvocation JUnitVersionHelper MemberReference arg0 getTestCaseName registerTestCase addFormatter ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation fromCmdLine size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator fe Cast ReferenceType FormatterElement MethodInvocation fromCmdLine MemberReference i elementAt IfStatement BinaryOperation && MemberReference multipleTests MethodInvocation fe BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator destFile ClassCreator ReferenceType File MethodInvocation test getTodir BinaryOperation + MethodInvocation test getOutfile MethodInvocation fe getExtension StatementExpression MethodInvocation fe MemberReference destFile setOutfile StatementExpression MethodInvocation runner Cast ReferenceType JUnitResultFormatter MethodInvocation fe createFormatter addFormatter	1
MethodDeclaration Modifier public FormalParameter ReferenceType IsTrue test StatementExpression MethodInvocation conditions MemberReference test addElement	0
MethodDeclaration Modifier private doLog FormalParameter ReferenceType SAXParseException e FormalParameter BasicType int logLevel StatementExpression MethodInvocation MethodInvocation MemberReference e getMessage MemberReference logLevel log	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference specificationTitle	0
MethodDeclaration Modifier public setError FormalParameter ReferenceType File error StatementExpression Assignment This MemberReference error MemberReference error = StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration * override of * @return true */ Modifier protected BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType File resolveFile FormalParameter ReferenceType String fileName ReturnStatement MethodInvocation FILE_UTILS MemberReference baseDir MemberReference fileName resolveFile	0
MethodDeclaration Modifier public ReferenceType String getErrorProperty ReturnStatement MemberReference errorProperty	0
MethodDeclaration Modifier public synchronized ReferenceType String StatementExpression MethodInvocation slowScan LocalVariableDeclaration ReferenceType String VariableDeclarator directories ArrayCreator ReferenceType String MethodInvocation dirsExcluded size StatementExpression MethodInvocation dirsExcluded MemberReference directories copyInto ReturnStatement MemberReference directories	0
MethodDeclaration Modifier protected ReferenceType Resource getResource LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation getFile IfStatement BinaryOperation != MemberReference f Literal null BlockStatement ReturnStatement ClassCreator ReferenceType FileResource MemberReference f BlockStatement ReturnStatement MemberReference src	0
MethodDeclaration Modifier public testFileSet LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType FileSet VariableDeclarator f ClassCreator ReferenceType FileSet StatementExpression MethodInvocation f MemberReference project setProject StatementExpression MethodInvocation f MethodInvocation project Literal "." resolveFile setDir StatementExpression MethodInvocation f Literal "build.xml" setIncludes StatementExpression MethodInvocation p MemberReference f addFileset LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation MethodInvocation project MethodInvocation getAbsolutePath Literal "build.xml" resolveFile MemberReference ArraySelector Literal 0 l assertEquals	0
MethodDeclaration Modifier public synchronized final ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType BaseResourceCollectionWrapper MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement ClassCreator ReferenceType FailFast This MethodInvocation MethodInvocation iterator cacheCollection	0
MethodDeclaration Modifier private createTransformer Exception IfStatement BinaryOperation == MemberReference templates Literal null BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference transformer MethodInvocation templates newTransformer = StatementExpression MethodInvocation transformer This setErrorListener IfStatement BinaryOperation != MemberReference uriResolver Literal null BlockStatement StatementExpression MethodInvocation transformer MemberReference uriResolver ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation outputProperties size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator pair Cast ReferenceType String MethodInvocation outputProperties MemberReference i elementAt StatementExpression MethodInvocation transformer MemberReference ArraySelector Literal 0 pair MemberReference ArraySelector Literal 1 pair setOutputProperty	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier protected ReferenceType createUnifiedSourcePath LocalVariableDeclaration ReferenceType VariableDeclarator p TernaryExpression BinaryOperation == MemberReference path Literal null ClassCreator ReferenceType MethodInvocation getProject Cast ReferenceType MethodInvocation path clone LocalVariableDeclaration ReferenceType Vector VariableDeclarator s MethodInvocation createUnifiedSources LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation s elements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation p Cast ReferenceType FileSet MethodInvocation e nextElement add ReturnStatement MemberReference p	0
MethodDeclaration Modifier public addFilename FormalParameter ReferenceType FilenameSelector selector StatementExpression MethodInvocation fileset MemberReference selector addFilename	1
MethodDeclaration Modifier public setOsFamily FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MethodInvocation MemberReference Locale US toLowerCase =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference realThing	0
MethodDeclaration Modifier public FormalParameter ReferenceType String propertyName StatementExpression Assignment MemberReference MemberReference propertyName =	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getAuthor Literal "\n" MethodInvocation getDate Literal "\n" MethodInvocation getFiles Literal "\n" MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType AbstractFileSet getRef FormalParameter ReferenceType Project p StatementExpression MethodInvocation MemberReference p dieOnCircularReference LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MethodInvocation MemberReference p getReferencedObject getRefid IfStatement BinaryOperation instanceof MemberReference o ReferenceType ZipFileSet BlockStatement ReturnStatement Cast ReferenceType AbstractFileSet MemberReference o IfStatement BinaryOperation instanceof MemberReference o ReferenceType FileSet BlockStatement LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator zfs ClassCreator ReferenceType ZipFileSet Cast ReferenceType FileSet MemberReference o StatementExpression MethodInvocation MemberReference zfs configureFileSet ReturnStatement MemberReference zfs BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + MethodInvocation MethodInvocation getRefId getRefid Literal " doesn\'t a zipfileset or a fileset" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c/d" StatementExpression MethodInvocation MemberReference d assertFileIsNotPresent LocalVariableDeclaration ReferenceType String VariableDeclarator c BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c" StatementExpression MethodInvocation MemberReference c assertFileIsPresent StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal "dangling" indexOf getFullLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean expandProperties StatementExpression Assignment This MemberReference expandProperties MemberReference expandProperties =	0
MethodDeclaration Modifier private ReferenceType URL getLibPathURLs FormalParameter ReferenceType String cpString FormalParameter ReferenceType List libPaths MalformedURLException LocalVariableDeclaration ReferenceType List VariableDeclarator libPathURLs ClassCreator ReferenceType ArrayList IfStatement BinaryOperation != MemberReference cpString Literal null BlockStatement StatementExpression MethodInvocation MemberReference cpString Literal false MemberReference libPathURLs addPath ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation libPaths iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator libPath Cast ReferenceType String MethodInvocation i next StatementExpression MethodInvocation MemberReference libPath Literal true MemberReference libPathURLs addPath ReturnStatement Cast ReferenceType URL MethodInvocation libPathURLs ArrayCreator ReferenceType URL MethodInvocation libPathURLs size toArray	1
MethodDeclaration * get an input stream from a * This code tries to fix a problem found in HttpURLConnection, * any to get the response code would trigger a * BugParade ID 4160499 * * "If the requested file does not exist, and ends in .html, .htm, .txt or /, * will get the error stream with no exception thrown. If the file does not * like any of these you can catch the exception and immediately request it * to get the error stream. The response code can be obtained * * * which means, to really get the response code you need to ask twice. More to the * this handling is not consistent across JVMs: on java 1.3 you can ask as often as you * but you are not going to get the input stream on a JSP page when it has some 500 class * @param connection the current * @return the input * @throws IOException if anything other than file not found gets * and even a FileNotFound exception if that gets thrown too many */ Modifier protected ReferenceType InputStream getInputStream FormalParameter ReferenceType URLConnection connection IOException LocalVariableDeclaration ReferenceType IOException VariableDeclarator swallowed Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator instream Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator attempts Literal 0 BinaryOperation < MemberReference attempts Literal 5 MemberReference ++ attempts BlockStatement TryStatement StatementExpression Assignment MemberReference instream MethodInvocation connection getInputStream = BreakStatement CatchClause CatchClauseParameter FileNotFoundException ex StatementExpression MethodInvocation Literal "Swallowed IO exception in getInputStream" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation ex toString MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference swallowed MemberReference ex = IfStatement BinaryOperation && BinaryOperation == MemberReference instream Literal null BinaryOperation != MemberReference swallowed Literal null BlockStatement ThrowStatement MemberReference swallowed ReturnStatement MemberReference instream	1
MethodDeclaration Modifier public FormalParameter ReferenceType String nodePackage StatementExpression MethodInvocation optionalAttrs MemberReference MemberReference nodePackage put	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the executable" Literal " attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly ReturnStatement BinaryOperation && MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef	0
MethodDeclaration Modifier protected BasicType int transferFiles FormalParameter Modifier final ReferenceType FTPClient ftp FormalParameter ReferenceType FileSet fs IOException BuildException LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds IfStatement BinaryOperation == MemberReference action MemberReference SEND_FILES BlockStatement StatementExpression Assignment MemberReference ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner = BlockStatement IfStatement BinaryOperation != MethodInvocation fs MemberReference length MethodInvocation getProject getSelectors Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "selectors are not supported in remote MemberReference Project MSG_WARN log getProject StatementExpression Assignment MemberReference ds ClassCreator ReferenceType FTPDirectoryScanner MemberReference ftp = StatementExpression MethodInvocation fs MemberReference ds MethodInvocation getProject setupDirectoryScanner StatementExpression MethodInvocation ds MethodInvocation fs isFollowSymlinks setFollowSymlinks StatementExpression MethodInvocation ds scan LocalVariableDeclaration ReferenceType String VariableDeclarator dsfiles Literal null IfStatement BinaryOperation == MemberReference action MemberReference RM_DIR BlockStatement StatementExpression Assignment MemberReference dsfiles MethodInvocation ds getIncludedDirectories = BlockStatement StatementExpression Assignment MemberReference dsfiles MethodInvocation ds getIncludedFiles = LocalVariableDeclaration ReferenceType String VariableDeclarator dir Literal null IfStatement BinaryOperation && BinaryOperation == MethodInvocation ds getBasedir Literal null BinaryOperation || BinaryOperation == MemberReference action MemberReference SEND_FILES BinaryOperation == MemberReference action MemberReference GET_FILES BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "the dir attribute must be set for send " Literal "and get actions" BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference action MemberReference SEND_FILES BinaryOperation == MemberReference action MemberReference GET_FILES BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation ds MethodInvocation getAbsolutePath getBasedir = LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator bw Literal null TryStatement IfStatement BinaryOperation == MemberReference action MemberReference LIST_FILES BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pd MethodInvocation listing getParentFile IfStatement MethodInvocation ! pd exists BlockStatement StatementExpression MethodInvocation pd mkdirs StatementExpression Assignment MemberReference bw ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType FileWriter MemberReference listing = LocalVariableDeclaration ReferenceType RetryHandler VariableDeclarator h ClassCreator ReferenceType RetryHandler This MemberReference retriesAllowed This IfStatement BinaryOperation == MemberReference action MemberReference RM_DIR BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference dsfiles length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator dsfile MemberReference ArraySelector MemberReference i dsfiles StatementExpression MethodInvocation MemberReference h ClassCreator ReferenceType Retryable MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference ftp MemberReference dsfile rmDir MemberReference dsfile executeRetryable BlockStatement LocalVariableDeclaration Modifier final ReferenceType BufferedWriter VariableDeclarator fbw MemberReference bw LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator fdir MemberReference dir IfStatement This MemberReference newerOnly BlockStatement StatementExpression Assignment This MemberReference granularityMillis This MemberReference timestampGranularity MethodInvocation MemberReference action getMilliseconds = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dsfiles length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator dsfile MemberReference ArraySelector MemberReference i dsfiles StatementExpression MethodInvocation MemberReference h ClassCreator ReferenceType Retryable MethodDeclaration Modifier public execute IOException SwitchStatement MemberReference action SwitchStatementCase SEND_FILES StatementExpression MethodInvocation MemberReference ftp MemberReference fdir MemberReference dsfile sendFile BreakStatement SwitchStatementCase GET_FILES StatementExpression MethodInvocation MemberReference ftp MemberReference fdir MemberReference dsfile getFile BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference ftp MemberReference dsfile delFile BreakStatement SwitchStatementCase LIST_FILES StatementExpression MethodInvocation MemberReference ftp MemberReference fbw MemberReference dsfile listFile BreakStatement SwitchStatementCase CHMOD StatementExpression MethodInvocation MemberReference ftp BinaryOperation + BinaryOperation + BinaryOperation + Literal "chmod " MemberReference chmod Literal " " MethodInvocation MemberReference dsfile resolveFile doSiteCommand StatementExpression MemberReference ++ transferred BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "unknown ftp action " MemberReference action MemberReference dsfile executeRetryable IfStatement BinaryOperation != MemberReference bw Literal null BlockStatement StatementExpression MethodInvocation bw close ReturnStatement MemberReference dsfiles length	1
MethodDeclaration Modifier public synchronized setInputString FormalParameter ReferenceType String inputString StatementExpression Assignment This MemberReference inputString MemberReference inputString =	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator s ClassCreator MethodInvocation trim ReferenceType String MemberReference buf MemberReference start MemberReference count IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected text \"" MemberReference s Literal "\"" MemberReference context locator	0
MethodDeclaration Modifier protected ReferenceType AbstractFileSet getInstance ReturnStatement ClassCreator ReferenceType ZipFileSet	1
MethodDeclaration Modifier public setLocalpath FormalParameter ReferenceType localPath StatementExpression Assignment This MemberReference localPath MethodInvocation localPath toString =	0
MethodDeclaration Modifier public setMillis FormalParameter BasicType long millis StatementExpression Assignment This MemberReference millis MemberReference millis =	0
MethodDeclaration Modifier public setSrc FormalParameter ReferenceType File src StatementExpression Assignment This MemberReference messageSource MemberReference src =	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String language StatementExpression MethodInvocation helper MemberReference language setLanguage	0
MethodDeclaration Modifier public setOutfile FormalParameter ReferenceType File outfile StatementExpression Assignment This MemberReference outfile MemberReference outfile =	0
MethodDeclaration Modifier public testSimple StatementExpression MethodInvocation Literal "simple" Literal "Hello world" expectLog	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "teardown" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getUrl ReturnStatement MemberReference url	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation helper This setProjectComponent StatementExpression MethodInvocation helper Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType String className StatementExpression Assignment This MemberReference className MemberReference className =	0
MethodDeclaration Modifier public static ReferenceType String getSuiteName FormalParameter ReferenceType String text LocalVariableDeclaration BasicType int VariableDeclarator p1 MethodInvocation text Literal '(' indexOf LocalVariableDeclaration BasicType int VariableDeclarator p2 MethodInvocation text Literal ')' MemberReference p1 indexOf ReturnStatement MethodInvocation text BinaryOperation + MemberReference p1 Literal 1 MemberReference p2 substring	0
MethodDeclaration Modifier public setJvmargs FormalParameter ReferenceType String s StatementExpression MethodInvocation BinaryOperation + Literal "The attribute is deprecated. " Literal "Please use MemberReference Project MSG_WARN log StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference s setLine getCommandLine	0
MethodDeclaration Modifier public testSearchParents StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected BasicType boolean getSemanticAttributes ReturnStatement This MemberReference semanticAttributes	0
MethodDeclaration Modifier public FormalParameter BasicType boolean buildNodeFiles StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference buildNodeFiles MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public synchronized BasicType int getIncludedFilesCount IfStatement BinaryOperation == MemberReference included Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException ReturnStatement MethodInvocation included size	1
MethodDeclaration Modifier public setSimulationmode FormalParameter BasicType boolean simulationmode StatementExpression Assignment This MemberReference simulationmode MemberReference simulationmode =	0
MethodDeclaration Modifier protected zipFile FormalParameter ReferenceType InputStream is FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType long lastModified FormalParameter ReferenceType File fromArchive FormalParameter BasicType int mode IOException IfStatement MethodInvocation MANIFEST_NAME MemberReference vPath equalsIgnoreCase BlockStatement IfStatement BinaryOperation || MemberReference ! doubleFilePass BinaryOperation && MemberReference doubleFilePass MemberReference skipWriting BlockStatement StatementExpression MethodInvocation MemberReference fromArchive MemberReference is filesetManifest IfStatement BinaryOperation && MethodInvocation INDEX_NAME MemberReference vPath equalsIgnoreCase MemberReference index BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: selected " MemberReference archiveType Literal " files include a META-INF/INDEX.LIST which will" Literal " be replaced by a newly generated one." MemberReference Project MSG_WARN log BlockStatement IfStatement BinaryOperation && MemberReference index BinaryOperation == MethodInvocation vPath Literal "/" indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation rootEntries MemberReference vPath addElement StatementExpression SuperMethodInvocation MemberReference is MemberReference zOut MemberReference vPath MemberReference lastModified MemberReference fromArchive MemberReference mode zipFile	1
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool LocalVariableDeclaration ReferenceType ClassCPInfo VariableDeclarator interfaceMethodClass Cast ReferenceType ClassCPInfo MethodInvocation constantPool MemberReference classIndex getEntry StatementExpression MethodInvocation interfaceMethodClass MemberReference constantPool resolve StatementExpression Assignment MemberReference MethodInvocation interfaceMethodClass getClassName = LocalVariableDeclaration ReferenceType NameAndTypeCPInfo VariableDeclarator nt Cast ReferenceType NameAndTypeCPInfo MethodInvocation constantPool MemberReference nameAndTypeIndex getEntry StatementExpression MethodInvocation nt MemberReference constantPool resolve StatementExpression Assignment MemberReference MethodInvocation nt getName = StatementExpression Assignment MemberReference MethodInvocation nt getType = StatementExpression SuperMethodInvocation MemberReference constantPool resolve	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation task getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public setLongFileMode FormalParameter BasicType int longFileMode StatementExpression Assignment This MemberReference longFileMode MemberReference longFileMode =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "reports1" executeTarget IfStatement ClassCreator MethodInvocation exists ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/junit-noframes.html" BlockStatement StatementExpression MethodInvocation Literal "No file junit-noframes.html expected" fail	0
MethodDeclaration Modifier protected ReferenceType Object getCheckedRef FormalParameter Modifier final ReferenceType Class requiredClass FormalParameter Modifier final ReferenceType String dataTypeName ReturnStatement MethodInvocation MemberReference requiredClass MemberReference dataTypeName MethodInvocation getProject getCheckedRef	0
MethodDeclaration Modifier public dispatchEvent FormalParameter ReferenceType TestRunEvent evt LocalVariableDeclaration Modifier final ReferenceType Integer VariableDeclarator type ClassCreator ReferenceType Integer MethodInvocation evt getType LocalVariableDeclaration Modifier final ReferenceType EventAction VariableDeclarator action Cast ReferenceType EventAction MethodInvocation eventMap MemberReference type get IfStatement BinaryOperation == MemberReference action Literal null BlockStatement ReturnStatement SynchronizedStatement MemberReference listeners LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation listeners size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType TestRunListener VariableDeclarator listener Cast ReferenceType TestRunListener MethodInvocation listeners MemberReference i get StatementExpression MethodInvocation action MemberReference listener MemberReference evt dispatch	1
MethodDeclaration Modifier public FormalParameter BasicType boolean ct StatementExpression Assignment MemberReference mCtime MemberReference ct =	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference liaison MethodInvocation createLiaison =	0
MethodDeclaration Modifier private BasicType boolean hasScript FormalParameter ReferenceType String test TryStatement StatementExpression MethodInvocation Literal "hasscript" executeTarget CatchClause CatchClauseParameter Throwable ex StatementExpression MethodInvocation System.out BinaryOperation + MemberReference test Literal ": skipped - script not present " println ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier private verifyBorlandJarV4 FormalParameter ReferenceType File sourceJar LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType taskdefs ReferenceType Java VariableDeclarator javaTask Literal null StatementExpression MethodInvocation BinaryOperation + Literal BAS " MemberReference sourceJar MemberReference Project MSG_INFO log TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator args MemberReference verifyArgs StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MethodInvocation sourceJar getPath += StatementExpression Assignment MemberReference javaTask ClassCreator ReferenceType Java MethodInvocation getTask = StatementExpression MethodInvocation javaTask Literal "verify" setTaskName StatementExpression MethodInvocation javaTask MemberReference VERIFY setClassname LocalVariableDeclaration ReferenceType Commandline ReferenceType VariableDeclarator arguments MethodInvocation javaTask createArg StatementExpression MethodInvocation arguments MemberReference args setLine LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation getCombinedClasspath IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation javaTask MemberReference classpath setClasspath StatementExpression MethodInvocation javaTask Literal true setFork StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Calling " MemberReference VERIFY Literal " for " MethodInvocation sourceJar toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation javaTask execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Exception while calling " MemberReference VERIFY Literal " Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier public ReferenceType String getPattern ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String extensionName StatementExpression MethodInvocation verifyNotAReference StatementExpression Assignment This MemberReference extensionName MemberReference extensionName =	0
MethodDeclaration Modifier public synchronized appendIncludes FormalParameter ReferenceType String includes IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation != MemberReference includes Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation defaultPatterns MethodInvocation MemberReference ArraySelector MemberReference i includes setName createInclude StatementExpression Assignment MemberReference directoryScanner Literal null =	1
MethodDeclaration Modifier public testSelectionBehaviour LocalVariableDeclaration ReferenceType PresentSelector VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator identity ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation identity Literal "identity" setValue LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator glob ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation glob Literal "glob" setValue LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator merge ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation merge Literal "merge" setValue LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator flatten ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation flatten Literal setValue TryStatement StatementExpression MethodInvocation makeBed StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTTTTTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference identity setType StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTTTTTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType File VariableDeclarator subdir ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal StatementExpression MethodInvocation s MemberReference subdir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference flatten setType StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference merge setType StatementExpression MethodInvocation m Literal "asf-logo.gif.gz" StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTTTTTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = StatementExpression Assignment MemberReference subdir ClassCreator ReferenceType File MemberReference beddir Literal "tar/bz2" = StatementExpression MethodInvocation s MemberReference subdir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference glob setType StatementExpression MethodInvocation m Literal "*.bz2" StatementExpression MethodInvocation m Literal "*.tar.bz2" StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals TryStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = StatementExpression Assignment MemberReference subdir MethodInvocation MethodInvocation Literal "selectortest2" resolveFile getProject = StatementExpression MethodInvocation s MemberReference subdir setTargetdir StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal "TTTFFTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTTFFTTTTTTT" MemberReference results assertEquals StatementExpression MethodInvocation StatementExpression MethodInvocation cleanupBed	0
MethodDeclaration Modifier public BasicType boolean isMarkersforall ReturnStatement MemberReference markersforall	0
MethodDeclaration Modifier private checkParameters BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference type MemberReference Type STRING_TYPE BinaryOperation == MemberReference operation MemberReference Operation DECREMENT_OPER BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "- is not supported for string " Literal "properties (key:" MemberReference key Literal ")" IfStatement BinaryOperation && BinaryOperation == MemberReference value Literal null BinaryOperation == MemberReference defaultValue Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "\"value\" and/or \"default\" " Literal must be specified (key:" MemberReference key Literal ")" IfStatement BinaryOperation == MemberReference key Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "key is mandatory" IfStatement BinaryOperation && BinaryOperation == MemberReference type MemberReference Type STRING_TYPE BinaryOperation != MemberReference pattern Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "pattern is not supported for string " Literal "properties (key:" MemberReference key Literal ")"	1
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation Literal "\"" setValue createArgument IfStatement BinaryOperation != MethodInvocation getPlatform Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_PLATFORM setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getPlatform setValue createArgument IfStatement BinaryOperation != MethodInvocation getResolver Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getResolver setValue createArgument IfStatement BinaryOperation != MethodInvocation getSubSystem Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation getSubSystem Literal "\"" setValue createArgument IfStatement BinaryOperation != MethodInvocation getRelease Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getRelease setValue createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public addFailure FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t StatementExpression MethodInvocation Literal "\tFAILED" MemberReference test MemberReference t formatError	0
MethodDeclaration Modifier public setNewProperty FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation PropertyHelper MethodInvocation Literal null MemberReference name MemberReference value setNewProperty This getPropertyHelper	0
MethodDeclaration Modifier public ReferenceType getRefid ReturnStatement MemberReference ref	0
MethodDeclaration Modifier public setInput FormalParameter ReferenceType String input StatementExpression Assignment This MemberReference input MemberReference input =	0
MethodDeclaration Modifier public BasicType boolean isOutOfDate ReturnStatement MemberReference	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileNameMapper fileNameMapper BuildException LocalVariableDeclaration ReferenceType Mapper VariableDeclarator mapper ClassCreator ReferenceType Mapper MethodInvocation getProject StatementExpression MethodInvocation mapper MemberReference fileNameMapper add StatementExpression MethodInvocation MemberReference mapper	1
MethodDeclaration Modifier public FormalParameter ReferenceType String tv StatementExpression Assignment MemberReference mTypeValue MemberReference tv =	0
MethodDeclaration Modifier public ReferenceType PatternSet ReferenceType NameEntry createIncludesFile ReturnStatement MethodInvocation fileset createIncludesFile	0
MethodDeclaration Modifier public add FormalParameter ReferenceType StructurePrinter p StatementExpression Assignment MemberReference printer MemberReference p =	0
MethodDeclaration Modifier private test8 FormalParameter ReferenceType String target StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f1 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/test8.xml" IfStatement MethodInvocation ! f1 exists BlockStatement StatementExpression MethodInvocation Literal "The fullpath attribute or the preserveLeadingSlashes attribute does not work propertly" fail	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String key FormalParameter ReferenceType Project callerProject LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator origUE Cast ReferenceType UnknownElement MethodInvocation idReferences MemberReference key get IfStatement BinaryOperation == MemberReference origUE Literal null BlockStatement ReturnStatement TernaryExpression BinaryOperation == MemberReference parentIdProject Literal null Literal null MethodInvocation parentIdProject MemberReference key MemberReference callerProject StatementExpression MethodInvocation callerProject BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: " MemberReference key Literal " has not been set at Literal " but was found MemberReference LINE_SEP Literal file attempting to resolve." Literal " Future versions of Ant may support" MemberReference LINE_SEP Literal " referencing ids defined in targets." MemberReference MSG_WARN log LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator copyUE MethodInvocation origUE MemberReference callerProject copy StatementExpression MethodInvocation copyUE maybeConfigure ReturnStatement MethodInvocation copyUE getRealThing	0
MethodDeclaration Modifier public addPresent FormalParameter ReferenceType PresentSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addPresent	1
MethodDeclaration Modifier public assertPropertyUnset FormalParameter ReferenceType String property StatementExpression MethodInvocation MemberReference property Literal null assertPropertyEquals	0
MethodDeclaration Modifier private BasicType boolean processFilterChain ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator filter Cast ReferenceType MethodInvocation MemberReference i elementAt IfStatement MethodInvocation ! filter process BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation getReplace BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_REPLACE setValue createArgument IfStatement MethodInvocation getObsolete BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement StatementExpression MethodInvocation MemberReference cmd getNusersCommand StatementExpression MethodInvocation MemberReference cmd getCommentCommand IfStatement BinaryOperation && BinaryOperation == MethodInvocation getObjselect Literal null BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Should select either an element " Literal "(pname) or an object (objselect)" StatementExpression MethodInvocation MemberReference cmd getPnameCommand IfStatement BinaryOperation != MethodInvocation getObjselect Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getObjselect setValue createArgument	0
MethodDeclaration Modifier protected setInternalToLabel FormalParameter Modifier final ReferenceType String toLabel StatementExpression Assignment This MemberReference toLabel MemberReference toLabel =	0
MethodDeclaration Modifier public testAll IOException StatementExpression MethodInvocation Literal "forked" executeTarget LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator ps MemberReference System out LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator newps ClassCreator ReferenceType PrintStream ClassCreator ReferenceType FileOutputStream MemberReference f2 StatementExpression MethodInvocation System MemberReference newps setOut StatementExpression MethodInvocation project Literal "unforked" executeTarget StatementExpression MethodInvocation System MemberReference ps setOut StatementExpression MethodInvocation newps close StatementExpression MethodInvocation Literal "Forked - non-forked mismatch" MethodInvocation FILE_UTILS MemberReference f1 MemberReference f2 contentEquals assertTrue	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected ReferenceType Object loadClass FormalParameter ReferenceType String classname FormalParameter ReferenceType String msg FormalParameter ReferenceType Class type TryStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl MethodInvocation getClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz Literal null IfStatement BinaryOperation != MemberReference cl Literal null BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation cl MemberReference classname loadClass = BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference classname forName = LocalVariableDeclaration ReferenceType Object VariableDeclarator rv MethodInvocation clazz newInstance IfStatement MethodInvocation ! type MemberReference rv isInstance BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Specified class (" MemberReference classname Literal ") " MemberReference msg ReturnStatement MemberReference rv CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Specified class (" MemberReference classname Literal ") not found." CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public close IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inShadow This MemberReference in IfStatement BinaryOperation != MemberReference inShadow Literal null BlockStatement TryStatement IfStatement BinaryOperation != MemberReference inShadow MemberReference System in BlockStatement StatementExpression MethodInvocation inShadow close StatementExpression Assignment This MemberReference data Literal null = StatementExpression Assignment This MemberReference in Literal null =	1
MethodDeclaration Modifier public ReferenceType TestSummary getSummary ReturnStatement MemberReference result	0
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only single argument resource collections" Literal " are supported as archives" StatementExpression MethodInvocation Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator setSrcResource	0
MethodDeclaration Modifier public ReferenceType String getAbsolutePath ReturnStatement BinaryOperation + BinaryOperation + MemberReference MemberReference remoteFileSep MethodInvocation ftpFile getName	0
MethodDeclaration Modifier public test3 LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "" Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier private static ReferenceType File FormalParameter ReferenceType String dirName FormalParameter ReferenceType String commandName LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation FILE_UTILS MemberReference dirName normalize LocalVariableDeclaration ReferenceType File VariableDeclarator executable Literal null IfStatement MethodInvocation dir exists BlockStatement StatementExpression Assignment MemberReference executable ClassCreator ReferenceType File MemberReference dir MethodInvocation MemberReference commandName addExtension = IfStatement MethodInvocation ! executable exists BlockStatement StatementExpression Assignment MemberReference executable Literal null = ReturnStatement MemberReference executable	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType CacheName name StatementExpression Assignment MemberReference cacheName MemberReference name =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference listFiles	0
MethodDeclaration Modifier public synchronized timeoutOccured FormalParameter ReferenceType Watchdog w TryStatement TryStatement StatementExpression MethodInvocation process exitValue CatchClause CatchClauseParameter IllegalThreadStateException itse IfStatement MemberReference watch BlockStatement StatementExpression Assignment MemberReference killedProcess Literal true = StatementExpression MethodInvocation process destroy CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference caught MemberReference e = StatementExpression MethodInvocation cleanUp	1
MethodDeclaration Modifier public ReferenceType Text getText ReturnStatement MemberReference text	0
MethodDeclaration * This method is of interest for testing The * Set is live and should not be * @return the Set of directory names that have been */ ReferenceType Set getScannedDirs ReturnStatement MemberReference	0
MethodDeclaration ReferenceType String getServerTimeZoneConfig ReturnStatement MemberReference serverTimeZoneConfig	0
MethodDeclaration Modifier private warnOutOfDateButNotDeleted FormalParameter ReferenceType ClassFileInfo affectedClassInfo FormalParameter ReferenceType String affectedClass FormalParameter ReferenceType String className IfStatement MemberReference affectedClassInfo isUserWarned BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator level MemberReference Project MSG_WARN IfStatement MemberReference ! BlockStatement IfStatement MethodInvocation MemberReference affectedClass MemberReference className isRmiStub BlockStatement StatementExpression Assignment MemberReference level MemberReference Project MSG_VERBOSE = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The class " MemberReference affectedClass Literal " in file " MethodInvocation affectedClassInfo.absoluteFile getPath Literal " is out of date due to " MemberReference className Literal " but has not been deleted because its source file" Literal " could not be determined" MemberReference level log StatementExpression Assignment MemberReference affectedClassInfo isUserWarned Literal true =	1
MethodDeclaration Modifier public addElement FormalParameter ReferenceType nestedElement StatementExpression MethodInvocation nestedElements MemberReference nestedElement add	0
MethodDeclaration Modifier public test8 StatementExpression MethodInvocation Literal "test8" executeTarget	0
MethodDeclaration Modifier public synchronized static ReferenceType IntrospectionHelper getHelper FormalParameter ReferenceType Class c ReturnStatement MethodInvocation Literal null MemberReference c getHelper	0
MethodDeclaration Modifier protected ReferenceType OutputStream getOutputStream ReturnStatement MemberReference out	0
MethodDeclaration Modifier public testManualStop Exception LocalVariableDeclaration Modifier final ReferenceType Process VariableDeclarator process MethodInvocation BinaryOperation * MemberReference TIME_OUT Literal 2 getProcess StatementExpression MethodInvocation watchdog MemberReference process start LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread ClassCreator ReferenceType Thread MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation process waitFor CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Literal "process interrupted in thread" fail StatementExpression MethodInvocation thread start StatementExpression MethodInvocation thread BinaryOperation / MemberReference TIME_OUT Literal 2 join StatementExpression MethodInvocation watchdog stop StatementExpression MethodInvocation thread join StatementExpression MethodInvocation Literal 0 MethodInvocation process exitValue assertEquals StatementExpression MethodInvocation Literal "process should not have been killed" MethodInvocation ! watchdog killedProcess assertTrue	1
MethodDeclaration Modifier public static BasicType boolean isOutOfDate FormalParameter ReferenceType Resource src FormalParameter ReferenceType Resource target FormalParameter BasicType long granularity IfStatement MethodInvocation ! src isExists BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! target isExists BlockStatement ReturnStatement Literal true IfStatement BinaryOperation > BinaryOperation - MethodInvocation src getLastModified MemberReference granularity MethodInvocation target getLastModified BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType String inValue StatementExpression Assignment This MemberReference keepgenerated MethodInvocation Boolean MethodInvocation booleanValue MemberReference inValue valueOf =	1
MethodDeclaration Modifier public static BasicType boolean equals FormalParameter ReferenceType Dictionary d1 FormalParameter ReferenceType Dictionary d2 IfStatement BinaryOperation == MemberReference d1 MemberReference d2 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation || BinaryOperation == MemberReference d1 Literal null BinaryOperation == MemberReference d2 Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation d1 size MethodInvocation d2 size BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e1 MethodInvocation d1 keys WhileStatement MethodInvocation e1 hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator key MethodInvocation e1 nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator value1 MethodInvocation d1 MemberReference key get LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation d2 MemberReference key get IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! value1 MemberReference equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public onTestError FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation MemberReference evt filterEvent StatementExpression SuperMethodInvocation MemberReference evt onTestFailure	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration BasicType int VariableDeclarator exitCode TryStatement LocalVariableDeclaration ReferenceType Launcher VariableDeclarator launcher ClassCreator ReferenceType Launcher StatementExpression Assignment MemberReference exitCode MethodInvocation launcher MemberReference args run = CatchClause CatchClauseParameter LaunchException e StatementExpression Assignment MemberReference exitCode MemberReference EXIT_CODE_ERROR = StatementExpression MethodInvocation System.err MethodInvocation e getMessage println CatchClause CatchClauseParameter Throwable t StatementExpression Assignment MemberReference exitCode MemberReference EXIT_CODE_ERROR = StatementExpression MethodInvocation t MemberReference System err printStackTrace IfStatement BinaryOperation != MemberReference exitCode Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference exitCode exit	1
MethodDeclaration Modifier public synchronized ReferenceType Hashtable getFilterHash IfStatement BinaryOperation == MemberReference filterHash Literal null BlockStatement StatementExpression Assignment MemberReference filterHash ClassCreator ReferenceType Hashtable MethodInvocation MethodInvocation size getFilters = ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation elements getFilters MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Filter VariableDeclarator filter Cast ReferenceType Filter MethodInvocation e nextElement StatementExpression MethodInvocation filterHash MethodInvocation filter getToken MethodInvocation filter getValue put ReturnStatement MemberReference filterHash	1
MethodDeclaration Modifier public endTestSuite FormalParameter ReferenceType JUnitTest suite BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator newLine MethodInvocation System Literal "line.separator" getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Tests run: " StatementExpression MethodInvocation sb MethodInvocation suite runCount append StatementExpression MethodInvocation sb Literal ", Failures: " append StatementExpression MethodInvocation sb MethodInvocation suite failureCount append StatementExpression MethodInvocation sb Literal ", Errors: " append StatementExpression MethodInvocation sb MethodInvocation suite append StatementExpression MethodInvocation sb Literal ", Time elapsed: " append StatementExpression MethodInvocation sb MethodInvocation nf BinaryOperation / MethodInvocation suite getRunTime Literal 1000.0 format append StatementExpression MethodInvocation sb Literal " sec" append StatementExpression MethodInvocation sb MemberReference newLine append IfStatement MemberReference withOutAndErr BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference systemOutput Literal null BinaryOperation > MethodInvocation systemOutput length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference newLine append MethodInvocation MemberReference systemOutput append MethodInvocation MemberReference newLine append Literal "Output:" append IfStatement BinaryOperation && BinaryOperation != MemberReference systemError Literal null BinaryOperation > MethodInvocation systemError length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference newLine append MethodInvocation MemberReference systemError append MethodInvocation MemberReference newLine append Literal "Error: " append TryStatement StatementExpression MethodInvocation out MethodInvocation sb MethodInvocation getBytes toString write StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException ioex ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write summary output" MemberReference ioex IfStatement BinaryOperation && BinaryOperation != MemberReference out MemberReference System out BinaryOperation != MemberReference out MemberReference System err BlockStatement TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public setArgs FormalParameter ReferenceType String args StatementExpression Assignment This MemberReference MemberReference args =	0
MethodDeclaration Modifier public setNewPriority FormalParameter BasicType int newPriority IfStatement BinaryOperation || BinaryOperation < MemberReference newPriority MemberReference Thread MIN_PRIORITY BinaryOperation > MemberReference newPriority MemberReference Thread MAX_PRIORITY BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The thread priority is out of the 1-10" StatementExpression Assignment This MemberReference newPriority ClassCreator ReferenceType Integer MemberReference newPriority =	1
MethodDeclaration Modifier public synchronized checkException BuildException IfStatement BinaryOperation != MemberReference caught Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Exception in " MethodInvocation caught getMessage MemberReference caught	0
MethodDeclaration Modifier private assertExtMethod FormalParameter ReferenceType Object FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class methodArg FormalParameter ReferenceType Object arg FormalParameter ReferenceType Object StatementExpression MethodInvocation Cast ReferenceType Method MemberReference MemberReference methodName MemberReference methodArg MemberReference arg MemberReference assertMethod	0
MethodDeclaration Modifier private destroyTempFiles LocalVariableDeclaration ReferenceType File VariableDeclarator tempFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference testPropsFilePath StatementExpression MethodInvocation tempFile delete StatementExpression Assignment MemberReference tempFile Literal null = StatementExpression Assignment MemberReference tempFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference buildPropsFilePath = StatementExpression MethodInvocation tempFile delete StatementExpression Assignment MemberReference tempFile Literal null = StatementExpression Assignment MemberReference tempFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference = StatementExpression MethodInvocation tempFile delete StatementExpression Assignment MemberReference tempFile Literal null =	0
MethodDeclaration Modifier protected setInternalFileTimeStamp FormalParameter Modifier final ReferenceType CurrentModUpdated StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUrl FormalParameter ReferenceType String url StatementExpression Assignment This MemberReference url MemberReference url =	0
MethodDeclaration Modifier protected checkConfiguration IfStatement MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing attribute parameter" MethodInvocation getLocation StatementExpression SuperMethodInvocation checkConfiguration	1
MethodDeclaration Modifier protected writeJar FormalParameter ReferenceType String baseName FormalParameter ReferenceType File jarfile FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String publicId BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator genericJarFile SuperMethodInvocation MemberReference baseName getVendorOutputJarFile StatementExpression SuperMethodInvocation MemberReference baseName MemberReference genericJarFile MemberReference ejbFiles MemberReference publicId writeJar StatementExpression MethodInvocation MemberReference genericJarFile MemberReference ejbFiles addGenICGeneratedFiles StatementExpression SuperMethodInvocation MemberReference baseName MethodInvocation MemberReference baseName getVendorOutputJarFile MemberReference ejbFiles MemberReference publicId writeJar IfStatement MemberReference ! keepgeneric BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting generic JAR " MethodInvocation genericJarFile toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genericJarFile delete	1
MethodDeclaration Modifier public testAllowSymlinks IfStatement MemberReference ! supportsSymlinks BlockStatement ReturnStatement IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal "symlink-setup" executeTarget getProject LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/" setIncludes StatementExpression MethodInvocation ds Literal true setFollowSymlinks StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project BinaryOperation + MemberReference REC_IN Literal resolveFile MethodInvocation project BinaryOperation + MemberReference REC_DIR Literal resolveFile Literal true contentEquals assertTrue	0
MethodDeclaration Modifier protected handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference attributeName	0
MethodDeclaration * A string to wait for from the * A subTask &lt;read&gt; tag was found. Create the * it in our list, and return * @return a read telnet sub */ Modifier public ReferenceType createRead LocalVariableDeclaration ReferenceType VariableDeclarator task Cast ReferenceType ClassCreator ReferenceType TelnetRead StatementExpression MethodInvocation MemberReference task addElement ReturnStatement MemberReference task	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true setInitialized LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation && BinaryOperation != MemberReference queuedData Literal null BinaryOperation == MethodInvocation queuedData length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData Literal null = IfStatement BinaryOperation != MemberReference queuedData Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation queuedData Literal 0 charAt = StatementExpression Assignment MemberReference queuedData MethodInvocation queuedData Literal 1 substring = IfStatement BinaryOperation == MethodInvocation queuedData length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData Literal null = BlockStatement StatementExpression Assignment MemberReference queuedData MethodInvocation readLine = IfStatement BinaryOperation == MemberReference queuedData Literal null BlockStatement StatementExpression Assignment MemberReference ch Literal - 1 = BlockStatement IfStatement BinaryOperation != MemberReference prefix Literal null BlockStatement StatementExpression Assignment MemberReference queuedData BinaryOperation + MemberReference prefix MemberReference queuedData = ReturnStatement MethodInvocation read ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression MethodInvocation Literal "name" MemberReference name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public ReferenceType ZipShort getCentralDirectoryLength IfStatement BinaryOperation != MemberReference centralData Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ZipShort MemberReference centralData length ReturnStatement MethodInvocation getLocalFileDataLength	0
MethodDeclaration Modifier public setLevel FormalParameter ReferenceType echoLevel StatementExpression Assignment MemberReference logLevel MethodInvocation echoLevel getLevel =	0
MethodDeclaration Modifier public synchronized BasicType boolean isCache ReturnStatement MemberReference cache	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "{dependselector targetdir: " IfStatement BinaryOperation == MemberReference targetdir Literal null BlockStatement StatementExpression MethodInvocation buf Literal "NOT YET SET" append BlockStatement StatementExpression MethodInvocation buf MethodInvocation targetdir getName append StatementExpression MethodInvocation buf Literal " granularity: " append StatementExpression MethodInvocation buf MemberReference granularity append IfStatement BinaryOperation != MemberReference map Literal null BlockStatement StatementExpression MethodInvocation buf Literal " mapper: " append StatementExpression MethodInvocation buf MethodInvocation map toString append IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement StatementExpression MethodInvocation buf Literal " mapper: " append StatementExpression MethodInvocation buf MethodInvocation mapperElement toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation _scanner scan LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation _scanner getIncludedFiles StatementExpression MethodInvocation MemberReference files Literal "java/lang/Exception.class" LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation _scanner getIncludedDirectories StatementExpression MethodInvocation MemberReference dirs Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String uri BuildException IfStatement MethodInvocation uri MemberReference ProjectHelper ANT_CORE_URI equals BlockStatement StatementExpression Assignment MemberReference uri Literal "" = IfStatement MethodInvocation uri Literal "ant:" startsWith BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Attempt to use a URI " MemberReference uri StatementExpression Assignment This MemberReference uri MemberReference uri =	1
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation DOMUtils newDocument LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal "urn:foo" Literal "root" createElementNS StatementExpression MethodInvocation root Literal "urn:foo2" Literal "bar" Literal "baz" LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType DOMElementWriter VariableDeclarator w ClassCreator ReferenceType DOMElementWriter Literal false MemberReference DOMElementWriter.XmlNamespacePolicy ONLY_QUALIFY_ELEMENTS StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + Literal "<root bar=\"baz\" />" MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal true Literal true Literal true Literal false Literal false doTest	0
MethodDeclaration Modifier public IfStatement MethodInvocation Os Literal "dos" isFamily BlockStatement StatementExpression MethodInvocation MethodInvocation FileUtils Literal "/änt" assertTrue StatementExpression MethodInvocation MethodInvocation FileUtils Literal assertTrue	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator files IfStatement BinaryOperation == MemberReference srcDir Literal null BlockStatement StatementExpression Assignment MemberReference srcDir MethodInvocation MethodInvocation Literal "." resolveFile getProject = IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The dest attribute must be set." IfStatement BinaryOperation && BinaryOperation && MethodInvocation srcDir MemberReference destDir equals BinaryOperation == MemberReference extension Literal null BinaryOperation == MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The ext attribute or a mapper must be set if" Literal " src and dest dirs are the same." LocalVariableDeclaration ReferenceType FileNameMapper VariableDeclarator m Literal null IfStatement BinaryOperation == MemberReference mapper Literal null BlockStatement IfStatement BinaryOperation == MemberReference extension Literal null BlockStatement StatementExpression Assignment MemberReference m ClassCreator ReferenceType IdentityMapper = BlockStatement StatementExpression Assignment MemberReference m ClassCreator ReferenceType ExtMapper = BlockStatement StatementExpression Assignment MemberReference m MethodInvocation mapper getImplementation = StatementExpression Assignment MemberReference scanner MethodInvocation MemberReference srcDir getDirectoryScanner = StatementExpression Assignment MemberReference files MethodInvocation scanner getIncludedFiles = LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator sfs ClassCreator ReferenceType SourceFileScanner This StatementExpression Assignment MemberReference files MethodInvocation sfs MemberReference files MemberReference srcDir MemberReference destDir MemberReference m restrict = LocalVariableDeclaration BasicType int VariableDeclarator count MemberReference files length IfStatement BinaryOperation == MemberReference count Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Converting " MemberReference count Literal " file" TernaryExpression BinaryOperation != MemberReference count Literal 1 Literal "s" Literal "" Literal " from " StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference message MemberReference srcDir Literal " to " MemberReference destDir log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i files MethodInvocation m ArraySelector Literal 0 MemberReference ArraySelector MemberReference i files mapFileName convert	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private ReferenceType Vector getComments ReturnStatement MemberReference comments	1
MethodDeclaration Modifier public test8UsingZipFileset StatementExpression MethodInvocation Literal test8	0
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "foo" assertResultFilesExist	0
MethodDeclaration Modifier protected addPathFile FormalParameter ReferenceType File pathComponent IOException StatementExpression MethodInvocation pathComponents MemberReference pathComponent addElement IfStatement MethodInvocation pathComponent isDirectory BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator absPathPlusTimeAndLength BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation pathComponent getAbsolutePath MethodInvocation pathComponent lastModified Literal "-" MethodInvocation pathComponent length LocalVariableDeclaration ReferenceType String VariableDeclarator classpath Cast ReferenceType String MethodInvocation pathMap MemberReference absPathPlusTimeAndLength get IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator jarFile Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator manifestStream Literal null TryStatement StatementExpression Assignment MemberReference jarFile ClassCreator ReferenceType ZipFile MemberReference pathComponent = StatementExpression Assignment MemberReference manifestStream MethodInvocation jarFile ClassCreator ReferenceType ZipEntry Literal "META-INF/MANIFEST.MF" getInputStream = IfStatement BinaryOperation == MemberReference manifestStream Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Reader VariableDeclarator manifestReader ClassCreator ReferenceType InputStreamReader MemberReference manifestStream Literal "UTF-8" LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType taskdefs ReferenceType Manifest VariableDeclarator manifest ClassCreator ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType taskdefs ReferenceType Manifest MemberReference manifestReader StatementExpression Assignment MemberReference classpath MethodInvocation manifest MethodInvocation Literal "Class-Path" getAttributeValue getMainSection = CatchClause CatchClauseParameter org.apache.tools.ant.taskdefs.ManifestException e IfStatement BinaryOperation != MemberReference manifestStream Literal null BlockStatement StatementExpression MethodInvocation manifestStream close IfStatement BinaryOperation != MemberReference jarFile Literal null BlockStatement StatementExpression MethodInvocation jarFile close IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath Literal "" = StatementExpression MethodInvocation pathMap MemberReference absPathPlusTimeAndLength MemberReference classpath put IfStatement Literal ! MethodInvocation MemberReference classpath equals "" BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator baseURL MethodInvocation FILE_UTILS MemberReference pathComponent getFileURL LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference classpath WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classpathElement MethodInvocation st nextToken LocalVariableDeclaration ReferenceType URL VariableDeclarator libraryURL ClassCreator ReferenceType URL MemberReference baseURL MemberReference classpathElement IfStatement MethodInvocation ! libraryURL MethodInvocation Literal "file" equals getProtocol BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Skipping jar library " MemberReference classpathElement Literal " since only URLs are supported by this" Literal " loader" MemberReference Project MSG_VERBOSE log ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator decodedPath MethodInvocation Locator MethodInvocation libraryURL getFile decodeUri LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference decodedPath IfStatement BinaryOperation && MethodInvocation exists MethodInvocation ! MemberReference isInPath BlockStatement StatementExpression MethodInvocation MemberReference addPathFile	1
MethodDeclaration Modifier private ReferenceType Exception IfStatement BinaryOperation != MemberReference engine Literal null BlockStatement ReturnStatement MemberReference engine LocalVariableDeclaration ReferenceType VariableDeclarator manager ClassCreator ReferenceType MethodInvocation MethodInvocation getClassLoader getClass Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator e MethodInvocation manager Literal ClassReference ReferenceType String MethodInvocation getLanguage invoke IfStatement BinaryOperation == MemberReference e Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType VariableDeclarator ret ClassCreator ReferenceType MemberReference e IfStatement MethodInvocation getKeepEngine BlockStatement StatementExpression Assignment This MemberReference engine MemberReference ret = ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public FormalParameter ReferenceType String match IfStatement BinaryOperation != MemberReference regex Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one regular expression is allowed" StatementExpression Assignment MemberReference regex ClassCreator ReferenceType RegularExpression = StatementExpression MethodInvocation regex MemberReference match setPattern	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference userProvidedExpression Literal null BlockStatement StatementExpression MethodInvocation Literal "The expression attribute is required" setError	1
MethodDeclaration Modifier public FormalParameter ReferenceType filepath StatementExpression MethodInvocation MethodInvocation MemberReference filepath append createFilepath	0
MethodDeclaration Modifier public synchronized BasicType boolean hasSelectors ReturnStatement TernaryExpression BinaryOperation && MethodInvocation isReference BinaryOperation != MethodInvocation getProject Literal null MethodInvocation MethodInvocation hasSelectors MethodInvocation getProject getRef MethodInvocation ! selectors isEmpty	0
MethodDeclaration Modifier public ReferenceType Object createProjectComponent FormalParameter ReferenceType UnknownElement ue FormalParameter ReferenceType Project project FormalParameter ReferenceType String ns FormalParameter ReferenceType String taskName BuildException LocalVariableDeclaration ReferenceType Object VariableDeclarator component Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation factories size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ProjectComponentFactory VariableDeclarator Cast ReferenceType ProjectComponentFactory MethodInvocation factories MemberReference i elementAt StatementExpression Assignment MemberReference component MethodInvocation MemberReference project MemberReference ns MemberReference taskName createProjectComponent = IfStatement BinaryOperation != MemberReference component Literal null ReturnStatement MemberReference component IfStatement BinaryOperation != MethodInvocation project MethodInvocation MemberReference taskName get getDataTypeDefinitions Literal null BlockStatement StatementExpression Assignment MemberReference component MethodInvocation project MemberReference taskName createDataType = IfStatement BinaryOperation != MemberReference component Literal null ReturnStatement MemberReference component StatementExpression Assignment MemberReference component MethodInvocation project MemberReference taskName createTask = ReturnStatement MemberReference component	1
MethodDeclaration Modifier private ReferenceType String trim FormalParameter ReferenceType String t FormalParameter BasicType boolean trimAngleBrackets LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation t length LocalVariableDeclaration BasicType boolean VariableDeclarator trim Literal false DoStatement MemberReference trim BlockStatement StatementExpression Assignment MemberReference trim Literal false = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation t BinaryOperation - MemberReference end Literal 1 charAt Literal ')' BinaryOperation && BinaryOperation == MethodInvocation t BinaryOperation - MemberReference end Literal 1 charAt Literal '>' MemberReference trimAngleBrackets BinaryOperation && BinaryOperation == MethodInvocation t BinaryOperation - MemberReference end Literal 1 charAt Literal '"' BinaryOperation != MethodInvocation t BinaryOperation - MemberReference end Literal 2 charAt Literal '\\' BinaryOperation <= MethodInvocation t BinaryOperation - MemberReference end Literal 1 charAt Literal ' ' BlockStatement StatementExpression Assignment MemberReference trim Literal true = StatementExpression MemberReference -- end IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation t MemberReference start charAt Literal '(' BinaryOperation && BinaryOperation == MethodInvocation t MemberReference start charAt Literal '<' MemberReference trimAngleBrackets BinaryOperation == MethodInvocation t MemberReference start charAt Literal '"' BinaryOperation <= MethodInvocation t MemberReference start charAt Literal ' ' BlockStatement StatementExpression Assignment MemberReference trim Literal true = StatementExpression MemberReference ++ start ReturnStatement MethodInvocation t MemberReference start MemberReference end substring	1
MethodDeclaration Modifier public init IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment MemberReference includes ArrayCreator ReferenceType String Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 includes Literal "**" = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArrayCreator ReferenceType String Literal 0 =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation System MethodInvocation MemberReference PropertyFileInputHandler FILE_NAME_KEY MethodInvocation MethodInvocation Literal resolveFile MethodInvocation getAbsolutePath getProject put getProperties StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType PropertyFileInputHandler setInputHandler getProject	0
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType File loc StatementExpression Assignment MemberReference parts ArrayCreator ReferenceType String ArrayInitializer MethodInvocation MethodInvocation loc getAbsolutePath translateFile =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ';' append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i files append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType String getNamespace ReturnStatement MemberReference namespace	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public run TryStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType ServerSocket MemberReference TEST_PORT = StatementExpression Assignment MemberReference sock MethodInvocation accept = StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation sock getInputStream = StatementExpression Assignment MemberReference out ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MethodInvocation sock getOutputStream = StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuffer = StatementExpression MethodInvocation Literal "220 test EmailTaskTest\r\n" send StatementExpression Assignment MemberReference loop Literal true = WhileStatement MemberReference loop BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator response MethodInvocation in readLine IfStatement BinaryOperation == MemberReference response Literal null BlockStatement StatementExpression Assignment MemberReference loop Literal false = BreakStatement StatementExpression MethodInvocation sb BinaryOperation + MemberReference response Literal "\r\n" append IfStatement BinaryOperation && MemberReference ! data MethodInvocation response Literal "HELO" startsWith BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "250 " MemberReference local Literal " Hello " MemberReference local Literal " " Literal "[127.0.0.1], pleased to you\r\n" send IfStatement BinaryOperation && MemberReference ! data MethodInvocation response Literal "MAIL" startsWith BlockStatement StatementExpression MethodInvocation Literal "250\r\n" send IfStatement BinaryOperation && MemberReference ! data MethodInvocation response Literal "RCPT" startsWith BlockStatement StatementExpression MethodInvocation Literal "250\r\n" send IfStatement BinaryOperation && MemberReference ! data MethodInvocation response Literal "DATA" startsWith BlockStatement StatementExpression MethodInvocation Literal "354\r\n" send StatementExpression Assignment MemberReference data Literal true = IfStatement BinaryOperation && MemberReference data MethodInvocation response Literal "." equals BlockStatement StatementExpression MethodInvocation Literal "250\r\n" send StatementExpression Assignment MemberReference data Literal false = IfStatement BinaryOperation && MemberReference ! data MethodInvocation response Literal "QUIT" startsWith BlockStatement StatementExpression MethodInvocation Literal "221\r\n" send StatementExpression Assignment MemberReference loop Literal false = IfStatement MemberReference ! data BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "500 5.5.1 Command unrecognized: \"" MemberReference response Literal "\"\r\n" send StatementExpression Assignment MemberReference loop Literal false = BlockStatement CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation fail StatementExpression MethodInvocation disconnect	1
MethodDeclaration Modifier public FormalParameter ReferenceType filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal addArgIf	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference executable MemberReference value = StatementExpression MethodInvocation cmdl MemberReference value setExecutable	0
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation nestedTasks MemberReference nestedTask addElement	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression Assignment MemberReference classname MemberReference name =	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression MethodInvocation Literal "tearDown" executeTarget	0
MethodDeclaration Modifier public testzipentryoutput LocalVariableDeclaration ReferenceType Zip VariableDeclarator z ClassCreator ReferenceType Zip StatementExpression MethodInvocation z MethodInvocation getProject setProject LocalVariableDeclaration ReferenceType Zip ReferenceType WhenEmpty VariableDeclarator create ClassCreator ReferenceType Zip ReferenceType WhenEmpty StatementExpression MethodInvocation create Literal "create" setValue StatementExpression MethodInvocation z MemberReference create setWhenempty StatementExpression MethodInvocation z MemberReference basedir setBasedir StatementExpression MethodInvocation z Literal "**/*" setExcludes LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation Literal "foo" resolveFile getProject StatementExpression MethodInvocation z MemberReference f setDestFile StatementExpression MethodInvocation z execute LocalVariableDeclaration ReferenceType ZipResource VariableDeclarator r ClassCreator ReferenceType ZipResource StatementExpression MethodInvocation r MemberReference f StatementExpression MethodInvocation r Literal "foo" setName TryStatement StatementExpression MethodInvocation MemberReference r StatementExpression MethodInvocation Literal "should have caught UnsupportedOperationException" fail CatchClause CatchClauseParameter UnsupportedOperationException e IfStatement MethodInvocation ! f delete BlockStatement StatementExpression MethodInvocation f deleteOnExit	1
MethodDeclaration Modifier public testMultiCall LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector StatementExpression MethodInvocation v Literal "call-multi" add StatementExpression MethodInvocation v Literal "call-multi" add StatementExpression MethodInvocation project MemberReference v executeTargets StatementExpression MethodInvocation Literal is is SET" assertLogContaining	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean verbose StatementExpression Assignment This MemberReference verbose MemberReference verbose =	0
MethodDeclaration Modifier synchronized protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar IfStatement BinaryOperation || BinaryOperation == MemberReference v Literal null MethodInvocation v isEmpty BlockStatement ReturnStatement MethodInvocation foo MemberReference bar compareTo LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation v iterator BinaryOperation && BinaryOperation == MemberReference result Literal 0 MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType ResourceComparator MethodInvocation i next = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType ZipShort getLocalFileDataLength ReturnStatement ClassCreator ReferenceType ZipShort BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal 4 Literal 2 Literal 4 Literal 2 Literal 2 MethodInvocation MethodInvocation getBytes MemberReference length getLinkedFile	1
MethodDeclaration Modifier public setMaxParallel FormalParameter BasicType int max StatementExpression Assignment MemberReference maxParallel MemberReference max =	0
MethodDeclaration Modifier public static appendText FormalParameter ReferenceType Element parent FormalParameter ReferenceType String content LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation parent LocalVariableDeclaration ReferenceType Text VariableDeclarator t MethodInvocation doc MemberReference content createTextNode StatementExpression MethodInvocation parent MemberReference t appendChild	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator publicId Literal "-//stevo//DTD doc LocalVariableDeclaration ReferenceType String VariableDeclarator sysid Literal "src/etc/testcases/taskdefs/optional/xml/doc.dtd" LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd MemberReference publicId setPublicId StatementExpression MethodInvocation dtd MemberReference sysid setLocation StatementExpression MethodInvocation catalog MemberReference dtd LocalVariableDeclaration ReferenceType File VariableDeclarator dtdFile MethodInvocation project MemberReference sysid resolveFile LocalVariableDeclaration ReferenceType String VariableDeclarator uri Literal "http://foo.com/bar/blah.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator uriLoc Literal "src/etc/testcases/taskdefs/optional/xml/about.xml" LocalVariableDeclaration ReferenceType VariableDeclarator entity ClassCreator ReferenceType StatementExpression MethodInvocation entity MemberReference uri setPublicId StatementExpression MethodInvocation entity MemberReference uriLoc setLocation StatementExpression MethodInvocation catalog MemberReference entity addEntity LocalVariableDeclaration ReferenceType File VariableDeclarator xmlFile MethodInvocation project MemberReference uriLoc resolveFile StatementExpression MethodInvocation project Literal "catalog" MemberReference catalog LocalVariableDeclaration ReferenceType VariableDeclarator catalog1 MethodInvocation StatementExpression MethodInvocation project Literal "catalog1" MemberReference catalog1 LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation project Literal "catalog2" MemberReference catalog1 StatementExpression MethodInvocation catalog1 ClassCreator ReferenceType Literal "catalog" setRefid StatementExpression MethodInvocation ClassCreator ReferenceType Literal "catalog1" setRefid TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation MemberReference publicId Literal "nap:chemical+brothers" resolveEntity StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference dtdFile toURLString MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail TryStatement LocalVariableDeclaration ReferenceType Source VariableDeclarator result MethodInvocation catalog MemberReference uri Literal null resolve StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference xmlFile toURLString MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "resolve() MethodInvocation e toString fail	0
MethodDeclaration Modifier public synchronized BasicType boolean isExists IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement MethodInvocation Literal false isExists	1
MethodDeclaration Modifier public BasicType boolean isEmpty StatementExpression MethodInvocation initAll ReturnStatement SuperMethodInvocation isEmpty	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "filesmatch-different" Literal "filesmatch-different" expectPropertyUnset	0
MethodDeclaration Modifier public setBasedir FormalParameter ReferenceType File baseDir StatementExpression Assignment This MemberReference baseDir MemberReference baseDir =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference failOnError	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File src StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference src setSrcResource	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "Multi line description failed" Literal "Multi Description" MethodInvocation project getDescription assertEquals	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType ClassConstants VariableDeclarator newFilter ClassCreator ReferenceType ClassConstants MemberReference rdr ReturnStatement MemberReference newFilter	1
MethodDeclaration Modifier public setRecursive FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference setInternalRecursive	0
MethodDeclaration Modifier private handleMultipleTasks FormalParameter ReferenceType AntRExecClient rexec IfStatement BinaryOperation && BinaryOperation != MemberReference userid Literal null BinaryOperation != MemberReference password Literal null BlockStatement StatementExpression MethodInvocation MemberReference rexec login LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator tasksToRun MethodInvocation elements WhileStatement BinaryOperation && BinaryOperation != MemberReference tasksToRun Literal null MethodInvocation tasksToRun hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType RExecSubTask VariableDeclarator task Cast ReferenceType RExecSubTask MethodInvocation tasksToRun nextElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference task ReferenceType RExecRead BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Cast ReferenceType RExecRead MemberReference task StatementExpression MethodInvocation task MemberReference rexec execute	0
MethodDeclaration IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close StatementExpression Assignment MemberReference out Literal null =	0
MethodDeclaration Modifier protected waitForAck FormalParameter ReferenceType InputStream in IOException BuildException LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation in read IfStatement BinaryOperation == MemberReference b Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No response from server" IfStatement BinaryOperation != MemberReference b Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation in read WhileStatement BinaryOperation && BinaryOperation > MemberReference c Literal 0 BinaryOperation != MemberReference c Literal '\n' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation in read = IfStatement BinaryOperation == MemberReference b Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "server indicated an error: " MethodInvocation sb toString IfStatement BinaryOperation == MemberReference b Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "server indicated a fatal error: " MethodInvocation sb toString BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "unknown response, code " MemberReference b Literal " message: " MethodInvocation sb toString	1
MethodDeclaration * show a progress * @todo this doesn't work in shell */ Modifier protected showProgressChar FormalParameter BasicType char c StatementExpression MethodInvocation System.out MemberReference c write	0
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression MethodInvocation userInfo MemberReference password	0
MethodDeclaration Modifier private ReferenceType String replace FormalParameter ReferenceType String str FormalParameter BasicType char fromChar FormalParameter ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer BinaryOperation * MethodInvocation str length Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation str length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation str MemberReference i charAt IfStatement BinaryOperation == MemberReference ch MemberReference fromChar BlockStatement StatementExpression MethodInvocation buf MemberReference toString append BlockStatement StatementExpression MethodInvocation buf MemberReference ch append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier protected attach FormalParameter ReferenceType File file FormalParameter ReferenceType PrintStream out IOException IfStatement BinaryOperation || MethodInvocation ! file exists MethodInvocation ! file canRead BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "File \"" MethodInvocation file getName Literal "\" does not exist or is not " Literal "readable." IfStatement MemberReference BlockStatement StatementExpression MethodInvocation out println LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation file getName LocalVariableDeclaration BasicType int VariableDeclarator filenamelength MethodInvocation filename length StatementExpression MethodInvocation out MemberReference filename println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator star Literal 0 BinaryOperation < MemberReference star MemberReference filenamelength MemberReference ++ star BlockStatement StatementExpression MethodInvocation out Literal '=' print StatementExpression MethodInvocation out println LocalVariableDeclaration BasicType int VariableDeclarator length LocalVariableDeclaration Modifier final BasicType int VariableDeclarator maxBuf Literal 1024 LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte MemberReference maxBuf LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator finstr ClassCreator ReferenceType FileInputStream MemberReference file TryStatement LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator in ClassCreator ReferenceType BufferedInputStream MemberReference finstr MemberReference buf length WhileStatement BinaryOperation != Assignment MemberReference length MethodInvocation in MemberReference buf read = Literal - 1 BlockStatement StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference length write StatementExpression MethodInvocation finstr close	1
MethodDeclaration Modifier public setEndToken FormalParameter ReferenceType String endOfToken IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation || BinaryOperation == MemberReference endOfToken Literal null Literal MethodInvocation MemberReference endOfToken equals "" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must not be empty" StatementExpression Assignment This MemberReference endOfToken MemberReference endOfToken =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean unicodeInput StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference unicodeInput MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType Hashtable lsprivate FormalParameter ReferenceType File viewpath ReturnStatement Literal null	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public final setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean isOmitMode ReturnStatement MethodInvocation MethodInvocation getValue equalsIgnoreCase	0
MethodDeclaration Modifier private BasicType long calcChecksum FormalParameter ReferenceType File f IOException LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator in ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference f ReturnStatement MethodInvocation MemberReference in calcChecksum	1
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference value getCommandline	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/filters/build.xml" configureProject	0
MethodDeclaration Modifier private synchronized ensureOpened IOException IfStatement MemberReference closed BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + MemberReference file Literal " has already been closed." IfStatement MemberReference ! opened BlockStatement StatementExpression Assignment MemberReference fos ClassCreator ReferenceType FileOutputStream MethodInvocation file getAbsolutePath MemberReference append = StatementExpression Assignment MemberReference opened Literal true =	0
MethodDeclaration Modifier private testProperties FormalParameter ReferenceType String target StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation MethodInvocation Literal getProperty getProject assertEquals StatementExpression MethodInvocation Literal "Text" MethodInvocation MethodInvocation Literal "root-tag.inner-tag" getProperty getProject assertEquals StatementExpression MethodInvocation Literal MethodInvocation MethodInvocation Literal getProperty getProject assertEquals StatementExpression MethodInvocation Literal "false" MethodInvocation MethodInvocation Literal "root-tag.a2.a3.a4" getProperty getProject assertEquals StatementExpression MethodInvocation Literal "CDATA failed" Literal "<test>" MethodInvocation MethodInvocation Literal getProperty getProject assertEquals	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buffer TernaryExpression BinaryOperation != MemberReference namespace Literal null MemberReference namespace Literal "(anonymous)" append StatementExpression MethodInvocation buffer Literal ' ' append StatementExpression MethodInvocation buffer TernaryExpression BinaryOperation != MemberReference url Literal null BinaryOperation + MemberReference url Literal " " Literal "" append StatementExpression MethodInvocation buffer TernaryExpression BinaryOperation != MemberReference file Literal null MethodInvocation file getAbsolutePath Literal "" append ReturnStatement MethodInvocation buffer toString	1
MethodDeclaration Modifier public setSemanticAttributes FormalParameter BasicType boolean semanticAttributes StatementExpression Assignment This MemberReference semanticAttributes MemberReference semanticAttributes =	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceCollection c IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement StatementExpression Assignment MemberReference rc ClassCreator ReferenceType Vector = StatementExpression MethodInvocation rc MemberReference c add StatementExpression MethodInvocation FailFast This invalidate StatementExpression Assignment MemberReference coll Literal null = StatementExpression MethodInvocation Literal false setChecked	1
MethodDeclaration Modifier public static ReferenceType StringBuffer parseName FormalParameter BasicType byte header FormalParameter BasicType int offset FormalParameter BasicType int length LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer MemberReference length LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference offset MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference offset BinaryOperation < MemberReference i MemberReference end MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i header Literal 0 BlockStatement BreakStatement StatementExpression MethodInvocation result Cast BasicType char MemberReference ArraySelector MemberReference i header append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String getViewPath ReturnStatement MemberReference mviewPath	0
MethodDeclaration Modifier public resolve ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation entries elements MethodInvocation i hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ConstantPoolEntry VariableDeclarator poolInfo Cast ReferenceType ConstantPoolEntry MethodInvocation i nextElement IfStatement BinaryOperation && BinaryOperation != MemberReference poolInfo Literal null MethodInvocation ! poolInfo BlockStatement StatementExpression MethodInvocation poolInfo This resolve	0
MethodDeclaration Modifier public setAntfile FormalParameter ReferenceType String antfile StatementExpression Assignment This MemberReference antfile MemberReference antfile =	0
MethodDeclaration Modifier public static invokeCircularReferenceCheck FormalParameter ReferenceType DataType dt FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p StatementExpression MethodInvocation dt MemberReference stk MemberReference p dieOnCircularReference	1
MethodDeclaration Modifier public setMode FormalParameter ReferenceType String octalString StatementExpression MethodInvocation MemberReference octalString setFileMode	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Contains contains StatementExpression This MemberReference contains MethodInvocation MethodInvocation contains getValue addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal doScenarioTest	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference antfile Literal MemberReference destfile Literal "]"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType TarEntry getDirectoryEntries IfStatement BinaryOperation || BinaryOperation == This MemberReference file Literal null This ! MemberReference file MethodInvocation isDirectory BlockStatement ReturnStatement ArrayCreator ReferenceType TarEntry Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator list This MemberReference file MethodInvocation list LocalVariableDeclaration ReferenceType TarEntry VariableDeclarator result ArrayCreator ReferenceType TarEntry MemberReference list length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result ClassCreator ReferenceType TarEntry ClassCreator ReferenceType File This MemberReference file MemberReference ArraySelector MemberReference i list = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public targetFinished FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType Target VariableDeclarator target MethodInvocation event getTarget LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator targetElement Cast ReferenceType TimedElement MethodInvocation targets MemberReference target get IfStatement BinaryOperation != MemberReference targetElement Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator totalTime BinaryOperation - MethodInvocation System currentTimeMillis MemberReference targetElement startTime StatementExpression MethodInvocation targetElement.element MemberReference TIME_ATTR MethodInvocation DefaultLogger MemberReference totalTime formatTime setAttribute LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator parentElement Literal null LocalVariableDeclaration ReferenceType Stack VariableDeclarator threadStack MethodInvocation getStack IfStatement MethodInvocation ! threadStack empty BlockStatement LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator poppedStack Cast ReferenceType TimedElement MethodInvocation threadStack pop IfStatement BinaryOperation != MemberReference poppedStack MemberReference targetElement BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Mismatch - popped element = " MemberReference poppedStack Literal " finished target element = " MemberReference targetElement IfStatement MethodInvocation ! threadStack empty BlockStatement StatementExpression Assignment MemberReference parentElement Cast ReferenceType TimedElement MethodInvocation threadStack peek = IfStatement BinaryOperation == MemberReference parentElement Literal null BlockStatement StatementExpression MethodInvocation buildElement.element MemberReference targetElement element appendChild BlockStatement StatementExpression MethodInvocation parentElement.element MemberReference targetElement element appendChild StatementExpression MethodInvocation targets MemberReference target remove	1
MethodDeclaration Modifier public setPort FormalParameter BasicType int p StatementExpression Assignment This MemberReference port MemberReference p =	0
MethodDeclaration Modifier public ReferenceType String getInterfaceMethodType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean list StatementExpression Assignment MemberReference listFiles MemberReference list =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType FilterSet VariableDeclarator fs Cast ReferenceType FilterSet MethodInvocation MethodInvocation Literal "1" getReference getProject LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator filters MethodInvocation fs getFilterHash StatementExpression MethodInvocation Literal 1 MethodInvocation filters size assertEquals StatementExpression MethodInvocation Literal "value1" MethodInvocation filters Literal "token1" get assertEquals StatementExpression Assignment MemberReference fs Cast ReferenceType FilterSet MethodInvocation MethodInvocation Literal "2" getReference getProject = StatementExpression Assignment MemberReference filters MethodInvocation fs getFilterHash = StatementExpression MethodInvocation Literal 2 MethodInvocation filters size assertEquals StatementExpression MethodInvocation Literal "1111" MethodInvocation filters Literal get assertEquals StatementExpression MethodInvocation Literal "2222" MethodInvocation filters Literal get assertEquals StatementExpression Assignment MemberReference fs Cast ReferenceType FilterSet MethodInvocation MethodInvocation Literal "3" getReference getProject = StatementExpression Assignment MemberReference filters MethodInvocation fs getFilterHash = StatementExpression MethodInvocation Literal 1 MethodInvocation filters size assertEquals StatementExpression MethodInvocation Literal "value4" MethodInvocation filters Literal get assertEquals StatementExpression Assignment MemberReference fs Cast ReferenceType FilterSet MethodInvocation MethodInvocation Literal getReference getProject = StatementExpression Assignment MemberReference filters MethodInvocation fs getFilterHash = StatementExpression MethodInvocation Literal 1 MethodInvocation filters size assertEquals StatementExpression MethodInvocation Literal "value1" MethodInvocation filters Literal "token1" get assertEquals	0
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String baseName LocalVariableDeclaration ReferenceType String VariableDeclarator ddPrefix TernaryExpression MethodInvocation usingBaseJarName Literal "" MemberReference baseName LocalVariableDeclaration ReferenceType String VariableDeclarator dbPrefix TernaryExpression BinaryOperation == MemberReference Literal null Literal "" BinaryOperation + MemberReference Literal "-" LocalVariableDeclaration ReferenceType File VariableDeclarator websphereEXT ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference WAS_EXT IfStatement MethodInvocation websphereEXT exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference WAS_EXT MemberReference websphereEXT put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate websphere extensions. " Literal "It was expected to be in " MethodInvocation websphereEXT getPath MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType File VariableDeclarator websphereBND ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference WAS_BND IfStatement MethodInvocation websphereBND exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference WAS_BND MemberReference websphereBND put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate websphere bindings. " Literal "It was expected to be in " MethodInvocation websphereBND getPath MemberReference Project MSG_VERBOSE log IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation Literal "The old method for locating CMP files has been DEPRECATED." MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Please your websphere descriptor and set " Literal "newCMP=\"true\" to use the new CMP descriptor " Literal "inclusion mechanism. " MemberReference Project MSG_VERBOSE log BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator websphereMAP ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + BinaryOperation + MemberReference ddPrefix MemberReference dbPrefix MemberReference WAS_CMP_MAP IfStatement MethodInvocation websphereMAP exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference WAS_CMP_MAP MemberReference websphereMAP put BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to locate the websphere Map: " MethodInvocation websphereMAP getPath MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType File VariableDeclarator websphereSchema ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + BinaryOperation + MemberReference ddPrefix MemberReference dbPrefix MemberReference WAS_CMP_SCHEMA IfStatement MethodInvocation websphereSchema exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + BinaryOperation + MemberReference META_DIR MemberReference SCHEMA_DIR MemberReference WAS_CMP_SCHEMA MemberReference websphereSchema put BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to locate the websphere Schema: " MethodInvocation websphereSchema getPath MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while adding Vendor specific files: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BuildException TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e IfStatement BinaryOperation || MethodInvocation e MethodInvocation Literal " doesn't recognize feature http://apache.org/xml/features/validation/schema" endsWith getMessage MethodInvocation e MethodInvocation Literal " doesn't support feature http://apache.org/xml/features/validation/schema" endsWith getMessage BlockStatement StatementExpression MethodInvocation System.err Literal " skipped, parser doesn't support schema" println BlockStatement ThrowStatement MemberReference e	0
MethodDeclaration Modifier private ReferenceType Log getLog FormalParameter ReferenceType String cat FormalParameter ReferenceType String suffix IfStatement BinaryOperation != MemberReference suffix Literal null BlockStatement StatementExpression Assignment MemberReference suffix MethodInvocation suffix Literal '.' Literal '-' replace = StatementExpression Assignment MemberReference suffix MethodInvocation suffix Literal ' ' Literal '-' replace = StatementExpression Assignment MemberReference cat BinaryOperation + BinaryOperation + MemberReference cat Literal "." MemberReference suffix = LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator tmpOut MemberReference System out LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator tmpErr MemberReference System err StatementExpression MethodInvocation System MemberReference out setOut StatementExpression MethodInvocation System MemberReference err setErr IfStatement MemberReference ! initialized BlockStatement TryStatement StatementExpression Assignment MemberReference logFactory MethodInvocation LogFactory getFactory = CatchClause CatchClauseParameter LogConfigurationException e StatementExpression MethodInvocation e MemberReference System err printStackTrace ReturnStatement Literal null StatementExpression Assignment MemberReference initialized Literal true = LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation logFactory MemberReference cat getInstance StatementExpression MethodInvocation System MemberReference tmpOut setOut StatementExpression MethodInvocation System MemberReference tmpErr setErr ReturnStatement MemberReference log	1
MethodDeclaration Modifier public ReferenceType File getSrcDir ReturnStatement This MemberReference srcDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType String trace LocalVariableDeclaration ReferenceType TraceAttr VariableDeclarator t ClassCreator ReferenceType TraceAttr StatementExpression MethodInvocation t MemberReference trace setValue StatementExpression MethodInvocation MemberReference t	0
MethodDeclaration Modifier public setTodir FormalParameter ReferenceType File todir StatementExpression Assignment This MemberReference todir MemberReference todir =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public testBoth StatementExpression MethodInvocation Literal "testBoth" executeTarget	0
MethodDeclaration Modifier protected setup FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType Native2Ascii args BuildException IfStatement MethodInvocation args getReverse BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "-reverse is not supported by Kaffe" StatementExpression SuperMethodInvocation MemberReference cmd MemberReference args setup	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet reference StatementExpression MethodInvocation referenceFilesets MemberReference reference add	0
MethodDeclaration probeConnection FormalParameter ReferenceType HttpURLConnection connection LocalVariableDeclaration ReferenceType String VariableDeclarator probe MethodInvocation connection Literal 0 getHeaderFieldKey	1
MethodDeclaration Modifier public ReferenceType String getExecutable ReturnStatement MemberReference forkedExecutable	0
MethodDeclaration Modifier public final setProject FormalParameter Modifier final ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String version ReturnStatement BinaryOperation >= MethodInvocation javaVersion MemberReference version compareTo Literal 0	0
MethodDeclaration Modifier private ReferenceType String executeToString FormalParameter ReferenceType Execute execute LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator stringBuffer ClassCreator ReferenceType StringBuffer MethodInvocation Commandline MethodInvocation execute getCommandline describeCommand LocalVariableDeclaration ReferenceType String VariableDeclarator newLine MemberReference StringUtils LINE_SEP LocalVariableDeclaration ReferenceType String VariableDeclarator variableArray MethodInvocation execute getEnvironment IfStatement BinaryOperation != MemberReference variableArray Literal null BlockStatement StatementExpression MethodInvocation stringBuffer MemberReference newLine append StatementExpression MethodInvocation stringBuffer MemberReference newLine append StatementExpression MethodInvocation stringBuffer Literal "environment:" append StatementExpression MethodInvocation stringBuffer MemberReference newLine append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator z Literal 0 BinaryOperation < MemberReference z MemberReference variableArray length MemberReference ++ z BlockStatement StatementExpression MethodInvocation stringBuffer MemberReference newLine append StatementExpression MethodInvocation stringBuffer Literal "\t" append StatementExpression MethodInvocation stringBuffer MemberReference ArraySelector MemberReference z variableArray append ReturnStatement MethodInvocation stringBuffer toString	1
MethodDeclaration Modifier public closeElement FormalParameter ReferenceType Element element FormalParameter ReferenceType Writer out FormalParameter BasicType int indent FormalParameter ReferenceType String indentWith FormalParameter BasicType boolean hasChildren IOException IfStatement MemberReference hasChildren BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference indent MemberReference ++ i BlockStatement StatementExpression MethodInvocation out MemberReference indentWith write StatementExpression MethodInvocation out Literal write IfStatement MemberReference namespacePolicy qualifyElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation MemberReference element getNamespaceURI LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Cast ReferenceType String MethodInvocation nsPrefixMap MemberReference uri get IfStatement BinaryOperation && BinaryOperation != MemberReference prefix Literal null Literal ! MethodInvocation MemberReference prefix equals "" BlockStatement StatementExpression MethodInvocation out MemberReference prefix write StatementExpression MethodInvocation out Literal ":" write StatementExpression MethodInvocation MemberReference element StatementExpression MethodInvocation out MethodInvocation element getTagName write StatementExpression MethodInvocation out Literal ">" write StatementExpression MethodInvocation out MemberReference lSep write StatementExpression MethodInvocation out flush	0
MethodDeclaration Modifier public static ReferenceType JavahAdapter getAdapter FormalParameter ReferenceType String choice FormalParameter ReferenceType ProjectComponent log BuildException IfStatement BinaryOperation || BinaryOperation && MethodInvocation JavaEnvUtils isKaffe BinaryOperation == MemberReference choice Literal null MethodInvocation Kaffeh.IMPLEMENTATION_NAME MemberReference choice equals BlockStatement ReturnStatement ClassCreator ReferenceType Kaffeh IfStatement MethodInvocation SunJavah.IMPLEMENTATION_NAME MemberReference choice equals BlockStatement ReturnStatement ClassCreator ReferenceType SunJavah IfStatement BinaryOperation != MemberReference choice Literal null BlockStatement ReturnStatement MethodInvocation MemberReference choice resolveClassName ReturnStatement ClassCreator ReferenceType SunJavah	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Expecting message starting with but got '" MemberReference log Literal "'" MethodInvocation log Literal startsWith assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Expecting message ending with but got '" MemberReference log Literal "'" MethodInvocation log Literal "asf-logo.gif.gz" endsWith assertTrue	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference tsacert	0
MethodDeclaration Modifier public FormalParameter ReferenceType String out StatementExpression Assignment MemberReference systemOutput MemberReference out =	0
MethodDeclaration Modifier public send TryStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props Literal "mail.smtp.host" MemberReference host put StatementExpression MethodInvocation props Literal "mail.smtp.port" MethodInvocation String MemberReference port valueOf put LocalVariableDeclaration ReferenceType Session VariableDeclarator sesh LocalVariableDeclaration ReferenceType Authenticator VariableDeclarator auth IfStatement MemberReference SSL BlockStatement TryStatement LocalVariableDeclaration ReferenceType Provider VariableDeclarator p Cast ReferenceType Provider MethodInvocation Class MethodInvocation newInstance Literal "com.sun.net.ssl.internal.ssl.Provider" forName StatementExpression MethodInvocation Security MemberReference p CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "could not instantiate ssl " Literal "security provider, check that you have JSSE in " Literal "your classpath" StatementExpression MethodInvocation props Literal "mail.smtp.socketFactory.class" MemberReference SSL_FACTORY put StatementExpression MethodInvocation props Literal "mail.smtp.socketFactory.fallback" Literal "false" put IfStatement BinaryOperation && BinaryOperation == MemberReference user Literal null BinaryOperation == MemberReference password Literal null BlockStatement StatementExpression Assignment MemberReference sesh MethodInvocation Session MemberReference props Literal null getDefaultInstance = BlockStatement StatementExpression MethodInvocation props Literal "mail.smtp.auth" Literal "true" put StatementExpression Assignment MemberReference auth ClassCreator ReferenceType SimpleAuthenticator MemberReference user MemberReference password = StatementExpression Assignment MemberReference sesh MethodInvocation Session MemberReference props MemberReference auth getInstance = LocalVariableDeclaration ReferenceType MimeMessage VariableDeclarator msg ClassCreator ReferenceType MimeMessage MemberReference sesh LocalVariableDeclaration ReferenceType MimeMultipart VariableDeclarator attachments ClassCreator ReferenceType MimeMultipart IfStatement BinaryOperation == MethodInvocation from getName Literal null BlockStatement StatementExpression MethodInvocation msg ClassCreator ReferenceType InternetAddress MethodInvocation from getAddress BlockStatement StatementExpression MethodInvocation msg ClassCreator ReferenceType InternetAddress MethodInvocation from getAddress MethodInvocation from getName StatementExpression MethodInvocation msg MethodInvocation MemberReference replyToList internetAddresses setReplyTo StatementExpression MethodInvocation msg MemberReference Message.RecipientType TO MethodInvocation MemberReference toList internetAddresses setRecipients StatementExpression MethodInvocation msg MemberReference Message.RecipientType CC MethodInvocation MemberReference ccList internetAddresses setRecipients StatementExpression MethodInvocation msg MemberReference Message.RecipientType BCC MethodInvocation MemberReference bccList internetAddresses setRecipients LocalVariableDeclaration ReferenceType String VariableDeclarator charset MethodInvocation MethodInvocation message getMimeType parseCharSetFromMimeType IfStatement BinaryOperation != MemberReference charset Literal null BlockStatement StatementExpression MethodInvocation message MemberReference charset setCharset BlockStatement StatementExpression Assignment MemberReference charset MethodInvocation message getCharset = IfStatement BinaryOperation == MemberReference charset Literal null BlockStatement StatementExpression Assignment MemberReference charset MemberReference DEFAULT_CHARSET = StatementExpression MethodInvocation message MemberReference charset setCharset LocalVariableDeclaration ReferenceType StringDataSource VariableDeclarator sds ClassCreator ReferenceType StringDataSource StatementExpression MethodInvocation sds MethodInvocation message getMimeType setContentType StatementExpression MethodInvocation sds MemberReference charset setCharset IfStatement BinaryOperation != MemberReference subject Literal null BlockStatement StatementExpression MethodInvocation msg MemberReference subject MemberReference charset setSubject StatementExpression MethodInvocation msg Literal "Date" MethodInvocation getDate addHeader ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation headers iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Header VariableDeclarator h Cast ReferenceType Header MethodInvocation iter next StatementExpression MethodInvocation msg MethodInvocation h getName MethodInvocation h getValue addHeader LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out ClassCreator ReferenceType PrintStream MethodInvocation sds getOutputStream StatementExpression MethodInvocation message MemberReference out print StatementExpression MethodInvocation out close LocalVariableDeclaration ReferenceType MimeBodyPart VariableDeclarator textbody ClassCreator ReferenceType MimeBodyPart StatementExpression MethodInvocation textbody ClassCreator ReferenceType DataHandler MemberReference sds setDataHandler StatementExpression MethodInvocation attachments MemberReference textbody addBodyPart LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation files elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Cast ReferenceType File MethodInvocation e nextElement LocalVariableDeclaration ReferenceType MimeBodyPart VariableDeclarator body StatementExpression Assignment MemberReference body ClassCreator ReferenceType MimeBodyPart = IfStatement BinaryOperation || MethodInvocation ! file exists MethodInvocation ! file canRead BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "File \"" MethodInvocation file getAbsolutePath Literal "\" does not exist or is not " Literal "readable." LocalVariableDeclaration ReferenceType FileDataSource VariableDeclarator fileData ClassCreator ReferenceType FileDataSource MemberReference file LocalVariableDeclaration ReferenceType DataHandler VariableDeclarator fileDataHandler ClassCreator ReferenceType DataHandler MemberReference fileData StatementExpression MethodInvocation body MemberReference fileDataHandler setDataHandler StatementExpression MethodInvocation body MethodInvocation file getName StatementExpression MethodInvocation attachments MemberReference body addBodyPart StatementExpression MethodInvocation msg MemberReference attachments setContent StatementExpression MethodInvocation Transport MemberReference msg send CatchClause CatchClauseParameter MessagingException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Problem while sending mime mail:" MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Problem while sending mime mail:" MemberReference e	1
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType File outfile IfStatement BinaryOperation != MemberReference outfile Literal null BlockStatement StatementExpression SuperMethodInvocation MethodInvocation outfile getAbsolutePath setInternalOutputFilename	0
MethodDeclaration Modifier public validateNamespace IfStatement MethodInvocation ! MethodInvocation getNamespace isSet BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_NO_URI	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference rdbms	0
MethodDeclaration Modifier public setLastBuild FormalParameter ReferenceType String lastbuild BuildException TryStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator lastBuildTime MethodInvocation MemberReference lastbuild parse StatementExpression Assignment This MemberReference lastBuild ClassCreator ReferenceType OLEDate MemberReference lastBuildTime = CatchClause CatchClauseParameter ParseException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to parse the date '" MemberReference lastbuild Literal "'" MemberReference e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String ddPrefix LocalVariableDeclaration ReferenceType File VariableDeclarator weblogicDD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference WL_DD IfStatement MethodInvocation weblogicDD exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference WL_DD MemberReference weblogicDD put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate weblogic deployment descriptor. " Literal "It was expected to be in " MethodInvocation weblogicDD getPath MemberReference Project MSG_WARN log ReturnStatement IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation Literal "The old method for locating CMP files has been DEPRECATED." MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Please your weblogic descriptor and set " Literal "newCMP=\"true\" to use the new CMP descriptor " Literal "inclusion mechanism. " MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType File VariableDeclarator weblogicCMPDD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference WL_CMP_DD IfStatement MethodInvocation weblogicCMPDD exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference WL_CMP_DD MemberReference weblogicCMPDD put BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator ejbDescriptor Cast ReferenceType File MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference EJB_DD get LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator saxParserFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation saxParserFactory Literal true setValidating LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser MethodInvocation saxParserFactory newSAXParser LocalVariableDeclaration ReferenceType DescriptorHandler VariableDeclarator handler MethodInvocation MethodInvocation ejbDescriptor getParentFile getWeblogicDescriptorHandler StatementExpression MethodInvocation saxParser ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference weblogicDD MemberReference handler parse LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator MethodInvocation handler getFiles LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation ejbFiles MemberReference key MethodInvocation MemberReference key get put CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while adding Vendor specific files: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier public ReferenceType String getSections IfStatement BinaryOperation == Literal null MemberReference sections BlockStatement ReturnStatement Literal null LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator newSections ArrayCreator ReferenceType String MemberReference sections length StatementExpression MethodInvocation System MemberReference sections Literal 0 MemberReference newSections Literal 0 MemberReference sections length arraycopy ReturnStatement MemberReference newSections	0
MethodDeclaration Modifier public writeRecord FormalParameter BasicType byte record IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal "WriteRecord: recIdx = " This MemberReference currRecIdx Literal " blkIdx = " This MemberReference currBlkIdx println IfStatement BinaryOperation == This MemberReference outStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "writing to an input buffer" IfStatement BinaryOperation != MemberReference record length This MemberReference recordSize BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "record to write has length '" MemberReference record length Literal "' which is not the record size of '" This MemberReference recordSize Literal "'" IfStatement BinaryOperation >= This MemberReference currRecIdx This MemberReference recsPerBlock BlockStatement StatementExpression This MethodInvocation writeBlock StatementExpression MethodInvocation System MemberReference record Literal 0 This MemberReference blockBuffer BinaryOperation * This MemberReference currRecIdx This MemberReference recordSize This MemberReference recordSize arraycopy StatementExpression This ++ MemberReference currRecIdx	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference baseDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_BASE_NOT_SET MethodInvocation getLocation IfStatement MethodInvocation ! baseDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference ERROR_NO_BASE_EXISTS MemberReference baseDir MethodInvocation getLocation IfStatement MethodInvocation ! baseDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference ERROR_NOT_A_DIR MemberReference baseDir MethodInvocation getLocation IfStatement MemberReference verify BlockStatement StatementExpression MethodInvocation Literal "Verify has been turned on." MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType RmicAdapter VariableDeclarator adapter MethodInvocation MethodInvocation This getRmic StatementExpression MethodInvocation adapter This setRmic LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation adapter getClasspath StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = TryStatement IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds This MethodInvocation MemberReference baseDir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression MethodInvocation MemberReference baseDir MemberReference files MethodInvocation adapter getMapper scanDir BlockStatement StatementExpression MethodInvocation MemberReference baseDir ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MethodInvocation classname Literal '.' MemberReference File separatorChar replace Literal ".class" MethodInvocation adapter getMapper scanDir LocalVariableDeclaration BasicType int VariableDeclarator fileCount MethodInvocation compileList size IfStatement BinaryOperation > MemberReference fileCount Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "RMI Compiling " MemberReference fileCount Literal " class" TernaryExpression BinaryOperation > MemberReference fileCount Literal 1 Literal "es" Literal "" Literal " to " MemberReference baseDir MemberReference Project MSG_INFO log IfStatement MethodInvocation ! adapter execute BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_RMIC_FAILED MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation && BinaryOperation != Literal null MemberReference sourceBase MethodInvocation ! baseDir MemberReference sourceBase equals BinaryOperation > MemberReference fileCount Literal 0 BlockStatement IfStatement MemberReference idl BlockStatement StatementExpression MethodInvocation Literal "Cannot determine sourcefiles in idl mode, " MemberReference Project MSG_WARN log StatementExpression MethodInvocation Literal "sourcebase attribute will be ignored." MemberReference Project MSG_WARN log BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference fileCount MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference baseDir MemberReference sourceBase Cast ReferenceType String MethodInvocation compileList MemberReference j elementAt MemberReference adapter moveGeneratedFile StatementExpression MethodInvocation compileList removeAllElements	1
MethodDeclaration Modifier private disconnect IfStatement BinaryOperation != MemberReference out Literal null BlockStatement TryStatement StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close StatementExpression Assignment MemberReference out Literal null = CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference in Literal null BlockStatement TryStatement StatementExpression MethodInvocation in close StatementExpression Assignment MemberReference in Literal null = CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference sock Literal null BlockStatement TryStatement StatementExpression MethodInvocation sock close StatementExpression Assignment MemberReference sock Literal null = CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference Literal null BlockStatement TryStatement StatementExpression MethodInvocation close StatementExpression Assignment MemberReference Literal null = CatchClause CatchClauseParameter IOException e	0
MethodDeclaration Modifier protected BasicType boolean okToDelete FormalParameter ReferenceType File d LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation d list IfStatement BinaryOperation == MemberReference list Literal null BlockStatement ReturnStatement Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference ArraySelector MemberReference i list LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference d MemberReference s IfStatement MethodInvocation f isDirectory BlockStatement IfStatement MethodInvocation ! MemberReference f okToDelete BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType String getRemoveIntChecksParameter ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference removeIntChecks Literal "+" Literal "-"	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal "sleep.xml" configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is a directory" Literal is a expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String XDocletException LocalVariableDeclaration ReferenceType XTag VariableDeclarator tag MethodInvocation getCurrentClassTag LocalVariableDeclaration ReferenceType String VariableDeclarator desc MethodInvocation tag Literal "description" getAttributeValue ReturnStatement TernaryExpression BinaryOperation != MemberReference desc Literal null MemberReference desc MemberReference	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation component getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public expectPropertySet FormalParameter ReferenceType String target FormalParameter ReferenceType String property FormalParameter ReferenceType String value StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference property MemberReference value assertPropertyEquals	0
MethodDeclaration Modifier public setDestfile FormalParameter Modifier final ReferenceType File destFile StatementExpression Assignment This MemberReference destFile MemberReference destFile =	0
MethodDeclaration Modifier private BasicType boolean checkClass FormalParameter ReferenceType String classname TryStatement IfStatement MemberReference ignoreSystemclasses BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = StatementExpression MethodInvocation loader Literal false setParentFirst StatementExpression MethodInvocation loader addJavaLibraries IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement TryStatement StatementExpression MethodInvocation loader MemberReference classname findClass CatchClause CatchClauseParameter SecurityException se ReturnStatement Literal true BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement StatementExpression MethodInvocation loader MemberReference classname loadClass BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator l This MethodInvocation getClass MethodInvocation getClassLoader IfStatement BinaryOperation != MemberReference l Literal null BlockStatement StatementExpression MethodInvocation Class MemberReference classname Literal true MemberReference l forName BlockStatement StatementExpression MethodInvocation Class MemberReference classname forName ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "class \"" MemberReference classname Literal "\" was not found" MemberReference Project MSG_DEBUG log ReturnStatement Literal false CatchClause CatchClauseParameter NoClassDefFoundError e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load dependent class \"" MethodInvocation e getMessage Literal "\" for class \"" MemberReference classname Literal "\"" MemberReference Project MSG_DEBUG log ReturnStatement Literal false	1
MethodDeclaration Modifier private addArg FormalParameter BasicType boolean sign FormalParameter ReferenceType String attribute StatementExpression MethodInvocation MethodInvocation BinaryOperation + MethodInvocation MemberReference sign getSignString MemberReference attribute setValue createArg StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public addAddFile FormalParameter ReferenceType String fileToAdd IfStatement BinaryOperation == MemberReference fileToAdd Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference fileToAdd addElement	0
MethodDeclaration Modifier protected ReferenceType View FormalParameter ReferenceType View raw ReturnStatement ClassCreator ReferenceType View MemberReference raw MethodInvocation ViewConfiguration	0
MethodDeclaration Modifier protected ReferenceType String getJarBaseName FormalParameter ReferenceType String descriptorFileName LocalVariableDeclaration ReferenceType String VariableDeclarator baseName Literal "" IfStatement MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme equals getValue BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator canonicalDescriptor MethodInvocation descriptorFileName Literal '\\' Literal '/' replace LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation canonicalDescriptor Literal '/' lastIndexOf IfStatement BinaryOperation != MemberReference index Literal - 1 BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation descriptorFileName Literal 0 BinaryOperation + MemberReference index Literal 1 substring = StatementExpression Assignment MemberReference baseName MemberReference config baseJarName += IfStatement MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme DESCRIPTOR equals getValue BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lastSeparatorIndex MethodInvocation descriptorFileName MemberReference File separator lastIndexOf LocalVariableDeclaration BasicType int VariableDeclarator endBaseName Literal - 1 IfStatement BinaryOperation != MemberReference lastSeparatorIndex Literal - 1 BlockStatement StatementExpression Assignment MemberReference endBaseName MethodInvocation descriptorFileName MemberReference config baseNameTerminator MemberReference lastSeparatorIndex indexOf = BlockStatement StatementExpression Assignment MemberReference endBaseName MethodInvocation descriptorFileName MemberReference config baseNameTerminator indexOf = IfStatement BinaryOperation != MemberReference endBaseName Literal - 1 BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation descriptorFileName Literal 0 MemberReference endBaseName substring = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to determine jar name " Literal "from descriptor \"" MemberReference descriptorFileName Literal "\"" IfStatement MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme DIRECTORY equals getValue BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference config descriptorDir MemberReference descriptorFileName LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation descriptorFile getAbsolutePath LocalVariableDeclaration BasicType int VariableDeclarator lastSeparatorIndex MethodInvocation path MemberReference File separator lastIndexOf IfStatement BinaryOperation == MemberReference lastSeparatorIndex Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to determine directory name holding descriptor" LocalVariableDeclaration ReferenceType String VariableDeclarator dirName MethodInvocation path Literal 0 MemberReference lastSeparatorIndex substring LocalVariableDeclaration BasicType int VariableDeclarator dirSeparatorIndex MethodInvocation dirName MemberReference File separator lastIndexOf IfStatement BinaryOperation != MemberReference dirSeparatorIndex Literal - 1 BlockStatement StatementExpression Assignment MemberReference dirName MethodInvocation dirName BinaryOperation + MemberReference dirSeparatorIndex Literal 1 substring = StatementExpression Assignment MemberReference baseName MemberReference dirName = IfStatement MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme EJB_NAME equals getValue BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation handler getEjbName = ReturnStatement MemberReference baseName	1
MethodDeclaration Modifier public FormalParameter ReferenceType String byline LocalVariableDeclaration ReferenceType Boolean VariableDeclarator res MethodInvocation Boolean MemberReference byline valueOf IfStatement BinaryOperation == MemberReference res Literal null BlockStatement StatementExpression Assignment MemberReference res MemberReference Boolean FALSE = StatementExpression Assignment This MemberReference byline MethodInvocation res booleanValue =	1
MethodDeclaration Modifier public test6 LocalVariableDeclaration ReferenceType String VariableDeclarator filename Literal MethodInvocation Literal '/' MemberReference File separatorChar replace "src/etc/testcases/taskdefs/thisfiledoesnotexist" StatementExpression MethodInvocation Literal "test6" BinaryOperation + MemberReference filename Literal " does not exist." expectLogContaining	0
MethodDeclaration Modifier private removeDir FormalParameter ReferenceType File dir IOException LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation dir list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference ArraySelector MemberReference i list LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference dir MemberReference s IfStatement MethodInvocation f isDirectory BlockStatement StatementExpression MethodInvocation MemberReference f removeDir BlockStatement IfStatement MethodInvocation ! f delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to delete file " MethodInvocation f getAbsolutePath IfStatement MethodInvocation ! dir delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to delete directory " MethodInvocation dir getAbsolutePath	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference Project MSG_WARN configureProject LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation BinaryOperation + Literal when not expected: " MemberReference log BinaryOperation == MethodInvocation log length Literal 0 assertTrue	0
MethodDeclaration Modifier private ReferenceType String getClassFilename FormalParameter ReferenceType String classname ReturnStatement BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".class"	0
MethodDeclaration Modifier public static ReferenceType Vector split FormalParameter ReferenceType String data FormalParameter BasicType int ch LocalVariableDeclaration ReferenceType Vector VariableDeclarator elems ClassCreator ReferenceType Vector LocalVariableDeclaration BasicType int VariableDeclarator pos Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement BinaryOperation != Assignment MemberReference pos MethodInvocation data MemberReference ch MemberReference i indexOf = Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator elem MethodInvocation data MemberReference i MemberReference pos substring StatementExpression MethodInvocation elems MemberReference elem addElement StatementExpression Assignment MemberReference i BinaryOperation + MemberReference pos Literal 1 = StatementExpression MethodInvocation elems MethodInvocation data MemberReference i substring addElement ReturnStatement MemberReference elems	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == Literal null MemberReference m_targetDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute not set." IfStatement BinaryOperation == Literal null MemberReference m_skinDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "SkinDirectory attribute not set." IfStatement BinaryOperation == Literal null MemberReference m_book BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute not set." StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "targetDirectory=" MemberReference m_targetDirectory setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation m_book toString setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation m_skinDirectory toString setValue createArg IfStatement BinaryOperation != Literal null MemberReference m_loaderConfig BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal MemberReference m_loaderConfig setValue createArg StatementExpression SuperMethodInvocation execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType String addproperty StatementExpression Assignment This MemberReference addproperty MemberReference addproperty =	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType UnknownElement ue FormalParameter ReferenceType RuntimeConfigurable w LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MethodInvocation getProject getComponentHelper LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation ue getComponentName LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation helper MemberReference ue MethodInvocation ue getNamespace MemberReference name createComponent IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement MethodInvocation Literal "task or type" MemberReference name IfStatement BinaryOperation instanceof MemberReference o ReferenceType PreSetDef ReferenceType PreSetDefinition BlockStatement LocalVariableDeclaration ReferenceType PreSetDef ReferenceType PreSetDefinition VariableDeclarator def Cast ReferenceType PreSetDef ReferenceType PreSetDefinition MemberReference o StatementExpression Assignment MemberReference o MethodInvocation def MethodInvocation ue getProject = IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement MethodInvocation BinaryOperation + Literal " MemberReference name MethodInvocation def MethodInvocation getComponentName getPreSets StatementExpression MethodInvocation ue MethodInvocation def getPreSets IfStatement BinaryOperation instanceof MemberReference o ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MemberReference o StatementExpression MethodInvocation task MethodInvocation ue getTaskType setTaskType StatementExpression MethodInvocation task MethodInvocation ue getTaskName setTaskName StatementExpression MethodInvocation task init IfStatement BinaryOperation instanceof MemberReference o ReferenceType UnknownElement BlockStatement StatementExpression Assignment MemberReference o Cast ReferenceType UnknownElement MemberReference o = IfStatement BinaryOperation instanceof MemberReference o ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference o IfStatement BinaryOperation instanceof MemberReference o ReferenceType ProjectComponent BlockStatement StatementExpression Cast ReferenceType ProjectComponent MemberReference o ReturnStatement MemberReference o	0
MethodDeclaration Modifier private initInternalFilters StatementExpression Assignment MemberReference in TernaryExpression BinaryOperation == MemberReference ctrlz MemberReference AddAsisRemove REMOVE ClassCreator ReferenceType RemoveEofFilter MemberReference in MemberReference in = StatementExpression Assignment MemberReference in ClassCreator ReferenceType NormalizeEolFilter MemberReference in MethodInvocation MemberReference eol calculateEolString MethodInvocation = IfStatement BinaryOperation != MemberReference tabs MemberReference AddAsisRemove ASIS BlockStatement IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType MaskJavaTabLiteralsFilter MemberReference in = StatementExpression Assignment MemberReference in TernaryExpression BinaryOperation == MemberReference tabs MemberReference AddAsisRemove ADD Cast ReferenceType Reader ClassCreator ReferenceType AddTabFilter MemberReference in MethodInvocation getTablength Cast ReferenceType Reader ClassCreator ReferenceType RemoveTabFilter MemberReference in MethodInvocation getTablength = StatementExpression Assignment MemberReference in TernaryExpression BinaryOperation == MemberReference ctrlz MemberReference AddAsisRemove ADD ClassCreator ReferenceType AddEofFilter MemberReference in MemberReference in = StatementExpression Assignment MemberReference initialized Literal true =	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setGenericJarSuffix FormalParameter ReferenceType String inString StatementExpression Assignment This MemberReference MemberReference inString =	0
MethodDeclaration Modifier public setVersion FormalParameter ReferenceType String version StatementExpression SuperMethodInvocation MemberReference version setInternalVersion	0
MethodDeclaration Modifier protected ReferenceType ArrayList testClassNameFromFile FormalParameter ReferenceType String classFileNames LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator tests ClassCreator ReferenceType ArrayList MemberReference classFileNames length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classFileNames length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator file MemberReference ArraySelector MemberReference i classFileNames IfStatement MethodInvocation MemberReference file isTestClass BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation MemberReference file classNameFromFile StatementExpression MethodInvocation tests MemberReference classname add ReturnStatement MemberReference tests	1
MethodDeclaration Modifier public process FormalParameter ReferenceType String line BuildException IfStatement MethodInvocation parent.util Literal "/^exit/" MemberReference line match BlockStatement ReturnStatement IfStatement BinaryOperation || MethodInvocation parent.util Literal "/^error:/" MemberReference line match MethodInvocation parent.util Literal "/^Perforce client error:/" MemberReference line match BlockStatement IfStatement BinaryOperation && MethodInvocation ! parent.util Literal "/label in sync/" MemberReference line match MethodInvocation ! parent.util Literal "/up-to-date/" MemberReference line match BlockStatement StatementExpression MethodInvocation parent Literal true setInError BlockStatement StatementExpression Assignment MemberReference line MethodInvocation parent.util Literal "s/^[^:]*: //" MemberReference line substitute = IfStatement MethodInvocation parent.util Literal "/^info.*?:/" MemberReference line match BlockStatement StatementExpression Assignment MemberReference line MethodInvocation parent.util Literal "s/^[^:]*: //" MemberReference line substitute = StatementExpression MethodInvocation parent MemberReference line TernaryExpression MethodInvocation parent getInError MemberReference Project MSG_ERR MemberReference Project MSG_INFO log IfStatement MethodInvocation parent getInError BlockStatement StatementExpression MethodInvocation parent BinaryOperation + BinaryOperation + MethodInvocation parent getErrorMessage MemberReference line MemberReference StringUtils LINE_SEP setErrorMessage	1
MethodDeclaration Modifier public FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation rootElement Literal Literal "true" setAttribute StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier public testFactory LocalVariableDeclaration ReferenceType Factory VariableDeclarator ea Cast ReferenceType Factory MethodInvocation EnumeratedAttribute ClassReference ReferenceType Factory Literal "one" getInstance StatementExpression MethodInvocation Literal "Factory did not set the right value." MethodInvocation ea getValue Literal "one" assertEquals TryStatement StatementExpression MethodInvocation EnumeratedAttribute ClassReference ReferenceType Factory Literal "illegal" getInstance StatementExpression MethodInvocation Literal "Factory should fail when trying to set an illegal value." fail CatchClause CatchClauseParameter BuildException be	1
MethodDeclaration Modifier public ReferenceType AnnotationProcessor getProcessorFor FormalParameter ReferenceType Set TypeArgument ReferenceType com ReferenceType sun ReferenceType mirror ReferenceType declaration ReferenceType AnnotationTypeDeclaration annotationTypeDeclarations FormalParameter ReferenceType AnnotationProcessorEnvironment env ReturnStatement ClassCreator ReferenceType MemberReference env	0
MethodDeclaration Modifier public setDir FormalParameter ReferenceType File d StatementExpression Assignment This MemberReference dir MemberReference d =	0
MethodDeclaration Modifier private ReferenceType FileNameMapper getMapper LocalVariableDeclaration ReferenceType FileNameMapper VariableDeclarator mapper Literal null IfStatement BinaryOperation == MemberReference mapperElement Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator mm ClassCreator ReferenceType StatementExpression MethodInvocation mm MethodInvocation targetFile getAbsolutePath StatementExpression Assignment MemberReference mapper MemberReference mm = BlockStatement StatementExpression Assignment MemberReference mapper MethodInvocation mapperElement getImplementation = ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public addSourcePath FormalParameter ReferenceType sourcePath IfStatement BinaryOperation == MemberReference sourcePath Literal null BlockStatement ReturnStatement StatementExpression This MemberReference sourcePath MethodInvocation MemberReference sourcePath append StatementExpression This MemberReference sourcePath MethodInvocation MethodInvocation sourcePath getProject setProject	1
MethodDeclaration Modifier public ReferenceType TarFileSet LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator fs ClassCreator ReferenceType TarFileSet StatementExpression MethodInvocation fs MethodInvocation getProject setProject StatementExpression MethodInvocation filesets MemberReference fs addElement ReturnStatement MemberReference fs	0
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType TestRunListener listener FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation listener MemberReference evt onSuiteEnded	0
MethodDeclaration Modifier protected checkParameters BuildException StatementExpression MethodInvocation BinaryOperation != MethodInvocation Literal null Literal "ServerName must be set." assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation Literal - 1 Literal "ServerPort must be set." assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation getProjectName Literal null Literal "ProjectName must be set." assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation getViewName Literal null Literal "ViewName must be set." assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation getUsername Literal null Literal "Username must be set." assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation getPassword Literal null Literal "Password must be set." assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation getTargetFolder Literal null Literal "TargetFolder must be set." assertTrue IfStatement BinaryOperation && BinaryOperation || MethodInvocation MethodInvocation Literal "/" endsWith getTargetFolder MethodInvocation MethodInvocation Literal "\\" endsWith getTargetFolder BinaryOperation > MethodInvocation MethodInvocation length getTargetFolder Literal 1 BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal 0 BinaryOperation - MethodInvocation MethodInvocation length getTargetFolder Literal 1 substring getTargetFolder setTargetFolder LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator dirExist ClassCreator ReferenceType java ReferenceType io ReferenceType File MethodInvocation getTargetFolder IfStatement BinaryOperation && MethodInvocation dirExist isDirectory MethodInvocation ! getForce BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Target directory exists. Set \"force\" " Literal "to \"true\" to continue anyway."	1
MethodDeclaration Modifier public testDoubleAttribute StatementExpression MethodInvocation Literal Literal "Should have detected duplicate attribute definition" Literal "attr1 attribute more than once" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String toVMSPath FormalParameter ReferenceType File f LocalVariableDeclaration ReferenceType String VariableDeclarator osPath LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MethodInvocation getPath MethodInvocation f getAbsolutePath normalize LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation f getName LocalVariableDeclaration BasicType boolean VariableDeclarator isAbsolute BinaryOperation == MethodInvocation path Literal 0 charAt MemberReference File separatorChar LocalVariableDeclaration BasicType boolean VariableDeclarator isDirectory BinaryOperation && MethodInvocation f isDirectory MethodInvocation ! name Literal true BinaryOperation - MethodInvocation name length Literal 4 Literal ".DIR" Literal 0 Literal 4 regionMatches LocalVariableDeclaration ReferenceType String VariableDeclarator device Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator directory Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator file Literal null LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 IfStatement MemberReference isAbsolute BlockStatement StatementExpression Assignment MemberReference index MethodInvocation path MemberReference File separatorChar Literal 1 indexOf = IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement BinaryOperation + MethodInvocation path Literal 1 substring Literal ":[000000]" BlockStatement StatementExpression Assignment MemberReference device MethodInvocation path Literal 1 MemberReference ++ index substring = IfStatement MemberReference isDirectory BlockStatement StatementExpression Assignment MemberReference directory ClassCreator ReferenceType StringBuffer MethodInvocation path MethodInvocation MemberReference File separatorChar Literal '.' replace MemberReference index substring = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator dirEnd MethodInvocation path MemberReference File separatorChar MethodInvocation path length lastIndexOf IfStatement BinaryOperation || BinaryOperation == MemberReference dirEnd Literal - 1 BinaryOperation < MemberReference dirEnd MemberReference index BlockStatement StatementExpression Assignment MemberReference file MethodInvocation path MemberReference index substring = BlockStatement StatementExpression Assignment MemberReference directory ClassCreator ReferenceType StringBuffer MethodInvocation path MethodInvocation MemberReference File separatorChar Literal '.' replace MemberReference index MemberReference dirEnd substring = StatementExpression Assignment MemberReference index BinaryOperation + MemberReference dirEnd Literal 1 = IfStatement BinaryOperation > MethodInvocation path length MemberReference index BlockStatement StatementExpression Assignment MemberReference file MethodInvocation path MemberReference index substring = IfStatement BinaryOperation && MemberReference ! isAbsolute BinaryOperation != MemberReference directory Literal null BlockStatement StatementExpression MethodInvocation directory Literal 0 Literal '.' insert StatementExpression Assignment MemberReference osPath BinaryOperation + BinaryOperation + TernaryExpression BinaryOperation != MemberReference device Literal null BinaryOperation + MemberReference device Literal ":" Literal "" TernaryExpression BinaryOperation != MemberReference directory Literal null BinaryOperation + BinaryOperation + Literal "[" MemberReference directory Literal "]" Literal "" TernaryExpression BinaryOperation != MemberReference file Literal null MemberReference file Literal "" = ReturnStatement MemberReference osPath	1
MethodDeclaration Modifier public setCharset FormalParameter ReferenceType String charset StatementExpression Assignment This MemberReference charset MemberReference charset =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String rootLocalFolder StatementExpression Assignment This MemberReference rootLocalFolder MemberReference rootLocalFolder =	0
MethodDeclaration Modifier public ReferenceType Factory getFactory ReturnStatement MemberReference factory	0
MethodDeclaration Modifier public FormalParameter BasicType boolean keepgenerated StatementExpression Assignment This MemberReference keepgenerated MemberReference keepgenerated =	0
MethodDeclaration Modifier private static printTargets FormalParameter ReferenceType Project project FormalParameter BasicType boolean printSubTargets LocalVariableDeclaration BasicType int VariableDeclarator maxLength Literal 0 LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator ptargets MethodInvocation project MethodInvocation elements getTargets LocalVariableDeclaration ReferenceType String VariableDeclarator targetName LocalVariableDeclaration ReferenceType String VariableDeclarator targetDescription LocalVariableDeclaration ReferenceType Target VariableDeclarator currentTarget LocalVariableDeclaration ReferenceType Vector VariableDeclarator topNames ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator topDescriptions ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator subNames ClassCreator ReferenceType Vector WhileStatement MethodInvocation ptargets hasMoreElements BlockStatement StatementExpression Assignment MemberReference currentTarget Cast ReferenceType Target MethodInvocation ptargets nextElement = StatementExpression Assignment MemberReference targetName MethodInvocation currentTarget getName = IfStatement MethodInvocation targetName Literal "" equals BlockStatement ContinueStatement StatementExpression Assignment MemberReference targetDescription MethodInvocation currentTarget getDescription = IfStatement BinaryOperation == MemberReference targetDescription Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation MemberReference subNames MemberReference targetName findTargetPosition StatementExpression MethodInvocation subNames MemberReference targetName MemberReference pos insertElementAt BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation MemberReference topNames MemberReference targetName findTargetPosition StatementExpression MethodInvocation topNames MemberReference targetName MemberReference pos insertElementAt StatementExpression MethodInvocation topDescriptions MemberReference targetDescription MemberReference pos insertElementAt IfStatement BinaryOperation > MethodInvocation targetName length MemberReference maxLength BlockStatement StatementExpression Assignment MemberReference maxLength MethodInvocation targetName length = StatementExpression MethodInvocation MemberReference project MemberReference topNames MemberReference topDescriptions Literal "Main targets:" MemberReference maxLength printTargets IfStatement BinaryOperation == MethodInvocation topNames size Literal 0 BlockStatement StatementExpression Assignment MemberReference printSubTargets Literal true = IfStatement MemberReference printSubTargets BlockStatement StatementExpression MethodInvocation MemberReference project MemberReference subNames Literal null Literal "Other targets:" Literal 0 printTargets LocalVariableDeclaration ReferenceType String VariableDeclarator defaultTarget MethodInvocation project getDefaultTarget IfStatement BinaryOperation && BinaryOperation != MemberReference defaultTarget Literal null Literal ! MethodInvocation MemberReference defaultTarget equals "" BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal "Default target: " MemberReference defaultTarget log	1
MethodDeclaration Modifier public testOutput InterruptedException LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation System.out Literal "foo" println StatementExpression MethodInvocation t start StatementExpression MethodInvocation t join	0
MethodDeclaration Modifier public addContainsRegexp FormalParameter ReferenceType ContainsRegexpSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addContainsRegexp	1
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" Literal "src invalid" expectBuildException	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement TernaryExpression BinaryOperation != MemberReference message Literal null BinaryOperation + BinaryOperation + MemberReference type Literal ": " MemberReference message MemberReference type	1
MethodDeclaration Modifier public testParentDiffersInCaseScanningSensitive IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/" Literal "ALPHA/beta/" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Should not be able to set both classname AND jar" expectBuildException	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public static ReferenceType String filterStack FormalParameter ReferenceType String stack IfStatement MemberReference ! BlockStatement ReturnStatement MemberReference stack LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference sw LocalVariableDeclaration ReferenceType StringReader VariableDeclarator sr ClassCreator ReferenceType StringReader MemberReference stack LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator br ClassCreator ReferenceType BufferedReader MemberReference sr LocalVariableDeclaration ReferenceType String VariableDeclarator line TryStatement WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation br readLine = Literal null BlockStatement IfStatement MethodInvocation ! MemberReference line filterLine BlockStatement StatementExpression MethodInvocation pw MemberReference line println CatchClause CatchClauseParameter Exception e ReturnStatement MemberReference stack ReturnStatement MethodInvocation sw toString	1
MethodDeclaration Modifier public setExcludesfile FormalParameter ReferenceType File StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference setExcludesfile	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BasicType int getPriority ReturnStatement MemberReference priority	0
MethodDeclaration Modifier public setPtime FormalParameter BasicType boolean ptime StatementExpression Assignment This MemberReference ptime MemberReference ptime =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null BinaryOperation + MemberReference FLAG_COMMENT MemberReference BinaryOperation + MemberReference FLAG_COMMENT Literal "-"	0
MethodDeclaration Modifier private init BuildException StatementExpression Assignment MemberReference granted ClassCreator ReferenceType java ReferenceType security ReferenceType Permissions = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation revokedPermissions listIterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Permissions ReferenceType Permission VariableDeclarator p Cast ReferenceType Permissions ReferenceType Permission MethodInvocation i next IfStatement BinaryOperation == MethodInvocation p getClassName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Revoked permission " MemberReference p Literal " does not contain a class." ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation grantedPermissions listIterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Permissions ReferenceType Permission VariableDeclarator p Cast ReferenceType Permissions ReferenceType Permission MethodInvocation i next IfStatement BinaryOperation == MethodInvocation p getClassName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Granted permission " MemberReference p Literal " does not contain a class." BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType security ReferenceType Permission VariableDeclarator perm ClassCreator ReferenceType UnresolvedPermission MethodInvocation p getClassName MethodInvocation p getName MethodInvocation p getActions Literal null StatementExpression MethodInvocation granted MemberReference perm add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType net ReferenceType SocketPermission Literal "localhost:1024-" Literal "listen" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.version" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vendor" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vendor.url" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.class.version" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "os.name" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "os.version" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "os.arch" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "file.encoding" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "file.separator" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "path.separator" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "line.separator" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.specification.version" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.specification.vendor" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.specification.name" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vm.specification.version" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vm.specification.vendor" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vm.specification.name" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vm.version" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vm.vendor" Literal "read" add StatementExpression MethodInvocation granted ClassCreator ReferenceType java ReferenceType util ReferenceType PropertyPermission Literal "java.vm.name" Literal "read" add	1
MethodDeclaration Modifier protected IfStatement This MethodInvocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " Using view label " MethodInvocation getLabel log IfStatement This MethodInvocation isUsingRevisionLabel BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " Using revision label " MethodInvocation getLabel log	0
MethodDeclaration Modifier public testCopyAndRemoveEmptyPreserve StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c/d" StatementExpression MethodInvocation MemberReference d assertFileIsPresent LocalVariableDeclaration ReferenceType String VariableDeclarator f BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/e/f" StatementExpression MethodInvocation MemberReference f assertFileIsNotPresent StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal "Removing orphan file:" indexOf getFullLog Literal - 1 assertTrue StatementExpression MethodInvocation Literal "Removed 1 dangling file assertDebuglogContaining StatementExpression MethodInvocation Literal "Removed 1 dangling directory assertDebuglogContaining	0
MethodDeclaration Modifier protected ReferenceType getBootClassPath LocalVariableDeclaration ReferenceType VariableDeclarator bp ClassCreator ReferenceType MemberReference project IfStatement BinaryOperation != MemberReference bootclasspath Literal null BlockStatement StatementExpression MethodInvocation bp MemberReference bootclasspath append ReturnStatement MethodInvocation bp Literal "ignore"	0
MethodDeclaration Modifier public FormalParameter ReferenceType String force BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference force Literal null MethodInvocation ! label Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "P4Sync: If you want to force, set force to string!" StatementExpression Assignment MemberReference P4CmdOpts Literal "-f" =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test StatementExpression MemberReference ++ successCount	0
MethodDeclaration Modifier public ReferenceType getPath ReturnStatement MemberReference path	0
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String tag FormalParameter ReferenceType AttributeList attrs SAXParseException IfStatement MethodInvocation tag Literal "project" equals BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference tag MemberReference attrs init ReferenceType ProjectHandler MemberReference helperImpl This BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + Literal "Config file is not of expected " Literal "XML type" MemberReference helperImpl locator	1
MethodDeclaration Modifier public start FormalParameter BasicType boolean loop IOException StatementExpression Assignment MemberReference server ClassCreator ReferenceType ServerSocket MemberReference port = WhileStatement BinaryOperation != MemberReference server Literal null BlockStatement StatementExpression Assignment MemberReference client MethodInvocation server accept = StatementExpression Assignment MemberReference messenger ClassCreator ReferenceType Messenger MethodInvocation client getInputStream MethodInvocation client getOutputStream = LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt Literal null TryStatement WhileStatement BinaryOperation != Assignment MemberReference evt MethodInvocation messenger read = Literal null BlockStatement StatementExpression MethodInvocation dispatcher MemberReference evt dispatchEvent CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace IfStatement MemberReference ! loop BlockStatement BreakStatement	1
MethodDeclaration Modifier private writeRun IOException LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lastShadow This MemberReference last IfStatement BinaryOperation < MemberReference lastShadow This MemberReference allowableBlockSize BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator currentCharShadow This MemberReference currentChar LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data StatementExpression Assignment MemberReference dataShadow ArraySelector MemberReference currentCharShadow inUse Literal true = LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator ch Cast BasicType byte MemberReference currentCharShadow LocalVariableDeclaration BasicType int VariableDeclarator runLengthShadow This MemberReference runLength StatementExpression This MemberReference crc MethodInvocation MemberReference currentCharShadow MemberReference runLengthShadow updateCRC SwitchStatement MemberReference runLengthShadow SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference dataShadow ArraySelector BinaryOperation + MemberReference lastShadow Literal 2 block MemberReference ch = StatementExpression Assignment This MemberReference last BinaryOperation + MemberReference lastShadow Literal 1 = BreakStatement SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference dataShadow ArraySelector BinaryOperation + MemberReference lastShadow Literal 2 block MemberReference ch = StatementExpression Assignment MemberReference dataShadow ArraySelector BinaryOperation + MemberReference lastShadow Literal 3 block MemberReference ch = StatementExpression Assignment This MemberReference last BinaryOperation + MemberReference lastShadow Literal 2 = BreakStatement SwitchStatementCase Literal 3 BlockStatement LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block MemberReference dataShadow block StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 2 block MemberReference ch = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 3 block MemberReference ch = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 4 block MemberReference ch = StatementExpression Assignment This MemberReference last BinaryOperation + MemberReference lastShadow Literal 3 = BreakStatement SwitchStatementCase BlockStatement StatementExpression Assignment MemberReference runLengthShadow Literal 4 -= StatementExpression Assignment MemberReference dataShadow ArraySelector MemberReference runLengthShadow inUse Literal true = LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block MemberReference dataShadow block StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 2 block MemberReference ch = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 3 block MemberReference ch = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 4 block MemberReference ch = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 5 block MemberReference ch = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 6 block Cast BasicType byte MemberReference runLengthShadow = StatementExpression Assignment This MemberReference last BinaryOperation + MemberReference lastShadow Literal 5 = BreakStatement BlockStatement StatementExpression MethodInvocation endBlock StatementExpression MethodInvocation initBlock StatementExpression MethodInvocation writeRun	1
MethodDeclaration Modifier public setOut FormalParameter ReferenceType String outf StatementExpression Assignment MemberReference mOut MemberReference outf =	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType FileNameMapper fileNameMapper IfStatement BinaryOperation || BinaryOperation == This MemberReference fileNameMapper BinaryOperation && BinaryOperation instanceof MemberReference fileNameMapper ReferenceType ContainerMapper Cast ReferenceType ContainerMapper MemberReference fileNameMapper BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal mapper containment condition detected" BlockStatement StatementExpression MethodInvocation mappers MemberReference fileNameMapper add	1
MethodDeclaration Modifier public setSrc FormalParameter ReferenceType String fileName StatementExpression MethodInvocation helper ClassCreator ReferenceType File MemberReference fileName setSrc	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String action StatementExpression Assignment This MemberReference action MemberReference action =	0
MethodDeclaration Modifier public setCommand FormalParameter ReferenceType String command StatementExpression Assignment This MemberReference command MemberReference command =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType ModifiedSelector	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression Assignment This MemberReference classpath MemberReference classpath =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "src/etc/testcases/types/xmlcatalog.xml" configureProject StatementExpression MethodInvocation Literal "testdocumentwithcatalog" Literal Literal "No news is good news" expectPropertySet	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public testExcludeHasPrecedence LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/**" setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/**" setExcludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public execute BuildException TryStatement StatementExpression MethodInvocation validate LocalVariableDeclaration BasicType long VariableDeclarator sleepTime MethodInvocation getSleepTime StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "sleeping for " MemberReference sleepTime Literal " milliseconds" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference sleepTime doSleep CatchClause CatchClauseParameter Exception e IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation e toString StatementExpression MethodInvocation MemberReference text MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier private addPath FormalParameter ReferenceType String path FormalParameter BasicType boolean getJars FormalParameter ReferenceType List libPathURLs MalformedURLException LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference path MemberReference File pathSeparator WhileStatement MethodInvocation tokenizer hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator elementName MethodInvocation tokenizer nextToken LocalVariableDeclaration ReferenceType File VariableDeclarator element ClassCreator ReferenceType File MemberReference elementName IfStatement BinaryOperation && BinaryOperation != MethodInvocation elementName Literal "%" indexOf Literal - 1 MethodInvocation ! element exists BlockStatement ContinueStatement IfStatement BinaryOperation && MemberReference getJars MethodInvocation element isDirectory BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator dirURLs MethodInvocation Locator MemberReference element getLocationURLs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference dirURLs length MemberReference ++ j BlockStatement StatementExpression MethodInvocation libPathURLs MemberReference ArraySelector MemberReference j dirURLs add StatementExpression MethodInvocation libPathURLs MethodInvocation Locator MemberReference element fileToURL add	1
MethodDeclaration Modifier public setPathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createPath	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator other Cast ReferenceType MemberReference o ReturnStatement BinaryOperation && BinaryOperation && TernaryExpression BinaryOperation == MemberReference type Literal null BinaryOperation == MemberReference other type Literal null MethodInvocation type MemberReference other type equals TernaryExpression BinaryOperation == MemberReference message Literal null BinaryOperation == MemberReference other message Literal null MethodInvocation message MemberReference other message equals TernaryExpression BinaryOperation == MemberReference stacktrace Literal null BinaryOperation == MemberReference other stacktrace Literal null MethodInvocation stacktrace MemberReference other stacktrace equals ReturnStatement Literal false	1
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier protected addResources FormalParameter ReferenceType NetCommand command LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation resources elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType DotnetResource VariableDeclarator resource Cast ReferenceType DotnetResource MethodInvocation e nextElement StatementExpression MethodInvocation MemberReference command MemberReference resource createResourceParameter	0
MethodDeclaration Modifier public run FormalParameter ReferenceType TestResult result LocalVariableDeclaration ReferenceType Thread VariableDeclarator worker MethodInvocation MemberReference result createWorker StatementExpression MethodInvocation worker start TryStatement StatementExpression MethodInvocation worker MemberReference timeOut join IfStatement MethodInvocation worker isAlive BlockStatement StatementExpression MethodInvocation worker StatementExpression MethodInvocation result MethodInvocation ClassCreator ReferenceType AssertionFailedError BinaryOperation + BinaryOperation + Literal out after " MemberReference timeOut Literal "ms" addFailure CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation worker StatementExpression MethodInvocation result MethodInvocation MemberReference e addError StatementExpression MethodInvocation result stop	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Project project FormalParameter ReferenceType Object source BuildException StatementExpression MethodInvocation MemberReference project hookSpecialTasks LocalVariableDeclaration ReferenceType VariableDeclarator context ClassCreator ReferenceType MemberReference project This StatementExpression MethodInvocation project Literal "ant.parsing.context" MemberReference context StatementExpression MethodInvocation MemberReference project MemberReference source ClassCreator ReferenceType RootHandler MemberReference context parse StatementExpression MethodInvocation execute	0
MethodDeclaration Modifier protected ReferenceType Collection getCollection FormalParameter BasicType boolean asString LocalVariableDeclaration ReferenceType List VariableDeclarator rc MethodInvocation IfStatement MethodInvocation rc isEmpty BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator union ClassCreator ReferenceType ArrayList BinaryOperation * MethodInvocation rc size Literal 2 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator rcIter MethodInvocation rc iterator MethodInvocation rcIter hasNext BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator r MethodInvocation MethodInvocation iterator MemberReference rcIter MethodInvocation r hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation r next IfStatement MemberReference asString BlockStatement StatementExpression Assignment MemberReference o MethodInvocation o toString = IfStatement MethodInvocation ! union MemberReference o contains BlockStatement StatementExpression MethodInvocation union MemberReference o add ReturnStatement MemberReference union	1
MethodDeclaration Modifier public ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef ReturnStatement MethodInvocation String MethodInvocation getValue valueOf	1
MethodDeclaration Modifier public validate IfStatement BinaryOperation == MethodInvocation getError Literal null BlockStatement StatementExpression MethodInvocation verifySettings IfStatement BinaryOperation != MethodInvocation getError Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference errmsg	0
MethodDeclaration Modifier public BasicType int length ReturnStatement MethodInvocation line length	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "" expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "xmlcatalognested" executeTarget	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath MemberReference classpath = BlockStatement StatementExpression MethodInvocation compileClasspath MemberReference classpath append	0
MethodDeclaration Modifier public validate BuildException IfStatement BinaryOperation == Literal null MemberReference name BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal "Missing name from parameter." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation == Literal null MemberReference value BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Missing value from parameter " MemberReference name Literal "." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public BasicType int selectorCount IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation selectorCount getRef ReturnStatement SuperMethodInvocation selectorCount	1
MethodDeclaration Modifier private static printProperties FormalParameter ReferenceType Hashtable xmlproperties LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator keyEnum MethodInvocation xmlproperties keys WhileStatement MethodInvocation keyEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentKey MethodInvocation keyEnum MethodInvocation toString nextElement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + MemberReference currentKey Literal " = " MethodInvocation xmlproperties MemberReference currentKey get println	1
MethodDeclaration Modifier private ReferenceType List sortProperties FormalParameter ReferenceType Properties props LocalVariableDeclaration ReferenceType List VariableDeclarator sorted ClassCreator ReferenceType ArrayList MethodInvocation props size LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props propertyNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation sorted ClassCreator ReferenceType Tuple MemberReference name MethodInvocation props MemberReference name getProperty add StatementExpression MethodInvocation Collections MemberReference sorted sort ReturnStatement MemberReference sorted	0
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList attrs SAXException StatementExpression Assignment This MemberReference currentElement MemberReference name = StatementExpression Assignment MemberReference currentText Literal "" = IfStatement BinaryOperation || MethodInvocation name MemberReference EJB_REF equals MethodInvocation name MemberReference EJB_LOCAL_REF equals BlockStatement StatementExpression Assignment MemberReference inEJBRef Literal true = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_LOOKING_EJBJAR MethodInvocation name MemberReference EJB_JAR equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_EJBJAR = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_EJBJAR MethodInvocation name MemberReference ENTERPRISE_BEANS equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_BEANS = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_BEANS MethodInvocation name MemberReference SESSION_BEAN equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_SESSION = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_BEANS MethodInvocation name MemberReference ENTITY_BEAN equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_ENTITY = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_BEANS MethodInvocation name MemberReference MESSAGE_BEAN equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_MESSAGE =	1
MethodDeclaration Modifier public setQuiet FormalParameter BasicType boolean quiet StatementExpression Assignment This MemberReference quiet MemberReference quiet = IfStatement MemberReference quiet BlockStatement StatementExpression Assignment This MemberReference failonerror Literal false =	0
MethodDeclaration Modifier public test11 StatementExpression MethodInvocation Literal "test11" executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty assertNull	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MethodInvocation iter hasNext	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter BasicType boolean user IfStatement BinaryOperation != MethodInvocation getNext Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MethodInvocation MemberReference ns MemberReference name MemberReference user getNext IfStatement BinaryOperation != MemberReference o Literal null ReturnStatement MemberReference o IfStatement MethodInvocation name Literal "toString:" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name Literal MethodInvocation length "toString:" substring = LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation project MemberReference name getReference IfStatement BinaryOperation == MemberReference v Literal null ReturnStatement Literal null ReturnStatement MethodInvocation v toString ReturnStatement Literal null	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal imported assertLogContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private getNusersCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation == MethodInvocation getNusers Literal null BlockStatement ReturnStatement BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NUSERS setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getNusers setValue createArgument	1
MethodDeclaration Modifier private ReferenceType BuildException ReturnStatement ClassCreator ReferenceType BuildException BinaryOperation + SuperMethodInvocation toString MemberReference ONE_CONTROL_MESSAGE	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType String file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public validate BuildException IfStatement BinaryOperation < MethodInvocation getSleepTime Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal sleep are not " Literal	0
MethodDeclaration Modifier private ReferenceType String getMessage FormalParameter ReferenceType Exception ex ReturnStatement TernaryExpression BinaryOperation == MethodInvocation ex getMessage Literal null MethodInvocation ex toString MethodInvocation ex getMessage	0
MethodDeclaration Modifier public ReferenceType String getResource ReturnStatement MemberReference resource	0
MethodDeclaration Modifier protected configureProject FormalParameter ReferenceType String resource LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation MemberReference resource getResource getClass StatementExpression MethodInvocation BinaryOperation + Literal "Could not find resource :" MemberReference resource MemberReference url assertNotNull StatementExpression SuperMethodInvocation MethodInvocation url getFile configureProject	0
MethodDeclaration Modifier public setUsertokenmanager FormalParameter BasicType boolean userTokenManager StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference userTokenManager MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType String getRelativePath IOException BuildException IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression Assignment MemberReference traversesSymlinks MethodInvocation parent isTraverseSymlinks = StatementExpression Assignment MemberReference relativePath MethodInvocation MethodInvocation parent getAbsolutePath MethodInvocation parent getRelativePath getRelativePath = BlockStatement StatementExpression Assignment MemberReference relativePath MethodInvocation MemberReference rootPath Literal "" getRelativePath = StatementExpression Assignment MemberReference Literal true = ReturnStatement MemberReference relativePath	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation helper This setProjectComponent	1
MethodDeclaration Modifier public setRefId FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ga ClassCreator ReferenceType StatementExpression MethodInvocation groups MemberReference ga addElement ReturnStatement MemberReference ga	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference optionExplicit	0
MethodDeclaration Modifier public test7 StatementExpression MethodInvocation ClassCreator ReferenceType Literal "address expectNameAddress2	0
MethodDeclaration Modifier synchronized protected BasicType boolean contains FormalParameter ReferenceType FileNameMapper fileNameMapper LocalVariableDeclaration BasicType boolean VariableDeclarator foundit Literal false ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation mappers iterator BinaryOperation && MethodInvocation iter hasNext MemberReference ! foundit BlockStatement LocalVariableDeclaration ReferenceType FileNameMapper VariableDeclarator next Cast ReferenceType FileNameMapper MethodInvocation iter next StatementExpression Assignment MemberReference foundit BinaryOperation || BinaryOperation == MemberReference next MemberReference fileNameMapper BinaryOperation && BinaryOperation instanceof MemberReference next ReferenceType ContainerMapper Cast ReferenceType ContainerMapper MemberReference next |= ReturnStatement MemberReference foundit	1
MethodDeclaration Modifier public ReferenceType FileSelector getSelectors FormalParameter ReferenceType Project p ReturnStatement MethodInvocation fileset MemberReference p getSelectors	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation getSelectors MethodInvocation i hasNext BlockStatement IfStatement Cast ReferenceType ResourceSelector MethodInvocation i next BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier private BasicType boolean isRebuildNeeded FormalParameter ReferenceType Schema schema FormalParameter BasicType long destLastModified IfStatement BinaryOperation == MemberReference destLastModified Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation ! FILE_UTILS MethodInvocation schema MemberReference destLastModified isUpToDate	0
MethodDeclaration Modifier public FormalParameter ReferenceType String inString StatementExpression Assignment This MemberReference toplinkDescriptor MemberReference inString =	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean b StatementExpression Assignment MemberReference cache MemberReference b =	0
MethodDeclaration Modifier public test12 StatementExpression MethodInvocation Literal "test12" Literal "Section with no name" Literal "Sections must have a name" expectBuildExceptionContaining	0
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter BasicType boolean b LocalVariableDeclaration BasicType int VariableDeclarator t Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference b length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i b BlockStatement StatementExpression MemberReference ++ t ReturnStatement MethodInvocation MemberReference t BinaryOperation - MemberReference b length MemberReference t evaluate	1
MethodDeclaration Modifier private FormalParameter ReferenceType AntTypeDefinition def LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation def getName SynchronizedStatement MemberReference antTypeTable StatementExpression Assignment MemberReference rebuildTaskClassDefinitions Literal true = StatementExpression Assignment MemberReference rebuildTypeClassDefinitions Literal true = LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator old MethodInvocation antTypeTable MemberReference name getDefinition IfStatement BinaryOperation != MemberReference old Literal null BlockStatement IfStatement MethodInvocation MemberReference def MemberReference old sameDefinition BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator oldClass MethodInvocation antTypeTable MemberReference name getExposedClass LocalVariableDeclaration BasicType boolean VariableDeclarator isTask BinaryOperation && BinaryOperation != MemberReference oldClass Literal null ClassReference MethodInvocation MemberReference oldClass isAssignableFrom ReferenceType Task StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal "Trying to override old of " TernaryExpression MemberReference isTask Literal "task " Literal "datatype " MemberReference name TernaryExpression MethodInvocation def MemberReference old MemberReference project similarDefinition MemberReference Project MSG_VERBOSE MemberReference Project MSG_WARN log StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal " +Datatype " MemberReference name Literal " " MethodInvocation def getClassName MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation antTypeTable MemberReference name MemberReference def put	1
MethodDeclaration Modifier public testIsReference StatementExpression MethodInvocation Literal "&#20;" MethodInvocation w Literal "&#20;" isReference assertTrue StatementExpression MethodInvocation Literal "&#x20;" MethodInvocation w Literal "&#x20;" isReference assertTrue StatementExpression MethodInvocation Literal "&#xA0;" MethodInvocation w Literal "&#xA0;" isReference assertTrue StatementExpression MethodInvocation Literal "&#A0;" MethodInvocation ! w Literal "&#A0;" isReference assertTrue StatementExpression MethodInvocation Literal "20;" MethodInvocation ! w Literal "20;" isReference assertTrue StatementExpression MethodInvocation Literal "&#20" MethodInvocation ! w Literal "&#20" isReference assertTrue StatementExpression MethodInvocation Literal "&quot;" MethodInvocation w Literal "&quot;" isReference assertTrue StatementExpression MethodInvocation Literal "&apos;" MethodInvocation w Literal "&apos;" isReference assertTrue StatementExpression MethodInvocation Literal "&gt;" MethodInvocation w Literal "&gt;" isReference assertTrue StatementExpression MethodInvocation Literal "&lt;" MethodInvocation w Literal "&lt;" isReference assertTrue StatementExpression MethodInvocation Literal "&amp;" MethodInvocation w Literal "&amp;" isReference assertTrue	1
MethodDeclaration Modifier public FormalParameter BasicType boolean explicit StatementExpression Assignment This MemberReference explicit MemberReference explicit =	0
MethodDeclaration Modifier public setSourcepathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createSourcepath	0
MethodDeclaration Modifier public setPattern FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference pattern MemberReference value =	0
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType Location location StatementExpression Assignment This MemberReference location MemberReference location =	0
MethodDeclaration Modifier public ReferenceType Hashtable getDataTypeDefinitions ReturnStatement MethodInvocation ComponentHelper MethodInvocation getDataTypeDefinitions This getComponentHelper	1
MethodDeclaration Modifier public BasicType boolean isValid StatementExpression MethodInvocation Literal log ReturnStatement Literal true	0
MethodDeclaration Modifier public setExcludesfile FormalParameter ReferenceType File excludesFile BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MethodInvocation excludesFile getAbsolutePath setName createExcludesFile	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MemberReference ! defaultrequested MethodInvocation add Literal "" equals MethodInvocation remove Literal "" equals MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "<defaultexcludes> task must set " Literal "at least one attribute (echo=\"false\"" Literal " doesn't count since that is the default" IfStatement MemberReference defaultrequested BlockStatement StatementExpression MethodInvocation DirectoryScanner resetDefaultExcludes IfStatement MethodInvocation ! add Literal "" equals BlockStatement StatementExpression MethodInvocation DirectoryScanner MemberReference add addDefaultExclude IfStatement MethodInvocation ! remove Literal "" equals BlockStatement StatementExpression MethodInvocation DirectoryScanner MemberReference remove removeDefaultExclude IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator message ClassCreator ReferenceType StringBuffer Literal "Current Default Excludes:" StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation DirectoryScanner ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation message Literal " " append StatementExpression MethodInvocation message MemberReference ArraySelector MemberReference i append StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation MethodInvocation message toString MemberReference logLevel log	1
MethodDeclaration Modifier public ReferenceType ClassLoader ReturnStatement MemberReference coreLoader	0
MethodDeclaration Modifier public ReferenceType getError ReturnStatement MemberReference error	0
MethodDeclaration Modifier public setDefaultTarget FormalParameter ReferenceType String defaultTarget StatementExpression Assignment This MemberReference defaultTarget MemberReference defaultTarget =	1
MethodDeclaration Modifier public synchronized setNewProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value IfStatement BinaryOperation != Literal null MethodInvocation properties MemberReference name get BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal ignored for property \"" MemberReference name Literal "\"" MemberReference Project MSG_VERBOSE log ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator done MethodInvocation MemberReference ns MemberReference name MemberReference value Literal false Literal false Literal true setPropertyHook IfStatement MemberReference done BlockStatement ReturnStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation properties MemberReference name MemberReference value put	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public ReferenceType CVSEntry LocalVariableDeclaration Modifier final ReferenceType CVSEntry VariableDeclarator array ArrayCreator ReferenceType CVSEntry MethodInvocation entries size LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation entries elements MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i array Cast ReferenceType CVSEntry MethodInvocation e nextElement = ReturnStatement MemberReference array	0
MethodDeclaration Modifier public final setSosServerPath FormalParameter ReferenceType String sosServerPath StatementExpression Assignment This MemberReference sosServerPath MemberReference sosServerPath =	0
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly ReturnStatement BinaryOperation && MethodInvocation isReference MethodInvocation MethodInvocation isFilesystemOnly getRef	0
MethodDeclaration Modifier public addFilter FormalParameter ReferenceType String token FormalParameter ReferenceType String value IfStatement BinaryOperation == MemberReference token Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation globalFilterSet ClassCreator ReferenceType FilterSet ReferenceType Filter MemberReference token MemberReference value addFilter	1
MethodDeclaration Modifier public setDestdir FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration * flag to enable server side code * * @param server */ Modifier public setServer FormalParameter BasicType boolean server StatementExpression Assignment This MemberReference server MemberReference server =	0
MethodDeclaration Modifier private getCommentCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression MethodInvocation Literal "clean" executeTarget	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String dir StatementExpression Assignment MemberReference mClearToolDir MethodInvocation FileUtils MemberReference dir translatePath =	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getEmptyChangeList BuildException LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator stringbuf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation Literal ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line IfStatement MethodInvocation ! util Literal "/^#/" MemberReference line match BlockStatement IfStatement MethodInvocation util Literal "/error/" MemberReference line match BlockStatement StatementExpression MethodInvocation Literal Error" MemberReference Project MSG_VERBOSE log ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Perforce Error, " Literal "check client settings and/or server" IfStatement MethodInvocation util Literal "/<enter description here>/" MemberReference line match BlockStatement StatementExpression Assignment MemberReference description MethodInvocation MemberReference description backslash = StatementExpression Assignment MemberReference line MethodInvocation util BinaryOperation + BinaryOperation + Literal "s/<enter description here>/" MemberReference description Literal "/" MemberReference line substitute = IfStatement MethodInvocation util Literal "/\\/\\//" MemberReference line match BlockStatement ReturnStatement StatementExpression MethodInvocation stringbuf MemberReference line append StatementExpression MethodInvocation stringbuf Literal "\n" append execP4Command ReturnStatement MethodInvocation stringbuf toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType String memoryInitialSize StatementExpression Assignment This MemberReference memoryInitialSize MemberReference memoryInitialSize =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression Assignment This MemberReference script Literal "" =	0
MethodDeclaration Modifier public setDepends FormalParameter ReferenceType String depS IfStatement BinaryOperation > MethodInvocation depS length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference depS Literal "," Literal true WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation tok MethodInvocation trim nextToken IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "" Literal MethodInvocation MemberReference token equals "," BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Syntax Error: depends " Literal of target \"" MethodInvocation getName Literal "\" has an empty string as dependency." StatementExpression MethodInvocation MemberReference token addDependency IfStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation tok nextToken = IfStatement BinaryOperation || MethodInvocation ! tok hasMoreTokens Literal ! MethodInvocation MemberReference token equals "," BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Syntax Error: " Literal for target \"" MethodInvocation getName Literal "\" ends with a character"	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation isRecurse BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_RECURSE setValue createArgument IfStatement MethodInvocation isVerbose BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_VERBOSE setValue createArgument IfStatement BinaryOperation != MethodInvocation getCcmProject Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_PROJECT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCcmProject setValue createArgument	0
MethodDeclaration Modifier public synchronized setURL FormalParameter ReferenceType URL u StatementExpression MethodInvocation StatementExpression Assignment MemberReference url MemberReference u =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "the attribute name \"text\" has already been used by the text element" expectBuildException	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileNameMapper fileNameMapper StatementExpression MethodInvocation MethodInvocation MemberReference fileNameMapper add createMapper	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String language StatementExpression MethodInvocation helper MemberReference language setLanguage	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference mComment MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression MethodInvocation MemberReference label	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException IfStatement BinaryOperation == MemberReference project Literal null BlockStatement IfStatement BinaryOperation == MemberReference workingDir Literal null BlockStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal "Cannot locate antRun script: " Literal "No project provided" LocalVariableDeclaration ReferenceType String VariableDeclarator antHome MethodInvocation project MemberReference MagicNames ANT_HOME getProperty IfStatement BinaryOperation == MemberReference antHome Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot locate antRun script: " Literal "Property '" MemberReference MagicNames ANT_HOME Literal "' not found" LocalVariableDeclaration ReferenceType String VariableDeclarator antRun MethodInvocation FILE_UTILS MethodInvocation toString MethodInvocation project getBaseDir BinaryOperation + BinaryOperation + MemberReference antHome MemberReference File separator MemberReference myScript resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator commandDir MemberReference workingDir IfStatement BinaryOperation && BinaryOperation == MemberReference workingDir Literal null BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression Assignment MemberReference commandDir MethodInvocation project getBaseDir = LocalVariableDeclaration ReferenceType String VariableDeclarator newcmd ArrayCreator ReferenceType String BinaryOperation + MemberReference cmd length Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 newcmd MemberReference antRun = StatementExpression Assignment MemberReference ArraySelector Literal 1 newcmd MethodInvocation commandDir getAbsolutePath = StatementExpression MethodInvocation System MemberReference cmd Literal 0 MemberReference newcmd Literal 2 MemberReference cmd length arraycopy ReturnStatement MethodInvocation MemberReference project MemberReference newcmd MemberReference env exec	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment MemberReference attributeName MemberReference name =	0
MethodDeclaration Modifier protected BasicType int ReturnStatement MethodInvocation conditions size	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference formats	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "out of range" Literal "out of the 1-10" expectBuildExceptionContaining	0
MethodDeclaration Modifier private getEltypeCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getEltype Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getEltype setValue createArgument	0
MethodDeclaration Modifier public BasicType boolean isMimeTypeSpecified ReturnStatement MemberReference specified	0
MethodDeclaration Modifier public testname StatementExpression MethodInvocation Literal "testname" executeTarget	0
MethodDeclaration Modifier protected zipResource FormalParameter ReferenceType Resource resource FormalParameter ReferenceType OutputStream zOut IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator rIn MethodInvocation resource getInputStream TryStatement StatementExpression MethodInvocation MemberReference rIn MemberReference zOut zipFile StatementExpression MethodInvocation rIn close	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer i StatementExpression MethodInvocation Literal 2 MethodInvocation i intValue assertEquals	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String text StatementExpression MethodInvocation helper MemberReference text addText	0
MethodDeclaration Modifier public ReferenceType String getError ReturnStatement MethodInvocation MemberReference errBuffer cleanBuffer	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required attribute missing" expectBuildException	0
MethodDeclaration Modifier public appendBuiltin FormalParameter ReferenceType BuiltinPropertySetName b LocalVariableDeclaration ReferenceType PropertyRef VariableDeclarator r ClassCreator ReferenceType PropertyRef StatementExpression MethodInvocation r MemberReference b setBuiltin StatementExpression MethodInvocation MemberReference r addPropertyref	0
MethodDeclaration Modifier public setGranularity FormalParameter BasicType long granularity StatementExpression Assignment This MemberReference granularity MemberReference granularity =	1
MethodDeclaration Modifier private ReferenceType String localize FormalParameter ReferenceType String path StatementExpression Assignment MemberReference path BinaryOperation + MemberReference root MethodInvocation path Literal 1 substring = ReturnStatement MethodInvocation path MethodInvocation Literal '/' MemberReference File separatorChar replace Literal '\\' MemberReference File separatorChar replace	0
MethodDeclaration Modifier private ReferenceType String createOutputFileName FormalParameter ReferenceType File destFile FormalParameter ReferenceType String optionalOutputFile FormalParameter BasicType boolean plain LocalVariableDeclaration ReferenceType String VariableDeclarator suffix MemberReference DEFAULT_SUFFIX_HTML LocalVariableDeclaration ReferenceType String VariableDeclarator javaccFile MethodInvocation destFile MethodInvocation Literal '\\' Literal '/' replace getAbsolutePath IfStatement MemberReference plain BlockStatement StatementExpression Assignment MemberReference suffix MemberReference DEFAULT_SUFFIX_TEXT = IfStatement BinaryOperation || BinaryOperation == MemberReference optionalOutputFile Literal null MethodInvocation optionalOutputFile Literal "" equals BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator filePos MethodInvocation javaccFile Literal "/" lastIndexOf IfStatement BinaryOperation >= MemberReference filePos Literal 0 BlockStatement StatementExpression Assignment MemberReference javaccFile MethodInvocation javaccFile BinaryOperation + MemberReference filePos Literal 1 substring = LocalVariableDeclaration BasicType int VariableDeclarator suffixPos MethodInvocation javaccFile Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference suffixPos Literal - 1 BlockStatement StatementExpression Assignment MemberReference optionalOutputFile BinaryOperation + MemberReference javaccFile MemberReference suffix = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentSuffix MethodInvocation javaccFile MemberReference suffixPos substring IfStatement MethodInvocation currentSuffix MemberReference suffix equals BlockStatement StatementExpression Assignment MemberReference optionalOutputFile BinaryOperation + MemberReference javaccFile MemberReference suffix = BlockStatement StatementExpression Assignment MemberReference optionalOutputFile BinaryOperation + MethodInvocation javaccFile Literal 0 MemberReference suffixPos substring MemberReference suffix = BlockStatement StatementExpression Assignment MemberReference optionalOutputFile MethodInvocation optionalOutputFile Literal '\\' Literal '/' replace = ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation getBaseDir getProject Literal "/" MemberReference optionalOutputFile	1
MethodDeclaration Modifier public synchronized complete IOException StatementExpression MethodInvocation System.out flush StatementExpression MethodInvocation System.err flush IfStatement BinaryOperation != MemberReference inputStream Literal null BlockStatement StatementExpression MethodInvocation inputStream close StatementExpression MethodInvocation outputStream flush StatementExpression MethodInvocation outputStream close StatementExpression MethodInvocation errorStream flush StatementExpression MethodInvocation errorStream close WhileStatement BinaryOperation > MethodInvocation threadGroup activeCount Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation managingTask BinaryOperation + BinaryOperation + Literal "waiting for " MethodInvocation threadGroup activeCount Literal " Threads:" MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread ArrayCreator ReferenceType Thread MethodInvocation threadGroup activeCount StatementExpression MethodInvocation threadGroup MemberReference thread enumerate ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MemberReference thread length BinaryOperation != MemberReference ArraySelector MemberReference i thread Literal null MemberReference ++ i BlockStatement TryStatement StatementExpression MethodInvocation managingTask MemberReference ArraySelector MemberReference i MethodInvocation toString thread MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter NullPointerException enPeaEx StatementExpression MethodInvocation Literal 1000 wait CatchClause CatchClauseParameter InterruptedException eyeEx StatementExpression MethodInvocation setProperties StatementExpression Assignment MemberReference inputStream Literal null = StatementExpression Assignment MemberReference outputStream Literal null = StatementExpression Assignment MemberReference errorStream Literal null = StatementExpression Assignment MemberReference outPrintStream Literal null = StatementExpression Assignment MemberReference errorPrintStream Literal null =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String jarpathname StatementExpression MethodInvocation javaCommand MemberReference jarpathname setExecutable StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Vector getWrapperStack ReturnStatement MemberReference wStack	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Vector getPvcsprojects ReturnStatement MemberReference pvcsProjects	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference setRefid createClasspath	0
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only single argument resource collections" Literal " are supported as archives" StatementExpression MethodInvocation Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator setSrcResource	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testRecreateNewerFileSetup" Literal "testRecreateWithoutUpdateNewerFile" testRecreate	0
MethodDeclaration Modifier public setVmversion FormalParameter ReferenceType String value StatementExpression Assignment MemberReference vmVersion MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String getSpecificationVendor ReturnStatement MemberReference specificationVendor	0
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType String out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier public ReferenceType Object getProxy ReturnStatement MemberReference proxy	0
MethodDeclaration Modifier public setDirMode FormalParameter ReferenceType String octalString StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation Integer MemberReference octalString MemberReference BASE_OCTAL parseInt	0
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a StatementExpression MethodInvocation checkChildrenAllowed IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only single argument resource collections" Literal " are supported as archives" StatementExpression MethodInvocation Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator setSrcResource	0
MethodDeclaration Modifier public FormalParameter ReferenceType assertion StatementExpression MethodInvocation checkChildrenAllowed StatementExpression MethodInvocation assertionList MemberReference assertion add	0
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration BasicType int VariableDeclarator priority MethodInvocation event getPriority IfStatement BinaryOperation <= MemberReference priority MemberReference msgOutputLevel BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator message ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation && BinaryOperation != MethodInvocation event getTask Literal null MemberReference ! emacsMode BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation event MethodInvocation getTaskName getTask LocalVariableDeclaration ReferenceType String VariableDeclarator label BinaryOperation + BinaryOperation + Literal "[" MemberReference name Literal "] " LocalVariableDeclaration BasicType int VariableDeclarator size BinaryOperation - MemberReference LEFT_COLUMN_SIZE MethodInvocation label length LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator tmp ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation tmp Literal " " append StatementExpression MethodInvocation tmp MemberReference label append StatementExpression Assignment MemberReference label MethodInvocation tmp toString = TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator r ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType StringReader MethodInvocation event getMessage LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation r readLine LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true DoStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement MemberReference first BlockStatement IfStatement BinaryOperation == MemberReference line Literal null BlockStatement StatementExpression MethodInvocation message MemberReference label append BreakStatement BlockStatement StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append StatementExpression Assignment MemberReference first Literal false = StatementExpression MethodInvocation message MethodInvocation MemberReference line append MemberReference label append StatementExpression Assignment MemberReference line MethodInvocation r readLine = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation message MethodInvocation MethodInvocation event getMessage append MemberReference label append BlockStatement StatementExpression MethodInvocation message MethodInvocation event getMessage append LocalVariableDeclaration ReferenceType Throwable VariableDeclarator ex MethodInvocation event getException IfStatement BinaryOperation && BinaryOperation <= MemberReference Project MSG_DEBUG MemberReference msgOutputLevel BinaryOperation != MemberReference ex Literal null BlockStatement StatementExpression MethodInvocation message MethodInvocation StringUtils MemberReference ex getStackTrace append LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation message toString IfStatement BinaryOperation != MemberReference priority MemberReference Project MSG_ERR BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference out MemberReference priority printMessage BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference err MemberReference priority printMessage StatementExpression MethodInvocation MemberReference msg log	1
MethodDeclaration Modifier public clear StatementExpression Assignment MemberReference executable Literal null = StatementExpression MethodInvocation arguments removeAllElements	0
MethodDeclaration Modifier protected endExecution StatementExpression Assignment MemberReference redirector Literal null =	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String string IfStatement BinaryOperation == MemberReference contains Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing contains in containsstring" IfStatement BinaryOperation > MethodInvocation string MemberReference contains indexOf Literal - 1 BlockStatement ReturnStatement MemberReference string ReturnStatement Literal null	1
MethodDeclaration Modifier public testOverride StatementExpression MethodInvocation Literal "testOverride" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal warning sent" BinaryOperation > MethodInvocation log Literal "Trying to override old of task copy" indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal "task inside target worked" BinaryOperation > MethodInvocation log Literal "In indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal "task inside target worked" BinaryOperation > MethodInvocation log Literal "In TaskContainer" indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public addError FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable StatementExpression MemberReference ++	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation updateThreadCounts IfStatement BinaryOperation == MemberReference numThreads Literal 0 BlockStatement StatementExpression Assignment MemberReference numThreads MethodInvocation nestedTasks size = StatementExpression MethodInvocation spinThreads	1
MethodDeclaration setFromHeader StatementExpression MethodInvocation Literal "From" MemberReference from setHeader	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean enabled StatementExpression Assignment This MemberReference enabled MemberReference enabled =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier protected handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MethodInvocation redirector getOutputStream Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference output handleFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleFlush	1
MethodDeclaration Modifier public setDefaultDateFormatConfig FormalParameter ReferenceType String defaultDateFormat IfStatement BinaryOperation && BinaryOperation != MemberReference defaultDateFormat Literal null MethodInvocation ! defaultDateFormat Literal "" equals BlockStatement StatementExpression Assignment This MemberReference defaultDateFormatConfig MemberReference defaultDateFormat = StatementExpression MethodInvocation configurationHasBeenSet	0
MethodDeclaration Modifier public addNone FormalParameter ReferenceType NoneSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addNone	1
MethodDeclaration Modifier public FormalParameter ReferenceType ClassLoader classLoader StatementExpression Assignment This MemberReference classLoader MemberReference classLoader =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation checkConfiguration StatementExpression MethodInvocation MethodInvocation getParser executeEjbc	1
MethodDeclaration Modifier private getCommentFileCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENTFILE setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public testNoTargets Exception StatementExpression MethodInvocation Literal Literal "no params" MemberReference ERROR_NO_HOSTNAME expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType Map getAttributeMap ReturnStatement TernaryExpression BinaryOperation < MethodInvocation size Literal 1 MemberReference EMPTY_MAP MethodInvocation Collections MemberReference unmodifiableMap	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation && BinaryOperation != MemberReference includes Literal null BinaryOperation > MethodInvocation includes length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference includes Literal ", " Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation tok nextToken setName createInclude	0
MethodDeclaration Modifier public BasicType boolean isAttributeSupported FormalParameter ReferenceType String attributeName ReturnStatement MethodInvocation attributeSet MemberReference attributeName contains	0
MethodDeclaration Modifier public setCompress FormalParameter BasicType boolean compress StatementExpression Assignment MemberReference doCompress MemberReference compress =	0
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType String value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String objSelect StatementExpression Assignment MemberReference mobjSelect MemberReference objSelect =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name IfStatement MethodInvocation ! MemberReference name BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Illegal name [" MemberReference name Literal "] for attribute" StatementExpression Assignment This MemberReference name MethodInvocation name MemberReference Locale US toLowerCase =	1
MethodDeclaration disconnect IOException IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close IfStatement BinaryOperation != MemberReference in Literal null BlockStatement TryStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference socket Literal null BlockStatement TryStatement StatementExpression MethodInvocation socket close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public testAptFork StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using classic compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation Literal true LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator logstr ClassCreator ReferenceType LogOutputStream MemberReference attributes MemberReference Project MSG_WARN TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class MemberReference CLASSIC_COMPILER_CLASSNAME forName LocalVariableDeclaration ReferenceType Constructor VariableDeclarator cons MethodInvocation c ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType OutputStream ClassReference ReferenceType String getConstructor LocalVariableDeclaration ReferenceType Object VariableDeclarator compiler MethodInvocation cons ArrayCreator ReferenceType Object ArrayInitializer MemberReference logstr Literal newInstance LocalVariableDeclaration ReferenceType Method VariableDeclarator compile MethodInvocation c Literal "compile" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod LocalVariableDeclaration ReferenceType Boolean VariableDeclarator ok Cast ReferenceType Boolean MethodInvocation compile MemberReference compiler ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation cmd getArguments invoke ReturnStatement MethodInvocation ok booleanValue CatchClause CatchClauseParameter ClassNotFoundException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot use classic compiler as it is " Literal "not available. \n" Literal " A common solution is " Literal "to set the environment variable" Literal " JAVA_HOME to your jdk directory.\n" Literal "It is set to \"" MethodInvocation JavaEnvUtils getJavaHome Literal "\"" MemberReference location CatchClause CatchClauseParameter Exception ex IfStatement BinaryOperation instanceof MemberReference ex ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference ex BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Error starting classic compiler: " MemberReference ex MemberReference location StatementExpression MethodInvocation FileUtils MemberReference logstr close	1
MethodDeclaration Modifier public FormalParameter ReferenceType String jdkVersion StatementExpression MethodInvocation optionalAttrs MemberReference JDK_VERSION MemberReference jdkVersion put	0
MethodDeclaration Modifier public FormalParameter ReferenceType File td StatementExpression Assignment This MemberReference MemberReference td =	0
MethodDeclaration Modifier public ReferenceType String getDefault ReturnStatement MemberReference defaultValue	0
MethodDeclaration Modifier public testBackTrace StatementExpression MethodInvocation Literal Literal "Checking if a back trace is created" Literal "following error occurred" expectBuildExceptionContaining	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "property attribute required" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "file attribute required" MethodInvocation getLocation LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation file getName IfStatement BinaryOperation && BinaryOperation != MemberReference suffix Literal null MethodInvocation value MemberReference suffix endsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pos BinaryOperation - MethodInvocation value length MethodInvocation suffix length IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MemberReference pos Literal 0 BinaryOperation != MethodInvocation suffix Literal 0 charAt Literal '.' BinaryOperation == MethodInvocation value BinaryOperation - MemberReference pos Literal 1 charAt Literal '.' BlockStatement StatementExpression MemberReference -- pos StatementExpression Assignment MemberReference value MethodInvocation value Literal 0 MemberReference pos substring = StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference value setNewProperty getProject	1
MethodDeclaration Modifier public ReferenceType WeblogicDeploymentTool LocalVariableDeclaration ReferenceType WeblogicDeploymentTool VariableDeclarator tool ClassCreator ReferenceType WeblogicDeploymentTool StatementExpression MethodInvocation MemberReference tool addDeploymentTool ReturnStatement MemberReference tool	0
MethodDeclaration Modifier public setBasedir FormalParameter ReferenceType File basedir StatementExpression Assignment This MemberReference basedir MemberReference basedir =	0
MethodDeclaration Modifier public ReferenceType String getDebugLevel ReturnStatement MemberReference debugLevel	0
MethodDeclaration Modifier public setPreserveTime FormalParameter BasicType boolean value StatementExpression Assignment MemberReference preserveTime MemberReference value =	0
MethodDeclaration Modifier final protected BasicType int trackProgress FormalParameter BasicType long filesize FormalParameter BasicType long totalLength FormalParameter BasicType int percentTransmitted LocalVariableDeclaration BasicType int VariableDeclarator percent Cast BasicType int MethodInvocation Math MethodInvocation Math BinaryOperation * BinaryOperation / MemberReference totalLength Cast BasicType double MemberReference filesize Literal 100 floor round IfStatement BinaryOperation > MemberReference percent MemberReference percentTransmitted BlockStatement IfStatement BinaryOperation < MemberReference filesize Literal 1048576 BlockStatement IfStatement BinaryOperation == BinaryOperation % MemberReference percent Literal 10 Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference percent Literal 100 BlockStatement StatementExpression MethodInvocation System.out Literal " 100%" println BlockStatement StatementExpression MethodInvocation System.out Literal "*" print BlockStatement IfStatement BinaryOperation == MemberReference percent Literal 50 BlockStatement StatementExpression MethodInvocation System.out Literal " 50%" println IfStatement BinaryOperation == MemberReference percent Literal 100 BlockStatement StatementExpression MethodInvocation System.out Literal " 100%" println BlockStatement StatementExpression MethodInvocation System.out Literal "." print ReturnStatement MemberReference percent	1
MethodDeclaration Modifier public validateAttributes BuildException LocalVariableDeclaration ReferenceType Java VariableDeclarator java MethodInvocation getJava LocalVariableDeclaration ReferenceType String VariableDeclarator action MethodInvocation MethodInvocation getAction getTask IfStatement BinaryOperation == MemberReference action Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The \"action\" attribute must be set" IfStatement MethodInvocation ! isActionValid BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Invalid action \"" MemberReference action Literal "\" passed" IfStatement BinaryOperation == MethodInvocation getClassName Literal null BlockStatement StatementExpression MethodInvocation MemberReference JONAS_DEPLOY_CLASS_NAME IfStatement BinaryOperation || BinaryOperation == MemberReference jonasroot Literal null MethodInvocation jonasroot isDirectory BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Dinstall.root=" MemberReference jonasroot setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation BinaryOperation + BinaryOperation + Literal "-Djava.security.policy=" MemberReference jonasroot Literal "/config/java.policy" setValue createJvmarg IfStatement Literal MethodInvocation MemberReference orb equals "DAVID" BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Dorg.omg.CORBA.ORBClass" Literal "=org.objectweb.david.libs.binding.orbs.iiop.IIOPORB" setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Dorg.omg.CORBA.ORBSingletonClass=" Literal "org.objectweb.david.libs.binding.orbs.ORBSingletonClass" setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Djavax.rmi.CORBA.StubClass=" Literal "org.objectweb.david.libs.stub_factories.rmi.StubDelegate" setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Djavax.rmi.CORBA.PortableRemoteObjectClass=" Literal "org.objectweb.david.libs.binding.rmi.ORBPortableRemoteObjectDelegate" setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Djavax.rmi.CORBA.UtilClass=" Literal "org.objectweb.david.libs.helpers.RMIUtilDelegate" setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation Literal "-Ddavid.CosNaming.default_method=0" setValue createJvmarg StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Ddavid.rmi.ValueHandlerClass=" Literal "com.sun.corba.se.internal.io.ValueHandlerImpl" setValue createJvmarg IfStatement BinaryOperation != MemberReference davidHost Literal null BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Ddavid.CosNaming.default_host=" MemberReference davidHost setValue createJvmarg IfStatement BinaryOperation != MemberReference davidPort Literal 0 BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-Ddavid.CosNaming.default_port=" MemberReference davidPort setValue createJvmarg IfStatement BinaryOperation != MethodInvocation getServer Literal null BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-n " MethodInvocation getServer setLine createArg IfStatement BinaryOperation || BinaryOperation || MethodInvocation action MemberReference ACTION_DEPLOY equals MethodInvocation action MemberReference ACTION_UPDATE equals MethodInvocation action Literal "redeploy" equals BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-a " MethodInvocation MethodInvocation getSource getTask setLine createArg IfStatement BinaryOperation || MethodInvocation action MemberReference ACTION_DELETE equals MethodInvocation action MemberReference ACTION_UNDEPLOY equals BlockStatement StatementExpression MethodInvocation java MethodInvocation BinaryOperation + Literal "-r " MethodInvocation MethodInvocation getSource getTask setLine createArg IfStatement MethodInvocation action MemberReference ACTION_LIST equals BlockStatement StatementExpression MethodInvocation java MethodInvocation Literal "-l" setValue createArg	1
MethodDeclaration Modifier public ReferenceType Object clone TryStatement LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator t Cast ReferenceType JUnitTest SuperMethodInvocation clone StatementExpression Assignment MemberReference t props TernaryExpression BinaryOperation == MemberReference props Literal null Literal null Cast ReferenceType Properties MethodInvocation props clone = StatementExpression Assignment MemberReference t formatters Cast ReferenceType Vector MethodInvocation formatters clone = ReturnStatement MemberReference t CatchClause CatchClauseParameter CloneNotSupportedException e ReturnStatement This	1
MethodDeclaration Modifier public BasicType boolean sameDefinition FormalParameter ReferenceType AntTypeDefinition other FormalParameter ReferenceType Project project ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference other Literal null BinaryOperation == MethodInvocation other getClass MethodInvocation getClass BinaryOperation != MemberReference parent Literal null MethodInvocation parent Cast ReferenceType PreSetDefinition MemberReference other MemberReference project sameDefinition MethodInvocation element Cast ReferenceType PreSetDefinition MemberReference other	1
MethodDeclaration Modifier public testWindowsLineSeparator IOException TryStatement StatementExpression SuperMethodInvocation testWindowsLineSeparator StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public ReferenceType File getDestdir ReturnStatement MemberReference destDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType String buildfile StatementExpression Assignment This MemberReference buildfile MemberReference buildfile =	0
MethodDeclaration Modifier public setNegate FormalParameter BasicType boolean b StatementExpression Assignment MemberReference negate MemberReference b =	0
MethodDeclaration Modifier public ReferenceType String getStubClassSuffix ReturnStatement MemberReference WL_RMI_STUB_SUFFIX	1
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MemberReference name objectHashCode	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal "testLoadAFileEnc" executeTarget IfStatement BinaryOperation == MethodInvocation project Literal "testLoadAFileEnc" getProperty Literal null BlockStatement StatementExpression MethodInvocation Literal "file load failed" fail	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setSocksProxyPort FormalParameter BasicType int port StatementExpression Assignment This MemberReference socksProxyPort MemberReference port =	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" Literal "Manifest is invalid - section starts with incorrect attribute" Literal "Invalid expectBuildExceptionContaining LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation getLog LocalVariableDeclaration BasicType boolean VariableDeclarator hasWarning BinaryOperation != MethodInvocation output Literal "Manifest sections should start with a \"Name\" attribute" indexOf Literal - 1 StatementExpression MethodInvocation Literal "Expected warning about section not starting with Name: attribute" MemberReference hasWarning assertTrue	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier protected addSchemaLocations LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator values LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 WhileStatement MethodInvocation it hasNext BlockStatement IfStatement BinaryOperation > MemberReference count Literal 0 BlockStatement StatementExpression MethodInvocation buffer Literal ' ' append LocalVariableDeclaration ReferenceType SchemaLocation VariableDeclarator schemaLocation Cast ReferenceType SchemaLocation MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator tuple MethodInvocation schemaLocation getURIandLocation StatementExpression MethodInvocation buffer MemberReference tuple append StatementExpression MethodInvocation BinaryOperation + Literal "Adding schema " MemberReference tuple MemberReference Project MSG_VERBOSE log StatementExpression MemberReference ++ count IfStatement BinaryOperation > MemberReference count Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference XmlConstants PROPERTY_SCHEMA_LOCATION MethodInvocation buffer toString setProperty	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == Literal null MemberReference alias BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "alias attribute must be set" IfStatement BinaryOperation == Literal null MemberReference storepass BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "storepass attribute must be set" IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference dname BinaryOperation == Literal null MemberReference expandedDname BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "dname must be set" LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb Literal "-genkey " append IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation sb Literal "-v " append StatementExpression MethodInvocation sb Literal "-alias \"" append StatementExpression MethodInvocation sb MemberReference alias append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference dname BlockStatement StatementExpression MethodInvocation sb Literal "-dname \"" append StatementExpression MethodInvocation sb MemberReference dname append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference expandedDname BlockStatement StatementExpression MethodInvocation sb Literal "-dname \"" append StatementExpression MethodInvocation sb MemberReference expandedDname append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference keystore BlockStatement StatementExpression MethodInvocation sb Literal "-keystore \"" append StatementExpression MethodInvocation sb MemberReference keystore append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference storepass BlockStatement StatementExpression MethodInvocation sb Literal "-storepass \"" append StatementExpression MethodInvocation sb MemberReference storepass append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation sb Literal "-storetype \"" append StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb Literal "\" " append StatementExpression MethodInvocation sb Literal "-keypass \"" append IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation sb MemberReference append BlockStatement StatementExpression MethodInvocation sb MemberReference storepass append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation sb Literal "-sigalg \"" append StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation sb Literal "-keyalg \"" append StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation < Literal 0 MemberReference keysize BlockStatement StatementExpression MethodInvocation sb Literal "-keysize \"" append StatementExpression MethodInvocation sb MemberReference keysize append StatementExpression MethodInvocation sb Literal "\" " append IfStatement BinaryOperation < Literal 0 MemberReference validity BlockStatement StatementExpression MethodInvocation sb Literal "-validity \"" append StatementExpression MethodInvocation sb MemberReference validity append StatementExpression MethodInvocation sb Literal "\" " append StatementExpression MethodInvocation BinaryOperation + Literal "Generating Key for " MemberReference alias log LocalVariableDeclaration Modifier final ReferenceType ExecTask VariableDeclarator cmd ClassCreator ReferenceType ExecTask This StatementExpression MethodInvocation cmd MethodInvocation JavaEnvUtils Literal "keytool" getJdkExecutable setExecutable LocalVariableDeclaration ReferenceType Commandline ReferenceType VariableDeclarator arg MethodInvocation cmd createArg StatementExpression MethodInvocation arg MethodInvocation sb toString setLine StatementExpression MethodInvocation cmd Literal true StatementExpression MethodInvocation cmd MethodInvocation getTaskName setTaskName StatementExpression MethodInvocation cmd execute	1
MethodDeclaration Modifier public registerDTD FormalParameter ReferenceType String publicID FormalParameter ReferenceType String location StatementExpression MethodInvocation BinaryOperation + Literal "Registering: " MemberReference location log IfStatement BinaryOperation || BinaryOperation == MemberReference publicID Literal null BinaryOperation == MemberReference location Literal null BlockStatement ReturnStatement IfStatement BinaryOperation != MethodInvocation ClassLoader MemberReference location getSystemResource Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found resource: " MemberReference location log StatementExpression MethodInvocation resourceDtds MemberReference publicID MemberReference location put BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dtdFile ClassCreator ReferenceType File MemberReference location IfStatement BinaryOperation && MethodInvocation dtdFile exists MethodInvocation dtdFile isFile BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found file: " MemberReference location log StatementExpression MethodInvocation fileDtds MemberReference publicID MemberReference location put	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "dir attribute is required" MethodInvocation getLocation IfStatement MethodInvocation dir isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to create directory as a file " Literal "already exists with that name: " MethodInvocation dir getAbsolutePath IfStatement MethodInvocation ! dir exists BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation MemberReference dir mkdirs IfStatement MemberReference ! result BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "Directory " MethodInvocation dir getAbsolutePath Literal " creation was not successful for an unknown ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation BinaryOperation + Literal "Created dir: " MethodInvocation dir getAbsolutePath log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MethodInvocation dir getAbsolutePath Literal " because it already exists." MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public FormalParameter ReferenceType value LocalVariableDeclaration ReferenceType VariableDeclarator path MethodInvocation value getPath StatementExpression MethodInvocation cmd MethodInvocation MemberReference path append getClasspath StatementExpression MethodInvocation testCollectors MemberReference value add	0
MethodDeclaration Modifier public testText StatementExpression MethodInvocation Literal "text" Literal "Inner expectLog	0
MethodDeclaration Modifier public setSystemProperties BuildException StatementExpression MethodInvocation sysProperties setSystem	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference realThing Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not create task of type: " MemberReference elementName MethodInvocation getLocation IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing StatementExpression Assignment MemberReference realThing Literal null = StatementExpression MethodInvocation MethodInvocation Literal null setProxy getWrapper	1
MethodDeclaration Modifier public BasicType boolean supportsLanguage IfStatement BinaryOperation != MemberReference engine Literal null BlockStatement ReturnStatement Literal true StatementExpression MethodInvocation checkLanguage LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator origLoader MethodInvocation replaceContextLoader TryStatement ReturnStatement BinaryOperation != MethodInvocation Literal null CatchClause CatchClauseParameter Exception ex ReturnStatement Literal false StatementExpression MethodInvocation MemberReference origLoader restoreContextLoader	0
MethodDeclaration * Write a message to the log with the default log * of MSG_INFO * @param message The text to log. Should not be */ Modifier public log FormalParameter ReferenceType String message StatementExpression MethodInvocation MemberReference message MemberReference MSG_INFO log	0
MethodDeclaration Modifier public BasicType boolean similarDefinition FormalParameter ReferenceType AntTypeDefinition other FormalParameter ReferenceType Project project ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference other Literal null MethodInvocation other MethodInvocation getName MethodInvocation MethodInvocation MethodInvocation getName getClass equals getClass BinaryOperation != MemberReference parent Literal null MethodInvocation parent Cast ReferenceType PreSetDefinition MemberReference other MemberReference project similarDefinition MethodInvocation element Cast ReferenceType PreSetDefinition MemberReference other	1
MethodDeclaration Modifier public BasicType boolean acceptsURL FormalParameter ReferenceType String url SQLException ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Vector getGroups FormalParameter ReferenceType String input FormalParameter BasicType int options BuildException LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation MemberReference options getCompiledPattern LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher MethodInvocation p MemberReference input matcher IfStatement MethodInvocation ! matcher find BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration BasicType int VariableDeclarator cnt MethodInvocation matcher groupCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i MemberReference cnt MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator match MethodInvocation matcher MemberReference i group IfStatement BinaryOperation == MemberReference match Literal null BlockStatement StatementExpression Assignment MemberReference match Literal "" = StatementExpression MethodInvocation v MemberReference match addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier public static ReferenceType IntrospectionHelper getHelper FormalParameter ReferenceType Project p FormalParameter ReferenceType Class c LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih Cast ReferenceType IntrospectionHelper MethodInvocation HELPERS MethodInvocation c getName get IfStatement BinaryOperation || BinaryOperation == MemberReference ih Literal null BinaryOperation != MemberReference ih bean MemberReference c BlockStatement StatementExpression Assignment MemberReference ih ClassCreator ReferenceType IntrospectionHelper MemberReference c = IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation HELPERS MethodInvocation c getName MemberReference ih put ReturnStatement MemberReference ih	0
MethodDeclaration Modifier public setWhen FormalParameter ReferenceType when StatementExpression Assignment This MemberReference when MemberReference when =	0
MethodDeclaration Modifier public ReferenceType getClasspath ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileList MethodInvocation MethodInvocation getProject getRef ReturnStatement ClassCreator ReferenceType MemberReference dir Cast ReferenceType String MethodInvocation filenames ArrayCreator ReferenceType String MethodInvocation filenames size toArray	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression MethodInvocation MethodInvocation MemberReference classpath append createClasspath	0
MethodDeclaration Modifier public setFlags FormalParameter ReferenceType String flags StatementExpression Assignment This MemberReference flags MemberReference flags =	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression Assignment MemberReference prefix MemberReference ArraySelector MemberReference i MethodInvocation getValue params = BreakStatement	0
MethodDeclaration Modifier public onTestFailure FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation formatter MemberReference evt onTestFailure	0
MethodDeclaration Modifier public FormalParameter ReferenceType String resource StatementExpression Assignment This MemberReference resource MemberReference resource =	0
MethodDeclaration Modifier public testCompleteDirectoryMoveFileToExistingFile StatementExpression MethodInvocation Literal "testCompleteDirectoryMoveFileToExistingFile" executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement BinaryOperation + Literal MethodInvocation getFileExtension	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "path-ant-type" Literal expectLogContaining	0
MethodDeclaration Modifier public addSelector FormalParameter ReferenceType SelectSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public setDestfile FormalParameter Modifier final ReferenceType File destFile StatementExpression Assignment This MemberReference destFile MemberReference destFile =	0
MethodDeclaration Modifier public synchronized setBufferSize FormalParameter BasicType int size IfStatement BinaryOperation > MemberReference size MemberReference buffer length BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator newBuffer ArrayCreator BasicType byte MemberReference size IfStatement BinaryOperation >= MemberReference in Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference in MemberReference out BlockStatement StatementExpression MethodInvocation System MemberReference buffer MemberReference out MemberReference newBuffer MemberReference out BinaryOperation - MemberReference in MemberReference out arraycopy BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator outlen BinaryOperation - MemberReference buffer length MemberReference out StatementExpression MethodInvocation System MemberReference buffer MemberReference out MemberReference newBuffer Literal 0 MemberReference outlen arraycopy StatementExpression MethodInvocation System MemberReference buffer Literal 0 MemberReference newBuffer MemberReference outlen MemberReference in arraycopy StatementExpression Assignment MemberReference in MemberReference outlen += StatementExpression Assignment MemberReference out Literal 0 = StatementExpression Assignment MemberReference buffer MemberReference newBuffer =	0
MethodDeclaration Modifier public ReferenceType String getMethodType ReturnStatement MemberReference methodType	0
MethodDeclaration Modifier public testCaseSensitive LocalVariableDeclaration ReferenceType Contains VariableDeclarator con ClassCreator ReferenceType Contains StatementExpression MethodInvocation con Literal setString StatementExpression MethodInvocation con Literal "A" setSubstring StatementExpression MethodInvocation MethodInvocation ! con eval assertTrue StatementExpression MethodInvocation con Literal false StatementExpression MethodInvocation MethodInvocation con eval assertTrue	1
MethodDeclaration Modifier public testSimple StatementExpression MethodInvocation Literal "simple" executeTarget StatementExpression MethodInvocation Literal "1" MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal "2" MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal "3" MethodInvocation project Literal "prop3" getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Missing attribute" Literal "Nothing to test for falsehood" expectSpecificBuildException	0
MethodDeclaration Modifier public setIncludesfile FormalParameter ReferenceType File includesFile BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MethodInvocation includesFile getAbsolutePath setName createIncludesFile	1
MethodDeclaration Modifier public testTailSkip IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile StatementExpression MethodInvocation Literal "testTailSkip: Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result contentEquals assertTrue	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer MemberReference MSVSS SS_EXE MemberReference MSVSS COMMAND_CREATE MemberReference DS_VSS_PROJECT_PATH BinaryOperation + MemberReference MSVSS FLAG_COMMENT MemberReference SRC_COMMENT MemberReference MSVSS FLAG_AUTORESPONSE_NO MemberReference MSVSS FLAG_QUIET BinaryOperation + MemberReference MSVSS FLAG_LOGIN MemberReference VSS_USERNAME LocalVariableDeclaration ReferenceType MSVSSCREATE VariableDeclarator vssCreate ClassCreator ReferenceType MSVSSCREATE StatementExpression MethodInvocation vssCreate MemberReference project setProject StatementExpression MethodInvocation vssCreate MemberReference SRC_COMMENT StatementExpression MethodInvocation vssCreate MemberReference VSS_USERNAME setLogin StatementExpression MethodInvocation vssCreate MemberReference DS_VSS_PROJECT_PATH setVsspath StatementExpression MethodInvocation vssCreate Literal true setFailOnError StatementExpression MethodInvocation vssCreate Literal setAutoresponse StatementExpression MethodInvocation vssCreate Literal true setQuiet StatementExpression Assignment MemberReference commandline MethodInvocation vssCreate buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public addHeader FormalParameter ReferenceType header StatementExpression MethodInvocation headers MemberReference header add	0
MethodDeclaration Modifier public BasicType boolean eval BuildException StatementExpression MethodInvocation initScriptRunner StatementExpression MethodInvocation Literal "ant_condition" executeScript ReturnStatement MethodInvocation getValue	1
MethodDeclaration Modifier public testValidate Exception StatementExpression MethodInvocation Literal "testValidate" executeTarget	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation MemberReference runCount append Literal "run: " append StatementExpression MethodInvocation buf MethodInvocation MemberReference successCount append Literal " success: " append StatementExpression MethodInvocation buf MethodInvocation MemberReference failureCount append Literal " failures: " append StatementExpression MethodInvocation buf MethodInvocation MemberReference append Literal " errors: " append StatementExpression MethodInvocation buf MethodInvocation MemberReference elapsedTime append Literal " elapsed: " append ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier private setRegexps FormalParameter Modifier final ReferenceType Vector regexps StatementExpression Assignment This MemberReference regexps MemberReference regexps =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation assertProcessed	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier protected BasicType boolean accept FormalParameter ReferenceType file ReturnStatement MethodInvocation file	0
MethodDeclaration Modifier public addValue FormalParameter ReferenceType MyValue value ThrowStatement ClassCreator ReferenceType BuildException Literal "Should not be	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "testNoDuplicateSchema" Literal "duplicate schemas with different values" MemberReference ERROR_DUPLICATE_SCHEMA expectBuildExceptionContaining	0
MethodDeclaration Modifier public synchronized BasicType boolean hasNext ReturnStatement BinaryOperation || BinaryOperation > MemberReference occurrence Literal 0 MethodInvocation keyIter hasNext	0
MethodDeclaration Modifier public ReferenceType String getReferenceDelimiter ReturnStatement Literal ";"	0
MethodDeclaration Modifier public setImplementation FormalParameter ReferenceType String implementation StatementExpression MethodInvocation ClassCreator ReferenceType Classname MemberReference implementation setImplementation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference setInternalComment	0
MethodDeclaration Modifier public setEncoding FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType UnknownElement ue FormalParameter ReferenceType RuntimeConfigurable w TryStatement ThrowStatement ClassCreator ReferenceType Exception CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace ReturnStatement Literal null	0
MethodDeclaration Modifier private synchronized ReferenceType ZipScanner getZipScanner IfStatement BinaryOperation == MemberReference zs Literal null BlockStatement StatementExpression Assignment MemberReference zs ClassCreator ReferenceType ZipScanner = StatementExpression MethodInvocation zs MemberReference encoding setEncoding StatementExpression MethodInvocation zs MemberReference zipFile setSrc ReturnStatement MemberReference zs	0
MethodDeclaration Modifier public FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || MethodInvocation ! includeList isEmpty MethodInvocation ! excludeList isEmpty BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r setRefid	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference keepGoingMode	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath getBaseDir setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_UPDATE setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions StatementExpression MethodInvocation MethodInvocation MethodInvocation commandLine toString MemberReference Project MSG_DEBUG log getProject IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType PatternSet set StatementExpression MethodInvocation patternsets MemberReference set addElement	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType AntRExecClient rexec BuildException StatementExpression MethodInvocation rexec MemberReference taskString MemberReference timeout	1
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference trace MemberReference enable =	0
MethodDeclaration Modifier public setFamily FormalParameter ReferenceType String f StatementExpression Assignment MemberReference family MethodInvocation f MemberReference Locale US toLowerCase =	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation defaultSet MemberReference project setProject	1
MethodDeclaration Modifier public setTime FormalParameter BasicType boolean time StatementExpression Assignment This MemberReference time MemberReference time =	0
MethodDeclaration Modifier protected checkAndAddDependants FormalParameter ReferenceType Hashtable checkEntries BuildException IfStatement BinaryOperation == MemberReference dependencyAnalyzer Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation dependencyAnalyzer reset LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation checkEntries MethodInvocation iterator keySet WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entryName Cast ReferenceType String MethodInvocation i next IfStatement MethodInvocation entryName Literal ".class" endsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation entryName Literal 0 BinaryOperation - MethodInvocation entryName length Literal MethodInvocation length ".class" substring StatementExpression Assignment MemberReference className MethodInvocation className MemberReference File separatorChar Literal '/' replace = StatementExpression Assignment MemberReference className MethodInvocation className Literal '/' Literal '.' replace = StatementExpression MethodInvocation dependencyAnalyzer MemberReference className addRootClass LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dependencyAnalyzer getClassDependencies WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator location BinaryOperation + MethodInvocation classname Literal '.' MemberReference File separatorChar replace Literal ".class" LocalVariableDeclaration ReferenceType File VariableDeclarator classFile ClassCreator ReferenceType File MemberReference config srcDir MemberReference location IfStatement MethodInvocation classFile exists BlockStatement StatementExpression MethodInvocation checkEntries MemberReference location MemberReference classFile put StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "dependent class: " MemberReference classname Literal " - " MemberReference classFile MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "non zero return code" Literal "Java returned:" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "{presentselector targetdir: " IfStatement BinaryOperation == MemberReference targetdir Literal null BlockStatement StatementExpression MethodInvocation buf Literal "NOT YET SET" append BlockStatement StatementExpression MethodInvocation buf MethodInvocation targetdir getName append StatementExpression MethodInvocation buf Literal " present: " append IfStatement MemberReference destmustexist BlockStatement StatementExpression MethodInvocation buf Literal "both" append BlockStatement StatementExpression MethodInvocation buf Literal "srconly" append IfStatement BinaryOperation != MemberReference map Literal null BlockStatement StatementExpression MethodInvocation buf MethodInvocation map toString append IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement StatementExpression MethodInvocation buf MethodInvocation mapperElement toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier private synchronized ensureDirectoryScannerSetup IfStatement BinaryOperation == MemberReference ds Literal null BlockStatement StatementExpression Assignment MemberReference ds ClassCreator ReferenceType DirectoryScanner = LocalVariableDeclaration ReferenceType PatternSet VariableDeclarator ps MethodInvocation MethodInvocation getProject mergePatterns StatementExpression MethodInvocation ds MethodInvocation ps MethodInvocation getProject getIncludePatterns setIncludes StatementExpression MethodInvocation ds MethodInvocation ps MethodInvocation getProject getExcludePatterns setExcludes StatementExpression MethodInvocation ds MethodInvocation MethodInvocation getProject getSelectors IfStatement MemberReference useDefaultExcludes BlockStatement StatementExpression MethodInvocation ds addDefaultExcludes StatementExpression MethodInvocation ds MemberReference setCaseSensitive StatementExpression MethodInvocation ds MemberReference setFollowSymlinks	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier private static ReferenceType BuildException FormalParameter ReferenceType SAXException e LocalVariableDeclaration ReferenceType Exception VariableDeclarator MethodInvocation e getException IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement ClassCreator ReferenceType BuildException MemberReference BlockStatement ReturnStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public synchronized addDefaultExcludes LocalVariableDeclaration BasicType int VariableDeclarator excludesLength TernaryExpression BinaryOperation == MemberReference Literal null Literal 0 MemberReference length LocalVariableDeclaration ReferenceType String VariableDeclarator newExcludes StatementExpression Assignment MemberReference newExcludes ArrayCreator ReferenceType String BinaryOperation + MemberReference excludesLength MethodInvocation defaultExcludes size = IfStatement BinaryOperation > MemberReference excludesLength Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference newExcludes Literal 0 MemberReference excludesLength arraycopy LocalVariableDeclaration ReferenceType String VariableDeclarator defaultExcludesTemp MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference defaultExcludesTemp length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference excludesLength newExcludes MemberReference ArraySelector MemberReference i MethodInvocation Literal '/' MemberReference File separatorChar replace MethodInvocation Literal '\\' MemberReference File separatorChar replace defaultExcludesTemp = StatementExpression Assignment MemberReference MemberReference newExcludes =	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment MemberReference propertyfile MemberReference file =	0
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException ThrowStatement ClassCreator ReferenceType NoSuchElementException	1
MethodDeclaration Modifier public ReferenceType Vector getStdoutLines ReturnStatement MethodInvocation StringUtils MemberReference lineSplit	1
MethodDeclaration Modifier public execute IOException JSchException IfStatement BinaryOperation != MemberReference directoryList Literal null BlockStatement StatementExpression MethodInvocation doMultipleTransfer IfStatement BinaryOperation != MemberReference localFile Literal null BlockStatement StatementExpression MethodInvocation doSingleTransfer StatementExpression MethodInvocation Literal "done.\n" log	0
MethodDeclaration ReferenceType CrLf resolve IfStatement This MethodInvocation MemberReference ASIS equals BlockStatement ReturnStatement MemberReference ASIS IfStatement BinaryOperation || This MethodInvocation MemberReference CR equals This MethodInvocation MemberReference MAC equals BlockStatement ReturnStatement MemberReference CR IfStatement BinaryOperation || This MethodInvocation MemberReference CRLF equals This MethodInvocation MemberReference equals BlockStatement ReturnStatement MemberReference CRLF IfStatement BinaryOperation || This MethodInvocation MemberReference LF equals This MethodInvocation MemberReference equals BlockStatement ReturnStatement MemberReference LF ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "No replacement for " This	0
MethodDeclaration Modifier protected definePackage FormalParameter ReferenceType File container FormalParameter ReferenceType String packageName FormalParameter ReferenceType Manifest manifest LocalVariableDeclaration ReferenceType String VariableDeclarator sectionName BinaryOperation + MethodInvocation packageName Literal '.' Literal '/' replace Literal "/" LocalVariableDeclaration ReferenceType String VariableDeclarator specificationTitle Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator specificationVendor Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator specificationVersion Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator implementationTitle Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator implementationVendor Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator implementationVersion Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator sealedString Literal null LocalVariableDeclaration ReferenceType URL VariableDeclarator sealBase Literal null LocalVariableDeclaration ReferenceType Attributes VariableDeclarator sectionAttributes MethodInvocation manifest MemberReference sectionName getAttributes IfStatement BinaryOperation != MemberReference sectionAttributes Literal null BlockStatement StatementExpression Assignment MemberReference specificationTitle MethodInvocation sectionAttributes MemberReference Name SPECIFICATION_TITLE getValue = StatementExpression Assignment MemberReference specificationVendor MethodInvocation sectionAttributes MemberReference Name SPECIFICATION_VENDOR getValue = StatementExpression Assignment MemberReference specificationVersion MethodInvocation sectionAttributes MemberReference Name SPECIFICATION_VERSION getValue = StatementExpression Assignment MemberReference implementationTitle MethodInvocation sectionAttributes MemberReference Name IMPLEMENTATION_TITLE getValue = StatementExpression Assignment MemberReference implementationVendor MethodInvocation sectionAttributes MemberReference Name IMPLEMENTATION_VENDOR getValue = StatementExpression Assignment MemberReference implementationVersion MethodInvocation sectionAttributes MemberReference Name IMPLEMENTATION_VERSION getValue = StatementExpression Assignment MemberReference sealedString MethodInvocation sectionAttributes MemberReference Name SEALED getValue = LocalVariableDeclaration ReferenceType Attributes VariableDeclarator mainAttributes MethodInvocation manifest getMainAttributes IfStatement BinaryOperation != MemberReference mainAttributes Literal null BlockStatement IfStatement BinaryOperation == MemberReference specificationTitle Literal null BlockStatement StatementExpression Assignment MemberReference specificationTitle MethodInvocation mainAttributes MemberReference Name SPECIFICATION_TITLE getValue = IfStatement BinaryOperation == MemberReference specificationVendor Literal null BlockStatement StatementExpression Assignment MemberReference specificationVendor MethodInvocation mainAttributes MemberReference Name SPECIFICATION_VENDOR getValue = IfStatement BinaryOperation == MemberReference specificationVersion Literal null BlockStatement StatementExpression Assignment MemberReference specificationVersion MethodInvocation mainAttributes MemberReference Name SPECIFICATION_VERSION getValue = IfStatement BinaryOperation == MemberReference implementationTitle Literal null BlockStatement StatementExpression Assignment MemberReference implementationTitle MethodInvocation mainAttributes MemberReference Name IMPLEMENTATION_TITLE getValue = IfStatement BinaryOperation == MemberReference implementationVendor Literal null BlockStatement StatementExpression Assignment MemberReference implementationVendor MethodInvocation mainAttributes MemberReference Name IMPLEMENTATION_VENDOR getValue = IfStatement BinaryOperation == MemberReference implementationVersion Literal null BlockStatement StatementExpression Assignment MemberReference implementationVersion MethodInvocation mainAttributes MemberReference Name IMPLEMENTATION_VERSION getValue = IfStatement BinaryOperation == MemberReference sealedString Literal null BlockStatement StatementExpression Assignment MemberReference sealedString MethodInvocation mainAttributes MemberReference Name SEALED getValue = IfStatement BinaryOperation && BinaryOperation != MemberReference sealedString Literal null MethodInvocation sealedString Literal "true" equalsIgnoreCase BlockStatement TryStatement StatementExpression Assignment MemberReference sealBase ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation container getAbsolutePath toURI getFileUtils = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation MemberReference packageName MemberReference specificationTitle MemberReference specificationVersion MemberReference specificationVendor MemberReference implementationTitle MemberReference implementationVersion MemberReference implementationVendor MemberReference sealBase definePackage	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && This MemberReference This MemberReference buildlabel BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "'revisionlabel' and 'buildlabel' " Literal "both specified. A revision label cannot be a build label." TryStatement LocalVariableDeclaration ReferenceType View VariableDeclarator snapshot MethodInvocation openView IfStatement This MemberReference BlockStatement StatementExpression ClassCreator MethodInvocation update ReferenceType Label MemberReference snapshot This MemberReference labelName This MemberReference description StatementExpression MethodInvocation BinaryOperation + Literal "Created Revision Label " This MemberReference labelName log IfStatement BinaryOperation != Literal null MemberReference lastBuild BlockStatement StatementExpression ClassCreator MethodInvocation update ReferenceType Label MemberReference snapshot This MemberReference labelName This MemberReference description This MemberReference lastBuild This MemberReference buildlabel StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Created View Label (" TernaryExpression This MemberReference buildlabel Literal "" Literal "non-" Literal "build) " This MemberReference labelName Literal " as of " This MemberReference lastBuild MethodInvocation toString log BlockStatement StatementExpression ClassCreator MethodInvocation update ReferenceType Label MemberReference snapshot This MemberReference labelName This MemberReference description This MemberReference buildlabel StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Created View Label (" TernaryExpression This MemberReference buildlabel Literal "" Literal "non-" Literal "build) " This MemberReference labelName log CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation	1
MethodDeclaration Modifier public process FormalParameter ReferenceType String line IfStatement MethodInvocation util Literal "/Change/" MemberReference line match BlockStatement StatementExpression Assignment MemberReference line MethodInvocation util Literal "s/[^0-9]//g" MemberReference line substitute = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Integer MemberReference line parseInt StatementExpression MethodInvocation BinaryOperation + Literal "Change Number is " MemberReference MemberReference Project MSG_INFO log StatementExpression MethodInvocation myProj Literal BinaryOperation + Literal "" MemberReference setProperty IfStatement MethodInvocation util Literal "/error/" MemberReference line match BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Perforce Error, check client settings and/or server"	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator t1 ClassCreator ReferenceType TestNormal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference expected length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference ArraySelector MemberReference i expected Literal " is in TestNormal" MethodInvocation t1 MemberReference ArraySelector MemberReference i expected containsValue assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation toUpperCase expected Literal " is in TestNormal" MethodInvocation ! t1 MemberReference ArraySelector MemberReference i MethodInvocation toUpperCase expected containsValue assertTrue StatementExpression MethodInvocation Literal "TestNormal doesn\'t have \"d\" attribute" MethodInvocation ! t1 Literal "d" containsValue assertTrue StatementExpression MethodInvocation Literal "TestNull doesn\'t have \"d\" attribute and doesn\'t die" ClassCreator ! MethodInvocation Literal "d" containsValue ReferenceType TestNull assertTrue	1
MethodDeclaration Modifier public testCopyAndRemoveWithZipfileset StatementExpression MethodInvocation Literal testCopyAndRemove	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference mPname	0
MethodDeclaration * return time to * @return sleep time. if below 0 then there is an */ Modifier private BasicType long getSleepTime ReturnStatement BinaryOperation + BinaryOperation * BinaryOperation + BinaryOperation * BinaryOperation + BinaryOperation * Cast BasicType long MemberReference hours Literal 60 MemberReference minutes Literal 60 MemberReference Literal 1000 MemberReference milliseconds	1
MethodDeclaration Modifier public FormalParameter BasicType boolean showOutput StatementExpression Assignment This MemberReference showOutput MemberReference showOutput =	0
MethodDeclaration Modifier public ReferenceType DeweyDecimal ReturnStatement MemberReference implementationVersion	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation && MethodInvocation MemberReference host empty MethodInvocation MemberReference url empty BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_NO_HOSTNAME IfStatement BinaryOperation < MemberReference timeout Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_BAD_TIMEOUT LocalVariableDeclaration ReferenceType String VariableDeclarator target MemberReference host IfStatement MethodInvocation ! MemberReference url empty BlockStatement IfStatement MethodInvocation ! MemberReference host empty BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_BOTH_TARGETS TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator realURL ClassCreator ReferenceType URL MemberReference url StatementExpression Assignment MemberReference target MethodInvocation realURL getHost = IfStatement MethodInvocation MemberReference target empty BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference ERROR_NO_HOST_IN_URL MemberReference url CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference ERROR_BAD_URL MemberReference url MemberReference e StatementExpression MethodInvocation BinaryOperation + Literal "Probing host " MemberReference target MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator address TryStatement StatementExpression Assignment MemberReference address MethodInvocation InetAddress MemberReference target getByName = CatchClause CatchClauseParameter UnknownHostException e1 StatementExpression MethodInvocation BinaryOperation + MemberReference WARN_UNKNOWN_HOST MemberReference target log ReturnStatement Literal false StatementExpression MethodInvocation BinaryOperation + Literal "Host address = " MethodInvocation address getHostAddress MemberReference Project MSG_VERBOSE log LocalVariableDeclaration BasicType boolean VariableDeclarator reachable LocalVariableDeclaration ReferenceType Method VariableDeclarator reachableMethod Literal null TryStatement StatementExpression Assignment MemberReference reachableMethod ClassReference MethodInvocation MemberReference METHOD_NAME MemberReference parameterTypes getMethod ReferenceType InetAddress = LocalVariableDeclaration ReferenceType Object VariableDeclarator params ArrayCreator ReferenceType Object Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 params ClassCreator ReferenceType Integer BinaryOperation * MemberReference timeout MemberReference SECOND = TryStatement StatementExpression Assignment MemberReference reachable Cast ReferenceType Boolean MethodInvocation reachableMethod MemberReference address MemberReference params invoke = CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "When calling " MemberReference reachableMethod CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator MethodInvocation e getTargetException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference ERROR_ON_NETWORK MemberReference target Literal ": " MethodInvocation toString log StatementExpression Assignment MemberReference reachable Literal false = CatchClause CatchClauseParameter NoSuchMethodException e StatementExpression MethodInvocation BinaryOperation + Literal "Not found: InetAddress." MemberReference METHOD_NAME MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference MSG_NO_REACHABLE_TEST log StatementExpression Assignment MemberReference reachable Literal true = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "host is" TernaryExpression MemberReference reachable Literal "" Literal " not" Literal " reachable" MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference reachable	1
MethodDeclaration Modifier public ReferenceType Locator getLocator ReturnStatement MemberReference locator	0
MethodDeclaration Modifier public testValidate LocalVariableDeclaration ReferenceType PresentSelector VariableDeclarator s Cast ReferenceType PresentSelector MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s createMapper StatementExpression MethodInvocation s createMapper StatementExpression MethodInvocation Literal "PresentSelector allowed more than one mapper." fail CatchClause CatchClauseParameter BuildException be1 StatementExpression MethodInvocation Literal "Cannot define more than one MethodInvocation be1 getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType PresentSelector MethodInvocation getInstance = TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "PresentSelector did not check for required fields" fail CatchClause CatchClauseParameter BuildException be2 StatementExpression MethodInvocation Literal "The targetdir attribute is required." MethodInvocation be2 getMessage assertEquals	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator c SuperMethodInvocation read SwitchStatement MemberReference c SwitchStatementCase Literal '\r' Literal '\n' StatementExpression Assignment MemberReference columnNumber Literal 0 = BreakStatement SwitchStatementCase Literal '\t' LocalVariableDeclaration BasicType int VariableDeclarator width BinaryOperation - MemberReference tabLength BinaryOperation % MemberReference columnNumber MemberReference tabLength IfStatement MethodInvocation ! editsBlocked BlockStatement ForStatement ForControl BinaryOperation > MemberReference width Literal 1 MemberReference -- width BlockStatement StatementExpression MethodInvocation Literal ' ' push StatementExpression Assignment MemberReference c Literal ' ' = StatementExpression Assignment MemberReference columnNumber MemberReference width += BreakStatement SwitchStatementCase StatementExpression MemberReference ++ columnNumber ReturnStatement MemberReference c	1
MethodDeclaration Modifier private expectFileContains FormalParameter ReferenceType String target FormalParameter ReferenceType String filename FormalParameter ReferenceType String contains IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference filename MemberReference contains assertFileContains	0
MethodDeclaration Modifier public setVerify FormalParameter BasicType boolean verify StatementExpression Assignment This MemberReference verify MemberReference verify =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String text StatementExpression MethodInvocation helper MemberReference text addText	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator value IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Method : Class = " MemberReference Literal ", name = " MemberReference methodName Literal ", type = " MemberReference methodType = BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + Literal "Method : Class index = " MemberReference classIndex Literal ", name and type index = " MemberReference nameAndTypeIndex = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType ZipShort getHeaderId ReturnStatement MemberReference	0
MethodDeclaration Modifier public final setRefid FormalParameter ReferenceType r IfStatement MemberReference ! noAttributeSet BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r setRefid	1
MethodDeclaration Modifier protected BasicType boolean matchesGenerationRules FormalParameter ReferenceType XClass clazz XDocletException LocalVariableDeclaration BasicType boolean VariableDeclarator match MethodInvocation MemberReference clazz isAntTask ReturnStatement MemberReference match	1
MethodDeclaration Modifier public setProxy FormalParameter ReferenceType Object proxy StatementExpression Assignment MemberReference MemberReference proxy = StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public ReferenceType String getVersion ReturnStatement MemberReference	0
MethodDeclaration Modifier public testUpdate IOException ManifestException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf MethodInvocation Literal "src/etc/testcases/taskdefs/mftest.mf" getManifest StatementExpression MethodInvocation MemberReference mf assertNotNull StatementExpression MethodInvocation MethodInvocation ! Manifest MethodInvocation MemberReference mf equals assertTrue LocalVariableDeclaration ReferenceType String VariableDeclarator mfAsString MethodInvocation mf toString StatementExpression MethodInvocation MemberReference mfAsString assertNotNull StatementExpression MethodInvocation MethodInvocation mfAsString Literal "Manifest-Version: 2.0" startsWith assertTrue StatementExpression MethodInvocation BinaryOperation > MethodInvocation mfAsString Literal "Foo: Bar" indexOf Literal - 1 assertTrue StatementExpression Assignment MemberReference mf MethodInvocation Literal getManifest = StatementExpression MethodInvocation MemberReference mf assertNotNull StatementExpression Assignment MemberReference mfAsString MethodInvocation mf toString = StatementExpression MethodInvocation MemberReference mfAsString assertNotNull StatementExpression MethodInvocation Literal - 1 MethodInvocation mfAsString Literal "Foo: Bar" indexOf assertEquals StatementExpression MethodInvocation BinaryOperation > MethodInvocation mfAsString Literal "Foo: Baz" indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression ClassCreator MethodInvocation testProcessDestroyer ReferenceType ProcessDestroyerTest Literal "testProcessDestroyer" TryStatement StatementExpression MethodInvocation Thread Literal 60000 sleep CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation ie printStackTrace	0
MethodDeclaration Modifier public FormalParameter ReferenceType String separator StatementExpression Assignment MemberReference remoteFileSep MemberReference separator =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ImplementationSpecificArgument VariableDeclarator ia ClassCreator ReferenceType ImplementationSpecificArgument StatementExpression MethodInvocation ia Literal "A B" setLine LocalVariableDeclaration ReferenceType String VariableDeclarator parts MethodInvocation ia StatementExpression MethodInvocation MemberReference parts assertNotNull StatementExpression MethodInvocation Literal 2 MemberReference parts length assertEquals StatementExpression MethodInvocation Literal "A" MemberReference ArraySelector Literal 0 parts assertEquals StatementExpression MethodInvocation Literal "B" MemberReference ArraySelector Literal 1 parts assertEquals StatementExpression Assignment MemberReference parts MethodInvocation ia Literal null = StatementExpression MethodInvocation MemberReference parts assertNotNull StatementExpression MethodInvocation Literal 2 MemberReference parts length assertEquals StatementExpression MethodInvocation Literal "A" MemberReference ArraySelector Literal 0 parts assertEquals StatementExpression MethodInvocation Literal "B" MemberReference ArraySelector Literal 1 parts assertEquals StatementExpression MethodInvocation ia Literal "foo" setImplementation StatementExpression Assignment MemberReference parts MethodInvocation ia Literal null = StatementExpression MethodInvocation MemberReference parts assertNotNull StatementExpression MethodInvocation Literal 0 MemberReference parts length assertEquals StatementExpression Assignment MemberReference parts MethodInvocation ia Literal "foo" = StatementExpression MethodInvocation MemberReference parts assertNotNull StatementExpression MethodInvocation Literal 2 MemberReference parts length assertEquals StatementExpression MethodInvocation Literal "A" MemberReference ArraySelector Literal 0 parts assertEquals StatementExpression MethodInvocation Literal "B" MemberReference ArraySelector Literal 1 parts assertEquals	0
MethodDeclaration Modifier public executeMain BuildException IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference baseDir Literal null BinaryOperation == MethodInvocation resources size Literal 0 BinaryOperation == MethodInvocation groupfilesets size Literal 0 Literal MethodInvocation MemberReference archiveType equals "zip" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "basedir attribute must be set, " Literal "or at least one " Literal "resource collection must be given!" IfStatement BinaryOperation == MemberReference zipFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "You must specify the " MemberReference archiveType Literal " file to create!" IfStatement BinaryOperation && MethodInvocation zipFile exists MethodInvocation ! zipFile isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference zipFile Literal " is not a file." IfStatement BinaryOperation && MethodInvocation zipFile exists MethodInvocation ! zipFile canWrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference zipFile Literal " is read-only." LocalVariableDeclaration ReferenceType File VariableDeclarator renamedFile Literal null StatementExpression Assignment MemberReference addingNewFiles Literal true = IfStatement BinaryOperation && MemberReference doUpdate MethodInvocation ! zipFile exists BlockStatement StatementExpression Assignment MemberReference doUpdate Literal false = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "ignoring update attribute as " MemberReference archiveType Literal " doesn't exist." MemberReference Project MSG_DEBUG log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation groupfilesets size MemberReference ++ i BlockStatement StatementExpression MethodInvocation Literal "Processing groupfileset " MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation groupfilesets MemberReference i elementAt LocalVariableDeclaration ReferenceType VariableDeclarator scanner MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType File VariableDeclarator basedir MethodInvocation scanner getBasedir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Adding file " MemberReference ArraySelector MemberReference j files Literal " to fileset" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator zf ClassCreator ReferenceType ZipFileSet StatementExpression MethodInvocation zf MethodInvocation getProject setProject StatementExpression MethodInvocation zf ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference j files setSrc StatementExpression MethodInvocation MemberReference zf add StatementExpression MethodInvocation MemberReference zf addElement LocalVariableDeclaration ReferenceType Vector VariableDeclarator vfss ClassCreator ReferenceType Vector IfStatement BinaryOperation != MemberReference baseDir Literal null BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation MethodInvocation clone getImplicitFileSet StatementExpression MethodInvocation fs MemberReference baseDir setDir StatementExpression MethodInvocation vfss MemberReference fs addElement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation resources size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc Cast ReferenceType ResourceCollection MethodInvocation resources MemberReference i elementAt StatementExpression MethodInvocation vfss MemberReference rc addElement LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator fss ArrayCreator ReferenceType ResourceCollection MethodInvocation vfss size StatementExpression MethodInvocation vfss MemberReference fss copyInto LocalVariableDeclaration BasicType boolean VariableDeclarator success Literal false TryStatement LocalVariableDeclaration ReferenceType ArchiveState VariableDeclarator state MethodInvocation MemberReference fss MemberReference zipFile Literal false getResourcesToAdd IfStatement MethodInvocation ! state isOutOfDate BlockStatement ReturnStatement IfStatement BinaryOperation && MethodInvocation ! zipFile exists MethodInvocation state isWithoutAnyResources BlockStatement StatementExpression MethodInvocation MemberReference zipFile createEmptyZip ReturnStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator addThem MethodInvocation state getResourcesToAdd IfStatement MemberReference doUpdate BlockStatement StatementExpression Assignment MemberReference renamedFile MethodInvocation FILE_UTILS Literal "zip" Literal ".tmp" MethodInvocation zipFile getParentFile createTempFile = StatementExpression MethodInvocation renamedFile deleteOnExit TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference zipFile MemberReference renamedFile rename CatchClause CatchClauseParameter SecurityException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Not allowed to rename old file (" MethodInvocation zipFile getAbsolutePath Literal ") to temporary file" CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to rename old file (" MethodInvocation zipFile getAbsolutePath Literal ") to temporary file" LocalVariableDeclaration ReferenceType String VariableDeclarator action TernaryExpression MemberReference doUpdate Literal "Updating " Literal "Building " StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference action MemberReference archiveType Literal ": " MethodInvocation zipFile getAbsolutePath log LocalVariableDeclaration ReferenceType ZipOutputStream VariableDeclarator zOut Literal null TryStatement IfStatement MemberReference ! skipWriting BlockStatement StatementExpression Assignment MemberReference zOut ClassCreator ReferenceType ZipOutputStream MemberReference zipFile = StatementExpression MethodInvocation zOut MemberReference encoding setEncoding StatementExpression MethodInvocation zOut TernaryExpression MemberReference doCompress MemberReference ZipOutputStream DEFLATED MemberReference ZipOutputStream STORED setMethod StatementExpression MethodInvocation zOut MemberReference level setLevel StatementExpression MethodInvocation MemberReference zOut initZipOutputStream ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fss length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i MemberReference length addThem Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i fss MemberReference ArraySelector MemberReference i addThem MemberReference zOut addResources IfStatement MemberReference doUpdate BlockStatement StatementExpression Assignment MemberReference addingNewFiles Literal false = LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator oldFiles ClassCreator ReferenceType ZipFileSet StatementExpression MethodInvocation oldFiles MethodInvocation getProject setProject StatementExpression MethodInvocation oldFiles MemberReference renamedFile setSrc StatementExpression MethodInvocation oldFiles Literal false setDefaultexcludes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation addedFiles size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType PatternSet ReferenceType NameEntry VariableDeclarator ne MethodInvocation oldFiles StatementExpression MethodInvocation ne Cast ReferenceType String MethodInvocation addedFiles MemberReference i elementAt setName LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation oldFiles MethodInvocation getProject getDirectoryScanner StatementExpression Cast ReferenceType ZipScanner MemberReference ds LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType Resource VariableDeclarator r ArrayCreator ReferenceType Resource MemberReference f length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference f length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i r MethodInvocation ds MemberReference ArraySelector MemberReference i f getResource = IfStatement MemberReference ! doFilesonly BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator d MethodInvocation ds getIncludedDirectories LocalVariableDeclaration ReferenceType Resource VariableDeclarator dr ArrayCreator ReferenceType Resource MemberReference d length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference d length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i dr MethodInvocation ds MemberReference ArraySelector MemberReference i d getResource = LocalVariableDeclaration ReferenceType Resource VariableDeclarator tmp MemberReference r StatementExpression Assignment MemberReference r ArrayCreator ReferenceType Resource BinaryOperation + MemberReference tmp length MemberReference dr length = StatementExpression MethodInvocation System MemberReference dr Literal 0 MemberReference r Literal 0 MemberReference dr length arraycopy StatementExpression MethodInvocation System MemberReference tmp Literal 0 MemberReference r MemberReference dr length MemberReference tmp length arraycopy StatementExpression MethodInvocation MemberReference oldFiles MemberReference r MemberReference zOut addResources IfStatement BinaryOperation != MemberReference zOut Literal null BlockStatement StatementExpression MethodInvocation zOut MemberReference StatementExpression MethodInvocation MemberReference zOut finalizeZipOutputStream IfStatement MemberReference doUpdate BlockStatement IfStatement MethodInvocation ! renamedFile delete BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: unable to delete temporary file " MethodInvocation renamedFile getName MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference success Literal true = TryStatement IfStatement BinaryOperation != MemberReference zOut Literal null BlockStatement StatementExpression MethodInvocation zOut close CatchClause CatchClauseParameter IOException ex IfStatement MemberReference success BlockStatement ThrowStatement MemberReference ex CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Problem creating " MemberReference archiveType Literal ": " MethodInvocation ioe getMessage IfStatement BinaryOperation && BinaryOperation || MemberReference ! doUpdate BinaryOperation != MemberReference renamedFile Literal null MethodInvocation ! zipFile delete BlockStatement StatementExpression Assignment MemberReference msg BinaryOperation + Literal " (and the archive is probably corrupt but I could not " Literal "delete it)" += IfStatement BinaryOperation && MemberReference doUpdate BinaryOperation != MemberReference renamedFile Literal null BlockStatement TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference renamedFile MemberReference zipFile rename CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference msg BinaryOperation + BinaryOperation + Literal " (and I couldn't rename the temporary file " MethodInvocation renamedFile getName Literal " back)" += ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation cleanUp	1
MethodDeclaration Modifier protected writeDataDescriptor FormalParameter ReferenceType ZipEntry ze IOException IfStatement BinaryOperation || BinaryOperation != MethodInvocation ze getMethod MemberReference DEFLATED BinaryOperation != MemberReference raf Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation entry getCrc getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation entry getCompressedSize getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation entry getSize getBytes writeOut StatementExpression Assignment MemberReference written Literal 16 +=	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/xmlns.xml" configureProject	0
MethodDeclaration Modifier public setNoWarn FormalParameter BasicType boolean nwarn StatementExpression Assignment MemberReference mNwarn MemberReference nwarn =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType int tabLength StatementExpression Assignment This MemberReference tabLength MemberReference tabLength =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String rto StatementExpression This MemberReference MethodInvocation MemberReference rto addElement	0
MethodDeclaration * run through the list of reference files and add them to the * @param command the command to * @param outputTimestamp to compare * @return number of files out of */ Modifier protected BasicType int addReferenceFilesets FormalParameter ReferenceType NetCommand command FormalParameter BasicType long outputTimestamp LocalVariableDeclaration BasicType int VariableDeclarator filesOutOfDate Literal 0 LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator filesToBuild ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation referenceFilesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation referenceFilesets MemberReference i elementAt StatementExpression Assignment MemberReference filesOutOfDate MethodInvocation command MethodInvocation fs MethodInvocation getProject getDirectoryScanner MemberReference filesToBuild MemberReference outputTimestamp scanOneFileset += IfStatement BinaryOperation == MethodInvocation filesToBuild size Literal 0 BlockStatement ReturnStatement Literal 0 LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator files MethodInvocation filesToBuild elements WhileStatement MethodInvocation files hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Cast ReferenceType File MethodInvocation files nextElement IfStatement MethodInvocation MemberReference file isFileManagedBinary BlockStatement IfStatement MemberReference isWindows BlockStatement StatementExpression MethodInvocation command BinaryOperation + BinaryOperation + BinaryOperation + Literal '"' MemberReference MethodInvocation file toString Literal '"' addArgument BlockStatement StatementExpression MethodInvocation command BinaryOperation + MemberReference MethodInvocation file toString addArgument BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "ignoring " MemberReference file Literal " as it is not a managed executable" MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference filesOutOfDate	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r LocalVariableDeclaration BasicType boolean VariableDeclarator none Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation getSelectors BinaryOperation && MemberReference none MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference none Cast ReferenceType ResourceSelector MethodInvocation i next = ReturnStatement MemberReference none	1
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation != MemberReference dir Literal null MethodInvocation defaultPatterns MethodInvocation getProject hasPatterns BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement MethodInvocation ! additionalPatterns isEmpty BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement MethodInvocation ! selectors isEmpty BlockStatement ThrowStatement MethodInvocation noChildrenAllowed StatementExpression SuperMethodInvocation MemberReference r setRefid	1
MethodDeclaration Modifier public visitMethod FormalParameter ReferenceType Method method LocalVariableDeclaration ReferenceType String VariableDeclarator signature MethodInvocation method getSignature LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation signature Literal ")" indexOf StatementExpression MethodInvocation MethodInvocation signature Literal 1 MemberReference pos substring StatementExpression MethodInvocation MethodInvocation signature BinaryOperation + MemberReference pos Literal 1 substring	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference retCode	0
MethodDeclaration Modifier private doMultipleTransfer IOException JSchException LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel MethodInvocation BinaryOperation + Literal "scp -r -d -t " MemberReference remotePath openExecChannel TryStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out MethodInvocation channel getOutputStream LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation channel getInputStream StatementExpression MethodInvocation channel connect StatementExpression MethodInvocation MemberReference in waitForAck ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation directoryList iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Directory VariableDeclarator current Cast ReferenceType Directory MethodInvocation i next StatementExpression MethodInvocation MemberReference current MemberReference in MemberReference out sendDirectory IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel disconnect	1
MethodDeclaration complete StatementExpression MethodInvocation MethodInvocation MemberReference accum print getPs StatementExpression SuperMethodInvocation complete	1
MethodDeclaration Modifier public FormalParameter ReferenceType String err StatementExpression Assignment MemberReference systemError MemberReference err =	0
MethodDeclaration Modifier final public static execute FormalParameter ReferenceType Object task BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator methodName Literal "execute" LocalVariableDeclaration ReferenceType Dispatchable VariableDeclarator dispatchable Literal null TryStatement IfStatement BinaryOperation instanceof MemberReference task ReferenceType Dispatchable BlockStatement StatementExpression Assignment MemberReference dispatchable Cast ReferenceType Dispatchable MemberReference task = IfStatement BinaryOperation instanceof MemberReference task ReferenceType UnknownElement BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue Cast ReferenceType UnknownElement MemberReference task LocalVariableDeclaration ReferenceType Object VariableDeclarator realThing MethodInvocation ue getRealThing IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference realThing Literal null BinaryOperation instanceof MemberReference realThing ReferenceType Dispatchable BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Assignment MemberReference dispatchable Cast ReferenceType Dispatchable MemberReference realThing = IfStatement BinaryOperation != MemberReference dispatchable Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mName Literal null TryStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation dispatchable getActionParameterName IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation > MethodInvocation name MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference mName BinaryOperation + Literal "get" MethodInvocation name MethodInvocation Literal 0 Literal 1 substring MethodInvocation toUpperCase trim = IfStatement BinaryOperation > MethodInvocation name length Literal 1 BlockStatement StatementExpression Assignment MemberReference mName MethodInvocation name Literal 1 substring += LocalVariableDeclaration Modifier final ReferenceType Class VariableDeclarator c MethodInvocation dispatchable getClass LocalVariableDeclaration Modifier final ReferenceType Method VariableDeclarator actionM MethodInvocation c MemberReference mName ArrayCreator ReferenceType Class Literal 0 getMethod IfStatement BinaryOperation != MemberReference actionM Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator o MethodInvocation actionM MemberReference dispatchable Cast ReferenceType Object Literal null invoke IfStatement BinaryOperation != MemberReference o Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator s MethodInvocation o toString IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference methodName MethodInvocation s trim = LocalVariableDeclaration ReferenceType Method VariableDeclarator executeM Literal null StatementExpression Assignment MemberReference executeM MethodInvocation dispatchable MethodInvocation MemberReference methodName ArrayCreator ReferenceType Class Literal 0 getMethod getClass = IfStatement BinaryOperation == MemberReference executeM Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "No public " MemberReference methodName Literal "() in " MethodInvocation dispatchable getClass StatementExpression MethodInvocation executeM MemberReference dispatchable Cast ReferenceType Object Literal null invoke IfStatement BinaryOperation instanceof MemberReference task ReferenceType UnknownElement BlockStatement StatementExpression Cast ReferenceType UnknownElement MemberReference task BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Dispatchable Task attribute '" MethodInvocation name trim Literal "' not set or value is empty." BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Dispatchable Task attribute '" MethodInvocation name trim Literal "' not set or value is empty." BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal Parameter Name must not be empty for Dispatchable Task." CatchClause CatchClauseParameter NoSuchMethodException nsme ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "No public " MemberReference mName Literal "() in " MethodInvocation task getClass BlockStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator executeM Literal null StatementExpression Assignment MemberReference executeM MethodInvocation task MethodInvocation MemberReference methodName ArrayCreator ReferenceType Class Literal 0 getMethod getClass = IfStatement BinaryOperation == MemberReference executeM Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "No public " MemberReference methodName Literal "() in " MethodInvocation task getClass StatementExpression MethodInvocation executeM MemberReference task Cast ReferenceType Object Literal null invoke IfStatement BinaryOperation instanceof MemberReference task ReferenceType UnknownElement BlockStatement StatementExpression Cast ReferenceType UnknownElement MemberReference task CatchClause CatchClauseParameter InvocationTargetException ie LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ie getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference t CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType File defaultSchemaFile StatementExpression MethodInvocation createAnonymousSchema StatementExpression This MemberReference anonymousSchema MethodInvocation MemberReference defaultSchemaFile setFile	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String packageRoot StatementExpression MethodInvocation loaderPackages BinaryOperation + MemberReference packageRoot TernaryExpression MethodInvocation packageRoot Literal "." endsWith Literal "" Literal "." addElement	0
MethodDeclaration Modifier public setAddsourcefile FormalParameter BasicType boolean b ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the addsourcefile attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public setWebxml FormalParameter ReferenceType File descr StatementExpression Assignment MemberReference deploymentDescriptor MemberReference descr = IfStatement MethodInvocation ! deploymentDescriptor exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Deployment " MemberReference deploymentDescriptor Literal " does not exist." LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator fs ClassCreator ReferenceType ZipFileSet StatementExpression MethodInvocation fs MemberReference deploymentDescriptor setFile StatementExpression MethodInvocation fs MemberReference XML_DESCRIPTOR_PATH StatementExpression SuperMethodInvocation MemberReference fs addFileset	0
MethodDeclaration Modifier private FormalParameter ReferenceType String s FormalParameter ReferenceType String encoding Exception LocalVariableDeclaration BasicType byte VariableDeclarator expected MethodInvocation s MemberReference encoding getBytes LocalVariableDeclaration ReferenceType ReaderInputStream VariableDeclarator r ClassCreator ReferenceType ReaderInputStream ClassCreator ReferenceType StringReader MemberReference s MemberReference encoding ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference expected length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator expect BinaryOperation & MemberReference ArraySelector MemberReference i expected Literal 0xFF LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation r read IfStatement BinaryOperation != MemberReference expect MemberReference read BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Mismatch in ReaderInputStream at index " MemberReference i Literal " expecting " MemberReference expect Literal " got " MemberReference read Literal " for string " MemberReference s Literal " with encoding " MemberReference encoding fail IfStatement BinaryOperation != MethodInvocation r read Literal - 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Mismatch in ReaderInputStream - EOF not seen for string " MemberReference s Literal " with encoding " MemberReference encoding fail	1
MethodDeclaration Modifier public setExtraOptions FormalParameter ReferenceType String extraOptions StatementExpression Assignment This MemberReference extraOptions MemberReference extraOptions =	0
MethodDeclaration Modifier protected ReferenceType String getCommandline FormalParameter ReferenceType String srcFiles FormalParameter ReferenceType File baseDirs LocalVariableDeclaration Modifier final BasicType char VariableDeclarator fileSeparator MemberReference File separatorChar LocalVariableDeclaration ReferenceType Vector VariableDeclarator targets ClassCreator ReferenceType Vector IfStatement BinaryOperation != MemberReference targetFilePos Literal null BlockStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator addedFiles ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference srcFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator subTargets MethodInvocation mapper MemberReference ArraySelector MemberReference i srcFiles mapFileName IfStatement BinaryOperation != MemberReference subTargets Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference subTargets length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference name ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference destDir MemberReference ArraySelector MemberReference j subTargets = BlockStatement StatementExpression Assignment MemberReference name MemberReference ArraySelector MemberReference j subTargets = IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference fileSeparator Literal '/' BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MemberReference fileSeparator Literal '/' replace = IfStatement MethodInvocation ! addedFiles MemberReference name contains BlockStatement StatementExpression MethodInvocation targets MemberReference name addElement StatementExpression MethodInvocation addedFiles MemberReference name MemberReference name put LocalVariableDeclaration ReferenceType String VariableDeclarator targetFiles ArrayCreator ReferenceType String MethodInvocation targets size StatementExpression MethodInvocation targets MemberReference targetFiles copyInto IfStatement MemberReference ! addSourceFile BlockStatement StatementExpression Assignment MemberReference srcFiles ArrayCreator ReferenceType String Literal 0 = LocalVariableDeclaration ReferenceType String VariableDeclarator orig MethodInvocation cmdl getCommandline LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String BinaryOperation + BinaryOperation + MemberReference orig length MemberReference srcFiles length MemberReference targetFiles length LocalVariableDeclaration BasicType int VariableDeclarator srcIndex MemberReference orig length IfStatement BinaryOperation != MemberReference srcFilePos Literal null BlockStatement StatementExpression Assignment MemberReference srcIndex MethodInvocation srcFilePos getPosition = IfStatement BinaryOperation != MemberReference targetFilePos Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator targetIndex MethodInvocation targetFilePos getPosition IfStatement BinaryOperation || BinaryOperation < MemberReference srcIndex MemberReference targetIndex BinaryOperation && BinaryOperation == MemberReference srcIndex MemberReference targetIndex MemberReference srcIsFirst BlockStatement StatementExpression MethodInvocation System MemberReference orig Literal 0 MemberReference result Literal 0 MemberReference srcIndex arraycopy StatementExpression MethodInvocation System MemberReference orig MemberReference srcIndex MemberReference result BinaryOperation + MemberReference srcIndex MemberReference srcFiles length BinaryOperation - MemberReference targetIndex MemberReference srcIndex arraycopy StatementExpression MethodInvocation System MemberReference targetFiles Literal 0 MemberReference result BinaryOperation + MemberReference targetIndex MemberReference srcFiles length MemberReference targetFiles length arraycopy StatementExpression MethodInvocation System MemberReference orig MemberReference targetIndex MemberReference result BinaryOperation + BinaryOperation + MemberReference targetIndex MemberReference srcFiles length MemberReference targetFiles length BinaryOperation - MemberReference orig length MemberReference targetIndex arraycopy BlockStatement StatementExpression MethodInvocation System MemberReference orig Literal 0 MemberReference result Literal 0 MemberReference targetIndex arraycopy StatementExpression MethodInvocation System MemberReference targetFiles Literal 0 MemberReference result MemberReference targetIndex MemberReference targetFiles length arraycopy StatementExpression MethodInvocation System MemberReference orig MemberReference targetIndex MemberReference result BinaryOperation + MemberReference targetIndex MemberReference targetFiles length BinaryOperation - MemberReference srcIndex MemberReference targetIndex arraycopy StatementExpression MethodInvocation System MemberReference orig MemberReference srcIndex MemberReference result BinaryOperation + BinaryOperation + MemberReference srcIndex MemberReference srcFiles length MemberReference targetFiles length BinaryOperation - MemberReference orig length MemberReference srcIndex arraycopy StatementExpression Assignment MemberReference srcIndex MemberReference targetFiles length += BlockStatement StatementExpression MethodInvocation System MemberReference orig Literal 0 MemberReference result Literal 0 MemberReference srcIndex arraycopy StatementExpression MethodInvocation System MemberReference orig MemberReference srcIndex MemberReference result BinaryOperation + MemberReference srcIndex MemberReference srcFiles length BinaryOperation - MemberReference orig length MemberReference srcIndex arraycopy ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference srcFiles length MemberReference ++ i BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference srcIndex MemberReference i result ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference ArraySelector MemberReference i baseDirs MemberReference ArraySelector MemberReference i srcFiles = BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference srcIndex MemberReference i result MemberReference ArraySelector MemberReference i srcFiles = IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference fileSeparator Literal '/' BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference srcIndex MemberReference i result MemberReference ArraySelector BinaryOperation + MemberReference srcIndex MemberReference i MethodInvocation MemberReference fileSeparator Literal '/' replace result = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public setSource FormalParameter ReferenceType File source StatementExpression Assignment This MemberReference source MemberReference source =	0
MethodDeclaration Modifier public static ReferenceType Element FormalParameter ReferenceType Node parent FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType NodeList VariableDeclarator childList MethodInvocation parent getChildNodes LocalVariableDeclaration Modifier final BasicType int VariableDeclarator len MethodInvocation childList getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation childList MemberReference i item IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference child Literal null BinaryOperation == MethodInvocation child getNodeType MemberReference Node ELEMENT_NODE MethodInvocation child MethodInvocation MemberReference equals getNodeName BlockStatement ReturnStatement Cast ReferenceType Element MemberReference child ReturnStatement Literal null	0
MethodDeclaration Modifier private addFile FormalParameter ReferenceType ZipOutputStream output FormalParameter ReferenceType File file FormalParameter ReferenceType String prefix FormalParameter BasicType boolean compress IOException IfStatement MethodInvocation ! file exists BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry ClassCreator ReferenceType ZipEntry MethodInvocation MemberReference file MemberReference prefix getEntryName StatementExpression MethodInvocation entry MethodInvocation file lastModified setTime StatementExpression MethodInvocation entry MethodInvocation file length setSize IfStatement MemberReference ! compress BlockStatement StatementExpression MethodInvocation entry MethodInvocation MemberReference file calcChecksum setCrc LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator input ClassCreator ReferenceType FileInputStream MemberReference file StatementExpression MethodInvocation MemberReference output MemberReference input MemberReference entry addToOutputStream	1
MethodDeclaration Modifier protected BasicType boolean supportsNonFileResources ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType equals getClass	0
MethodDeclaration FormalParameter ReferenceType Task el FormalParameter ReferenceType Task o LocalVariableDeclaration BasicType int VariableDeclarator index WhileStatement BinaryOperation >= Assignment MemberReference index MethodInvocation children MemberReference el indexOf = Literal 0 BlockStatement StatementExpression MethodInvocation children MemberReference index MemberReference o set	0
MethodDeclaration Modifier public setServer FormalParameter ReferenceType String server StatementExpression Assignment This MemberReference server MemberReference server =	0
MethodDeclaration Modifier public setType FormalParameter ReferenceType String value StatementExpression Assignment MemberReference type MemberReference value =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test21" executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public BasicType boolean matches FormalParameter ReferenceType String argument BuildException ReturnStatement MethodInvocation MemberReference argument MemberReference MATCH_DEFAULT matches	1
MethodDeclaration Modifier public static ReferenceType Object invoke FormalParameter ReferenceType Object obj FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class FormalParameter ReferenceType Object arg TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method StatementExpression Assignment MemberReference method MethodInvocation obj MethodInvocation MemberReference methodName ArrayCreator ReferenceType Class ArrayInitializer MemberReference getMethod getClass = ReturnStatement MethodInvocation method MemberReference obj ArrayCreator ReferenceType Object ArrayInitializer MemberReference arg invoke CatchClause CatchClauseParameter Exception t StatementExpression MethodInvocation MemberReference t throwBuildException ReturnStatement Literal null	1
MethodDeclaration Modifier public setValidity FormalParameter Modifier final ReferenceType String validity BuildException TryStatement StatementExpression Assignment This MemberReference validity MethodInvocation Integer MemberReference validity parseInt = CatchClause CatchClauseParameter NumberFormatException nfe ThrowStatement ClassCreator ReferenceType BuildException Literal "Validity attribute should be a integer"	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public testSimple StatementExpression MethodInvocation Literal "simple" Literal "Hello World" expectLog	0
MethodDeclaration Modifier public testName StatementExpression MethodInvocation Literal "name" executeTarget	0
MethodDeclaration Modifier private BasicType boolean compareFiles FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference name1 LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference name2 TryStatement IfStatement BinaryOperation || MethodInvocation ! file1 exists MethodInvocation ! file2 exists BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "One or both files do not exist:" MemberReference name1 Literal ", " MemberReference name2 println ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation file1 length MethodInvocation file2 length BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File size mismatch:" MemberReference name1 Literal "(" MethodInvocation file1 length Literal "), " MemberReference name2 Literal "(" MethodInvocation file2 length Literal ")" println ReturnStatement Literal false LocalVariableDeclaration BasicType byte VariableDeclarator buffer1 ArrayCreator BasicType byte MemberReference BUF_SIZE LocalVariableDeclaration BasicType byte VariableDeclarator buffer2 ArrayCreator BasicType byte MemberReference BUF_SIZE LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis1 ClassCreator ReferenceType FileInputStream MemberReference file1 LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis2 ClassCreator ReferenceType FileInputStream MemberReference file2 LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator read Literal 0 WhileStatement BinaryOperation != Assignment MemberReference read MethodInvocation fis1 MemberReference buffer1 read = Literal - 1 BlockStatement StatementExpression MethodInvocation fis2 MemberReference buffer2 read ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference read MemberReference ++ i MemberReference ++ index BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i buffer1 MemberReference ArraySelector MemberReference i buffer2 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Bytes mismatch:" MemberReference name1 Literal ", " MemberReference name2 Literal " at byte " MemberReference index println ReturnStatement Literal false ReturnStatement Literal true CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "IOException comparing files: " MemberReference name1 Literal ", " MemberReference name2 println ReturnStatement Literal false	1
MethodDeclaration Modifier public addRectangle FormalParameter ReferenceType Rectangle instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier private ReferenceType Manifest getManifest FormalParameter ReferenceType String filename IOException ManifestException LocalVariableDeclaration ReferenceType FileReader VariableDeclarator r ClassCreator ReferenceType FileReader ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference filename TryStatement ReturnStatement ClassCreator ReferenceType Manifest MemberReference r StatementExpression MethodInvocation r close	0
MethodDeclaration Modifier public BasicType byte getLocalFileDataData ReturnStatement MemberReference NO_BYTES	0
MethodDeclaration Modifier public setTask FormalParameter ReferenceType Task task StatementExpression Assignment This MemberReference task MemberReference task =	1
MethodDeclaration Modifier public setOutputDir FormalParameter ReferenceType File outputDir StatementExpression Assignment This MemberReference outputDir MemberReference outputDir =	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String p StatementExpression Assignment MemberReference property MemberReference p =	0
MethodDeclaration Modifier public test13 StatementExpression MethodInvocation Literal "test13" Literal "Duplicate Literal "The attribute may not occur more than once in the same section" expectBuildExceptionContaining	0
MethodDeclaration Modifier public synchronized removeBuildListener FormalParameter ReferenceType listener LocalVariableDeclaration ReferenceType Vector VariableDeclarator newListeners MethodInvocation getBuildListeners StatementExpression MethodInvocation newListeners MemberReference listener removeElement StatementExpression Assignment MemberReference listeners MemberReference newListeners =	1
MethodDeclaration Modifier protected doReplace FormalParameter ReferenceType File f FormalParameter BasicType int options IOException LocalVariableDeclaration ReferenceType File VariableDeclarator temp MethodInvocation FILE_UTILS Literal "replace" Literal ".txt" Literal null createTempFile StatementExpression MethodInvocation temp deleteOnExit LocalVariableDeclaration ReferenceType Reader VariableDeclarator r Literal null LocalVariableDeclaration ReferenceType Writer VariableDeclarator w Literal null TryStatement IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType FileReader MemberReference f = StatementExpression Assignment MemberReference w ClassCreator ReferenceType FileWriter MemberReference temp = BlockStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MemberReference f MemberReference encoding = StatementExpression Assignment MemberReference w ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference temp MemberReference encoding = LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator br ClassCreator ReferenceType BufferedReader MemberReference r LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator bw ClassCreator ReferenceType BufferedWriter MemberReference w LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference bw LocalVariableDeclaration BasicType boolean VariableDeclarator changes Literal false StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Replacing pattern '" MethodInvocation regex MethodInvocation getProject getPattern Literal "' with '" MethodInvocation subs MethodInvocation getProject getExpression Literal "' in '" MethodInvocation f getPath Literal "'" TernaryExpression MemberReference byline Literal " by line" Literal "" TernaryExpression BinaryOperation > MethodInvocation flags length Literal 0 BinaryOperation + BinaryOperation + Literal " with flags: '" MemberReference flags Literal "'" Literal "" Literal "." MemberReference Project MSG_VERBOSE log IfStatement MemberReference byline BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator linebuf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator res Literal null LocalVariableDeclaration BasicType int VariableDeclarator c LocalVariableDeclaration BasicType boolean VariableDeclarator hasCR Literal false DoStatement BinaryOperation >= MemberReference c Literal 0 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation br read = IfStatement BinaryOperation == MemberReference c Literal '\r' BlockStatement IfStatement MemberReference hasCR BlockStatement StatementExpression Assignment MemberReference line MethodInvocation linebuf toString = StatementExpression Assignment MemberReference res MethodInvocation MemberReference regex MemberReference subs MemberReference line MemberReference options doReplace = IfStatement MethodInvocation ! res MemberReference line equals BlockStatement StatementExpression Assignment MemberReference changes Literal true = StatementExpression MethodInvocation pw MemberReference res print StatementExpression MethodInvocation pw Literal '\r' print StatementExpression Assignment MemberReference linebuf ClassCreator ReferenceType StringBuffer = BlockStatement StatementExpression Assignment MemberReference hasCR Literal true = IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression Assignment MemberReference line MethodInvocation linebuf toString = StatementExpression Assignment MemberReference res MethodInvocation MemberReference regex MemberReference subs MemberReference line MemberReference options doReplace = IfStatement MethodInvocation ! res MemberReference line equals BlockStatement StatementExpression Assignment MemberReference changes Literal true = StatementExpression MethodInvocation pw MemberReference res print IfStatement MemberReference hasCR BlockStatement StatementExpression MethodInvocation pw Literal '\r' print StatementExpression Assignment MemberReference hasCR Literal false = StatementExpression MethodInvocation pw Literal '\n' print StatementExpression Assignment MemberReference linebuf ClassCreator ReferenceType StringBuffer = BlockStatement IfStatement BinaryOperation || MemberReference hasCR BinaryOperation < MemberReference c Literal 0 BlockStatement StatementExpression Assignment MemberReference line MethodInvocation linebuf toString = StatementExpression Assignment MemberReference res MethodInvocation MemberReference regex MemberReference subs MemberReference line MemberReference options doReplace = IfStatement MethodInvocation ! res MemberReference line equals BlockStatement StatementExpression Assignment MemberReference changes Literal true = StatementExpression MethodInvocation pw MemberReference res print IfStatement MemberReference hasCR BlockStatement StatementExpression MethodInvocation pw Literal '\r' print StatementExpression Assignment MemberReference hasCR Literal false = StatementExpression Assignment MemberReference linebuf ClassCreator ReferenceType StringBuffer = IfStatement BinaryOperation >= MemberReference c Literal 0 BlockStatement StatementExpression MethodInvocation linebuf Cast BasicType char MemberReference c append StatementExpression MethodInvocation pw flush BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator buf MethodInvocation FileUtils MemberReference br readFully IfStatement BinaryOperation == MemberReference buf Literal null BlockStatement StatementExpression Assignment MemberReference buf Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator res MethodInvocation MemberReference regex MemberReference subs MemberReference buf MemberReference options doReplace IfStatement MethodInvocation ! res MemberReference buf equals BlockStatement StatementExpression Assignment MemberReference changes Literal true = StatementExpression MethodInvocation pw MemberReference res print StatementExpression MethodInvocation pw flush StatementExpression MethodInvocation r close StatementExpression Assignment MemberReference r Literal null = StatementExpression MethodInvocation w close StatementExpression Assignment MemberReference w Literal null = IfStatement MemberReference changes BlockStatement StatementExpression MethodInvocation Literal "File has changed; saving the updated file" MemberReference Project MSG_VERBOSE log TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference temp MemberReference f rename StatementExpression Assignment MemberReference temp Literal null = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Couldn't rename temporary file " MemberReference temp MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation Literal "No change made" MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation FileUtils MemberReference r close StatementExpression MethodInvocation FileUtils MemberReference w close IfStatement BinaryOperation != MemberReference temp Literal null BlockStatement StatementExpression MethodInvocation temp delete	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection res StatementExpression MethodInvocation rcs MemberReference res add	0
MethodDeclaration Modifier public error FormalParameter ReferenceType TransformerException e StatementExpression MethodInvocation MemberReference e Literal "Error" logError	1
MethodDeclaration Modifier public FormalParameter BasicType boolean onlyUnchanged StatementExpression Assignment This MemberReference onlyUnchanged MemberReference onlyUnchanged =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation MethodInvocation Literal "cleanup" executeTarget getProject	0
MethodDeclaration Modifier public ReferenceType URL getResource FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null IfStatement MethodInvocation MemberReference name isParentFirst BlockStatement StatementExpression Assignment MemberReference url TernaryExpression BinaryOperation == MemberReference parent Literal null SuperMethodInvocation MemberReference name getResource MethodInvocation parent MemberReference name getResource = IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Resource " MemberReference name Literal " loaded from parent loader" MemberReference Project MSG_DEBUG log BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation pathComponents elements WhileStatement BinaryOperation && MethodInvocation e hasMoreElements BinaryOperation == MemberReference url Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pathComponent Cast ReferenceType File MethodInvocation e nextElement StatementExpression Assignment MemberReference url MethodInvocation MemberReference pathComponent MemberReference name getResourceURL = IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Resource " MemberReference name Literal " loaded from ant loader" MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && BinaryOperation == MemberReference url Literal null MethodInvocation ! MemberReference name isParentFirst BlockStatement IfStatement MemberReference ignoreBase BlockStatement StatementExpression Assignment MemberReference url TernaryExpression BinaryOperation == MethodInvocation getRootLoader Literal null Literal null MethodInvocation MethodInvocation MemberReference name getResource getRootLoader = BlockStatement StatementExpression Assignment MemberReference url TernaryExpression BinaryOperation == MemberReference parent Literal null SuperMethodInvocation MemberReference name getResource MethodInvocation parent MemberReference name getResource = IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Resource " MemberReference name Literal " loaded from parent loader" MemberReference Project MSG_DEBUG log IfStatement BinaryOperation == MemberReference url Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Couldn't load Resource " MemberReference name MemberReference Project MSG_DEBUG log ReturnStatement MemberReference url	1
MethodDeclaration Modifier private runTests Exception LocalVariableDeclaration ReferenceType Map VariableDeclarator suites MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation MethodInvocation suites values countTests StatementExpression MethodInvocation BinaryOperation + Literal "Total tests to run: " MemberReference count log LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent MemberReference id MemberReference TestRunEvent RUN_STARTED IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt StatementExpression MethodInvocation MemberReference evt LocalVariableDeclaration ReferenceType TestSummary VariableDeclarator runSummary ClassCreator ReferenceType TestSummary StatementExpression MethodInvocation runSummary MemberReference testResult start ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation suites MethodInvocation iterator entrySet MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Test VariableDeclarator test Cast ReferenceType Test MethodInvocation entry getValue IfStatement BinaryOperation instanceof MemberReference test ReferenceType TestCase BlockStatement StatementExpression Assignment MemberReference test ClassCreator ReferenceType TestSuite MemberReference name = StatementExpression MethodInvocation MemberReference test MemberReference name runTest StatementExpression MethodInvocation runSummary MemberReference testResult stop LocalVariableDeclaration BasicType int VariableDeclarator type TernaryExpression BinaryOperation || BinaryOperation == MemberReference testResult Literal null MethodInvocation testResult shouldStop MemberReference TestRunEvent RUN_STOPPED MemberReference TestRunEvent RUN_ENDED StatementExpression Assignment MemberReference evt ClassCreator ReferenceType TestRunEvent MemberReference id MemberReference type MethodInvocation System getProperties MemberReference runSummary = IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt StatementExpression MethodInvocation MemberReference evt StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Finished after " MethodInvocation runSummary elapsedTime Literal "ms" log StatementExpression MethodInvocation shutDown	1
MethodDeclaration Modifier protected BasicType boolean hasCpDelegate ReturnStatement BinaryOperation != MemberReference cpDelegate Literal null	0
MethodDeclaration Modifier public BasicType boolean getHaltonfailure ReturnStatement MemberReference haltOnFail	0
MethodDeclaration Modifier public ReferenceType String getAbsolutePath ReturnStatement This MethodInvocation getCurpwd	0
MethodDeclaration Modifier public addContains FormalParameter ReferenceType Contains test StatementExpression MethodInvocation conditions MemberReference test addElement	0
MethodDeclaration Modifier public ReferenceType Class innerGetTypeClass ClassNotFoundException IfStatement BinaryOperation != MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference clazz IfStatement BinaryOperation == MemberReference classLoader Literal null BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference className forName = BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation classLoader MemberReference className loadClass = ReturnStatement MemberReference clazz	0
MethodDeclaration Modifier public FormalParameter ReferenceType String serverTimeZoneId IfStatement BinaryOperation && BinaryOperation != MemberReference serverTimeZoneId Literal null MethodInvocation ! serverTimeZoneId Literal "" equals BlockStatement StatementExpression Assignment This MemberReference serverTimeZoneConfig MemberReference serverTimeZoneId = StatementExpression MethodInvocation configurationHasBeenSet	0
MethodDeclaration Modifier public BasicType int size ReturnStatement TernaryExpression MethodInvocation basedirExists MethodInvocation fs size Literal 0	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference mComment	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public setProcessErrorStream FormalParameter ReferenceType InputStream is IOException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference is LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation reader readLine IfStatement BinaryOperation != MemberReference s Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "[java2iiop] " MemberReference s MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Jar Literal "foo" ArrayCreator ReferenceType String ArrayInitializer Literal "bar" assertNull	0
MethodDeclaration Modifier public BasicType boolean isCompatibleWith FormalParameter Modifier final ReferenceType Specification other ReturnStatement BinaryOperation == MemberReference COMPATIBLE MethodInvocation MemberReference other getCompatibilityWith	0
MethodDeclaration Modifier protected ReferenceType RE getCompiledPattern FormalParameter BasicType int options BuildException LocalVariableDeclaration BasicType int VariableDeclarator cOptions MethodInvocation MemberReference options getCompilerOptions TryStatement LocalVariableDeclaration ReferenceType RE VariableDeclarator reg ClassCreator ReferenceType RE MemberReference pattern StatementExpression MethodInvocation reg MemberReference cOptions setMatchFlags ReturnStatement MemberReference reg CatchClause CatchClauseParameter RESyntaxException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType String delims StatementExpression Assignment This MemberReference delims MethodInvocation StringUtils MethodInvocation toCharArray MemberReference delims =	0
MethodDeclaration Modifier protected setInternalGetLocalCopy FormalParameter Modifier final BasicType boolean getLocalCopy StatementExpression Assignment This MemberReference getLocalCopy MemberReference getLocalCopy =	0
MethodDeclaration Modifier public testRedirector1 StatementExpression MethodInvocation Literal "redirector1" executeTarget	0
MethodDeclaration Modifier protected setInputStream FormalParameter ReferenceType InputStream in StatementExpression Assignment This MemberReference in MemberReference in =	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentCommand BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentFileCommand BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NOCOMMENT setValue createArgument IfStatement MethodInvocation getIdentical BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_IDENTICAL setValue createArgument IfStatement MethodInvocation getFull BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation getNlabel BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NLABEL setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier private loadResourceMaps BuildException LocalVariableDeclaration ReferenceType Locale VariableDeclarator locale ClassCreator ReferenceType Locale MemberReference bundleLanguage MemberReference bundleCountry MemberReference bundleVariant LocalVariableDeclaration ReferenceType String VariableDeclarator language TernaryExpression BinaryOperation > MethodInvocation locale MethodInvocation length getLanguage Literal 0 BinaryOperation + Literal "_" MethodInvocation locale getLanguage Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator country TernaryExpression BinaryOperation > MethodInvocation locale MethodInvocation length getCountry Literal 0 BinaryOperation + Literal "_" MethodInvocation locale getCountry Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator variant TernaryExpression BinaryOperation > MethodInvocation locale MethodInvocation length getVariant Literal 0 BinaryOperation + Literal "_" MethodInvocation locale getVariant Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator bundleFile BinaryOperation + BinaryOperation + BinaryOperation + MemberReference bundle MemberReference language MemberReference country MemberReference variant StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_SPECIFIED_LANGUAGE_COUNTRY_VARIANT Literal false processBundle StatementExpression Assignment MemberReference bundleFile BinaryOperation + BinaryOperation + MemberReference bundle MemberReference language MemberReference country = StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_SPECIFIED_LANGUAGE_COUNTRY Literal false processBundle StatementExpression Assignment MemberReference bundleFile BinaryOperation + MemberReference bundle MemberReference language = StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_SPECIFIED_LANGUAGE Literal false processBundle StatementExpression Assignment MemberReference bundleFile MemberReference bundle = StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_NOMATCH Literal false processBundle StatementExpression Assignment MemberReference locale MethodInvocation Locale getDefault = StatementExpression Assignment MemberReference language TernaryExpression BinaryOperation > MethodInvocation locale MethodInvocation length getLanguage Literal 0 BinaryOperation + Literal "_" MethodInvocation locale getLanguage Literal "" = StatementExpression Assignment MemberReference country TernaryExpression BinaryOperation > MethodInvocation locale MethodInvocation length getCountry Literal 0 BinaryOperation + Literal "_" MethodInvocation locale getCountry Literal "" = StatementExpression Assignment MemberReference variant TernaryExpression BinaryOperation > MethodInvocation locale MethodInvocation length getVariant Literal 0 BinaryOperation + Literal "_" MethodInvocation locale getVariant Literal "" = StatementExpression Assignment MemberReference bundleEncoding MethodInvocation System Literal "file.encoding" getProperty = StatementExpression Assignment MemberReference bundleFile BinaryOperation + BinaryOperation + BinaryOperation + MemberReference bundle MemberReference language MemberReference country MemberReference variant = StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_DEFAULT_LANGUAGE_COUNTRY_VARIANT Literal false processBundle StatementExpression Assignment MemberReference bundleFile BinaryOperation + BinaryOperation + MemberReference bundle MemberReference language MemberReference country = StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_DEFAULT_LANGUAGE_COUNTRY Literal false processBundle StatementExpression Assignment MemberReference bundleFile BinaryOperation + MemberReference bundle MemberReference language = StatementExpression MethodInvocation MemberReference bundleFile MemberReference BUNDLE_DEFAULT_LANGUAGE Literal true processBundle	1
MethodDeclaration Modifier public FormalParameter BasicType int duration StatementExpression Assignment This MemberReference showDuration MemberReference duration =	0
MethodDeclaration Modifier private sendMTFValues2 FormalParameter Modifier final BasicType int nGroups FormalParameter Modifier final BasicType int nSelectors LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration BasicType byte VariableDeclarator pos MemberReference dataShadow sendMTFValues2_pos ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference nGroups BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i pos Cast BasicType byte MemberReference i = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nSelectors MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator ll_i MemberReference dataShadow ArraySelector MemberReference i selector LocalVariableDeclaration BasicType byte VariableDeclarator tmp MemberReference ArraySelector Literal 0 pos LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 WhileStatement BinaryOperation != MemberReference ll_i MemberReference tmp BlockStatement StatementExpression MemberReference ++ j LocalVariableDeclaration BasicType byte VariableDeclarator tmp2 MemberReference tmp StatementExpression Assignment MemberReference tmp MemberReference ArraySelector MemberReference j pos = StatementExpression Assignment MemberReference ArraySelector MemberReference j pos MemberReference tmp2 = StatementExpression Assignment MemberReference ArraySelector Literal 0 pos MemberReference tmp = StatementExpression Assignment MemberReference dataShadow ArraySelector MemberReference i selectorMtf Cast BasicType byte MemberReference j =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression Assignment This MemberReference append MemberReference append =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String p4Opts StatementExpression Assignment This MemberReference P4Opts MemberReference p4Opts =	0
MethodDeclaration Modifier public BasicType boolean getFiltering ReturnStatement MemberReference filtering	0
MethodDeclaration Modifier public configure FormalParameter ReferenceType EjbJar ReferenceType Config config StatementExpression Assignment This MemberReference config MemberReference config = StatementExpression MethodInvocation createAnalyzer StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier public addConfiguredMapper FormalParameter ReferenceType Mapper mapper StatementExpression MethodInvocation MethodInvocation mapper getImplementation add	0
MethodDeclaration Modifier protected expandResource FormalParameter ReferenceType Resource srcR FormalParameter ReferenceType File dir ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only filesystem based resources are" Literal " supported by this task."	0
MethodDeclaration Modifier public FormalParameter ReferenceType String e StatementExpression Assignment MemberReference alternative MemberReference e =	0
MethodDeclaration Modifier public init FormalParameter ReferenceType String tag FormalParameter ReferenceType AttributeList attrs SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator def Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator baseDir Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attrs MemberReference i getName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement MethodInvocation key Literal "default" equals BlockStatement StatementExpression Assignment MemberReference def MemberReference value = IfStatement MethodInvocation key Literal "name" equals BlockStatement StatementExpression Assignment MemberReference name MemberReference value = IfStatement MethodInvocation key Literal "id" equals BlockStatement StatementExpression Assignment MemberReference id MemberReference value = IfStatement MethodInvocation key Literal "basedir" equals BlockStatement StatementExpression Assignment MemberReference baseDir MemberReference value = BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected attribute \"" MethodInvocation attrs MemberReference i getName Literal "\"" MemberReference helperImpl locator IfStatement BinaryOperation && BinaryOperation != MemberReference def Literal null MethodInvocation ! def Literal "" equals BlockStatement StatementExpression MethodInvocation helperImpl.project MemberReference def setDefaultTarget BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The default attribute is required" IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation helperImpl.project MemberReference name setName StatementExpression MethodInvocation helperImpl.project MemberReference name MemberReference helperImpl project IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation helperImpl.project MemberReference id MemberReference helperImpl project IfStatement BinaryOperation != MethodInvocation helperImpl.project Literal "basedir" getProperty Literal null BlockStatement StatementExpression MethodInvocation helperImpl.project MethodInvocation helperImpl.project Literal "basedir" getProperty setBasedir BlockStatement IfStatement BinaryOperation == MemberReference baseDir Literal null BlockStatement StatementExpression MethodInvocation helperImpl.project MethodInvocation helperImpl.buildFileParent getAbsolutePath setBasedir BlockStatement IfStatement ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference baseDir BlockStatement StatementExpression MethodInvocation helperImpl.project MemberReference baseDir setBasedir BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator resolvedBaseDir MethodInvocation FILE_UTILS MemberReference helperImpl buildFileParent MemberReference baseDir resolveFile StatementExpression MethodInvocation helperImpl.project MemberReference resolvedBaseDir setBaseDir StatementExpression MethodInvocation helperImpl.project Literal "" MemberReference helperImpl implicitTarget addTarget	1
MethodDeclaration Modifier public setUseFile FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier final protected ReferenceType Parameter getParameters ReturnStatement MemberReference parameters	0
MethodDeclaration Modifier public setSrcFile FormalParameter ReferenceType File srcFile StatementExpression MethodInvocation wsdl MemberReference srcFile setFile	0
MethodDeclaration Modifier public testMoveFileAndFileset StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType XMLFragment VariableDeclarator x Cast ReferenceType XMLFragment MethodInvocation MethodInvocation Literal getReference getProject StatementExpression MethodInvocation MemberReference x assertNotNull LocalVariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation x getFragment StatementExpression MethodInvocation Literal "No MethodInvocation ! n assertTrue LocalVariableDeclaration ReferenceType NodeList VariableDeclarator nl MethodInvocation n getChildNodes StatementExpression MethodInvocation Literal 1 MethodInvocation nl getLength assertEquals StatementExpression MethodInvocation MemberReference Node TEXT_NODE MethodInvocation nl MethodInvocation getNodeType Literal 0 item assertEquals StatementExpression MethodInvocation Literal "foo" MethodInvocation nl MethodInvocation getNodeValue Literal 0 item assertEquals	0
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType Calendar cal LocalVariableDeclaration BasicType int VariableDeclarator dayOfTheYear MethodInvocation cal MemberReference Calendar DAY_OF_YEAR get LocalVariableDeclaration BasicType int VariableDeclarator yearInMetonicCycle BinaryOperation + BinaryOperation % BinaryOperation - MethodInvocation cal MemberReference Calendar YEAR get Literal 1900 Literal 19 Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator epact BinaryOperation % BinaryOperation + BinaryOperation * Literal 11 MemberReference yearInMetonicCycle Literal 18 Literal 30 IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MemberReference epact Literal 25 BinaryOperation > MemberReference yearInMetonicCycle Literal 11 BinaryOperation == MemberReference epact Literal 24 BlockStatement StatementExpression MemberReference ++ epact ReturnStatement BinaryOperation & BinaryOperation / BinaryOperation % BinaryOperation + BinaryOperation * BinaryOperation + MemberReference dayOfTheYear MemberReference epact Literal 6 Literal 11 Literal 177 Literal 22 Literal 7	1
MethodDeclaration Modifier public ReferenceType String getExpression BuildException IfStatement BinaryOperation == MemberReference expression Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Expression attribute is ReturnStatement MemberReference expression	0
MethodDeclaration Modifier public FormalParameter ReferenceType method StatementExpression Assignment MemberReference MemberReference method =	0
MethodDeclaration Modifier public setRecurse FormalParameter BasicType boolean recurse StatementExpression Assignment MemberReference mRecurse MemberReference recurse =	0
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar ReturnStatement Cast BasicType int BinaryOperation - MethodInvocation foo getLastModified MethodInvocation bar getLastModified	1
MethodDeclaration Modifier protected BasicType boolean isRebuildRequired FormalParameter ReferenceType File genericJarFile FormalParameter ReferenceType File weblogicJarFile LocalVariableDeclaration BasicType boolean VariableDeclarator rebuild Literal false LocalVariableDeclaration ReferenceType JarFile VariableDeclarator genericJar Literal null LocalVariableDeclaration ReferenceType JarFile VariableDeclarator wlJar Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator newWLJarFile Literal null LocalVariableDeclaration ReferenceType JarOutputStream VariableDeclarator newJarStream Literal null LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator genericLoader Literal null TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Checking if weblogic Jar needs to be rebuilt for jar " MethodInvocation weblogicJarFile getName MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation genericJarFile exists MethodInvocation genericJarFile isFile MethodInvocation weblogicJarFile exists MethodInvocation weblogicJarFile isFile BlockStatement StatementExpression Assignment MemberReference genericJar ClassCreator ReferenceType JarFile MemberReference genericJarFile = StatementExpression Assignment MemberReference wlJar ClassCreator ReferenceType JarFile MemberReference weblogicJarFile = LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator genericEntries ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator wlEntries ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator replaceEntries ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation genericJar entries MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je Cast ReferenceType JarEntry MethodInvocation e nextElement StatementExpression MethodInvocation genericEntries MethodInvocation je MethodInvocation Literal '\\' Literal '/' replace getName MemberReference je put ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation wlJar entries MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je Cast ReferenceType JarEntry MethodInvocation e nextElement StatementExpression MethodInvocation wlEntries MethodInvocation je getName MemberReference je put StatementExpression Assignment MemberReference genericLoader MethodInvocation MemberReference genericJarFile getClassLoaderFromJar = ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation genericEntries keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filepath Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation wlEntries MemberReference filepath containsKey BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator genericEntry Cast ReferenceType JarEntry MethodInvocation genericEntries MemberReference filepath get LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator wlEntry Cast ReferenceType JarEntry MethodInvocation wlEntries MemberReference filepath get IfStatement BinaryOperation || BinaryOperation != MethodInvocation genericEntry getCrc MethodInvocation wlEntry getCrc BinaryOperation != MethodInvocation genericEntry getSize MethodInvocation wlEntry getSize BlockStatement IfStatement MethodInvocation genericEntry MethodInvocation Literal ".class" endsWith getName BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation genericEntry MethodInvocation MemberReference File separatorChar Literal '.' replace getName StatementExpression Assignment MemberReference classname MethodInvocation classname Literal 0 MethodInvocation classname Literal ".class" lastIndexOf substring = LocalVariableDeclaration ReferenceType Class VariableDeclarator genclass MethodInvocation genericLoader MemberReference classname loadClass IfStatement MethodInvocation genclass isInterface BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Interface " MethodInvocation genclass getName Literal " has changed" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rebuild Literal true = BreakStatement BlockStatement StatementExpression MethodInvocation replaceEntries MemberReference filepath MemberReference genericEntry put BlockStatement IfStatement MethodInvocation ! genericEntry MethodInvocation Literal "META-INF/MANIFEST.MF" equals getName BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Non class file " MethodInvocation genericEntry getName Literal " has changed" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rebuild Literal true = BreakStatement BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "File " MemberReference filepath Literal " not present in weblogic jar" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rebuild Literal true = BreakStatement IfStatement MemberReference ! rebuild BlockStatement StatementExpression MethodInvocation Literal "No rebuild needed - updating jar" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference newWLJarFile ClassCreator ReferenceType File BinaryOperation + MethodInvocation weblogicJarFile getAbsolutePath Literal ".temp" = IfStatement MethodInvocation newWLJarFile exists BlockStatement StatementExpression MethodInvocation newWLJarFile delete StatementExpression Assignment MemberReference newJarStream ClassCreator ReferenceType JarOutputStream ClassCreator ReferenceType FileOutputStream MemberReference newWLJarFile = StatementExpression MethodInvocation newJarStream Literal 0 setLevel ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation wlEntries elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference DEFAULT_BUFFER_SIZE LocalVariableDeclaration BasicType int VariableDeclarator bytesRead LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je Cast ReferenceType JarEntry MethodInvocation e nextElement IfStatement BinaryOperation || BinaryOperation == MethodInvocation je getCompressedSize Literal - 1 BinaryOperation == MethodInvocation je getCompressedSize MethodInvocation je getSize BlockStatement StatementExpression MethodInvocation newJarStream Literal 0 setLevel BlockStatement StatementExpression MethodInvocation newJarStream MemberReference JAR_COMPRESS_LEVEL setLevel IfStatement MethodInvocation replaceEntries MethodInvocation je getName containsKey BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Updating Bean class from generic Jar " MethodInvocation je getName MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference je Cast ReferenceType JarEntry MethodInvocation replaceEntries MethodInvocation je getName get = StatementExpression Assignment MemberReference is MethodInvocation genericJar MemberReference je getInputStream = BlockStatement StatementExpression Assignment MemberReference is MethodInvocation wlJar MemberReference je getInputStream = StatementExpression MethodInvocation newJarStream ClassCreator ReferenceType JarEntry MethodInvocation je getName putNextEntry WhileStatement BinaryOperation != Assignment MemberReference bytesRead MethodInvocation is MemberReference buffer read = Literal - 1 BlockStatement StatementExpression MethodInvocation newJarStream MemberReference buffer Literal 0 MemberReference bytesRead write StatementExpression MethodInvocation is close BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Weblogic Jar rebuild needed due to changed " Literal "interface or MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression Assignment MemberReference rebuild Literal true = CatchClause CatchClauseParameter ClassNotFoundException cnfe LocalVariableDeclaration ReferenceType String VariableDeclarator cnfmsg BinaryOperation + BinaryOperation + Literal "ClassNotFoundException while processing ejb-jar file" Literal ". Details: " MethodInvocation cnfe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference cnfmsg MemberReference cnfe CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "IOException while processing ejb-jar file " Literal ". Details: " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe IfStatement BinaryOperation != MemberReference genericJar Literal null BlockStatement TryStatement StatementExpression MethodInvocation genericJar close CatchClause CatchClauseParameter IOException closeException IfStatement BinaryOperation != MemberReference wlJar Literal null BlockStatement TryStatement StatementExpression MethodInvocation wlJar close CatchClause CatchClauseParameter IOException closeException IfStatement BinaryOperation != MemberReference newJarStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation newJarStream close CatchClause CatchClauseParameter IOException closeException TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference newWLJarFile MemberReference weblogicJarFile rename CatchClause CatchClauseParameter IOException renameException StatementExpression MethodInvocation MethodInvocation renameException getMessage MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference rebuild Literal true = IfStatement BinaryOperation && BinaryOperation != MemberReference genericLoader Literal null BinaryOperation instanceof MemberReference genericLoader ReferenceType AntClassLoader BlockStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader Cast ReferenceType AntClassLoader MemberReference genericLoader StatementExpression MethodInvocation loader cleanup ReturnStatement MemberReference rebuild	1
MethodDeclaration Modifier private BasicType boolean checkFile IfStatement BinaryOperation == MemberReference filepath Literal null BlockStatement ReturnStatement MethodInvocation MemberReference file MemberReference filename checkFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paths MethodInvocation filepath list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paths length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Searching " MemberReference ArraySelector MemberReference i paths MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType File VariableDeclarator path ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i paths IfStatement BinaryOperation && MethodInvocation path exists MethodInvocation filename MemberReference ArraySelector MemberReference i paths equals BlockStatement IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found: " MemberReference path MemberReference Project MSG_VERBOSE log ReturnStatement Literal true IfStatement BinaryOperation && MethodInvocation type isDir MethodInvocation path isDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found directory: " MemberReference path MemberReference Project MSG_VERBOSE log ReturnStatement Literal true IfStatement BinaryOperation && MethodInvocation type isFile MethodInvocation path isFile BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found file: " MemberReference path MemberReference Project MSG_VERBOSE log ReturnStatement Literal true ReturnStatement Literal false LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation path getParentFile IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference parent Literal null MethodInvocation parent exists MethodInvocation filename MethodInvocation parent getAbsolutePath equals BlockStatement IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found: " MemberReference parent MemberReference Project MSG_VERBOSE log ReturnStatement Literal true IfStatement MethodInvocation type isDir BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found directory: " MemberReference parent MemberReference Project MSG_VERBOSE log ReturnStatement Literal true ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation path exists MethodInvocation path isDirectory BlockStatement IfStatement MethodInvocation ClassCreator ReferenceType File MemberReference path MemberReference filename BinaryOperation + BinaryOperation + MemberReference filename Literal " in " MemberReference path checkFile BlockStatement ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation && MemberReference BinaryOperation != MemberReference parent Literal null MethodInvocation parent exists BlockStatement IfStatement MethodInvocation ClassCreator ReferenceType File MemberReference parent MemberReference filename BinaryOperation + BinaryOperation + MemberReference filename Literal " in " MemberReference parent checkFile BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference parent MethodInvocation parent getParentFile = ReturnStatement Literal false	1
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File src LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MemberReference src setFile StatementExpression MethodInvocation MemberReference fs addFileset	0
MethodDeclaration Modifier public BasicType int getMinorVersion ReturnStatement Literal 0	0
MethodDeclaration Modifier protected tearDown Exception LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation project getBaseDir MemberReference LOCAL_PATH IfStatement MethodInvocation file exists BlockStatement StatementExpression MethodInvocation file delete	0
MethodDeclaration Modifier public FormalParameter ReferenceType String hdr StatementExpression Assignment MemberReference MemberReference hdr =	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == This MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference MethodInvocation createPath	0
MethodDeclaration Modifier private ReferenceType EjbInfo IOException SAXException LocalVariableDeclaration ReferenceType EjbInfo VariableDeclarator ejbs Literal null StatementExpression MethodInvocation parser MemberReference stdDescriptor MemberReference handler parse StatementExpression MethodInvocation parser MemberReference iasDescriptor MemberReference handler parse StatementExpression Assignment MemberReference ejbs MethodInvocation handler = ReturnStatement MemberReference ejbs	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "I'm a foo, too" MethodInvocation JUnitVersionHelper ClassCreator ReferenceType getTestCaseName assertEquals	0
MethodDeclaration Modifier private BasicType boolean isMorePowerfulThanExcludes FormalParameter ReferenceType String name FormalParameter ReferenceType String includepattern LocalVariableDeclaration ReferenceType String VariableDeclarator soughtexclude BinaryOperation + BinaryOperation + MemberReference name MemberReference File separator Literal "**" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement IfStatement MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference soughtexclude equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier protected FormalParameter ReferenceType NetCommand command StatementExpression MethodInvocation command MethodInvocation getRemoveIntChecksParameter addArgument StatementExpression MethodInvocation command MethodInvocation getImportsParameter addArgument StatementExpression MethodInvocation command MethodInvocation getOptionExplicitParameter addArgument StatementExpression MethodInvocation command MethodInvocation getOptionStrictParameter addArgument StatementExpression MethodInvocation command MethodInvocation getRootNamespaceParameter addArgument StatementExpression MethodInvocation command MethodInvocation getOptionCompareParameter addArgument	0
MethodDeclaration Modifier public testEncoding StatementExpression MethodInvocation Literal "encoding" Literal "<untar> overrides setEncoding." BinaryOperation + Literal "The untar task doesn't support the " Literal "encoding attribute" expectSpecificBuildException	0
MethodDeclaration Modifier public ReferenceType Object nextElement LocalVariableDeclaration ReferenceType URL VariableDeclarator ret This MemberReference StatementExpression MethodInvocation findNextResource ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier public test15 StatementExpression MethodInvocation Literal "test15" executeTarget	0
MethodDeclaration Modifier public addParam FormalParameter ReferenceType Parameter parameter StatementExpression MethodInvocation configParameter MemberReference parameter add	0
MethodDeclaration Modifier public ReferenceType String getFactory ReturnStatement MemberReference factory	0
MethodDeclaration Modifier public ReferenceType String getExplicitChoice ReturnStatement MemberReference	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation reader close	0
MethodDeclaration Modifier public ReferenceType String getReferenceDelimiter ReturnStatement Literal ","	0
MethodDeclaration Modifier public setExcludes FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference Literal ", " Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation tok nextToken setName	0
MethodDeclaration Modifier protected setExitValue FormalParameter BasicType int value StatementExpression Assignment MemberReference exitValue MemberReference value =	0
MethodDeclaration Modifier public BasicType int execute ReturnStatement Literal 2	0
MethodDeclaration Modifier final static protected BasicType boolean isEmpty FormalParameter ReferenceType Resource r ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference r length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference ArraySelector MemberReference i MemberReference length r Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public addTargetfileset FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType HideMissingBasedir MemberReference fs add createTargets	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression SuperMethodInvocation tearDown	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public testRedirector2 StatementExpression MethodInvocation Literal "redirector2" executeTarget	0
MethodDeclaration * add a string * @param tokenizer the string */ Modifier public FormalParameter ReferenceType StringTokenizer tokenizer StatementExpression MethodInvocation MemberReference tokenizer add	0
MethodDeclaration Modifier public setVOB FormalParameter ReferenceType String vob StatementExpression Assignment MemberReference mVOB MemberReference vob =	0
MethodDeclaration Modifier public setRecurse FormalParameter BasicType boolean recurse StatementExpression Assignment MemberReference mRecurse MemberReference recurse =	0
MethodDeclaration Modifier public LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator data Literal "abcabcabca" LocalVariableDeclaration ReferenceType String VariableDeclarator res MethodInvocation StringUtils MemberReference data Literal "a" Literal "" replace StatementExpression MethodInvocation Literal MemberReference res assertEquals	0
MethodDeclaration Modifier public setIgnoreErrors FormalParameter BasicType boolean b StatementExpression Assignment MemberReference ignoreErrors MemberReference b =	0
MethodDeclaration Modifier public testNoTimeOut Exception LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation BinaryOperation / MemberReference TIME_OUT Literal 2 getCommandline StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand StatementExpression MethodInvocation ej MemberReference project execute StatementExpression MethodInvocation Literal "process should not have been killed" MethodInvocation ! ej killedProcess assertTrue	1
MethodDeclaration Modifier public static ReferenceType AddAsisRemove newInstance FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType AddAsisRemove VariableDeclarator a ClassCreator ReferenceType AddAsisRemove StatementExpression MethodInvocation a MemberReference value setValue ReturnStatement MemberReference a	0
MethodDeclaration Modifier private static ReferenceType JavahAdapter resolveClassName FormalParameter ReferenceType String className BuildException ReturnStatement Cast ReferenceType JavahAdapter MethodInvocation ClasspathUtils MemberReference className ClassReference MethodInvocation getClassLoader ReferenceType JavahAdapterFactory ClassReference ReferenceType JavahAdapter newInstance	1
MethodDeclaration Modifier public static ReferenceType String toURI FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "file:" TryStatement StatementExpression Assignment MemberReference path MethodInvocation fu MethodInvocation getAbsolutePath MemberReference path normalize = StatementExpression MethodInvocation sb Literal "//" append IfStatement MethodInvocation ! path Literal "/" startsWith BlockStatement StatementExpression MethodInvocation sb Literal "/" append CatchClause CatchClauseParameter BuildException e StatementExpression Assignment MemberReference path MethodInvocation path Literal '\\' Literal '/' replace = LocalVariableDeclaration ReferenceType CharacterIterator VariableDeclarator iter ClassCreator ReferenceType StringCharacterIterator MemberReference path ForStatement ForControl VariableDeclaration BasicType char VariableDeclarator c MethodInvocation iter first BinaryOperation != MemberReference c MemberReference CharacterIterator DONE Assignment MemberReference c MethodInvocation iter next = BlockStatement IfStatement MemberReference ArraySelector MemberReference c isSpecial BlockStatement StatementExpression MethodInvocation sb Literal '%' append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference c escapedChar1 append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference c escapedChar2 append BlockStatement StatementExpression MethodInvocation sb MemberReference c append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public storeElement FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child FormalParameter ReferenceType String elementName BuildException IfStatement BinaryOperation == MemberReference elementName Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType NestedCreator VariableDeclarator ns Cast ReferenceType NestedCreator MethodInvocation nestedCreators MethodInvocation elementName MemberReference Locale US toLowerCase get IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation ns MemberReference parent MemberReference child store CatchClause CatchClauseParameter IllegalAccessException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie CatchClause CatchClauseParameter InstantiationException ine ThrowStatement ClassCreator ReferenceType BuildException MemberReference ine CatchClause CatchClauseParameter InvocationTargetException ite LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ite getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public setCaseSensitive FormalParameter BasicType boolean isCaseSensitive StatementExpression MethodInvocation fileset MemberReference isCaseSensitive setCaseSensitive	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MethodInvocation text Literal 0 substring	0
MethodDeclaration Modifier private ReferenceType Class findBaseClass FormalParameter ReferenceType String name ClassNotFoundException IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation MemberReference name findSystemClass BlockStatement ReturnStatement MethodInvocation parent MemberReference name loadClass	0
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class FormalParameter ReferenceType Object arg ReturnStatement MethodInvocation ReflectUtil MemberReference obj MemberReference methodName MemberReference MemberReference arg invoke	0
MethodDeclaration Modifier public BasicType boolean selectionTest FormalParameter ReferenceType File srcfile FormalParameter ReferenceType File destfile LocalVariableDeclaration BasicType boolean VariableDeclarator selected MethodInvocation SelectorUtils MemberReference srcfile MemberReference destfile MemberReference granularity isOutOfDate ReturnStatement MemberReference selected	1
MethodDeclaration Modifier public ReferenceType String getMemoryMaximumSize ReturnStatement MemberReference memoryMaximumSize	0
MethodDeclaration Modifier public setHaltonfailure FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference haltOnFail MemberReference value =	0
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" Literal "empty token not allowed" expectBuildException	0
MethodDeclaration Modifier protected assertGoodFile Exception LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference GOOD_OUTFILE createRelativeFile StatementExpression MethodInvocation BinaryOperation + Literal "Did not create " MethodInvocation f getAbsolutePath MethodInvocation f exists assertTrue LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation MemberReference GOOD_OUTFILE StatementExpression MethodInvocation props MemberReference System out list StatementExpression MethodInvocation Literal "test property not found " MemberReference MethodInvocation props Literal "test.property" getProperty assertEquals	0
MethodDeclaration Modifier protected tearDown StatementExpression MethodInvocation Literal "clean" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getCommand ReturnStatement This MemberReference command	0
MethodDeclaration * @see Copy#scan(Resource[], */ Modifier protected ReferenceType Map scan FormalParameter ReferenceType Resource resources FormalParameter ReferenceType File toDir StatementExpression MethodInvocation Literal "No BinaryOperation == MemberReference mapperElement Literal null assertTrue LocalVariableDeclaration ReferenceType Map VariableDeclarator m SuperMethodInvocation MemberReference resources MemberReference toDir scan LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation m MethodInvocation iterator keySet WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation nonOrphans Cast ReferenceType Resource MethodInvocation iter next add ReturnStatement MemberReference m	1
MethodDeclaration Modifier public ReferenceType Hashtable getUserProperties LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator ph MethodInvocation PropertyHelper This getPropertyHelper ReturnStatement MethodInvocation ph getUserProperties	1
MethodDeclaration Modifier public setProcessOutputStream FormalParameter ReferenceType InputStream is IOException LocalVariableDeclaration ReferenceType String VariableDeclarator buffer Literal "" TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference is StatementExpression Assignment MemberReference buffer MethodInvocation reader readLine = IfStatement BinaryOperation != MemberReference buffer Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "buffer:" MemberReference buffer MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType String VariableDeclarator taskstring MethodInvocation buffer MethodInvocation trim MethodInvocation buffer Literal ' ' indexOf substring StatementExpression Assignment MemberReference taskstring MethodInvocation taskstring MethodInvocation trim Literal 0 MethodInvocation taskstring Literal ' ' lastIndexOf substring = StatementExpression MethodInvocation MemberReference taskstring setTask StatementExpression MethodInvocation BinaryOperation + Literal "task is " MethodInvocation getTask MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter NullPointerException npe StatementExpression MethodInvocation Literal "error procession stream null pointer exception" MemberReference Project MSG_ERR log StatementExpression MethodInvocation npe printStackTrace ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation npe MethodInvocation getName getClass CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "error procession stream " MethodInvocation e getMessage MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation e getMessage	1
MethodDeclaration Modifier public scan IllegalStateException SynchronizedStatement MemberReference scanLock IfStatement MemberReference scanning BlockStatement WhileStatement MemberReference scanning BlockStatement TryStatement StatementExpression MethodInvocation scanLock wait CatchClause CatchClauseParameter InterruptedException e ContinueStatement IfStatement BinaryOperation != MemberReference illegal Literal null BlockStatement ThrowStatement MemberReference illegal ReturnStatement StatementExpression Assignment MemberReference scanning Literal true = TryStatement SynchronizedStatement This StatementExpression Assignment MemberReference illegal Literal null = StatementExpression MethodInvocation clearResults LocalVariableDeclaration BasicType boolean VariableDeclarator nullIncludes BinaryOperation == MemberReference includes Literal null StatementExpression Assignment MemberReference includes TernaryExpression MemberReference nullIncludes ArrayCreator ReferenceType String ArrayInitializer Literal "**" MemberReference includes = LocalVariableDeclaration BasicType boolean VariableDeclarator nullExcludes BinaryOperation == MemberReference Literal null StatementExpression Assignment MemberReference TernaryExpression MemberReference nullExcludes ArrayCreator ReferenceType String Literal 0 MemberReference = IfStatement BinaryOperation == MemberReference basedir Literal null BlockStatement IfStatement MemberReference nullIncludes BlockStatement ReturnStatement BlockStatement IfStatement MethodInvocation ! basedir exists BlockStatement StatementExpression Assignment MemberReference illegal ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "basedir " MemberReference basedir Literal " does not exist" = IfStatement MethodInvocation ! basedir isDirectory BlockStatement StatementExpression Assignment MemberReference illegal ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "basedir " MemberReference basedir Literal " is not a directory" = IfStatement BinaryOperation != MemberReference illegal Literal null BlockStatement ThrowStatement MemberReference illegal IfStatement MethodInvocation Literal "" isIncluded BlockStatement IfStatement MethodInvocation ! Literal "" isExcluded BlockStatement IfStatement MethodInvocation Literal "" MemberReference basedir isSelected BlockStatement StatementExpression MethodInvocation dirsIncluded Literal "" addElement BlockStatement StatementExpression MethodInvocation Literal "" addElement BlockStatement StatementExpression MethodInvocation dirsExcluded Literal "" addElement BlockStatement StatementExpression MethodInvocation Literal "" addElement StatementExpression MethodInvocation checkIncludePatterns StatementExpression MethodInvocation StatementExpression Assignment MemberReference includes TernaryExpression MemberReference nullIncludes Literal null MemberReference includes = StatementExpression Assignment MemberReference TernaryExpression MemberReference nullExcludes Literal null MemberReference = SynchronizedStatement MemberReference scanLock StatementExpression Assignment MemberReference scanning Literal false = StatementExpression MethodInvocation scanLock notifyAll	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference level	0
MethodDeclaration Modifier public ReferenceType ZipShort getCentralDirectoryLength ReturnStatement MethodInvocation getLocalFileDataLength	0
MethodDeclaration Modifier public testTestFailedFailure Exception LocalVariableDeclaration ReferenceType Exception VariableDeclarator e ClassCreator ReferenceType Exception Literal "error" StatementExpression MethodInvocation e fillInStackTrace LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent ClassCreator ReferenceType Integer Literal 99 MemberReference TestRunEvent Literal "xxxx" MemberReference e StatementExpression MethodInvocation dispatcher MemberReference evt fireTestFailure StatementExpression MethodInvocation MemberReference evt MethodInvocation recorder.testFailed Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public synchronized setFollowSymlinks FormalParameter BasicType boolean IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference directoryScanner Literal null =	0
MethodDeclaration Modifier public BasicType boolean isFailure ReturnStatement MethodInvocation MethodInvocation isFailure	0
MethodDeclaration Modifier public log FormalParameter ReferenceType Throwable t IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation t printStackTrace	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation reg Literal "end of text$" setPattern StatementExpression MethodInvocation Literal line MethodInvocation reg Literal "end of text\n" matches assertTrue	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer Literal "soscmd" Literal "-command" Literal "CheckOutProject" Literal "-recursive" Literal "-server" MemberReference SOS_SERVER_PATH Literal "-name" MemberReference SOS_USERNAME Literal "-password" Literal "" Literal "-database" MemberReference VSS_SERVER_PATH Literal "-project" MemberReference DS_VSS_PROJECT_PATH Literal "" Literal "" Literal "-soshome" MemberReference SOS_HOME Literal "-workdir" MethodInvocation project MethodInvocation getAbsolutePath getBaseDir LocalVariableDeclaration ReferenceType SOSCheckout VariableDeclarator sosCheckout ClassCreator ReferenceType SOSCheckout StatementExpression MethodInvocation sosCheckout MemberReference project setProject StatementExpression MethodInvocation sosCheckout MemberReference VSS_SERVER_PATH setVssServerPath StatementExpression MethodInvocation sosCheckout MemberReference SOS_SERVER_PATH setSosServerPath StatementExpression MethodInvocation sosCheckout MemberReference VSS_PROJECT_PATH setProjectPath StatementExpression MethodInvocation sosCheckout MemberReference SOS_USERNAME setUsername StatementExpression MethodInvocation sosCheckout MemberReference SOS_HOME setSosHome StatementExpression MethodInvocation sosCheckout Literal true setNoCache StatementExpression MethodInvocation sosCheckout Literal false setNoCompress StatementExpression MethodInvocation sosCheckout Literal false setVerbose StatementExpression MethodInvocation sosCheckout Literal true setRecursive StatementExpression Assignment MemberReference commandline MethodInvocation sosCheckout buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier public FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation runStarted MemberReference evt addElement	0
MethodDeclaration Modifier public execute TryStatement StatementExpression Assignment MemberReference helper engine ClassCreator ReferenceType VelocityEngine = StatementExpression MethodInvocation init StatementExpression Assignment MemberReference helper context ClassCreator ReferenceType = StatementExpression MethodInvocation helper.context Literal "ant" MemberReference project put LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator MethodInvocation PropertyHelper MemberReference project getPropertyHelper StatementExpression MethodInvocation helper MethodInvocation getNext setNext StatementExpression MethodInvocation helper MemberReference project setProject StatementExpression MethodInvocation MemberReference helper setNext CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace	0
MethodDeclaration Modifier public FormalParameter BasicType boolean keepgenerated StatementExpression Assignment This MemberReference keepgenerated MemberReference keepgenerated =	0
MethodDeclaration Modifier public testDouble StatementExpression MethodInvocation Literal "double" Literal "/abc/a:/abc/b" expectLog	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation size getRef StatementExpression MethodInvocation validate ReturnStatement MethodInvocation coll size	0
MethodDeclaration Modifier public setHandleDirSep FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public writeRecord FormalParameter BasicType byte buf FormalParameter BasicType int offset IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal "WriteRecord: recIdx = " This MemberReference currRecIdx Literal " blkIdx = " This MemberReference currBlkIdx println IfStatement BinaryOperation == This MemberReference outStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "writing to an input buffer" IfStatement BinaryOperation > BinaryOperation + MemberReference offset This MemberReference recordSize MemberReference buf length BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "record has length '" MemberReference buf length Literal "' with offset '" MemberReference offset Literal "' which is less than the record size of '" This MemberReference recordSize Literal "'" IfStatement BinaryOperation >= This MemberReference currRecIdx This MemberReference recsPerBlock BlockStatement StatementExpression This MethodInvocation writeBlock StatementExpression MethodInvocation System MemberReference buf MemberReference offset This MemberReference blockBuffer BinaryOperation * This MemberReference currRecIdx This MemberReference recordSize This MemberReference recordSize arraycopy StatementExpression This ++ MemberReference currRecIdx	1
MethodDeclaration Modifier private synchronized StatementExpression MethodInvocation fileListMap clear StatementExpression MethodInvocation includeNonPatterns clear StatementExpression MethodInvocation excludeNonPatterns clear StatementExpression Assignment MemberReference includePatterns Literal null = StatementExpression Assignment MemberReference excludePatterns Literal null = StatementExpression Assignment MemberReference areNonPatternSetsReady Literal false =	0
MethodDeclaration Modifier public addAssertions FormalParameter ReferenceType asserts IfStatement BinaryOperation != MethodInvocation MethodInvocation getAssertions getCommandline Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one assertion declaration is allowed" StatementExpression MethodInvocation MethodInvocation MemberReference asserts setAssertions getCommandline	0
MethodDeclaration Modifier private synchronized static add FormalParameter ReferenceType FailFast f LocalVariableDeclaration ReferenceType Set VariableDeclarator s Cast ReferenceType Set MethodInvocation MAP MemberReference f parent get IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s ClassCreator ReferenceType HashSet = StatementExpression MethodInvocation MAP MemberReference f parent MemberReference s put StatementExpression MethodInvocation s MemberReference f add	0
MethodDeclaration Modifier public BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation != MemberReference callee Literal null BlockStatement ReturnStatement MethodInvocation callee MemberReference buffer MemberReference offset MemberReference length handleInput ReturnStatement SuperMethodInvocation MemberReference buffer MemberReference offset MemberReference length handleInput	1
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType String name IfStatement BinaryOperation == MethodInvocation name length Literal 0 BlockStatement ReturnStatement Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation name length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! MethodInvocation name MemberReference i charAt isValidNameCharacter BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public testGetAttributeMethod StatementExpression MethodInvocation Literal "seven" Literal "setSeven" ClassReference ReferenceType String Literal "2" Literal "3" assertAttrMethod StatementExpression MethodInvocation Literal "eight" Literal "setEight" MemberReference Integer TYPE ClassCreator ReferenceType Integer Literal 2 ClassCreator ReferenceType Integer Literal 3 assertAttrMethod StatementExpression MethodInvocation Literal "nine" Literal "setNine" ClassReference ReferenceType Integer ClassCreator ReferenceType Integer Literal 2 ClassCreator ReferenceType Integer Literal 3 assertAttrMethod StatementExpression MethodInvocation Literal "ten" Literal "setTen" ClassReference ReferenceType File ClassCreator ReferenceType File BinaryOperation + MemberReference projectBasedir Literal 2 ClassCreator ReferenceType File Literal "toto" assertAttrMethod StatementExpression MethodInvocation Literal "eleven" Literal "setEleven" MemberReference Boolean TYPE MemberReference Boolean FALSE MemberReference Boolean TRUE assertAttrMethod StatementExpression MethodInvocation Literal "twelve" Literal "setTwelve" ClassReference ReferenceType Boolean MemberReference Boolean FALSE MemberReference Boolean TRUE assertAttrMethod StatementExpression MethodInvocation Literal "thirteen" Literal "setThirteen" ClassReference ReferenceType Class ClassReference ReferenceType Project ClassReference ReferenceType Map assertAttrMethod StatementExpression MethodInvocation Literal "fourteen" Literal "setFourteen" ClassReference ReferenceType StringBuffer ClassCreator ReferenceType StringBuffer Literal "2" ClassCreator ReferenceType StringBuffer Literal "3" assertAttrMethod StatementExpression MethodInvocation Literal "fifteen" Literal "setFifteen" MemberReference Character TYPE ClassCreator ReferenceType Character Literal 'a' ClassCreator ReferenceType Character Literal 'b' assertAttrMethod StatementExpression MethodInvocation Literal "sixteen" Literal "setSixteen" ClassReference ReferenceType Character ClassCreator ReferenceType Character Literal 'a' ClassCreator ReferenceType Character Literal 'b' assertAttrMethod StatementExpression MethodInvocation Literal "seventeen" Literal "setSeventeen" MemberReference Byte TYPE ClassCreator ReferenceType Byte Cast BasicType byte Literal 17 ClassCreator ReferenceType Byte Cast BasicType byte Literal 10 assertAttrMethod StatementExpression MethodInvocation Literal "eightteen" Literal "setEightteen" MemberReference Short TYPE ClassCreator ReferenceType Short Cast BasicType short Literal 18 ClassCreator ReferenceType Short Cast BasicType short Literal 10 assertAttrMethod StatementExpression MethodInvocation Literal "nineteen" Literal "setNineteen" MemberReference Double TYPE ClassCreator ReferenceType Double Literal 19 ClassCreator ReferenceType Double Cast BasicType short Literal 10 assertAttrMethod TryStatement StatementExpression MethodInvocation Literal "onehundred" Literal null Literal null Literal null Literal null assertAttrMethod StatementExpression MethodInvocation Literal "Should have raised a BuildException!" fail CatchClause CatchClauseParameter BuildException e	1
MethodDeclaration Modifier private ReferenceType NestedCreator createAddTypeCreator FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType String elementName BuildException IfStatement BinaryOperation == MethodInvocation addTypeMethods size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MemberReference project getComponentHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator addedObject Literal null LocalVariableDeclaration ReferenceType Method VariableDeclarator addMethod Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation helper MemberReference elementName getComponentClass IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference addMethod MethodInvocation MemberReference clazz MemberReference addTypeMethods findMatchingMethod = IfStatement BinaryOperation == MemberReference addMethod Literal null BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference addedObject MethodInvocation helper MemberReference elementName createComponent = IfStatement BinaryOperation == MemberReference addedObject Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator rObject MemberReference addedObject IfStatement BinaryOperation instanceof MemberReference addedObject ReferenceType PreSetDef ReferenceType PreSetDefinition BlockStatement StatementExpression Assignment MemberReference rObject Cast ReferenceType PreSetDef ReferenceType PreSetDefinition MemberReference addedObject = LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator nestedObject MemberReference addedObject LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator realObject MemberReference rObject ReturnStatement ClassCreator ReferenceType NestedCreator MemberReference addMethod MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore InvocationTargetException IllegalAccessException IfStatement MethodInvocation ! MethodInvocation getName MethodInvocation Literal "Configured" endsWith getMethod BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference realObject invoke getMethod ReturnStatement MemberReference nestedObject MethodDeclaration ReferenceType Object ReturnStatement MemberReference realObject MethodDeclaration store FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child InvocationTargetException IllegalAccessException InstantiationException IfStatement MethodInvocation MethodInvocation getName MethodInvocation Literal "Configured" endsWith getMethod BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference realObject invoke getMethod	1
MethodDeclaration Modifier public testSrcDirTest StatementExpression MethodInvocation Literal Literal "Src cannot be a directory." expectBuildException	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference binary	0
MethodDeclaration Modifier public write FormalParameter BasicType byte wBuf FormalParameter BasicType int wOffset FormalParameter BasicType int numToWrite IOException IfStatement BinaryOperation > BinaryOperation + This MemberReference currBytes MemberReference numToWrite This MemberReference currSize BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "request to write '" MemberReference numToWrite Literal "' bytes exceeds size in header of '" This MemberReference currSize Literal "' bytes for entry '" MemberReference currName Literal "'" IfStatement BinaryOperation > This MemberReference assemLen Literal 0 BlockStatement IfStatement BinaryOperation >= BinaryOperation + This MemberReference assemLen MemberReference numToWrite This MemberReference recordBuf MemberReference length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator aLen BinaryOperation - This MemberReference recordBuf MemberReference length This MemberReference assemLen StatementExpression MethodInvocation System This MemberReference assemBuf Literal 0 This MemberReference recordBuf Literal 0 This MemberReference assemLen arraycopy StatementExpression MethodInvocation System MemberReference wBuf MemberReference wOffset This MemberReference recordBuf This MemberReference assemLen MemberReference aLen arraycopy StatementExpression This MemberReference buffer MethodInvocation This MemberReference recordBuf writeRecord StatementExpression Assignment This MemberReference currBytes This MemberReference recordBuf MemberReference length += StatementExpression Assignment MemberReference wOffset MemberReference aLen += StatementExpression Assignment MemberReference numToWrite MemberReference aLen -= StatementExpression Assignment This MemberReference assemLen Literal 0 = BlockStatement StatementExpression MethodInvocation System MemberReference wBuf MemberReference wOffset This MemberReference assemBuf This MemberReference assemLen MemberReference numToWrite arraycopy StatementExpression Assignment MemberReference wOffset MemberReference numToWrite += StatementExpression Assignment This MemberReference assemLen MemberReference numToWrite += StatementExpression Assignment MemberReference numToWrite MemberReference numToWrite -= WhileStatement BinaryOperation > MemberReference numToWrite Literal 0 BlockStatement IfStatement BinaryOperation < MemberReference numToWrite This MemberReference recordBuf MemberReference length BlockStatement StatementExpression MethodInvocation System MemberReference wBuf MemberReference wOffset This MemberReference assemBuf This MemberReference assemLen MemberReference numToWrite arraycopy StatementExpression Assignment This MemberReference assemLen MemberReference numToWrite += BreakStatement StatementExpression This MemberReference buffer MethodInvocation MemberReference wBuf MemberReference wOffset writeRecord LocalVariableDeclaration BasicType int VariableDeclarator num This MemberReference recordBuf MemberReference length StatementExpression Assignment This MemberReference currBytes MemberReference num += StatementExpression Assignment MemberReference numToWrite MemberReference num -= StatementExpression Assignment MemberReference wOffset MemberReference num +=	1
MethodDeclaration Modifier public test7 StatementExpression MethodInvocation Literal "test7" Literal "Unable to determine generated class" expectBuildException	0
MethodDeclaration Modifier public deleteMirror StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier final protected runExecute FormalParameter ReferenceType Execute exe IOException LocalVariableDeclaration BasicType int VariableDeclarator returnCode Literal - 1 IfStatement MemberReference ! spawn BlockStatement StatementExpression Assignment MemberReference returnCode MethodInvocation exe execute = IfStatement MethodInvocation exe killedProcess BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "Timeout: killed the sub-process" IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_WARN log StatementExpression MethodInvocation MemberReference returnCode StatementExpression MethodInvocation redirector complete IfStatement MethodInvocation Execute MemberReference returnCode isFailure BlockStatement IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " returned: " MemberReference returnCode MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Result: " MemberReference returnCode MemberReference Project MSG_ERR log BlockStatement StatementExpression MethodInvocation exe spawn	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private processFile FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File eachFile IOException LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation eachFile getName IfStatement MethodInvocation ! MemberReference filename shouldProcess BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Excluding " MethodInvocation MemberReference eachFile getFullRepositoryPath log ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator checkin Literal true LocalVariableDeclaration BasicType int VariableDeclarator fileStatus MethodInvocation eachFile getStatus IfStatement BinaryOperation || BinaryOperation == MemberReference fileStatus MemberReference Status MERGE BinaryOperation == MemberReference fileStatus MemberReference Status UNKNOWN BlockStatement StatementExpression MethodInvocation eachFile Literal true Literal true updateStatus StatementExpression Assignment MemberReference fileStatus MethodInvocation eachFile getStatus = IfStatement BinaryOperation == MemberReference fileStatus MemberReference Status MODIFIED BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Checking in: " MethodInvocation MemberReference eachFile describeCheckin log IfStatement BinaryOperation == MemberReference fileStatus MemberReference Status BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Local file missing: " MethodInvocation MemberReference eachFile describeCheckin log StatementExpression Assignment MemberReference checkin Literal false = BlockStatement IfStatement MethodInvocation isForced BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Forced checkin of " MethodInvocation MemberReference eachFile describeCheckin Literal " over status " MethodInvocation Status MemberReference fileStatus name log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Skipping: " MethodInvocation MemberReference eachFile getFullRepositoryPath Literal " - status: " MethodInvocation Status MemberReference fileStatus name log StatementExpression Assignment MemberReference checkin Literal false = IfStatement MemberReference checkin BlockStatement StatementExpression MethodInvocation eachFile This MemberReference This MemberReference lockStatus This MethodInvocation isForced Literal true Literal true checkin	1
MethodDeclaration Modifier public BasicType boolean getObsolete ReturnStatement MemberReference mObsolete	0
MethodDeclaration Modifier protected ReferenceType String formatTest FormalParameter ReferenceType Test test IfStatement BinaryOperation == MemberReference test Literal null BlockStatement ReturnStatement Literal "Null Test: " BlockStatement ReturnStatement BinaryOperation + BinaryOperation + Literal " MethodInvocation test toString Literal ":"	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier static protected ReferenceType String getFilters LocalVariableDeclaration ReferenceType String VariableDeclarator filters MethodInvocation System Literal "ant.rjunit.stacktrace.filters" getProperty IfStatement BinaryOperation == MemberReference filters Literal null BlockStatement ReturnStatement MemberReference DEFAULT_TRACE_FILTERS LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference filters Literal "," LocalVariableDeclaration ReferenceType String VariableDeclarator results ArrayCreator ReferenceType String MethodInvocation st countTokens LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i results MethodInvocation st nextToken = ReturnStatement MemberReference results	1
MethodDeclaration Modifier public finish IOException StatementExpression This MethodInvocation StatementExpression This MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "Depend did not leave correct number of files" Literal 0 MethodInvocation MethodInvocation size getResultFiles assertEquals	0
MethodDeclaration Modifier public setFailOnError FormalParameter BasicType boolean failOnError StatementExpression Assignment This MemberReference failOnError MemberReference failOnError =	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation getIndex	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal configureProject	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation < MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation Literal "The value attribute is and must be positive" setError IfStatement BinaryOperation < MemberReference multiplier Literal 1 BlockStatement StatementExpression MethodInvocation Literal "Invalid Units supplied, must be K,Ki,M,Mi,G,Gi,T,or Ti" setError IfStatement BinaryOperation < MemberReference sizelimit Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Internal error: is not setting sizelimit correctly" setError	1
MethodDeclaration Modifier public synchronized ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef IfStatement BinaryOperation == MethodInvocation MethodInvocation size cacheCollection Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation coll iterator MethodInvocation i hasNext BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb MemberReference File pathSeparatorChar append StatementExpression MethodInvocation sb MethodInvocation i next append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier protected BasicType boolean assumeJava13 ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "javac1.3" BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "classic" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_3 isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "modern" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_3 isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "extJavac" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_3 isJavaVersion	1
MethodDeclaration Modifier public ReferenceType getClasspath ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public synchronized setWhen FormalParameter ReferenceType TimeComparison c StatementExpression Assignment MemberReference when MemberReference c =	0
MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType Section VariableDeclarator cloned ClassCreator ReferenceType Section StatementExpression MethodInvocation cloned MemberReference name setName LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute MethodInvocation MemberReference key getAttribute StatementExpression MethodInvocation cloned ClassCreator ReferenceType Attribute MethodInvocation attribute getName MethodInvocation attribute getValue storeAttribute ReturnStatement MemberReference cloned	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project MethodInvocation System Literal "root" getProperty setBasedir StatementExpression MethodInvocation project Literal "build.sysclasspath" Literal "ignore" setProperty StatementExpression Assignment MemberReference cloneVm MethodInvocation System Literal "ant.build.clonevm" getProperty = IfStatement BinaryOperation != MemberReference cloneVm Literal null BlockStatement StatementExpression MethodInvocation System Literal "ant.build.clonevm" Literal "false" setProperty	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType String namespace StatementExpression Assignment This MemberReference namespace MemberReference namespace =	0
MethodDeclaration Modifier public addParam FormalParameter ReferenceType Parameter p StatementExpression MethodInvocation paramVec MemberReference p addElement	0
MethodDeclaration Modifier final static protected BasicType boolean isFileFileSet FormalParameter ReferenceType ResourceCollection rc ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference rc ReferenceType FileSet MethodInvocation rc isFilesystemOnly	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public warning FormalParameter ReferenceType TransformerException e StatementExpression MethodInvocation MemberReference e Literal "Warning" logError	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args IOException LocalVariableDeclaration BasicType boolean VariableDeclarator haltError Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator haltFail Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator stackfilter Literal true LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration BasicType boolean VariableDeclarator showOut Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator outputToFormat Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator logTestListenerEvents Literal false IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement StatementExpression MethodInvocation System.err Literal "required argument TestClassName missing" println StatementExpression MethodInvocation System MemberReference ERRORS exit IfStatement MemberReference ArraySelector Literal 0 MethodInvocation MemberReference Constants TESTSFILE startsWith args BlockStatement StatementExpression Assignment MemberReference multipleTests Literal true = StatementExpression Assignment MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 0 MethodInvocation MethodInvocation Constants.TESTSFILE length substring args = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants HALT_ON_ERROR startsWith args BlockStatement StatementExpression Assignment MemberReference haltError MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.HALT_ON_ERROR length substring args toBoolean = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants HALT_ON_FAILURE startsWith args BlockStatement StatementExpression Assignment MemberReference haltFail MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.HALT_ON_FAILURE length substring args toBoolean = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants FILTERTRACE startsWith args BlockStatement StatementExpression Assignment MemberReference stackfilter MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.FILTERTRACE length substring args toBoolean = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants CRASHFILE startsWith args BlockStatement StatementExpression Assignment MemberReference crashFile MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.CRASHFILE length substring args = StatementExpression MethodInvocation MemberReference Constants BEFORE_FIRST_TEST registerTestCase IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants FORMATTER startsWith args BlockStatement TryStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.FORMATTER length substring args createAndStoreFormatter CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation System.err MethodInvocation be getMessage println StatementExpression MethodInvocation System MemberReference ERRORS exit IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants PROPSFILE startsWith args BlockStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in ClassCreator ReferenceType FileInputStream MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.PROPSFILE length substring args StatementExpression MethodInvocation props MemberReference in load StatementExpression MethodInvocation in close IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants SHOWOUTPUT startsWith args BlockStatement StatementExpression Assignment MemberReference showOut MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.SHOWOUTPUT length substring args toBoolean = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants LOGTESTLISTENEREVENTS startsWith args BlockStatement StatementExpression Assignment MemberReference logTestListenerEvents MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.LOGTESTLISTENEREVENTS length substring args toBoolean = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference Constants OUTPUT_TO_FORMATTERS startsWith args BlockStatement StatementExpression Assignment MemberReference outputToFormat MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Constants.OUTPUT_TO_FORMATTERS length substring args toBoolean = LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator p MethodInvocation System getProperties ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation p keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator key MethodInvocation e nextElement StatementExpression MethodInvocation props MemberReference key MethodInvocation p MemberReference key get put LocalVariableDeclaration BasicType int VariableDeclarator returnCode MemberReference SUCCESS IfStatement MemberReference multipleTests BlockStatement TryStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType java ReferenceType io ReferenceType BufferedReader ClassCreator ReferenceType java ReferenceType io ReferenceType FileReader MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType String VariableDeclarator testCaseName LocalVariableDeclaration BasicType int VariableDeclarator code Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator errorOccurred Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator failureOccurred Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation reader readLine = Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference line Literal "," StatementExpression Assignment MemberReference testCaseName MethodInvocation st nextToken = LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator t ClassCreator ReferenceType JUnitTest MemberReference testCaseName StatementExpression MethodInvocation t ClassCreator ReferenceType File MethodInvocation st nextToken setTodir StatementExpression MethodInvocation t MethodInvocation st nextToken setOutfile StatementExpression Assignment MemberReference code MethodInvocation MemberReference t MemberReference haltError MemberReference stackfilter MemberReference haltFail MemberReference showOut MemberReference outputToFormat MemberReference logTestListenerEvents MemberReference props launch = StatementExpression Assignment MemberReference errorOccurred BinaryOperation == MemberReference code MemberReference ERRORS = StatementExpression Assignment MemberReference failureOccurred BinaryOperation != MemberReference code MemberReference SUCCESS = IfStatement BinaryOperation || MemberReference errorOccurred MemberReference failureOccurred BlockStatement IfStatement BinaryOperation || BinaryOperation && MemberReference errorOccurred MemberReference haltError BinaryOperation && MemberReference failureOccurred MemberReference haltFail BlockStatement StatementExpression MethodInvocation registerNonCrash StatementExpression MethodInvocation System MemberReference code exit BlockStatement IfStatement BinaryOperation > MemberReference code MemberReference returnCode BlockStatement StatementExpression Assignment MemberReference returnCode MemberReference code = StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "TEST " MethodInvocation t getName Literal " FAILED" println CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace BlockStatement StatementExpression Assignment MemberReference returnCode MethodInvocation ClassCreator ReferenceType JUnitTest MemberReference ArraySelector Literal 0 args MemberReference haltError MemberReference stackfilter MemberReference haltFail MemberReference showOut MemberReference outputToFormat MemberReference logTestListenerEvents MemberReference props launch = StatementExpression MethodInvocation registerNonCrash StatementExpression MethodInvocation System MemberReference returnCode exit	1
MethodDeclaration Modifier public BasicType long getExternalAttributes ReturnStatement MemberReference externalAttributes	0
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task t StatementExpression MethodInvocation children MemberReference t add	0
MethodDeclaration Modifier public FormalParameter BasicType boolean mapped StatementExpression Assignment This MemberReference mapped MemberReference mapped =	0
MethodDeclaration Modifier public final setViewPath FormalParameter ReferenceType String viewPath StatementExpression Assignment MemberReference mviewPath MemberReference viewPath =	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file IfStatement MemberReference BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public testRedirect1 StatementExpression MethodInvocation Literal "redirect1" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "singlemove" executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project init StatementExpression Assignment MemberReference ClassCreator ReferenceType Rmic = StatementExpression MethodInvocation MemberReference project setProject	0
MethodDeclaration Modifier public testReadZero Exception LocalVariableDeclaration ReferenceType ReaderInputStream VariableDeclarator r ClassCreator ReferenceType ReaderInputStream ClassCreator ReferenceType StringReader Literal LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte Literal 30 StatementExpression MethodInvocation r MemberReference bytes Literal 0 Literal 0 read LocalVariableDeclaration BasicType int VariableDeclarator readin MethodInvocation r MemberReference bytes Literal 0 Literal 10 read StatementExpression MethodInvocation Literal MethodInvocation getBytes MemberReference length MemberReference readin assertEquals	1
MethodDeclaration Modifier public ReferenceType String getClasspath LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType boolean VariableDeclarator firstPass Literal true LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator componentEnum MethodInvocation pathComponents elements WhileStatement MethodInvocation componentEnum hasMoreElements BlockStatement IfStatement MemberReference ! firstPass BlockStatement StatementExpression MethodInvocation sb MethodInvocation System Literal "path.separator" getProperty append BlockStatement StatementExpression Assignment MemberReference firstPass Literal false = StatementExpression MethodInvocation sb Cast ReferenceType File MethodInvocation componentEnum nextElement append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType String visitorException StatementExpression MethodInvocation optionalAttrs MemberReference MemberReference visitorException put	0
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator categoryString MemberReference LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MemberReference categoryString MethodInvocation event MethodInvocation getName getProject getLog IfStatement BinaryOperation == MethodInvocation event getException Literal null BlockStatement StatementExpression MethodInvocation MemberReference log Literal "Build finished." MemberReference Project MSG_INFO Literal null BlockStatement StatementExpression MethodInvocation MemberReference log Literal "Build finished with error." MemberReference Project MSG_ERR MethodInvocation event getException	0
MethodDeclaration Modifier public synchronized setExcludesfile FormalParameter ReferenceType File excl BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation defaultPatterns MemberReference excl setExcludesfile StatementExpression Assignment MemberReference directoryScanner Literal null =	1
MethodDeclaration Modifier public processDescriptor FormalParameter ReferenceType String descriptorFileName FormalParameter ReferenceType SAXParser saxParser StatementExpression MethodInvocation MemberReference descriptorFileName MemberReference saxParser checkConfiguration TryStatement StatementExpression Assignment MemberReference handler MethodInvocation MemberReference config srcDir getDescriptorHandler = LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator ejbFiles MethodInvocation MemberReference descriptorFileName MemberReference saxParser parseEjbFiles StatementExpression MethodInvocation MemberReference ejbFiles addSupportClasses LocalVariableDeclaration ReferenceType String VariableDeclarator baseName MethodInvocation MemberReference descriptorFileName getJarBaseName LocalVariableDeclaration ReferenceType String VariableDeclarator ddPrefix MethodInvocation MemberReference baseName MemberReference descriptorFileName getVendorDDPrefix LocalVariableDeclaration ReferenceType File VariableDeclarator manifestFile MethodInvocation MemberReference ddPrefix getManifestFile IfStatement BinaryOperation != MemberReference manifestFile Literal null BlockStatement StatementExpression MethodInvocation ejbFiles MemberReference MANIFEST MemberReference manifestFile put StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference EJB_DD ClassCreator ReferenceType File MemberReference config descriptorDir MemberReference descriptorFileName put StatementExpression MethodInvocation MemberReference ejbFiles MemberReference ddPrefix addVendorFiles StatementExpression MethodInvocation MemberReference ejbFiles checkAndAddDependants IfStatement BinaryOperation && MemberReference config flatDestDir BinaryOperation != MethodInvocation baseName length Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation baseName MemberReference File separator lastIndexOf IfStatement BinaryOperation == MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator endName MethodInvocation baseName length StatementExpression Assignment MemberReference baseName MethodInvocation baseName MemberReference MemberReference endName substring = LocalVariableDeclaration ReferenceType File VariableDeclarator jarFile MethodInvocation MemberReference baseName getVendorOutputJarFile IfStatement MethodInvocation MemberReference ejbFiles MemberReference jarFile needToRebuild BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "building " MethodInvocation jarFile getName Literal " with " MethodInvocation String MethodInvocation ejbFiles size valueOf Literal " files" MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType String VariableDeclarator publicId MethodInvocation getPublicId StatementExpression MethodInvocation MemberReference baseName MemberReference jarFile MemberReference ejbFiles MemberReference publicId writeJar BlockStatement StatementExpression MethodInvocation BinaryOperation + MethodInvocation jarFile toString Literal " is up to date." MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter SAXException se LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "SAXException while parsing '" MemberReference descriptorFileName Literal "'. This probably indicates badly-formed XML." Literal " Details: " MethodInvocation se getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference se CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "IOException while parsing'" MethodInvocation descriptorFileName toString Literal "'. This probably indicates that the descriptor" Literal " doesn't exist. Details: " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe	1
MethodDeclaration Modifier public final BasicType int getBlockSize ReturnStatement This MemberReference	0
MethodDeclaration Modifier public setSourcepathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createSourcepath	0
MethodDeclaration Modifier public FormalParameter ReferenceType String propName StatementExpression Assignment This MemberReference propName MemberReference propName =	0
MethodDeclaration Modifier public setState FormalParameter BasicType int state StatementExpression This OneLiner MethodInvocation MemberReference state setState	0
MethodDeclaration Modifier public ReferenceType createPath LocalVariableDeclaration ReferenceType VariableDeclarator path ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation MemberReference path add ReturnStatement MemberReference path	0
MethodDeclaration Modifier public setExcludesfile FormalParameter ReferenceType File excludesFile BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MethodInvocation excludesFile getAbsolutePath setName createExcludesFile	1
MethodDeclaration Modifier private static ReferenceType Specification getSpecification FormalParameter Modifier final ReferenceType String section FormalParameter Modifier final ReferenceType Attributes attributes ParseException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation attributes MemberReference SPECIFICATION_TITLE getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference name BlockStatement ReturnStatement Literal null LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specVendor MethodInvocation MethodInvocation attributes MemberReference SPECIFICATION_VENDOR getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference specVendor BlockStatement ThrowStatement ClassCreator ReferenceType ParseException BinaryOperation + MemberReference MemberReference SPECIFICATION_VENDOR Literal 0 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specVersion MethodInvocation MethodInvocation attributes MemberReference SPECIFICATION_VERSION getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference specVersion BlockStatement ThrowStatement ClassCreator ReferenceType ParseException BinaryOperation + MemberReference MemberReference SPECIFICATION_VERSION Literal 0 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impTitle MethodInvocation MethodInvocation attributes MemberReference IMPLEMENTATION_TITLE getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference impTitle BlockStatement ThrowStatement ClassCreator ReferenceType ParseException BinaryOperation + MemberReference MemberReference IMPLEMENTATION_TITLE Literal 0 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVersion MethodInvocation MethodInvocation attributes MemberReference IMPLEMENTATION_VERSION getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference impVersion BlockStatement ThrowStatement ClassCreator ReferenceType ParseException BinaryOperation + MemberReference MemberReference IMPLEMENTATION_VERSION Literal 0 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVendor MethodInvocation MethodInvocation attributes MemberReference IMPLEMENTATION_VENDOR getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference impVendor BlockStatement ThrowStatement ClassCreator ReferenceType ParseException BinaryOperation + MemberReference MemberReference IMPLEMENTATION_VENDOR Literal 0 ReturnStatement ClassCreator ReferenceType Specification MemberReference name MemberReference specVersion MemberReference specVendor MemberReference impTitle MemberReference impVersion MemberReference impVendor ArrayCreator ReferenceType String ArrayInitializer MemberReference section	0
MethodDeclaration Modifier public ReferenceType Classname getHome ReturnStatement MemberReference home	0
MethodDeclaration Modifier public setDestdir FormalParameter ReferenceType File dir StatementExpression Assignment MemberReference destDir MemberReference dir =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation getProjectDir Literal "testpassfile.tmp" StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Passfile " MemberReference f Literal " not created" MethodInvocation f exists assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference JAKARTA_URL MemberReference MemberReference MemberReference MemberReference TIGRIS_URL MemberReference MethodInvocation MemberReference f readFile assertEquals	0
MethodDeclaration Modifier public TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog Literal ID Literal resolveEntity StatementExpression MethodInvocation Literal "Empty catalog should return null" MemberReference result assertNull CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail TryStatement LocalVariableDeclaration ReferenceType Source VariableDeclarator result MethodInvocation catalog Literal Literal null resolve LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation ClassCreator ReferenceType File BinaryOperation + MethodInvocation project getBaseDir Literal "/i/dont/exist.dtd" toURLString LocalVariableDeclaration ReferenceType String VariableDeclarator resultStr ClassCreator MethodInvocation getFile ReferenceType URL Cast ReferenceType SAXSource MemberReference result StatementExpression MethodInvocation Literal "Empty catalog should return input" MethodInvocation expected MemberReference resultStr endsWith assertTrue CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "resolve() MethodInvocation e toString fail	0
MethodDeclaration Modifier public setProcessInputStream FormalParameter ReferenceType OutputStream os IfStatement BinaryOperation != MemberReference input Literal null BlockStatement StatementExpression Assignment MemberReference inputPump MethodInvocation MemberReference input MemberReference os Literal true createInputPump = BlockStatement TryStatement StatementExpression MethodInvocation os close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public BasicType boolean mustBeRecompiled FormalParameter ReferenceType File destDir LocalVariableDeclaration BasicType long VariableDeclarator sourceModified MethodInvocation MemberReference destDir sourceClassesModified LocalVariableDeclaration BasicType long VariableDeclarator destModified MethodInvocation MemberReference destDir destClassesModified ReturnStatement BinaryOperation < MemberReference destModified MemberReference sourceModified	1
MethodDeclaration Modifier synchronized protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement IfStatement BinaryOperation instanceof MemberReference rc ReferenceType DataType BlockStatement StatementExpression MethodInvocation stk MemberReference rc push StatementExpression MethodInvocation Cast ReferenceType DataType MemberReference rc MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation stk pop StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public FormalParameter ReferenceType StringBuffer sb StatementExpression MethodInvocation Literal "2" MethodInvocation sb toString assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public test10 StatementExpression MethodInvocation Literal "test10" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f1 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/test10.xml" IfStatement MethodInvocation ! f1 exists BlockStatement StatementExpression MethodInvocation Literal "The fullpath attribute or the preserveLeadingSlashes attribute does not work propertly" fail	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier final protected ReferenceType TypeNames getTypeNames ReturnStatement This MemberReference server MethodInvocation getTypeNames	0
MethodDeclaration Modifier private FormalParameter ReferenceType Resource dest TryStatement StatementExpression MethodInvocation MemberReference dest testoutput CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd StatementExpression MethodInvocation attributes Literal "Using gcj compiler" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference cmd MethodInvocation setupGCJCommand = LocalVariableDeclaration BasicType int VariableDeclarator firstFileName MethodInvocation cmd size StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement BinaryOperation == MethodInvocation MethodInvocation cmd getCommandline MemberReference firstFileName executeExternalCompile Literal 0	1
MethodDeclaration Modifier public ReferenceType WeblogicTOPLinkDeploymentTool StatementExpression MethodInvocation BinaryOperation + Literal "The element is no longer required. Please use " Literal "the element and set MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType WeblogicTOPLinkDeploymentTool VariableDeclarator tool ClassCreator ReferenceType WeblogicTOPLinkDeploymentTool StatementExpression MethodInvocation MemberReference tool addDeploymentTool ReturnStatement MemberReference tool	0
MethodDeclaration Modifier private IfStatement MemberReference initialized BlockStatement ReturnStatement StatementExpression Assignment MemberReference options MethodInvocation MemberReference flags convertRegexOptions = IfStatement BinaryOperation == MemberReference from Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing from in StatementExpression Assignment MemberReference regularExpression ClassCreator ReferenceType RegularExpression = StatementExpression MethodInvocation regularExpression MemberReference from setPattern StatementExpression Assignment MemberReference regexp MethodInvocation regularExpression MethodInvocation getProject = IfStatement BinaryOperation == MemberReference to Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType Substitution = StatementExpression MethodInvocation MemberReference to	0
MethodDeclaration Modifier private synchronized BasicType boolean isExists FormalParameter BasicType boolean closeConnection IfStatement BinaryOperation == MethodInvocation getURL Literal null BlockStatement ReturnStatement Literal false TryStatement StatementExpression MethodInvocation connect ReturnStatement Literal true CatchClause CatchClauseParameter IOException e ReturnStatement Literal false IfStatement MemberReference closeConnection BlockStatement StatementExpression MethodInvocation close	0
MethodDeclaration Modifier private ReferenceType String cleanBuffer FormalParameter ReferenceType StringBuffer buffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator cleanedBuffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType boolean VariableDeclarator cr Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation buffer length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation buffer MemberReference i charAt IfStatement BinaryOperation == MemberReference ch Literal '\r' BlockStatement StatementExpression Assignment MemberReference cr Literal true = ContinueStatement IfStatement MemberReference ! cr BlockStatement StatementExpression MethodInvocation cleanedBuffer MemberReference ch append BlockStatement StatementExpression MethodInvocation cleanedBuffer MemberReference ch append ReturnStatement MethodInvocation cleanedBuffer toString	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal "MockComparator"	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType int inValue StatementExpression Assignment MemberReference davidPort MemberReference inValue =	0
MethodDeclaration Modifier private doSingleTransfer IOException JSchException LocalVariableDeclaration ReferenceType String VariableDeclarator cmd BinaryOperation + Literal "scp -t " MemberReference remotePath LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel MethodInvocation MemberReference cmd openExecChannel TryStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out MethodInvocation channel getOutputStream LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation channel getInputStream StatementExpression MethodInvocation channel connect StatementExpression MethodInvocation MemberReference in waitForAck StatementExpression MethodInvocation MemberReference localFile MemberReference in MemberReference out sendFileToRemote IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel disconnect	1
MethodDeclaration Modifier public addFilename FormalParameter ReferenceType FilenameSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addFilename	1
MethodDeclaration Modifier public synchronized removeAttribute FormalParameter ReferenceType String name StatementExpression MethodInvocation attributeNames MemberReference name remove StatementExpression MethodInvocation attributeMap MemberReference name remove	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation == MemberReference references Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation == MethodInvocation references length Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer MemberReference IfStatement MemberReference isWindows BlockStatement StatementExpression MethodInvocation s Literal '\"' append StatementExpression MethodInvocation s MemberReference references append IfStatement MemberReference isWindows BlockStatement StatementExpression MethodInvocation s Literal '\"' append ReturnStatement MethodInvocation s toString	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StripJavaComments stripJavaComments StatementExpression MethodInvocation filterReaders MemberReference stripJavaComments addElement	0
MethodDeclaration Modifier public ReferenceType Entry LocalVariableDeclaration ReferenceType Entry VariableDeclarator e ClassCreator ReferenceType Entry StatementExpression MethodInvocation entries MemberReference e addElement ReturnStatement MemberReference e	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType long FormalParameter BasicType long time LocalVariableDeclaration BasicType long VariableDeclarator granularity MethodInvocation FILE_UTILS getFileTimestampGranularity StatementExpression MethodInvocation MemberReference MemberReference time MemberReference granularity	0
MethodDeclaration Modifier public synchronized ReferenceType Hashtable getAttributeMap ReturnStatement TernaryExpression BinaryOperation == MemberReference attributeMap Literal null MemberReference EMPTY_HASHTABLE ClassCreator ReferenceType Hashtable MemberReference attributeMap	1
MethodDeclaration Modifier public setDestdir FormalParameter Modifier final ReferenceType File destdir StatementExpression Assignment This MemberReference destdir MemberReference destdir =	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper StatementExpression MethodInvocation assertNotReference IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal many StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public ReferenceType Header createHeader LocalVariableDeclaration ReferenceType Header VariableDeclarator h ClassCreator ReferenceType Header StatementExpression MethodInvocation headers MemberReference h add ReturnStatement MemberReference h	0
MethodDeclaration Modifier public maybeConfigure FormalParameter ReferenceType Project p FormalParameter BasicType boolean BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator id Literal null IfStatement MemberReference BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator ph MemberReference PropertyHelper getPropertyHelper StatementExpression MemberReference p LocalVariableDeclaration ReferenceType Object VariableDeclarator target TernaryExpression BinaryOperation instanceof MemberReference ReferenceType TaskAdapter Cast ReferenceType TaskAdapter MemberReference MemberReference IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MethodInvocation target getClass getHelper StatementExpression MethodInvocation p MemberReference ih ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attributes getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation attributes MemberReference i getQName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attributes MemberReference i getValue StatementExpression Assignment MemberReference value MethodInvocation ph Literal null MemberReference value MethodInvocation p getProperties replaceProperties = TryStatement StatementExpression MethodInvocation ih MemberReference p MemberReference target MethodInvocation name MemberReference Locale US toLowerCase MemberReference value setAttribute CatchClause CatchClauseParameter BuildException be IfStatement MethodInvocation ! name Literal "id" equals BlockStatement ThrowStatement MemberReference be StatementExpression Assignment MemberReference id MethodInvocation attributes Literal "id" getValue = IfStatement BinaryOperation != MethodInvocation characters length Literal 0 BlockStatement StatementExpression MethodInvocation ProjectHelper MemberReference p MemberReference MethodInvocation characters toString addText LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enum_ MethodInvocation children elements WhileStatement MethodInvocation enum_ hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable2 VariableDeclarator child Cast ReferenceType RuntimeConfigurable2 MethodInvocation enum_ nextElement IfStatement BinaryOperation instanceof MemberReference child ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator childTask Cast ReferenceType Task MemberReference child StatementExpression MethodInvocation childTask MemberReference child IfStatement MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference child ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator childTask Cast ReferenceType Task MemberReference child StatementExpression MethodInvocation childTask maybeConfigure BlockStatement StatementExpression MethodInvocation child MemberReference p maybeConfigure StatementExpression MethodInvocation ProjectHelper MemberReference p MemberReference MemberReference child MethodInvocation child MethodInvocation MemberReference Locale US toLowerCase getElementTag storeChild IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation p MethodInvocation MemberReference id MemberReference put getReferences StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal configureProject	0
MethodDeclaration Modifier private ReferenceType File LocalVariableDeclaration ReferenceType File VariableDeclarator result IfStatement BinaryOperation != Literal null MemberReference destfile BlockStatement StatementExpression Assignment MemberReference result MemberReference destfile = BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator file MethodInvocation url getFile LocalVariableDeclaration ReferenceType String VariableDeclarator filename IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference file BinaryOperation <= MethodInvocation file length Literal 1 BlockStatement StatementExpression Assignment MemberReference filename Literal = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation file Literal '/' lastIndexOf IfStatement BinaryOperation == Literal - 1 MemberReference index BlockStatement StatementExpression Assignment MemberReference index Literal 0 = StatementExpression Assignment MemberReference filename MethodInvocation file MemberReference index substring = StatementExpression Assignment MemberReference result ClassCreator ReferenceType File MemberReference destdir MemberReference filename = ReturnStatement MemberReference result	0
MethodDeclaration Modifier protected resetFileLists StatementExpression Assignment MemberReference compileList ArrayCreator ReferenceType File Literal 0 =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation && BinaryOperation != MemberReference queuedData Literal null BinaryOperation == MethodInvocation queuedData length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData Literal null = IfStatement BinaryOperation != MemberReference queuedData Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation queuedData Literal 0 charAt = StatementExpression Assignment MemberReference queuedData MethodInvocation queuedData Literal 1 substring = IfStatement BinaryOperation == MethodInvocation queuedData length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData Literal null = BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator clazz MethodInvocation readFully IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement StatementExpression Assignment MemberReference ch Literal - 1 = BlockStatement LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator bytes MethodInvocation clazz Literal "ISO-8859-1" getBytes TryStatement LocalVariableDeclaration Modifier final ReferenceType Class VariableDeclarator javaClassHelper MethodInvocation Class MemberReference JAVA_CLASS_HELPER forName IfStatement BinaryOperation != MemberReference javaClassHelper Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType Class VariableDeclarator params ArrayInitializer ClassReference BasicType byte LocalVariableDeclaration Modifier final ReferenceType Method VariableDeclarator getConstants MethodInvocation javaClassHelper Literal "getConstants" MemberReference params getMethod LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference bytes LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb Cast ReferenceType StringBuffer MethodInvocation getConstants Literal null MemberReference args invoke IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData MethodInvocation sb toString = ReturnStatement MethodInvocation read CatchClause CatchClauseParameter NoClassDefFoundError ex ThrowStatement MemberReference ex CatchClause CatchClauseParameter RuntimeException ex ThrowStatement MemberReference ex CatchClause CatchClauseParameter InvocationTargetException ex LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ex getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType NoClassDefFoundError BlockStatement ThrowStatement Cast ReferenceType NoClassDefFoundError MemberReference t IfStatement BinaryOperation instanceof MemberReference t ReferenceType RuntimeException BlockStatement ThrowStatement Cast ReferenceType RuntimeException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash Literal false setVisible StatementExpression MethodInvocation MethodInvocation MemberReference splash removeBuildListener getProject StatementExpression MethodInvocation splash dispose StatementExpression Assignment MemberReference splash Literal null = StatementExpression MethodInvocation Literal "Creating new SplashScreen" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null IfStatement BinaryOperation != MemberReference imgurl Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator conn Literal null IfStatement BinaryOperation && BinaryOperation && MemberReference useProxy BinaryOperation && BinaryOperation != MemberReference proxy Literal null BinaryOperation > MethodInvocation proxy length Literal 0 BinaryOperation && BinaryOperation != MemberReference port Literal null BinaryOperation > MethodInvocation port length Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Using proxied MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation System MethodInvocation Literal "http.proxySet" Literal "true" put getProperties StatementExpression MethodInvocation System MethodInvocation Literal "http.proxyHost" MemberReference proxy put getProperties StatementExpression MethodInvocation System MethodInvocation Literal "http.proxyPort" MemberReference port put getProperties LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassCreator ReferenceType URL MemberReference imgurl StatementExpression Assignment MemberReference conn MethodInvocation url openConnection = IfStatement BinaryOperation && BinaryOperation != MemberReference user Literal null BinaryOperation > MethodInvocation user length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator encodedcreds ClassCreator MethodInvocation BinaryOperation + BinaryOperation + MemberReference user Literal ":" MemberReference password encode ReferenceType Base64Converter StatementExpression MethodInvocation conn Literal "Proxy-Authorization" MemberReference encodedcreds setRequestProperty BlockStatement StatementExpression MethodInvocation System MethodInvocation Literal "http.proxySet" Literal "false" put getProperties StatementExpression MethodInvocation System MethodInvocation Literal "http.proxyHost" Literal "" put getProperties StatementExpression MethodInvocation System MethodInvocation Literal "http.proxyPort" Literal "" put getProperties StatementExpression MethodInvocation Literal "Using Direction HTTP MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassCreator ReferenceType URL MemberReference imgurl StatementExpression Assignment MemberReference conn MethodInvocation url openConnection = StatementExpression MethodInvocation conn Literal true setDoInput StatementExpression MethodInvocation conn Literal false setDoOutput StatementExpression Assignment MemberReference in MethodInvocation conn getInputStream = CatchClause CatchClauseParameter Throwable ioe StatementExpression MethodInvocation Literal "Unable to download image, trying default Ant Logo" MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "(Exception was \"" MethodInvocation ioe getMessage Literal "\"" MemberReference Project MSG_DEBUG log IfStatement BinaryOperation == MemberReference in Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl ClassReference MethodInvocation getClassLoader ReferenceType IfStatement BinaryOperation != MemberReference cl Literal null BlockStatement StatementExpression Assignment MemberReference in MethodInvocation cl Literal "images/ant_logo_large.gif" getResourceAsStream = BlockStatement StatementExpression Assignment MemberReference in MethodInvocation ClassLoader Literal "images/ant_logo_large.gif" getSystemResourceAsStream = LocalVariableDeclaration BasicType boolean VariableDeclarator success Literal false IfStatement BinaryOperation != MemberReference in Literal null BlockStatement LocalVariableDeclaration ReferenceType DataInputStream VariableDeclarator din ClassCreator ReferenceType DataInputStream MemberReference in TryStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator bout ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration BasicType int VariableDeclarator data WhileStatement BinaryOperation != Assignment MemberReference data MethodInvocation din read = Literal - 1 BlockStatement StatementExpression MethodInvocation bout Cast BasicType byte MemberReference data write StatementExpression MethodInvocation Literal "Got ByteArray, creating splash" MemberReference Project MSG_DEBUG log TryStatement LocalVariableDeclaration ReferenceType ImageIcon VariableDeclarator img ClassCreator ReferenceType ImageIcon MethodInvocation bout toByteArray StatementExpression Assignment MemberReference splash ClassCreator ReferenceType SplashScreen MemberReference img = StatementExpression Assignment MemberReference success Literal true = CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation MemberReference e logHeadless CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e TryStatement StatementExpression MethodInvocation din close CatchClause CatchClauseParameter IOException ioe IfStatement MemberReference success BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe BlockStatement TryStatement StatementExpression Assignment MemberReference splash ClassCreator ReferenceType SplashScreen Literal "Image Unavailable." = StatementExpression Assignment MemberReference success Literal true = CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation MemberReference e logHeadless IfStatement MemberReference success BlockStatement StatementExpression MethodInvocation splash Literal true setVisible StatementExpression MethodInvocation splash toFront StatementExpression MethodInvocation MethodInvocation MemberReference splash getProject TryStatement StatementExpression MethodInvocation Thread MemberReference showDuration sleep CatchClause CatchClauseParameter InterruptedException e	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression Assignment MemberReference MethodInvocation r getRefId = StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createClasspath	0
MethodDeclaration Modifier public addNot FormalParameter ReferenceType NotSelector selector StatementExpression MethodInvocation fileset MemberReference selector addNot	1
MethodDeclaration Modifier static protected ReferenceType Date FormalParameter ReferenceType ZipLong zipDosTime LocalVariableDeclaration BasicType long VariableDeclarator dosTime MethodInvocation zipDosTime getValue ReturnStatement ClassCreator ReferenceType Date MethodInvocation MemberReference dosTime	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Thread VariableDeclarator self MethodInvocation Thread currentThread LocalVariableDeclaration BasicType int VariableDeclarator priority MethodInvocation self getPriority IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator current MethodInvocation Integer MemberReference priority toString StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference current setNewProperty getProject IfStatement BinaryOperation && BinaryOperation != MemberReference newPriority Literal null BinaryOperation != MemberReference priority MethodInvocation newPriority intValue BlockStatement TryStatement StatementExpression MethodInvocation self MethodInvocation newPriority intValue setPriority CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation Literal "Unable to set new priority -a security manager is in the way" MemberReference Project MSG_WARN log CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement ClassCreator ReferenceType BuildException Literal "Priority out of range" MemberReference iae	1
MethodDeclaration ReferenceType StringBuffer getOutputBuffer ReturnStatement MemberReference outputBuffer	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The deltree task is deprecated. " Literal "Use delete instead." log IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "dir attribute must be set!" MethodInvocation getLocation IfStatement MethodInvocation dir exists BlockStatement IfStatement MethodInvocation ! dir isDirectory BlockStatement IfStatement MethodInvocation ! dir delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to delete directory " MethodInvocation dir getAbsolutePath MethodInvocation getLocation ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting: " MethodInvocation dir getAbsolutePath log TryStatement StatementExpression MethodInvocation MemberReference dir removeDir CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Unable to delete " MethodInvocation dir getAbsolutePath ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier private setupCommandLine FormalParameter ReferenceType Execute exe FormalParameter ReferenceType String command IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement StatementExpression MethodInvocation MemberReference exe MemberReference command BlockStatement StatementExpression MethodInvocation exe MemberReference command setCommandline	0
MethodDeclaration Modifier public setOutputPrintStream FormalParameter ReferenceType PrintStream output StatementExpression Assignment This MemberReference outStream ClassCreator ReferenceType PrintStream MemberReference output Literal true =	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public setValue FormalParameter BasicType int value StatementExpression Assignment This MemberReference value MemberReference value = StatementExpression Assignment MemberReference shouldSetValue Literal true =	0
MethodDeclaration Modifier public execute BuildException TryStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator d ClassCreator ReferenceType Date LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation customFormats elements WhileStatement MethodInvocation i hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation i nextElement StatementExpression MethodInvocation MethodInvocation getProject MemberReference d MethodInvocation getLocation execute LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator dstamp ClassCreator ReferenceType SimpleDateFormat Literal "yyyyMMdd" StatementExpression MethodInvocation Literal MethodInvocation dstamp MemberReference d format setProperty LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator tstamp ClassCreator ReferenceType SimpleDateFormat Literal "HHmm" StatementExpression MethodInvocation Literal "TSTAMP" MethodInvocation tstamp MemberReference d format setProperty LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator today ClassCreator ReferenceType SimpleDateFormat Literal "MMMM d yyyy" MemberReference Locale US StatementExpression MethodInvocation Literal MethodInvocation today MemberReference d format setProperty CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "selectors are not supported in remote expectLogContaining LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fsDestination Cast ReferenceType FileSet MethodInvocation MethodInvocation Literal "fileset-destination-without-selector" getReference getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator dsDestination MethodInvocation fsDestination MethodInvocation getProject getDirectoryScanner StatementExpression MethodInvocation dsDestination scan LocalVariableDeclaration ReferenceType String VariableDeclarator sortedDestinationDirectories MethodInvocation dsDestination getIncludedDirectories LocalVariableDeclaration ReferenceType String VariableDeclarator sortedDestinationFiles MethodInvocation dsDestination getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference sortedDestinationDirectories length MemberReference ++ counter BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference counter sortedDestinationDirectories MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference File separatorChar Literal '/' replace sortedDestinationDirectories = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference sortedDestinationFiles length MemberReference ++ counter BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference counter sortedDestinationFiles MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference File separatorChar Literal '/' replace sortedDestinationFiles = LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fsSource Cast ReferenceType FileSet MethodInvocation MethodInvocation Literal "fileset-source-without-selector" getReference getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator dsSource MethodInvocation fsSource MethodInvocation getProject getDirectoryScanner StatementExpression MethodInvocation dsSource scan StatementExpression MethodInvocation MemberReference dsSource MemberReference sortedDestinationFiles MemberReference sortedDestinationDirectories compareFiles	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File src LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MemberReference src setFile StatementExpression MethodInvocation MemberReference fs addFileset	0
MethodDeclaration Modifier public setCmp FormalParameter BasicType boolean cmp StatementExpression Assignment This MemberReference cmp MemberReference cmp =	0
MethodDeclaration Modifier public test7 StatementExpression MethodInvocation Literal "test7" executeTarget StatementExpression MethodInvocation Literal "<%@ include file=\"root/some/include.jsp\"%>" MethodInvocation Literal "7" Literal "filtered.tmp" assertEquals	0
MethodDeclaration Modifier protected ReferenceType String getGetLocalCopy ReturnStatement TernaryExpression MemberReference getLocalCopy MemberReference FLAG_NO_GET Literal ""	0
MethodDeclaration Modifier public FormalParameter BasicType boolean inherit StatementExpression Assignment MemberReference MemberReference inherit =	0
MethodDeclaration Modifier public setFailureProperty FormalParameter ReferenceType String failureProperty StatementExpression Assignment This MemberReference failureProperty MemberReference failureProperty =	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier public ReferenceType Enumeration selectorElements ReturnStatement MethodInvocation selectorsList elements	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set add StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public FormalParameter ReferenceType File outputDirectory StatementExpression MethodInvocation BinaryOperation + Literal "Setting output directory to: " MethodInvocation outputDirectory toString MemberReference Project MSG_VERBOSE log StatementExpression Assignment This MemberReference outputDirectory MemberReference outputDirectory =	0
MethodDeclaration Modifier protected ReferenceType Mapper createMergeMapper FormalParameter ReferenceType File destfile LocalVariableDeclaration ReferenceType Mapper VariableDeclarator result ClassCreator ReferenceType Mapper MethodInvocation getProject StatementExpression MethodInvocation result ClassReference MethodInvocation getName ReferenceType setClassname StatementExpression MethodInvocation result MethodInvocation destfile getAbsolutePath ReturnStatement MemberReference result	0
MethodDeclaration Modifier public endTestSuite FormalParameter ReferenceType JUnitTest suite BuildException IfStatement BinaryOperation != MemberReference out Literal null BlockStatement TryStatement StatementExpression MethodInvocation out MemberReference grafitto write StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException ioex ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write output" MemberReference ioex IfStatement BinaryOperation && BinaryOperation != MemberReference out MemberReference System out BinaryOperation != MemberReference out MemberReference System err BlockStatement TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public ReferenceType Location getLocation ReturnStatement MemberReference location	0
MethodDeclaration Modifier public static doReport FormalParameter ReferenceType PrintStream out StatementExpression MethodInvocation out Literal Ant report println StatementExpression MethodInvocation out MethodInvocation Main println StatementExpression MethodInvocation MemberReference out Literal "Implementation Version" header StatementExpression MethodInvocation out BinaryOperation + Literal tasks : " MethodInvocation ClassReference ReferenceType Main println LocalVariableDeclaration ReferenceType Class VariableDeclarator optional Literal null TryStatement StatementExpression Assignment MemberReference optional MethodInvocation Class MemberReference TEST_CLASS forName = StatementExpression MethodInvocation out BinaryOperation + Literal tasks : " MethodInvocation MemberReference optional println CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation MemberReference e StatementExpression MethodInvocation out Literal tasks : not available" println StatementExpression MethodInvocation MemberReference out Literal header StatementExpression MethodInvocation MemberReference out doReportAntProperties StatementExpression MethodInvocation MemberReference out Literal jar listing" header StatementExpression MethodInvocation MemberReference out doReportAntHomeLibraries StatementExpression MethodInvocation MemberReference out Literal jar listing" header StatementExpression MethodInvocation MemberReference out doReportUserHomeLibraries StatementExpression MethodInvocation MemberReference out Literal availability" header StatementExpression MethodInvocation MemberReference out doReportTasksAvailability StatementExpression MethodInvocation MemberReference out Literal header StatementExpression MethodInvocation MemberReference out doReportWhich StatementExpression MethodInvocation MemberReference out Literal "XML Parser information" header StatementExpression MethodInvocation MemberReference out doReportParserInfo StatementExpression MethodInvocation MemberReference out Literal "System properties" header StatementExpression MethodInvocation MemberReference out doReportSystemProperties StatementExpression MethodInvocation MemberReference out Literal "Temp dir" header StatementExpression MethodInvocation MemberReference out doReportTempDir StatementExpression MethodInvocation MemberReference out Literal information" header StatementExpression MethodInvocation MemberReference out doReportLocale StatementExpression MethodInvocation MemberReference out Literal information" header StatementExpression MethodInvocation MemberReference out doReportProxy StatementExpression MethodInvocation out println	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MemberReference result run	0
MethodDeclaration Modifier public ReferenceType Attribute createAttribute LocalVariableDeclaration Modifier final ReferenceType Attribute VariableDeclarator feature ClassCreator ReferenceType Attribute StatementExpression MethodInvocation attributeList MemberReference feature addElement ReturnStatement MemberReference feature	0
MethodDeclaration Modifier public ReferenceType Map getNestedElementMap ReturnStatement TernaryExpression BinaryOperation < MethodInvocation size Literal 1 MemberReference EMPTY_MAP MethodInvocation Collections MemberReference unmodifiableMap	0
MethodDeclaration Modifier public testRedirector1 StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "redirector1" Literal "cannot have > 1 <redirector>s" expectBuildException	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public testSimple StatementExpression MethodInvocation Literal "simple" executeTarget LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fileset Cast ReferenceType FileSet MethodInvocation p Literal "testfileset" getReference LocalVariableDeclaration ReferenceType File VariableDeclarator baseDir MethodInvocation fileset MemberReference p getDir LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal "Expecting attribute value printed" BinaryOperation != MethodInvocation log Literal "Attribute attr1 = test" indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal "Expecting element value printed" BinaryOperation != MethodInvocation log BinaryOperation + Literal basedir = " MethodInvocation baseDir getAbsolutePath indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ignore StatementExpression Assignment MemberReference mIgnore MemberReference ignore =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal "REPLACED" indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier protected BasicType boolean hasResources ReturnStatement BinaryOperation || BinaryOperation != MemberReference path Literal null BinaryOperation > MethodInvocation filesets size Literal 0	1
MethodDeclaration Modifier public FormalParameter ReferenceType String proxyUser StatementExpression Assignment This MemberReference proxyUser MemberReference proxyUser =	0
MethodDeclaration Modifier public BasicType boolean matches FormalParameter ReferenceType String argument BuildException ReturnStatement MethodInvocation MemberReference argument MemberReference MATCH_DEFAULT matches	1
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public setFailOnError FormalParameter Modifier final BasicType boolean failOnError StatementExpression Assignment This MemberReference failOnError MemberReference failOnError =	0
MethodDeclaration Modifier public fireTaskFinished StatementExpression SuperMethodInvocation MemberReference task Literal null fireTaskFinished	0
MethodDeclaration Modifier protected checkConfiguration IfStatement MemberReference ! havePerm BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute perm not set in chmod" MethodInvocation getLocation IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation defaultSet MethodInvocation getProject getDir Literal null BlockStatement StatementExpression MethodInvocation MemberReference defaultSet addFileset StatementExpression SuperMethodInvocation checkConfiguration	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "property attribute is required" MethodInvocation getLocation StatementExpression Assignment MemberReference isTask Literal true = TryStatement IfStatement MethodInvocation eval BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator oldvalue MethodInvocation MethodInvocation MemberReference property getProperty getProject IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference oldvalue MethodInvocation ! oldvalue MemberReference value equals BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "DEPRECATED - <available> used to override an Literal " property." MemberReference StringUtils LINE_SEP Literal " Build file should not reuse the same property" Literal " name for different values." MemberReference Project MSG_WARN log StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference value setProperty getProject StatementExpression Assignment MemberReference isTask Literal false =	1
MethodDeclaration Modifier public addCustom FormalParameter ReferenceType ExtendSelector selector StatementExpression MethodInvocation fileset MemberReference selector addCustom	1
MethodDeclaration Modifier protected ReferenceType Properties FormalParameter ReferenceType String relativeFilename IOException LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference relativeFilename createRelativeFile LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference f = StatementExpression MethodInvocation props MemberReference in load IfStatement BinaryOperation != MemberReference in Literal null BlockStatement TryStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference props	1
MethodDeclaration Modifier public addSize FormalParameter ReferenceType SizeSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addSize	1
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation tasks MemberReference nestedTask add	1
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference failOnError MemberReference fail =	0
MethodDeclaration Modifier public ReferenceType Enumeration getParams ReturnStatement MethodInvocation params elements	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class proxyClass StatementExpression MethodInvocation MemberReference proxyClass getExecuteMethod	0
MethodDeclaration Modifier public ReferenceType String getTaskName ReturnStatement TernaryExpression BinaryOperation || BinaryOperation == MemberReference realThing Literal null BinaryOperation instanceof MemberReference realThing ReferenceType Task SuperMethodInvocation getTaskName Cast ReferenceType Task MemberReference realThing	1
MethodDeclaration Modifier public setObjSel FormalParameter ReferenceType String objsel StatementExpression MethodInvocation MemberReference objsel	0
MethodDeclaration Modifier private ReferenceType String toClass FormalParameter ReferenceType String filename LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation filename Literal 0 MethodInvocation filename Literal ".class" lastIndexOf substring StatementExpression Assignment MemberReference classname MethodInvocation classname Literal '\\' Literal '.' replace = ReturnStatement MemberReference classname	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj This BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Directory BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Directory VariableDeclarator d Cast ReferenceType Directory MemberReference obj ReturnStatement This MemberReference directory MethodInvocation MemberReference d directory equals	0
MethodDeclaration Modifier public BasicType boolean eval BuildException TryStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference classname Literal null BinaryOperation == MemberReference file Literal null BinaryOperation == MemberReference resource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "At least one of (classname|file|" Literal "resource) is required" MethodInvocation getLocation IfStatement BinaryOperation != MemberReference type Literal null BlockStatement IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The type attribute is only valid " Literal specifying the file " Literal "attribute." MethodInvocation getLocation IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation classpath MethodInvocation getProject setProject StatementExpression Assignment This MemberReference loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = LocalVariableDeclaration ReferenceType String VariableDeclarator appendix Literal "" IfStatement MemberReference isTask BlockStatement StatementExpression Assignment MemberReference appendix BinaryOperation + Literal " to set property " MemberReference property = BlockStatement StatementExpression MethodInvocation Literal "available" setTaskName IfStatement BinaryOperation && BinaryOperation != MemberReference classname Literal null MethodInvocation ! MemberReference classname checkClass BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to load class " MemberReference classname MemberReference appendix MemberReference Project MSG_VERBOSE log ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation ! checkFile BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "Unable to find " IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation buf MethodInvocation Literal ' ' append MemberReference type append StatementExpression MethodInvocation buf MethodInvocation MemberReference appendix append MemberReference filename append StatementExpression MethodInvocation MethodInvocation buf toString MemberReference Project MSG_VERBOSE log ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference resource Literal null MethodInvocation ! MemberReference resource checkResource BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to load resource " MemberReference resource MemberReference appendix MemberReference Project MSG_VERBOSE log ReturnStatement Literal false IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement StatementExpression MethodInvocation loader cleanup StatementExpression Assignment MemberReference loader Literal null = IfStatement MemberReference ! isTask BlockStatement StatementExpression MethodInvocation Literal null setTaskName ReturnStatement Literal true	1
MethodDeclaration Modifier protected ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator actualVMCommand Cast ReferenceType Commandline MethodInvocation clone IfStatement BinaryOperation != MemberReference maxMemory Literal null BlockStatement IfStatement MethodInvocation vmVersion Literal "1.1" startsWith BlockStatement StatementExpression MethodInvocation actualVMCommand MethodInvocation BinaryOperation + Literal MemberReference maxMemory setValue createArgument BlockStatement StatementExpression MethodInvocation actualVMCommand MethodInvocation BinaryOperation + Literal MemberReference maxMemory setValue createArgument ReturnStatement MemberReference actualVMCommand	0
MethodDeclaration Modifier private ReferenceType Hashtable getTokens ReturnStatement MemberReference hash	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference serverName	0
MethodDeclaration Modifier private static ReferenceType String getProcEnvCommand IfStatement MethodInvocation Os Literal "os/2" isFamily BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "cmd" Literal "/c" Literal "set" IfStatement MethodInvocation Os Literal "windows" isFamily BlockStatement IfStatement MethodInvocation Os Literal "win9x" isFamily BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "command.com" Literal "/c" Literal "set" BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "cmd" Literal "/c" Literal "set" IfStatement BinaryOperation || MethodInvocation Os Literal "z/os" isFamily MethodInvocation Os Literal "unix" isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cmd ArrayCreator ReferenceType String Literal 1 IfStatement ClassCreator MethodInvocation canRead ReferenceType File Literal "/bin/env" BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 cmd Literal "/bin/env" = IfStatement ClassCreator MethodInvocation canRead ReferenceType File Literal "/usr/bin/env" BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 cmd Literal "/usr/bin/env" = BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 cmd Literal "env" = ReturnStatement MemberReference cmd IfStatement BinaryOperation || MethodInvocation Os Literal "netware" isFamily MethodInvocation Os Literal "os/400" isFamily BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "env" IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal "logical" BlockStatement ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean getValue ReturnStatement MemberReference attributeValue	0
MethodDeclaration Modifier protected extract IfStatement BinaryOperation > MethodInvocation source lastModified MethodInvocation dest lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Expanding " MethodInvocation source getAbsolutePath Literal " to " MethodInvocation dest getAbsolutePath log LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator out Literal null LocalVariableDeclaration ReferenceType GZIPInputStream VariableDeclarator zIn Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator fis Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileOutputStream MemberReference dest = StatementExpression Assignment MemberReference fis MethodInvocation srcResource getInputStream = StatementExpression Assignment MemberReference zIn ClassCreator ReferenceType GZIPInputStream MemberReference fis = LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression MethodInvocation out MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation zIn MemberReference buffer Literal 0 MemberReference buffer length read = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Problem expanding gzip " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference fis close StatementExpression MethodInvocation FileUtils MemberReference out close StatementExpression MethodInvocation FileUtils MemberReference zIn close	1
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task task StatementExpression MethodInvocation children MemberReference task add	1
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference UNITS	0
MethodDeclaration Modifier protected getFile FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dir FormalParameter ReferenceType String filename IOException BuildException IfStatement BinaryOperation > This MemberReference simulatedFailuresLeft Literal 0 BlockStatement StatementExpression This -- MemberReference simulatedFailuresLeft ThrowStatement ClassCreator ReferenceType IOException Literal failure for testing" StatementExpression SuperMethodInvocation MemberReference ftp MemberReference dir MemberReference filename getFile	0
MethodDeclaration Modifier protected ReferenceType String getTieClassSuffix ReturnStatement MemberReference RMI_TIE_SUFFIX	0
MethodDeclaration Modifier public addOr FormalParameter ReferenceType OrSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "orfails" Literal "orfails" expectPropertyUnset	0
MethodDeclaration ReferenceType UnmatchedFileMap init FormalParameter ReferenceType java ReferenceType io ReferenceType File localFolder FormalParameter ReferenceType Folder remoteFolder IfStatement MethodInvocation ! localFolder exists BlockStatement ReturnStatement This LocalVariableDeclaration ReferenceType String VariableDeclarator localFiles MethodInvocation localFolder list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference localFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fn MemberReference ArraySelector MemberReference i localFiles LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator localFile ClassCreator MethodInvocation getAbsoluteFile ReferenceType java ReferenceType io ReferenceType File MemberReference localFolder MemberReference ArraySelector MemberReference i localFiles StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "adding " MemberReference localFile Literal " to UnmatchedFileMap" MemberReference Project MSG_DEBUG log IfStatement MethodInvocation localFile isDirectory BlockStatement StatementExpression This MethodInvocation MemberReference localFile ClassCreator ReferenceType Folder MemberReference remoteFolder MemberReference fn MemberReference fn put BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File VariableDeclarator remoteFile ClassCreator ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File MemberReference remoteFolder StatementExpression MethodInvocation remoteFile MemberReference fn setName StatementExpression This MethodInvocation MemberReference localFile MemberReference remoteFile put ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType String getURL ReturnStatement MemberReference source	0
MethodDeclaration Modifier public synchronized ReferenceType String getId ReturnStatement MemberReference id	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && MethodInvocation testIfCondition MethodInvocation testUnlessCondition BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator taskPosition Literal 0 BinaryOperation < MemberReference taskPosition MethodInvocation children size MemberReference ++ taskPosition BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation children MemberReference taskPosition get IfStatement BinaryOperation instanceof MemberReference o ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MemberReference o StatementExpression MethodInvocation task perform BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator r Cast ReferenceType RuntimeConfigurable MemberReference o StatementExpression MethodInvocation r MemberReference project maybeConfigure IfStatement MethodInvocation ! testIfCondition BlockStatement StatementExpression MethodInvocation project This BinaryOperation + BinaryOperation + Literal "Skipped because property '" MethodInvocation project MemberReference replaceProperties Literal "' not set." MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation project This BinaryOperation + BinaryOperation + Literal "Skipped because property '" MethodInvocation project MemberReference replaceProperties Literal "' set." MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier private doCompilation FormalParameter ReferenceType JspCompilerAdapter compiler BuildException StatementExpression MethodInvocation compiler This setJspc IfStatement MethodInvocation ! compiler execute BlockStatement IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference FAIL_MSG MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference FAIL_MSG MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public ReferenceType FTPFile getFile FormalParameter ReferenceType FTPFile theFiles FormalParameter ReferenceType String lastpathelement IfStatement BinaryOperation == MemberReference theFiles Literal null BlockStatement ReturnStatement Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator fcount Literal 0 BinaryOperation < MemberReference fcount MemberReference theFiles length MemberReference ++ fcount BlockStatement IfStatement MemberReference ArraySelector MemberReference fcount MethodInvocation getName MethodInvocation MemberReference lastpathelement equals theFiles BlockStatement ReturnStatement MemberReference ArraySelector MemberReference fcount theFiles IfStatement BinaryOperation && MethodInvocation ! isCaseSensitive MemberReference ArraySelector MemberReference fcount MethodInvocation getName MethodInvocation MemberReference lastpathelement equalsIgnoreCase theFiles BlockStatement ReturnStatement MemberReference ArraySelector MemberReference fcount theFiles ReturnStatement Literal null	1
MethodDeclaration Modifier public test0 StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public test11 StatementExpression MethodInvocation Literal "test11" Literal "Attribute has no value" Literal "Attributes must have name and value" expectBuildExceptionContaining	0
MethodDeclaration Modifier public executeTargets FormalParameter ReferenceType Vector names BuildException StatementExpression MethodInvocation MethodInvocation This Cast ReferenceType String MethodInvocation names ArrayCreator ReferenceType String MethodInvocation names size toArray executeTargets	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier final protected setInitialized FormalParameter Modifier final BasicType boolean initialized StatementExpression Assignment This MemberReference initialized MemberReference initialized =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String p4User StatementExpression Assignment This MemberReference P4User BinaryOperation + Literal MemberReference p4User =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileSet MethodInvocation MethodInvocation getProject getRef LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType MethodInvocation getDir StatementExpression MethodInvocation result MethodInvocation MethodInvocation getIncludedFiles getDirectoryScanner addFiles StatementExpression MethodInvocation result MethodInvocation MethodInvocation getIncludedDirectories getDirectoryScanner addFiles ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference mComment MemberReference =	0
MethodDeclaration Modifier public writeXMLDeclaration FormalParameter ReferenceType Writer wri IOException IfStatement MemberReference BlockStatement StatementExpression MethodInvocation wri Literal "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" write	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String sql IfStatement BinaryOperation != MemberReference sql Literal null BlockStatement IfStatement MethodInvocation getExpandProperties BlockStatement StatementExpression Assignment MemberReference sql MethodInvocation MethodInvocation MemberReference sql replaceProperties getProject = StatementExpression Assignment This MemberReference tSqlCommand MemberReference sql +=	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No property specified for isset " Literal "condition" ReturnStatement BinaryOperation != MethodInvocation MethodInvocation MemberReference property getProperty getProject Literal null	1
MethodDeclaration Modifier public setPort FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public setSubject FormalParameter ReferenceType String subject StatementExpression Assignment This MemberReference subject MemberReference subject =	0
MethodDeclaration Modifier public setParameters FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters setParameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation CONTAINS_KEY MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setText IfStatement MethodInvocation CASE_KEY MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters toBoolean IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters toBoolean BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/core/directoryscanner.xml" configureProject StatementExpression MethodInvocation MethodInvocation Literal "setup" executeTarget getProject	0
MethodDeclaration Modifier public BasicType long getFileTimestampGranularity IfStatement MemberReference BlockStatement ReturnStatement MemberReference FAT_FILE_TIMESTAMP_GRANULARITY IfStatement MemberReference onWindows BlockStatement ReturnStatement MemberReference NTFS_FILE_TIMESTAMP_GRANULARITY IfStatement MemberReference onDos BlockStatement ReturnStatement MemberReference FAT_FILE_TIMESTAMP_GRANULARITY ReturnStatement MemberReference	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileNameMapper fileNameMapper StatementExpression MethodInvocation MethodInvocation MemberReference fileNameMapper add createMapper	0
MethodDeclaration Modifier public ReferenceType Class getTypeClass FormalParameter ReferenceType Project project TryStatement ReturnStatement MethodInvocation innerGetTypeClass CatchClause CatchClauseParameter NoClassDefFoundError ncdfe StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load a dependent class (" MethodInvocation ncdfe getMessage Literal ") for type " MemberReference name MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter ClassNotFoundException cnfe StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load class (" MemberReference className Literal ") for type " MemberReference name MemberReference Project MSG_DEBUG log ReturnStatement Literal null	0
MethodDeclaration Modifier public synchronized BasicType boolean isFollowSymlinks ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation isFollowSymlinks getRef MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType PatternSet ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed StatementExpression Assignment MemberReference ds Literal null = ReturnStatement MethodInvocation defaultPatterns	0
MethodDeclaration Modifier public addReplaceString FormalParameter ReferenceType ReplaceString filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public execute BuildException TryStatement StatementExpression MethodInvocation StatementExpression MethodInvocation doExecute StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ReferenceType Vector getElements ReturnStatement MethodInvocation MemberReference elements getRef	1
MethodDeclaration Modifier public setType FormalParameter ReferenceType TypeAttribute type StatementExpression MethodInvocation MethodInvocation type getClassName setClassname	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target FormalParameter BasicType int expectedCounts LocalVariableDeclaration ReferenceType String VariableDeclarator messages ArrayCreator ReferenceType String ArrayInitializer Literal "Doing Site Command: umask 222" Literal "Failed to issue Site Command: umask 222" LocalVariableDeclaration ReferenceType LogCounter VariableDeclarator counter ClassCreator ReferenceType LogCounter ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference messages length MemberReference ++ i BlockStatement StatementExpression MethodInvocation counter MemberReference ArraySelector MemberReference i messages addLogMessageToSearch StatementExpression MethodInvocation MethodInvocation MemberReference counter getProject StatementExpression MethodInvocation MethodInvocation MemberReference target executeTarget getProject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference messages length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "target " MemberReference target Literal ":message " MemberReference i MemberReference ArraySelector MemberReference i expectedCounts MethodInvocation counter MemberReference ArraySelector MemberReference i messages getMatchCount assertEquals	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public testMissingFiltersFile StatementExpression MethodInvocation Literal Literal "should fail due to missing expectBuildException	0
MethodDeclaration Modifier public BasicType boolean getFailFailOnError ReturnStatement MemberReference failOnError	0
MethodDeclaration Modifier private ReferenceType Manifest getManifest FormalParameter ReferenceType Reader r LocalVariableDeclaration ReferenceType Manifest VariableDeclarator newManifest Literal null TryStatement StatementExpression Assignment MemberReference newManifest ClassCreator ReferenceType Manifest MemberReference r = CatchClause CatchClauseParameter ManifestException e StatementExpression MethodInvocation BinaryOperation + Literal "Manifest is invalid: " MethodInvocation e getMessage MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid " MemberReference manifestFile MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to read manifest file" Literal " (" MethodInvocation e getMessage Literal ")" MemberReference e ReturnStatement MemberReference newManifest	0
MethodDeclaration Modifier public init FormalParameter ReferenceType String tag FormalParameter ReferenceType AttributeList attrs SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator depends Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator ifCond Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator unlessCond Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator description Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attrs MemberReference i getName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement MethodInvocation key Literal "name" equals BlockStatement StatementExpression Assignment MemberReference name MemberReference value = IfStatement MethodInvocation name Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "name attribute must not" Literal " be empty" ClassCreator ReferenceType Location MemberReference helperImpl locator IfStatement MethodInvocation key Literal "depends" equals BlockStatement StatementExpression Assignment MemberReference depends MemberReference value = IfStatement MethodInvocation key Literal "if" equals BlockStatement StatementExpression Assignment MemberReference ifCond MemberReference value = IfStatement MethodInvocation key Literal "unless" equals BlockStatement StatementExpression Assignment MemberReference unlessCond MemberReference value = IfStatement MethodInvocation key Literal "id" equals BlockStatement StatementExpression Assignment MemberReference id MemberReference value = IfStatement MethodInvocation key Literal "description" equals BlockStatement StatementExpression Assignment MemberReference description MemberReference value = BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected attribute \"" MemberReference key Literal "\"" MemberReference helperImpl locator IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException Literal "target element appears without a name attribute" MemberReference helperImpl locator StatementExpression Assignment MemberReference target ClassCreator ReferenceType Target = StatementExpression MethodInvocation target Literal "" addDependency StatementExpression MethodInvocation target MemberReference name setName StatementExpression MethodInvocation target MemberReference ifCond StatementExpression MethodInvocation target MemberReference unlessCond StatementExpression MethodInvocation target MemberReference description setDescription StatementExpression MethodInvocation helperImpl.project MemberReference name MemberReference target addTarget IfStatement BinaryOperation && BinaryOperation != MemberReference id Literal null MethodInvocation ! id Literal "" equals BlockStatement StatementExpression MethodInvocation helperImpl.project MemberReference id MemberReference target IfStatement BinaryOperation > MethodInvocation depends length Literal 0 BlockStatement StatementExpression MethodInvocation target MemberReference depends setDepends	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/types/selectors.xml" configureProject	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier protected ReferenceType OutputStream wrapStream FormalParameter ReferenceType OutputStream out IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MAGIC length MemberReference ++ i BlockStatement StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i MAGIC write ReturnStatement ClassCreator ReferenceType CBZip2OutputStream MemberReference out	1
MethodDeclaration Modifier protected ReferenceType Enumeration getRootClasses ReturnStatement MethodInvocation rootClasses elements	0
MethodDeclaration Modifier public FormalParameter ReferenceType address StatementExpression MethodInvocation ccList MemberReference address addElement	0
MethodDeclaration Modifier public test7 StatementExpression MethodInvocation Literal "test7" test7	0
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MemberReference more BlockStatement StatementExpression Assignment MemberReference more Literal false = ReturnStatement MemberReference url BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException	0
MethodDeclaration Modifier public BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException ReturnStatement MethodInvocation redirector MemberReference buffer MemberReference offset MemberReference length handleInput	1
MethodDeclaration Modifier public setOldCMP FormalParameter BasicType boolean oldCMP StatementExpression Assignment This MemberReference MemberReference ! oldCMP =	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set IfStatement BinaryOperation == MemberReference fileSets Literal null BlockStatement StatementExpression Assignment MemberReference fileSets ClassCreator ReferenceType LinkedList = StatementExpression MethodInvocation fileSets MemberReference set add	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public ReferenceType String displayAttributeType XDocletException LocalVariableDeclaration ReferenceType Collection VariableDeclarator parameters MethodInvocation MethodInvocation getParameters getCurrentMethod LocalVariableDeclaration ReferenceType XParameter VariableDeclarator param Cast ReferenceType XParameter MethodInvocation parameters MethodInvocation next iterator LocalVariableDeclaration ReferenceType String VariableDeclarator methodType MethodInvocation param MethodInvocation getQualifiedName getType LocalVariableDeclaration ReferenceType String VariableDeclarator display Cast ReferenceType String MethodInvocation attributeDisplayMap MemberReference methodType get IfStatement BinaryOperation == MemberReference display Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation MemberReference methodType getAttributeClass IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference methodType LocalVariableDeclaration ReferenceType Object VariableDeclarator instance Literal null TryStatement StatementExpression Assignment MemberReference instance MethodInvocation clazz newInstance = CatchClause CatchClauseParameter InstantiationException e CatchClause CatchClauseParameter IllegalAccessException e IfStatement BinaryOperation && BinaryOperation != MemberReference instance Literal null BinaryOperation instanceof MemberReference instance ReferenceType EnumeratedAttribute BlockStatement LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator enum1 Cast ReferenceType EnumeratedAttribute MemberReference instance LocalVariableDeclaration ReferenceType String VariableDeclarator values MethodInvocation enum1 getValues StatementExpression Assignment MemberReference display Literal "" = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference display BinaryOperation + BinaryOperation + Literal "&quot;" MemberReference ArraySelector MemberReference i values Literal "&quot;" += IfStatement BinaryOperation != MemberReference i BinaryOperation - MemberReference values length Literal 1 BlockStatement StatementExpression Assignment MemberReference display Literal ", " += ReturnStatement MemberReference display StatementExpression Assignment MemberReference display Literal "" = ReturnStatement MemberReference display	1
MethodDeclaration Modifier final protected ReferenceType String getDate ReturnStatement MethodInvocation getDateForHeader	0
MethodDeclaration Modifier public ReferenceType URL getResource FormalParameter ReferenceType String resource LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation MemberReference resource getResource getClass StatementExpression MethodInvocation BinaryOperation + Literal "Could not find resource :" MemberReference resource MemberReference url assertNotNull ReturnStatement MemberReference url	0
MethodDeclaration Modifier public ReferenceType String getTypeName ReturnStatement MemberReference mTypeName	0
MethodDeclaration Modifier public delete StatementExpression Assignment MemberReference cache ClassCreator ReferenceType Properties = StatementExpression MethodInvocation cachefile delete StatementExpression Assignment MemberReference cacheLoaded Literal true = StatementExpression Assignment MemberReference cacheDirty Literal false =	1
MethodDeclaration Modifier public synchronized BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef ReturnStatement MethodInvocation MethodInvocation hashCode getClass	0
MethodDeclaration Modifier public ReferenceType Exception getException ReturnStatement MemberReference caught	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p MemberReference systemClasspath StatementExpression MethodInvocation p MemberReference project setProject StatementExpression MethodInvocation project Literal "path" MemberReference p StatementExpression MethodInvocation Literal "testRename" ArrayCreator ReferenceType String ArrayInitializer Literal "path" Literal "path" ArrayCreator BasicType boolean ArrayInitializer Literal true Literal false MemberReference p testReference StatementExpression MethodInvocation Literal "testRename" ArrayCreator ReferenceType String ArrayInitializer Literal "path" Literal "path" ArrayCreator BasicType boolean ArrayInitializer Literal false Literal true Literal null testReference StatementExpression MethodInvocation Literal "testRename" ArrayCreator ReferenceType String ArrayInitializer Literal "newpath" Literal "newpath" ArrayCreator BasicType boolean ArrayInitializer Literal false Literal true MemberReference p testReference	0
MethodDeclaration Modifier public ReferenceType ComponentHelper getNext ReturnStatement MemberReference next	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected processLine FormalParameter Modifier final ReferenceType String line StatementExpression MethodInvocation parser MemberReference line	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType Tstamp ReferenceType VariableDeclarator format MethodInvocation tstamp createFormat StatementExpression MethodInvocation format Literal setProperty StatementExpression MethodInvocation format Literal "HH:mm:ss z" setPattern StatementExpression MethodInvocation format Literal "GMT" setTimezone LocalVariableDeclaration ReferenceType Date VariableDeclarator date MethodInvocation Calendar MethodInvocation getTime getInstance StatementExpression MethodInvocation format MemberReference project MemberReference date MemberReference location execute LocalVariableDeclaration ReferenceType String VariableDeclarator today MethodInvocation project Literal getProperty LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator sdf ClassCreator ReferenceType SimpleDateFormat Literal "HH:mm:ss z" StatementExpression MethodInvocation sdf MethodInvocation TimeZone Literal "GMT" getTimeZone LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation sdf MemberReference date format StatementExpression MethodInvocation MemberReference expected MemberReference today assertEquals	0
MethodDeclaration Modifier public BasicType int ReturnStatement BinaryOperation - This MemberReference currRecIdx Literal 1	0
MethodDeclaration Modifier public setMaster FormalParameter BasicType boolean master StatementExpression Assignment MemberReference mMaster MemberReference master =	0
MethodDeclaration Modifier private ReferenceType SelectorEntry addSelectorToList FormalParameter Modifier final ReferenceType Vector list LocalVariableDeclaration Modifier final ReferenceType SelectorEntry VariableDeclarator result ClassCreator ReferenceType SelectorEntry StatementExpression MethodInvocation list MemberReference result addElement ReturnStatement MemberReference result	1
MethodDeclaration Modifier public put FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value StatementExpression MethodInvocation cache MethodInvocation String MemberReference key valueOf MethodInvocation String MemberReference value valueOf put StatementExpression Assignment MemberReference cacheDirty Literal true =	1
MethodDeclaration Modifier public onTestEnded FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal " success: " MethodInvocation evt getName println getWriter	0
MethodDeclaration Modifier public setVersion FormalParameter ReferenceType String value StatementExpression Assignment MemberReference version MemberReference value =	0
MethodDeclaration Modifier public static BasicType int convertRegexOptions FormalParameter ReferenceType String flags IfStatement BinaryOperation == MemberReference flags Literal null BlockStatement ReturnStatement Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator options Literal 0 IfStatement BinaryOperation != MethodInvocation flags Literal 'g' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference Regexp |= IfStatement BinaryOperation != MethodInvocation flags Literal 'i' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference Regexp |= IfStatement BinaryOperation != MethodInvocation flags Literal 'm' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference Regexp MATCH_MULTILINE |= IfStatement BinaryOperation != MethodInvocation flags Literal 's' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference Regexp MATCH_SINGLELINE |= ReturnStatement MemberReference options	0
MethodDeclaration Modifier public BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException ReturnStatement Literal - 1	0
MethodDeclaration Modifier public messageLogged FormalParameter Modifier final ReferenceType BuildEvent actual IfStatement BinaryOperation == MethodInvocation actual getPriority MemberReference Project MSG_DEBUG ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "unexpected messageLogged: " MethodInvocation actual getMessage MethodInvocation ! buffer isEmpty assertTrue StatementExpression MethodInvocation Literal "unexpected project " MemberReference project MethodInvocation actual getProject assertEquals LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator expected Cast ReferenceType BuildEvent MethodInvocation buffer Literal 0 elementAt StatementExpression MethodInvocation buffer Literal 0 removeElementAt StatementExpression MethodInvocation Literal "unexpected messageLogged " MethodInvocation expected getMessage MethodInvocation actual getMessage assertEquals StatementExpression MethodInvocation Literal "unexpected priority " MethodInvocation expected getPriority MethodInvocation actual getPriority assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType String address IfStatement BinaryOperation != This MemberReference from Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Emails can only be from one StatementExpression Assignment This MemberReference from ClassCreator ReferenceType MemberReference address =	0
MethodDeclaration Modifier public startTestSuite FormalParameter ReferenceType JUnitTest suite LocalVariableDeclaration ReferenceType String VariableDeclarator newLine MethodInvocation System Literal "line.separator" getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Running " StatementExpression MethodInvocation sb MethodInvocation suite getName append StatementExpression MethodInvocation sb MemberReference newLine append TryStatement StatementExpression MethodInvocation out MethodInvocation sb MethodInvocation getBytes toString write StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException ioex ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write summary output" MemberReference ioex	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference DEFAULT_EXTENSION	0
MethodDeclaration Modifier public FormalParameter ReferenceType Ant ReferenceType TargetElement t IfStatement BinaryOperation == MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation init StatementExpression MethodInvocation callee MemberReference t StatementExpression Assignment MemberReference targetSet Literal true =	0
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType String target StatementExpression Assignment This MemberReference targetAttribute MemberReference target =	0
MethodDeclaration Modifier private ReferenceType String validateOutputFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType String outputDir BuildException IfStatement BinaryOperation == MemberReference destFile Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation == MemberReference outputDir Literal null BinaryOperation || MethodInvocation destFile Literal "/" startsWith MethodInvocation destFile Literal "\\" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator relativeOutputFile MethodInvocation MemberReference destFile makeOutputFileRelative StatementExpression MethodInvocation MemberReference relativeOutputFile ReturnStatement MemberReference relativeOutputFile LocalVariableDeclaration ReferenceType String VariableDeclarator root MethodInvocation MethodInvocation getAbsolutePath ClassCreator ReferenceType File MemberReference destFile getRoot IfStatement BinaryOperation && BinaryOperation > MethodInvocation root length Literal 1 MethodInvocation destFile MethodInvocation root Literal 0 BinaryOperation - MethodInvocation root length Literal 1 substring startsWith BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Drive letter in 'outputfile' not " Literal "supported: " MemberReference destFile ReturnStatement MemberReference destFile	1
MethodDeclaration Modifier public ReferenceType FileNameMapper getMapper ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public onSuiteStarted FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal " " MethodInvocation evt getName println getWriter StatementExpression SuperMethodInvocation MemberReference evt onSuiteStarted	0
MethodDeclaration Modifier private BasicType boolean testNestedCondition LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation nestedConditionPresent IfStatement BinaryOperation || BinaryOperation && MemberReference result BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Nested conditions " Literal "not permitted in conjunction with if/unless ReturnStatement BinaryOperation && MemberReference result MethodInvocation nestedCondition eval	0
MethodDeclaration Modifier public ReferenceType Section getMainSection ReturnStatement MemberReference mainSection	0
MethodDeclaration Modifier public ReferenceType String getLinkedFile ReturnStatement MemberReference link	0
MethodDeclaration Modifier public setDynamicAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation getScript IfStatement MethodInvocation ! MemberReference name isAttributeSupported BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "<" MethodInvocation getTaskType Literal "> does not support the \"" MemberReference name Literal "\" attribute" StatementExpression MethodInvocation attributes MemberReference name MemberReference value put	1
MethodDeclaration store FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child InvocationTargetException IllegalAccessException InstantiationException IfStatement MethodInvocation MethodInvocation getName MethodInvocation Literal "Configured" endsWith getMethod BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference realObject invoke getMethod	1
MethodDeclaration Modifier private testRealTest FormalParameter ReferenceType String target java.io.IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project Literal "../asf-logo.gif" resolveFile MethodInvocation project Literal resolveFile contentEquals assertTrue	0
MethodDeclaration Modifier public static ReferenceType String replace FormalParameter ReferenceType String origString FormalParameter ReferenceType Hashtable keys BuildException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator finalString ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator key Literal null WhileStatement BinaryOperation > Assignment MemberReference index MethodInvocation origString Literal "${" MemberReference i indexOf = Literal - 1 BlockStatement StatementExpression Assignment MemberReference key MethodInvocation origString BinaryOperation + MemberReference index Literal 2 MethodInvocation origString Literal "}" BinaryOperation + MemberReference index Literal 3 indexOf substring = StatementExpression MethodInvocation finalString MethodInvocation origString MemberReference i MemberReference index substring append IfStatement MethodInvocation keys MemberReference key containsKey BlockStatement StatementExpression MethodInvocation finalString MethodInvocation keys MemberReference key get append BlockStatement StatementExpression MethodInvocation finalString Literal "${" append StatementExpression MethodInvocation finalString MemberReference key append StatementExpression MethodInvocation finalString Literal "}" append StatementExpression Assignment MemberReference i BinaryOperation + BinaryOperation + MemberReference index Literal 3 MethodInvocation key length = StatementExpression MethodInvocation finalString MethodInvocation origString MemberReference i substring append ReturnStatement MethodInvocation finalString toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileList fl StatementExpression MethodInvocation MethodInvocation MemberReference fl add createTargets	0
MethodDeclaration Modifier public setVerbose FormalParameter Modifier final BasicType boolean verbose StatementExpression Assignment This MemberReference verbose MemberReference verbose =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation || MemberReference fork Literal MethodInvocation MethodInvocation equals "extJavac"	0
MethodDeclaration Modifier public setDestDir FormalParameter ReferenceType File dirName StatementExpression MethodInvocation Literal "DestDir MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier private BasicType boolean basedirExists LocalVariableDeclaration ReferenceType File VariableDeclarator basedir MethodInvocation fs getDir ReturnStatement BinaryOperation || BinaryOperation == MemberReference basedir Literal null MethodInvocation basedir exists	0
MethodDeclaration * Add a * @param filter a <code>ChainableReader</code> * @since Ant */ Modifier public add FormalParameter ReferenceType ChainableReader filter StatementExpression MethodInvocation filterReaders MemberReference filter addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean useSysArray StatementExpression Assignment This MemberReference useSysArray MemberReference useSysArray =	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation isSigned MethodInvocation getProject setProject StatementExpression MethodInvocation isSigned MemberReference file setFile ReturnStatement MethodInvocation isSigned eval	1
MethodDeclaration Modifier protected loadResource FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation BinaryOperation + Literal "Resource Loading " MemberReference name MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cL Literal null IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference cL MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = BlockStatement StatementExpression Assignment MemberReference cL This MethodInvocation getClass MethodInvocation getClassLoader = IfStatement BinaryOperation == MemberReference cL Literal null BlockStatement StatementExpression Assignment MemberReference is MethodInvocation ClassLoader MemberReference name getSystemResourceAsStream = BlockStatement StatementExpression Assignment MemberReference is MethodInvocation cL MemberReference name getResourceAsStream = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression MethodInvocation props MemberReference is load StatementExpression MethodInvocation MemberReference props addProperties BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to find resource " MemberReference name MemberReference Project MSG_WARN log CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex MethodInvocation getLocation IfStatement BinaryOperation != MemberReference is Literal null BlockStatement TryStatement StatementExpression MethodInvocation is close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public synchronized setExcludes FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference Literal null = BlockStatement StatementExpression Assignment This MemberReference ArrayCreator ReferenceType String MemberReference length = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment This MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i normalizePattern =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "it is required to fail Literal "condition satisfied" expectSpecificBuildException	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Project project FormalParameter ReferenceType Object source BuildException StatementExpression MethodInvocation MethodInvocation MemberReference source addElement getImportStack LocalVariableDeclaration ReferenceType AntXMLContext VariableDeclarator context Literal null StatementExpression Assignment MemberReference context Cast ReferenceType AntXMLContext MethodInvocation project Literal "ant.parsing.context" getReference = IfStatement BinaryOperation == MemberReference context Literal null BlockStatement StatementExpression Assignment MemberReference context ClassCreator ReferenceType AntXMLContext MemberReference project = StatementExpression MethodInvocation project Literal "ant.parsing.context" MemberReference context StatementExpression MethodInvocation project Literal "ant.targets" MethodInvocation context getTargets IfStatement BinaryOperation > MethodInvocation MethodInvocation size getImportStack Literal 1 BlockStatement StatementExpression MethodInvocation context Literal true setIgnoreProjectTag LocalVariableDeclaration ReferenceType Target VariableDeclarator currentTarget MethodInvocation context getCurrentTarget LocalVariableDeclaration ReferenceType Target VariableDeclarator currentImplicit MethodInvocation context getImplicitTarget LocalVariableDeclaration ReferenceType Map VariableDeclarator currentTargets MethodInvocation context getCurrentTargets TryStatement LocalVariableDeclaration ReferenceType Target VariableDeclarator newCurrent ClassCreator ReferenceType Target StatementExpression MethodInvocation newCurrent MemberReference project setProject StatementExpression MethodInvocation newCurrent Literal "" setName StatementExpression MethodInvocation context MemberReference newCurrent setCurrentTarget StatementExpression MethodInvocation context ClassCreator ReferenceType HashMap setCurrentTargets StatementExpression MethodInvocation context MemberReference newCurrent setImplicitTarget StatementExpression MethodInvocation MemberReference project MemberReference source ClassCreator ReferenceType RootHandler MemberReference context MemberReference mainHandler parse StatementExpression MethodInvocation newCurrent execute StatementExpression MethodInvocation context MemberReference currentTarget setCurrentTarget StatementExpression MethodInvocation context MemberReference currentImplicit setImplicitTarget StatementExpression MethodInvocation context MemberReference currentTargets setCurrentTargets BlockStatement StatementExpression MethodInvocation context ClassCreator ReferenceType HashMap setCurrentTargets StatementExpression MethodInvocation MemberReference project MemberReference source ClassCreator ReferenceType RootHandler MemberReference context MemberReference mainHandler parse StatementExpression MethodInvocation context MethodInvocation execute getImplicitTarget	1
MethodDeclaration Modifier private copyReference FormalParameter ReferenceType String oldKey FormalParameter ReferenceType String newKey LocalVariableDeclaration ReferenceType Object VariableDeclarator orig MethodInvocation MethodInvocation MemberReference oldKey getReference getProject IfStatement BinaryOperation == MemberReference orig Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "No object referenced by " MemberReference oldKey Literal ". Can't copy to " MemberReference newKey MemberReference Project MSG_WARN log ReturnStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation orig getClass LocalVariableDeclaration ReferenceType Object VariableDeclarator copy MemberReference orig TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator cloneM MethodInvocation c Literal "clone" ArrayCreator ReferenceType Class Literal 0 getMethod IfStatement BinaryOperation != MemberReference cloneM Literal null BlockStatement StatementExpression Assignment MemberReference copy MethodInvocation cloneM MemberReference orig ArrayCreator ReferenceType Object Literal 0 invoke = StatementExpression MethodInvocation BinaryOperation + Literal "Adding clone of reference " MemberReference oldKey MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter Exception e IfStatement BinaryOperation instanceof MemberReference copy ReferenceType ProjectComponent BlockStatement StatementExpression Cast ReferenceType ProjectComponent MemberReference copy BlockStatement TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator setProjectM MethodInvocation c Literal "setProject" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Project getMethod IfStatement BinaryOperation != MemberReference setProjectM Literal null BlockStatement StatementExpression MethodInvocation setProjectM MemberReference copy ArrayCreator ReferenceType Object ArrayInitializer MemberReference newProject invoke CatchClause CatchClauseParameter NoSuchMethodException e CatchClause CatchClauseParameter Exception e2 LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "Error setting new project instance for " Literal "reference with id " MemberReference oldKey ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e2 MethodInvocation getLocation StatementExpression MethodInvocation newProject MemberReference newKey MemberReference copy	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore ReturnStatement MemberReference nestedElement	1
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator num This MethodInvocation This MemberReference oneBuf Literal 0 Literal 1 read ReturnStatement TernaryExpression BinaryOperation == MemberReference num Literal - 1 Literal - 1 BinaryOperation & Cast BasicType int This MemberReference oneBuf ArraySelector Literal 0 Literal 0xFF	1
MethodDeclaration Modifier protected slowScan IfStatement MemberReference haveSlowResults BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator excl ArrayCreator ReferenceType String MethodInvocation dirsExcluded size StatementExpression MethodInvocation dirsExcluded MemberReference excl copyInto LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference copyInto ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference excl length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! MemberReference ArraySelector MemberReference i excl couldHoldIncluded BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference i excl BinaryOperation + MemberReference ArraySelector MemberReference i excl MemberReference File separator Literal false scandir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! MemberReference ArraySelector MemberReference i couldHoldIncluded BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference i BinaryOperation + MemberReference ArraySelector MemberReference i MemberReference File separator Literal false scandir StatementExpression Assignment MemberReference haveSlowResults Literal true =	0
MethodDeclaration Modifier public addTrim FormalParameter ReferenceType Trim filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event StatementExpression Assignment MemberReference targetName MethodInvocation event MethodInvocation getName getTarget =	1
MethodDeclaration Modifier public static ReferenceType Resource selectOutOfDateSources FormalParameter ReferenceType ProjectComponent logTo FormalParameter ReferenceType Resource source FormalParameter ReferenceType FileNameMapper mapper FormalParameter ReferenceType ResourceFactory targets FormalParameter BasicType long granularity LocalVariableDeclaration ReferenceType VariableDeclarator u ClassCreator ReferenceType StatementExpression MethodInvocation u MethodInvocation Arrays MemberReference source asList addAll LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc MethodInvocation MemberReference logTo MemberReference u MemberReference mapper MemberReference targets MemberReference granularity selectOutOfDateSources ReturnStatement TernaryExpression BinaryOperation == MethodInvocation rc size Literal 0 ArrayCreator ReferenceType Resource Literal 0 Cast ReferenceType MemberReference rc	0
MethodDeclaration Modifier public FormalParameter BasicType boolean aBoolean StatementExpression Assignment MemberReference keepgenerated MemberReference aBoolean =	0
MethodDeclaration Modifier public IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal "SkipRecord: recIdx = " This MemberReference currRecIdx Literal " blkIdx = " This MemberReference currBlkIdx println IfStatement BinaryOperation == This MemberReference inStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "reading (via skip) from an output buffer" IfStatement BinaryOperation >= This MemberReference currRecIdx This MemberReference recsPerBlock BlockStatement IfStatement This ! MethodInvocation readBlock BlockStatement ReturnStatement StatementExpression This ++ MemberReference currRecIdx	0
MethodDeclaration Modifier public setCodegen FormalParameter BasicType boolean codegen StatementExpression Assignment This MemberReference codegen MemberReference codegen =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MethodInvocation w Literal encodedata assertEquals StatementExpression MethodInvocation Literal "]]" MethodInvocation w Literal "]]" encodedata assertEquals StatementExpression MethodInvocation Literal "&#x5d;&#x5d;&gt;" MethodInvocation w Literal "]]>" encodedata assertEquals StatementExpression MethodInvocation Literal MethodInvocation w Literal encodedata assertEquals StatementExpression MethodInvocation Literal "A&#x5d;&#x5d;&gt;" MethodInvocation w Literal encodedata assertEquals StatementExpression MethodInvocation Literal MethodInvocation w Literal encodedata assertEquals StatementExpression MethodInvocation Literal MethodInvocation w Literal encodedata assertEquals	0
MethodDeclaration Modifier public ReferenceType URL getUrl ReturnStatement MemberReference url	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setComprSize FormalParameter BasicType long size StatementExpression MethodInvocation MemberReference size setCompressedSize	1
MethodDeclaration Modifier public FormalParameter BasicType int tabLength IOException IfStatement BinaryOperation || BinaryOperation < MemberReference tabLength Literal 2 BinaryOperation > MemberReference tabLength Literal 80 BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal must be between 2 and StatementExpression Assignment This MemberReference tabLength MemberReference tabLength =	0
MethodDeclaration Modifier protected ReferenceType String getString FormalParameter BasicType byte bytes ZipException IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement ReturnStatement ClassCreator ReferenceType String MemberReference bytes BlockStatement TryStatement ReturnStatement ClassCreator ReferenceType String MemberReference bytes MemberReference encoding CatchClause CatchClauseParameter UnsupportedEncodingException uee ThrowStatement ClassCreator ReferenceType ZipException MethodInvocation uee getMessage	1
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal "module" Literal "winexe"	0
MethodDeclaration Modifier public BasicType boolean hasSelectors IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ResourceSelectorContainer MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation ! v isEmpty	0
MethodDeclaration Modifier protected FormalParameter BasicType long timeStarted FormalParameter BasicType long timeEnded FormalParameter BasicType long totalLength LocalVariableDeclaration BasicType double VariableDeclarator duration BinaryOperation / BinaryOperation - MemberReference timeEnded MemberReference timeStarted Literal 1000.0 LocalVariableDeclaration ReferenceType NumberFormat VariableDeclarator format MethodInvocation NumberFormat StatementExpression MethodInvocation format Literal 2 setMaximumFractionDigits StatementExpression MethodInvocation format Literal 1 setMinimumFractionDigits StatementExpression MethodInvocation listener BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File transfer time: " MethodInvocation format MemberReference duration format Literal " Average Rate: " MethodInvocation format BinaryOperation / MemberReference totalLength MemberReference duration format Literal " log	0
MethodDeclaration Modifier public setAsText FormalParameter BasicType boolean asText StatementExpression Assignment This MemberReference asText MemberReference asText =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean pureJava StatementExpression Assignment This MemberReference pureJava MemberReference pureJava =	0
MethodDeclaration Modifier public BasicType boolean match FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType String VariableDeclarator vpath MethodInvocation path MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace ReturnStatement BinaryOperation && MethodInvocation MemberReference vpath isIncluded MethodInvocation ! MemberReference vpath isExcluded	0
MethodDeclaration Modifier public setType FormalParameter ReferenceType Type value StatementExpression Assignment This MemberReference type MethodInvocation Type MethodInvocation value getValue toType =	0
MethodDeclaration Modifier public setCaseSensitive FormalParameter BasicType boolean IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference regexpOptions MemberReference RegexpMatcher = BlockStatement StatementExpression Assignment MemberReference regexpOptions Literal 0 =	0
MethodDeclaration Modifier public testProcessDestroyer IfStatement MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_2 isJavaVersion BlockStatement ReturnStatement TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator processDestroyer ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Process VariableDeclarator process MethodInvocation Runtime MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "java -cp " MethodInvocation System Literal "java.class.path" getProperty Literal " " MethodInvocation MethodInvocation getName getClass exec getRuntime StatementExpression MethodInvocation Literal "Not registered as shutdown MethodInvocation processDestroyer isAddedAsShutdownHook assertFalse StatementExpression MethodInvocation processDestroyer MemberReference process add StatementExpression MethodInvocation Literal "Registered as shutdown MethodInvocation processDestroyer isAddedAsShutdownHook assertTrue TryStatement StatementExpression MethodInvocation process destroy StatementExpression MethodInvocation processDestroyer MemberReference process remove StatementExpression MethodInvocation Literal "Not registered as shutdown MethodInvocation processDestroyer isAddedAsShutdownHook assertFalse CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace	0
MethodDeclaration Modifier public setLine FormalParameter ReferenceType String line IfStatement BinaryOperation == MemberReference line Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference parts MethodInvocation MemberReference line translateCommandline =	0
MethodDeclaration Modifier public synchronized setAlwaysLog FormalParameter BasicType boolean alwaysLog StatementExpression Assignment This MemberReference alwaysLog MemberReference alwaysLog =	0
MethodDeclaration Modifier public ReferenceType String getPlatform ReturnStatement MemberReference platform	0
MethodDeclaration Modifier protected setUp LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference sw Literal true StatementExpression MethodInvocation pw Literal "org.apache.test.ClassName.method(ClassName.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C1.m1(C1.java:125)" println StatementExpression MethodInvocation pw Literal "\tat println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C2.m1(C2.java:125)" println StatementExpression MethodInvocation pw Literal "\tat junit.framework.TestResult.m1(TestResult.java:999)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C3.m1(C3.java:125)" println StatementExpression MethodInvocation pw Literal "\tat junit.framework.TestSuite.m2(TestSuite.java:999)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C4.m1(C4.java:125)" println StatementExpression MethodInvocation pw Literal "\tat junit.framework.Assert.m3(Assert.java:999)" println StatementExpression MethodInvocation pw Literal "\tat println StatementExpression MethodInvocation pw Literal "\tat println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C5.m1(C5.java:125)" println StatementExpression MethodInvocation pw Literal "\tat println StatementExpression MethodInvocation pw Literal "\tat println StatementExpression MethodInvocation pw Literal "\tat println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C6.m1(C6.java:125)" println StatementExpression Assignment MemberReference trace MethodInvocation sw toString = StatementExpression MethodInvocation sw MethodInvocation Literal 0 setLength getBuffer StatementExpression MethodInvocation pw Literal "org.apache.test.ClassName.method(ClassName.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C1.m1(C1.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C2.m1(C2.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C3.m1(C3.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C4.m1(C4.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C5.m1(C5.java:125)" println StatementExpression MethodInvocation pw Literal "\tat org.apache.test.C6.m1(C6.java:125)" println StatementExpression Assignment MemberReference expected MethodInvocation sw toString =	0
MethodDeclaration Modifier protected ReferenceType Enumeration allTests LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enums ArrayInitializer MethodInvocation tests elements MethodInvocation batchTests elements ReturnStatement MethodInvocation Enumerations MemberReference enums fromCompound	0
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qName SAXException StatementExpression MethodInvocation currentHandler MemberReference uri MemberReference name MemberReference context onEndElement LocalVariableDeclaration ReferenceType AntHandler VariableDeclarator prev Cast ReferenceType AntHandler MethodInvocation antHandlers pop StatementExpression Assignment MemberReference currentHandler MemberReference prev = IfStatement BinaryOperation != MemberReference currentHandler Literal null StatementExpression MethodInvocation currentHandler MemberReference uri MemberReference name MemberReference qName MemberReference context onEndChild	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static ReferenceType String ReturnStatement MemberReference javaVersion	0
MethodDeclaration Modifier public addParam FormalParameter ReferenceType param StatementExpression MethodInvocation params MemberReference param add	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation compileClasspath createPath	0
MethodDeclaration Modifier protected filterEvent FormalParameter ReferenceType TestRunEvent evt LocalVariableDeclaration ReferenceType String VariableDeclarator filteredTrace MethodInvocation MethodInvocation evt MethodInvocation getStackTrace getError filter LocalVariableDeclaration ReferenceType VariableDeclarator error ClassCreator ReferenceType MethodInvocation evt MethodInvocation getType getError MethodInvocation evt MethodInvocation getMessage getError MemberReference filteredTrace StatementExpression MethodInvocation evt MemberReference error setError	0
MethodDeclaration Modifier public FormalParameter ReferenceType TestRunEvent evt LocalVariableDeclaration ReferenceType TestSummary VariableDeclarator summary MethodInvocation evt getSummary LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation RES Literal "run.summary.msg" ClassCreator ReferenceType Integer MethodInvocation summary runCount ClassCreator ReferenceType Integer MethodInvocation summary failureCount ClassCreator ReferenceType Integer MethodInvocation summary ClassCreator ReferenceType Long BinaryOperation / MethodInvocation summary elapsedTime Literal 1000 getString StatementExpression MethodInvocation MethodInvocation MemberReference msg println getWriter	1
MethodDeclaration Modifier public execute StatementExpression Assignment MemberReference presentElements ClassCreator ReferenceType HashMap = StatementExpression MethodInvocation getNsElements StatementExpression MethodInvocation processTasks StatementExpression Assignment MemberReference localAttributes ClassCreator ReferenceType Hashtable = LocalVariableDeclaration ReferenceType Set VariableDeclarator copyKeys ClassCreator ReferenceType HashSet MethodInvocation map keySet ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation macroDef MethodInvocation iterator getAttributes MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType MacroDef ReferenceType Attribute VariableDeclarator attribute Cast ReferenceType MacroDef ReferenceType Attribute MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation map MethodInvocation attribute getName get IfStatement BinaryOperation && BinaryOperation == MemberReference value Literal null Literal MethodInvocation MethodInvocation attribute getName equals "description" BlockStatement StatementExpression Assignment MemberReference value MethodInvocation getDescription = IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference value MethodInvocation attribute getDefault = StatementExpression Assignment MemberReference value MethodInvocation MemberReference value MemberReference localAttributes macroSubs = IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "required attribute " MethodInvocation attribute getName Literal " not set" StatementExpression MethodInvocation localAttributes MethodInvocation attribute getName MemberReference value put StatementExpression MethodInvocation copyKeys MethodInvocation attribute getName remove IfStatement MethodInvocation copyKeys Literal "id" contains BlockStatement StatementExpression MethodInvocation copyKeys Literal "id" remove IfStatement BinaryOperation != MethodInvocation macroDef getText Literal null BlockStatement IfStatement BinaryOperation == MemberReference text Literal null BlockStatement IfStatement MethodInvocation ! macroDef MethodInvocation getOptional getText BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "required text missing" StatementExpression Assignment MemberReference text Literal "" = IfStatement MethodInvocation macroDef MethodInvocation getTrim getText BlockStatement StatementExpression Assignment MemberReference text MethodInvocation text trim = StatementExpression MethodInvocation localAttributes MethodInvocation macroDef MethodInvocation getName getText MemberReference text put BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference text Literal null MethodInvocation ! text MethodInvocation Literal "" equals trim BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The \"" MethodInvocation getTaskName Literal "\" macro does not support" Literal " text data." IfStatement BinaryOperation != MethodInvocation copyKeys size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unknown attribute" TernaryExpression BinaryOperation > MethodInvocation copyKeys size Literal 1 Literal "s " Literal " " MemberReference copyKeys LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator c MethodInvocation MethodInvocation macroDef getNestedTask copy StatementExpression MethodInvocation c init TryStatement StatementExpression MethodInvocation c perform CatchClause CatchClauseParameter BuildException ex IfStatement MethodInvocation macroDef getBackTrace BlockStatement ThrowStatement MethodInvocation ProjectHelper MemberReference ex MethodInvocation getLocation addLocationToBuildException BlockStatement StatementExpression MethodInvocation ex MethodInvocation getLocation setLocation ThrowStatement MemberReference ex StatementExpression Assignment MemberReference presentElements Literal null = StatementExpression Assignment MemberReference localAttributes Literal null =	1
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String s ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal colon" Literal	0
MethodDeclaration Modifier private ReferenceType SelectSelector getRef LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation This MethodInvocation getClass Literal "SelectSelector" getCheckedRef ReturnStatement Cast ReferenceType SelectSelector MemberReference o	1
MethodDeclaration * @see */ Modifier public messageLogged FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal "--- MESSAGE LOGGED" MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MethodInvocation event getTask Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation event MethodInvocation getTaskName getTask IfStatement MemberReference ! emacsMode BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator label BinaryOperation + BinaryOperation + Literal "[" MemberReference name Literal "] " LocalVariableDeclaration BasicType int VariableDeclarator size BinaryOperation - MemberReference DefaultLogger LEFT_COLUMN_SIZE MethodInvocation label length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf Literal " " append StatementExpression MethodInvocation buf MemberReference label append StatementExpression MethodInvocation buf MethodInvocation event getMessage append StatementExpression MethodInvocation MethodInvocation buf toString MethodInvocation event getPriority log	1
MethodDeclaration Modifier public addBuildSuccessfulSound FormalParameter ReferenceType File file FormalParameter BasicType int loops FormalParameter ReferenceType Long duration StatementExpression Assignment This MemberReference fileSuccess MemberReference file = StatementExpression Assignment This MemberReference loopsSuccess MemberReference loops = StatementExpression Assignment This MemberReference durationSuccess MemberReference duration =	0
MethodDeclaration Modifier public parseTarHeader FormalParameter BasicType byte header LocalVariableDeclaration BasicType int VariableDeclarator offset Literal 0 StatementExpression Assignment This MemberReference name MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference NAMELEN parseName = StatementExpression Assignment MemberReference offset MemberReference NAMELEN += StatementExpression Assignment This MemberReference mode Cast BasicType int MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference userId Cast BasicType int MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference groupId Cast BasicType int MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference size MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference modTime MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference linkFlag MemberReference ArraySelector MemberReference ++ offset header = StatementExpression Assignment This MemberReference linkName MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference NAMELEN parseName = StatementExpression Assignment MemberReference offset MemberReference NAMELEN += StatementExpression Assignment This MemberReference magic MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseName = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseName = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference groupName MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseName = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference devMajor Cast BasicType int MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal = StatementExpression Assignment MemberReference offset MemberReference += StatementExpression Assignment This MemberReference devMinor Cast BasicType int MethodInvocation TarUtils MemberReference header MemberReference offset MemberReference parseOctal =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "zipEmptyCreate" Literal "Note: creating empty" expectLogContaining	0
MethodDeclaration Modifier public setExcludes FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation defaultPatterns MemberReference setExcludes	0
MethodDeclaration Modifier public setAlgorithmClass FormalParameter ReferenceType String classname StatementExpression Assignment MemberReference algorithmClass MemberReference classname =	0
MethodDeclaration Modifier public setSuffix FormalParameter ReferenceType String suffix StatementExpression Assignment This MemberReference suffix MemberReference suffix =	0
MethodDeclaration Modifier private startRemoteCpProtocol FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType File localFile IOException LocalVariableDeclaration ReferenceType File VariableDeclarator startFile MemberReference localFile WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator stream ClassCreator ReferenceType ByteArrayOutputStream WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation in read IfStatement BinaryOperation < MemberReference read Literal 0 BlockStatement ReturnStatement IfStatement BinaryOperation == Cast BasicType byte MemberReference read MemberReference LINE_FEED BlockStatement BreakStatement StatementExpression MethodInvocation stream MemberReference read write LocalVariableDeclaration ReferenceType String VariableDeclarator serverResponse MethodInvocation stream Literal "UTF-8" toString IfStatement BinaryOperation == MethodInvocation serverResponse Literal 0 charAt Literal 'C' BlockStatement StatementExpression MethodInvocation MemberReference serverResponse MemberReference startFile MemberReference out MemberReference in parseAndFetchFile IfStatement BinaryOperation == MethodInvocation serverResponse Literal 0 charAt Literal 'D' BlockStatement StatementExpression Assignment MemberReference startFile MethodInvocation MemberReference serverResponse MemberReference startFile parseAndCreateDirectory = StatementExpression MethodInvocation MemberReference out sendAck IfStatement BinaryOperation == MethodInvocation serverResponse Literal 0 charAt Literal 'E' BlockStatement StatementExpression Assignment MemberReference startFile MethodInvocation startFile getParentFile = StatementExpression MethodInvocation MemberReference out sendAck IfStatement BinaryOperation || BinaryOperation == MethodInvocation serverResponse Literal 0 charAt Literal '\01' BinaryOperation == MethodInvocation serverResponse Literal 0 charAt Literal '\02' BlockStatement ThrowStatement ClassCreator ReferenceType IOException MethodInvocation serverResponse Literal 1 substring	1
MethodDeclaration Modifier public ReferenceType String getBeantype ReturnStatement MemberReference beantype	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test StatementExpression MemberReference ++ runCount	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setClasspathref FormalParameter ReferenceType r StatementExpression Assignment This MemberReference MethodInvocation r getRefId = StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createClasspath	0
MethodDeclaration Modifier protected ReferenceType Parameter getParameters ReturnStatement MemberReference parameters	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation helper This setProjectComponent	1
MethodDeclaration Modifier protected setInternalOutputFilename FormalParameter Modifier final ReferenceType String outputFileName StatementExpression Assignment This MemberReference outputFileName MemberReference outputFileName =	0
MethodDeclaration Modifier public setLoops FormalParameter BasicType int loops StatementExpression Assignment This MemberReference loops MemberReference loops =	0
MethodDeclaration Modifier public synchronized BasicType boolean contains FormalParameter ReferenceType Object o ReturnStatement BinaryOperation >= MethodInvocation MemberReference o indexOf Literal 0	1
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType char cbuf FormalParameter BasicType int off FormalParameter BasicType int len IOException LocalVariableDeclaration BasicType int VariableDeclarator amountRead Literal 0 WhileStatement BinaryOperation || BinaryOperation != MethodInvocation getReader Literal null MemberReference needAddSeparator BlockStatement IfStatement MemberReference needAddSeparator BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference off cbuf MethodInvocation eolString MemberReference ++ lastPos charAt = IfStatement BinaryOperation >= MemberReference lastPos MethodInvocation eolString length BlockStatement StatementExpression Assignment MemberReference lastPos Literal 0 = StatementExpression Assignment MemberReference needAddSeparator Literal false = StatementExpression MemberReference -- len StatementExpression MemberReference ++ off StatementExpression MemberReference ++ amountRead IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement ReturnStatement MemberReference amountRead ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator nRead MethodInvocation MethodInvocation MemberReference cbuf MemberReference off MemberReference len read getReader IfStatement BinaryOperation || BinaryOperation == MemberReference nRead Literal - 1 BinaryOperation == MemberReference nRead Literal 0 BlockStatement StatementExpression MethodInvocation nextReader IfStatement BinaryOperation && MemberReference fixLastLine MethodInvocation isMissingEndOfLine BlockStatement StatementExpression Assignment MemberReference needAddSeparator Literal true = StatementExpression Assignment MemberReference lastPos Literal 0 = BlockStatement IfStatement MemberReference fixLastLine BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference nRead BinaryOperation > MemberReference i BinaryOperation - MemberReference nRead MemberReference lastChars length MemberReference -- i BlockStatement IfStatement BinaryOperation <= MemberReference i Literal 0 BlockStatement BreakStatement StatementExpression MethodInvocation MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference off MemberReference i Literal 1 cbuf addLastChar StatementExpression Assignment MemberReference len MemberReference nRead -= StatementExpression Assignment MemberReference off MemberReference nRead += StatementExpression Assignment MemberReference amountRead MemberReference nRead += IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement ReturnStatement MemberReference amountRead IfStatement BinaryOperation == MemberReference amountRead Literal 0 BlockStatement ReturnStatement Literal - 1 BlockStatement ReturnStatement MemberReference amountRead	1
MethodDeclaration Modifier protected fireMessageLogged FormalParameter ReferenceType Project project FormalParameter ReferenceType String message FormalParameter BasicType int priority StatementExpression MethodInvocation MemberReference project MemberReference message Literal null MemberReference priority fireMessageLogged	0
MethodDeclaration Modifier public testStandaloneType StatementExpression MethodInvocation Literal "testStandaloneType" executeTarget LocalVariableDeclaration ReferenceType VariableDeclarator e Cast ReferenceType MethodInvocation MethodInvocation Literal "echo2" getReference getProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator f Cast ReferenceType FileSet MethodInvocation MethodInvocation Literal "fs" getReference getProject StatementExpression MethodInvocation BinaryOperation == MethodInvocation f getLocation MemberReference Location UNKNOWN_LOCATION assertFalse StatementExpression MethodInvocation BinaryOperation + MethodInvocation e MethodInvocation getLineNumber getLocation Literal 1 MethodInvocation f MethodInvocation getLineNumber getLocation assertEquals	1
MethodDeclaration Modifier private ReferenceType Properties Exception LocalVariableDeclaration ReferenceType Properties VariableDeclarator testProps ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator propsFile ClassCreator ReferenceType FileInputStream ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference testPropsFilePath StatementExpression MethodInvocation testProps MemberReference propsFile load StatementExpression MethodInvocation propsFile close ReturnStatement MemberReference testProps	1
MethodDeclaration Modifier protected ReferenceType String getVersion ReturnStatement TernaryExpression BinaryOperation != MemberReference version Literal null BinaryOperation + MemberReference MemberReference version Literal ""	0
MethodDeclaration Modifier protected log FormalParameter ReferenceType String message FormalParameter BasicType int level StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference level log getTask	0
MethodDeclaration Modifier protected execute FormalParameter ReferenceType String args FormalParameter ReferenceType file BuildException StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args MethodInvocation file getPath = LocalVariableDeclaration ReferenceType CmdResult VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res getStdErr	0
MethodDeclaration Modifier public setDestDir FormalParameter ReferenceType File destDirName StatementExpression Assignment MemberReference destDir MemberReference destDirName =	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference o equals getCheckedRef IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation || BinaryOperation == MemberReference o This MethodInvocation o MethodInvocation MethodInvocation getClass equals getClass	1
MethodDeclaration Modifier protected createParents FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String filename IOException BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MemberReference filename IfStatement MethodInvocation dirCache MemberReference dir contains BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator parents ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType String VariableDeclarator dirname WhileStatement BinaryOperation != Assignment MemberReference dirname MethodInvocation dir getParent = Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator checkDir ClassCreator ReferenceType File MemberReference dirname IfStatement MethodInvocation dirCache MemberReference checkDir contains BlockStatement BreakStatement StatementExpression Assignment MemberReference dir MemberReference checkDir = StatementExpression MethodInvocation parents MemberReference dir addElement LocalVariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation parents size Literal 1 IfStatement BinaryOperation >= MemberReference i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cwd MethodInvocation ftp printWorkingDirectory LocalVariableDeclaration ReferenceType String VariableDeclarator parent MethodInvocation dir getParent IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement IfStatement MethodInvocation ! ftp MethodInvocation MemberReference parent resolveFile changeWorkingDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "could not change to " Literal "directory: " MethodInvocation ftp getReplyString WhileStatement BinaryOperation >= MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference dir Cast ReferenceType File MethodInvocation parents MemberReference -- i elementAt = IfStatement MethodInvocation ! ftp MethodInvocation dir getName changeWorkingDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "creating remote directory " MethodInvocation MethodInvocation dir getPath resolveFile MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation ! ftp MethodInvocation dir getName makeDirectory BlockStatement StatementExpression MethodInvocation MemberReference ftp handleMkDirFailure IfStatement MethodInvocation ! ftp MethodInvocation dir getName changeWorkingDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "could not change to " Literal "directory: " MethodInvocation ftp getReplyString StatementExpression MethodInvocation dirCache MemberReference dir addElement StatementExpression MethodInvocation ftp MemberReference cwd changeWorkingDirectory	1
MethodDeclaration Modifier public addScale FormalParameter ReferenceType Scale instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public addContinuation FormalParameter ReferenceType String line LocalVariableDeclaration ReferenceType String VariableDeclarator currentValue Cast ReferenceType String MethodInvocation values MemberReference currentIndex elementAt StatementExpression MethodInvocation BinaryOperation + MemberReference currentValue MethodInvocation line Literal 1 substring setValue	0
MethodDeclaration Modifier public tearDown IOException TryStatement StatementExpression MethodInvocation los close StatementExpression MethodInvocation f delete	0
MethodDeclaration Modifier public setNegate FormalParameter BasicType boolean negated StatementExpression Assignment This MemberReference negated MemberReference negated =	0
MethodDeclaration Modifier public setKeystore FormalParameter Modifier final ReferenceType String keystore StatementExpression Assignment This MemberReference keystore MemberReference keystore =	0
MethodDeclaration Modifier public debug FormalParameter Modifier final ReferenceType String message StatementExpression MethodInvocation task MemberReference message MemberReference Project MSG_DEBUG log	0
MethodDeclaration Modifier public setIiop FormalParameter ReferenceType String iiop StatementExpression MethodInvocation MethodInvocation iiop Literal "true" equals setIiop	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public init FormalParameter ReferenceType String tag FormalParameter ReferenceType AttributeList attrs SAXParseException TryStatement StatementExpression Assignment MemberReference task MethodInvocation helperImpl.project MemberReference tag createTask = CatchClause CatchClauseParameter BuildException e IfStatement BinaryOperation == MemberReference task Literal null BlockStatement StatementExpression Assignment MemberReference task ClassCreator ReferenceType UnknownElement MemberReference tag = StatementExpression MethodInvocation task MemberReference helperImpl project setProject StatementExpression MethodInvocation task MemberReference tag setTaskName StatementExpression MethodInvocation task ClassCreator ReferenceType Location MemberReference helperImpl locator setLocation StatementExpression MethodInvocation helperImpl MemberReference task MemberReference attrs configureId StatementExpression MethodInvocation task MemberReference target setOwningTarget StatementExpression MethodInvocation container MemberReference task addTask StatementExpression MethodInvocation task init StatementExpression Assignment MemberReference wrapper MethodInvocation task getRuntimeConfigurableWrapper = StatementExpression MethodInvocation wrapper MemberReference attrs setAttributes IfStatement BinaryOperation != MemberReference parentWrapper Literal null BlockStatement StatementExpression MethodInvocation parentWrapper MemberReference wrapper addChild	1
MethodDeclaration Modifier public save IfStatement MemberReference ! cacheDirty BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation != MemberReference cachefile Literal null MethodInvocation cache MethodInvocation hasMoreElements propertyNames BlockStatement TryStatement LocalVariableDeclaration ReferenceType BufferedOutputStream VariableDeclarator bos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference cachefile StatementExpression MethodInvocation cache MemberReference bos Literal null store StatementExpression MethodInvocation bos flush StatementExpression MethodInvocation bos close CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace StatementExpression Assignment MemberReference cacheDirty Literal false =	1
MethodDeclaration Modifier private addInputHandler FormalParameter ReferenceType Project project BuildException LocalVariableDeclaration ReferenceType VariableDeclarator handler Literal null IfStatement BinaryOperation == MemberReference inputHandlerClassname Literal null BlockStatement StatementExpression Assignment MemberReference handler ClassCreator ReferenceType DefaultInputHandler = BlockStatement StatementExpression Assignment MemberReference handler Cast ReferenceType MethodInvocation ClasspathUtils MemberReference inputHandlerClassname ClassReference MethodInvocation getClassLoader ReferenceType Main ClassReference ReferenceType newInstance = IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project MemberReference handler setProjectReference StatementExpression MethodInvocation project MemberReference handler setInputHandler	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation URLEncoder MethodInvocation getName encode Literal '=' MethodInvocation URLEncoder MethodInvocation getValue encode	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Map VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation ih getNestedElements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Class VariableDeclarator expect Cast ReferenceType Class MethodInvocation MemberReference name get StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Support for " MemberReference name Literal " in MemberReference expect assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "Return type of " MemberReference name MemberReference expect MethodInvocation ih MemberReference name getElementType assertEquals StatementExpression MethodInvocation MemberReference name remove StatementExpression MethodInvocation Literal "Found all" MethodInvocation isEmpty assertTrue	0
MethodDeclaration Modifier public ReferenceType String getUserId ReturnStatement MemberReference userId	0
MethodDeclaration Modifier public setVersion FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference version MemberReference b =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType Condition c StatementExpression MethodInvocation conditions MemberReference c addElement	0
MethodDeclaration Modifier private handleResources FormalParameter ReferenceType Handler h ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation resources iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation i next IfStatement MethodInvocation ! r isExists BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference r Literal " does not exist" MemberReference Project MSG_ERR log IfStatement MethodInvocation r isDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference r Literal " is a directory; length unspecified" MemberReference Project MSG_ERR log BlockStatement StatementExpression MethodInvocation h MemberReference r handle StatementExpression MethodInvocation h complete	1
MethodDeclaration Modifier public ReferenceType Class forceLoadSystemClass FormalParameter ReferenceType String classname ClassNotFoundException StatementExpression MethodInvocation BinaryOperation + Literal system loading " MemberReference classname MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Class VariableDeclarator theClass MethodInvocation MemberReference classname findLoadedClass IfStatement BinaryOperation == MemberReference theClass Literal null BlockStatement StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname findBaseClass = ReturnStatement MemberReference theClass	0
MethodDeclaration Modifier protected logAndAddFilesToCompile FormalParameter ReferenceType Commandline cmd StatementExpression MethodInvocation attributes BinaryOperation + Literal "Compilation " MethodInvocation cmd describeArguments MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator niceSourceList ClassCreator ReferenceType StringBuffer Literal "File" IfStatement BinaryOperation != MemberReference compileList length Literal 1 BlockStatement StatementExpression MethodInvocation niceSourceList Literal "s" append StatementExpression MethodInvocation niceSourceList Literal " to be compiled:" append StatementExpression MethodInvocation niceSourceList MemberReference StringUtils LINE_SEP append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference compileList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg MemberReference ArraySelector MemberReference i MethodInvocation getAbsolutePath compileList StatementExpression MethodInvocation cmd MethodInvocation MemberReference arg setValue createArgument StatementExpression MethodInvocation niceSourceList Literal " " append StatementExpression MethodInvocation niceSourceList MemberReference arg append StatementExpression MethodInvocation niceSourceList MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation attributes MethodInvocation niceSourceList toString MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test22" executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public testDirsWithSpaces Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation exists MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile assertTrue	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ChecksumAlgorithm VariableDeclarator algo ClassCreator ReferenceType ChecksumAlgorithm StatementExpression MethodInvocation algo Literal setAlgorithm StatementExpression MethodInvocation MemberReference algo doTest	0
MethodDeclaration Modifier public BasicType boolean getOrdinary ReturnStatement MemberReference mOrdinary	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType s StatementExpression MethodInvocation MethodInvocation MemberReference s append createPath	0
MethodDeclaration Modifier protected ReferenceType String getLabel LocalVariableDeclaration ReferenceType String VariableDeclarator shortLabel Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference label Literal null BinaryOperation > MethodInvocation label length Literal 0 BlockStatement StatementExpression Assignment MemberReference shortLabel BinaryOperation + MemberReference MethodInvocation getShortLabel = ReturnStatement MemberReference shortLabel	0
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation test3 LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference tempFile LocalVariableDeclaration Modifier final BasicType long VariableDeclarator origSize MethodInvocation file length StatementExpression MethodInvocation Literal "test4" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference tempFile2 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator newSize MethodInvocation file2 length StatementExpression MethodInvocation BinaryOperation * MemberReference origSize Literal 3 MemberReference newSize assertEquals	0
MethodDeclaration Modifier public ReferenceType DocletInfo IfStatement BinaryOperation == MemberReference doclet Literal null BlockStatement StatementExpression Assignment MemberReference doclet ClassCreator ReferenceType DocletInfo = ReturnStatement MemberReference doclet	0
MethodDeclaration Modifier protected ReferenceType File getManifestFile FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType File VariableDeclarator manifestFile ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference prefix Literal IfStatement MethodInvocation manifestFile exists BlockStatement ReturnStatement MemberReference manifestFile IfStatement BinaryOperation != MemberReference config manifest Literal null BlockStatement ReturnStatement MemberReference config manifest ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Collection FormalParameter ReferenceType Enumeration testList FormalParameter BasicType boolean runIndividual LocalVariableDeclaration ReferenceType Map VariableDeclarator testConfigurations ClassCreator ReferenceType HashMap WhileStatement MethodInvocation testList hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator test Cast ReferenceType JUnitTest MethodInvocation testList nextElement IfStatement MethodInvocation test MethodInvocation getProject shouldRun BlockStatement IfStatement BinaryOperation || MemberReference runIndividual MethodInvocation ! test getFork BlockStatement StatementExpression MethodInvocation MemberReference test execute BlockStatement LocalVariableDeclaration ReferenceType ForkedTestConfiguration VariableDeclarator c ClassCreator ReferenceType ForkedTestConfiguration MemberReference test LocalVariableDeclaration ReferenceType List VariableDeclarator l Cast ReferenceType List MethodInvocation testConfigurations MemberReference c get IfStatement BinaryOperation == MemberReference l Literal null BlockStatement StatementExpression Assignment MemberReference l ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation testConfigurations MemberReference c MemberReference l put StatementExpression MethodInvocation l MemberReference test add ReturnStatement MethodInvocation testConfigurations values	1
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation != This MemberReference Literal null BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal Literal " cannot coexist with a <inputmapper>" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot have > 1 <inputmapper>" StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public testXmlCatalogPath StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType ref StatementExpression Assignment This MemberReference ref MemberReference ref =	0
MethodDeclaration Modifier public Exception TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal "A path can contain pathelements to a file: " MemberReference e fail	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String language StatementExpression Assignment This MemberReference language MemberReference language =	0
MethodDeclaration Modifier private download FormalParameter ReferenceType String fromSshUri FormalParameter ReferenceType String JSchException IOException LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation MemberReference fromSshUri parseUri LocalVariableDeclaration ReferenceType Session VariableDeclarator session Literal null TryStatement StatementExpression Assignment MemberReference session MethodInvocation openSession = LocalVariableDeclaration ReferenceType ScpFromMessage VariableDeclarator message Literal null IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType ScpFromMessage MethodInvocation getVerbose MemberReference session MemberReference file MethodInvocation MethodInvocation MemberReference resolveFile getProject MethodInvocation fromSshUri Literal "*" endsWith = BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType MethodInvocation getVerbose MemberReference session MemberReference file MethodInvocation MethodInvocation MemberReference resolveFile getProject MethodInvocation fromSshUri Literal "*" endsWith = StatementExpression MethodInvocation BinaryOperation + Literal file: " MemberReference file log StatementExpression MethodInvocation message This StatementExpression MethodInvocation message execute IfStatement BinaryOperation != MemberReference session Literal null BlockStatement StatementExpression MethodInvocation session disconnect	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType PropertyChecker VariableDeclarator pcBar ClassCreator ReferenceType PropertyChecker Literal "bar" ArrayCreator ReferenceType String ArrayInitializer Literal null Literal "Bar" LocalVariableDeclaration ReferenceType PropertyChecker VariableDeclarator pcFoo ClassCreator ReferenceType PropertyChecker Literal "foo" ArrayCreator ReferenceType String ArrayInitializer Literal null Literal "Foo" StatementExpression MethodInvocation project MemberReference pcBar StatementExpression MethodInvocation project MemberReference pcFoo StatementExpression MethodInvocation Literal "multiple-property-file-children" executeTarget LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator aeBar MethodInvocation pcBar getError IfStatement BinaryOperation != MemberReference aeBar Literal null BlockStatement ThrowStatement MemberReference aeBar LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator aeFoo MethodInvocation pcFoo getError IfStatement BinaryOperation != MemberReference aeFoo Literal null BlockStatement ThrowStatement MemberReference aeFoo StatementExpression MethodInvocation project MemberReference pcBar removeBuildListener StatementExpression MethodInvocation project MemberReference pcFoo removeBuildListener	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "" expectLog	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "manifest file does not exist" expectBuildException	0
MethodDeclaration Modifier public setTimeout FormalParameter ReferenceType Integer i StatementExpression Assignment This MemberReference MemberReference i =	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference VALUES	0
MethodDeclaration Modifier public setKey FormalParameter ReferenceType String key StatementExpression Assignment This MemberReference key MemberReference key =	0
MethodDeclaration Modifier public push FormalParameter BasicType int c TryStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ preemptIndex MemberReference c = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e LocalVariableDeclaration BasicType int VariableDeclarator p2 ArrayCreator BasicType int BinaryOperation * MemberReference length Literal 2 StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference p2 Literal 0 MemberReference length arraycopy StatementExpression Assignment MemberReference MemberReference p2 = StatementExpression MethodInvocation MemberReference c push	0
MethodDeclaration Modifier private FormalParameter ReferenceType Project project FormalParameter ReferenceType File file FormalParameter BasicType int loops FormalParameter ReferenceType Long duration LocalVariableDeclaration ReferenceType Clip VariableDeclarator audioClip Literal null LocalVariableDeclaration ReferenceType AudioInputStream VariableDeclarator audioInputStream Literal null TryStatement StatementExpression Assignment MemberReference audioInputStream MethodInvocation AudioSystem MemberReference file getAudioInputStream = CatchClause CatchClauseParameter UnsupportedAudioFileException uafe StatementExpression MethodInvocation project BinaryOperation + Literal "Audio format is not yet supported: " MethodInvocation uafe getMessage log CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation ioe printStackTrace IfStatement BinaryOperation != MemberReference audioInputStream Literal null BlockStatement LocalVariableDeclaration ReferenceType AudioFormat VariableDeclarator format MethodInvocation audioInputStream getFormat LocalVariableDeclaration ReferenceType DataLine ReferenceType Info VariableDeclarator info ClassCreator ReferenceType DataLine ReferenceType Info ClassReference ReferenceType Clip MemberReference format MemberReference AudioSystem NOT_SPECIFIED TryStatement StatementExpression Assignment MemberReference audioClip Cast ReferenceType Clip MethodInvocation AudioSystem MemberReference info getLine = StatementExpression MethodInvocation audioClip This addLineListener StatementExpression MethodInvocation audioClip MemberReference audioInputStream open CatchClause CatchClauseParameter LineUnavailableException e StatementExpression MethodInvocation project Literal "The sound device is unavailable" log ReturnStatement CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace IfStatement BinaryOperation != MemberReference duration Literal null BlockStatement StatementExpression MethodInvocation MemberReference audioClip MethodInvocation duration longValue playClip BlockStatement StatementExpression MethodInvocation MemberReference audioClip MemberReference loops playClip StatementExpression MethodInvocation audioClip drain StatementExpression MethodInvocation audioClip close BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal "Can't get data from file " MethodInvocation file getName log	1
MethodDeclaration Modifier private static printTargets FormalParameter ReferenceType Project project FormalParameter ReferenceType Vector names FormalParameter ReferenceType Vector descriptions FormalParameter ReferenceType String heading FormalParameter BasicType int maxlen LocalVariableDeclaration ReferenceType String VariableDeclarator lSep MethodInvocation System Literal "line.separator" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator spaces Literal " " WhileStatement BinaryOperation <= MethodInvocation spaces length MemberReference maxlen BlockStatement StatementExpression Assignment MemberReference spaces MemberReference spaces += LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation msg BinaryOperation + BinaryOperation + MemberReference heading MemberReference lSep MemberReference lSep append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation names size MemberReference ++ i BlockStatement StatementExpression MethodInvocation msg Literal " " append StatementExpression MethodInvocation msg MethodInvocation names MemberReference i elementAt append IfStatement BinaryOperation != MemberReference descriptions Literal null BlockStatement StatementExpression MethodInvocation msg MethodInvocation spaces Literal 0 BinaryOperation + BinaryOperation - MemberReference maxlen Cast ReferenceType String MethodInvocation names MemberReference i elementAt Literal 2 substring append StatementExpression MethodInvocation msg MethodInvocation descriptions MemberReference i elementAt append StatementExpression MethodInvocation msg MemberReference lSep append StatementExpression MethodInvocation project MethodInvocation msg toString MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier protected logVerbose FormalParameter ReferenceType String msg StatementExpression MethodInvocation owner MethodInvocation MemberReference msg MemberReference Project MSG_VERBOSE log getProject	0
MethodDeclaration Modifier public init StatementExpression MethodInvocation MethodInvocation This getProject	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c/d" StatementExpression MethodInvocation MemberReference d assertFileIsPresent LocalVariableDeclaration ReferenceType String VariableDeclarator f BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/e/f" StatementExpression MethodInvocation MemberReference f assertFileIsPresent StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal "Removing orphan file:" indexOf getFullLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "error in URL" MemberReference ERROR_BAD_URL expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String getMessage ReturnStatement MemberReference message	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType HeadFilter VariableDeclarator newFilter ClassCreator ReferenceType HeadFilter MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation getLines StatementExpression MethodInvocation newFilter MethodInvocation getSkip setSkip StatementExpression MethodInvocation newFilter Literal true setInitialized ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public BasicType int getRecordSize ReturnStatement This MemberReference recordSize	0
MethodDeclaration Modifier protected ReferenceType String getOptions LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator options ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation options MethodInvocation MemberReference append Literal " " append IfStatement BinaryOperation != MemberReference dbName Literal null BlockStatement StatementExpression MethodInvocation options MethodInvocation MemberReference dbName append MethodInvocation Literal "\"" append Literal " -dbname \"" append IfStatement BinaryOperation != MemberReference dbSchema Literal null BlockStatement StatementExpression MethodInvocation options MethodInvocation MemberReference dbSchema append MethodInvocation Literal "\"" append Literal " \"" append IfStatement MemberReference codegen BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement MemberReference quiet BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement MemberReference novalidate BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement MemberReference nowarn BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement MemberReference noinform BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement MemberReference trace BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement MemberReference use35MappingRules BlockStatement StatementExpression MethodInvocation options Literal " append IfStatement BinaryOperation != MemberReference rmicOptions Literal null BlockStatement StatementExpression MethodInvocation options MethodInvocation MemberReference rmicOptions append MethodInvocation Literal "\"" append Literal " \"" append ReturnStatement MethodInvocation options toString	0
MethodDeclaration Modifier protected dieOnCircularReference StatementExpression MethodInvocation MethodInvocation getProject dieOnCircularReference	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "{modifiedselector" StatementExpression MethodInvocation buf MethodInvocation MemberReference update append Literal " update=" append StatementExpression MethodInvocation buf MethodInvocation MemberReference selectDirectories append Literal " seldirs=" append StatementExpression MethodInvocation buf MethodInvocation MemberReference cache append Literal " cache=" append StatementExpression MethodInvocation buf MethodInvocation MemberReference algorithm append Literal " algorithm=" append StatementExpression MethodInvocation buf MethodInvocation MemberReference append Literal " comparator=" append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "doublyNestedFilesetNoPatterns" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public BasicType char encodeBase64 FormalParameter BasicType byte data LocalVariableDeclaration BasicType char VariableDeclarator out ArrayCreator BasicType char BinaryOperation * BinaryOperation / BinaryOperation + MemberReference data length Literal 2 Literal 3 Literal 4 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator index Literal 0 BinaryOperation < MemberReference i MemberReference data length Assignment MemberReference i Literal 3 += Assignment MemberReference index Literal 4 += BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator quad Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator triple Literal false LocalVariableDeclaration BasicType int VariableDeclarator val BinaryOperation & Literal 0xFF Cast BasicType int MemberReference ArraySelector MemberReference i data StatementExpression Assignment MemberReference val Literal 8 <<= IfStatement BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference data length BlockStatement StatementExpression Assignment MemberReference val BinaryOperation & Literal 0xFF Cast BasicType int MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 data |= StatementExpression Assignment MemberReference triple Literal true = StatementExpression Assignment MemberReference val Literal 8 <<= IfStatement BinaryOperation < BinaryOperation + MemberReference i Literal 2 MemberReference data length BlockStatement StatementExpression Assignment MemberReference val BinaryOperation & Literal 0xFF Cast BasicType int MemberReference ArraySelector BinaryOperation + MemberReference i Literal 2 data |= StatementExpression Assignment MemberReference quad Literal true = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference index Literal 3 out MemberReference ArraySelector TernaryExpression MemberReference quad BinaryOperation & MemberReference val Literal 0x3F Literal 64 alphabet = StatementExpression Assignment MemberReference val Literal 6 >>= StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference index Literal 2 out MemberReference ArraySelector TernaryExpression MemberReference triple BinaryOperation & MemberReference val Literal 0x3F Literal 64 alphabet = StatementExpression Assignment MemberReference val Literal 6 >>= StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference index Literal 1 out MemberReference ArraySelector BinaryOperation & MemberReference val Literal 0x3F alphabet = StatementExpression Assignment MemberReference val Literal 6 >>= StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference index Literal 0 out MemberReference ArraySelector BinaryOperation & MemberReference val Literal 0x3F alphabet = ReturnStatement MemberReference out	1
MethodDeclaration Modifier public testName StatementExpression MethodInvocation Literal "name" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal false Literal false Literal false Literal false Literal false doTest	0
MethodDeclaration Modifier private BasicType boolean isSymlink FormalParameter ReferenceType File base FormalParameter ReferenceType String path ReturnStatement MethodInvocation MemberReference base MethodInvocation SelectorUtils MemberReference path tokenizePath isSymlink	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event StatementExpression MemberReference ++ targetCount	0
MethodDeclaration Modifier private getVersionCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getVersion Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getVersion setValue createArgument	0
MethodDeclaration Modifier final protected ReferenceType FileSet getImplicitFileSet ReturnStatement MemberReference fileset	0
MethodDeclaration Modifier protected ReferenceType String getTargetTypeParameter IfStatement MethodInvocation MemberReference targetType notEmpty BlockStatement ReturnStatement BinaryOperation + Literal "/target:" MemberReference targetType BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType RegexpMatcher newRegexpMatcher BuildException ReturnStatement MethodInvocation Literal null newRegexpMatcher	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement This MemberReference name	0
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String description StatementExpression Assignment This MemberReference description MemberReference description =	0
MethodDeclaration Modifier public ReferenceType getInputHandler ReturnStatement MemberReference inputHandler	0
MethodDeclaration Modifier protected zipFile FormalParameter ReferenceType InputStream in FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType long lastModified FormalParameter ReferenceType File fromArchive FormalParameter BasicType int mode IOException IfStatement MethodInvocation entries MemberReference vPath contains BlockStatement IfStatement MethodInvocation duplicate Literal "preserve" equals BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference vPath Literal " already added, skipping" MemberReference Project MSG_INFO log ReturnStatement IfStatement MethodInvocation duplicate Literal "fail" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Duplicate file " MemberReference vPath Literal " was found and the duplicate " Literal is 'fail'." BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "duplicate file " MemberReference vPath Literal " found, adding." MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "adding entry " MemberReference vPath MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation entries MemberReference vPath MemberReference vPath put IfStatement MemberReference ! skipWriting BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze ClassCreator ReferenceType ZipEntry MemberReference vPath StatementExpression MethodInvocation ze MemberReference lastModified setTime StatementExpression MethodInvocation ze TernaryExpression MemberReference doCompress MemberReference ZipEntry DEFLATED MemberReference ZipEntry STORED setMethod IfStatement BinaryOperation && MethodInvocation ! zOut isSeekable MemberReference ! doCompress BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator size Literal 0 LocalVariableDeclaration ReferenceType CRC32 VariableDeclarator cal ClassCreator ReferenceType CRC32 IfStatement MethodInvocation ! in markSupported BlockStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator bos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression Assignment MemberReference size MemberReference count += StatementExpression MethodInvocation cal MemberReference buffer Literal 0 MemberReference count update StatementExpression MethodInvocation bos MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read = StatementExpression Assignment MemberReference in ClassCreator ReferenceType ByteArrayInputStream MethodInvocation bos toByteArray = BlockStatement StatementExpression MethodInvocation in MemberReference Integer MAX_VALUE mark LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression Assignment MemberReference size MemberReference count += StatementExpression MethodInvocation cal MemberReference buffer Literal 0 MemberReference count update StatementExpression Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read = StatementExpression MethodInvocation in reset StatementExpression MethodInvocation ze MemberReference size setSize StatementExpression MethodInvocation ze MethodInvocation cal getValue setCrc StatementExpression MethodInvocation ze MemberReference mode setUnixMode StatementExpression MethodInvocation zOut MemberReference ze putNextEntry LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement IfStatement BinaryOperation != MemberReference count Literal 0 BlockStatement StatementExpression MethodInvocation zOut MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read = StatementExpression MethodInvocation addedFiles MemberReference vPath addElement	1
MethodDeclaration Modifier public BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileSet MethodInvocation MethodInvocation getProject getRef ReturnStatement BinaryOperation + MethodInvocation MethodInvocation getIncludedFilesCount getDirectoryScanner MethodInvocation MethodInvocation getIncludedDirsCount getDirectoryScanner	1
MethodDeclaration Modifier public testTokenfilter IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static ReferenceType String ReturnStatement Cast ReferenceType String MethodInvocation defaultExcludes ArrayCreator ReferenceType String MethodInvocation defaultExcludes size toArray	0
MethodDeclaration Modifier public addMajority FormalParameter ReferenceType MajoritySelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier private compareFiles FormalParameter ReferenceType DirectoryScanner ds FormalParameter ReferenceType String expectedFiles FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator includedFiles MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ds getIncludedDirectories StatementExpression MethodInvocation Literal "file present: " MemberReference expectedFiles length MemberReference includedFiles length assertEquals StatementExpression MethodInvocation Literal "directories present: " MemberReference length MemberReference length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference includedFiles length MemberReference ++ counter BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference counter includedFiles MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference File separatorChar Literal '/' replace includedFiles = StatementExpression MethodInvocation Arrays MemberReference includedFiles sort ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference counter MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference File separatorChar Literal '/' replace = StatementExpression MethodInvocation Arrays MemberReference sort ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference includedFiles length MemberReference ++ counter BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference counter expectedFiles MemberReference ArraySelector MemberReference counter includedFiles assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference counter MemberReference ArraySelector MemberReference counter assertEquals StatementExpression MemberReference ++ counter	0
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation && BinaryOperation == MethodInvocation event getException Literal null BinaryOperation != MemberReference fileSuccess Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation event getProject MemberReference fileSuccess MemberReference loopsSuccess MemberReference durationSuccess IfStatement BinaryOperation && BinaryOperation != MethodInvocation event getException Literal null BinaryOperation != MemberReference fileFail Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation event getProject MemberReference fileFail MemberReference loopsFail MemberReference durationFail	0
MethodDeclaration Modifier public FormalParameter ReferenceType String perm StatementExpression MethodInvocation MethodInvocation MemberReference perm setValue createArg StatementExpression Assignment MemberReference havePerm Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier private translate BuildException LocalVariableDeclaration BasicType int VariableDeclarator filesProcessed Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator srcFiles MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference srcFiles length MemberReference ++ j BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dest MethodInvocation FILE_UTILS MemberReference toDir MemberReference ArraySelector MemberReference j srcFiles resolveFile TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator destDir ClassCreator ReferenceType File MethodInvocation dest getParent IfStatement MethodInvocation ! destDir exists BlockStatement StatementExpression MethodInvocation destDir mkdirs CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Exception occurred while trying to check/create " Literal " parent directory. " MethodInvocation e getMessage MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference destLastModified MethodInvocation dest lastModified = LocalVariableDeclaration ReferenceType File VariableDeclarator src MethodInvocation FILE_UTILS MethodInvocation ds getBasedir MemberReference ArraySelector MemberReference j srcFiles resolveFile StatementExpression Assignment MemberReference srcLastModified MethodInvocation src lastModified = LocalVariableDeclaration BasicType boolean VariableDeclarator needsWork BinaryOperation || MemberReference forceOverwrite BinaryOperation < MemberReference destLastModified MemberReference srcLastModified IfStatement MemberReference ! needsWork BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator icounter Literal 0 BinaryOperation < MemberReference icounter MemberReference BUNDLE_MAX_ALTERNATIVES MemberReference ++ icounter BlockStatement StatementExpression Assignment MemberReference needsWork BinaryOperation < MemberReference destLastModified MemberReference ArraySelector MemberReference icounter bundleLastModified = IfStatement MemberReference needsWork BlockStatement BreakStatement IfStatement MemberReference needsWork BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Processing " MemberReference ArraySelector MemberReference j srcFiles MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference dest LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator out ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference fos MemberReference destEncoding LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference src LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference fis MemberReference srcEncoding LocalVariableDeclaration ReferenceType String VariableDeclarator line LocalVariableDeclaration ReferenceType LineTokenizer VariableDeclarator lineTokenizer ClassCreator ReferenceType LineTokenizer StatementExpression MethodInvocation lineTokenizer Literal true setIncludeDelims StatementExpression Assignment MemberReference line MethodInvocation lineTokenizer MemberReference in getToken = WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator startIndex MethodInvocation line MemberReference startToken indexOf WhileStatement BinaryOperation && BinaryOperation >= MemberReference startIndex Literal 0 BinaryOperation <= BinaryOperation + MemberReference startIndex MethodInvocation startToken length MethodInvocation line length BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator replace Literal null LocalVariableDeclaration BasicType int VariableDeclarator endIndex MethodInvocation line MemberReference endToken BinaryOperation + MemberReference startIndex MethodInvocation startToken length indexOf IfStatement BinaryOperation < MemberReference endIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference startIndex Literal 1 += BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation line BinaryOperation + MemberReference startIndex MethodInvocation startToken length MemberReference endIndex substring LocalVariableDeclaration BasicType boolean VariableDeclarator validToken Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 0 BinaryOperation && BinaryOperation < MemberReference k MethodInvocation token length MemberReference validToken MemberReference ++ k BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation token MemberReference k charAt IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference c Literal ':' BinaryOperation == MemberReference c Literal '=' MethodInvocation Character MemberReference c isSpaceChar BlockStatement StatementExpression Assignment MemberReference validToken Literal false = IfStatement MemberReference ! validToken BlockStatement StatementExpression Assignment MemberReference startIndex Literal 1 += BlockStatement IfStatement MethodInvocation resourceMap MemberReference token containsKey BlockStatement StatementExpression Assignment MemberReference replace Cast ReferenceType String MethodInvocation resourceMap MemberReference token get = BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Replacement string missing for: " MemberReference token MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference replace BinaryOperation + BinaryOperation + MemberReference startToken MemberReference token MemberReference endToken = StatementExpression Assignment MemberReference line BinaryOperation + BinaryOperation + MethodInvocation line Literal 0 MemberReference startIndex substring MemberReference replace MethodInvocation line BinaryOperation + MemberReference endIndex MethodInvocation endToken length substring = StatementExpression Assignment MemberReference startIndex MethodInvocation replace length += StatementExpression Assignment MemberReference startIndex MethodInvocation line MemberReference startToken MemberReference startIndex indexOf = StatementExpression MethodInvocation out MemberReference line write StatementExpression Assignment MemberReference line MethodInvocation lineTokenizer MemberReference in getToken = IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close StatementExpression MemberReference ++ filesProcessed BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference ArraySelector MemberReference j srcFiles Literal " as destination file is up to date" MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe getMessage MethodInvocation getLocation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Translation performed on " MemberReference filesProcessed Literal " file(s)." MemberReference Project MSG_DEBUG log	1
MethodDeclaration Modifier public initMessageDigest IfStatement BinaryOperation != MemberReference messageDigest Literal null BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference provider Literal null Literal ! MethodInvocation MemberReference provider equals "" Literal ! MethodInvocation MemberReference provider equals "null" BlockStatement TryStatement StatementExpression Assignment MemberReference messageDigest MethodInvocation MessageDigest MemberReference algorithm MemberReference provider getInstance = CatchClause CatchClauseParameter NoSuchAlgorithmException noalgo ThrowStatement ClassCreator ReferenceType BuildException MemberReference noalgo CatchClause CatchClauseParameter NoSuchProviderException noprovider ThrowStatement ClassCreator ReferenceType BuildException MemberReference noprovider BlockStatement TryStatement StatementExpression Assignment MemberReference messageDigest MethodInvocation MessageDigest MemberReference algorithm getInstance = CatchClause CatchClauseParameter NoSuchAlgorithmException noalgo ThrowStatement ClassCreator ReferenceType BuildException MemberReference noalgo	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Regexp VariableDeclarator reg Cast ReferenceType Regexp MethodInvocation getReg StatementExpression MethodInvocation reg MemberReference pattern setPattern StatementExpression MethodInvocation MethodInvocation reg MemberReference test matches assertTrue StatementExpression MethodInvocation Literal MethodInvocation reg MemberReference test Literal "ab\\2d\\1f" MemberReference Regexp substitute assertEquals	0
MethodDeclaration Modifier public synchronized setInput FormalParameter ReferenceType File input StatementExpression Assignment This MemberReference input MemberReference input =	0
MethodDeclaration Modifier public ReferenceType Enumeration getOutputProperties ReturnStatement MethodInvocation outputProperties elements	0
MethodDeclaration Modifier public delete StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier protected configureLiaison FormalParameter ReferenceType Resource stylesheet BuildException IfStatement BinaryOperation && MemberReference stylesheetLoaded MemberReference reuseLoadedStylesheet BlockStatement ReturnStatement StatementExpression Assignment MemberReference stylesheetLoaded Literal true = TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Loading stylesheet " MemberReference stylesheet MemberReference Project MSG_INFO log IfStatement BinaryOperation instanceof MemberReference liaison ReferenceType XSLTLiaison2 BlockStatement StatementExpression Cast ReferenceType XSLTLiaison2 MemberReference liaison IfStatement BinaryOperation instanceof MemberReference liaison ReferenceType XSLTLiaison3 BlockStatement StatementExpression Cast ReferenceType XSLTLiaison3 MemberReference liaison BlockStatement IfStatement BinaryOperation instanceof MemberReference stylesheet ReferenceType FileResource BlockStatement StatementExpression MethodInvocation liaison Cast ReferenceType FileResource MemberReference stylesheet setStylesheet BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation liaison MethodInvocation toString getClass Literal " accepts the stylesheet only as a file" MethodInvocation getLocation ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation params elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Param VariableDeclarator p Cast ReferenceType Param MethodInvocation e nextElement IfStatement MethodInvocation p shouldUse BlockStatement StatementExpression MethodInvocation liaison MethodInvocation p getName MethodInvocation p getExpression addParam CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Failed to transform using stylesheet " MemberReference stylesheet MemberReference Project MSG_INFO log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public testParentDiffersInCaseScanningInsensitive LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/" Literal "ALPHA/beta/" setIncludes StatementExpression MethodInvocation ds Literal false setCaseSensitive StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public setValue FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference value TernaryExpression MemberReference value MemberReference Boolean TRUE MemberReference Boolean FALSE =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression Assignment MemberReference jvm MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean match FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType String VariableDeclarator vpath MethodInvocation path MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace ReturnStatement BinaryOperation && MethodInvocation MemberReference vpath isIncluded MethodInvocation ! MemberReference vpath isExcluded	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name ClassCreator ReferenceType StringBuffer MemberReference name =	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier protected ReferenceType String getOutput ReturnStatement TernaryExpression BinaryOperation != MemberReference outputFileName Literal null BinaryOperation + MemberReference FLAG_OUTPUT MemberReference outputFileName Literal ""	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType FileList VariableDeclarator f ClassCreator ReferenceType FileList StatementExpression MethodInvocation project Literal "dummy" MemberReference f StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummy" setRefid TryStatement StatementExpression MethodInvocation f MemberReference project getDir StatementExpression MethodInvocation Literal "Can make FileList a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f MemberReference project getFiles StatementExpression MethodInvocation Literal "Can make FileList a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType FileList VariableDeclarator f1 ClassCreator ReferenceType FileList StatementExpression MethodInvocation project Literal "dummy1" MemberReference f1 StatementExpression MethodInvocation f1 ClassCreator ReferenceType Literal "dummy2" setRefid LocalVariableDeclaration ReferenceType FileList VariableDeclarator f2 ClassCreator ReferenceType FileList StatementExpression MethodInvocation project Literal "dummy2" MemberReference f2 StatementExpression MethodInvocation f2 ClassCreator ReferenceType Literal "dummy3" setRefid LocalVariableDeclaration ReferenceType FileList VariableDeclarator f3 ClassCreator ReferenceType FileList StatementExpression MethodInvocation project Literal "dummy3" MemberReference f3 StatementExpression MethodInvocation f3 ClassCreator ReferenceType Literal "dummy1" setRefid TryStatement StatementExpression MethodInvocation f1 MemberReference project getDir StatementExpression MethodInvocation Literal "Can make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f1 MemberReference project getFiles StatementExpression MethodInvocation Literal "Can make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f1 ClassCreator ReferenceType FileList = StatementExpression MethodInvocation project Literal "dummy1" MemberReference f1 StatementExpression MethodInvocation f1 ClassCreator ReferenceType Literal "dummy2" setRefid StatementExpression Assignment MemberReference f2 ClassCreator ReferenceType FileList = StatementExpression MethodInvocation project Literal "dummy2" MemberReference f2 StatementExpression MethodInvocation f2 ClassCreator ReferenceType Literal "dummy3" setRefid StatementExpression Assignment MemberReference f3 ClassCreator ReferenceType FileList = StatementExpression MethodInvocation project Literal "dummy3" MemberReference f3 StatementExpression MethodInvocation f3 MethodInvocation project Literal "." resolveFile setDir LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation f1 MemberReference project getDir StatementExpression MethodInvocation Literal is basedir" MemberReference dir MethodInvocation project getBaseDir assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Classname remote StatementExpression Assignment This MemberReference remote MemberReference remote =	0
MethodDeclaration Modifier public ReferenceType String selectionString FormalParameter ReferenceType File basedir FormalParameter ReferenceType File files FormalParameter ReferenceType FileSelector selector LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator x Literal 0 BinaryOperation < MemberReference x MemberReference files length MemberReference ++ x BlockStatement IfStatement MethodInvocation selector MemberReference basedir MemberReference ArraySelector MemberReference x filenames MemberReference ArraySelector MemberReference x files isSelected BlockStatement StatementExpression MethodInvocation buf Literal 'T' append BlockStatement StatementExpression MethodInvocation buf Literal 'F' append ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType TestRunEvent evt StatementExpression Assignment MemberReference programStart MethodInvocation evt = LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator date MethodInvocation MemberReference programStart MemberReference ISO8601_DATETIME_PATTERN format StatementExpression MethodInvocation rootElement Literal MemberReference date setAttribute	0
MethodDeclaration Modifier public BasicType boolean eval IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The file attribute must be set." IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation ! file exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "The file \"" MethodInvocation file getAbsolutePath Literal "\" does not exist." MemberReference Project MSG_VERBOSE log ReturnStatement Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator r Literal false TryStatement StatementExpression Assignment MemberReference r MethodInvocation MemberReference file MemberReference name isSigned = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Got IOException reading file \"" MethodInvocation file getAbsolutePath Literal "\"" MemberReference e MemberReference Project MSG_WARN log IfStatement MemberReference r BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "File \"" MethodInvocation file getAbsolutePath Literal "\" is signed." MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference r	1
MethodDeclaration Modifier protected ReferenceType String getExtraOptionsParameters LocalVariableDeclaration ReferenceType String VariableDeclarator extra MethodInvocation getExtraOptionsParameter ReturnStatement TernaryExpression BinaryOperation == MemberReference extra Literal null Literal null MethodInvocation Commandline MemberReference extra translateCommandline	0
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier public FormalParameter ReferenceType String outputProp StatementExpression MethodInvocation redirector MemberReference outputProp setOutputProperty StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType value StatementExpression Assignment MemberReference parts ArrayCreator ReferenceType String ArrayInitializer MethodInvocation value toString =	0
MethodDeclaration Modifier public append FormalParameter ReferenceType other IfStatement BinaryOperation == MemberReference other Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference other add	0
MethodDeclaration Modifier protected ReferenceType ArrayList gatherFromArchive FormalParameter ReferenceType File zip LocalVariableDeclaration ReferenceType ZipScanner VariableDeclarator zs ClassCreator ReferenceType ZipScanner StatementExpression MethodInvocation zs MemberReference zip setBasedir StatementExpression MethodInvocation zs MethodInvocation patterns MethodInvocation getProject getIncludePatterns setIncludes StatementExpression MethodInvocation zs MethodInvocation patterns MethodInvocation getProject getExcludePatterns setExcludes StatementExpression MethodInvocation zs scan LocalVariableDeclaration ReferenceType String VariableDeclarator included MethodInvocation zs getIncludedFiles ReturnStatement MethodInvocation MemberReference included testClassNameFromFile	1
MethodDeclaration Modifier private static ReferenceType Extension getExtension FormalParameter Modifier final ReferenceType String prefix FormalParameter Modifier final ReferenceType Attributes attributes LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator nameKey BinaryOperation + MemberReference prefix MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation attributes MemberReference nameKey getValue getTrimmedString IfStatement BinaryOperation == Literal null MemberReference name BlockStatement ReturnStatement Literal null LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specVendorKey BinaryOperation + MemberReference prefix MemberReference SPECIFICATION_VENDOR LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specVendor MethodInvocation MethodInvocation attributes MemberReference specVendorKey getValue getTrimmedString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specVersionKey BinaryOperation + MemberReference prefix MemberReference SPECIFICATION_VERSION LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specVersion MethodInvocation MethodInvocation attributes MemberReference specVersionKey getValue getTrimmedString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVersionKey BinaryOperation + MemberReference prefix MemberReference IMPLEMENTATION_VERSION LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVersion MethodInvocation MethodInvocation attributes MemberReference impVersionKey getValue getTrimmedString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVendorKey BinaryOperation + MemberReference prefix MemberReference IMPLEMENTATION_VENDOR LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVendor MethodInvocation MethodInvocation attributes MemberReference impVendorKey getValue getTrimmedString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVendorIDKey BinaryOperation + MemberReference prefix MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impVendorId MethodInvocation MethodInvocation attributes MemberReference impVendorIDKey getValue getTrimmedString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impURLKey BinaryOperation + MemberReference prefix MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator impURL MethodInvocation MethodInvocation attributes MemberReference impURLKey getValue getTrimmedString ReturnStatement ClassCreator ReferenceType Extension MemberReference name MemberReference specVersion MemberReference specVendor MemberReference impVersion MemberReference impVendor MemberReference impVendorId MemberReference impURL	0
MethodDeclaration Modifier public setIiop FormalParameter BasicType boolean iiop StatementExpression Assignment This MemberReference iiop MemberReference iiop =	0
MethodDeclaration Modifier public ReferenceType Comparison getWhen ReturnStatement MemberReference when	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference sourceResources	0
MethodDeclaration Modifier public addError FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType String VariableDeclarator testName MethodInvocation JUnitVersionHelper MemberReference test getTestCaseName StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference testName Literal ", " MethodInvocation t getMessage Literal ")" IfStatement MemberReference haltOnError BlockStatement StatementExpression MethodInvocation res stop	0
MethodDeclaration Modifier private ReferenceType String createOutputFileName FormalParameter ReferenceType File destFile FormalParameter ReferenceType String optionalOutputFile FormalParameter ReferenceType String outputDir StatementExpression Assignment MemberReference optionalOutputFile MethodInvocation MemberReference optionalOutputFile MemberReference outputDir validateOutputFile = LocalVariableDeclaration ReferenceType String VariableDeclarator jjtreeFile MethodInvocation destFile MethodInvocation Literal '\\' Literal '/' replace getAbsolutePath IfStatement BinaryOperation || BinaryOperation == MemberReference optionalOutputFile Literal null MethodInvocation optionalOutputFile Literal "" equals BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator filePos MethodInvocation jjtreeFile Literal "/" lastIndexOf IfStatement BinaryOperation >= MemberReference filePos Literal 0 BlockStatement StatementExpression Assignment MemberReference jjtreeFile MethodInvocation jjtreeFile BinaryOperation + MemberReference filePos Literal 1 substring = LocalVariableDeclaration BasicType int VariableDeclarator suffixPos MethodInvocation jjtreeFile Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference suffixPos Literal - 1 BlockStatement StatementExpression Assignment MemberReference optionalOutputFile BinaryOperation + MemberReference jjtreeFile MemberReference DEFAULT_SUFFIX = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentSuffix MethodInvocation jjtreeFile MemberReference suffixPos substring IfStatement MethodInvocation currentSuffix MemberReference DEFAULT_SUFFIX equals BlockStatement StatementExpression Assignment MemberReference optionalOutputFile BinaryOperation + MemberReference jjtreeFile MemberReference DEFAULT_SUFFIX = BlockStatement StatementExpression Assignment MemberReference optionalOutputFile BinaryOperation + MethodInvocation jjtreeFile Literal 0 MemberReference suffixPos substring MemberReference DEFAULT_SUFFIX = IfStatement BinaryOperation || BinaryOperation == MemberReference outputDir Literal null MethodInvocation outputDir Literal "" equals BlockStatement StatementExpression Assignment MemberReference outputDir MethodInvocation getDefaultOutputDirectory = ReturnStatement BinaryOperation + BinaryOperation + MemberReference outputDir Literal "/" MemberReference optionalOutputFile	1
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference debugLevel MemberReference v =	0
MethodDeclaration Modifier public testDefaultRevoked StatementExpression MethodInvocation perms setSecurityManager TryStatement StatementExpression MethodInvocation System Literal "os.name" getProperty StatementExpression MethodInvocation Literal "Could perform an action that should have been forbidden." fail CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation perms restoreSecurityManager	1
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a StatementExpression MethodInvocation checkChildrenAllowed IfStatement BinaryOperation != MemberReference archive Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "you must not specify more than one" Literal " archive" IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only single argument resource collections" Literal " are supported as archives" StatementExpression Assignment MemberReference archive Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator =	0
MethodDeclaration Modifier public setOnError FormalParameter ReferenceType StatementExpression Assignment This MemberReference MethodInvocation getIndex =	0
MethodDeclaration Modifier public update FormalParameter ReferenceType LineEvent event IfStatement MethodInvocation event MethodInvocation MemberReference LineEvent.Type equals getType BlockStatement LocalVariableDeclaration ReferenceType Line VariableDeclarator line MethodInvocation event getLine StatementExpression MethodInvocation line close IfStatement MethodInvocation event MethodInvocation MemberReference LineEvent.Type CLOSE equals getType BlockStatement	1
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement BinaryOperation < MemberReference pos MemberReference files length	0
MethodDeclaration Modifier public setJavac FormalParameter ReferenceType String aString StatementExpression Assignment MemberReference javac MemberReference aString =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "doubledefault" Literal is is expectLog	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration * @see */ Modifier public targetFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation BinaryOperation + Literal "<< TARGET FINISHED -- " MethodInvocation event getTarget MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType String VariableDeclarator time MethodInvocation BinaryOperation - MethodInvocation System currentTimeMillis MemberReference targetStartTime formatTime StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MethodInvocation event getTarget Literal ": duration " MemberReference time MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation flush	1
MethodDeclaration Modifier public init StatementExpression Assignment MemberReference callee ClassCreator ReferenceType Ant This = StatementExpression MethodInvocation callee init	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference incremental	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal addArgIf	0
MethodDeclaration Modifier public setKeepgeneric FormalParameter BasicType boolean aBoolean StatementExpression Assignment MemberReference keepgeneric MemberReference aBoolean =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal "P4Label exec:" MemberReference Project MSG_INFO log IfStatement BinaryOperation || BinaryOperation == MemberReference P4View Literal null BinaryOperation < MethodInvocation P4View length Literal 1 BlockStatement StatementExpression MethodInvocation Literal "View not set, assuming //depot/..." MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference P4View Literal "//depot/..." = BlockStatement StatementExpression Assignment MemberReference P4View MethodInvocation StringUtils MemberReference P4View Literal ":" Literal "\n\t" replace = StatementExpression Assignment MemberReference P4View MethodInvocation StringUtils MemberReference P4View Literal ";" Literal "\n\t" replace = IfStatement BinaryOperation || BinaryOperation == MemberReference desc Literal null BinaryOperation < MethodInvocation desc length Literal 1 BlockStatement StatementExpression MethodInvocation Literal "Label Description not set, assuming 'AntLabel'" MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference desc Literal "AntLabel" = IfStatement BinaryOperation && BinaryOperation != MemberReference lock Literal null MethodInvocation ! lock Literal "locked" equalsIgnoreCase BlockStatement StatementExpression MethodInvocation Literal "lock attribute invalid - ignoring" MemberReference Project MSG_WARN log IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation < MethodInvocation name length Literal 1 BlockStatement LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator formatter ClassCreator ReferenceType SimpleDateFormat Literal "yyyy.MM.dd-hh:mm" LocalVariableDeclaration ReferenceType Date VariableDeclarator now ClassCreator ReferenceType Date StatementExpression Assignment MemberReference name BinaryOperation + Literal "AntLabel-" MethodInvocation formatter MemberReference now format = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "name not set, assuming '" MemberReference name Literal "'" MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType String VariableDeclarator newLabel BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Label: " MemberReference name Literal "\nDescription: " MemberReference desc Literal "\nOptions: unlocked" Literal "\nView: \n\t" MemberReference P4View LocalVariableDeclaration ReferenceType P4Handler VariableDeclarator handler ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation handler MemberReference newLabel setOutput StatementExpression MethodInvocation Literal "label -i" MemberReference handler execP4Command StatementExpression MethodInvocation BinaryOperation + Literal "labelsync -l " MemberReference name ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log execP4Command StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Created Label " MemberReference name Literal " (" MemberReference desc Literal ") with view:\n" MemberReference P4View MemberReference Project MSG_INFO log IfStatement BinaryOperation && BinaryOperation != MemberReference lock Literal null MethodInvocation lock Literal "locked" equalsIgnoreCase BlockStatement StatementExpression MethodInvocation Literal "Modifying lock status to 'locked'" MemberReference Project MSG_INFO log LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator labelSpec ClassCreator ReferenceType StringBuffer StatementExpression Assignment MemberReference handler ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation util Literal "/^Options:/" MemberReference line match BlockStatement StatementExpression Assignment MemberReference line BinaryOperation + Literal "Options: " MemberReference lock = StatementExpression MethodInvocation labelSpec BinaryOperation + MemberReference line Literal "\n" append = StatementExpression MethodInvocation BinaryOperation + Literal "label -o " MemberReference name MemberReference handler execP4Command StatementExpression MethodInvocation MethodInvocation labelSpec toString MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation Literal "Now label..." MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference handler ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log = StatementExpression MethodInvocation handler MethodInvocation labelSpec toString setOutput StatementExpression MethodInvocation Literal "label -i" MemberReference handler execP4Command	1
MethodDeclaration Modifier public BasicType int read FormalParameter Modifier final BasicType byte dest FormalParameter Modifier final BasicType int offs FormalParameter Modifier final BasicType int len IOException IfStatement BinaryOperation < MemberReference offs Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + BinaryOperation + Literal "offs(" MemberReference offs Literal ") < 0." IfStatement BinaryOperation < MemberReference len Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + BinaryOperation + Literal "len(" MemberReference len Literal ") < 0." IfStatement BinaryOperation > BinaryOperation + MemberReference offs MemberReference len MemberReference dest length BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "offs(" MemberReference offs Literal ") + len(" MemberReference len Literal ") > dest.length(" MemberReference dest length Literal ")." IfStatement BinaryOperation == This MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "stream closed" LocalVariableDeclaration Modifier final BasicType int VariableDeclarator hi BinaryOperation + MemberReference offs MemberReference len LocalVariableDeclaration BasicType int VariableDeclarator destOffs MemberReference offs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator b BinaryOperation && BinaryOperation < MemberReference destOffs MemberReference hi BinaryOperation >= Assignment MemberReference b MethodInvocation read0 = Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ destOffs dest Cast BasicType byte MemberReference b = ReturnStatement TernaryExpression BinaryOperation == MemberReference destOffs MemberReference offs Literal - 1 BinaryOperation - MemberReference destOffs MemberReference offs	1
MethodDeclaration Modifier public openElement FormalParameter ReferenceType Element element FormalParameter ReferenceType Writer out FormalParameter BasicType int indent FormalParameter ReferenceType String indentWith FormalParameter BasicType boolean hasChildren IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference indent MemberReference ++ i BlockStatement StatementExpression MethodInvocation out MemberReference indentWith write StatementExpression MethodInvocation out Literal "<" write IfStatement MemberReference namespacePolicy qualifyElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation MemberReference element getNamespaceURI LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Cast ReferenceType String MethodInvocation nsPrefixMap MemberReference uri get IfStatement BinaryOperation == MemberReference prefix Literal null BlockStatement IfStatement MethodInvocation nsPrefixMap isEmpty BlockStatement StatementExpression Assignment MemberReference prefix Literal "" = BlockStatement StatementExpression Assignment MemberReference prefix BinaryOperation + MemberReference NS MemberReference nextPrefix = StatementExpression MethodInvocation nsPrefixMap MemberReference uri MemberReference prefix put StatementExpression MethodInvocation MemberReference element MemberReference uri addNSDefinition IfStatement Literal ! MethodInvocation MemberReference prefix equals "" BlockStatement StatementExpression MethodInvocation out MemberReference prefix write StatementExpression MethodInvocation out Literal ":" write StatementExpression MethodInvocation out MethodInvocation element getTagName write LocalVariableDeclaration ReferenceType NamedNodeMap VariableDeclarator attrs MethodInvocation element getAttributes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Attr VariableDeclarator attr Cast ReferenceType Attr MethodInvocation attrs MemberReference i item StatementExpression MethodInvocation out Literal " " write IfStatement MemberReference namespacePolicy qualifyAttributes BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation MemberReference attr getNamespaceURI LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Cast ReferenceType String MethodInvocation nsPrefixMap MemberReference uri get IfStatement BinaryOperation == MemberReference prefix Literal null BlockStatement StatementExpression Assignment MemberReference prefix BinaryOperation + MemberReference NS MemberReference nextPrefix = StatementExpression MethodInvocation nsPrefixMap MemberReference uri MemberReference prefix put StatementExpression MethodInvocation MemberReference element MemberReference uri addNSDefinition StatementExpression MethodInvocation out MemberReference prefix write StatementExpression MethodInvocation out Literal ":" write StatementExpression MethodInvocation out MethodInvocation attr getName write StatementExpression MethodInvocation out Literal "=\"" write StatementExpression MethodInvocation out MethodInvocation MethodInvocation attr getValue encode write StatementExpression MethodInvocation out Literal "\"" write LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al Cast ReferenceType ArrayList MethodInvocation nsURIByElement MemberReference element get IfStatement BinaryOperation != MemberReference al Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation al iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri Cast ReferenceType String MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Cast ReferenceType String MethodInvocation nsPrefixMap MemberReference uri get StatementExpression MethodInvocation out Literal " xmlns" write IfStatement Literal ! MethodInvocation MemberReference prefix equals "" BlockStatement StatementExpression MethodInvocation out Literal ":" write StatementExpression MethodInvocation out MemberReference prefix write StatementExpression MethodInvocation out Literal "=\"" write StatementExpression MethodInvocation out MemberReference uri write StatementExpression MethodInvocation out Literal "\"" write IfStatement MemberReference hasChildren BlockStatement StatementExpression MethodInvocation out Literal ">" write BlockStatement StatementExpression MethodInvocation MemberReference element StatementExpression MethodInvocation out Literal " />" write StatementExpression MethodInvocation out MemberReference lSep write StatementExpression MethodInvocation out flush	1
MethodDeclaration Modifier public execute BuildException TryStatement LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "srcdir attribute must be set" MethodInvocation getLocation StatementExpression Assignment MemberReference srcPathList MethodInvocation list = IfStatement BinaryOperation == MemberReference srcPathList length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "srcdir attribute must be non-empty" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference destPath Literal null BlockStatement StatementExpression Assignment MemberReference destPath MemberReference = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cache Literal null MethodInvocation cache exists MethodInvocation ! cache isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The cache, if specified, must " Literal "point to a directory" IfStatement BinaryOperation && BinaryOperation != MemberReference cache Literal null MethodInvocation ! cache exists BlockStatement StatementExpression MethodInvocation cache mkdirs StatementExpression MethodInvocation determineDependencies IfStatement MemberReference dump BlockStatement StatementExpression MethodInvocation dumpDependencies StatementExpression MethodInvocation determineOutOfDateClasses LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation deleteAllAffectedFiles LocalVariableDeclaration BasicType long VariableDeclarator duration BinaryOperation / BinaryOperation - MethodInvocation System currentTimeMillis MemberReference start Literal 1000 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator summaryLogLevel IfStatement BinaryOperation > MemberReference count Literal 0 BlockStatement StatementExpression Assignment MemberReference summaryLogLevel MemberReference Project MSG_INFO = BlockStatement StatementExpression Assignment MemberReference summaryLogLevel MemberReference Project MSG_DEBUG = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Deleted " MemberReference count Literal " out of date files in " MemberReference duration Literal " seconds" MemberReference summaryLogLevel log CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public testContainsRegex IOException IfStatement MethodInvocation ! Literal "testContainsRegex" hasRegex ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal "containsregex" Literal "result/containsregex" getFileString StatementExpression MethodInvocation MemberReference contents Literal world" assertStringContains StatementExpression MethodInvocation MemberReference contents Literal "this is the moon" StatementExpression MethodInvocation MemberReference contents Literal "World here" assertStringContains	1
MethodDeclaration Modifier public setInternalAttributes FormalParameter BasicType int value StatementExpression Assignment MemberReference internalAttributes MemberReference value =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public testFile StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType String getPackageName ReturnStatement MemberReference packageName	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String language StatementExpression Assignment This MemberReference language MemberReference language =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Element VariableDeclarator rootElement MethodInvocation createDocument LocalVariableDeclaration ReferenceType File VariableDeclarator destFile MethodInvocation getDestinationFile TryStatement StatementExpression MethodInvocation MethodInvocation rootElement MemberReference destFile writeDOMTree CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to write test aggregate to '" MemberReference destFile Literal "'" MemberReference e LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation transformers elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType AggregateTransformer VariableDeclarator transformer Cast ReferenceType AggregateTransformer MethodInvocation e nextElement StatementExpression MethodInvocation transformer MethodInvocation rootElement setXmlDocument StatementExpression MethodInvocation transformer transform	1
MethodDeclaration Modifier protected setup FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType Native2Ascii args BuildException IfStatement MethodInvocation args getReverse BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-reverse" setValue createArgument StatementExpression SuperMethodInvocation MemberReference cmd MemberReference args setup	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference filename Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No filename specified" StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "setting a recorder for name " MemberReference filename MemberReference Project MSG_DEBUG log getProject LocalVariableDeclaration ReferenceType RecorderEntry VariableDeclarator recorder MethodInvocation MemberReference filename MethodInvocation getProject getRecorder StatementExpression MethodInvocation recorder MemberReference loglevel setMessageOutputLevel StatementExpression MethodInvocation recorder MemberReference emacsMode setEmacsMode IfStatement BinaryOperation != MemberReference start Literal null BlockStatement IfStatement MethodInvocation start booleanValue BlockStatement StatementExpression MethodInvocation recorder reopenFile StatementExpression MethodInvocation recorder MemberReference start setRecordState BlockStatement StatementExpression MethodInvocation recorder MemberReference start setRecordState StatementExpression MethodInvocation recorder	1
MethodDeclaration * @see */ Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "asis" Literal "cr" Literal "lf" Literal "crlf" Literal "mac" Literal "unix" Literal "dos"	0
MethodDeclaration Modifier protected handleOutput FormalParameter ReferenceType String line IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing BlockStatement StatementExpression SuperMethodInvocation MemberReference line handleOutput	0
MethodDeclaration Modifier private setTokens FormalParameter Modifier final ReferenceType Hashtable hash StatementExpression Assignment This MemberReference hash MemberReference hash =	1
MethodDeclaration Modifier synchronized protected ReferenceType Collection getCollection LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc MethodInvocation getResourceCollection IfStatement BinaryOperation == MethodInvocation rc size Literal 0 BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement BinaryOperation == MemberReference tokenizer Literal null BlockStatement StatementExpression Assignment MemberReference tokenizer ClassCreator ReferenceType LineTokenizer = LocalVariableDeclaration ReferenceType ConcatResourceInputStream VariableDeclarator cat ClassCreator ReferenceType ConcatResourceInputStream MemberReference rc StatementExpression MethodInvocation cat This LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator rdr Literal null IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference rdr ClassCreator ReferenceType InputStreamReader MemberReference cat = BlockStatement TryStatement StatementExpression Assignment MemberReference rdr ClassCreator ReferenceType InputStreamReader MemberReference cat MemberReference encoding = CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator result ClassCreator ReferenceType ArrayList TryStatement ForStatement ForControl VariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation tokenizer MemberReference rdr getToken BinaryOperation != MemberReference s Literal null Assignment MemberReference s MethodInvocation tokenizer MemberReference rdr getToken = BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType StringResource MemberReference s add CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Error reading MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public close IOException IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close	0
MethodDeclaration Modifier public testMapping LocalVariableDeclaration ReferenceType PackageNameMapper VariableDeclarator mapper ClassCreator ReferenceType PackageNameMapper StatementExpression MethodInvocation mapper Literal "*.java" StatementExpression MethodInvocation mapper Literal "TEST-*.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation Literal fixupPath LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation mapper ArraySelector Literal 0 MemberReference file mapFileName StatementExpression MethodInvocation Literal MemberReference result assertEquals	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String feature FormalParameter BasicType boolean value BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting feature " MemberReference feature Literal "=" MemberReference value MemberReference Project MSG_DEBUG log TryStatement StatementExpression MethodInvocation xmlReader MemberReference feature MemberReference value CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Parser " MethodInvocation xmlReader MethodInvocation getName getClass Literal " doesn't recognize feature " MemberReference feature MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Parser " MethodInvocation xmlReader MethodInvocation getName getClass Literal " doesn't support feature " MemberReference feature MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation helper MemberReference r setClasspathRef	0
MethodDeclaration Modifier public setPvcsbin FormalParameter ReferenceType String bin StatementExpression Assignment MemberReference pvcsbin MemberReference bin =	0
MethodDeclaration Modifier public synchronized setOutputFilterChains FormalParameter ReferenceType Vector outputFilterChains StatementExpression Assignment This MemberReference outputFilterChains MemberReference outputFilterChains =	1
MethodDeclaration Modifier public test8 IOException StatementExpression MethodInvocation Literal "test8" executeTarget	0
MethodDeclaration Modifier public testAwkCommand LocalVariableDeclaration ReferenceType Commandline VariableDeclarator c ClassCreator ReferenceType Commandline StatementExpression MethodInvocation c Literal "awk" setExecutable StatementExpression MethodInvocation c MethodInvocation Literal "'NR == 2 { print $NF }'" setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation c getCommandline StatementExpression MethodInvocation MemberReference s assertNotNull StatementExpression MethodInvocation Literal 2 MemberReference s length assertEquals StatementExpression MethodInvocation Literal "awk" MemberReference ArraySelector Literal 0 s assertEquals StatementExpression MethodInvocation Literal "'NR == 2 { print $NF }'" MemberReference ArraySelector Literal 1 s assertEquals	0
MethodDeclaration Modifier static protected BasicType boolean isFileManagedBinary FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation file MethodInvocation toLowerCase toString ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation filename Literal ".exe" endsWith MethodInvocation filename Literal ".dll" endsWith MethodInvocation filename Literal ".netmodule" endsWith	1
MethodDeclaration Modifier protected testBaseDirs FormalParameter ReferenceType String target FormalParameter ReferenceType String dirs LocalVariableDeclaration ReferenceType BasedirChecker VariableDeclarator bc ClassCreator ReferenceType BasedirChecker MemberReference dirs StatementExpression MethodInvocation project MemberReference bc StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator ae MethodInvocation bc getError IfStatement BinaryOperation != MemberReference ae Literal null BlockStatement ThrowStatement MemberReference ae StatementExpression MethodInvocation project MemberReference bc removeBuildListener	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference targetNames executeTargets MemberReference SINGLE_CHECK getProject StatementExpression MethodInvocation MemberReference targetCount Literal 3 assertEquals	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Commandline cmd LocalVariableDeclaration ReferenceType VariableDeclarator apt MethodInvocation getApt StatementExpression MethodInvocation MemberReference apt MemberReference cmd	0
MethodDeclaration Modifier private traceSettingInfo StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting proxy to " TernaryExpression BinaryOperation != MemberReference proxyHost Literal null MemberReference proxyHost Literal "''" Literal ":" MemberReference proxyPort MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File iasdescriptor StatementExpression Assignment This MemberReference iasdescriptor MemberReference iasdescriptor =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test-pseudo-tahoe-nested" executeTarget StatementExpression MethodInvocation Literal "jar.classpath" BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "classes/dsp-core/ " Literal "classes/dsp-pres/ " Literal "classes/dsp-void/ " Literal "generated/dsp-core/ " Literal "resources/dsp-core/ " Literal "resources/dsp-pres/" assertPropertyEquals	0
MethodDeclaration ReferenceType UnmatchedFileMap init FormalParameter ReferenceType java ReferenceType io ReferenceType File localFolder FormalParameter ReferenceType Folder remoteFolder IfStatement MethodInvocation ! localFolder exists BlockStatement ReturnStatement This LocalVariableDeclaration ReferenceType String VariableDeclarator localFiles MethodInvocation localFolder list IfStatement BinaryOperation == MemberReference localFiles Literal null BlockStatement ReturnStatement This ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference localFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator localFile ClassCreator MethodInvocation getAbsoluteFile ReferenceType java ReferenceType io ReferenceType File MemberReference localFolder MemberReference ArraySelector MemberReference i localFiles StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "adding " MemberReference localFile Literal " to UnmatchedFileMap" MemberReference Project MSG_DEBUG log IfStatement MethodInvocation localFile isDirectory BlockStatement StatementExpression This MethodInvocation MemberReference localFile Literal "" put BlockStatement StatementExpression This MethodInvocation MemberReference localFile Literal "" put ReturnStatement This	1
MethodDeclaration Modifier protected ReferenceType String getProperty FormalParameter ReferenceType String property ReturnStatement MethodInvocation project MemberReference property getProperty	0
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType Resource VariableDeclarator archive MethodInvocation getArchive LocalVariableDeclaration ReferenceType TarInputStream VariableDeclarator i Literal null TryStatement StatementExpression Assignment MemberReference i ClassCreator ReferenceType TarInputStream MethodInvocation archive getInputStream = LocalVariableDeclaration ReferenceType TarEntry VariableDeclarator te Literal null WhileStatement BinaryOperation != Assignment MemberReference te MethodInvocation i getNextEntry = Literal null BlockStatement IfStatement MethodInvocation te MethodInvocation MethodInvocation getName equals getName BlockStatement StatementExpression MethodInvocation MemberReference te setEntry ReturnStatement CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MethodInvocation e getMessage MemberReference Project MSG_DEBUG log ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference i Literal null BlockStatement StatementExpression MethodInvocation FileUtils MemberReference i close StatementExpression MethodInvocation Literal null setEntry	1
MethodDeclaration Modifier public setQuiet FormalParameter BasicType boolean quiet StatementExpression Assignment This MemberReference quiet MemberReference quiet =	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal "> BUILD STARTED" MemberReference Project MSG_DEBUG log	1
MethodDeclaration Modifier public selectorCreate IfStatement BinaryOperation && BinaryOperation != MemberReference classname Literal null BinaryOperation > MethodInvocation classname length Literal 0 BlockStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c Literal null IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference c MethodInvocation Class MemberReference classname forName = BlockStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator al MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject StatementExpression Assignment MemberReference c MethodInvocation Class MemberReference classname Literal true MemberReference al forName = StatementExpression Assignment MemberReference dynselector Cast ReferenceType FileSelector MethodInvocation c newInstance = LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation p MemberReference dynselector setProjectReference CatchClause CatchClauseParameter ClassNotFoundException cnfexcept StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Selector " MemberReference classname Literal " not initialized, no such class" setError CatchClause CatchClauseParameter InstantiationException iexcept StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Selector " MemberReference classname Literal " not initialized, could not create class" setError CatchClause CatchClauseParameter IllegalAccessException iaexcept StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Selector " MemberReference classname Literal " not initialized, class not accessible" setError BlockStatement StatementExpression MethodInvocation Literal "There is no classname specified" setError	1
MethodDeclaration Modifier private BasicType long getLines ReturnStatement MemberReference lines	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "testForkingAntClasspath" executeTarget	0
MethodDeclaration Modifier public addGeneric FormalParameter ReferenceType tool StatementExpression MethodInvocation tool This setTask StatementExpression MethodInvocation MemberReference tool addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean setrest StatementExpression Assignment This MemberReference simulationmode MemberReference setrest =	0
MethodDeclaration Modifier public synchronized waitFor InterruptedException WhileStatement MethodInvocation ! isFinished BlockStatement StatementExpression MethodInvocation wait	0
MethodDeclaration Modifier public setSuppressDeprecation FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType ArchiveState getResourcesToAdd FormalParameter ReferenceType ResourceCollection rcs FormalParameter ReferenceType File zipFile FormalParameter BasicType boolean needsUpdate BuildException IfStatement MethodInvocation zipFile exists BlockStatement TryStatement StatementExpression Assignment MemberReference originalManifest MethodInvocation MemberReference zipFile getManifestFromJar = IfStatement BinaryOperation == MemberReference originalManifest Literal null BlockStatement StatementExpression MethodInvocation Literal "Updating jar since the current jar has no manifest" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference needsUpdate Literal true = BlockStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf MethodInvocation createManifest IfStatement MethodInvocation ! mf MemberReference originalManifest equals BlockStatement StatementExpression MethodInvocation Literal "Updating jar since jar manifest has changed" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference needsUpdate Literal true = CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "error while reading original manifest in file: " MethodInvocation zipFile toString MethodInvocation t getMessage MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference needsUpdate Literal true = BlockStatement StatementExpression Assignment MemberReference needsUpdate Literal true = StatementExpression Assignment MemberReference createEmpty MemberReference needsUpdate = ReturnStatement SuperMethodInvocation MemberReference rcs MemberReference zipFile MemberReference needsUpdate getResourcesToAdd	1
MethodDeclaration Modifier protected FormalParameter ReferenceType File fromDir FormalParameter ReferenceType File toDir FormalParameter ReferenceType String names FormalParameter ReferenceType FileNameMapper mapper FormalParameter ReferenceType Hashtable map LocalVariableDeclaration ReferenceType String VariableDeclarator toCopy Literal null IfStatement MemberReference forceOverwrite BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference names length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation mapper MemberReference ArraySelector MemberReference i names mapFileName Literal null BlockStatement StatementExpression MethodInvocation v MemberReference ArraySelector MemberReference i names addElement StatementExpression Assignment MemberReference toCopy ArrayCreator ReferenceType String MethodInvocation v size = StatementExpression MethodInvocation v MemberReference toCopy copyInto BlockStatement LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator ds ClassCreator ReferenceType SourceFileScanner This StatementExpression Assignment MemberReference toCopy MethodInvocation ds MemberReference names MemberReference fromDir MemberReference toDir MemberReference mapper MemberReference granularity restrict = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toCopy length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator src ClassCreator ReferenceType File MemberReference fromDir MemberReference ArraySelector MemberReference i toCopy LocalVariableDeclaration ReferenceType String VariableDeclarator mappedFiles MethodInvocation mapper MemberReference ArraySelector MemberReference i toCopy mapFileName IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation map MethodInvocation src getAbsolutePath ArrayCreator ReferenceType String ArrayInitializer ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference toDir MemberReference ArraySelector Literal 0 mappedFiles put BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 0 BinaryOperation < MemberReference k MemberReference mappedFiles length MemberReference ++ k BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference k mappedFiles ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference toDir MemberReference ArraySelector MemberReference k mappedFiles = StatementExpression MethodInvocation map MethodInvocation src getAbsolutePath MemberReference mappedFiles put	1
MethodDeclaration Modifier public endDownload StatementExpression MethodInvocation out println StatementExpression MethodInvocation out flush	0
MethodDeclaration Modifier public setNoWarn FormalParameter BasicType boolean nwarn StatementExpression Assignment MemberReference mNwarn MemberReference nwarn =	0
MethodDeclaration Modifier public ReferenceType getClasspath ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType MethodInvocation getCheckedRef MemberReference classpath	0
MethodDeclaration Modifier protected BasicType int run FormalParameter ReferenceType Commandline cmd TryStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation exe MethodInvocation MethodInvocation getBaseDir getProject setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation cmd getCommandline setCommandline StatementExpression MethodInvocation exe Literal false setVMLauncher ReturnStatement MethodInvocation exe execute CatchClause CatchClauseParameter java.io.IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	0
MethodDeclaration Modifier private BasicType int sendMTFValues1 FormalParameter Modifier final BasicType int nGroups FormalParameter Modifier final BasicType int alphaSize LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType int VariableDeclarator rfreq MemberReference dataShadow sendMTFValues_rfreq LocalVariableDeclaration Modifier final BasicType int VariableDeclarator fave MemberReference dataShadow sendMTFValues_fave LocalVariableDeclaration Modifier final BasicType short VariableDeclarator cost MemberReference dataShadow sendMTFValues_cost LocalVariableDeclaration Modifier final BasicType char VariableDeclarator sfmap MemberReference dataShadow sfmap LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator selector MemberReference dataShadow selector LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len MemberReference dataShadow sendMTFValues_len LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_0 MemberReference ArraySelector Literal 0 len LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_1 MemberReference ArraySelector Literal 1 len LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_2 MemberReference ArraySelector Literal 2 len LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_3 MemberReference ArraySelector Literal 3 len LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_4 MemberReference ArraySelector Literal 4 len LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_5 MemberReference ArraySelector Literal 5 len LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nMTFShadow This MemberReference nMTF LocalVariableDeclaration BasicType int VariableDeclarator nSelectors Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator iter Literal 0 BinaryOperation < MemberReference iter MemberReference N_ITERS MemberReference ++ iter BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t MemberReference nGroups BinaryOperation >= MemberReference -- t Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference t fave Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator rfreqt MemberReference ArraySelector MemberReference t rfreq ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference alphaSize BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i rfreqt Literal 0 = StatementExpression Assignment MemberReference nSelectors Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator gs Literal 0 BinaryOperation < MemberReference gs This MemberReference nMTF BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ge MethodInvocation Math BinaryOperation - BinaryOperation + MemberReference gs MemberReference G_SIZE Literal 1 BinaryOperation - MemberReference nMTFShadow Literal 1 min IfStatement BinaryOperation == MemberReference nGroups MemberReference N_GROUPS BlockStatement LocalVariableDeclaration BasicType short VariableDeclarator cost0 Literal 0 LocalVariableDeclaration BasicType short VariableDeclarator cost1 Literal 0 LocalVariableDeclaration BasicType short VariableDeclarator cost2 Literal 0 LocalVariableDeclaration BasicType short VariableDeclarator cost3 Literal 0 LocalVariableDeclaration BasicType short VariableDeclarator cost4 Literal 0 LocalVariableDeclaration BasicType short VariableDeclarator cost5 Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference gs BinaryOperation <= MemberReference i MemberReference ge MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator icv MemberReference ArraySelector MemberReference i sfmap StatementExpression Assignment MemberReference cost0 BinaryOperation & MemberReference ArraySelector MemberReference icv len_0 Literal 0xff += StatementExpression Assignment MemberReference cost1 BinaryOperation & MemberReference ArraySelector MemberReference icv len_1 Literal 0xff += StatementExpression Assignment MemberReference cost2 BinaryOperation & MemberReference ArraySelector MemberReference icv len_2 Literal 0xff += StatementExpression Assignment MemberReference cost3 BinaryOperation & MemberReference ArraySelector MemberReference icv len_3 Literal 0xff += StatementExpression Assignment MemberReference cost4 BinaryOperation & MemberReference ArraySelector MemberReference icv len_4 Literal 0xff += StatementExpression Assignment MemberReference cost5 BinaryOperation & MemberReference ArraySelector MemberReference icv len_5 Literal 0xff += StatementExpression Assignment MemberReference ArraySelector Literal 0 cost MemberReference cost0 = StatementExpression Assignment MemberReference ArraySelector Literal 1 cost MemberReference cost1 = StatementExpression Assignment MemberReference ArraySelector Literal 2 cost MemberReference cost2 = StatementExpression Assignment MemberReference ArraySelector Literal 3 cost MemberReference cost3 = StatementExpression Assignment MemberReference ArraySelector Literal 4 cost MemberReference cost4 = StatementExpression Assignment MemberReference ArraySelector Literal 5 cost MemberReference cost5 = BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t MemberReference nGroups BinaryOperation >= MemberReference -- t Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference t cost Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference gs BinaryOperation <= MemberReference i MemberReference ge MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator icv MemberReference ArraySelector MemberReference i sfmap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t MemberReference nGroups BinaryOperation >= MemberReference -- t Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference t cost BinaryOperation & MemberReference ArraySelector MemberReference t ArraySelector MemberReference icv len Literal 0xff += LocalVariableDeclaration BasicType int VariableDeclarator bt Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t MemberReference nGroups VariableDeclarator bc Literal 999999999 BinaryOperation >= MemberReference -- t Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator cost_t MemberReference ArraySelector MemberReference t cost IfStatement BinaryOperation < MemberReference cost_t MemberReference bc BlockStatement StatementExpression Assignment MemberReference bc MemberReference cost_t = StatementExpression Assignment MemberReference bt MemberReference t = StatementExpression MemberReference ++ ArraySelector MemberReference bt fave StatementExpression Assignment MemberReference ArraySelector MemberReference nSelectors selector Cast BasicType byte MemberReference bt = StatementExpression MemberReference ++ nSelectors LocalVariableDeclaration Modifier final BasicType int VariableDeclarator rfreq_bt MemberReference ArraySelector MemberReference bt rfreq ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference gs BinaryOperation <= MemberReference i MemberReference ge MemberReference ++ i BlockStatement StatementExpression MemberReference ++ ArraySelector MemberReference ArraySelector MemberReference i sfmap rfreq_bt StatementExpression Assignment MemberReference gs BinaryOperation + MemberReference ge Literal 1 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference nGroups MemberReference ++ t BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference t len MemberReference ArraySelector MemberReference t rfreq This MemberReference data MemberReference alphaSize Literal 20 hbMakeCodeLengths ReturnStatement MemberReference nSelectors	1
MethodDeclaration Modifier public ReferenceType UnknownElement getNestedTask LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ret ClassCreator ReferenceType UnknownElement Literal StatementExpression MethodInvocation ret Literal setTaskName StatementExpression MethodInvocation ret Literal "" setNamespace StatementExpression MethodInvocation ret Literal StatementExpression ClassCreator ReferenceType RuntimeConfigurable MemberReference ret Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation MethodInvocation size getNested MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator e Cast ReferenceType UnknownElement MethodInvocation MethodInvocation MemberReference i get getNested StatementExpression MethodInvocation ret MemberReference e addChild StatementExpression MethodInvocation ret MethodInvocation MethodInvocation e getWrapper addChild getWrapper ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType int getTag ReturnStatement MemberReference tag	0
MethodDeclaration Modifier public BasicType boolean getReverse ReturnStatement MemberReference reverse	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator runner MethodInvocation ClassReference ReferenceType createRunner StatementExpression MethodInvocation runner run StatementExpression MethodInvocation MethodInvocation runner MethodInvocation getError getFormatter MemberReference SUCCESS MethodInvocation runner assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean idl StatementExpression Assignment This MemberReference idl MemberReference idl =	0
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation cleanup	1
MethodDeclaration Modifier public maybeConfigure BuildException IfStatement BinaryOperation != MemberReference realThing Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation This MethodInvocation getWrapper configure	1
MethodDeclaration Modifier public ZipException IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator f Literal null TryStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType ZipFile MethodInvocation MethodInvocation Literal resolveFile getProject = StatementExpression MethodInvocation Literal "ziptest~ should be MethodInvocation f Literal getEntry assertNotNull IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation f close	0
MethodDeclaration Modifier private compareFiles FormalParameter ReferenceType File src FormalParameter ReferenceType File dest LocalVariableDeclaration ReferenceType VariableDeclarator match ClassCreator ReferenceType StatementExpression MethodInvocation match MemberReference src StatementExpression MethodInvocation match MemberReference dest StatementExpression MethodInvocation Literal "Assert files are equal." MethodInvocation match eval assertTrue	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath getBaseDir setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_UNCHECKOUT setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private validate IfStatement BinaryOperation != MemberReference string Literal null BlockStatement IfStatement BinaryOperation != MemberReference resources Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "the string length function" Literal " is incompatible with the file/resource length function" IfStatement MethodInvocation ! STRING MemberReference mode equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "the mode attribute is for use" Literal " with the file/resource length function" IfStatement BinaryOperation != MemberReference resources Literal null BlockStatement IfStatement BinaryOperation || MethodInvocation EACH MemberReference mode equals MethodInvocation MemberReference mode equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid mode setting Literal " file/resource length function: \"" MemberReference mode Literal "\"" IfStatement BinaryOperation != MemberReference trim Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "the trim attribute is" Literal " for use with the string length function only" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "you must set either the string attribute" Literal " or specify one or more files using the file attribute Literal " resource collections"	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count StatementExpression MethodInvocation childWrapper MemberReference buf MemberReference start MemberReference count addText	1
MethodDeclaration Modifier public static BasicType boolean match FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference str match	0
MethodDeclaration Modifier private sendMTFValues3 FormalParameter Modifier final BasicType int nGroups FormalParameter Modifier final BasicType int alphaSize LocalVariableDeclaration BasicType int VariableDeclarator code This MemberReference data MemberReference sendMTFValues_code LocalVariableDeclaration BasicType byte VariableDeclarator len This MemberReference data MemberReference sendMTFValues_len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference nGroups MemberReference ++ t BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator minLen Literal 32 LocalVariableDeclaration BasicType int VariableDeclarator maxLen Literal 0 LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_t MemberReference ArraySelector MemberReference t len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference alphaSize BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator l BinaryOperation & MemberReference ArraySelector MemberReference i len_t Literal 0xff IfStatement BinaryOperation > MemberReference l MemberReference maxLen BlockStatement StatementExpression Assignment MemberReference maxLen MemberReference l = IfStatement BinaryOperation < MemberReference l MemberReference minLen BlockStatement StatementExpression Assignment MemberReference minLen MemberReference l = StatementExpression MethodInvocation MemberReference ArraySelector MemberReference t code MemberReference ArraySelector MemberReference t len MemberReference minLen MemberReference maxLen MemberReference alphaSize hbAssignCodes	1
MethodDeclaration Modifier public start IOException StatementExpression MethodInvocation MemberReference br parseOutput	0
MethodDeclaration Modifier protected ReferenceType ClassLoader getClassLoaderFromJar FormalParameter ReferenceType File classjar IOException LocalVariableDeclaration ReferenceType VariableDeclarator lookupPath ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getTask StatementExpression MethodInvocation lookupPath MemberReference classjar setLocation LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation getCombinedClasspath IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation lookupPath MemberReference classpath append ReturnStatement MethodInvocation MethodInvocation getProject MethodInvocation MemberReference lookupPath createClassLoader getTask	0
MethodDeclaration Modifier public addOr FormalParameter ReferenceType OrSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addOr	1
MethodDeclaration Modifier public setOffline FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "out/out.xml" Literal expectFileContains	0
MethodDeclaration Modifier public setCachetokens FormalParameter BasicType boolean cacheTokens StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference cacheTokens MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MemberReference classLoader	0
MethodDeclaration Modifier public test16 StatementExpression MethodInvocation Literal "test16" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "" Literal "Called" expectLog	0
MethodDeclaration Modifier public setDebug FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public ReferenceType Object innerCreateAndSet FormalParameter ReferenceType Class newclass FormalParameter ReferenceType Project project NoSuchMethodException InstantiationException IllegalAccessException InvocationTargetException LocalVariableDeclaration ReferenceType Constructor VariableDeclarator ctor Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator noArg Literal false TryStatement StatementExpression Assignment MemberReference ctor MethodInvocation newclass ArrayCreator ReferenceType Class Literal 0 getConstructor = StatementExpression Assignment MemberReference noArg Literal true = CatchClause CatchClauseParameter NoSuchMethodException nse StatementExpression Assignment MemberReference ctor MethodInvocation newclass ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Project getConstructor = StatementExpression Assignment MemberReference noArg Literal false = LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation ctor TernaryExpression MemberReference noArg ArrayCreator ReferenceType Object Literal 0 ArrayCreator ReferenceType Object ArrayInitializer MemberReference project newInstance StatementExpression MethodInvocation project MemberReference o setProjectReference ReturnStatement MemberReference o	1
MethodDeclaration Modifier public FormalParameter ReferenceType Equals e StatementExpression MethodInvocation conditions MemberReference e addElement	0
MethodDeclaration Modifier public BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator hashCode Literal 0 IfStatement BinaryOperation != MemberReference manifestVersion Literal null BlockStatement StatementExpression Assignment MemberReference hashCode MethodInvocation manifestVersion hashCode += StatementExpression Assignment MemberReference hashCode MethodInvocation mainSection hashCode += StatementExpression Assignment MemberReference hashCode MethodInvocation sections hashCode += ReturnStatement MemberReference hashCode	0
MethodDeclaration Modifier private ReferenceType PatternSet getRef FormalParameter ReferenceType Project p IfStatement MemberReference ! checked BlockStatement LocalVariableDeclaration ReferenceType Stack VariableDeclarator stk ClassCreator ReferenceType Stack StatementExpression MethodInvocation stk This push StatementExpression MethodInvocation MemberReference stk MemberReference p dieOnCircularReference LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation ref MemberReference p getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType PatternSet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + MethodInvocation ref getRefId Literal " doesn\'t a patternset" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg BlockStatement ReturnStatement Cast ReferenceType PatternSet MemberReference o	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Process process StatementExpression MethodInvocation FileUtils MethodInvocation process getInputStream close StatementExpression MethodInvocation FileUtils MethodInvocation process getOutputStream close StatementExpression MethodInvocation FileUtils MethodInvocation process getErrorStream close	0
MethodDeclaration Modifier public setStyle FormalParameter ReferenceType attr LocalVariableDeclaration ReferenceType String VariableDeclarator option MethodInvocation attr getValue IfStatement MethodInvocation option MemberReference STYLE_BRIEF equals BlockStatement StatementExpression SuperMethodInvocation MemberReference setInternalStyle IfStatement MethodInvocation option MemberReference STYLE_CODEDIFF equals BlockStatement StatementExpression SuperMethodInvocation MemberReference setInternalStyle IfStatement MethodInvocation option MemberReference STYLE_DEFAULT equals BlockStatement StatementExpression SuperMethodInvocation Literal "" setInternalStyle IfStatement MethodInvocation option MemberReference STYLE_NOFILE equals BlockStatement StatementExpression SuperMethodInvocation MemberReference setInternalStyle BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Style " MemberReference attr Literal " MethodInvocation getLocation	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c ClassCreator ReferenceType CommandlineJava StatementExpression MethodInvocation c MethodInvocation Literal "arg1" setValue createArgument StatementExpression MethodInvocation c Literal "myfile.jar" StatementExpression MethodInvocation c MethodInvocation Literal "-classic" setValue StatementExpression MethodInvocation c MethodInvocation Literal "-Dx=y" setValue LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation c getCommandline StatementExpression MethodInvocation Literal "-classic" MemberReference ArraySelector Literal 1 s assertEquals StatementExpression MethodInvocation Literal "-Dx=y" MemberReference ArraySelector Literal 2 s assertEquals StatementExpression MethodInvocation Literal "-jar" MemberReference ArraySelector Literal 3 s assertEquals StatementExpression MethodInvocation Literal "myfile.jar" MemberReference ArraySelector Literal 4 s assertEquals StatementExpression MethodInvocation Literal "arg1" MemberReference ArraySelector Literal 5 s assertEquals	0
MethodDeclaration Modifier public testNoAppend IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project BinaryOperation + MemberReference REC_IN Literal resolveFile MethodInvocation project BinaryOperation + MemberReference REC_DIR Literal resolveFile Literal true contentEquals assertTrue	0
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String message StatementExpression Assignment This MemberReference message MemberReference message = StatementExpression Assignment MemberReference messageAttribute Literal true =	0
MethodDeclaration Modifier public testSuite LocalVariableDeclaration ReferenceType VariableDeclarator runner MethodInvocation ClassReference ReferenceType SuiteTestCase createRunner StatementExpression MethodInvocation runner run StatementExpression MethodInvocation MethodInvocation runner MethodInvocation getError getFormatter MemberReference SUCCESS MethodInvocation runner assertEquals	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation comments MethodInvocation getValue addElement	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment MemberReference parts ArrayCreator ReferenceType String ArrayInitializer MemberReference value =	0
MethodDeclaration Modifier public setLoaderConfig FormalParameter Modifier final ReferenceType String loaderConfig StatementExpression Assignment MemberReference m_loaderConfig MemberReference loaderConfig =	0
MethodDeclaration Modifier public ReferenceType CommandlineJava getCommandLine ReturnStatement MemberReference cmdl	0
MethodDeclaration Modifier public copyInheritedProperties FormalParameter ReferenceType Project other LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation inheritedProperties keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation e MethodInvocation toString nextElement IfStatement BinaryOperation != MethodInvocation other MemberReference arg getUserProperty Literal null BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation inheritedProperties MemberReference arg get StatementExpression MethodInvocation other MemberReference arg MethodInvocation value toString setInheritedProperty	0
MethodDeclaration Modifier private BasicType boolean uptodate FormalParameter ReferenceType ResourceCollection src FormalParameter ReferenceType ResourceCollection target LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType types ReferenceType resources ReferenceType selectors ReferenceType Date VariableDeclarator datesel ClassCreator ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType types ReferenceType resources ReferenceType selectors ReferenceType Date StatementExpression MethodInvocation datesel MethodInvocation System currentTimeMillis setMillis StatementExpression MethodInvocation datesel MemberReference TimeComparison AFTER setWhen StatementExpression MethodInvocation MemberReference targets MemberReference datesel logFuture LocalVariableDeclaration BasicType int VariableDeclarator neTargets ClassCreator MethodInvocation size ReferenceType NonExistent MemberReference targets IfStatement BinaryOperation > MemberReference neTargets Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference neTargets Literal " nonexistent targets" MemberReference Project MSG_VERBOSE log ReturnStatement Literal false LocalVariableDeclaration ReferenceType FileResource VariableDeclarator oldestTarget Cast ReferenceType FileResource ClassCreator ReferenceType Oldest MemberReference targets StatementExpression MethodInvocation BinaryOperation + MemberReference oldestTarget Literal " is oldest target file" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference sources MemberReference datesel logFuture LocalVariableDeclaration BasicType int VariableDeclarator neSources ClassCreator MethodInvocation size ReferenceType NonExistent MemberReference sources IfStatement BinaryOperation > MemberReference neSources Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference neSources Literal " nonexistent sources" MemberReference Project MSG_VERBOSE log ReturnStatement Literal false LocalVariableDeclaration ReferenceType Resource VariableDeclarator newestSource Cast ReferenceType Resource ClassCreator ReferenceType Newest MemberReference sources StatementExpression MethodInvocation BinaryOperation + MethodInvocation newestSource toLongString Literal " is newest source" MemberReference Project MSG_VERBOSE log ReturnStatement BinaryOperation >= MethodInvocation oldestTarget getLastModified MethodInvocation newestSource getLastModified	1
MethodDeclaration Modifier public BasicType int FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation System.out flush ReturnStatement MethodInvocation MemberReference buffer MemberReference offset MemberReference length read BlockStatement ThrowStatement ClassCreator ReferenceType EOFException Literal "No input provided for project"	1
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set IfStatement BinaryOperation > MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one fileset allowed" StatementExpression MethodInvocation filesets MemberReference set addElement	1
MethodDeclaration Modifier public synchronized BasicType long getSize ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef Cast BasicType long MethodInvocation MethodInvocation length getContent	1
MethodDeclaration setCcHeader IfStatement MethodInvocation ! cc isEmpty BlockStatement StatementExpression MethodInvocation Literal "Cc" MethodInvocation MemberReference cc setHeader	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal "HashvalueAlgorithm"	0
MethodDeclaration Modifier public addDifferent FormalParameter ReferenceType DifferentSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException SynchronizedStatement This OutputStreamFunneler StatementExpression MethodInvocation dieIfClosed StatementExpression MethodInvocation out MemberReference b MemberReference off MemberReference len write	1
MethodDeclaration Modifier private assertResultFilesExist FormalParameter ReferenceType String target FormalParameter ReferenceType String extension StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation Literal MemberReference extension assertResultFileExists StatementExpression MethodInvocation Literal MemberReference extension assertResultFileExists StatementExpression MethodInvocation Literal MemberReference extension assertResultFileExists	0
MethodDeclaration Modifier private addNSDefinition FormalParameter ReferenceType Element element FormalParameter ReferenceType String uri LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al Cast ReferenceType ArrayList MethodInvocation nsURIByElement MemberReference element get IfStatement BinaryOperation == MemberReference al Literal null BlockStatement StatementExpression Assignment MemberReference al ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation nsURIByElement MemberReference element MemberReference al put StatementExpression MethodInvocation al MemberReference uri add	1
MethodDeclaration Modifier private ReferenceType String fixupPath FormalParameter ReferenceType String file ReturnStatement MethodInvocation file Literal '/' MemberReference File separatorChar replace	0
MethodDeclaration Modifier public final setSsdir FormalParameter ReferenceType String dir StatementExpression Assignment This MemberReference ssDir MethodInvocation FileUtils MemberReference dir translatePath =	0
MethodDeclaration Modifier public testMacro StatementExpression MethodInvocation Literal "testMacro" executeTarget	0
MethodDeclaration Modifier public BasicType boolean getDebug ReturnStatement MemberReference debug	0
MethodDeclaration Modifier public BasicType boolean isEOFRecord FormalParameter BasicType byte record ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator sz This MethodInvocation getRecordSize BinaryOperation < MemberReference i MemberReference sz MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i record Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType File getSource ReturnStatement MemberReference source	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal implicitAfter implicit" expectLog	0
MethodDeclaration Modifier protected IfStatement BinaryOperation != MemberReference This MemberReference includes BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " Includes specified: " This MemberReference includes log	0
MethodDeclaration Modifier public testTrimFile StatementExpression MethodInvocation Literal Literal "should fail" Literal "string length function only" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String getStdErr ReturnStatement MemberReference stderr	0
MethodDeclaration Modifier protected ReferenceType Commandline setupRmicCommand FormalParameter ReferenceType String options LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline IfStatement BinaryOperation != MemberReference options Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference options length MemberReference ++ i BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference ArraySelector MemberReference i options setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation getCompileClasspath StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation attributes getBase setFile createArgument IfStatement BinaryOperation != MethodInvocation attributes getExtdirs Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-extdirs" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation attributes getExtdirs setPath createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference classpath setPath createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator stubVersion MethodInvocation attributes getStubVersion LocalVariableDeclaration ReferenceType String VariableDeclarator stubOption Literal null IfStatement BinaryOperation != Literal null MemberReference stubVersion BlockStatement IfStatement Literal MethodInvocation MemberReference stubVersion equals "1.1" BlockStatement StatementExpression Assignment MemberReference stubOption MemberReference STUB_1_1 = IfStatement Literal MethodInvocation MemberReference stubVersion equals "1.2" BlockStatement StatementExpression Assignment MemberReference stubOption MemberReference STUB_1_2 = IfStatement Literal MethodInvocation MemberReference stubVersion equals "compat" BlockStatement StatementExpression Assignment MemberReference stubOption MemberReference STUB_COMPAT = BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + Literal "Unknown stub option " MemberReference stubVersion log IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference stubOption Literal null MethodInvocation ! attributes getIiop MethodInvocation ! attributes getIdl BlockStatement StatementExpression Assignment MemberReference stubOption MemberReference STUB_COMPAT = IfStatement BinaryOperation != MemberReference stubOption Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference stubOption setValue createArgument IfStatement BinaryOperation != Literal null MethodInvocation attributes getSourceBase BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-keepgenerated" setValue createArgument IfStatement MethodInvocation attributes getIiop BlockStatement StatementExpression MethodInvocation attributes Literal "IIOP has been turned on." MemberReference Project MSG_INFO log StatementExpression MethodInvocation cmd MethodInvocation Literal "-iiop" setValue createArgument IfStatement BinaryOperation != MethodInvocation attributes getIiopopts Literal null BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + Literal "IIOP Options: " MethodInvocation attributes getIiopopts MemberReference Project MSG_INFO log StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation attributes getIiopopts setValue createArgument IfStatement MethodInvocation attributes getIdl BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-idl" setValue createArgument StatementExpression MethodInvocation attributes Literal "IDL has been turned on." MemberReference Project MSG_INFO log IfStatement BinaryOperation != MethodInvocation attributes getIdlopts Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation attributes getIdlopts setValue createArgument StatementExpression MethodInvocation attributes BinaryOperation + Literal "IDL Options: " MethodInvocation attributes getIdlopts MemberReference Project MSG_INFO log IfStatement MethodInvocation attributes getDebug BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-g" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation attributes getCurrentCompilerArgs addArguments StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement MemberReference cmd	1
MethodDeclaration Modifier public setCharset FormalParameter ReferenceType String src StatementExpression This MethodInvocation Literal "-charset" MemberReference src addArgIfNotEmpty	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public setErrorPrintStream FormalParameter ReferenceType PrintStream err StatementExpression Assignment This MemberReference err ClassCreator ReferenceType PrintStream MemberReference err Literal true =	1
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getName	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf Literal "<PropertiesfileCache:" append StatementExpression MethodInvocation buf MethodInvocation MemberReference cachefile append Literal "cachefile=" append StatementExpression MethodInvocation buf MethodInvocation MethodInvocation cache size append Literal ";noOfEntries=" append StatementExpression MethodInvocation buf Literal ">" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration * Sets the URL to is by Ant proxy * are ignored; either url or srcFile is * @param url url to */ Modifier public setUrl FormalParameter ReferenceType String url StatementExpression MethodInvocation wsdl MemberReference url setUrl	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean aBoolean StatementExpression Assignment MemberReference verbose MemberReference aBoolean =	0
MethodDeclaration Modifier protected BasicType boolean shouldCheckout FormalParameter ReferenceType String pName LocalVariableDeclaration BasicType boolean VariableDeclarator includeIt MethodInvocation MethodInvocation getIncludes MemberReference pName matchPatterns LocalVariableDeclaration BasicType boolean VariableDeclarator excludeIt MethodInvocation MethodInvocation MemberReference pName matchPatterns ReturnStatement BinaryOperation && MemberReference includeIt MemberReference ! excludeIt	1
MethodDeclaration Modifier public FormalParameter ReferenceType ComparatorName name StatementExpression Assignment MemberReference compName MemberReference name =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration BasicType int VariableDeclarator fileProcessed Literal 0 IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Specify at least one source - " Literal "a file or a fileset." IfStatement BinaryOperation != MemberReference file Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation file exists MethodInvocation file canRead MethodInvocation file isFile BlockStatement StatementExpression MethodInvocation MemberReference file doValidate StatementExpression MemberReference ++ fileProcessed BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator errorMsg BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " cannot be read" IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference errorMsg BlockStatement StatementExpression MethodInvocation MemberReference errorMsg MemberReference Project MSG_ERR log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File MethodInvocation fs MethodInvocation getProject getDir MemberReference ArraySelector MemberReference j files StatementExpression MethodInvocation MemberReference srcFile doValidate StatementExpression MemberReference ++ fileProcessed StatementExpression MethodInvocation MemberReference fileProcessed onSuccessfulValidation	1
MethodDeclaration Modifier protected addDefinition FormalParameter ReferenceType ClassLoader al FormalParameter ReferenceType String name FormalParameter ReferenceType String value BuildException TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation al MemberReference value loadClass StatementExpression MethodInvocation AntClassLoader MemberReference c initializeClass StatementExpression MethodInvocation MemberReference name MemberReference c addDefinition CatchClause CatchClauseParameter ClassNotFoundException cnfe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " class " MemberReference value Literal " cannot be found" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference cnfe MethodInvocation getLocation CatchClause CatchClauseParameter NoClassDefFoundError ncdfe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " class " MemberReference value Literal " cannot be found" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ncdfe MethodInvocation getLocation	1
MethodDeclaration Modifier public testPatternsDifferInCaseScanningSensitive IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/" Literal "ALPHA/" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ServerThread VariableDeclarator testMailServer ClassCreator ReferenceType ServerThread LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType ClientThread VariableDeclarator testMailClient ClassCreator ReferenceType ClientThread StatementExpression MethodInvocation testMailClient Literal "Mail Message <EmailTaskTest@ant.apache.org>" from StatementExpression MethodInvocation testMailClient Literal "bcc@you.com" bcc StatementExpression MethodInvocation testMailClient Literal "Test subject" setSubject StatementExpression MethodInvocation testMailClient BinaryOperation + Literal "test line 1\n" Literal "test line 2" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal "InterruptedException: " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator expectedResult BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "220 test EmailTaskTest\r\n" Literal "HELO " MemberReference local Literal "\r\n" Literal "250 " MemberReference local Literal " Hello " MemberReference local Literal " [127.0.0.1], pleased to you\r\n" Literal "MAIL FROM: <EmailTaskTest@ant.apache.org>\r\n" Literal "250\r\n" Literal "RCPT TO: <bcc@you.com>\r\n" Literal "250\r\n" Literal "DATA\r\n" Literal "354\r\n" Literal "Subject: Test subject\r\n" Literal Message <EmailTaskTest@ant.apache.org>\r\n" Literal "X-Mailer: org.apache.tools.mail.MailMessage (ant.apache.org)\r\n" Literal "\r\n" Literal "test line 1\r\n" Literal "test line 2\r\n" Literal "\r\n" Literal ".\r\n" Literal "250\r\n" Literal "QUIT\r\n" Literal "221\r\n" StatementExpression MethodInvocation MethodInvocation expectedResult length MethodInvocation result length assertEquals StatementExpression MethodInvocation MemberReference expectedResult MemberReference result assertEquals IfStatement MethodInvocation testMailClient isFailed BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient getFailMessage fail	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference implementationTitle	0
MethodDeclaration Modifier public setNoCheckout FormalParameter BasicType boolean co StatementExpression Assignment MemberReference mNoco MemberReference co =	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Property attribute must be defined" LocalVariableDeclaration ReferenceType String VariableDeclarator result LocalVariableDeclaration ReferenceType String VariableDeclarator exception Literal null TryStatement IfStatement MemberReference address BlockStatement StatementExpression Assignment MemberReference result MethodInvocation getAddress = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation getHostname = StatementExpression MethodInvocation project MemberReference property MemberReference result setNewProperty CatchClause CatchClauseParameter UnknownHostException e StatementExpression Assignment MemberReference exception MemberReference e = CatchClause CatchClauseParameter SecurityException e StatementExpression Assignment MemberReference exception MemberReference e = IfStatement BinaryOperation != MemberReference e Literal null BlockStatement IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "resolving hostname" MemberReference e BlockStatement StatementExpression MethodInvocation Literal "failed to resolve local hostname" MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier private static ReferenceType URL newURL FormalParameter ReferenceType String u TryStatement ReturnStatement ClassCreator ReferenceType URL MemberReference u CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean verbose StatementExpression Assignment This MemberReference verbose MemberReference verbose =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter BasicType boolean user IfStatement MethodInvocation ! name MemberReference PREFIX startsWith BlockStatement ReturnStatement SuperMethodInvocation MemberReference ns MemberReference name MemberReference user StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation PREFIX length substring = LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal "" LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation jxpathCtx MemberReference name iterate IfStatement BinaryOperation || BinaryOperation == MemberReference iter Literal null MethodInvocation ! iter hasNext BlockStatement ReturnStatement Literal "null" StatementExpression Assignment MemberReference result MethodInvocation iter next += WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation iter next StatementExpression Assignment MemberReference result BinaryOperation + Literal ", " MemberReference o += ReturnStatement MemberReference result	0
MethodDeclaration Modifier public setCurrentTarget FormalParameter ReferenceType Target target StatementExpression Assignment This MemberReference currentTarget MemberReference target =	0
MethodDeclaration Modifier private ReferenceType File findFile FormalParameter ReferenceType File base FormalParameter ReferenceType String path FormalParameter BasicType boolean cs IfStatement MethodInvocation FileUtils MemberReference path isAbsolutePath BlockStatement IfStatement BinaryOperation == MemberReference base Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation FILE_UTILS MemberReference path StatementExpression Assignment MemberReference base ClassCreator ReferenceType File MemberReference ArraySelector Literal 0 s = StatementExpression Assignment MemberReference path MemberReference ArraySelector Literal 1 s = BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation FILE_UTILS MemberReference path normalize LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation FILE_UTILS MemberReference base MemberReference f removeLeadingPath IfStatement MethodInvocation s MethodInvocation f getAbsolutePath equals BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference path MemberReference s = ReturnStatement MethodInvocation MemberReference base MethodInvocation SelectorUtils MemberReference path tokenizePath MemberReference cs findFile	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public testGetExecutableWindows IfStatement MethodInvocation Os Literal "windows" isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator javaHome MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath MethodInvocation System Literal "java.home" getProperty normalize LocalVariableDeclaration ReferenceType String VariableDeclarator j MethodInvocation JavaEnvUtils Literal "java" getJreExecutable StatementExpression MethodInvocation MethodInvocation j Literal ".exe" endsWith assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is absolute" ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference j assertTrue TryStatement StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and in the JRE dir" MethodInvocation j MemberReference javaHome startsWith assertTrue CatchClause CatchClauseParameter AssertionFailedError e StatementExpression MethodInvocation Literal "java.exe" MemberReference j assertEquals StatementExpression Assignment MemberReference j MethodInvocation JavaEnvUtils Literal getJdkExecutable = StatementExpression MethodInvocation MethodInvocation j Literal ".exe" endsWith assertTrue TryStatement StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is absolute" ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference j assertTrue LocalVariableDeclaration ReferenceType String VariableDeclarator javaHomeParent MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath BinaryOperation + MemberReference javaHome Literal "/.." normalize StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and in the JDK dir" MethodInvocation j MemberReference javaHomeParent startsWith assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and not in the JRE dir" MethodInvocation ! j MemberReference javaHome startsWith assertTrue CatchClause CatchClauseParameter AssertionFailedError e StatementExpression MethodInvocation Literal "javac.exe" MemberReference j assertEquals StatementExpression MethodInvocation Literal "foo.exe" MethodInvocation JavaEnvUtils Literal "foo" getJreExecutable assertEquals StatementExpression MethodInvocation Literal "foo.exe" MethodInvocation JavaEnvUtils Literal "foo" getJdkExecutable assertEquals	1
MethodDeclaration Modifier public onSuiteEnded FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation formatter MemberReference evt onSuiteEnded	0
MethodDeclaration Modifier public synchronized ReferenceType FileSelector getSelectors FormalParameter ReferenceType Project p ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation MemberReference p getSelectors MemberReference p getRef Cast ReferenceType FileSelector MethodInvocation selectors ArrayCreator ReferenceType FileSelector MethodInvocation selectors size toArray	1
MethodDeclaration Modifier public FormalParameter ReferenceType File zipFile StatementExpression MethodInvocation MemberReference zipFile setDestFile	1
MethodDeclaration Modifier public setDestdir FormalParameter ReferenceType File inDir StatementExpression Assignment This MemberReference destDir MemberReference inDir =	0
MethodDeclaration Modifier public BasicType boolean isTruncateMode ReturnStatement MethodInvocation MethodInvocation getValue equalsIgnoreCase	0
MethodDeclaration Modifier protected ReferenceType String getDocFileParameter IfStatement BinaryOperation != MemberReference docFile Literal null BlockStatement ReturnStatement BinaryOperation + Literal "/doc:" MethodInvocation docFile toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init StatementExpression MethodInvocation MethodInvocation getProject setProject	1
MethodDeclaration Modifier static extractExtensions FormalParameter Modifier final ReferenceType Project project FormalParameter Modifier final ReferenceType List libraries FormalParameter Modifier final ReferenceType List fileset BuildException IfStatement MethodInvocation ! fileset isEmpty BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extensions MethodInvocation MemberReference project MemberReference fileset ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement StatementExpression MethodInvocation libraries MemberReference ArraySelector MemberReference i extensions add	1
MethodDeclaration Modifier public synchronized BasicType boolean isFollowSymlinks ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public validateConfigured BuildException StatementExpression SuperMethodInvocation validateConfigured IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator home MethodInvocation MethodInvocation getProject MethodInvocation Literal "websphere.home" getProperty getTask IfStatement BinaryOperation == MemberReference home Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The 'websphere.home' property must " Literal "be set when 'ejbdeploy=true'" StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getProject MethodInvocation MemberReference home resolveFile getTask =	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator al MethodInvocation createLoader IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MethodInvocation getURI Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "name, file or resource attribute of " MethodInvocation getTaskName Literal " is undefined" MethodInvocation getLocation IfStatement MethodInvocation MethodInvocation MemberReference MagicNames ANTLIB_PREFIX startsWith getURI BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri1 MethodInvocation getURI StatementExpression MethodInvocation MethodInvocation MemberReference uri1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Only antlib URIs can be located from the URI alone," Literal "not the URI " MethodInvocation getURI IfStatement BinaryOperation != MemberReference name Literal null BlockStatement IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal attribute of " MethodInvocation getTaskName Literal " element " Literal "is undefined" MethodInvocation getLocation StatementExpression MethodInvocation MemberReference al MemberReference name MemberReference classname addDefinition BlockStatement IfStatement BinaryOperation != MemberReference classname Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "You must not specify classname " Literal "together with file or resource." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator urls Literal null IfStatement BinaryOperation != MemberReference file Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType URL VariableDeclarator url MethodInvocation fileToURL IfStatement BinaryOperation == MemberReference url Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference urls ClassCreator ReferenceType Enumeration FieldDeclaration Modifier private BasicType boolean VariableDeclarator more Literal true MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MemberReference more MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MemberReference more BlockStatement StatementExpression Assignment MemberReference more Literal false = ReturnStatement MemberReference url BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException = BlockStatement StatementExpression Assignment MemberReference urls MethodInvocation MemberReference al resourceToURLs = WhileStatement MethodInvocation urls hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url Cast ReferenceType URL MethodInvocation urls nextElement LocalVariableDeclaration BasicType int VariableDeclarator fmt This MemberReference format IfStatement MethodInvocation url MethodInvocation MemberReference Locale US toLowerCase MethodInvocation Literal ".xml" endsWith toString BlockStatement StatementExpression Assignment MemberReference fmt MemberReference XML = IfStatement BinaryOperation == MemberReference fmt MemberReference PROPERTIES BlockStatement StatementExpression MethodInvocation MemberReference al MemberReference url loadProperties BreakStatement BlockStatement IfStatement BinaryOperation != MethodInvocation resourceStack MethodInvocation MemberReference url get getStack Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: Recursive loading of " MemberReference url Literal " ignored" Literal " at " MethodInvocation getLocation Literal " originally loaded at " MethodInvocation resourceStack MethodInvocation MemberReference url get getStack MemberReference Project MSG_WARN log BlockStatement TryStatement StatementExpression MethodInvocation resourceStack MethodInvocation MemberReference url MethodInvocation getLocation put getStack StatementExpression MethodInvocation MemberReference al MemberReference url loadAntlib StatementExpression MethodInvocation resourceStack MethodInvocation MemberReference url remove getStack	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements IfStatement MethodInvocation e hasMoreElements BlockStatement WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation buf MethodInvocation e MethodInvocation toString nextElement append IfStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation buf Literal ", " append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration setInputBuffer FormalParameter ReferenceType StringBuffer input StatementExpression Assignment MemberReference inputBuffer MemberReference input =	1
MethodDeclaration Modifier public BasicType int getLevel ReturnStatement MemberReference level	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String counter StatementExpression Assignment This MemberReference counter MemberReference counter =	0
MethodDeclaration Modifier private createClassLoader LocalVariableDeclaration ReferenceType VariableDeclarator userClasspath MethodInvocation MethodInvocation getClasspath getCommandline IfStatement BinaryOperation != MemberReference userClasspath Literal null BlockStatement IfStatement BinaryOperation || MemberReference reloading BinaryOperation == MemberReference classLoader Literal null BlockStatement StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator classpath Cast ReferenceType MethodInvocation userClasspath clone IfStatement MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Implicitly adding " MemberReference antRuntimeClasses Literal " to CLASSPATH" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation classpath MemberReference antRuntimeClasses append StatementExpression Assignment MemberReference classLoader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = IfStatement BinaryOperation && BinaryOperation != MethodInvocation MethodInvocation getClassLoader getClass Literal null BinaryOperation != MethodInvocation MethodInvocation getClassLoader getClass ClassReference MethodInvocation getClassLoader ReferenceType Project BlockStatement StatementExpression MethodInvocation classLoader MethodInvocation MethodInvocation getClassLoader getClass setParent StatementExpression MethodInvocation classLoader Literal false setParentFirst StatementExpression MethodInvocation classLoader addJavaLibraries StatementExpression MethodInvocation BinaryOperation + Literal "Using CLASSPATH " MethodInvocation classLoader getClasspath MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation classLoader Literal "junit" addSystemPackageRoot StatementExpression MethodInvocation classLoader Literal "org.junit" addSystemPackageRoot StatementExpression MethodInvocation classLoader Literal "org.apache.tools.ant" addSystemPackageRoot	1
MethodDeclaration Modifier private writeTagDiff FormalParameter ReferenceType CvsTagEntry entries BuildException LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator output Literal null TryStatement StatementExpression Assignment MemberReference output ClassCreator ReferenceType FileOutputStream MemberReference = LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference output Literal "UTF-8" StatementExpression MethodInvocation writer Literal "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" println LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation DOMUtils newDocument LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation doc Literal "tagdiff" createElement IfStatement BinaryOperation != MemberReference mystartTag Literal null BlockStatement StatementExpression MethodInvocation root Literal "startTag" MemberReference mystartTag setAttribute BlockStatement StatementExpression MethodInvocation root Literal "startDate" MemberReference setAttribute IfStatement BinaryOperation != MemberReference myendTag Literal null BlockStatement StatementExpression MethodInvocation root Literal "endTag" MemberReference myendTag setAttribute BlockStatement StatementExpression MethodInvocation root Literal "endDate" MemberReference setAttribute StatementExpression MethodInvocation root Literal "cvsroot" MethodInvocation getCvsRoot setAttribute StatementExpression MethodInvocation root Literal "package" MemberReference mypackage setAttribute StatementExpression MethodInvocation DOM_WRITER MemberReference root MemberReference writer Literal 0 Literal "\t" openElement StatementExpression MethodInvocation writer println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator c MemberReference entries length BinaryOperation < MemberReference i MemberReference c MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference doc MemberReference writer MemberReference ArraySelector MemberReference i entries writeTagEntry StatementExpression MethodInvocation DOM_WRITER MemberReference root MemberReference writer Literal 0 Literal "\t" Literal true closeElement StatementExpression MethodInvocation writer flush StatementExpression MethodInvocation writer close CatchClause CatchClauseParameter UnsupportedEncodingException uee StatementExpression MethodInvocation MethodInvocation uee toString MemberReference Project MSG_ERR log CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe toString MemberReference ioe IfStatement BinaryOperation != Literal null MemberReference output BlockStatement TryStatement StatementExpression MethodInvocation output close CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation MethodInvocation ioe toString MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object another IfStatement BinaryOperation == This MemberReference another BlockStatement ReturnStatement Literal true IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference another equals getCheckedRef IfStatement MethodInvocation ! another getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ArchiveResource VariableDeclarator r Cast ReferenceType ArchiveResource MemberReference another ReturnStatement BinaryOperation && MethodInvocation MethodInvocation MethodInvocation r getArchive equals getArchive MethodInvocation MethodInvocation MethodInvocation r getName equals getName	1
MethodDeclaration Modifier public setCharset FormalParameter ReferenceType String charset StatementExpression Assignment This MemberReference charset MemberReference charset =	0
MethodDeclaration Modifier public testClassname StatementExpression MethodInvocation Literal expectAssertion	0
MethodDeclaration Modifier public setNewCMP FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setClientVersionProperty FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean prompt FormalParameter ReferenceType String str ReturnStatement Literal false	0
MethodDeclaration Modifier public close IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err Literal "TarBuffer.closeBuffer()." println IfStatement BinaryOperation != This MemberReference outStream Literal null BlockStatement StatementExpression This MethodInvocation flushBlock IfStatement BinaryOperation && BinaryOperation != This MemberReference outStream MemberReference System out BinaryOperation != This MemberReference outStream MemberReference System err BlockStatement StatementExpression This MemberReference outStream MethodInvocation close StatementExpression Assignment This MemberReference outStream Literal null = IfStatement BinaryOperation != This MemberReference inStream Literal null BlockStatement IfStatement BinaryOperation != This MemberReference inStream MemberReference System in BlockStatement StatementExpression This MemberReference inStream MethodInvocation close StatementExpression Assignment This MemberReference inStream Literal null =	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal "xmlvalidate.xml" configureProject	0
MethodDeclaration Modifier public test7 StatementExpression MethodInvocation Literal "test7" Literal "empty token not allowed" expectBuildException	0
MethodDeclaration Modifier public BasicType int selectorCount ReturnStatement MethodInvocation selectorsList size	0
MethodDeclaration Modifier public setFiltersfile FormalParameter ReferenceType File filtersFile StatementExpression Assignment This MemberReference filtersFile MemberReference filtersFile =	0
MethodDeclaration Modifier protected ReferenceType RecorderEntry getRecorder FormalParameter ReferenceType String name FormalParameter ReferenceType Project proj BuildException LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation recorderEntries MemberReference name get LocalVariableDeclaration ReferenceType RecorderEntry VariableDeclarator entry IfStatement BinaryOperation == MemberReference o Literal null BlockStatement StatementExpression Assignment MemberReference entry ClassCreator ReferenceType RecorderEntry MemberReference name = IfStatement BinaryOperation == MemberReference append Literal null BlockStatement StatementExpression MethodInvocation entry Literal false openFile BlockStatement StatementExpression MethodInvocation entry MethodInvocation append booleanValue openFile StatementExpression MethodInvocation entry MemberReference proj setProject StatementExpression MethodInvocation recorderEntries MemberReference name MemberReference entry put BlockStatement StatementExpression Assignment MemberReference entry Cast ReferenceType RecorderEntry MemberReference o = ReturnStatement MemberReference entry	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public setProxy FormalParameter ReferenceType Object o StatementExpression Assignment This MemberReference proxy MemberReference o =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/dirname.xml" configureProject	0
MethodDeclaration Modifier public setFromLabel FormalParameter ReferenceType String fromLabel StatementExpression SuperMethodInvocation MemberReference fromLabel setInternalFromLabel	0
MethodDeclaration Modifier public FormalParameter ReferenceType String l StatementExpression Assignment MemberReference label MemberReference l =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator jarXml MethodInvocation MethodInvocation BinaryOperation + MemberReference tempDir Literal resolveFile getProject StatementExpression MethodInvocation MethodInvocation jarXml exists assertTrue	0
MethodDeclaration Modifier public BasicType int getGroupId ReturnStatement MemberReference gid	0
MethodDeclaration Modifier public ReferenceType AntHandler onStartChild FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException ReturnStatement MemberReference ProjectHelper2 elementHandler	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String line SwitchStatement MemberReference status SwitchStatementCase StatementExpression MethodInvocation reset StatementExpression MethodInvocation MemberReference line processFile BreakStatement SwitchStatementCase GET_REVISION StatementExpression MethodInvocation MemberReference line processRevision BreakStatement SwitchStatementCase GET_DATE StatementExpression MethodInvocation MemberReference line processDate BreakStatement SwitchStatementCase GET_COMMENT StatementExpression MethodInvocation MemberReference line processComment BreakStatement SwitchStatementCase GET_PREVIOUS_REV StatementExpression MethodInvocation MemberReference line processGetPreviousRevision BreakStatement SwitchStatementCase BreakStatement	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation finish IfStatement BinaryOperation != MemberReference raf Literal null BlockStatement StatementExpression MethodInvocation raf close IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close	1
MethodDeclaration Modifier public ReferenceType String getStubVersion ReturnStatement MemberReference stubVersion	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected extract IfStatement BinaryOperation > MethodInvocation source lastModified MethodInvocation dest lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Expanding " MethodInvocation source getAbsolutePath Literal " to " MethodInvocation dest getAbsolutePath log LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator out Literal null LocalVariableDeclaration ReferenceType CBZip2InputStream VariableDeclarator zIn Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator fis Literal null LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator bis Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileOutputStream MemberReference dest = StatementExpression Assignment MemberReference fis MethodInvocation srcResource getInputStream = StatementExpression Assignment MemberReference bis ClassCreator ReferenceType BufferedInputStream MemberReference fis = LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation bis read IfStatement BinaryOperation != MemberReference b Literal 'B' BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid bz2 file." MethodInvocation getLocation StatementExpression Assignment MemberReference b MethodInvocation bis read = IfStatement BinaryOperation != MemberReference b Literal 'Z' BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid bz2 file." MethodInvocation getLocation StatementExpression Assignment MemberReference zIn ClassCreator ReferenceType CBZip2InputStream MemberReference bis = LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression MethodInvocation out MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation zIn MemberReference buffer Literal 0 MemberReference buffer length read = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Problem expanding bzip2 " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference bis close StatementExpression MethodInvocation FileUtils MemberReference fis close StatementExpression MethodInvocation FileUtils MemberReference out close StatementExpression MethodInvocation FileUtils MemberReference zIn close	1
MethodDeclaration Modifier public setFailOnError FormalParameter BasicType boolean value StatementExpression Assignment MemberReference failOnError MemberReference value =	0
MethodDeclaration Modifier public ReferenceType Object createDataType FormalParameter ReferenceType String typeName BuildException ReturnStatement MethodInvocation MemberReference typeName createComponent	1
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference value setVmversion getCommandLine	0
MethodDeclaration Modifier private deleteAllFiles FormalParameter ReferenceType File aFile IfStatement MethodInvocation aFile isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator someFiles MethodInvocation aFile listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference someFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i someFiles deleteAllFiles StatementExpression MethodInvocation aFile delete	1
MethodDeclaration Modifier public FormalParameter ReferenceType String change StatementExpression Assignment This MemberReference change MemberReference change =	0
MethodDeclaration Modifier protected ReferenceType Collection getCollection LocalVariableDeclaration ReferenceType List VariableDeclarator rcs MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation rcs size IfStatement BinaryOperation < MemberReference size Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The intersection of " MemberReference size Literal " resource collection" TernaryExpression BinaryOperation == MemberReference size Literal 1 Literal "" Literal "s" Literal " is LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator rc MethodInvocation rcs iterator StatementExpression MethodInvocation al MethodInvocation MethodInvocation rc next collect addAll WhileStatement MethodInvocation rc hasNext BlockStatement StatementExpression MethodInvocation al MethodInvocation MethodInvocation rc next collect retainAll ReturnStatement MemberReference al	0
MethodDeclaration Modifier protected runServer FormalParameter ReferenceType Server s LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType Project VariableDeclarator projects MethodInvocation s getProjects ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference projects length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType Project VariableDeclarator p MemberReference ArraySelector MemberReference i projects IfStatement MethodInvocation p MethodInvocation MethodInvocation getProjectName equals getName BlockStatement IfStatement MethodInvocation getVerbose BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Found " MethodInvocation getProjectName MemberReference delim log StatementExpression MethodInvocation MemberReference s MemberReference p runProject BreakStatement	1
MethodDeclaration Modifier public testFullPathMatchesCaseInsensitive IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds Literal false setCaseSensitive StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/GAMMA.XML" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier private sendDirectory FormalParameter ReferenceType ChannelSftp channel FormalParameter ReferenceType Directory current IOException SftpException ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator fileIt MethodInvocation current filesIterator MethodInvocation fileIt hasNext BlockStatement StatementExpression MethodInvocation MemberReference channel Cast ReferenceType File MethodInvocation fileIt next Literal null sendFileToRemote ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator dirIt MethodInvocation current directoryIterator MethodInvocation dirIt hasNext BlockStatement LocalVariableDeclaration ReferenceType Directory VariableDeclarator dir Cast ReferenceType Directory MethodInvocation dirIt next StatementExpression MethodInvocation MemberReference channel MemberReference dir sendDirectoryToRemote	1
MethodDeclaration Modifier public testRecreateZipfilesetWithUpdateNewerFile StatementExpression MethodInvocation Literal "testRecreateNewerFileSetup" Literal testRecreate	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet rootFileSet StatementExpression MethodInvocation rootFileSets MemberReference rootFileSet addElement	0
MethodDeclaration Modifier public synchronized ReferenceType URL getURL IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef ReturnStatement MemberReference url	0
MethodDeclaration Modifier public testString StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public process FormalParameter ReferenceType String line BuildException IfStatement MethodInvocation util Literal "/^... clientFile (.+)$/" MemberReference line match BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation util Literal 1 group StatementExpression MethodInvocation existing MemberReference f add IfStatement MethodInvocation util Literal "/^(.+) - no such file/" MemberReference line match BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation util Literal 1 group StatementExpression MethodInvocation nonExisting MemberReference f add StatementExpression MethodInvocation parent MethodInvocation parent.util Literal "s/^.*: //" MemberReference line substitute MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier private ReferenceType StringBuffer FormalParameter BasicType int size FormalParameter BasicType char ch LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MemberReference size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf MemberReference ch append Statement ReturnStatement MemberReference buf	1
MethodDeclaration Modifier private run FormalParameter ReferenceType CommandlineJava command BuildException TryStatement LocalVariableDeclaration ReferenceType ExecuteJava VariableDeclarator exe ClassCreator ReferenceType ExecuteJava StatementExpression MethodInvocation exe MethodInvocation command getJavaCommand setJavaCommand StatementExpression MethodInvocation exe MethodInvocation command getClasspath setClasspath StatementExpression MethodInvocation exe MethodInvocation command getSystemProperties setSystemProperties StatementExpression MethodInvocation exe MemberReference perm setPermissions StatementExpression MethodInvocation exe MemberReference timeout setTimeout StatementExpression MethodInvocation redirector createStreams StatementExpression MethodInvocation exe MethodInvocation getProject execute StatementExpression MethodInvocation redirector complete IfStatement MethodInvocation exe killedProcess BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Timeout: killed the sub-process" CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier protected touch FormalParameter ReferenceType File file StatementExpression MethodInvocation MemberReference file MethodInvocation touch	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation hasSelectors BlockStatement StatementExpression MethodInvocation buf Literal "{notselect: " append StatementExpression MethodInvocation buf SuperMethodInvocation toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean isEqual FormalParameter Modifier final ReferenceType DeweyDecimal other LocalVariableDeclaration Modifier final BasicType int VariableDeclarator max MethodInvocation Math MemberReference other.components length MemberReference components length max ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference max MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator component1 TernaryExpression BinaryOperation < MemberReference i MemberReference components length MemberReference ArraySelector MemberReference i components Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator component2 TernaryExpression BinaryOperation < MemberReference i MemberReference other.components length MemberReference other ArraySelector MemberReference i components Literal 0 IfStatement BinaryOperation != MemberReference component2 MemberReference component1 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public assertFileIsPresent FormalParameter ReferenceType String f StatementExpression MethodInvocation BinaryOperation + Literal "Expected file " MemberReference f MethodInvocation MethodInvocation MemberReference f resolveFile MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public setRemotedir FormalParameter ReferenceType String dir StatementExpression Assignment This MemberReference remotedir MemberReference dir =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String filenames StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference filenames Literal null BinaryOperation > MethodInvocation filenames length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference filenames Literal ", \t\n\r\f" Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression This MemberReference filenames MethodInvocation MethodInvocation tok nextToken addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType File srcDir StatementExpression Assignment This MemberReference srcDir MemberReference srcDir =	0
MethodDeclaration Modifier public setOwningTarget FormalParameter ReferenceType Target target StatementExpression Assignment This MemberReference target MemberReference target =	0
MethodDeclaration Modifier public ReferenceType getPath ReturnStatement MethodInvocation collector getPath	0
MethodDeclaration Modifier public testNestedFilesetRef Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public beginDownload StatementExpression Assignment MemberReference dots Literal 0 =	0
MethodDeclaration Modifier private setProperty FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference prefix MemberReference name MemberReference value setNewProperty getProject	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement Literal null	1
MethodDeclaration Modifier public testPatternsDifferInCaseScanningInsensitive IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/" Literal "ALPHA/" setIncludes StatementExpression MethodInvocation ds Literal false setCaseSensitive StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier private ReferenceType Specification getSpecifications FormalParameter Modifier final ReferenceType Manifest manifest BuildException TryStatement ReturnStatement MethodInvocation Specification MemberReference manifest getSpecifications CatchClause CatchClauseParameter ParseException pe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation pe getMessage MemberReference pe	0
MethodDeclaration Modifier public ReferenceType String getStackTrace ReturnStatement MemberReference stacktrace	0
MethodDeclaration Modifier public testFullpathDiffersInCaseScanningSensitive LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" Literal "alpha/beta/gamma/GAMMA.XML" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal "expected/replacetokens.test" resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference expected MemberReference result contentEquals assertTrue	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "_1nvalid_0002dclassname_jsp.java" executeJspCompile	0
MethodDeclaration Modifier protected ReferenceType Thread createPump FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os ReturnStatement MethodInvocation MemberReference is MemberReference os Literal false createPump	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation f1 delete StatementExpression MethodInvocation f2 delete	0
MethodDeclaration Modifier private ReferenceType String getAlgoName FormalParameter ReferenceType String classname LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator sel ClassCreator ReferenceType ModifiedSelector StatementExpression MethodInvocation sel MemberReference testclasses addClasspath StatementExpression MethodInvocation sel MemberReference classname setAlgorithmClass StatementExpression MethodInvocation sel validate LocalVariableDeclaration ReferenceType String VariableDeclarator s1 MethodInvocation sel toString LocalVariableDeclaration BasicType int VariableDeclarator posStart BinaryOperation + MethodInvocation s1 Literal "algorithm=" indexOf Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator posEnd MethodInvocation s1 Literal " comparator=" indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator algo MethodInvocation s1 MemberReference posStart MemberReference posEnd substring IfStatement MethodInvocation algo Literal "<" startsWith StatementExpression Assignment MemberReference algo MethodInvocation algo Literal 1 substring = IfStatement MethodInvocation algo Literal ">" endsWith StatementExpression Assignment MemberReference algo MethodInvocation algo Literal 0 BinaryOperation - MethodInvocation algo length Literal 1 substring = ReturnStatement MemberReference algo	1
MethodDeclaration Modifier public synchronized setCount FormalParameter BasicType int i StatementExpression Assignment MemberReference count MemberReference i =	0
MethodDeclaration Modifier public setLevel FormalParameter BasicType int level StatementExpression Assignment This MemberReference level MemberReference level =	0
MethodDeclaration Modifier public _testResourcePlainWithFilter StatementExpression MethodInvocation Literal "testResourcePlainWithFilter" executeTarget	1
MethodDeclaration Modifier public setNaming FormalParameter ReferenceType StatementExpression Assignment MemberReference config MemberReference = IfStatement BinaryOperation && MethodInvocation ! config.namingScheme MethodInvocation MemberReference equals getValue BinaryOperation != MemberReference config baseJarName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The basejarname attribute is not " Literal "compatible with the " MethodInvocation config.namingScheme getValue Literal " naming	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType Object clazz LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Class BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator values BinaryOperation && MethodInvocation i hasNext MemberReference ! found BlockStatement StatementExpression Assignment MemberReference found BinaryOperation == Cast ReferenceType AntTypeDefinition MethodInvocation i next MemberReference clazz |= ReturnStatement MemberReference found	1
MethodDeclaration Modifier private doLink FormalParameter ReferenceType String res FormalParameter ReferenceType String lnk BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator linkfil ClassCreator ReferenceType File MemberReference lnk IfStatement BinaryOperation && MemberReference overwrite MethodInvocation linkfil exists BlockStatement TryStatement StatementExpression MethodInvocation MemberReference linkfil deleteSymlink CatchClause CatchClauseParameter FileNotFoundException fnfe StatementExpression MethodInvocation BinaryOperation + Literal "Symlink disappeared before it was deleted: " MemberReference lnk handleError CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + Literal "Unable to overwrite preexisting link: " MemberReference lnk handleError LocalVariableDeclaration ReferenceType String VariableDeclarator cmd ArrayCreator ReferenceType String ArrayInitializer Literal "ln" Literal "-s" MemberReference res MemberReference lnk StatementExpression MethodInvocation MethodInvocation Commandline MemberReference cmd toString log StatementExpression MethodInvocation Execute This MemberReference cmd runCommand	1
MethodDeclaration Modifier public testSelectionBehaviour LocalVariableDeclaration ReferenceType DateSelector VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results LocalVariableDeclaration ReferenceType DateSelector ReferenceType TimeComparisons VariableDeclarator before ClassCreator ReferenceType DateSelector ReferenceType TimeComparisons StatementExpression MethodInvocation before Literal "before" setValue LocalVariableDeclaration ReferenceType DateSelector ReferenceType TimeComparisons VariableDeclarator equal ClassCreator ReferenceType DateSelector ReferenceType TimeComparisons StatementExpression MethodInvocation equal Literal setValue LocalVariableDeclaration ReferenceType DateSelector ReferenceType TimeComparisons VariableDeclarator after ClassCreator ReferenceType DateSelector ReferenceType TimeComparisons StatementExpression MethodInvocation after Literal "after" setValue TryStatement StatementExpression MethodInvocation makeBed StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "10/10/1999 1:45 PM" setDatetime StatementExpression MethodInvocation s MemberReference before setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "10/10/1999 1:45 PM" setDatetime StatementExpression MethodInvocation s MemberReference before setWhen StatementExpression MethodInvocation s Literal true setCheckdirs StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "10/10/1999 1:45 PM" setDatetime StatementExpression MethodInvocation s MemberReference after setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTTTTTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "11/21/2001 4:54 AM" setDatetime StatementExpression MethodInvocation s MemberReference before setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFTFFFFFFFFT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "11/21/2001 4:55 AM" setDatetime LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator formatter ClassCreator ReferenceType SimpleDateFormat LocalVariableDeclaration ReferenceType Date VariableDeclarator d MethodInvocation formatter Literal "11/21/2001 4:55 AM" ClassCreator ReferenceType Literal 0 parse LocalVariableDeclaration BasicType long VariableDeclarator milliseconds MethodInvocation s getMillis StatementExpression MethodInvocation s MemberReference equal setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTFFTFFFTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference milliseconds setMillis StatementExpression MethodInvocation s MemberReference equal setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTFFTFFFTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "11/21/2001 4:56 AM" setDatetime StatementExpression MethodInvocation s MemberReference after setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFTFTTTFFFT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param1 ClassCreator ReferenceType Parameter LocalVariableDeclaration ReferenceType Parameter VariableDeclarator ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param1 Literal "datetime" setName StatementExpression MethodInvocation param1 Literal "11/21/2001 4:56 AM" setValue StatementExpression MethodInvocation Literal "when" setName StatementExpression MethodInvocation Literal "after" setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayInitializer MemberReference param1 MemberReference StatementExpression MethodInvocation s MemberReference params setParameters StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFTFTTTFFFT" MemberReference results assertEquals TryStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = LocalVariableDeclaration BasicType long VariableDeclarator testtime MemberReference ArraySelector Literal 5 MethodInvocation lastModified mirrorfiles StatementExpression MethodInvocation s MemberReference testtime setMillis StatementExpression MethodInvocation s MemberReference after setWhen StatementExpression MethodInvocation s Literal 2 setGranularity StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal "TFFFFTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression Assignment MemberReference testtime MemberReference ArraySelector Literal 6 MethodInvocation lastModified mirrorfiles = StatementExpression MethodInvocation s MemberReference testtime setMillis StatementExpression MethodInvocation s MemberReference before setWhen StatementExpression MethodInvocation s Literal 2 setGranularity StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal "TTTTTTTFFFFT" MemberReference results assertEquals StatementExpression MethodInvocation StatementExpression MethodInvocation cleanupBed	1
MethodDeclaration Modifier public ReferenceType String getLog ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public test4 IfStatement BinaryOperation || MethodInvocation Os Literal "netware" isFamily MethodInvocation Os Literal "dos" isFamily BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "test4" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator filesep MethodInvocation System Literal "file.separator" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator expected BinaryOperation + BinaryOperation + BinaryOperation + MemberReference filesep Literal "usr" MemberReference filesep Literal "local" LocalVariableDeclaration ReferenceType String VariableDeclarator checkprop MethodInvocation project Literal getProperty IfStatement MethodInvocation ! checkprop MemberReference expected equals BlockStatement StatementExpression MethodInvocation Literal "dirname failed" fail	0
MethodDeclaration Modifier public setTargetos FormalParameter ReferenceType TargetOs target StatementExpression Assignment MemberReference targetOS MethodInvocation target getValue = StatementExpression Assignment MemberReference BinaryOperation && MethodInvocation ! targetOS Literal "unix" equals MethodInvocation ! targetOS Literal "tandem" equals =	1
MethodDeclaration Modifier public setParameters FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters setParameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation MILLIS_KEY MemberReference paramname equalsIgnoreCase BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator MethodInvocation longValue ReferenceType Long MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setMillis CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression MethodInvocation BinaryOperation + Literal "Invalid millisecond setting " MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setError IfStatement MethodInvocation DATETIME_KEY MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setDatetime IfStatement MethodInvocation CHECKDIRS_KEY MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters toBoolean setCheckdirs IfStatement MethodInvocation GRANULARITY_KEY MemberReference paramname equalsIgnoreCase BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator MethodInvocation intValue ReferenceType Integer MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setGranularity CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression MethodInvocation BinaryOperation + Literal "Invalid granularity setting " MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setError IfStatement MethodInvocation WHEN_KEY MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType TimeComparison MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setWhen IfStatement MethodInvocation PATTERN_KEY MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setPattern BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation MemberReference evt addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean buildTokenManager StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference buildTokenManager MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testFilesetAndSignedJar" Literal "incompatible MemberReference SignJar expectBuildExceptionContaining	0
MethodDeclaration Modifier public setDestfile FormalParameter Modifier final ReferenceType File destfile StatementExpression Assignment This MemberReference destfile MemberReference destfile =	0
MethodDeclaration Modifier public initChecksum IfStatement BinaryOperation != MemberReference checksum Literal null BlockStatement ReturnStatement IfStatement Literal MethodInvocation MemberReference algorithm equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference checksum ClassCreator ReferenceType CRC32 = IfStatement Literal MethodInvocation MemberReference algorithm equalsIgnoreCase "ADLER" BlockStatement StatementExpression Assignment MemberReference checksum ClassCreator ReferenceType = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException ClassCreator ReferenceType NoSuchAlgorithmException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference PASS_TEST_TARGET executeTarget StatementExpression MethodInvocation Literal "expecting full log to have MethodInvocation MethodInvocation getFullLog hasBuildListenerEvents assertTrue	0
MethodDeclaration Modifier public testEntityWithCatalog StatementExpression MethodInvocation Literal "src/etc/testcases/types/xmlcatalog.xml" configureProject StatementExpression MethodInvocation Literal Literal "val2" Literal "No news is good news" expectPropertySet	0
MethodDeclaration Modifier public setPassfile FormalParameter ReferenceType File passFile StatementExpression Assignment This MemberReference passFile MemberReference passFile =	0
MethodDeclaration Modifier private ReferenceType OutputStream compress FormalParameter Modifier final ReferenceType OutputStream ostream IOException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator v MethodInvocation getValue IfStatement MethodInvocation MemberReference v equals BlockStatement ReturnStatement ClassCreator ReferenceType GZIPOutputStream MemberReference ostream BlockStatement IfStatement MethodInvocation MemberReference v equals BlockStatement StatementExpression MethodInvocation ostream Literal 'B' write StatementExpression MethodInvocation ostream Literal 'Z' write ReturnStatement ClassCreator ReferenceType CBZip2OutputStream MemberReference ostream ReturnStatement MemberReference ostream	0
MethodDeclaration Modifier private ReferenceType PatternSet getRef FormalParameter ReferenceType Project p ReturnStatement Cast ReferenceType PatternSet MethodInvocation MemberReference p getCheckedRef	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileList fl StatementExpression MethodInvocation MethodInvocation MemberReference fl add createSources	0
MethodDeclaration Modifier public addContainsRegex FormalParameter ReferenceType ContainsRegex filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public setMailport FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ant StatementExpression MethodInvocation resolvers MemberReference ant add	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expectedOut BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " out\n" StatementExpression MethodInvocation Literal "unexpected log content" BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " err" MethodInvocation getLog assertEquals StatementExpression MethodInvocation Literal "unexpected output" MemberReference expectedOut MethodInvocation Literal "redirector.out" getFileString assertEquals StatementExpression MethodInvocation Literal "redirector.out" MethodInvocation expectedOut trim assertPropertyEquals	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String line LocalVariableDeclaration ReferenceType String VariableDeclarator replacedLine MemberReference line ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filterSets elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType FilterSet VariableDeclarator filterSet Cast ReferenceType FilterSet MethodInvocation e nextElement StatementExpression Assignment MemberReference replacedLine MethodInvocation filterSet MemberReference replacedLine = ReturnStatement MemberReference replacedLine	0
MethodDeclaration Modifier public ReferenceType String getPvcsproject ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType String FormalParameter ReferenceType p LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType MethodInvocation getProject LocalVariableDeclaration ReferenceType String VariableDeclarator order MemberReference IfStatement BinaryOperation != MethodInvocation getProject Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator o MethodInvocation MethodInvocation Literal "build.sysclasspath" getProperty getProject IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression Assignment MemberReference order MemberReference o = IfStatement MethodInvocation order Literal "only" equals BlockStatement StatementExpression MethodInvocation result MemberReference p Literal true addExisting IfStatement MethodInvocation order Literal "first" equals BlockStatement StatementExpression MethodInvocation result MemberReference p Literal true addExisting StatementExpression MethodInvocation result This addExisting IfStatement MethodInvocation order Literal "ignore" equals BlockStatement StatementExpression MethodInvocation result This addExisting BlockStatement IfStatement MethodInvocation ! order Literal "last" equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "invalid value for build.sysclasspath: " MemberReference order MemberReference Project MSG_WARN log StatementExpression MethodInvocation result This addExisting StatementExpression MethodInvocation result MemberReference p Literal true addExisting ReturnStatement MemberReference result	1
MethodDeclaration closeQuietly StatementExpression MethodInvocation FileUtils MemberReference reader close	0
MethodDeclaration Modifier public testPresetdefWrappedTask StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType VariableDeclarator e Cast ReferenceType MethodInvocation MethodInvocation Literal getReference getProject StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation BinaryOperation + Literal " BinaryOperation + MethodInvocation e MethodInvocation getLineNumber getLocation Literal 1 indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public setPackage FormalParameter ReferenceType String p StatementExpression Assignment This MemberReference cvsPackage MemberReference p =	0
MethodDeclaration Modifier public fireBuildStarted LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent This LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event	0
MethodDeclaration Modifier public setBootclasspath FormalParameter ReferenceType src IfStatement BinaryOperation == MemberReference bootclasspath Literal null BlockStatement StatementExpression Assignment MemberReference bootclasspath MemberReference src = BlockStatement StatementExpression MethodInvocation bootclasspath MemberReference src append	0
MethodDeclaration Modifier public printTail FormalParameter ReferenceType PrintWriter out StatementExpression MethodInvocation Assert MemberReference assertTrue StatementExpression MethodInvocation Assert MemberReference assertTrue StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MethodInvocation Assert BinaryOperation > MemberReference Literal 0 assertTrue StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation p MemberReference TAIL_CALLED log	0
MethodDeclaration Modifier public setNewenvironment FormalParameter BasicType boolean newenv StatementExpression Assignment MemberReference newEnvironment MemberReference newenv =	0
MethodDeclaration Modifier public setClasspathref FormalParameter ReferenceType r IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createClasspath	0
MethodDeclaration Modifier private convert FormalParameter ReferenceType String srcName FormalParameter ReferenceType String destName BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile LocalVariableDeclaration ReferenceType File VariableDeclarator destFile StatementExpression Assignment MemberReference srcFile ClassCreator ReferenceType File MemberReference srcDir MemberReference srcName = StatementExpression Assignment MemberReference destFile ClassCreator ReferenceType File MemberReference destDir MemberReference destName = IfStatement MethodInvocation srcFile MemberReference destFile equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "file " MemberReference srcFile Literal " would overwrite its self" LocalVariableDeclaration ReferenceType String VariableDeclarator parentName MethodInvocation destFile getParent IfStatement BinaryOperation != MemberReference parentName Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator parentFile ClassCreator ReferenceType File MemberReference parentName IfStatement BinaryOperation && MethodInvocation parentFile exists MethodInvocation parentFile mkdirs BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "cannot create parent directory " MemberReference parentName StatementExpression MethodInvocation BinaryOperation + Literal "converting " MemberReference srcName MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Native2AsciiAdapter VariableDeclarator ad MethodInvocation Native2AsciiAdapterFactory MethodInvocation facade getImplementation This getAdapter IfStatement MethodInvocation ! ad This MemberReference srcFile MemberReference destFile convert BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "conversion failed"	1
MethodDeclaration Modifier private final BasicType int countTests FormalParameter ReferenceType Collection tests LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation tests iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Test VariableDeclarator test Cast ReferenceType Test MethodInvocation it next StatementExpression Assignment MemberReference count BinaryOperation + MemberReference count MethodInvocation test countTestCases = ReturnStatement MemberReference count	1
MethodDeclaration Modifier public testEmptyElementIfIsReference LocalVariableDeclaration ReferenceType FileList VariableDeclarator f ClassCreator ReferenceType FileList StatementExpression MethodInvocation f MethodInvocation project Literal "." resolveFile setDir TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid StatementExpression MethodInvocation Literal "Can add reference to FileList with directory attribute set." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f ClassCreator ReferenceType FileList = StatementExpression MethodInvocation f Literal TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid StatementExpression MethodInvocation Literal "Can add reference to FileList with file attribute set." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f ClassCreator ReferenceType FileList = StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid TryStatement StatementExpression MethodInvocation f Literal "a/b/foo.java" StatementExpression MethodInvocation Literal "Can set files in FileList that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f MethodInvocation project Literal "." resolveFile setDir StatementExpression MethodInvocation Literal "Can set dir in FileList that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public setCheckEvery FormalParameter BasicType long time StatementExpression Assignment MemberReference checkEveryMillis MemberReference time =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator savedDir MemberReference inputDir TryStatement StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType Properties VariableDeclarator userList ClassCreator ReferenceType Properties StatementExpression MethodInvocation MemberReference userList loadUserlist ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator size MethodInvocation cvsUsers size BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType CvsUser VariableDeclarator user Cast ReferenceType CvsUser MethodInvocation cvsUsers MemberReference i get StatementExpression MethodInvocation user validate StatementExpression MethodInvocation userList MethodInvocation user getUserID MethodInvocation user getDisplayname put StatementExpression MethodInvocation Literal "log" setCommand IfStatement BinaryOperation != MethodInvocation getTag Literal null BlockStatement LocalVariableDeclaration ReferenceType CvsVersion VariableDeclarator myCvsVersion ClassCreator ReferenceType CvsVersion StatementExpression MethodInvocation myCvsVersion MethodInvocation getProject setProject StatementExpression MethodInvocation myCvsVersion Literal "cvsversion" setTaskName StatementExpression MethodInvocation myCvsVersion MethodInvocation getCvsRoot setCvsRoot StatementExpression MethodInvocation myCvsVersion MethodInvocation getCvsRsh setCvsRsh StatementExpression MethodInvocation myCvsVersion MethodInvocation getPassFile setPassfile StatementExpression MethodInvocation myCvsVersion MemberReference inputDir StatementExpression MethodInvocation myCvsVersion execute IfStatement MethodInvocation myCvsVersion supportsCvsLogWithSOption BlockStatement StatementExpression MethodInvocation Literal "-S" addCommandArgument IfStatement BinaryOperation != Literal null MemberReference startDate BlockStatement LocalVariableDeclaration Modifier final ReferenceType SimpleDateFormat VariableDeclarator outputDate ClassCreator ReferenceType SimpleDateFormat Literal "yyyy-MM-dd" LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator dateRange BinaryOperation + Literal ">=" MethodInvocation outputDate MemberReference startDate format StatementExpression MethodInvocation Literal "-d" addCommandArgument StatementExpression MethodInvocation MemberReference dateRange addCommandArgument IfStatement MethodInvocation ! filesets isEmpty BlockStatement LocalVariableDeclaration Modifier final ReferenceType Enumeration VariableDeclarator e MethodInvocation filesets elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration Modifier final ReferenceType FileSet VariableDeclarator fileSet Cast ReferenceType FileSet MethodInvocation e nextElement LocalVariableDeclaration Modifier final ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation fileSet MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator files MethodInvocation scanner getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i files addCommandArgument LocalVariableDeclaration Modifier final ReferenceType ChangeLogParser VariableDeclarator parser ClassCreator ReferenceType ChangeLogParser LocalVariableDeclaration Modifier final ReferenceType RedirectingStreamHandler VariableDeclarator handler ClassCreator ReferenceType RedirectingStreamHandler MemberReference parser StatementExpression MethodInvocation MethodInvocation getCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference inputDir StatementExpression MethodInvocation MemberReference handler TryStatement StatementExpression SuperMethodInvocation execute LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator errors MethodInvocation handler getErrors IfStatement BinaryOperation != Literal null MemberReference errors BlockStatement StatementExpression MethodInvocation MemberReference errors MemberReference Project MSG_ERR log LocalVariableDeclaration Modifier final ReferenceType CVSEntry VariableDeclarator entrySet MethodInvocation parser LocalVariableDeclaration Modifier final ReferenceType CVSEntry VariableDeclarator filteredEntrySet MethodInvocation MemberReference entrySet filterEntrySet StatementExpression MethodInvocation MemberReference userList MemberReference filteredEntrySet replaceAuthorIdWithName StatementExpression MethodInvocation MemberReference filteredEntrySet writeChangeLog StatementExpression Assignment MemberReference inputDir MemberReference savedDir =	1
MethodDeclaration Modifier private ReferenceType UnknownElement getReplacement IfStatement BinaryOperation == MemberReference replacement Literal null BlockStatement StatementExpression Assignment MemberReference replacement ClassCreator ReferenceType UnknownElement MemberReference taskType = StatementExpression MethodInvocation replacement MethodInvocation getProject setProject StatementExpression MethodInvocation replacement MemberReference taskType setTaskType StatementExpression MethodInvocation replacement MemberReference taskName setTaskName StatementExpression MethodInvocation replacement MemberReference location setLocation StatementExpression MethodInvocation replacement MemberReference target setOwningTarget StatementExpression MethodInvocation replacement MemberReference wrapper StatementExpression MethodInvocation wrapper MemberReference replacement setProxy StatementExpression MethodInvocation MemberReference wrapper MemberReference replacement replaceChildren StatementExpression MethodInvocation target This MemberReference replacement StatementExpression MethodInvocation replacement maybeConfigure ReturnStatement MemberReference replacement	0
MethodDeclaration Modifier public static ReferenceType Test suite ReturnStatement ClassCreator ReferenceType TestSuite ClassReference ReferenceType NullTestCase	0
MethodDeclaration Modifier final static protected ReferenceType String getFileNames FormalParameter ReferenceType FileSet fs LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation fs getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator directories MethodInvocation ds getIncludedDirectories LocalVariableDeclaration ReferenceType String VariableDeclarator filesPerSe MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String BinaryOperation + MemberReference directories length MemberReference filesPerSe length StatementExpression MethodInvocation System MemberReference directories Literal 0 MemberReference files Literal 0 MemberReference directories length arraycopy StatementExpression MethodInvocation System MemberReference filesPerSe Literal 0 MemberReference files MemberReference directories length MemberReference filesPerSe length arraycopy ReturnStatement MemberReference files	0
MethodDeclaration Modifier public transform BuildException StatementExpression MethodInvocation checkOptions LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation task getProject LocalVariableDeclaration ReferenceType TempFile VariableDeclarator tempFileTask ClassCreator ReferenceType TempFile StatementExpression MethodInvocation tempFileTask MemberReference task bindToOwner LocalVariableDeclaration ReferenceType XSLTProcess VariableDeclarator xsltTask ClassCreator ReferenceType XSLTProcess StatementExpression MethodInvocation xsltTask MemberReference task bindToOwner StatementExpression MethodInvocation xsltTask MethodInvocation getStylesheet StatementExpression MethodInvocation xsltTask Cast ReferenceType MemberReference task setIn LocalVariableDeclaration ReferenceType File VariableDeclarator outputFile Literal null IfStatement MethodInvocation format MemberReference FRAMES equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tempFileProperty BinaryOperation + MethodInvocation MethodInvocation getName getClass MethodInvocation String MemberReference ++ counter valueOf LocalVariableDeclaration ReferenceType File VariableDeclarator tmp MethodInvocation FILE_UTILS MethodInvocation project getBaseDir MethodInvocation project Literal "java.io.tmpdir" getProperty resolveFile StatementExpression MethodInvocation tempFileTask MemberReference tmp setDestDir StatementExpression MethodInvocation tempFileTask MemberReference tempFileProperty setProperty StatementExpression MethodInvocation tempFileTask execute StatementExpression Assignment MemberReference outputFile ClassCreator ReferenceType File MethodInvocation project MemberReference tempFileProperty getProperty = BlockStatement StatementExpression Assignment MemberReference outputFile ClassCreator ReferenceType File MemberReference toDir Literal "junit-noframes.html" = StatementExpression MethodInvocation xsltTask MemberReference outputFile setOut ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation params iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType Param VariableDeclarator param Cast ReferenceType XSLTProcess ReferenceType Param MethodInvocation i next LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType Param VariableDeclarator newParam MethodInvocation xsltTask createParam StatementExpression MethodInvocation newParam MethodInvocation task getProject setProject StatementExpression MethodInvocation newParam MethodInvocation param getName setName StatementExpression MethodInvocation newParam MethodInvocation param getExpression LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType Param VariableDeclarator paramx MethodInvocation xsltTask createParam StatementExpression MethodInvocation paramx MethodInvocation task getProject setProject StatementExpression MethodInvocation paramx Literal "output.dir" setName StatementExpression MethodInvocation paramx MethodInvocation toDir getAbsolutePath LocalVariableDeclaration Modifier final BasicType long VariableDeclarator t0 MethodInvocation System currentTimeMillis TryStatement StatementExpression MethodInvocation xsltTask execute CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Errors while applying transformations: " MethodInvocation e getMessage MemberReference e LocalVariableDeclaration Modifier final BasicType long VariableDeclarator dt BinaryOperation - MethodInvocation System currentTimeMillis MemberReference t0 StatementExpression MethodInvocation task BinaryOperation + BinaryOperation + Literal "Transform time: " MemberReference dt Literal "ms" log IfStatement MethodInvocation format MemberReference FRAMES equals BlockStatement LocalVariableDeclaration ReferenceType Delete VariableDeclarator delete ClassCreator ReferenceType Delete StatementExpression MethodInvocation delete MemberReference task bindToOwner StatementExpression MethodInvocation delete MemberReference outputFile setFile StatementExpression MethodInvocation delete execute	1
MethodDeclaration Modifier public FormalParameter ReferenceType format StatementExpression Assignment This MemberReference format MethodInvocation format getValue =	0
MethodDeclaration Modifier public addPath FormalParameter ReferenceType path StatementExpression MethodInvocation BinaryOperation + Literal "class of path is " MethodInvocation path getClass log	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String pattern StatementExpression Assignment MemberReference pattern MethodInvocation pattern MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace = IfStatement MethodInvocation pattern MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference pattern Literal "**" += StatementExpression Assignment This MemberReference pattern MemberReference pattern =	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference mCfile	0
MethodDeclaration Modifier public testCache StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public notTestImportInTargetWithEffect StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/import/subdir/importintarget.xml" configureProject StatementExpression MethodInvocation Literal "do-import" Literal "foo" Literal "bar" expectPropertySet StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "baz" getReference getProject assertNotNull	0
MethodDeclaration Modifier public BasicType boolean isReverseLoader ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int available IOException IfStatement BinaryOperation > BinaryOperation - This MemberReference entrySize This MemberReference entryOffset MemberReference Integer MAX_VALUE BlockStatement ReturnStatement MemberReference Integer MAX_VALUE ReturnStatement Cast BasicType int BinaryOperation - This MemberReference entrySize This MemberReference entryOffset	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal "" Literal endsWith assertFalse	0
MethodDeclaration Modifier private verifyBorlandJar FormalParameter ReferenceType File sourceJar IfStatement BinaryOperation == MemberReference version MemberReference BAS BlockStatement StatementExpression MethodInvocation MemberReference sourceJar verifyBorlandJarV4 ReturnStatement IfStatement BinaryOperation == MemberReference version MemberReference BES BlockStatement StatementExpression MethodInvocation MemberReference sourceJar verifyBorlandJarV5 ReturnStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal jar skipped because the version is invalid [" MemberReference version Literal "]" MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public execute BuildException IfStatement This MemberReference resolvemode MethodInvocation MemberReference AUTOMATIC equals BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -am" = IfStatement This MemberReference resolvemode MethodInvocation MemberReference FORCE equals BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -af" = IfStatement This MemberReference resolvemode MethodInvocation MemberReference SAFE equals BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -as" = IfStatement This MemberReference resolvemode MethodInvocation MemberReference THEIRS equals BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -at" = IfStatement This MemberReference resolvemode MethodInvocation MemberReference YOURS equals BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -ay" = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "unsupported or absent resolve mode" IfStatement BinaryOperation == MemberReference P4View Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "please specify a view" IfStatement This MethodInvocation isRedoall BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -f" = IfStatement This MethodInvocation isSimulationmode BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -n" = IfStatement This MethodInvocation isForcetextmode BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -t" = IfStatement This MethodInvocation isMarkersforall BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -v" = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s resolve " MemberReference P4CmdOpts Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier protected checkAttributes BuildException IfStatement BinaryOperation == MemberReference server Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "server attribute must be set!" IfStatement BinaryOperation == MemberReference userid Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "userid attribute must be set!" IfStatement BinaryOperation == MemberReference password Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "password attribute must be set!" IfStatement BinaryOperation && BinaryOperation == MemberReference action MemberReference LIST_FILES BinaryOperation == MemberReference listing Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "listing attribute must be set for list " Literal "action!" IfStatement BinaryOperation && BinaryOperation == MemberReference action MemberReference MK_DIR BinaryOperation == MemberReference remotedir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "remotedir attribute must be set for " Literal "mkdir action!" IfStatement BinaryOperation && BinaryOperation == MemberReference action MemberReference CHMOD BinaryOperation == MemberReference chmod Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "chmod attribute must be set for chmod " Literal "action!" IfStatement BinaryOperation && BinaryOperation == MemberReference action MemberReference SITE_CMD BinaryOperation == MemberReference siteCommand Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "sitecommand attribute must be set for site " Literal "action!" IfStatement This MemberReference isConfigurationSet BlockStatement TryStatement StatementExpression MethodInvocation Class Literal "org.apache.commons.net.ftp.FTPClientConfig" forName CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "commons-net.jar >= 1.4.0 is required for at least one" Literal " of the attributes specified."	1
MethodDeclaration Modifier public testFindIsolateResources Exception LocalVariableDeclaration ReferenceType String VariableDeclarator buildTestcases MethodInvocation System Literal "build.tests" getProperty StatementExpression MethodInvocation Literal "defined ${build.tests}" MemberReference buildTestcases assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "have a dir " MemberReference buildTestcases ClassCreator MethodInvocation isDirectory ReferenceType File MemberReference buildTestcases assertTrue LocalVariableDeclaration ReferenceType VariableDeclarator path ClassCreator ReferenceType MemberReference p BinaryOperation + MemberReference buildTestcases Literal "/org" LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator parent ClassCreator ReferenceType ParentLoader LocalVariableDeclaration ReferenceType URL VariableDeclarator urlFromPath ClassCreator ReferenceType URL BinaryOperation + BinaryOperation + MethodInvocation FILE_UTILS MemberReference buildTestcases toURI Literal "org/" MemberReference TEST_RESOURCE LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator acl ClassCreator ReferenceType AntClassLoader MemberReference parent MemberReference p MemberReference path Literal false StatementExpression MethodInvocation acl Literal true setIsolated StatementExpression MethodInvocation Literal "correct resources (reverse delegation order)" MethodInvocation Arrays ArrayCreator ReferenceType URL ArrayInitializer MemberReference urlFromPath asList MethodInvocation MethodInvocation acl MemberReference TEST_RESOURCE getResources enum2List assertEquals	1
MethodDeclaration Modifier public setEncoding FormalParameter ReferenceType String encoding IfStatement MethodInvocation MemberReference encoding equals BlockStatement StatementExpression Assignment MemberReference encoding Literal null = StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference mComment	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference traceCommandLine MemberReference b =	0
MethodDeclaration Modifier public setExcludesfile FormalParameter ReferenceType File excl BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation defaultPatterns MemberReference excl setExcludesfile	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal "12" Literal endsWith assertFalse	0
MethodDeclaration Modifier public testRootFilesInIndex IOException LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator archive Literal null TryStatement StatementExpression MethodInvocation Literal "testIndexTests" executeTarget StatementExpression Assignment MemberReference archive ClassCreator ReferenceType ZipFile MethodInvocation MethodInvocation MemberReference tempJar resolveFile getProject = LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze MethodInvocation archive Literal "META-INF/INDEX.LIST" getEntry LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation archive MemberReference ze getInputStream LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator r ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference is Literal "UTF8" LocalVariableDeclaration BasicType boolean VariableDeclarator foundSub Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator foundSubFoo Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator foundFoo Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation r readLine WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement MethodInvocation line Literal "foo" equals BlockStatement StatementExpression Assignment MemberReference foundFoo Literal true = IfStatement MethodInvocation line Literal equals BlockStatement StatementExpression Assignment MemberReference foundSub Literal true = IfStatement MethodInvocation line Literal "sub/foo" equals BlockStatement StatementExpression Assignment MemberReference foundSubFoo Literal true = StatementExpression Assignment MemberReference line MethodInvocation r readLine = StatementExpression MethodInvocation MemberReference foundSub assertTrue StatementExpression MethodInvocation MemberReference ! foundSubFoo assertTrue StatementExpression MethodInvocation MemberReference foundFoo assertTrue IfStatement BinaryOperation != MemberReference archive Literal null BlockStatement StatementExpression MethodInvocation archive close	1
MethodDeclaration Modifier protected ReferenceType String filter FormalParameter ReferenceType String trace LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference trace Literal "\r\n" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MethodInvocation trace length WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation st nextToken IfStatement MethodInvocation MemberReference line accept BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference StringUtils LINE_SEP append MemberReference line append ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier public testCatchNoDtd Exception StatementExpression MethodInvocation Literal Literal "expected failure" Literal "Fatal error during transformation" expectBuildExceptionContaining	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "0" MethodInvocation project Literal "exitcode" getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType TaskList IfStatement BinaryOperation != This MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one daemon group is supported" StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Resource getResource FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType Resource MemberReference name	0
MethodDeclaration Modifier public static ReferenceType Enumeration append FormalParameter ReferenceType Enumeration e1 FormalParameter ReferenceType Enumeration e2 ReturnStatement ClassCreator ReferenceType CompoundEnumeration MemberReference e1 MemberReference e2	0
MethodDeclaration Modifier public FormalParameter ReferenceType ZipFileSet fs StatementExpression MethodInvocation fs Literal "/" setPrefix StatementExpression SuperMethodInvocation MemberReference fs addFileset	0
MethodDeclaration Modifier public BasicType long ReturnStatement MemberReference totalLength	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier public FormalParameter ReferenceType URLConnection requestConnection FormalParameter ReferenceType URLConnection responseConnection FormalParameter ReferenceType String username FormalParameter ReferenceType String password BuildException IfStatement BinaryOperation != MemberReference username Literal null BlockStatement StatementExpression Assignment MemberReference password TernaryExpression BinaryOperation == MemberReference username Literal null Literal "" MemberReference password = LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MemberReference username Literal ":" MemberReference password LocalVariableDeclaration ReferenceType VariableDeclarator encoder ClassCreator ReferenceType LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation encoder MethodInvocation getBytes encodeBase64 LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + Literal " ClassCreator ReferenceType String MemberReference StatementExpression MethodInvocation requestConnection Literal MemberReference setRequestProperty	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "property attribute has been Literal "The property attribute is required." expectSpecificBuildException	0
MethodDeclaration Modifier public BasicType boolean getFull ReturnStatement MemberReference mFull	0
MethodDeclaration Modifier public setJonasroot FormalParameter Modifier final ReferenceType File inValue StatementExpression Assignment MemberReference jonasroot MemberReference inValue =	0
MethodDeclaration Modifier public FormalParameter BasicType int modified StatementExpression Assignment This MemberReference modified MemberReference modified =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference outputEncoding MemberReference encoding =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String token StatementExpression Assignment This MemberReference token MemberReference token =	0
MethodDeclaration Modifier public final BasicType boolean containsValue FormalParameter ReferenceType String value ReturnStatement BinaryOperation != MethodInvocation MemberReference value indexOfValue Literal - 1	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath getBaseDir setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_LOCK setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getOpType MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator value IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Field : Class = " MemberReference Literal ", name = " MemberReference fieldName Literal ", type = " MemberReference fieldType = BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + Literal "Field : Class index = " MemberReference classIndex Literal ", name and type index = " MemberReference nameAndTypeIndex = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType File getDirectory ReturnStatement MemberReference directory	0
MethodDeclaration Modifier public push FormalParameter ReferenceType String s StatementExpression MethodInvocation MethodInvocation s toCharArray push	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType String line ManifestException LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation line Literal ": " indexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType ManifestException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Manifest line \"" MemberReference line Literal "\" is not valid as it does not " Literal "contain a name and a value by ' " StatementExpression Assignment MemberReference name MethodInvocation line Literal 0 MemberReference index substring = StatementExpression MethodInvocation MethodInvocation line BinaryOperation + MemberReference index Literal 2 substring setValue	0
MethodDeclaration Modifier public setLocalTofile FormalParameter ReferenceType String aToUri StatementExpression MethodInvocation MemberReference aToUri StatementExpression Assignment This MemberReference isToRemote Literal false =	1
MethodDeclaration Modifier public testResourceCollection StatementExpression MethodInvocation Literal "testResourceCollection" Literal 1662256000000L touchFile	0
MethodDeclaration Modifier private FormalParameter ReferenceType String targetName FormalParameter ReferenceType String text StatementExpression MethodInvocation MemberReference targetName executeTarget StatementExpression MethodInvocation assertIndexCreated IfStatement BinaryOperation != MemberReference text Literal null BlockStatement StatementExpression MethodInvocation MemberReference text assertLogContaining	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public BasicType boolean isInputValid ReturnStatement BinaryOperation || MethodInvocation choices MethodInvocation getInput contains BinaryOperation && Literal MethodInvocation MethodInvocation getInput equals "" BinaryOperation != MethodInvocation getDefaultValue Literal null	1
MethodDeclaration * query for the request parameters on the url default * true, subclasses may want to * @return true if a url should have params */ Modifier protected BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public close java.io.IOException StatementExpression MethodInvocation in close	0
MethodDeclaration Modifier private BasicType boolean compareFiles FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference name1 LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference name2 TryStatement IfStatement BinaryOperation || MethodInvocation ! file1 exists MethodInvocation ! file2 exists BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "One or both files do not exist:" MemberReference name1 Literal ", " MemberReference name2 println ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation file1 length MethodInvocation file2 length BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File size mismatch:" MemberReference name1 Literal "(" MethodInvocation file1 length Literal "), " MemberReference name2 Literal "(" MethodInvocation file2 length Literal ")" println ReturnStatement Literal false LocalVariableDeclaration BasicType byte VariableDeclarator buffer1 ArrayCreator BasicType byte MemberReference BUF_SIZE LocalVariableDeclaration BasicType byte VariableDeclarator buffer2 ArrayCreator BasicType byte MemberReference BUF_SIZE LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis1 ClassCreator ReferenceType FileInputStream MemberReference file1 LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis2 ClassCreator ReferenceType FileInputStream MemberReference file2 LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator read Literal 0 WhileStatement BinaryOperation != Assignment MemberReference read MethodInvocation fis1 MemberReference buffer1 read = Literal - 1 BlockStatement StatementExpression MethodInvocation fis2 MemberReference buffer2 read ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference read MemberReference ++ i MemberReference ++ index BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i buffer1 MemberReference ArraySelector MemberReference i buffer2 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Bytes mismatch:" MemberReference name1 Literal ", " MemberReference name2 Literal " at byte " MemberReference index println ReturnStatement Literal false ReturnStatement Literal true CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "IOException comparing files: " MemberReference name1 Literal ", " MemberReference name2 println ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType createPrimaryfilter LocalVariableDeclaration ReferenceType VariableDeclarator filter ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference filter Literal 0 insertElementAt ReturnStatement MemberReference filter	0
MethodDeclaration Modifier private scanDir FormalParameter ReferenceType File from FormalParameter ReferenceType File to FormalParameter ReferenceType String files ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MemberReference ArraySelector MemberReference i files LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File MemberReference from MemberReference filename LocalVariableDeclaration ReferenceType File VariableDeclarator destFile IfStatement MemberReference flatten BlockStatement StatementExpression Assignment MemberReference destFile ClassCreator ReferenceType File MemberReference to ClassCreator MethodInvocation getName ReferenceType File MemberReference filename = BlockStatement StatementExpression Assignment MemberReference destFile ClassCreator ReferenceType File MemberReference to MemberReference filename = IfStatement BinaryOperation || MemberReference forceOverwrite BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation destFile lastModified BlockStatement StatementExpression MethodInvocation filecopyList MethodInvocation srcFile getAbsolutePath MethodInvocation destFile getAbsolutePath put	1
MethodDeclaration removeControlledItem FormalParameter ReferenceType java ReferenceType io ReferenceType File localFile IfStatement MethodInvocation isActive BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "removing processed " MethodInvocation localFile getAbsoluteFile Literal " from UnmatchedFileMap" MemberReference Project MSG_DEBUG log StatementExpression This MethodInvocation MethodInvocation localFile getAbsoluteFile remove	0
MethodDeclaration Modifier protected checkOptions BuildException IfStatement BinaryOperation == MemberReference toDir Literal null BlockStatement StatementExpression Assignment MemberReference toDir MethodInvocation task MethodInvocation Literal "." resolveFile getProject = IfStatement MethodInvocation ! toDir isAbsolute BlockStatement StatementExpression Assignment MemberReference toDir MethodInvocation task MethodInvocation MethodInvocation toDir getPath resolveFile getProject =	0
MethodDeclaration Modifier public addListener FormalParameter ReferenceType TestRunListener listener StatementExpression MethodInvocation dispatcher MemberReference listener addListener	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject TryStatement StatementExpression MethodInvocation Literal "test" executeTarget StatementExpression MethodInvocation Literal "should have cause a build failure" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + MethodInvocation e getMessage Literal " should start with \'Warning: Could not find" MethodInvocation e MethodInvocation Literal "Warning: Could not find file " startsWith getMessage assertTrue StatementExpression MethodInvocation BinaryOperation + MethodInvocation e MethodInvocation toString getLocation Literal " should end with " MethodInvocation e MethodInvocation toString MethodInvocation Literal " endsWith getLocation assertTrue	0
MethodDeclaration Modifier private ReferenceType JUnitTest LocalVariableDeclaration ReferenceType String VariableDeclarator filenames MethodInvocation getFilenames LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator tests ArrayCreator ReferenceType JUnitTest MemberReference filenames length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tests length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation MemberReference ArraySelector MemberReference i filenames javaToClass StatementExpression Assignment MemberReference ArraySelector MemberReference i tests MethodInvocation MemberReference classname createJUnitTest = ReturnStatement MemberReference tests	0
MethodDeclaration Modifier public ReferenceType FilterChain createErrorFilterChain IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType FilterChain VariableDeclarator result ClassCreator ReferenceType FilterChain StatementExpression MethodInvocation result MethodInvocation getProject setProject StatementExpression MethodInvocation errorFilterChains MemberReference result add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public setTimeout FormalParameter ReferenceType Long timeout StatementExpression Assignment This MemberReference timeout MemberReference timeout =	0
MethodDeclaration Modifier public ReferenceType ZipEntry getEntry FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType ZipEntry MethodInvocation nameMap MemberReference name get	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference optional	0
MethodDeclaration Modifier public setParentFirst FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType File parseAndCreateDirectory FormalParameter ReferenceType String serverResponse FormalParameter ReferenceType File localFile LocalVariableDeclaration BasicType int VariableDeclarator start MethodInvocation serverResponse Literal " " indexOf StatementExpression Assignment MemberReference start MethodInvocation serverResponse Literal " " BinaryOperation + MemberReference start Literal 1 indexOf = LocalVariableDeclaration ReferenceType String VariableDeclarator directoryName MethodInvocation serverResponse BinaryOperation + MemberReference start Literal 1 substring IfStatement MethodInvocation localFile isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MemberReference localFile MemberReference directoryName StatementExpression MethodInvocation dir mkdir StatementExpression MethodInvocation BinaryOperation + Literal "Creating: " MemberReference dir log ReturnStatement MemberReference dir ReturnStatement Literal null	1
MethodDeclaration Modifier public setDoctitle FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Html VariableDeclarator h ClassCreator ReferenceType Html StatementExpression MethodInvocation h MemberReference addText StatementExpression MethodInvocation MemberReference h addDoctitle	0
MethodDeclaration Modifier public FormalParameter ReferenceType String resource StatementExpression MethodInvocation assertSrcIsJavaResource StatementExpression Cast ReferenceType MemberReference src	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "clean" executeTarget	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 IfStatement BinaryOperation == MemberReference o1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference o2 Literal null BlockStatement ReturnStatement Literal 1 ReturnStatement Literal 0 ReturnStatement TernaryExpression MethodInvocation o1 MemberReference o2 equals Literal 0 Literal 1	1
MethodDeclaration Modifier public synchronized setExcludes FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation defaultPatterns MemberReference setExcludes StatementExpression Assignment MemberReference directoryScanner Literal null =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier protected ReferenceType Enumeration findResources FormalParameter ReferenceType String name IOException IfStatement MethodInvocation name MemberReference TEST_RESOURCE equals BlockStatement ReturnStatement MethodInvocation Collections MethodInvocation Collections ClassCreator ReferenceType URL BinaryOperation + Literal "http://ant.apache.org/" MemberReference name singleton enumeration BlockStatement ReturnStatement MethodInvocation Collections MemberReference Collections EMPTY_SET enumeration	1
MethodDeclaration Modifier public BasicType int scanOneFileset FormalParameter ReferenceType DirectoryScanner scanner FormalParameter ReferenceType Hashtable filesToBuild FormalParameter BasicType long outputTimestamp LocalVariableDeclaration BasicType int VariableDeclarator filesOutOfDate Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator dependencies MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType File VariableDeclarator base MethodInvocation scanner getBasedir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dependencies length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator targetFile ClassCreator ReferenceType File MemberReference base MemberReference ArraySelector MemberReference i dependencies IfStatement BinaryOperation == MethodInvocation filesToBuild MemberReference targetFile get Literal null BlockStatement StatementExpression MethodInvocation filesToBuild MemberReference targetFile MemberReference targetFile put IfStatement BinaryOperation > MethodInvocation targetFile lastModified MemberReference outputTimestamp BlockStatement StatementExpression MemberReference ++ filesOutOfDate StatementExpression MethodInvocation owner BinaryOperation + MethodInvocation targetFile toString Literal " is out of date" MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation owner MethodInvocation targetFile toString MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference filesOutOfDate	1
MethodDeclaration Modifier protected ReferenceType String getAsOfDate ReturnStatement This MemberReference asOfDate	0
MethodDeclaration Modifier public fireSubBuildStarted LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent This LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator listener MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference listener ReferenceType SubBuildListener BlockStatement StatementExpression Cast ReferenceType SubBuildListener MemberReference listener	0
MethodDeclaration Modifier public ReferenceType String getResponse IOException StatementExpression MethodInvocation result Literal 0 setLength LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation reader readLine IfStatement BinaryOperation && BinaryOperation != MemberReference line Literal null BinaryOperation >= MethodInvocation line length Literal 3 BlockStatement StatementExpression MethodInvocation result MethodInvocation line Literal 0 Literal 3 substring append StatementExpression MethodInvocation result Literal " " append WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation MemberReference line append IfStatement MethodInvocation ! MemberReference line hasMoreLines BlockStatement BreakStatement StatementExpression Assignment MemberReference line MethodInvocation reader readLine = ReturnStatement MethodInvocation result MethodInvocation trim toString	0
MethodDeclaration Modifier public testDocumentationClaimsOnCopy java.io.IOException StatementExpression MethodInvocation Literal "testDocumentationClaimsOnCopy" testRealTest	0
MethodDeclaration Modifier public BasicType long runCount ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized run TryStatement StatementExpression MethodInvocation MemberReference timeout wait SynchronizedStatement MemberReference semaphore StatementExpression Assignment MemberReference stillRunning Literal false = StatementExpression Assignment MemberReference timedOut Literal true = StatementExpression MethodInvocation semaphore notifyAll CatchClause CatchClauseParameter InterruptedException e	1
MethodDeclaration Modifier public testClassname StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal getProperty getProject assertNotNull	0
MethodDeclaration Modifier public FormalParameter ReferenceType String fromf StatementExpression Assignment This MemberReference fromfile MemberReference fromf =	0
MethodDeclaration * @see */ Modifier public taskStarted FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType Logger VariableDeclarator log MethodInvocation Logger MethodInvocation task MethodInvocation getName getClass getLogger StatementExpression MethodInvocation log BinaryOperation + BinaryOperation + Literal "Task \"" MethodInvocation task getTaskName Literal "\" started." info	1
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String p StatementExpression Assignment MemberReference property MemberReference p =	0
MethodDeclaration Modifier public static BasicType boolean match FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation MemberReference pattern MemberReference str Literal true match	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference reg MethodInvocation getImplementation =	0
MethodDeclaration Modifier private static loadExtensions FormalParameter Modifier final ReferenceType File file FormalParameter Modifier final ReferenceType List extensionList FormalParameter Modifier final BasicType boolean includeImpl FormalParameter Modifier final BasicType boolean includeURL BuildException TryStatement LocalVariableDeclaration Modifier final ReferenceType JarFile VariableDeclarator jarFile ClassCreator ReferenceType JarFile MemberReference file LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extensions MethodInvocation Extension MethodInvocation jarFile getManifest getAvailable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i extensions StatementExpression MethodInvocation MemberReference extensionList MemberReference extension MemberReference includeImpl MemberReference includeURL addExtension CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation e getMessage MemberReference e	1
MethodDeclaration Modifier private initTypes LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classLoader MethodInvocation Literal null getClassLoader LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation Literal true LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props propertyNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation props MemberReference name getProperty LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def ClassCreator ReferenceType AntTypeDefinition StatementExpression MethodInvocation def MemberReference name setName StatementExpression MethodInvocation def MemberReference className StatementExpression MethodInvocation def MemberReference classLoader StatementExpression MethodInvocation antTypeTable MemberReference name MemberReference def put	0
MethodDeclaration Modifier public testSingleFileUploadAndDownload IOException LocalVariableDeclaration ReferenceType File VariableDeclarator uploadFile MethodInvocation createTemporaryFile LocalVariableDeclaration ReferenceType Scp VariableDeclarator scpTask MethodInvocation createTask StatementExpression MethodInvocation scpTask MethodInvocation uploadFile getPath setFile StatementExpression MethodInvocation scpTask MemberReference sshHostUri setTodir StatementExpression MethodInvocation scpTask execute LocalVariableDeclaration ReferenceType File VariableDeclarator testFile ClassCreator ReferenceType File BinaryOperation + BinaryOperation + MethodInvocation tempDir getPath MemberReference File separator Literal "download-testSingleFileUploadAndDownload.test" StatementExpression MethodInvocation MemberReference testFile addCleanup StatementExpression MethodInvocation Literal "Assert that the testFile does not exist." MethodInvocation ! testFile exists assertTrue StatementExpression MethodInvocation scpTask BinaryOperation + BinaryOperation + MemberReference sshHostUri Literal "/" MethodInvocation uploadFile getName setFile StatementExpression MethodInvocation scpTask MethodInvocation testFile getPath setTodir StatementExpression MethodInvocation scpTask execute StatementExpression MethodInvocation Literal "Assert that the testFile exists." MethodInvocation testFile exists assertTrue StatementExpression MethodInvocation MemberReference uploadFile MemberReference testFile compareFiles	1
MethodDeclaration Modifier public setJavacchome FormalParameter ReferenceType File javaccHome StatementExpression Assignment This MemberReference javaccHome MemberReference javaccHome =	0
MethodDeclaration Modifier public setIashome FormalParameter ReferenceType File iashome StatementExpression Assignment This MemberReference iashome MemberReference iashome =	0
MethodDeclaration Modifier public startTestSuite FormalParameter ReferenceType JUnitTest suite BuildException IfStatement BinaryOperation == MemberReference out Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Testsuite: " StatementExpression MethodInvocation sb MethodInvocation suite getName append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append TryStatement StatementExpression MethodInvocation out MethodInvocation sb MethodInvocation getBytes toString write StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write output" MemberReference ex	1
MethodDeclaration Modifier public FormalParameter ReferenceType docletPath IfStatement BinaryOperation == MemberReference doclet Literal null BlockStatement StatementExpression Assignment MemberReference doclet ClassCreator ReferenceType DocletInfo = StatementExpression MethodInvocation doclet MethodInvocation getProject setProject StatementExpression MethodInvocation doclet MemberReference docletPath setPath	0
MethodDeclaration Modifier public synchronized BasicType boolean hasPatterns IfStatement BinaryOperation && MethodInvocation isReference BinaryOperation != MethodInvocation getProject Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation hasPatterns MethodInvocation getProject getRef IfStatement MethodInvocation defaultPatterns MethodInvocation getProject hasPatterns BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation additionalPatterns elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType PatternSet VariableDeclarator ps Cast ReferenceType PatternSet MethodInvocation e nextElement IfStatement MethodInvocation ps MethodInvocation getProject hasPatterns BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public setChoiceambiguitycheck FormalParameter BasicType int choiceAmbiguityCheck StatementExpression MethodInvocation optionalAttrs MemberReference CHOICE_AMBIGUITY_CHECK ClassCreator ReferenceType Integer MemberReference choiceAmbiguityCheck put	1
MethodDeclaration Modifier final protected fireTimeoutOccured LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation observers elements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Cast ReferenceType TimeoutObserver MethodInvocation e nextElement	0
MethodDeclaration Modifier public setVersion FormalParameter ReferenceType String version StatementExpression SuperMethodInvocation MemberReference version setInternalVersion	0
MethodDeclaration Modifier public static ReferenceType ClassLoader getClassLoaderForPath FormalParameter ReferenceType Project p FormalParameter ReferenceType path FormalParameter ReferenceType String FormalParameter BasicType boolean ReturnStatement MethodInvocation MemberReference p MemberReference path MemberReference MemberReference MethodInvocation MemberReference p isMagicPropertySet getClassLoaderForPath	0
MethodDeclaration * an array containing the target filename(s) for the given * * * <p>if the given rule doesn't apply to the source file, * must return null. SourceFileScanner will then omit the source file * * @param sourceFileName the name of the source file to some * * @return an array of strings if the rule applies to the source file, * null if it does */ Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName StatementExpression MethodInvocation initScriptRunner StatementExpression MethodInvocation MethodInvocation Literal "source" MemberReference sourceFileName addBean StatementExpression MethodInvocation clear StatementExpression MethodInvocation Literal "ant_mapper" executeScript IfStatement BinaryOperation == MethodInvocation files size Literal 0 BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement Cast ReferenceType String MethodInvocation files MemberReference EMPTY_STRING_ARRAY toArray	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String message ReturnStatement MemberReference trustAllCertificates	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal configureProject	0
MethodDeclaration Modifier public FormalParameter BasicType boolean force StatementExpression Assignment This MemberReference forceOverwrite MemberReference force =	0
MethodDeclaration Modifier public visitJavaClass FormalParameter ReferenceType JavaClass javaClass StatementExpression MethodInvocation MethodInvocation javaClass getClassName addClass	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "out/out/one.txt" Literal "filename='-not-set-'" assertFileContains StatementExpression MethodInvocation Literal "out/out/two.txt" Literal "filename='-not-set-'" assertFileContains StatementExpression MethodInvocation Literal "out/out/three.txt" Literal "filename='-not-set-'" assertFileContains StatementExpression MethodInvocation Literal "out/out/dir/four.txt" Literal "filename='-not-set-'" assertFileContains	0
MethodDeclaration Modifier public setBufferDebug FormalParameter BasicType boolean debug StatementExpression This MemberReference buffer MethodInvocation MemberReference debug setDebug	0
MethodDeclaration Modifier public setHandleDirSep FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation MemberReference obj Literal false	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Hashtable map FormalParameter ReferenceType File basedir FormalParameter ReferenceType String elems ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elems length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator f ClassCreator ReferenceType MemberReference basedir MemberReference ArraySelector MemberReference i elems IfStatement MethodInvocation MemberReference f accept BlockStatement StatementExpression MethodInvocation map MethodInvocation f getPath MemberReference f put	1
MethodDeclaration Modifier private ReferenceType ClasspathUtils ReferenceType Delegate getClassPathDelegate IfStatement BinaryOperation == MemberReference cpDelegate Literal null BlockStatement StatementExpression Assignment MemberReference cpDelegate MethodInvocation ClasspathUtils MemberReference projectComponent getDelegate = ReturnStatement MemberReference cpDelegate	0
MethodDeclaration Modifier public testToString Exception LocalVariableDeclaration ReferenceType File VariableDeclarator tmp MethodInvocation File Literal Literal "" createTempFile StatementExpression MethodInvocation tmp delete LocalVariableDeclaration ReferenceType File VariableDeclarator a ClassCreator ReferenceType File MemberReference tmp Literal "a" StatementExpression MethodInvocation a mkdirs LocalVariableDeclaration ReferenceType File VariableDeclarator b ClassCreator ReferenceType File MemberReference tmp Literal "b" LocalVariableDeclaration ReferenceType File VariableDeclarator bc ClassCreator ReferenceType File MemberReference b Literal "c" StatementExpression MethodInvocation bc mkdirs StatementExpression ClassCreator MethodInvocation close ReferenceType FileOutputStream ClassCreator ReferenceType File MemberReference a Literal "x" StatementExpression ClassCreator MethodInvocation close ReferenceType FileOutputStream ClassCreator ReferenceType File MemberReference b Literal "x" StatementExpression ClassCreator MethodInvocation close ReferenceType FileOutputStream ClassCreator ReferenceType File MemberReference bc Literal "x" LocalVariableDeclaration ReferenceType DirSet VariableDeclarator ds ClassCreator ReferenceType DirSet StatementExpression MethodInvocation ds MethodInvocation getProject setProject StatementExpression MethodInvocation ds MemberReference tmp setDir StatementExpression MethodInvocation ds Literal setIncludes StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference File separator Literal "c" MethodInvocation ds toString assertEquals	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal src invalid" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType File fileName StatementExpression Assignment MemberReference MemberReference fileName =	0
MethodDeclaration Modifier protected ReferenceType XSLTLiaison getLiaison IfStatement BinaryOperation == MemberReference liaison Literal null BlockStatement IfStatement BinaryOperation != MemberReference processor Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference processor resolveProcessor CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e BlockStatement TryStatement StatementExpression MethodInvocation MemberReference PROCESSOR_TRAX resolveProcessor CatchClause CatchClauseParameter Throwable e1 StatementExpression MethodInvocation e1 printStackTrace ThrowStatement ClassCreator ReferenceType BuildException MemberReference e1 ReturnStatement MemberReference liaison	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier protected writeJar FormalParameter ReferenceType String baseName FormalParameter ReferenceType File jarFile FormalParameter ReferenceType Hashtable files FormalParameter ReferenceType String publicId BuildException LocalVariableDeclaration ReferenceType Vector VariableDeclarator homes ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation files MethodInvocation iterator keySet WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clazz Cast ReferenceType String MethodInvocation it next IfStatement MethodInvocation clazz Literal "Home.class" endsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator home MethodInvocation MemberReference clazz toClass StatementExpression MethodInvocation homes MemberReference home add StatementExpression MethodInvocation BinaryOperation + Literal " Home " MemberReference home MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation homes iterator buildBorlandStubs StatementExpression MethodInvocation files MemberReference genfiles putAll StatementExpression SuperMethodInvocation MemberReference baseName MemberReference jarFile MemberReference files MemberReference publicId writeJar IfStatement MemberReference verify BlockStatement StatementExpression MethodInvocation MemberReference jarFile verifyBorlandJar IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference jarFile generateClient	1
MethodDeclaration Modifier public FormalParameter ReferenceType String property StatementExpression Assignment MemberReference outputProperty MemberReference property =	0
MethodDeclaration Modifier public ReferenceType String getResource ReturnStatement MemberReference resource	0
MethodDeclaration * Set the book xml file that the documentation generation starts * * @param book the source */ Modifier public FormalParameter Modifier final ReferenceType File book StatementExpression Assignment MemberReference m_book MemberReference book =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference mComment MemberReference =	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator thisChar SuperMethodInvocation read IfStatement BinaryOperation == MemberReference thisChar Literal - 1 BlockStatement IfStatement BinaryOperation != MemberReference lastChar MemberReference CTRLZ BlockStatement StatementExpression Assignment MemberReference lastChar MemberReference CTRLZ = ReturnStatement MemberReference lastChar BlockStatement StatementExpression Assignment MemberReference lastChar MemberReference thisChar = ReturnStatement MemberReference thisChar	1
MethodDeclaration Modifier public BasicType boolean getDelayUpdate ReturnStatement MemberReference delayUpdate	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType String propertyName StatementExpression Assignment MemberReference MemberReference propertyName =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is Value Setexecute: value is Value Set" expectLogContaining	0
MethodDeclaration Modifier private writeByteArray IOException StatementExpression MethodInvocation stream MethodInvocation LINE getBytes Literal 0 MethodInvocation LINE length write	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer Literal "soscmd" Literal "-command" Literal "CheckInProject" Literal "-recursive" Literal "-server" MemberReference SOS_SERVER_PATH Literal "-name" MemberReference SOS_USERNAME Literal "-password" Literal "" Literal "-database" MemberReference VSS_SERVER_PATH Literal "-project" MemberReference DS_VSS_PROJECT_PATH Literal "" Literal "" Literal "-soshome" MemberReference SOS_HOME Literal "-workdir" MethodInvocation project MethodInvocation getAbsolutePath getBaseDir Literal "-log" MemberReference SRC_COMMENT LocalVariableDeclaration ReferenceType SOSCheckin VariableDeclarator sosCheckin ClassCreator ReferenceType SOSCheckin StatementExpression MethodInvocation sosCheckin MemberReference project setProject StatementExpression MethodInvocation sosCheckin MemberReference VSS_SERVER_PATH setVssServerPath StatementExpression MethodInvocation sosCheckin MemberReference SOS_SERVER_PATH setSosServerPath StatementExpression MethodInvocation sosCheckin MemberReference DS_VSS_PROJECT_PATH setProjectPath StatementExpression MethodInvocation sosCheckin MemberReference SRC_COMMENT StatementExpression MethodInvocation sosCheckin MemberReference SOS_USERNAME setUsername StatementExpression MethodInvocation sosCheckin MemberReference SOS_HOME setSosHome StatementExpression MethodInvocation sosCheckin Literal true setNoCache StatementExpression MethodInvocation sosCheckin Literal false setNoCompress StatementExpression MethodInvocation sosCheckin Literal false setVerbose StatementExpression MethodInvocation sosCheckin Literal true setRecursive StatementExpression Assignment MemberReference commandline MethodInvocation sosCheckin buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration sendFrom FormalParameter ReferenceType String from IOException LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference OK_FROM StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "MAIL FROM: " Literal "<" MethodInvocation MemberReference from sanitizeAddress Literal ">" MemberReference ok send	0
MethodDeclaration Modifier protected BasicType byte getBytes FormalParameter ReferenceType String name ZipException IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement ReturnStatement MethodInvocation name getBytes BlockStatement TryStatement ReturnStatement MethodInvocation name MemberReference encoding getBytes CatchClause CatchClauseParameter UnsupportedEncodingException uee ThrowStatement ClassCreator ReferenceType ZipException MethodInvocation uee getMessage	1
MethodDeclaration Modifier public demuxFlush FormalParameter ReferenceType String output FormalParameter BasicType boolean isError LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation MethodInvocation Thread currentThread IfStatement BinaryOperation == MemberReference task Literal null BlockStatement StatementExpression MethodInvocation This MemberReference output TernaryExpression MemberReference isError MemberReference MSG_ERR MemberReference MSG_INFO fireMessageLogged BlockStatement IfStatement MemberReference isError BlockStatement StatementExpression MethodInvocation task MemberReference output handleErrorFlush BlockStatement StatementExpression MethodInvocation task MemberReference output handleFlush	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference resources TernaryExpression BinaryOperation == MemberReference resources Literal null ClassCreator ReferenceType FileUnion MemberReference resources = StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileSet MethodInvocation MethodInvocation getProject getRef BlockStatement ReturnStatement SuperMethodInvocation clone	1
MethodDeclaration Modifier public BasicType boolean isRecurse ReturnStatement MemberReference recurse	0
MethodDeclaration Modifier public FormalParameter ReferenceType String p StatementExpression Assignment This MemberReference password MemberReference p =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileNameMapper fileNameMapper StatementExpression MethodInvocation MethodInvocation MemberReference fileNameMapper add createMapper	0
MethodDeclaration Modifier public FormalParameter BasicType int tlength BuildException TryStatement StatementExpression MethodInvocation filter MemberReference tlength CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier private static ReferenceType String tokenizePathAsArray FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType String VariableDeclarator root Literal null IfStatement MethodInvocation FileUtils MemberReference path isAbsolutePath BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation FILE_UTILS MemberReference path StatementExpression Assignment MemberReference root MemberReference ArraySelector Literal 0 s = StatementExpression Assignment MemberReference path MemberReference ArraySelector Literal 1 s = LocalVariableDeclaration BasicType char VariableDeclarator sep MemberReference File separatorChar LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation path length LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator pos Literal 0 BinaryOperation < MemberReference pos MemberReference len MemberReference ++ pos BlockStatement IfStatement BinaryOperation == MethodInvocation path MemberReference pos charAt MemberReference sep BlockStatement IfStatement BinaryOperation != MemberReference pos MemberReference start BlockStatement StatementExpression MemberReference ++ count StatementExpression Assignment MemberReference start BinaryOperation + MemberReference pos Literal 1 = IfStatement BinaryOperation != MemberReference len MemberReference start BlockStatement StatementExpression MemberReference ++ count LocalVariableDeclaration ReferenceType String VariableDeclarator l ArrayCreator ReferenceType String BinaryOperation + MemberReference count TernaryExpression BinaryOperation == MemberReference root Literal null Literal 0 Literal 1 IfStatement BinaryOperation != MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 l MemberReference root = StatementExpression Assignment MemberReference count Literal 1 = BlockStatement StatementExpression Assignment MemberReference count Literal 0 = StatementExpression Assignment MemberReference start Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator pos Literal 0 BinaryOperation < MemberReference pos MemberReference len MemberReference ++ pos BlockStatement IfStatement BinaryOperation == MethodInvocation path MemberReference pos charAt MemberReference sep BlockStatement IfStatement BinaryOperation != MemberReference pos MemberReference start BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tok MethodInvocation path MemberReference start MemberReference pos substring StatementExpression Assignment MemberReference ArraySelector MemberReference ++ count l MemberReference tok = StatementExpression Assignment MemberReference start BinaryOperation + MemberReference pos Literal 1 = IfStatement BinaryOperation != MemberReference len MemberReference start BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tok MethodInvocation path MemberReference start substring StatementExpression Assignment MemberReference ArraySelector MemberReference count l MemberReference tok = ReturnStatement MemberReference l	1
MethodDeclaration Modifier synchronized static invalidate FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType Set VariableDeclarator s Cast ReferenceType Set MethodInvocation MAP MemberReference o get IfStatement BinaryOperation != MemberReference s Literal null BlockStatement StatementExpression MethodInvocation s clear	0
MethodDeclaration Modifier public testIgnoreCase StatementExpression MethodInvocation Literal "ignore.case" executeTarget	0
MethodDeclaration Modifier public testUseTimestamp StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType String replaceString FormalParameter ReferenceType String inpString FormalParameter ReferenceType String escapeChars FormalParameter ReferenceType String replaceChars LocalVariableDeclaration ReferenceType String VariableDeclarator localString Literal "" LocalVariableDeclaration BasicType int VariableDeclarator numTokens Literal 0 LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference inpString MemberReference escapeChars Literal true StatementExpression Assignment MemberReference numTokens MethodInvocation st countTokens = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference numTokens MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator test MethodInvocation st nextToken StatementExpression Assignment MemberReference test TernaryExpression MethodInvocation test MemberReference escapeChars equals MemberReference replaceChars MemberReference test = StatementExpression Assignment MemberReference localString MemberReference test += ReturnStatement MemberReference localString	1
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation helper createClasspath	0
MethodDeclaration Modifier public ReferenceType EjbInfo ReturnStatement Cast ReferenceType EjbInfo MethodInvocation ejbs MethodInvocation ArrayCreator ReferenceType EjbInfo MethodInvocation ejbs size toArray values	0
MethodDeclaration Modifier protected handle FormalParameter ReferenceType Resource r StatementExpression MethodInvocation MethodInvocation MethodInvocation r toString print getPs StatementExpression MethodInvocation MethodInvocation Literal " : " print getPs LocalVariableDeclaration BasicType long VariableDeclarator size MethodInvocation r getSize IfStatement BinaryOperation == MemberReference size MemberReference Resource UNKNOWN_SIZE BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "unknown" println getPs BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference size println getPs	1
MethodDeclaration Modifier public removeAttribute FormalParameter ReferenceType String attributeName LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attributeName toLowerCase StatementExpression MethodInvocation attributes MemberReference key remove StatementExpression MethodInvocation MemberReference key removeElement	1
MethodDeclaration Modifier private ReferenceType File createTempDir IOException LocalVariableDeclaration ReferenceType File VariableDeclarator tmpDir MethodInvocation File Literal "genic" Literal null Literal null createTempFile StatementExpression MethodInvocation tmpDir delete IfStatement MethodInvocation ! tmpDir mkdir BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal "Cannot create the temporary directory '" MemberReference tmpDir Literal "'." ReturnStatement MemberReference tmpDir	1
MethodDeclaration Modifier public test7 StatementExpression MethodInvocation Literal "test7" executeTarget	0
MethodDeclaration Modifier public testUnless StatementExpression MethodInvocation Literal "testUnless" Literal must fail unless foo has been set" expectBuildException StatementExpression MethodInvocation project Literal "foo" Literal "" setProperty TryStatement StatementExpression MethodInvocation Literal "testUnless" executeTarget CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "foo has been defined, testUnless must not fail" fail	0
MethodDeclaration Modifier public setLogger FormalParameter ReferenceType XSLTLogger l StatementExpression Assignment MemberReference logger MemberReference l =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "redirector14" executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "cat.can.run" getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected log output" Literal "blah after blah" MethodInvocation getLog assertEquals	0
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object other IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Comparable MethodInvocation getCheckedRef IfStatement BinaryOperation instanceof MemberReference other ReferenceType Resource BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Can only be with Resources" ReturnStatement MethodInvocation MethodInvocation MethodInvocation other toString compareTo toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType parent StatementExpression Assignment This MemberReference parent MemberReference parent =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This PvcsProject MemberReference name MemberReference name =	1
MethodDeclaration Modifier public setChangelist FormalParameter BasicType int changelist BuildException IfStatement BinaryOperation <= MemberReference changelist Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "P4FStat: Changelist# should be a " Literal "positive number" StatementExpression Assignment This MemberReference changelist MemberReference changelist =	1
MethodDeclaration Modifier public setNowarn FormalParameter BasicType boolean nowarn StatementExpression Assignment This MemberReference nowarn MemberReference nowarn =	0
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList attrs SAXParseException StatementExpression ClassCreator MethodInvocation MemberReference name MemberReference attrs init ReferenceType NestedElementHandler MemberReference helperImpl This MemberReference element MemberReference wrapper MemberReference target	1
MethodDeclaration Modifier private ReferenceType ScriptRunnerBase ReturnStatement ClassCreator MethodInvocation MemberReference manager MemberReference language MethodInvocation generateClassLoader createRunner ReferenceType ScriptRunnerCreator MethodInvocation projectComponent getProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setParallel FormalParameter BasicType boolean parallel ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the parallel attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference file1 Literal null BinaryOperation == MemberReference file2 Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "both file1 and file2 are required in " Literal "filesmatch" LocalVariableDeclaration BasicType boolean VariableDeclarator matches Literal false TryStatement StatementExpression Assignment MemberReference matches MethodInvocation FILE_UTILS MemberReference file1 MemberReference file2 MemberReference contentEquals = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal comparing files: " MethodInvocation ioe getMessage MemberReference ioe ReturnStatement MemberReference matches	1
MethodDeclaration Modifier public parseCatalog FormalParameter ReferenceType String file LocalVariableDeclaration ReferenceType VariableDeclarator catalog MethodInvocation getCatalog IfStatement BinaryOperation instanceof MemberReference catalog ReferenceType ApacheCatalog BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Wrong catalog type found: " MethodInvocation catalog MethodInvocation getName getClass LocalVariableDeclaration ReferenceType ApacheCatalog VariableDeclarator apacheCatalog Cast ReferenceType ApacheCatalog MemberReference catalog StatementExpression MethodInvocation apacheCatalog This TryStatement StatementExpression MethodInvocation apacheCatalog MemberReference file parseCatalog CatchClause CatchClauseParameter MalformedURLException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier private runTest FormalParameter ReferenceType Test test FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent MemberReference id MemberReference TestRunEvent SUITE_STARTED MemberReference name IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt onSuiteStarted StatementExpression MethodInvocation MemberReference evt LocalVariableDeclaration ReferenceType TestSummary VariableDeclarator suiteSummary ClassCreator ReferenceType TestSummary StatementExpression MethodInvocation suiteSummary MemberReference testResult start TryStatement StatementExpression MethodInvocation test MemberReference testResult run StatementExpression MethodInvocation suiteSummary MemberReference testResult stop StatementExpression Assignment MemberReference evt ClassCreator ReferenceType TestRunEvent MemberReference id MemberReference TestRunEvent SUITE_ENDED MemberReference name MemberReference suiteSummary = IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt onSuiteEnded StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier public setInput FormalParameter ReferenceType String input StatementExpression Assignment This MemberReference input MemberReference input =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public flush IOException StatementExpression MethodInvocation left flush StatementExpression MethodInvocation right flush	1
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator c MethodInvocation validate IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation < MethodInvocation c size Literal 1 BinaryOperation == MemberReference header Literal null BinaryOperation == MemberReference footer Literal null BlockStatement StatementExpression MethodInvocation Literal "No existing resources and no text, doing nothing" MemberReference Project MSG_INFO log ReturnStatement IfStatement MemberReference binary BlockStatement StatementExpression MethodInvocation MemberReference c binaryCat BlockStatement StatementExpression MethodInvocation MemberReference c cat	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testFilesetAndSignedJar" Literal "incompatible MemberReference SignJar expectBuildExceptionContaining	0
MethodDeclaration Modifier public BasicType boolean hasNext IfStatement BinaryOperation == MemberReference wrapped Literal null BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation This failFast ReturnStatement MethodInvocation wrapped hasNext	0
MethodDeclaration Modifier public InterruptedException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration BasicType long VariableDeclarator l MethodInvocation MethodInvocation Literal resolveFile MethodInvocation lastModified getProject StatementExpression MethodInvocation Thread Literal 3000 sleep StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MemberReference l MethodInvocation MethodInvocation Literal resolveFile MethodInvocation lastModified getProject assertEquals	0
MethodDeclaration Modifier public final setURL FormalParameter ReferenceType String url LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator t ClassCreator ReferenceType StringTokenizer MemberReference url Literal "/" IfStatement MethodInvocation t hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator unpw MethodInvocation t nextToken LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation unpw Literal ":" indexOf IfStatement BinaryOperation > MemberReference pos Literal 0 BlockStatement StatementExpression Assignment This MemberReference servername MethodInvocation unpw Literal 0 MemberReference pos substring = StatementExpression Assignment This MemberReference MethodInvocation unpw BinaryOperation + MemberReference pos Literal 1 substring = IfStatement MethodInvocation t hasMoreTokens BlockStatement StatementExpression Assignment This MemberReference MethodInvocation t nextToken = IfStatement MethodInvocation t hasMoreTokens BlockStatement StatementExpression Assignment This MemberReference viewname MethodInvocation t nextToken =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File tmpDir StatementExpression Assignment This MemberReference tmpDir MemberReference tmpDir =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "verifyFromProperty" executeTarget	0
MethodDeclaration Modifier public test3 IOException StatementExpression MethodInvocation Literal "test3" executeTarget	0
MethodDeclaration Modifier private static ReferenceType Project getProject FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType ProjectComponent BlockStatement ReturnStatement Cast ReferenceType ProjectComponent MemberReference o TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation o MethodInvocation Literal "getProject" Cast ReferenceType Class Literal null getMethod getClass IfStatement BinaryOperation == ClassReference ReferenceType Project MethodInvocation m getReturnType BlockStatement ReturnStatement Cast ReferenceType Project MethodInvocation m MemberReference o Cast ReferenceType Object Literal null invoke CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference p ClassCreator ReferenceType Project = StatementExpression MethodInvocation p init StatementExpression MethodInvocation Literal "src/etc/testcases/core/antclassloader.xml" configureProject StatementExpression MethodInvocation MethodInvocation Literal "setup" executeTarget getProject	0
MethodDeclaration Modifier public ReferenceType String getManifestVersion ReturnStatement MemberReference manifestVersion	0
MethodDeclaration Modifier public setValue FormalParameter BasicType long size StatementExpression Assignment This MemberReference size MemberReference size = IfStatement BinaryOperation && BinaryOperation != MemberReference multiplier Literal 0 BinaryOperation > MemberReference size Literal - 1 BlockStatement StatementExpression Assignment MemberReference sizelimit BinaryOperation * MemberReference size MemberReference multiplier =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal "@test@ line testvalue" LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal "@test@ line LocalVariableDeclaration ReferenceType FilterSet VariableDeclarator fs ClassCreator ReferenceType FilterSet StatementExpression MethodInvocation fs Literal "test" Literal "@test1@" addFilter StatementExpression MethodInvocation fs Literal "test1" Literal "@test2@" addFilter StatementExpression MethodInvocation fs Literal "test2" Literal "@test@" addFilter StatementExpression MethodInvocation fs Literal "test3" Literal "testvalue" addFilter StatementExpression MethodInvocation fs Literal "@" setBeginToken StatementExpression MethodInvocation fs Literal "@" setEndToken StatementExpression MethodInvocation MemberReference result MethodInvocation fs MemberReference line assertEquals	0
MethodDeclaration Modifier protected ReferenceType String getImportsParameter IfStatement BinaryOperation && BinaryOperation != MemberReference imports Literal null BinaryOperation != MethodInvocation imports length Literal 0 BlockStatement ReturnStatement BinaryOperation + Literal MemberReference imports BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getResolver ReturnStatement MemberReference resolver	0
MethodDeclaration Modifier public setMax FormalParameter BasicType int max StatementExpression Assignment This MemberReference max MemberReference max =	0
MethodDeclaration Modifier public expectBuildExceptionContaining FormalParameter ReferenceType String target FormalParameter ReferenceType String cause FormalParameter ReferenceType String contains TryStatement StatementExpression MethodInvocation MemberReference target executeTarget CatchClause CatchClauseParameter org.apache.tools.ant.BuildException ex StatementExpression Assignment MemberReference buildException MemberReference ex = IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference contains BinaryOperation == MethodInvocation ex MethodInvocation MemberReference contains indexOf getMessage Literal - 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Should throw BuildException because '" MemberReference cause Literal "' with message containing '" MemberReference contains Literal "' (actual message '" MethodInvocation ex getMessage Literal "' instead)" fail ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "Should throw BuildException because: " MemberReference cause fail	1
MethodDeclaration Modifier protected getOptionalAttributes StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getVerbose setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getNoCompress setValue createArgument IfStatement BinaryOperation == MethodInvocation getSosHome Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getNoCache setValue createArgument BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference FLAG_SOS_HOME setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getSosHome setValue createArgument IfStatement BinaryOperation != MethodInvocation getLocalPath Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference FLAG_WORKING_DIR setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLocalPath setValue createArgument	0
MethodDeclaration Modifier public testResourcenameWithLeadingSlash StatementExpression MethodInvocation Literal "testResourcenameWithLeadingSlash" executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal getProperty getProject assertNotNull	0
MethodDeclaration Modifier public setInput FormalParameter ReferenceType File input StatementExpression MethodInvocation TernaryExpression BinaryOperation == MemberReference input Literal null Literal null ArrayCreator ReferenceType File ArrayInitializer MemberReference input setInput	0
MethodDeclaration Modifier public BasicType boolean isExists IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef StatementExpression MethodInvocation checkEntry ReturnStatement SuperMethodInvocation isExists	1
MethodDeclaration Modifier public handleOutput FormalParameter ReferenceType String output IfStatement BinaryOperation && MemberReference ! logTestListenerEvents MethodInvocation output MemberReference JUnitTask TESTLISTENER_PREFIX startsWith BlockStatement IfStatement BinaryOperation != MemberReference systemOut Literal null BlockStatement StatementExpression MethodInvocation systemOut MemberReference output print	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String val StatementExpression Assignment This MemberReference value MemberReference val =	0
MethodDeclaration Modifier public FormalParameter ReferenceType InputStream StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType RegexpMatcher newRegexpMatcher FormalParameter ReferenceType Project p BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator systemDefault Literal null IfStatement BinaryOperation == MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference systemDefault MethodInvocation System MemberReference MagicNames REGEXP_IMPL getProperty = BlockStatement StatementExpression Assignment MemberReference systemDefault MethodInvocation p MemberReference MagicNames REGEXP_IMPL getProperty = IfStatement BinaryOperation != MemberReference systemDefault Literal null BlockStatement ReturnStatement MethodInvocation MemberReference systemDefault createInstance LocalVariableDeclaration ReferenceType Throwable VariableDeclarator cause Literal null TryStatement StatementExpression MethodInvocation Literal "java.util.regex.Matcher" testAvailability ReturnStatement MethodInvocation Literal "org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher" createInstance CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference cause MethodInvocation MemberReference cause MemberReference be BinaryOperation < MethodInvocation JavaEnvUtils getJavaVersionNumber Literal 14 orCause = TryStatement StatementExpression MethodInvocation Literal "org.apache.oro.text.regex.Pattern" testAvailability ReturnStatement MethodInvocation Literal "org.apache.tools.ant.util.regexp.JakartaOroMatcher" createInstance CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference cause MethodInvocation MemberReference cause MemberReference be Literal true orCause = TryStatement StatementExpression MethodInvocation Literal "org.apache.regexp.RE" testAvailability ReturnStatement MethodInvocation Literal "org.apache.tools.ant.util.regexp.JakartaRegexpMatcher" createInstance CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference cause MethodInvocation MemberReference cause MemberReference be Literal true orCause = ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No supported regular expression matcher found" TernaryExpression BinaryOperation != MemberReference cause Literal null BinaryOperation + Literal ": " MemberReference cause Literal "" MemberReference cause	1
MethodDeclaration Modifier public setType FormalParameter ReferenceType MapperType type IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier public testMethodParam LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation Literal "testmethodparam" executeTarget LocalVariableDeclaration ReferenceType FileSet VariableDeclarator resultFileSet Cast ReferenceType FileSet MethodInvocation p MemberReference RESULT_FILESET getReference LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation resultFileSet MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator scannedFiles MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference scannedFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i scannedFiles MemberReference ArraySelector MemberReference i scannedFiles put StatementExpression MethodInvocation BinaryOperation + Literal "Classfileset did not pick up expected number of " Literal "class files" Literal 5 MethodInvocation files size assertEquals StatementExpression MethodInvocation Literal "Result did not contain A.class" MethodInvocation files Literal "A.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain B.class" MethodInvocation files Literal "B.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain C.class" MethodInvocation files Literal "C.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain D.class" MethodInvocation files Literal "D.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain E.class" MethodInvocation files Literal "E.class" containsKey assertTrue	1
MethodDeclaration Modifier public cleanup StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project This removeBuildListener StatementExpression Assignment MemberReference project Literal null =	0
MethodDeclaration Modifier protected ReferenceType Hashtable getFiles IfStatement BinaryOperation != MemberReference files Literal null BlockStatement ReturnStatement MemberReference files StatementExpression Assignment MemberReference files ClassCreator ReferenceType Hashtable = LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation MemberReference viewpath getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator includes MethodInvocation ds getIncludedDirectories StatementExpression MethodInvocation MemberReference files MethodInvocation ds getBasedir MemberReference includes StatementExpression Assignment MemberReference includes MethodInvocation ds getIncludedFiles = StatementExpression MethodInvocation MemberReference files MethodInvocation ds getBasedir MemberReference includes ReturnStatement MemberReference files	1
MethodDeclaration Modifier protected BasicType boolean isJdkCompiler FormalParameter ReferenceType String compilerImpl ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation MODERN MemberReference compilerImpl equals MethodInvocation CLASSIC MemberReference compilerImpl equals MethodInvocation JAVAC16 MemberReference compilerImpl equals MethodInvocation JAVAC15 MemberReference compilerImpl equals MethodInvocation JAVAC14 MemberReference compilerImpl equals MethodInvocation JAVAC13 MemberReference compilerImpl equals MethodInvocation JAVAC12 MemberReference compilerImpl equals MethodInvocation JAVAC11 MemberReference compilerImpl equals	0
MethodDeclaration * @see */ Modifier public buildFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal "< BUILD FINISHED" MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && MemberReference record BinaryOperation != MemberReference out Literal null BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator error MethodInvocation event getException IfStatement BinaryOperation == MemberReference error Literal null BlockStatement StatementExpression MethodInvocation out BinaryOperation + MemberReference StringUtils LINE_SEP Literal "BUILD SUCCESSFUL" println BlockStatement StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference StringUtils LINE_SEP Literal "BUILD FAILED" MemberReference StringUtils LINE_SEP println StatementExpression MethodInvocation error MemberReference out printStackTrace StatementExpression MethodInvocation cleanup	1
MethodDeclaration Modifier public setAngle FormalParameter ReferenceType String ang StatementExpression Assignment MemberReference angle MethodInvocation Float MemberReference ang parseFloat =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference _scanner ClassCreator ReferenceType ZipScanner = LocalVariableDeclaration ReferenceType String VariableDeclarator path BinaryOperation + MethodInvocation System Literal "java.home" getProperty Literal "/lib/rt.jar" StatementExpression MethodInvocation _scanner MemberReference path setBasedir	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "\n" Literal " This \n" Literal " Literal " a \n" Literal " Literal " message\n" Literal " " expectLog	0
MethodDeclaration Modifier private ReferenceType String getAttributeName FormalParameter ReferenceType Node attributeNode LocalVariableDeclaration ReferenceType String VariableDeclarator attributeName MethodInvocation attributeNode getNodeName IfStatement MemberReference semanticAttributes BlockStatement IfStatement MethodInvocation attributeName MemberReference REF_ID equals BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation || MethodInvocation ! MemberReference attributeName isSemanticAttribute MemberReference BlockStatement ReturnStatement BinaryOperation + Literal "." MemberReference attributeName BlockStatement ReturnStatement Literal "" IfStatement MemberReference BlockStatement ReturnStatement BinaryOperation + Literal "." MemberReference attributeName BlockStatement ReturnStatement BinaryOperation + BinaryOperation + Literal "(" MemberReference attributeName Literal ")"	1
MethodDeclaration Modifier protected execute FormalParameter ReferenceType JUnitTest arg BuildException LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator test Cast ReferenceType JUnitTest MethodInvocation arg clone IfStatement BinaryOperation == MethodInvocation test getTodir Literal null BlockStatement StatementExpression MethodInvocation test MethodInvocation MethodInvocation Literal "." resolveFile getProject setTodir IfStatement BinaryOperation == MethodInvocation test getOutfile Literal null BlockStatement StatementExpression MethodInvocation test BinaryOperation + Literal "TEST-" MethodInvocation test getName setOutfile LocalVariableDeclaration ReferenceType TestResultHolder VariableDeclarator result Literal null IfStatement MethodInvocation ! test getFork BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference test executeInVM = BlockStatement LocalVariableDeclaration ReferenceType ExecuteWatchdog VariableDeclarator watchdog MethodInvocation createWatchdog StatementExpression Assignment MemberReference result MethodInvocation MemberReference test MemberReference watchdog Literal null executeAsForked = StatementExpression MethodInvocation MemberReference result MemberReference test BinaryOperation + Literal "Test " MethodInvocation test getName actOnTestResult	1
MethodDeclaration Modifier public ReferenceType PatternSet ReferenceType NameEntry createInclude StatementExpression Assignment MemberReference Literal true = ReturnStatement MethodInvocation defaultSet createInclude	0
MethodDeclaration Modifier public execute BuildException IfStatement Literal MethodInvocation MethodInvocation getTaskType equals "expand" BlockStatement StatementExpression MethodInvocation Literal "!! expand is deprecated. Use unzip instead. !!" log IfStatement BinaryOperation && BinaryOperation == MemberReference source Literal null MemberReference ! resourcesSpecified BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "src attribute and/or resources must be " Literal "specified" IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Dest attribute must be specified" IfStatement BinaryOperation && MethodInvocation dest exists MethodInvocation ! dest isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Dest must be a directory." MethodInvocation getLocation IfStatement BinaryOperation != MemberReference source Literal null BlockStatement IfStatement MethodInvocation source isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Src must not be a directory." Literal " Use filesets instead." MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference FILE_UTILS MemberReference source MemberReference dest expandFile LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next IfStatement MethodInvocation ! r isExists BlockStatement ContinueStatement IfStatement BinaryOperation instanceof MemberReference r ReferenceType FileResource BlockStatement StatementExpression MethodInvocation MemberReference FILE_UTILS Cast ReferenceType FileResource MemberReference r MemberReference dest expandFile BlockStatement StatementExpression MethodInvocation MemberReference r MemberReference dest expandResource	1
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public ReferenceType Object createElement FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType String elementName BuildException LocalVariableDeclaration ReferenceType NestedCreator VariableDeclarator nc MethodInvocation MemberReference project Literal "" MemberReference parent MemberReference elementName Literal null getNestedCreator TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nestedElement MethodInvocation nc MemberReference project MemberReference parent Literal null create IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project MemberReference nestedElement setProjectReference ReturnStatement MemberReference nestedElement CatchClause CatchClauseParameter IllegalAccessException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie CatchClause CatchClauseParameter InstantiationException ine ThrowStatement ClassCreator ReferenceType BuildException MemberReference ine CatchClause CatchClauseParameter InvocationTargetException ite LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ite getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation MemberReference source append Literal " append StatementExpression MethodInvocation buf MethodInvocation MemberReference type append Literal " append ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean shouldRun FormalParameter ReferenceType Project p IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation p MemberReference getProperty Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation p MemberReference getProperty Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType String getActions ReturnStatement MemberReference actionString	0
MethodDeclaration Modifier public testAppend IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project BinaryOperation + MemberReference REC_IN Literal resolveFile MethodInvocation project BinaryOperation + MemberReference REC_DIR Literal resolveFile Literal true contentEquals assertTrue	0
MethodDeclaration Modifier public ReferenceType Object getVariable FormalParameter ReferenceType String varName ReturnStatement MethodInvocation project MemberReference varName getProperty	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference eolStr	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private openFile FormalParameter BasicType int index IOException StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null BinaryOperation < MemberReference index MemberReference file length BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Opening " MemberReference ArraySelector MemberReference index file MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference currentStream ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference ArraySelector MemberReference index file = CatchClause CatchClauseParameter IOException eyeOhEx StatementExpression MethodInvocation BinaryOperation + Literal "Failed to open " MemberReference ArraySelector MemberReference index file MemberReference Project MSG_ERR log ThrowStatement MemberReference eyeOhEx BlockStatement StatementExpression Assignment MemberReference eof Literal true =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ren StatementExpression Assignment MemberReference mRename MemberReference ren =	0
MethodDeclaration Modifier public BasicType boolean evalFeature LocalVariableDeclaration ReferenceType XMLReader VariableDeclarator reader MethodInvocation getReader IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference value Literal "true" = LocalVariableDeclaration BasicType boolean VariableDeclarator v MethodInvocation Project MemberReference value toBoolean TryStatement StatementExpression MethodInvocation reader MemberReference feature MemberReference v CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference FEATURE MemberReference NOT_RECOGNIZED MemberReference feature MemberReference Project MSG_VERBOSE log ReturnStatement Literal false CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference FEATURE MemberReference NOT_SUPPORTED MemberReference feature MemberReference Project MSG_VERBOSE log ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public synchronized ReferenceType String getElementTag ReturnStatement MemberReference elementTag	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal "redirect4" executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expectedOut BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " out\n" LocalVariableDeclaration ReferenceType String VariableDeclarator expectedErr BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " err\n" StatementExpression MethodInvocation Literal "unexpected output" MemberReference expectedOut MethodInvocation Literal "redirect.out" getFileString assertEquals StatementExpression MethodInvocation Literal "redirect.out" MethodInvocation expectedOut trim assertPropertyEquals StatementExpression MethodInvocation Literal "unexpected error output" MemberReference expectedErr MethodInvocation Literal "redirect.err" getFileString assertEquals StatementExpression MethodInvocation Literal "redirect.err" MethodInvocation expectedErr trim assertPropertyEquals	0
MethodDeclaration Modifier public setBootclasspath FormalParameter ReferenceType bootclasspath IfStatement BinaryOperation == This MemberReference bootclasspath Literal null BlockStatement StatementExpression Assignment This MemberReference bootclasspath MemberReference bootclasspath = BlockStatement StatementExpression This MemberReference bootclasspath MethodInvocation MemberReference bootclasspath append	0
MethodDeclaration Modifier public synchronized BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o This BlockStatement ReturnStatement Literal true IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference o equals getCheckedRef IfStatement BinaryOperation instanceof MemberReference o ReferenceType DelegatedResourceComparator BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Vector VariableDeclarator ov Cast ReferenceType DelegatedResourceComparator MemberReference o ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null BinaryOperation == MemberReference ov Literal null MethodInvocation v MemberReference ov equals	1
MethodDeclaration Modifier private getCommentCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	1
MethodDeclaration Modifier private doNetRexxCompile BuildException StatementExpression MethodInvocation Literal "Using NetRexx compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation getCompileClasspath LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator compileOptions ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator compileOptionsArray MethodInvocation getCompileOptionsAsArray LocalVariableDeclaration ReferenceType String VariableDeclarator fileListArray ArrayCreator ReferenceType String MethodInvocation compileList size LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation compileList elements LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference j fileListArray Cast ReferenceType String MethodInvocation e nextElement = StatementExpression MemberReference ++ j LocalVariableDeclaration ReferenceType String VariableDeclarator compileArgs ArrayCreator ReferenceType String BinaryOperation + MemberReference compileOptionsArray length MemberReference fileListArray length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference compileOptionsArray length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i compileArgs MemberReference ArraySelector MemberReference i compileOptionsArray = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fileListArray length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference compileOptionsArray length compileArgs MemberReference ArraySelector MemberReference i fileListArray = StatementExpression MethodInvocation compileOptions Literal "Compilation args: " append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference compileOptionsArray length MemberReference ++ i BlockStatement StatementExpression MethodInvocation compileOptions MemberReference ArraySelector MemberReference i compileOptionsArray append StatementExpression MethodInvocation compileOptions Literal " " append StatementExpression MethodInvocation MethodInvocation compileOptions toString MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator eol MethodInvocation System Literal "line.separator" getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator niceSourceList ClassCreator ReferenceType StringBuffer BinaryOperation + Literal "Files to be compiled:" MemberReference eol ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation compileList size MemberReference ++ i BlockStatement StatementExpression MethodInvocation niceSourceList Literal " " append StatementExpression MethodInvocation niceSourceList MethodInvocation compileList MethodInvocation toString MemberReference i elementAt append StatementExpression MethodInvocation niceSourceList MemberReference eol append StatementExpression MethodInvocation MethodInvocation niceSourceList toString MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator currentClassPath MethodInvocation System Literal "java.class.path" getProperty LocalVariableDeclaration ReferenceType Properties VariableDeclarator currentProperties MethodInvocation System getProperties StatementExpression MethodInvocation currentProperties Literal "java.class.path" MemberReference classpath put TryStatement LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator out ClassCreator ReferenceType StringWriter LocalVariableDeclaration BasicType int VariableDeclarator rc MethodInvocation COM.ibm.netrexx.process.NetRexxC ClassCreator ReferenceType Rexx MemberReference compileArgs ClassCreator ReferenceType PrintWriter MemberReference out main LocalVariableDeclaration ReferenceType String VariableDeclarator sdir MethodInvocation srcDir getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator ddir MethodInvocation destDir getAbsolutePath LocalVariableDeclaration BasicType boolean VariableDeclarator doReplace MethodInvocation ! sdir MemberReference ddir equals LocalVariableDeclaration BasicType int VariableDeclarator dlen MethodInvocation ddir length LocalVariableDeclaration ReferenceType String VariableDeclarator l LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType StringReader MethodInvocation out toString StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "replacing destdir '" MemberReference ddir Literal "' through sourcedir '" MemberReference sdir Literal "'" MemberReference Project MSG_VERBOSE log WhileStatement BinaryOperation != Assignment MemberReference l MethodInvocation in readLine = Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator idx WhileStatement BinaryOperation && MemberReference doReplace BinaryOperation != Assignment MemberReference idx MethodInvocation l MemberReference ddir indexOf = Literal - 1 BlockStatement StatementExpression Assignment MemberReference l ClassCreator MethodInvocation MemberReference idx BinaryOperation + MemberReference idx MemberReference dlen MemberReference sdir replace MethodInvocation toString ReferenceType StringBuffer MemberReference l = IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation l MemberReference MSG_METHOD_ARGUMENT_NOT_USED indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation l MemberReference MSG_PRIVATE_PROPERTY_NOT_USED indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation l MemberReference MSG_VARIABLE_NOT_USED indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation l MemberReference MSG_EXCEPTION_NOT_SIGNALLED indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation l MemberReference MSG_DEPRECATION indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MethodInvocation l Literal "Error:" indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_ERR log IfStatement BinaryOperation != MethodInvocation l Literal "Warning:" indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation MemberReference l MemberReference Project MSG_INFO log IfStatement BinaryOperation > MemberReference rc Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Compile failed, messages should " Literal "have been provided." CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unexpected IOException while " Literal "playing with Strings" MemberReference ioe StatementExpression Assignment MemberReference currentProperties MethodInvocation System getProperties = StatementExpression MethodInvocation currentProperties Literal "java.class.path" MemberReference currentClassPath put	1
MethodDeclaration Modifier public FormalParameter ReferenceType String user StatementExpression Assignment This MemberReference user MemberReference user =	0
MethodDeclaration Modifier public setRemoveSource FormalParameter BasicType boolean rs StatementExpression Assignment MemberReference removeSource MemberReference rs =	0
MethodDeclaration Modifier public testRun Exception StatementExpression MethodInvocation Literal "testRun" Literal "exception thrown by the Literal the Foo task" expectBuildExceptionContaining	0
MethodDeclaration * @see */ Modifier public ReferenceType String getValues ReturnStatement MemberReference UNITS	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference zipFile	0
MethodDeclaration Modifier public synchronized setIncludes FormalParameter ReferenceType String includes IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment This MemberReference includes Literal null = BlockStatement StatementExpression Assignment This MemberReference includes ArrayCreator ReferenceType String MemberReference includes length = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement StatementExpression Assignment This MemberReference includes ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i includes normalizePattern =	1
MethodDeclaration Modifier public static ReferenceType String describeCommand FormalParameter ReferenceType Commandline line ReturnStatement MethodInvocation MethodInvocation line getCommandline describeCommand	0
MethodDeclaration Modifier public synchronized static ReferenceType String BuildException IfStatement BinaryOperation == MemberReference antVersion Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in ClassReference MethodInvocation Literal "/org/apache/tools/ant/version.txt" getResourceAsStream ReferenceType Main StatementExpression MethodInvocation props MemberReference in load StatementExpression MethodInvocation in close LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation msg Literal "Apache Ant version " append StatementExpression MethodInvocation msg MethodInvocation props Literal "VERSION" getProperty append StatementExpression MethodInvocation msg Literal " compiled on " append StatementExpression MethodInvocation msg MethodInvocation props Literal "DATE" getProperty append StatementExpression Assignment MemberReference antVersion MethodInvocation msg toString = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not load the version information:" MethodInvocation ioe getMessage CatchClause CatchClauseParameter NullPointerException npe ThrowStatement ClassCreator ReferenceType BuildException Literal "Could not load the version information." ReturnStatement MemberReference antVersion	1
MethodDeclaration Modifier public FormalParameter ReferenceType ClassLoader classLoader StatementExpression Assignment This MemberReference MemberReference classLoader =	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier protected ReferenceType String getVersionDate BuildException IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference fromDate Literal null BinaryOperation == MemberReference toDate Literal null BinaryOperation == MemberReference numDays MemberReference Integer MIN_VALUE BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference fromDate Literal null BinaryOperation != MemberReference toDate Literal null BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference FLAG_VERSION_DATE MemberReference toDate MemberReference VALUE_FROMDATE MemberReference fromDate IfStatement BinaryOperation && BinaryOperation != MemberReference toDate Literal null BinaryOperation != MemberReference numDays MemberReference Integer MIN_VALUE BlockStatement TryStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference FLAG_VERSION_DATE MemberReference toDate MemberReference VALUE_FROMDATE MethodInvocation MemberReference toDate MemberReference numDays calcDate CatchClause CatchClauseParameter ParseException ex LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Error parsing date: " MemberReference toDate ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference fromDate Literal null BinaryOperation != MemberReference numDays MemberReference Integer MIN_VALUE BlockStatement TryStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference FLAG_VERSION_DATE MethodInvocation MemberReference fromDate MemberReference numDays calcDate MemberReference VALUE_FROMDATE MemberReference fromDate CatchClause CatchClauseParameter ParseException ex LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Error parsing date: " MemberReference fromDate ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation BlockStatement ReturnStatement TernaryExpression BinaryOperation != MemberReference fromDate Literal null BinaryOperation + BinaryOperation + MemberReference MemberReference VALUE_FROMDATE MemberReference fromDate BinaryOperation + MemberReference FLAG_VERSION_DATE MemberReference toDate	1
MethodDeclaration Modifier private BasicType boolean validateAndExecute BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator savedFileExt MemberReference fileext IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation || BinaryOperation == MemberReference resources Literal null BinaryOperation == MethodInvocation resources size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Specify at least one source - a file or a resource collection." IfStatement BinaryOperation || BinaryOperation == MemberReference resources Literal null MethodInvocation resources isFilesystemOnly BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Can only calculate checksums for file-based resources." IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation file exists MethodInvocation file isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Checksum cannot be generated for directories" IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null BinaryOperation != MemberReference totalproperty Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "File and Totalproperty cannot co-exist." IfStatement BinaryOperation && BinaryOperation != MemberReference property Literal null BinaryOperation != MemberReference fileext Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Property and FileExt cannot co-exist." IfStatement BinaryOperation != MemberReference property Literal null BlockStatement IfStatement MemberReference forceOverwrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "ForceOverwrite cannot be used when Property is specified" LocalVariableDeclaration BasicType int VariableDeclarator ct Literal 0 IfStatement BinaryOperation != MemberReference resources Literal null BlockStatement StatementExpression Assignment MemberReference ct MethodInvocation resources size += IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MemberReference ++ ct IfStatement BinaryOperation > MemberReference ct Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Multiple files cannot be used when Property is specified" IfStatement BinaryOperation != MemberReference verifyProperty Literal null BlockStatement StatementExpression Assignment MemberReference isCondition Literal true = IfStatement BinaryOperation && BinaryOperation != MemberReference verifyProperty Literal null MemberReference forceOverwrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "VerifyProperty and ForceOverwrite cannot co-exist." IfStatement BinaryOperation && MemberReference isCondition MemberReference forceOverwrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "ForceOverwrite cannot be used when conditions are being used." StatementExpression Assignment MemberReference messageDigest Literal null = IfStatement BinaryOperation != MemberReference provider Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference messageDigest MethodInvocation MessageDigest MemberReference algorithm MemberReference provider getInstance = CatchClause CatchClauseParameter NoSuchAlgorithmException noalgo ThrowStatement ClassCreator ReferenceType BuildException MemberReference noalgo MethodInvocation getLocation CatchClause CatchClauseParameter NoSuchProviderException noprovider ThrowStatement ClassCreator ReferenceType BuildException MemberReference noprovider MethodInvocation getLocation BlockStatement TryStatement StatementExpression Assignment MemberReference messageDigest MethodInvocation MessageDigest MemberReference algorithm getInstance = CatchClause CatchClauseParameter NoSuchAlgorithmException noalgo ThrowStatement ClassCreator ReferenceType BuildException MemberReference noalgo MethodInvocation getLocation IfStatement BinaryOperation == MemberReference messageDigest Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to create Message Digest" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference fileext Literal null BlockStatement StatementExpression Assignment MemberReference fileext BinaryOperation + Literal "." MemberReference algorithm = IfStatement BinaryOperation == MethodInvocation fileext MethodInvocation length trim Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "File extension when specified must not be an empty string" TryStatement IfStatement BinaryOperation != MemberReference resources Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation resources iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr Cast ReferenceType FileResource MethodInvocation i next LocalVariableDeclaration ReferenceType File VariableDeclarator src MethodInvocation fr getFile IfStatement BinaryOperation || BinaryOperation != MemberReference totalproperty Literal null BinaryOperation != MemberReference todir Literal null BlockStatement StatementExpression MethodInvocation relativeFilePaths MemberReference src MethodInvocation fr MethodInvocation MemberReference File separatorChar Literal '/' replace getName put StatementExpression MethodInvocation MemberReference src addToIncludeFileMap IfStatement BinaryOperation != MemberReference file Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation != MemberReference totalproperty Literal null BinaryOperation != MemberReference todir Literal null BlockStatement StatementExpression MethodInvocation relativeFilePaths MemberReference file MethodInvocation file MethodInvocation MemberReference File separatorChar Literal '/' replace getName put StatementExpression MethodInvocation MemberReference file addToIncludeFileMap ReturnStatement MethodInvocation generateChecksums StatementExpression Assignment MemberReference fileext MemberReference savedFileExt = StatementExpression MethodInvocation includeFileMap clear	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference rcs TernaryExpression BinaryOperation == MemberReference rcs Literal null ClassCreator ReferenceType Resources MemberReference rcs = StatementExpression MethodInvocation rcs MemberReference rc add	0
MethodDeclaration Modifier private BasicType char bsGetUByte IOException ReturnStatement Cast BasicType char MethodInvocation Literal 8 bsR	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setDeprecation FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setRecursive FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference setInternalRecursive	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation compileClasspath createPath	0
MethodDeclaration Modifier public BasicType boolean getForce ReturnStatement MemberReference force	0
MethodDeclaration Modifier public setMaxmemory FormalParameter ReferenceType String max StatementExpression Assignment This MemberReference maxMemory MemberReference max =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation javac getSource assertNull	0
MethodDeclaration Modifier protected logAndAddFilesToCompile FormalParameter ReferenceType JspC jspc FormalParameter ReferenceType Vector compileList FormalParameter ReferenceType CommandlineJava cmd StatementExpression MethodInvocation jspc BinaryOperation + Literal "Compilation " MethodInvocation cmd describeJavaCommand MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator niceSourceList ClassCreator ReferenceType StringBuffer Literal "File" IfStatement BinaryOperation != MethodInvocation compileList size Literal 1 BlockStatement StatementExpression MethodInvocation niceSourceList Literal "s" append StatementExpression MethodInvocation niceSourceList Literal " to be compiled:" append StatementExpression MethodInvocation niceSourceList MemberReference lSep append LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation compileList elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation cmd MethodInvocation MemberReference arg setValue createArgument StatementExpression MethodInvocation niceSourceList Literal " " append StatementExpression MethodInvocation niceSourceList MemberReference arg append StatementExpression MethodInvocation niceSourceList MemberReference lSep append StatementExpression MethodInvocation jspc MethodInvocation niceSourceList toString MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal testCopyAndRemove	0
MethodDeclaration Modifier private BasicType int bsGetInt IOException ReturnStatement BinaryOperation | BinaryOperation << BinaryOperation | BinaryOperation << BinaryOperation | BinaryOperation << MethodInvocation Literal 8 bsR Literal 8 MethodInvocation Literal 8 bsR Literal 8 MethodInvocation Literal 8 bsR Literal 8 MethodInvocation Literal 8 bsR	0
MethodDeclaration Modifier public ReferenceType createClasspath StatementExpression MethodInvocation checkChildrenAllowed IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier private BasicType boolean isDeeper FormalParameter ReferenceType String pattern FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Vector VariableDeclarator p MethodInvocation SelectorUtils MemberReference pattern tokenizePath LocalVariableDeclaration ReferenceType Vector VariableDeclarator n MethodInvocation SelectorUtils MemberReference name tokenizePath ReturnStatement BinaryOperation || MethodInvocation p Literal "**" contains BinaryOperation > MethodInvocation p size MethodInvocation n size	1
MethodDeclaration Modifier public setTodir FormalParameter ReferenceType File destDir StatementExpression MethodInvocation myCopy MemberReference destDir setTodir	0
MethodDeclaration Modifier public testMoveWithEmpty StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String encoding IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile MemberReference filters MemberReference overwrite MemberReference preserveLastModified MemberReference encoding copyFile	0
MethodDeclaration Modifier public setAddsourcefile FormalParameter BasicType boolean b ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the addsourcefile attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier protected ReferenceType XMLReader ReturnStatement MethodInvocation JAXPUtils getXMLReader	0
MethodDeclaration Modifier protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference v Literal null MethodInvocation v isEmpty BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation v iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference o ReferenceType DataType BlockStatement StatementExpression MethodInvocation stk MemberReference o push StatementExpression MethodInvocation Cast ReferenceType DataType MemberReference o MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public ReferenceType TagArgument createTag LocalVariableDeclaration ReferenceType TagArgument VariableDeclarator ta ClassCreator ReferenceType TagArgument StatementExpression MethodInvocation tags MemberReference ta addElement ReturnStatement MemberReference ta	0
MethodDeclaration Modifier protected ReferenceType Task makeTask FormalParameter ReferenceType UnknownElement ue FormalParameter ReferenceType RuntimeConfigurable w FormalParameter BasicType boolean TryStatement ThrowStatement ClassCreator ReferenceType Exception CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace ReturnStatement Literal null	0
MethodDeclaration Modifier synchronized protected ReferenceType String getContent IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType StringResource MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation getValue IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement MemberReference value ReturnStatement TernaryExpression BinaryOperation == MethodInvocation getProject Literal null MemberReference value MethodInvocation MethodInvocation MemberReference value replaceProperties getProject	0
MethodDeclaration Modifier public visitConstantNameAndType FormalParameter ReferenceType ConstantNameAndType obj LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation obj MemberReference constantPool getName IfStatement BinaryOperation && MethodInvocation obj MethodInvocation Literal "Ljava/lang/Class;" equals MemberReference constantPool getSignature MethodInvocation name Literal "class$" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation name MethodInvocation Literal '$' Literal '.' replace Literal 6 substring LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation classname Literal "." lastIndexOf IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator start LocalVariableDeclaration BasicType int VariableDeclarator index2 MethodInvocation classname Literal "." BinaryOperation - MemberReference index Literal 1 lastIndexOf IfStatement BinaryOperation != MemberReference index2 Literal - 1 BlockStatement StatementExpression Assignment MemberReference start MethodInvocation classname BinaryOperation + MemberReference index2 Literal 1 charAt = BlockStatement StatementExpression Assignment MemberReference start MethodInvocation classname Literal 0 charAt = IfStatement BinaryOperation && BinaryOperation > MemberReference start Literal 0x40 BinaryOperation < MemberReference start Literal 0x5B BlockStatement StatementExpression Assignment MemberReference classname BinaryOperation + BinaryOperation + MethodInvocation classname Literal 0 MemberReference index substring Literal "$" MethodInvocation classname BinaryOperation + MemberReference index Literal 1 substring = StatementExpression MethodInvocation MemberReference classname addClass BlockStatement StatementExpression MethodInvocation MemberReference classname addClass BlockStatement StatementExpression MethodInvocation MemberReference classname addClass	1
MethodDeclaration Modifier public ReferenceType String substitute FormalParameter ReferenceType String input FormalParameter ReferenceType String argument FormalParameter BasicType int options BuildException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator subst ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation argument length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation argument MemberReference i charAt IfStatement BinaryOperation == MemberReference c Literal '$' BlockStatement StatementExpression MethodInvocation subst Literal '\\' append StatementExpression MethodInvocation subst Literal '$' append IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement IfStatement BinaryOperation < MemberReference ++ i MethodInvocation argument length BlockStatement StatementExpression Assignment MemberReference c MethodInvocation argument MemberReference i charAt = LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation Character MemberReference c Literal 10 digit IfStatement BinaryOperation > MemberReference value Literal - 1 BlockStatement StatementExpression MethodInvocation subst MethodInvocation MemberReference value append Literal "$" append BlockStatement StatementExpression MethodInvocation subst MemberReference c append BlockStatement StatementExpression MethodInvocation subst Literal '\\' append BlockStatement StatementExpression MethodInvocation subst MemberReference c append StatementExpression Assignment MemberReference argument MethodInvocation subst toString = LocalVariableDeclaration BasicType int VariableDeclarator sOptions MethodInvocation MemberReference options getSubsOptions LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation MemberReference options getCompiledPattern LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation p MemberReference input matcher IfStatement MethodInvocation RegexpUtil MemberReference sOptions MemberReference hasFlag BlockStatement StatementExpression MethodInvocation sb MethodInvocation m MemberReference argument replaceAll append BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation m find IfStatement MemberReference res BlockStatement StatementExpression MethodInvocation m MemberReference sb MemberReference argument appendReplacement StatementExpression MethodInvocation m MemberReference sb appendTail BlockStatement StatementExpression MethodInvocation sb MemberReference input append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier protected BasicType boolean supportsNonFileResources ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType XmlProperty equals getClass	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "nested.c" Literal "add C expectLogContaining	0
MethodDeclaration Modifier public BasicType long elapsedTime ReturnStatement MemberReference elapsedTime	0
MethodDeclaration Modifier public BasicType boolean eval ReturnStatement MethodInvocation Execute MemberReference code isFailure	0
MethodDeclaration Modifier public ReferenceType WebAppParameter getWebApp ReturnStatement MemberReference webApp	0
MethodDeclaration Modifier protected ReferenceType String getVssServerPath ReturnStatement MemberReference vssServerPath	0
MethodDeclaration Modifier public BasicType long getSize IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement TernaryExpression MethodInvocation isExists TernaryExpression BinaryOperation != MemberReference size Literal null MethodInvocation size longValue MemberReference UNKNOWN_SIZE Literal 0L	1
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType LineContainsRegExp VariableDeclarator newFilter ClassCreator ReferenceType LineContainsRegExp MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation getRegexps setRegexps StatementExpression MethodInvocation newFilter MethodInvocation isNegated setNegate ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public BasicType boolean getUseCaches ReturnStatement MemberReference usecaches	0
MethodDeclaration Modifier public FormalParameter ReferenceType URLConnection requestConnection FormalParameter ReferenceType URLConnection responseConnection FormalParameter ReferenceType String username FormalParameter ReferenceType String password BuildException IfStatement BinaryOperation != MemberReference username Literal null BlockStatement StatementExpression Assignment MemberReference password TernaryExpression BinaryOperation == MemberReference username Literal null Literal "" MemberReference password = LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MemberReference username Literal ":" MemberReference password LocalVariableDeclaration BasicType char VariableDeclarator LocalVariableDeclaration ReferenceType String VariableDeclarator encodedPassStr LocalVariableDeclaration ReferenceType VariableDeclarator encoder ClassCreator ReferenceType StatementExpression Assignment MemberReference MethodInvocation encoder MethodInvocation getBytes encodeBase64 = StatementExpression Assignment MemberReference encodedPassStr ClassCreator ReferenceType String MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + Literal " MemberReference encodedPassStr StatementExpression MethodInvocation requestConnection Literal MemberReference setRequestProperty	0
MethodDeclaration Modifier public delete BuildException TryStatement IfStatement BinaryOperation == MemberReference link Literal null BlockStatement StatementExpression MethodInvocation Literal define the link name for symlink!" handleError ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "Removing symlink: " MemberReference link log StatementExpression MethodInvocation MemberReference link deleteSymlink CatchClause CatchClauseParameter FileNotFoundException fnfe StatementExpression MethodInvocation MethodInvocation fnfe toString handleError CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation MethodInvocation ioe toString handleError StatementExpression MethodInvocation setDefaults	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference value addText createReplaceValue	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment MemberReference taskProject MemberReference project =	0
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" Literal "http.url is http://localhost:999" expectLog	0
MethodDeclaration Modifier public testScriptFilter IOException IfStatement MethodInvocation ! Literal "testScriptFilter" hasScript ReturnStatement StatementExpression MethodInvocation Literal "scriptfilter" Literal "result/scriptfilter" Literal "HELLO WORLD" expectFileContains	1
MethodDeclaration Modifier private ensureDirectoryFor FormalParameter ReferenceType File targetFile BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator directory MethodInvocation targetFile getParentFile IfStatement MethodInvocation ! directory exists BlockStatement IfStatement MethodInvocation ! directory mkdirs BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to create directory: " MethodInvocation directory getAbsolutePath	1
MethodDeclaration Modifier public testJarNoFork StatementExpression MethodInvocation Literal Literal "parameter validation" BinaryOperation + Literal "Cannot execute a jar in non-forked " Literal "Please set fork='true'. " expectBuildExceptionContaining	0
MethodDeclaration Modifier public setAsOfDateFormat FormalParameter ReferenceType String asOfDateFormat StatementExpression MethodInvocation MemberReference asOfDateFormat	0
MethodDeclaration Modifier public tearDown IOException IfStatement BinaryOperation != MemberReference stream Literal null BlockStatement StatementExpression MethodInvocation stream close	0
MethodDeclaration Modifier public setOutfile FormalParameter ReferenceType String outfile IfStatement BinaryOperation == MemberReference outfile Literal null BlockStatement ReturnStatement StatementExpression Assignment This MemberReference outfile MemberReference outfile =	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r IfStatement BinaryOperation || BinaryOperation != MemberReference file Literal null BinaryOperation != MemberReference baseDir Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r setRefid	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Diagnostics MemberReference ARGS main	1
MethodDeclaration Modifier protected FormalParameter BasicType int platform StatementExpression Assignment This MemberReference platform MemberReference platform =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "unknown" MethodInvocation JUnitVersionHelper Literal null getTestCaseName assertEquals	0
MethodDeclaration Modifier synchronized protected handleOutput FormalParameter ReferenceType String output IfStatement BinaryOperation == MemberReference outPrintStream Literal null BlockStatement StatementExpression Assignment MemberReference outPrintStream ClassCreator ReferenceType PrintStream MemberReference outputStream = StatementExpression MethodInvocation outPrintStream MemberReference output print	0
MethodDeclaration Modifier public addError FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t StatementExpression Assignment MemberReference error MemberReference t =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference src Literal "," WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation tok nextToken LocalVariableDeclaration ReferenceType VariableDeclarator pn ClassCreator ReferenceType StatementExpression MethodInvocation pn MemberReference p setName StatementExpression MethodInvocation MemberReference pn addPackage	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setDebug FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public FormalParameter ReferenceType tool StatementExpression MethodInvocation tool This setTask StatementExpression MethodInvocation MemberReference tool addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "&#20;" MethodInvocation w Literal "&#20;" encode assertEquals StatementExpression MethodInvocation Literal "&#x20;" MethodInvocation w Literal "&#x20;" encode assertEquals StatementExpression MethodInvocation Literal "&#xA0;" MethodInvocation w Literal "&#xA0;" encode assertEquals StatementExpression MethodInvocation Literal MethodInvocation w Literal "&#A0;" encode assertEquals StatementExpression MethodInvocation Literal "20;" MethodInvocation w Literal "20;" encode assertEquals StatementExpression MethodInvocation Literal MethodInvocation w Literal "&#20" encode assertEquals StatementExpression MethodInvocation Literal "&quot;" MethodInvocation w Literal "&quot;" encode assertEquals StatementExpression MethodInvocation Literal "&apos;" MethodInvocation w Literal "&apos;" encode assertEquals StatementExpression MethodInvocation Literal "&gt;" MethodInvocation w Literal "&gt;" encode assertEquals StatementExpression MethodInvocation Literal "&lt;" MethodInvocation w Literal "&lt;" encode assertEquals StatementExpression MethodInvocation Literal "&amp;" MethodInvocation w Literal "&amp;" encode assertEquals StatementExpression MethodInvocation Literal "&quot;" MethodInvocation w Literal "\"" encode assertEquals StatementExpression MethodInvocation Literal "&lt;" MethodInvocation w Literal "<" encode assertEquals StatementExpression MethodInvocation Literal "&amp;" MethodInvocation w Literal "&" encode assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation w Literal "" encode assertEquals StatementExpression MethodInvocation Literal "&#20;\"20;&" MethodInvocation w Literal "&#20;\"20;&" encodedata assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation w Literal "" encodedata assertEquals	0
MethodDeclaration Modifier private removeBuffer LocalVariableDeclaration ReferenceType Thread VariableDeclarator current MethodInvocation Thread currentThread StatementExpression MethodInvocation buffers MemberReference current remove	0
MethodDeclaration Modifier final protected ReferenceType String getXSLTCVersion FormalParameter ReferenceType String procVersionClassName ClassNotFoundException LocalVariableDeclaration ReferenceType Class VariableDeclarator procVersion MethodInvocation Class MemberReference procVersionClassName forName LocalVariableDeclaration ReferenceType VariableDeclarator pkg MethodInvocation procVersion getPackage ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation pkg getName Literal " " MethodInvocation pkg Literal " " MethodInvocation pkg	0
MethodDeclaration Modifier public synchronized createStreams IfStatement BinaryOperation && BinaryOperation != MemberReference out Literal null BinaryOperation > MemberReference out length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator logHead ClassCreator MethodInvocation TernaryExpression MemberReference append Literal "appended" Literal "redirected" append MethodInvocation Literal " to " append MethodInvocation toString ReferenceType StringBuffer Literal "Output " StatementExpression Assignment MemberReference outputStream MethodInvocation MemberReference out MemberReference logHead MemberReference Project MSG_VERBOSE foldFiles = IfStatement BinaryOperation != MemberReference outputProperty Literal null BlockStatement IfStatement BinaryOperation == MemberReference baos Literal null BlockStatement StatementExpression Assignment MemberReference baos ClassCreator ReferenceType PropertyOutputStream MemberReference outputProperty = StatementExpression MethodInvocation managingTask BinaryOperation + Literal "Output redirected to property: " MemberReference outputProperty MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator keepAliveOutput ClassCreator ReferenceType KeepAliveOutputStream MemberReference baos StatementExpression Assignment MemberReference outputStream TernaryExpression BinaryOperation == MemberReference outputStream Literal null MemberReference keepAliveOutput ClassCreator ReferenceType TeeOutputStream MemberReference outputStream MemberReference keepAliveOutput = BlockStatement StatementExpression Assignment MemberReference baos Literal null = IfStatement BinaryOperation && BinaryOperation != MemberReference error Literal null BinaryOperation > MemberReference error length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator logHead ClassCreator MethodInvocation TernaryExpression MemberReference append Literal "appended" Literal "redirected" append MethodInvocation Literal " to " append MethodInvocation toString ReferenceType StringBuffer Literal "Error " StatementExpression Assignment MemberReference errorStream MethodInvocation MemberReference error MemberReference logHead MemberReference Project MSG_VERBOSE foldFiles = IfStatement BinaryOperation || MemberReference logError BinaryOperation == MemberReference outputStream Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator funnelTimeout Literal 0L LocalVariableDeclaration ReferenceType OutputStreamFunneler VariableDeclarator funneler ClassCreator ReferenceType OutputStreamFunneler MemberReference outputStream MemberReference funnelTimeout TryStatement StatementExpression Assignment MemberReference outputStream MethodInvocation funneler getFunnelInstance = StatementExpression Assignment MemberReference errorStream MethodInvocation funneler getFunnelInstance = CatchClause CatchClauseParameter IOException eyeOhEx ThrowStatement ClassCreator ReferenceType BuildException Literal "error splitting output/error streams" MemberReference eyeOhEx IfStatement BinaryOperation != MemberReference errorProperty Literal null BlockStatement IfStatement BinaryOperation == MemberReference errorBaos Literal null BlockStatement StatementExpression Assignment MemberReference errorBaos ClassCreator ReferenceType PropertyOutputStream MemberReference errorProperty = StatementExpression MethodInvocation managingTask BinaryOperation + Literal "Error redirected to property: " MemberReference errorProperty MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator keepAliveError ClassCreator ReferenceType KeepAliveOutputStream MemberReference errorBaos StatementExpression Assignment MemberReference errorStream TernaryExpression BinaryOperation || BinaryOperation == MemberReference error Literal null BinaryOperation == MemberReference error length Literal 0 MemberReference keepAliveError ClassCreator ReferenceType TeeOutputStream MemberReference errorStream MemberReference keepAliveError = BlockStatement StatementExpression Assignment MemberReference errorBaos Literal null = IfStatement BinaryOperation || MemberReference alwaysLog BinaryOperation == MemberReference outputStream Literal null BlockStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator outputLog ClassCreator ReferenceType LogOutputStream MemberReference managingTask MemberReference Project MSG_INFO StatementExpression Assignment MemberReference outputStream TernaryExpression BinaryOperation == MemberReference outputStream Literal null MemberReference outputLog ClassCreator ReferenceType TeeOutputStream MemberReference outputLog MemberReference outputStream = IfStatement BinaryOperation || MemberReference alwaysLog BinaryOperation == MemberReference errorStream Literal null BlockStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator errorLog ClassCreator ReferenceType LogOutputStream MemberReference managingTask MemberReference Project MSG_WARN StatementExpression Assignment MemberReference errorStream TernaryExpression BinaryOperation == MemberReference errorStream Literal null MemberReference errorLog ClassCreator ReferenceType TeeOutputStream MemberReference errorLog MemberReference errorStream = IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference outputFilterChains Literal null BinaryOperation > MethodInvocation outputFilterChains size Literal 0 MethodInvocation ! outputEncoding MemberReference inputEncoding equalsIgnoreCase BlockStatement TryStatement LocalVariableDeclaration ReferenceType LeadPipeInputStream VariableDeclarator snk ClassCreator ReferenceType LeadPipeInputStream StatementExpression MethodInvocation snk MemberReference managingTask LocalVariableDeclaration ReferenceType InputStream VariableDeclarator outPumpIn MemberReference snk LocalVariableDeclaration ReferenceType Reader VariableDeclarator reader ClassCreator ReferenceType InputStreamReader MemberReference outPumpIn MemberReference inputEncoding IfStatement BinaryOperation && BinaryOperation != MemberReference outputFilterChains Literal null BinaryOperation > MethodInvocation outputFilterChains size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator helper ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation helper MethodInvocation managingTask getProject setProject StatementExpression MethodInvocation helper MemberReference reader setPrimaryReader StatementExpression MethodInvocation helper MemberReference outputFilterChains setFilterChains StatementExpression Assignment MemberReference reader MethodInvocation helper getAssembledReader = StatementExpression Assignment MemberReference outPumpIn ClassCreator ReferenceType ReaderInputStream MemberReference reader MemberReference outputEncoding = LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread MemberReference threadGroup ClassCreator ReferenceType StreamPumper MemberReference outPumpIn MemberReference outputStream Literal true Literal "output pumper" StatementExpression MethodInvocation t MemberReference Thread MAX_PRIORITY setPriority StatementExpression Assignment MemberReference outputStream ClassCreator ReferenceType PipedOutputStream MemberReference snk = StatementExpression MethodInvocation t start CatchClause CatchClauseParameter IOException eyeOhEx ThrowStatement ClassCreator ReferenceType BuildException Literal "error setting up output stream" MemberReference eyeOhEx IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference errorFilterChains Literal null BinaryOperation > MethodInvocation errorFilterChains size Literal 0 MethodInvocation ! errorEncoding MemberReference inputEncoding equalsIgnoreCase BlockStatement TryStatement LocalVariableDeclaration ReferenceType LeadPipeInputStream VariableDeclarator snk ClassCreator ReferenceType LeadPipeInputStream StatementExpression MethodInvocation snk MemberReference managingTask LocalVariableDeclaration ReferenceType InputStream VariableDeclarator errPumpIn MemberReference snk LocalVariableDeclaration ReferenceType Reader VariableDeclarator reader ClassCreator ReferenceType InputStreamReader MemberReference errPumpIn MemberReference inputEncoding IfStatement BinaryOperation && BinaryOperation != MemberReference errorFilterChains Literal null BinaryOperation > MethodInvocation errorFilterChains size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator helper ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation helper MethodInvocation managingTask getProject setProject StatementExpression MethodInvocation helper MemberReference reader setPrimaryReader StatementExpression MethodInvocation helper MemberReference errorFilterChains setFilterChains StatementExpression Assignment MemberReference reader MethodInvocation helper getAssembledReader = StatementExpression Assignment MemberReference errPumpIn ClassCreator ReferenceType ReaderInputStream MemberReference reader MemberReference errorEncoding = LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread MemberReference threadGroup ClassCreator ReferenceType StreamPumper MemberReference errPumpIn MemberReference errorStream Literal true Literal "error pumper" StatementExpression MethodInvocation t MemberReference Thread MAX_PRIORITY setPriority StatementExpression Assignment MemberReference errorStream ClassCreator ReferenceType PipedOutputStream MemberReference snk = StatementExpression MethodInvocation t start CatchClause CatchClauseParameter IOException eyeOhEx ThrowStatement ClassCreator ReferenceType BuildException Literal "error setting up error stream" MemberReference eyeOhEx IfStatement BinaryOperation && BinaryOperation != MemberReference input Literal null BinaryOperation > MemberReference input length Literal 0 BlockStatement StatementExpression MethodInvocation managingTask BinaryOperation + Literal "Redirecting input from file" TernaryExpression BinaryOperation == MemberReference input length Literal 1 Literal "" Literal "s" MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType ConcatFileInputStream MemberReference input = CatchClause CatchClauseParameter IOException eyeOhEx ThrowStatement ClassCreator ReferenceType BuildException MemberReference eyeOhEx StatementExpression Cast ReferenceType ConcatFileInputStream MemberReference inputStream IfStatement BinaryOperation != MemberReference inputString Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "Using input " IfStatement MemberReference logInputString BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference inputString append MethodInvocation Literal '"' append Literal '"' append BlockStatement StatementExpression MethodInvocation buf Literal "string" append StatementExpression MethodInvocation managingTask MethodInvocation buf toString MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType ByteArrayInputStream MethodInvocation inputString getBytes = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference inputStream Literal null BinaryOperation != MemberReference inputFilterChains Literal null BinaryOperation > MethodInvocation inputFilterChains size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator helper ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation helper MethodInvocation managingTask getProject setProject TryStatement StatementExpression MethodInvocation helper ClassCreator ReferenceType InputStreamReader MemberReference inputStream MemberReference inputEncoding setPrimaryReader CatchClause CatchClauseParameter IOException eyeOhEx ThrowStatement ClassCreator ReferenceType BuildException Literal "error setting up input stream" MemberReference eyeOhEx StatementExpression MethodInvocation helper MemberReference inputFilterChains setFilterChains StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType ReaderInputStream MethodInvocation helper getAssembledReader MemberReference inputEncoding =	1
MethodDeclaration Modifier public addConfiguredPatternset FormalParameter ReferenceType PatternSet p IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType String VariableDeclarator nestedIncludes MethodInvocation p MethodInvocation getProject getIncludePatterns LocalVariableDeclaration ReferenceType String VariableDeclarator nestedExcludes MethodInvocation p MethodInvocation getProject getExcludePatterns IfStatement BinaryOperation != MemberReference nestedIncludes Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nestedIncludes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i nestedIncludes setName createInclude IfStatement BinaryOperation != MemberReference nestedExcludes Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nestedExcludes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i nestedExcludes setName	1
MethodDeclaration Modifier protected ReferenceType String getLabel ReturnStatement This MemberReference label	0
MethodDeclaration Modifier static protected ReferenceType String getMainClass FormalParameter ReferenceType File home FormalParameter BasicType int type BuildException LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType Literal null StatementExpression MethodInvocation p MethodInvocation MethodInvocation MemberReference home getArchiveFile setLocation createPathElement StatementExpression MethodInvocation p addJavaRuntime ReturnStatement MethodInvocation MemberReference p MemberReference type getMainClass	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "testFileset" executeTarget	0
MethodDeclaration Modifier public synchronized setProperties IfStatement BinaryOperation != MemberReference baos Literal null BlockStatement TryStatement StatementExpression MethodInvocation baos close CatchClause CatchClauseParameter IOException eyeOhEx IfStatement BinaryOperation != MemberReference errorBaos Literal null BlockStatement TryStatement StatementExpression MethodInvocation errorBaos close CatchClause CatchClauseParameter IOException eyeOhEx	0
MethodDeclaration Modifier public synchronized scan IllegalStateException StatementExpression Assignment MemberReference included ClassCreator ReferenceType Vector = LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference DEFAULT_ANALYZER_CLASS LocalVariableDeclaration ReferenceType DependencyAnalyzer VariableDeclarator analyzer Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator analyzerClass MethodInvocation Class MemberReference forName StatementExpression Assignment MemberReference analyzer Cast ReferenceType DependencyAnalyzer MethodInvocation analyzerClass newInstance = CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to load dependency " MemberReference MemberReference e StatementExpression MethodInvocation analyzer ClassCreator ReferenceType Literal null MethodInvocation basedir getPath addClassPath ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation rootClasses elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator rootClass Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation analyzer MemberReference rootClass addRootClass LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation analyzer getClassDependencies LocalVariableDeclaration ReferenceType String VariableDeclarator parentFiles MethodInvocation parentScanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator parentSet ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parentFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation parentSet MemberReference ArraySelector MemberReference i parentFiles MemberReference ArraySelector MemberReference i parentFiles put WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation classname Literal '.' MemberReference File separatorChar replace StatementExpression Assignment MemberReference filename BinaryOperation + MemberReference filename Literal ".class" = LocalVariableDeclaration ReferenceType File VariableDeclarator depFile ClassCreator ReferenceType File MemberReference basedir MemberReference filename IfStatement BinaryOperation && MethodInvocation depFile exists MethodInvocation parentSet MemberReference filename containsKey BlockStatement StatementExpression MethodInvocation included MemberReference filename addElement	1
MethodDeclaration Modifier public setHours FormalParameter BasicType int hours StatementExpression Assignment This MemberReference hours MemberReference hours =	0
MethodDeclaration Modifier protected processBuffer StatementExpression MethodInvocation handler MethodInvocation buffer toString process StatementExpression MethodInvocation buffer reset	0
MethodDeclaration Modifier private handleMissingFile FormalParameter ReferenceType String message SwitchStatement MethodInvocation onMissingFiltersFile getIndex SwitchStatementCase MemberReference OnMissing ReturnStatement SwitchStatementCase MemberReference OnMissing FAIL_INDEX ThrowStatement ClassCreator ReferenceType BuildException MemberReference message SwitchStatementCase MemberReference OnMissing StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_WARN log ReturnStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid value for	0
MethodDeclaration Modifier public FormalParameter BasicType boolean preserveLastModified StatementExpression Assignment This MemberReference preserveLastModified MemberReference preserveLastModified =	0
MethodDeclaration Modifier public testParentDiffersInCaseScanningSensitive LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/" Literal "ALPHA/beta/" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public synchronized setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public testStripJavaComments IOException StatementExpression MethodInvocation Literal "testStripJavaComments" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference expected MemberReference result contentEquals assertTrue	0
MethodDeclaration Modifier public testDirsetPathWithoutPackagenames Exception TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal of path should be up without specifying package names: " MemberReference e fail	0
MethodDeclaration Modifier public testInvalidSuite LocalVariableDeclaration ReferenceType VariableDeclarator runner MethodInvocation ClassReference ReferenceType InvalidSuiteTestCase createRunner StatementExpression MethodInvocation runner run LocalVariableDeclaration ReferenceType String VariableDeclarator error MethodInvocation runner MethodInvocation getError getFormatter StatementExpression MethodInvocation MemberReference error MemberReference ERRORS MethodInvocation runner assertEquals StatementExpression MethodInvocation MemberReference error BinaryOperation != MethodInvocation error Literal "thrown on indexOf Literal - 1 assertTrue	1
MethodDeclaration Modifier public addModified FormalParameter ReferenceType ModifiedSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public setupDirectoryScanner FormalParameter ReferenceType ds FormalParameter ReferenceType Project p IfStatement BinaryOperation == MemberReference ds Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "ds cannot be null" StatementExpression MethodInvocation ds MemberReference dir setBasedir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation additionalPatterns size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation additionalPatterns MemberReference i elementAt StatementExpression MethodInvocation defaultPatterns Cast ReferenceType PatternSet MemberReference o MemberReference p append2 StatementExpression MethodInvocation p BinaryOperation + BinaryOperation + BinaryOperation + Literal Setup file scanner in dir " MemberReference dir Literal " with " MemberReference defaultPatterns MemberReference p MSG_DEBUG log StatementExpression MethodInvocation ds MethodInvocation defaultPatterns MemberReference p setIncludes StatementExpression MethodInvocation ds MethodInvocation defaultPatterns MemberReference p setExcludes IfStatement MemberReference useDefaultExcludes BlockStatement StatementExpression MethodInvocation ds addDefaultExcludes StatementExpression MethodInvocation ds MemberReference isCaseSensitive setCaseSensitive	0
MethodDeclaration Modifier public executeScript FormalParameter ReferenceType Map attributes FormalParameter ReferenceType Map elements FormalParameter ReferenceType ScriptDefBase instance StatementExpression MethodInvocation runner Literal "attributes" MemberReference attributes addBean StatementExpression MethodInvocation runner Literal MemberReference elements addBean StatementExpression MethodInvocation runner Literal "project" MethodInvocation getProject addBean IfStatement BinaryOperation != MemberReference instance Literal null BlockStatement StatementExpression MethodInvocation runner Literal MemberReference instance addBean StatementExpression MethodInvocation runner BinaryOperation + Literal MemberReference name executeScript	0
MethodDeclaration Modifier public setTimeout FormalParameter BasicType long timeout StatementExpression Assignment This MemberReference timeout MemberReference timeout =	0
MethodDeclaration Modifier public BasicType int getLength ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator dir1 MethodInvocation project Literal "." resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator dir2 MethodInvocation project Literal "subant/subant-test1" resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator dir3 MethodInvocation project Literal resolveFile StatementExpression MethodInvocation Literal "testgenericantfile" ArrayCreator ReferenceType String ArrayInitializer MethodInvocation dir1 getAbsolutePath MethodInvocation dir2 getAbsolutePath MethodInvocation dir3 getAbsolutePath testBaseDirs	0
MethodDeclaration Modifier public BasicType int getNameAndTypeEntry FormalParameter ReferenceType String name FormalParameter ReferenceType String type LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation entries size BinaryOperation == MemberReference index Literal - 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation entries MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference element ReferenceType NameAndTypeCPInfo BlockStatement LocalVariableDeclaration ReferenceType NameAndTypeCPInfo VariableDeclarator nameAndTypeEntry Cast ReferenceType NameAndTypeCPInfo MemberReference element IfStatement BinaryOperation && MethodInvocation nameAndTypeEntry MethodInvocation MemberReference name equals getName MethodInvocation nameAndTypeEntry MethodInvocation MemberReference type equals getType BlockStatement StatementExpression Assignment MemberReference index MemberReference i = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId StatementExpression MethodInvocation helperImpl.project BinaryOperation + Literal "resolving systemId: " MemberReference systemId MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation systemId Literal "file:" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation FILE_UTILS MemberReference systemId fromURI LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference path IfStatement MethodInvocation ! file isAbsolute BlockStatement StatementExpression Assignment MemberReference file MethodInvocation FILE_UTILS MemberReference helperImpl buildFileParent MemberReference path resolveFile = StatementExpression MethodInvocation helperImpl.project BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: '" MemberReference systemId Literal "' in " MemberReference helperImpl buildFile Literal " should be expressed simply as '" MethodInvocation path Literal '\\' Literal '/' replace Literal "' for compliance with other XML MemberReference Project MSG_WARN log TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference file StatementExpression MethodInvocation inputSource MethodInvocation FILE_UTILS MethodInvocation file getAbsolutePath toURI setSystemId ReturnStatement MemberReference inputSource CatchClause CatchClauseParameter FileNotFoundException fne StatementExpression MethodInvocation helperImpl.project BinaryOperation + MethodInvocation file getAbsolutePath Literal " could not be found" MemberReference Project MSG_WARN log ReturnStatement Literal null	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference FILE_PREPEND MemberReference FILE_APPEND_WITH doTest	0
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType File out StatementExpression Assignment This MemberReference output MemberReference out = StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration Modifier public testEmpty Exception StatementExpression MethodInvocation Literal "testEmpty" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getPrefixMapping FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType List VariableDeclarator list Cast ReferenceType List MethodInvocation prefixMapping MemberReference prefix get IfStatement BinaryOperation || BinaryOperation == MemberReference list Literal null BinaryOperation == MethodInvocation list size Literal 0 BlockStatement ReturnStatement Literal null ReturnStatement Cast ReferenceType String MethodInvocation list BinaryOperation - MethodInvocation list size Literal 1 get	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType VariableDeclarator sourcepath Literal null IfStatement BinaryOperation != MemberReference compileSourcepath Literal null BlockStatement StatementExpression Assignment MemberReference sourcepath MemberReference compileSourcepath = BlockStatement StatementExpression Assignment MemberReference sourcepath MemberReference src = IfStatement BinaryOperation > MethodInvocation sourcepath size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-sourcepath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference sourcepath setPath createArgument LocalVariableDeclaration ReferenceType VariableDeclarator classpath ClassCreator ReferenceType MemberReference project IfStatement BinaryOperation || BinaryOperation == MemberReference bootclasspath Literal null BinaryOperation == MethodInvocation bootclasspath size Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression MethodInvocation classpath MethodInvocation getCompileClasspath append LocalVariableDeclaration ReferenceType String VariableDeclarator jikesPath MethodInvocation System Literal "jikes.class.path" getProperty IfStatement BinaryOperation != MemberReference jikesPath Literal null BlockStatement StatementExpression MethodInvocation classpath ClassCreator ReferenceType MemberReference project MemberReference jikesPath append IfStatement BinaryOperation && BinaryOperation != MemberReference extdirs Literal null BinaryOperation > MethodInvocation extdirs size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-extdirs" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference extdirs setPath createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator exec MethodInvocation MethodInvocation getExecutable getJavac StatementExpression MethodInvocation cmd TernaryExpression BinaryOperation == MemberReference exec Literal null Literal "jikes" MemberReference exec setExecutable IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-deprecation" setValue createArgument IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference destDir setFile createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference classpath setPath createArgument IfStatement BinaryOperation != MemberReference encoding Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-encoding" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference encoding setValue createArgument IfStatement MemberReference debug BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator debugLevel MethodInvocation attributes getDebugLevel IfStatement BinaryOperation != MemberReference debugLevel Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + Literal "-g:" MemberReference debugLevel setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-g" setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-g:none" setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-O" setValue createArgument IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-verbose" setValue createArgument IfStatement MemberReference depend BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-depend" setValue createArgument IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-target" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference target setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator emacsProperty MethodInvocation project Literal "build.compiler.emacs" getProperty IfStatement BinaryOperation && BinaryOperation != MemberReference emacsProperty Literal null MethodInvocation Project MemberReference emacsProperty toBoolean BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "+E" setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator warningsProperty MethodInvocation project Literal "build.compiler.warnings" getProperty IfStatement BinaryOperation != MemberReference warningsProperty Literal null BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + Literal "!! the build.compiler.warnings property is " Literal "deprecated. !!" MemberReference Project MSG_WARN log StatementExpression MethodInvocation attributes Literal "!! Use the nowarn attribute instead. !!" MemberReference Project MSG_WARN log IfStatement MethodInvocation ! Project MemberReference warningsProperty toBoolean BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-nowarn" setValue createArgument IfStatement MethodInvocation attributes getNowarn BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-nowarn" setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator pedanticProperty MethodInvocation project Literal "build.compiler.pedantic" getProperty IfStatement BinaryOperation && BinaryOperation != MemberReference pedanticProperty Literal null MethodInvocation Project MemberReference pedanticProperty toBoolean BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "+P" setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator fullDependProperty MethodInvocation project Literal "build.compiler.fulldepend" getProperty IfStatement BinaryOperation && BinaryOperation != MemberReference fullDependProperty Literal null MethodInvocation Project MemberReference fullDependProperty toBoolean BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "+F" setValue createArgument IfStatement BinaryOperation != MethodInvocation attributes getSource Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-source" setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator source MethodInvocation attributes getSource IfStatement BinaryOperation || MethodInvocation source Literal "1.1" equals MethodInvocation source Literal "1.2" equals BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + BinaryOperation + Literal "Jikes doesn't support '-source " MemberReference source Literal "', will use '-source 1.3' instead" log StatementExpression MethodInvocation cmd MethodInvocation Literal "1.3" setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference source setValue createArgument StatementExpression MethodInvocation MemberReference cmd addCurrentCompilerArgs LocalVariableDeclaration BasicType int VariableDeclarator firstFileName MethodInvocation cmd size LocalVariableDeclaration ReferenceType VariableDeclarator boot MethodInvocation getBootClassPath IfStatement BinaryOperation > MethodInvocation boot size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-bootclasspath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference boot setPath createArgument StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement BinaryOperation == MethodInvocation MethodInvocation cmd getCommandline MemberReference firstFileName executeExternalCompile Literal 0	1
MethodDeclaration Modifier public setPath FormalParameter ReferenceType path StatementExpression Assignment This MemberReference value MethodInvocation path toString =	0
MethodDeclaration Modifier private TryStatement StatementExpression MethodInvocation System ClassCreator ReferenceType FileInputStream MethodInvocation MethodInvocation Literal resolveFile getProject setIn CatchClause CatchClauseParameter Exception e ThrowStatement TernaryExpression BinaryOperation instanceof MemberReference e ReferenceType RuntimeException Cast ReferenceType RuntimeException MemberReference e ClassCreator ReferenceType RuntimeException MethodInvocation e getMessage	0
MethodDeclaration Modifier private massagePCLI FormalParameter ReferenceType File in FormalParameter ReferenceType File out IOException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator inReader Literal null LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator Literal null TryStatement StatementExpression Assignment MemberReference inReader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference in = StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType FileWriter MemberReference out = LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal null WhileStatement BinaryOperation != Assignment MemberReference s MethodInvocation inReader readLine = Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sNormal MethodInvocation s Literal '\\' Literal '/' replace StatementExpression MethodInvocation MemberReference sNormal write StatementExpression MethodInvocation newLine IfStatement BinaryOperation != MemberReference inReader Literal null BlockStatement StatementExpression MethodInvocation inReader close IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String msg IfStatement BinaryOperation == MemberReference message Literal null BlockStatement StatementExpression Assignment MemberReference message Literal "" = StatementExpression Assignment MemberReference message MethodInvocation MethodInvocation MemberReference msg replaceProperties getProject +=	0
MethodDeclaration Modifier public BasicType boolean isForcetextmode ReturnStatement MemberReference forcetextmode	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String n StatementExpression Assignment MemberReference pattern MemberReference n =	0
MethodDeclaration Modifier protected ReferenceType Class getImplementationClass ClassNotFoundException LocalVariableDeclaration ReferenceType String VariableDeclarator cName This MemberReference classname IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference cName MethodInvocation type getImplementation = LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator loader TernaryExpression BinaryOperation == MemberReference classpath Literal null MethodInvocation MethodInvocation getClassLoader getClass MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject ReturnStatement MethodInvocation Class MemberReference cName Literal true MemberReference loader forName	0
MethodDeclaration Modifier public FormalParameter ReferenceType File outputDirectory StatementExpression Assignment This MemberReference outputDirectory MemberReference outputDirectory =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceSelector s IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation == MemberReference s Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation v MemberReference s add StatementExpression MethodInvocation Literal false setChecked	0
MethodDeclaration Modifier private mkelemDirectory FormalParameter ReferenceType dir BuildException StatementExpression Assignment MemberReference dir ClassCreator ReferenceType MethodInvocation MethodInvocation getAbsolutePath MethodInvocation dir getAbsoluteFile resolveSymbolicLink = LocalVariableDeclaration ReferenceType VariableDeclarator parent ClassCreator ReferenceType MethodInvocation dir getParent LocalVariableDeclaration BasicType boolean VariableDeclarator should_ci Literal false IfStatement MethodInvocation ! parent isVersioned BlockStatement StatementExpression MethodInvocation MemberReference parent mkelemDirectory StatementExpression MethodInvocation codirs MethodInvocation parent getPath MethodInvocation parent getAbsoluteFile put IfStatement MethodInvocation parent BlockStatement StatementExpression MethodInvocation MethodInvocation parent getAbsoluteFile checkout StatementExpression MethodInvocation codirs MethodInvocation parent getPath MethodInvocation parent getAbsoluteFile put LocalVariableDeclaration ReferenceType File VariableDeclarator mkelem_file ClassCreator ReferenceType File BinaryOperation + MethodInvocation dir getAbsolutePath Literal "_mkelem" StatementExpression MethodInvocation dir MemberReference mkelem_file renameTo StatementExpression MethodInvocation MemberReference dir mkdir StatementExpression MethodInvocation codirs MethodInvocation dir getPath MethodInvocation dir getAbsoluteFile put LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation dir listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator newFile ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference i MethodInvocation getName files IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation MemberReference newFile renameTo files BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not rename dir '" MemberReference ArraySelector MemberReference i files Literal "' into '" MemberReference newFile Literal "'" StatementExpression MethodInvocation mkelem_file delete	1
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType Random VariableDeclarator generator ClassCreator ReferenceType Random StatementExpression Assignment MemberReference randomOutValue BinaryOperation + Literal "Output Value is " MethodInvocation generator nextInt = StatementExpression Assignment MemberReference randomErrValue BinaryOperation + Literal "Error Value is " MethodInvocation generator nextInt = StatementExpression MethodInvocation System.out MemberReference randomOutValue println StatementExpression MethodInvocation System.err MemberReference randomErrValue println IfStatement MemberReference ! outputReceived BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Did not receive output" IfStatement MemberReference ! errorReceived BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Did not receive error"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Only one element allowed when using implicit elements" Literal "Only one element allowed when using implicit elements" expectSpecificBuildException	0
MethodDeclaration Modifier public ReferenceType createBootclasspath IfStatement BinaryOperation == MemberReference bootclasspath Literal null BlockStatement StatementExpression Assignment MemberReference bootclasspath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation bootclasspath createPath	0
MethodDeclaration Modifier public setOptimize FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression SuperMethodInvocation MemberReference label setInternalLabel	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate ReturnStatement BinaryOperation == MethodInvocation SelectorUtils MemberReference pattern MemberReference filename MemberReference casesensitive matchPath MemberReference ! negated	1
MethodDeclaration Modifier public FormalParameter BasicType boolean f StatementExpression Assignment MemberReference doFilesonly MemberReference f =	0
MethodDeclaration Modifier public setCompiler FormalParameter ReferenceType String impl StatementExpression SuperMethodInvocation MemberReference impl setImplementation	0
MethodDeclaration Modifier public ReferenceType File getDir FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getDir MemberReference p getRef ReturnStatement MemberReference dir	0
MethodDeclaration Modifier private resetBufferInfo LocalVariableDeclaration ReferenceType Thread VariableDeclarator current MethodInvocation Thread currentThread LocalVariableDeclaration ReferenceType VariableDeclarator bufferInfo Cast ReferenceType MethodInvocation buffers MemberReference current get TryStatement StatementExpression MethodInvocation bufferInfo.buffer close CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference bufferInfo buffer ClassCreator ReferenceType ByteArrayOutputStream = StatementExpression Assignment MemberReference bufferInfo crSeen Literal false =	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile IOException StatementExpression MethodInvocation MemberReference sourceFile MemberReference destFile Literal null Literal false Literal false copyFile	0
MethodDeclaration Modifier public addConfiguredRedirector FormalParameter ReferenceType redirectorElement IfStatement BinaryOperation != This MemberReference redirectorElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "cannot have > 1 <redirector>s" StatementExpression Assignment This MemberReference redirectorElement MemberReference redirectorElement = StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration Modifier public addNot FormalParameter ReferenceType NotSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier private testRedirector9Thru12 FormalParameter ReferenceType String target IOException StatementExpression MethodInvocation MemberReference target executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "cat.can.run" getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expectedOut Literal "blah after blah" StatementExpression MethodInvocation Literal "unexpected output" MemberReference expectedOut MethodInvocation MethodInvocation trim Literal "redirector.out" getFileString assertEquals StatementExpression MethodInvocation Literal "redirector.out" MethodInvocation expectedOut trim assertPropertyEquals StatementExpression MethodInvocation Literal "unexpected error output" MethodInvocation Literal "redirector.err" getFileString assertNull StatementExpression MethodInvocation Literal "redirector.err" Literal "" assertPropertyEquals	0
MethodDeclaration Modifier public setForceOverwrite FormalParameter BasicType boolean forceOverwrite StatementExpression Assignment This MemberReference forceOverwrite MemberReference forceOverwrite =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setDepends FormalParameter BasicType boolean depends StatementExpression Assignment This MemberReference newerOnly MemberReference depends =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ExtensionSet StatementExpression MethodInvocation extensionFileSets MemberReference addElement	0
MethodDeclaration Modifier public BasicType boolean getForce ReturnStatement MemberReference force	0
MethodDeclaration Modifier public BasicType boolean getDebug ReturnStatement MemberReference debug	0
MethodDeclaration Modifier public setHeaders FormalParameter ReferenceType Vector v StatementExpression Assignment This MemberReference headers MemberReference v =	1
MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement MemberReference description	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal "testOneLine" Literal "testOneLine" Literal expectPropertySet	0
MethodDeclaration Modifier private static ReferenceType String getXmlParserName LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser MethodInvocation getSAXParser IfStatement BinaryOperation == MemberReference saxParser Literal null BlockStatement ReturnStatement Literal "Could not create an XML Parser" LocalVariableDeclaration ReferenceType String VariableDeclarator saxParserName MethodInvocation saxParser MethodInvocation getName getClass ReturnStatement MemberReference saxParserName	1
MethodDeclaration Modifier public testAddText BuildException StatementExpression MethodInvocation ih MemberReference p This Literal "test" addText TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "test2" addText StatementExpression MethodInvocation Literal "test2 shouldn\'t be equal to test" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression Assignment MemberReference ih MethodInvocation IntrospectionHelper ClassReference ReferenceType String getHelper = TryStatement StatementExpression MethodInvocation ih MemberReference p Literal "" Literal "test" addText StatementExpression MethodInvocation Literal "String doesn\'t support addText" fail CatchClause CatchClauseParameter BuildException be	1
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" Literal must not point to a directory" expectBuildException	0
MethodDeclaration Modifier protected testPreconditions BuildException IfStatement BinaryOperation && This MethodInvocation isUsingRevisionLabel This MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Ignoring while using a revision label." Literal " will be created only as MemberReference Project MSG_WARN log StatementExpression Assignment This MemberReference Literal false = IfStatement BinaryOperation != MemberReference lockStatus MemberReference Item.LockType UNCHANGED BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator lockStatusBad Literal false IfStatement BinaryOperation != Literal null MethodInvocation getLabel BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal locked nor unlocked may be Literal " when checking out a version." MemberReference Project MSG_ERR log StatementExpression Assignment MemberReference lockStatusBad Literal true = IfStatement BinaryOperation != Literal null MethodInvocation getAsOfDate BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal locked nor unlocked may be Literal " when checking out by date." MemberReference Project MSG_ERR log StatementExpression Assignment MemberReference lockStatusBad Literal true = IfStatement MemberReference lockStatusBad BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Lock status may not be changed" Literal " when checking out a version." IfStatement BinaryOperation && BinaryOperation != Literal null MethodInvocation getLabel BinaryOperation != Literal null MethodInvocation getAsOfDate BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Both label and asOfDate specified. " Literal "Unable to process request."	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "." setBasedir	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier protected ReferenceType String getVerboseParameter ReturnStatement TernaryExpression MemberReference verbose Literal null Literal	0
MethodDeclaration Modifier private ReferenceType Hashtable readCachedDependencies FormalParameter ReferenceType File depFile IOException LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencyMap ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference depFile = LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator dependencyList Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator className Literal null LocalVariableDeclaration BasicType int VariableDeclarator prependLength MethodInvocation CLASSNAME_PREPEND length WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement IfStatement MethodInvocation line MemberReference CLASSNAME_PREPEND startsWith BlockStatement StatementExpression Assignment MemberReference dependencyList ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference className MethodInvocation line MemberReference prependLength substring = StatementExpression MethodInvocation dependencyMap MemberReference className MemberReference dependencyList put BlockStatement StatementExpression MethodInvocation dependencyList MemberReference line addElement IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close ReturnStatement MemberReference dependencyMap	1
MethodDeclaration Modifier public FormalParameter ReferenceType Resource xslResource StatementExpression Assignment This MemberReference xslResource MemberReference xslResource =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceSelector s IfStatement BinaryOperation != MemberReference sel Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "The Not ResourceSelector accepts a single StatementExpression Assignment MemberReference sel MemberReference s =	0
MethodDeclaration Modifier public FormalParameter ReferenceType action StatementExpression Assignment This MemberReference MethodInvocation action getValue =	0
MethodDeclaration Modifier private loadResourceMap FormalParameter ReferenceType FileInputStream ins BuildException TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr ClassCreator ReferenceType InputStreamReader MemberReference ins MemberReference bundleEncoding StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader MemberReference isr = LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation line MethodInvocation length trim Literal 1 BinaryOperation != Literal '#' MethodInvocation line Literal 0 charAt BinaryOperation != Literal '!' MethodInvocation line Literal 0 charAt BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator sepIndex MethodInvocation line Literal '=' indexOf IfStatement BinaryOperation == Literal - 1 MemberReference sepIndex BlockStatement StatementExpression Assignment MemberReference sepIndex MethodInvocation line Literal ':' indexOf = IfStatement BinaryOperation == Literal - 1 MemberReference sepIndex BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 0 BinaryOperation < MemberReference k MethodInvocation line length MemberReference ++ k BlockStatement IfStatement MethodInvocation Character MethodInvocation line MemberReference k charAt isSpaceChar BlockStatement StatementExpression Assignment MemberReference sepIndex MemberReference k = BreakStatement IfStatement BinaryOperation != Literal - 1 MemberReference sepIndex BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation line MethodInvocation trim Literal 0 MemberReference sepIndex substring LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation line MethodInvocation trim BinaryOperation + MemberReference sepIndex Literal 1 substring WhileStatement MethodInvocation value Literal "\\" endsWith BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value Literal 0 BinaryOperation - MethodInvocation value length Literal 1 substring = IfStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + MemberReference value MethodInvocation line trim = BlockStatement BreakStatement IfStatement BinaryOperation > MethodInvocation key length Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation resourceMap MemberReference key get Literal null BlockStatement StatementExpression MethodInvocation resourceMap MemberReference key MemberReference value put IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe getMessage MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType Pattern FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p getRef BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MethodInvocation MemberReference excludeList MemberReference p	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType XMLFragment VariableDeclarator x Cast ReferenceType XMLFragment MethodInvocation MethodInvocation Literal getReference getProject StatementExpression MethodInvocation MemberReference x assertNotNull LocalVariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation x getFragment StatementExpression MethodInvocation Literal "No MethodInvocation ! n assertTrue LocalVariableDeclaration ReferenceType NodeList VariableDeclarator nl MethodInvocation n getChildNodes StatementExpression MethodInvocation Literal 3 MethodInvocation nl getLength assertEquals StatementExpression MethodInvocation MemberReference Node ELEMENT_NODE MethodInvocation nl MethodInvocation getNodeType Literal 0 item assertEquals LocalVariableDeclaration ReferenceType Element VariableDeclarator child1 Cast ReferenceType Element MethodInvocation nl Literal 0 item StatementExpression MethodInvocation Literal MethodInvocation child1 getTagName assertEquals StatementExpression MethodInvocation MethodInvocation ! child1 assertTrue LocalVariableDeclaration ReferenceType NodeList VariableDeclarator nl2 MethodInvocation child1 getChildNodes StatementExpression MethodInvocation Literal 1 MethodInvocation nl2 getLength assertEquals StatementExpression MethodInvocation MemberReference Node TEXT_NODE MethodInvocation nl2 MethodInvocation getNodeType Literal 0 item assertEquals StatementExpression MethodInvocation Literal "foo" MethodInvocation nl2 MethodInvocation getNodeValue Literal 0 item assertEquals StatementExpression MethodInvocation MemberReference Node ELEMENT_NODE MethodInvocation nl MethodInvocation getNodeType Literal 1 item assertEquals LocalVariableDeclaration ReferenceType Element VariableDeclarator child2 Cast ReferenceType Element MethodInvocation nl Literal 1 item StatementExpression MethodInvocation Literal "child2" MethodInvocation child2 getTagName assertEquals StatementExpression MethodInvocation MethodInvocation child2 assertTrue StatementExpression Assignment MemberReference nl2 MethodInvocation child2 getChildNodes = StatementExpression MethodInvocation Literal 0 MethodInvocation nl2 getLength assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation child2 Literal "foo" getAttribute assertEquals StatementExpression MethodInvocation MemberReference Node ELEMENT_NODE MethodInvocation nl MethodInvocation getNodeType Literal 2 item assertEquals LocalVariableDeclaration ReferenceType Element VariableDeclarator child3 Cast ReferenceType Element MethodInvocation nl Literal 2 item StatementExpression MethodInvocation Literal MethodInvocation child3 getTagName assertEquals StatementExpression MethodInvocation MethodInvocation ! child3 assertTrue StatementExpression Assignment MemberReference nl2 MethodInvocation child3 getChildNodes = StatementExpression MethodInvocation Literal 1 MethodInvocation nl2 getLength assertEquals StatementExpression MethodInvocation MemberReference Node ELEMENT_NODE MethodInvocation nl2 MethodInvocation getNodeType Literal 0 item assertEquals StatementExpression MethodInvocation Literal Cast ReferenceType Element MethodInvocation nl2 Literal 0 item assertEquals	0
MethodDeclaration Modifier public BasicType float getHeight LocalVariableDeclaration BasicType int VariableDeclarator percIndex MethodInvocation heightStr Literal '%' indexOf IfStatement BinaryOperation > MemberReference percIndex Literal 0 BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator height MethodInvocation Float MethodInvocation heightStr Literal 0 MemberReference percIndex substring parseFloat StatementExpression Assignment MemberReference Literal true = ReturnStatement BinaryOperation / MemberReference height MemberReference HUNDRED BlockStatement StatementExpression Assignment MemberReference Literal false = ReturnStatement MethodInvocation Float MemberReference heightStr parseFloat	0
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation tasks MemberReference nestedTask add	1
MethodDeclaration Modifier public ReferenceType ClientElement IfStatement BinaryOperation == MemberReference client Literal null BlockStatement StatementExpression Assignment MemberReference client ClassCreator ReferenceType ClientElement This = ReturnStatement MemberReference client	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public testD StatementExpression MethodInvocation ClassCreator ReferenceType Literal " < address > "	0
