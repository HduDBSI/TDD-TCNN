MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal testLogoExtraction	0
MethodDeclaration Modifier public setFailureProperty FormalParameter ReferenceType String propertyName StatementExpression Assignment This MemberReference failureProperty MemberReference propertyName =	0
MethodDeclaration Modifier public ReferenceType String getPrefix ReturnStatement MemberReference prefix	0
MethodDeclaration Modifier public setIiop FormalParameter BasicType boolean iiop StatementExpression Assignment This MemberReference iiop MemberReference iiop =	0
MethodDeclaration Modifier public setEncoding FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean diag StatementExpression Assignment This MemberReference diag MemberReference diag =	0
MethodDeclaration Modifier public ReferenceType String getExcludePatterns FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getExcludePatterns MemberReference p getRef BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MethodInvocation MemberReference excludeList MemberReference p	0
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int u IOException StatementExpression MethodInvocation Literal 8 BinaryOperation & BinaryOperation >> MemberReference u Literal 24 Literal 0xff bsW StatementExpression MethodInvocation Literal 8 BinaryOperation & BinaryOperation >> MemberReference u Literal 16 Literal 0xff bsW StatementExpression MethodInvocation Literal 8 BinaryOperation & BinaryOperation >> MemberReference u Literal 8 Literal 0xff bsW StatementExpression MethodInvocation Literal 8 BinaryOperation & MemberReference u Literal 0xff bsW	0
MethodDeclaration Modifier public ReferenceType String list IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType Collection VariableDeclarator result MethodInvocation Literal true getCollection ReturnStatement Cast ReferenceType String MethodInvocation result ArrayCreator ReferenceType String MethodInvocation result size toArray	0
MethodDeclaration Modifier public BasicType boolean isWarnMode ReturnStatement MethodInvocation MethodInvocation getValue equalsIgnoreCase	0
MethodDeclaration Modifier public static ReferenceType String ReturnStatement MethodInvocation JavaEnvUtils	0
MethodDeclaration Modifier public ReferenceType Object getUserProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference ns MemberReference name Literal true IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement MemberReference o ReturnStatement MethodInvocation userProperties MemberReference name get	0
MethodDeclaration Modifier private BasicType boolean isMissingEndOfLine ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lastChars length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i lastChars MethodInvocation eolString MemberReference i charAt BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference useExternalFile MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType extdirs IfStatement BinaryOperation == This MemberReference extdirs Literal null BlockStatement StatementExpression Assignment This MemberReference extdirs MemberReference extdirs = BlockStatement StatementExpression This MemberReference extdirs MethodInvocation MemberReference extdirs append	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c/d" StatementExpression MethodInvocation MemberReference d assertFileIsNotPresent LocalVariableDeclaration ReferenceType String VariableDeclarator c BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c" StatementExpression MethodInvocation MemberReference c assertFileIsNotPresent StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal "dangling" indexOf getFullLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public setLocalTodir FormalParameter ReferenceType String aToUri StatementExpression MethodInvocation MemberReference aToUri StatementExpression Assignment This MemberReference isToRemote Literal false =	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream classStream IOException LocalVariableDeclaration BasicType int VariableDeclarator numEntries MethodInvocation classStream readUnsignedShort ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference numEntries BlockStatement LocalVariableDeclaration ReferenceType ConstantPoolEntry VariableDeclarator nextEntry MethodInvocation ConstantPoolEntry MemberReference classStream readEntry StatementExpression Assignment MemberReference i MethodInvocation nextEntry getNumEntries += StatementExpression MethodInvocation MemberReference nextEntry addEntry	1
MethodDeclaration Modifier protected ReferenceType String classNameFromFile FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Literal 0 BinaryOperation - MethodInvocation length MemberReference substring LocalVariableDeclaration ReferenceType String VariableDeclarator s2 MethodInvocation s MemberReference File separatorChar Literal '.' replace IfStatement MethodInvocation s2 Literal "." startsWith BlockStatement StatementExpression Assignment MemberReference s2 MethodInvocation s2 Literal 1 substring = ReturnStatement MemberReference s2	0
MethodDeclaration Modifier public ReferenceType String propertyName ReturnStatement MethodInvocation MethodTagsHandler MethodInvocation toLowerCase MethodInvocation getCurrentMethod getPropertyNameFor	1
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId SAXException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator location Cast ReferenceType String MethodInvocation resourceDtds MemberReference publicId get IfStatement BinaryOperation != MemberReference location Literal null BlockStatement StatementExpression Assignment MemberReference inputStream MethodInvocation ClassLoader MethodInvocation openStream MemberReference location getSystemResource = BlockStatement StatementExpression Assignment MemberReference location Cast ReferenceType String MethodInvocation fileDtds MemberReference publicId get = IfStatement BinaryOperation != MemberReference location Literal null BlockStatement StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType FileInputStream MemberReference location = CatchClause CatchClauseParameter IOException e ReturnStatement SuperMethodInvocation MemberReference publicId MemberReference systemId resolveEntity IfStatement BinaryOperation == MemberReference inputStream Literal null BlockStatement ReturnStatement SuperMethodInvocation MemberReference publicId MemberReference systemId resolveEntity BlockStatement ReturnStatement ClassCreator ReferenceType InputSource MemberReference inputStream	1
MethodDeclaration Modifier public FormalParameter ReferenceType String varName ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Cannot variables in Ant."	0
MethodDeclaration Modifier public addDeleteCharacters FormalParameter ReferenceType TokenFilter ReferenceType DeleteCharacters filter StatementExpression MethodInvocation filterReaders MemberReference filter addElement	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression MethodInvocation MethodInvocation MemberReference classpath setClasspath getClassPathDelegate	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public testConcatFilterBefore StatementExpression MethodInvocation Literal MemberReference FILE_PREPEND_WITH MemberReference FILE_APPEND doTest	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference partition BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Please set the partition attribute." IfStatement BinaryOperation == Literal null MemberReference needed BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Please set the needed attribute."	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testIllegalCombinations" executeTarget StatementExpression MethodInvocation Literal "testIllegalCombinations" Literal assertPropertyContains StatementExpression MethodInvocation Literal "testIllegalCombinations" Literal ".xml" assertPropertyContains	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/toplevelsubant.xml" configureProject StatementExpression MethodInvocation Literal "no exception thrown" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal task at the top level must not invoke its own" Literal " build file." MethodInvocation e getMessage assertEquals	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "Invalid destination file." expectBuildException	0
MethodDeclaration Modifier public addNone FormalParameter ReferenceType NoneSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public BasicType boolean getStubs ReturnStatement MemberReference stubs	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType StatementExpression MethodInvocation outputProperties MemberReference p addElement ReturnStatement MemberReference p	0
MethodDeclaration Modifier public FormalParameter ReferenceType String docletName IfStatement BinaryOperation == MemberReference doclet Literal null BlockStatement StatementExpression Assignment MemberReference doclet ClassCreator ReferenceType DocletInfo = StatementExpression MethodInvocation doclet MethodInvocation getProject setProject StatementExpression MethodInvocation doclet MemberReference docletName setName	0
MethodDeclaration Modifier public synchronized ReferenceType Object next IfStatement MethodInvocation ! hasNext BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException IfStatement BinaryOperation == MemberReference occurrence Literal 0 BlockStatement StatementExpression Assignment MemberReference current MethodInvocation keyIter next = StatementExpression Assignment MemberReference occurrence Cast ReferenceType MutableInt MethodInvocation t MemberReference current get = StatementExpression MemberReference -- occurrence ReturnStatement MemberReference current	0
MethodDeclaration Modifier public setNoWarn FormalParameter BasicType boolean nwarn StatementExpression Assignment MemberReference mNwarn MemberReference nwarn =	0
MethodDeclaration Modifier public static ReferenceType ProjectHelper getProjectHelper BuildException LocalVariableDeclaration ReferenceType ProjectHelper VariableDeclarator helper Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator helperClass MethodInvocation System MemberReference HELPER_PROPERTY getProperty TryStatement IfStatement BinaryOperation != MemberReference helperClass Literal null BlockStatement StatementExpression Assignment MemberReference helper MethodInvocation MemberReference helperClass newHelper = CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to load ProjectHelper class \"" MemberReference helperClass Literal " specified in system property " MemberReference HELPER_PROPERTY println IfStatement BinaryOperation == MemberReference helper Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classLoader MethodInvocation getContextClassLoader LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement StatementExpression Assignment MemberReference is MethodInvocation classLoader MemberReference SERVICE_ID getResourceAsStream = IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference is MethodInvocation ClassLoader MemberReference SERVICE_ID getSystemResourceAsStream = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr TryStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference is Literal "UTF-8" = CatchClause CatchClauseParameter java.io.UnsupportedEncodingException e StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference is = LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator ClassCreator ReferenceType BufferedReader MemberReference isr LocalVariableDeclaration ReferenceType String VariableDeclarator helperClassName MethodInvocation readLine StatementExpression MethodInvocation close IfStatement BinaryOperation && BinaryOperation != MemberReference helperClassName Literal null Literal ! MethodInvocation MemberReference helperClassName equals "" BlockStatement StatementExpression Assignment MemberReference helper MethodInvocation MemberReference helperClassName newHelper = CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "Unable to load ProjectHelper " Literal "from service \"" MemberReference SERVICE_ID println IfStatement BinaryOperation != MemberReference helper Literal null BlockStatement ReturnStatement MemberReference helper BlockStatement ReturnStatement ClassCreator ReferenceType ProjectHelper2	1
MethodDeclaration Modifier public FormalParameter BasicType boolean logError IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference logError TernaryExpression MemberReference logError MemberReference Boolean TRUE MemberReference Boolean FALSE =	1
MethodDeclaration Modifier public setUsername FormalParameter ReferenceType String username StatementExpression MethodInvocation userInfo MemberReference username setName	0
MethodDeclaration ReferenceType Class getExposedClass FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation MemberReference name getDefinition ReturnStatement TernaryExpression BinaryOperation == MemberReference def Literal null Literal null MethodInvocation def MemberReference project getExposedClass	0
MethodDeclaration Modifier protected ReferenceType ArchiveScanner newArchiveScanner LocalVariableDeclaration ReferenceType ZipScanner VariableDeclarator zs ClassCreator ReferenceType ZipScanner StatementExpression MethodInvocation zs MemberReference encoding setEncoding ReturnStatement MemberReference zs	0
MethodDeclaration Modifier protected setupRedirector StatementExpression MethodInvocation redirector MemberReference input setInput StatementExpression MethodInvocation redirector MemberReference inputString setInputString StatementExpression MethodInvocation redirector MemberReference output setOutput StatementExpression MethodInvocation redirector MemberReference error setError IfStatement BinaryOperation != MemberReference redirectorElement Literal null BlockStatement StatementExpression MethodInvocation redirectorElement MemberReference redirector configure IfStatement BinaryOperation && BinaryOperation && MemberReference ! spawn BinaryOperation == MemberReference input Literal null BinaryOperation == MemberReference inputString Literal null BlockStatement StatementExpression MethodInvocation redirector ClassCreator ReferenceType MethodInvocation MethodInvocation getDefaultInputStream getProject setInputStream	0
MethodDeclaration Modifier public addContainsRegexp FormalParameter ReferenceType ContainsRegexpSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType String getOutputEncoding ReturnStatement MemberReference outputEncoding	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter BasicType long millis LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation / MemberReference millis Literal 1000 LocalVariableDeclaration BasicType long VariableDeclarator minutes BinaryOperation / MemberReference Literal 60 LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer ClassCreator ReferenceType Long MemberReference minutes ClassCreator ReferenceType Long BinaryOperation % MemberReference Literal 60 ReturnStatement MethodInvocation MINUTE_SECONDS MemberReference args format	1
MethodDeclaration Modifier public FormalParameter BasicType boolean shared StatementExpression Assignment MemberReference mShared MemberReference shared =	0
MethodDeclaration Modifier public setOwner FormalParameter ReferenceType String s StatementExpression MethodInvocation BinaryOperation + Literal "This option is not supported by as of " Literal "and will be ignored" MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable2 parentWrapper IfStatement BinaryOperation < MethodInvocation wStack size Literal 2 ReturnStatement Literal null ReturnStatement Cast ReferenceType RuntimeConfigurable2 MethodInvocation wStack BinaryOperation - MethodInvocation wStack size Literal 2 elementAt	1
MethodDeclaration Modifier private logHeadless FormalParameter ReferenceType Throwable e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "failed to display SplashScreen, caught " MethodInvocation e MethodInvocation getName getClass Literal " with message: " MethodInvocation e getMessage MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements WhileStatement BinaryOperation < MemberReference index MemberReference enumArray length BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector MemberReference index enumArray Literal null MemberReference ArraySelector MemberReference index MethodInvocation hasMoreElements enumArray BlockStatement ReturnStatement Literal true StatementExpression MemberReference ++ index ReturnStatement Literal false	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference WRITABLE_REPLACE MemberReference WRITABLE_SKIP MemberReference WRITABLE_FAIL	1
MethodDeclaration Modifier public ReferenceType Iterator iterator LocalVariableDeclaration Modifier final ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation propertyNames getProperties ReturnStatement ClassCreator ReferenceType Iterator MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MethodInvocation e hasMoreElements MethodDeclaration Modifier public ReferenceType Object next ReturnStatement ClassCreator ReferenceType PropertyResource MethodInvocation getProject Cast ReferenceType String MethodInvocation e nextElement MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public tearDown IfStatement BinaryOperation != MemberReference cloneVm Literal null BlockStatement StatementExpression MethodInvocation System Literal "ant.build.clonevm" MemberReference cloneVm setProperty	0
MethodDeclaration Modifier public testInitialCommand StatementExpression MethodInvocation Literal ArrayCreator BasicType int ArrayInitializer Literal 1 Literal 0	0
MethodDeclaration Modifier public setEleven FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference ! b assertTrue	1
MethodDeclaration Modifier public setReserved FormalParameter BasicType boolean StatementExpression Assignment MemberReference mReserved MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal text" expectLog	0
MethodDeclaration sendRcpt FormalParameter ReferenceType String rcpt IOException LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference MemberReference StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "RCPT TO: " Literal "<" MethodInvocation MemberReference rcpt sanitizeAddress Literal ">" MemberReference ok send	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal "Task1 did not BinaryOperation != MethodInvocation log Literal indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal did not BinaryOperation != MethodInvocation log Literal indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "only single argument resource " Literal "collections are supported." StatementExpression MethodInvocation Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator setSrcResource	0
MethodDeclaration Modifier public BasicType int getGid IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarResource MethodInvocation getCheckedRef ReturnStatement MemberReference uid	0
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference MemberReference v =	0
MethodDeclaration Modifier public setGenericjarsuffix FormalParameter ReferenceType String inString StatementExpression Assignment This MemberReference MemberReference inString =	0
MethodDeclaration Modifier public ReferenceType String getFilename ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "teardown" executeTarget	0
MethodDeclaration Modifier protected setExtra StatementExpression SuperMethodInvocation MethodInvocation ExtraFieldUtils MethodInvocation getExtraFields mergeLocalFileDataData setExtra	1
MethodDeclaration Modifier public setUrl FormalParameter ReferenceType String url StatementExpression Assignment This MemberReference url MemberReference url =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Cast BasicType long MemberReference Integer MAX_VALUE MethodInvocation ZipOutputStream MemberReference Integer MAX_VALUE adjustToLong assertEquals StatementExpression MethodInvocation BinaryOperation + Cast BasicType long MemberReference Integer MAX_VALUE Literal 1 MethodInvocation ZipOutputStream BinaryOperation + MemberReference Integer MAX_VALUE Literal 1 adjustToLong assertEquals StatementExpression MethodInvocation BinaryOperation * Literal 2 Cast BasicType long MemberReference Integer MAX_VALUE MethodInvocation ZipOutputStream BinaryOperation * Literal 2 MemberReference Integer MAX_VALUE adjustToLong assertEquals	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType ExpandProperties VariableDeclarator newFilter ClassCreator ReferenceType ExpandProperties MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation getProject setProject ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier protected dieOnCircularReference FormalParameter Modifier final ReferenceType Stack stack FormalParameter Modifier final ReferenceType Project project BuildException IfStatement BinaryOperation || MemberReference checked MethodInvocation ! isReference BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation ref MemberReference project getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType DataType BlockStatement LocalVariableDeclaration ReferenceType IdentityStack VariableDeclarator id MethodInvocation IdentityStack MemberReference stack getInstance IfStatement MethodInvocation id MemberReference o contains BlockStatement ThrowStatement MethodInvocation circularReference BlockStatement StatementExpression MethodInvocation id MemberReference o push StatementExpression Cast ReferenceType DataType MemberReference o StatementExpression MethodInvocation id pop StatementExpression Assignment MemberReference checked Literal true =	1
MethodDeclaration Modifier private static doReportLocale FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar getInstance LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator tz MethodInvocation cal getTimeZone StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + Literal "Timezone " MethodInvocation tz getDisplayName Literal " offset=" MethodInvocation tz MethodInvocation cal MemberReference Calendar ERA get MethodInvocation cal MemberReference Calendar YEAR get MethodInvocation cal MemberReference Calendar MONTH get MethodInvocation cal MemberReference Calendar DAY_OF_MONTH get MethodInvocation cal MemberReference Calendar DAY_OF_WEEK get BinaryOperation + BinaryOperation * BinaryOperation + BinaryOperation * BinaryOperation + BinaryOperation * MethodInvocation cal MemberReference Calendar HOUR_OF_DAY get MemberReference MethodInvocation cal MemberReference Calendar MINUTE get MemberReference MethodInvocation cal MemberReference Calendar SECOND get MemberReference MethodInvocation cal MemberReference Calendar MILLISECOND get getOffset println	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Hello World" expectLogContaining	0
MethodDeclaration Modifier protected BasicType boolean supportsNonFileResources ReturnStatement Literal false	0
MethodDeclaration Modifier protected checkConfiguration FormalParameter ReferenceType String descriptorFileName FormalParameter ReferenceType SAXParser saxParser BuildException LocalVariableDeclaration BasicType int VariableDeclarator startOfName BinaryOperation + MethodInvocation descriptorFileName MemberReference File separatorChar lastIndexOf Literal 1 LocalVariableDeclaration ReferenceType String VariableDeclarator stdXml MethodInvocation descriptorFileName MemberReference startOfName substring IfStatement BinaryOperation && MethodInvocation stdXml MemberReference EJB_DD equals BinaryOperation == MethodInvocation MemberReference baseJarName getConfig Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "No name specified for the completed JAR file. The EJB" Literal " descriptor should be prepended with the JAR " Literal "name or it should be specified using the " Literal \"basejarname\" in the \"ejbjar\" task." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation LocalVariableDeclaration ReferenceType File VariableDeclarator iasDescriptor ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig MethodInvocation getIasDescriptorName IfStatement BinaryOperation || MethodInvocation iasDescriptor exists MethodInvocation iasDescriptor isFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "The iAS-specific EJB descriptor (" MemberReference iasDescriptor Literal ") was not found." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference iashome Literal null MethodInvocation iashome isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "If \"iashome\" is specified, it must be a valid " Literal "directory (it was set to " MemberReference iashome Literal ")." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier private testoutput FormalParameter ReferenceType Resource dest IOException StatementExpression MethodInvocation ResourceUtils ClassCreator ReferenceType StringResource Literal "foo" MemberReference dest Literal null copyResource	0
MethodDeclaration Modifier public setAdd FormalParameter BasicType boolean add StatementExpression Assignment This MemberReference add MemberReference add =	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference text	0
MethodDeclaration Modifier public ReferenceType createPath IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation path createPath	0
MethodDeclaration Modifier public addSize FormalParameter ReferenceType SizeSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier protected ReferenceType Hashtable parseEjbFiles FormalParameter ReferenceType String descriptorFileName FormalParameter ReferenceType SAXParser saxParser IOException SAXException LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files LocalVariableDeclaration ReferenceType IPlanetEjbc VariableDeclarator ejbc ClassCreator ReferenceType IPlanetEjbc ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig MemberReference descriptorFileName ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig MethodInvocation getIasDescriptorName MethodInvocation MemberReference srcDir getConfig MethodInvocation MethodInvocation toString getCombinedClasspath MemberReference saxParser StatementExpression MethodInvocation ejbc MemberReference keepgenerated setRetainSource StatementExpression MethodInvocation ejbc MemberReference debug setDebugOutput IfStatement BinaryOperation != MemberReference iashome Literal null BlockStatement StatementExpression MethodInvocation ejbc MemberReference iashome setIasHomeDir TryStatement StatementExpression MethodInvocation ejbc execute CatchClause CatchClauseParameter IPlanetEjbc.EjbcException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "An error has occurred while trying to " Literal "execute the iAS ejbc utility" MemberReference e MethodInvocation getLocation StatementExpression Assignment MemberReference displayName MethodInvocation ejbc getDisplayName = StatementExpression Assignment MemberReference files MethodInvocation ejbc getEjbFiles = LocalVariableDeclaration ReferenceType String VariableDeclarator cmpDescriptors MethodInvocation ejbc getCmpDescriptors IfStatement BinaryOperation > MemberReference cmpDescriptors length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator baseDir MethodInvocation MemberReference descriptorDir getConfig LocalVariableDeclaration BasicType int VariableDeclarator endOfPath MethodInvocation descriptorFileName MemberReference File separator lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator relativePath MethodInvocation descriptorFileName Literal 0 BinaryOperation + MemberReference endOfPath Literal 1 substring ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cmpDescriptors length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endOfCmp MemberReference ArraySelector MemberReference i MethodInvocation Literal '/' lastIndexOf cmpDescriptors LocalVariableDeclaration ReferenceType String VariableDeclarator cmpDescriptor MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + MemberReference endOfCmp Literal 1 substring cmpDescriptors LocalVariableDeclaration ReferenceType File VariableDeclarator cmpFile ClassCreator ReferenceType File MemberReference baseDir BinaryOperation + MemberReference relativePath MemberReference cmpDescriptor IfStatement MethodInvocation ! cmpFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The CMP descriptor file (" MemberReference cmpFile Literal ") could not be found." MethodInvocation getLocation StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i cmpDescriptors MemberReference cmpFile put ReturnStatement MemberReference files	1
MethodDeclaration Modifier public setHeader FormalParameter ReferenceType String header LocalVariableDeclaration ReferenceType Html VariableDeclarator h ClassCreator ReferenceType Html StatementExpression MethodInvocation h MemberReference header addText StatementExpression MethodInvocation MemberReference h addHeader	0
MethodDeclaration Modifier public setDynamicAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation map MemberReference name MemberReference value put	1
MethodDeclaration Modifier static ReferenceType Manifest getManifest FormalParameter Modifier final ReferenceType File file BuildException TryStatement LocalVariableDeclaration Modifier final ReferenceType JarFile VariableDeclarator jarFile ClassCreator ReferenceType JarFile MemberReference file LocalVariableDeclaration ReferenceType Manifest VariableDeclarator m MethodInvocation jarFile getManifest IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference file Literal " doesn't have a MANIFEST" ReturnStatement MemberReference m CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe getMessage MemberReference ioe	1
MethodDeclaration Modifier public setAutoresponse FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response setInternalAutoResponse	0
MethodDeclaration Modifier protected ReferenceType FileSet getRef FormalParameter ReferenceType Project p IfStatement MemberReference ! checked BlockStatement LocalVariableDeclaration ReferenceType Stack VariableDeclarator stk ClassCreator ReferenceType Stack StatementExpression MethodInvocation stk This push StatementExpression MethodInvocation MemberReference stk MemberReference p dieOnCircularReference LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation ref MemberReference p getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType FileSet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + MethodInvocation ref getRefId Literal " doesn\'t a fileset" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg BlockStatement ReturnStatement Cast ReferenceType FileSet MemberReference o	1
MethodDeclaration Modifier private parseAndFetchFile FormalParameter ReferenceType String serverResponse FormalParameter ReferenceType File localFile FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType InputStream in IOException LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation serverResponse Literal " " BinaryOperation + MemberReference start Literal 1 indexOf StatementExpression Assignment MemberReference start BinaryOperation + MemberReference end Literal 1 = StatementExpression Assignment MemberReference end MethodInvocation serverResponse Literal " " BinaryOperation + MemberReference start Literal 1 indexOf = LocalVariableDeclaration BasicType long VariableDeclarator filesize MethodInvocation Long MethodInvocation serverResponse MemberReference start MemberReference end substring parseLong LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation serverResponse BinaryOperation + MemberReference end Literal 1 substring StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Receiving: " MemberReference filename Literal " : " MemberReference filesize log LocalVariableDeclaration ReferenceType File VariableDeclarator transferFile TernaryExpression MethodInvocation localFile isDirectory ClassCreator ReferenceType File MemberReference localFile MemberReference filename MemberReference localFile StatementExpression MethodInvocation MemberReference transferFile MemberReference filesize MemberReference out MemberReference in fetchFile StatementExpression MethodInvocation MemberReference in waitForAck StatementExpression MethodInvocation MemberReference out sendAck	1
MethodDeclaration Modifier public static BasicType int getOctalBytes FormalParameter BasicType long value FormalParameter BasicType byte buf FormalParameter BasicType int offset FormalParameter BasicType int length LocalVariableDeclaration BasicType int VariableDeclarator idx BinaryOperation - MemberReference length Literal 1 StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference idx buf Literal 0 = StatementExpression MemberReference -- idx StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference idx buf Cast BasicType byte Literal ' ' = StatementExpression MemberReference -- idx IfStatement BinaryOperation == MemberReference value Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference idx buf Cast BasicType byte Literal '0' = StatementExpression MemberReference -- idx BlockStatement ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator val MemberReference value BinaryOperation && BinaryOperation >= MemberReference idx Literal 0 BinaryOperation > MemberReference val Literal 0 MemberReference -- idx BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference idx buf Cast BasicType byte BinaryOperation + Cast BasicType byte Literal '0' Cast BasicType byte BinaryOperation & MemberReference val Literal 7 = StatementExpression Assignment MemberReference val BinaryOperation >> MemberReference val Literal 3 = ForStatement ForControl BinaryOperation >= MemberReference idx Literal 0 MemberReference -- idx BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference idx buf Cast BasicType byte Literal ' ' = ReturnStatement BinaryOperation + MemberReference offset MemberReference length	1
MethodDeclaration Modifier protected ReferenceType Regexp createRegexpInstance FormalParameter ReferenceType String classname BuildException LocalVariableDeclaration ReferenceType RegexpMatcher VariableDeclarator m MethodInvocation MemberReference classname createInstance IfStatement BinaryOperation instanceof MemberReference m ReferenceType Regexp BlockStatement ReturnStatement Cast ReferenceType Regexp MemberReference m BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference classname Literal " doesn't implement the Regexp interface"	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MemberReference name	0
MethodDeclaration * attribute - treat * * @param true if are to be */ Modifier public setDelimsAreTokens FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private validate IfStatement BinaryOperation == Literal null MemberReference antfile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal specify ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation == Literal null MemberReference destfile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal specify destination file" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "E" resolveFile MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "E/1" resolveFile MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal "A/1" resolveFile MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "A" resolveFile MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier private process Exception LocalVariableDeclaration ReferenceType String VariableDeclarator manifest Literal "Manifest-Version: 1.0\n\n" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference descriptors length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator descriptorName MemberReference ArraySelector MemberReference i descriptors LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference descriptorDirectory MemberReference descriptorName IfStatement MethodInvocation MemberReference descriptorFile isRegenRequired BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal "Running ejbc for " MethodInvocation descriptorFile getName println StatementExpression MethodInvocation MemberReference descriptorFile regenerateSupportClasses BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + MethodInvocation descriptorFile getName Literal " is up to date" println StatementExpression Assignment MemberReference manifest BinaryOperation + BinaryOperation + Literal "Name: " MethodInvocation descriptorName Literal '\\' Literal '/' replace Literal "\nEnterprise-Bean: True\n\n" += LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator fw ClassCreator ReferenceType FileWriter MemberReference manifestFile LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference fw StatementExpression MethodInvocation pw MemberReference manifest print StatementExpression MethodInvocation fw flush StatementExpression MethodInvocation fw close	1
MethodDeclaration Modifier public setIncludeNoSourcePackages FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference includeNoSourcePackages MemberReference b =	0
MethodDeclaration Modifier private BasicType boolean isDeprecated FormalParameter ReferenceType XMethod method LocalVariableDeclaration ReferenceType Collection VariableDeclarator tags MethodInvocation method MethodInvocation getTags getDoc LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation tags iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType XTag VariableDeclarator tag Cast ReferenceType XTag MethodInvocation iter next IfStatement MethodInvocation tag MethodInvocation Literal "@deprecated" equals getName BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected BasicType int executeExternalCompile FormalParameter ReferenceType String args FormalParameter BasicType int firstFileName ReturnStatement MethodInvocation MemberReference args MemberReference firstFileName Literal true executeExternalCompile	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation getLog LocalVariableDeclaration BasicType boolean VariableDeclarator hasWarning BinaryOperation != MethodInvocation output Literal "Manifest warning: \"Name\" attributes should not occur in the main section" indexOf Literal - 1 StatementExpression MethodInvocation Literal "Expected warning about Name in main section" MemberReference hasWarning assertTrue	0
MethodDeclaration Modifier public BasicType boolean isCompress ReturnStatement MemberReference doCompress	0
MethodDeclaration Modifier public setLongfile FormalParameter ReferenceType String mode StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The setLongfile(String) method has been deprecated." Literal " Use setLongfile(Tar.TarLongFileMode) instead." log StatementExpression Assignment This MemberReference longFileMode ClassCreator ReferenceType TarLongFileMode = StatementExpression MethodInvocation longFileMode MemberReference mode setValue	1
MethodDeclaration ReferenceType String ReturnStatement MemberReference urlBase	0
MethodDeclaration Modifier public onTestError FormalParameter ReferenceType TestRunEvent evt LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation RES Literal MethodInvocation evt getName MethodInvocation evt MethodInvocation getStackTrace getError getString StatementExpression MethodInvocation MethodInvocation MemberReference msg println getWriter StatementExpression SuperMethodInvocation MemberReference evt onTestError	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file1 StatementExpression Assignment This MemberReference file1 MemberReference file1 =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType PropertyFile VariableDeclarator props ClassCreator ReferenceType PropertyFile StatementExpression MethodInvocation props MethodInvocation getProject setProject LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File Literal StatementExpression MethodInvocation props MemberReference file setFile StatementExpression MethodInvocation Literal "Properties file exists before test." MethodInvocation file exists assertFalse StatementExpression MethodInvocation props execute StatementExpression MethodInvocation Literal "Properties file does not exist after test." MethodInvocation file exists assertTrue StatementExpression MethodInvocation file delete	0
MethodDeclaration Modifier public ReferenceType File getLocalFile ReturnStatement MemberReference localFile	0
MethodDeclaration Modifier public static BasicType boolean addDefaultExclude FormalParameter ReferenceType String s IfStatement BinaryOperation == MethodInvocation defaultExcludes MemberReference s indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation defaultExcludes MemberReference s add ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator tkind MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator tname MethodInvocation getTypeName LocalVariableDeclaration ReferenceType String VariableDeclarator typeSpec Literal null StatementExpression Assignment MemberReference typeSpec BinaryOperation + BinaryOperation + MemberReference tkind Literal ":" MemberReference tname = IfStatement BinaryOperation != MethodInvocation getVOB Literal null BlockStatement StatementExpression Assignment MemberReference typeSpec BinaryOperation + Literal "@" MethodInvocation getVOB += ReturnStatement MemberReference typeSpec	0
MethodDeclaration Modifier public ReferenceType NestedString createReplaceToken IfStatement BinaryOperation == MemberReference token Literal null BlockStatement StatementExpression Assignment MemberReference token ClassCreator ReferenceType NestedString = ReturnStatement MemberReference token	0
MethodDeclaration Modifier public BasicType boolean getRmAll ReturnStatement MemberReference mRmall	0
MethodDeclaration * demand creation of the package * When you add a new package, add a new test */ Modifier private static buildJrePackages StatementExpression Assignment MemberReference jrePackages ClassCreator ReferenceType Vector = SwitchStatement MemberReference javaVersionNumber SwitchStatementCase Literal 16 Literal 15 StatementExpression MethodInvocation jrePackages Literal "com.sun.org.apache" addElement SwitchStatementCase Literal 14 IfStatement BinaryOperation == MemberReference javaVersionNumber Literal 14 BlockStatement StatementExpression MethodInvocation jrePackages Literal "org.apache.crimson" addElement StatementExpression MethodInvocation jrePackages Literal "org.apache.xalan" addElement StatementExpression MethodInvocation jrePackages Literal "org.apache.xml" addElement StatementExpression MethodInvocation jrePackages Literal "org.apache.xpath" addElement StatementExpression MethodInvocation jrePackages Literal "org.ietf.jgss" addElement StatementExpression MethodInvocation jrePackages Literal "org.w3c.dom" addElement StatementExpression MethodInvocation jrePackages Literal "org.xml.sax" addElement SwitchStatementCase Literal 13 StatementExpression MethodInvocation jrePackages Literal "org.omg" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.corba" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.jndi" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.media" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.naming" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.org.omg" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.rmi" addElement StatementExpression MethodInvocation jrePackages Literal "sunw.io" addElement StatementExpression MethodInvocation jrePackages Literal "sunw.util" addElement SwitchStatementCase Literal 12 StatementExpression MethodInvocation jrePackages Literal "com.sun.java" addElement StatementExpression MethodInvocation jrePackages Literal "com.sun.image" addElement SwitchStatementCase Literal 11 StatementExpression MethodInvocation jrePackages Literal "sun" addElement StatementExpression MethodInvocation jrePackages Literal "java" addElement StatementExpression MethodInvocation jrePackages Literal "javax" addElement BreakStatement	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" executeTarget StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal of " MemberReference TASKDEFS_DIR Literal MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal "/expected/de/template.txt" BinaryOperation + MemberReference TASKDEFS_DIR Literal "/output/de/template.txt" compareFiles assertTrue	0
MethodDeclaration Modifier public restoreSystemProperties BuildException StatementExpression MethodInvocation sysProperties restoreSystem	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal executeTarget IfStatement BinaryOperation == MethodInvocation project Literal "test.can.run" getProperty Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference BUILD_FILE Literal = StatementExpression Assignment MemberReference logFile MethodInvocation FILE_UTILS Literal Literal "log" MethodInvocation project getBaseDir createTempFile = StatementExpression MethodInvocation Literal "log file not MethodInvocation ! logFile exists assertTrue StatementExpression MethodInvocation MemberReference TIME_TO_WAIT setTimeToWait StatementExpression MethodInvocation MethodInvocation logFile getAbsolutePath setLogFile StatementExpression MethodInvocation ClassCreator ReferenceType StatementExpression MethodInvocation start LocalVariableDeclaration ReferenceType GregorianCalendar VariableDeclarator startwait ClassCreator ReferenceType GregorianCalendar WhileStatement MemberReference ! buildFinished BlockStatement TryStatement StatementExpression MethodInvocation Thread Literal 10 sleep CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation System.out Literal "my sleep was interrupted" println LocalVariableDeclaration ReferenceType GregorianCalendar VariableDeclarator now ClassCreator ReferenceType GregorianCalendar IfStatement BinaryOperation > BinaryOperation - MethodInvocation now MethodInvocation getTime getTime MethodInvocation startwait MethodInvocation getTime getTime MemberReference MAX_BUILD_TIME BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "aborting too long " BinaryOperation - MethodInvocation now MethodInvocation getTime getTime MethodInvocation startwait MethodInvocation getTime getTime Literal "milliseconds" println BreakStatement TryStatement StatementExpression MethodInvocation Thread BinaryOperation + BinaryOperation * MemberReference TIME_TO_WAIT Literal 1000 MemberReference SECURITY_MARGIN sleep CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation System.out Literal "my sleep was interrupted" println LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation getTimeElapsed StatementExpression MethodInvocation Literal more than the process BinaryOperation > BinaryOperation + BinaryOperation * MemberReference TIME_TO_WAIT Literal 1000 MemberReference SECURITY_MARGIN MemberReference assertTrue StatementExpression Assignment MemberReference logFile ClassCreator ReferenceType File MethodInvocation logFile getAbsolutePath = StatementExpression MethodInvocation Literal "log file found after spawn" MethodInvocation logFile exists assertTrue	0
MethodDeclaration Modifier public ReferenceType VelocityEngine ReturnStatement MemberReference helper engine	0
MethodDeclaration Modifier final protected addResources FormalParameter ReferenceType FileSet fileset FormalParameter ReferenceType Resource resources FormalParameter ReferenceType ZipOutputStream zOut IOException LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator fullpath Literal "" LocalVariableDeclaration BasicType int VariableDeclarator dirMode MemberReference ArchiveFileSet DEFAULT_DIR_MODE LocalVariableDeclaration BasicType int VariableDeclarator fileMode MemberReference ArchiveFileSet DEFAULT_FILE_MODE LocalVariableDeclaration ReferenceType ArchiveFileSet VariableDeclarator zfs Literal null IfStatement BinaryOperation instanceof MemberReference fileset ReferenceType ArchiveFileSet BlockStatement StatementExpression Assignment MemberReference zfs Cast ReferenceType ArchiveFileSet MemberReference fileset = StatementExpression Assignment MemberReference prefix MethodInvocation zfs MethodInvocation getProject getPrefix = StatementExpression Assignment MemberReference fullpath MethodInvocation zfs MethodInvocation getProject getFullpath = StatementExpression Assignment MemberReference dirMode MethodInvocation zfs MethodInvocation getProject = StatementExpression Assignment MemberReference fileMode MethodInvocation zfs MethodInvocation getProject = IfStatement BinaryOperation && BinaryOperation > MethodInvocation prefix length Literal 0 BinaryOperation > MethodInvocation fullpath length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Both prefix and fullpath attributes must" Literal " not be set on the same fileset." IfStatement BinaryOperation && BinaryOperation != MemberReference resources length Literal 1 BinaryOperation > MethodInvocation fullpath length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "fullpath attribute may only be specified" Literal " for filesets that specify a single" Literal " file." IfStatement BinaryOperation > MethodInvocation prefix length Literal 0 BlockStatement IfStatement BinaryOperation && MethodInvocation ! prefix Literal "/" endsWith MethodInvocation ! prefix Literal "\\" endsWith BlockStatement StatementExpression Assignment MemberReference prefix Literal "/" += StatementExpression MethodInvocation Literal null MemberReference prefix MemberReference zOut Literal "" MemberReference dirMode addParentDirs LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zf Literal null TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator dealingWithFiles Literal false LocalVariableDeclaration ReferenceType File VariableDeclarator base Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference zfs Literal null BinaryOperation == MethodInvocation zfs MethodInvocation getProject getSrc Literal null BlockStatement StatementExpression Assignment MemberReference dealingWithFiles Literal true = StatementExpression Assignment MemberReference base MethodInvocation fileset MethodInvocation getProject getDir = IfStatement BinaryOperation instanceof MemberReference zfs ReferenceType ZipFileSet BlockStatement StatementExpression Assignment MemberReference zf ClassCreator ReferenceType ZipFile MethodInvocation zfs MethodInvocation getProject getSrc MemberReference encoding = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference resources length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null IfStatement BinaryOperation > MethodInvocation fullpath length Literal 0 BlockStatement StatementExpression Assignment MemberReference name MemberReference fullpath = BlockStatement StatementExpression Assignment MemberReference name MemberReference ArraySelector MemberReference i MethodInvocation getName resources = StatementExpression Assignment MemberReference name MethodInvocation name MemberReference File separatorChar Literal '/' replace = IfStatement Literal MethodInvocation MemberReference name equals "" BlockStatement ContinueStatement IfStatement BinaryOperation && MemberReference ArraySelector MemberReference i MethodInvocation isDirectory resources MethodInvocation ! name Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MemberReference name Literal "/" = IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MemberReference ! doFilesonly MemberReference ! dealingWithFiles MemberReference ArraySelector MemberReference i MethodInvocation isDirectory resources MethodInvocation ! zfs hasDirModeBeenSet BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nextToLastSlash MethodInvocation name Literal "/" BinaryOperation - MethodInvocation name length Literal 2 lastIndexOf IfStatement BinaryOperation != MemberReference nextToLastSlash Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference base MethodInvocation name Literal 0 BinaryOperation + MemberReference nextToLastSlash Literal 1 substring MemberReference zOut MemberReference prefix MemberReference dirMode addParentDirs IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze MethodInvocation zf MemberReference ArraySelector MemberReference i MethodInvocation getName resources getEntry StatementExpression MethodInvocation MemberReference base MemberReference name MemberReference zOut MemberReference prefix MethodInvocation ze getUnixMode addParentDirs BlockStatement LocalVariableDeclaration ReferenceType ArchiveResource VariableDeclarator tr Cast ReferenceType ArchiveResource MemberReference ArraySelector MemberReference i resources StatementExpression MethodInvocation MemberReference base MemberReference name MemberReference zOut MemberReference prefix MethodInvocation tr getMode addParentDirs BlockStatement StatementExpression MethodInvocation MemberReference base MemberReference name MemberReference zOut MemberReference prefix MemberReference dirMode addParentDirs IfStatement BinaryOperation && MemberReference ! ArraySelector MemberReference i MethodInvocation isDirectory resources MemberReference dealingWithFiles BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation FILE_UTILS MemberReference base MemberReference ArraySelector MemberReference i MethodInvocation getName resources resolveFile StatementExpression MethodInvocation MemberReference f MemberReference zOut BinaryOperation + MemberReference prefix MemberReference name MemberReference fileMode zipFile IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation isDirectory resources BlockStatement IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze MethodInvocation zf MemberReference ArraySelector MemberReference i MethodInvocation getName resources getEntry IfStatement BinaryOperation != MemberReference ze Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator oldCompress MemberReference doCompress IfStatement MemberReference keepCompression BlockStatement StatementExpression Assignment MemberReference doCompress BinaryOperation == MethodInvocation ze getMethod MemberReference ZipEntry DEFLATED = TryStatement StatementExpression MethodInvocation MethodInvocation zf MemberReference ze getInputStream MemberReference zOut BinaryOperation + MemberReference prefix MemberReference name MethodInvocation ze getTime MethodInvocation zfs MethodInvocation getProject getSrc TernaryExpression MethodInvocation zfs hasFileModeBeenSet MemberReference fileMode MethodInvocation ze getUnixMode zipFile StatementExpression Assignment MemberReference doCompress MemberReference oldCompress = BlockStatement LocalVariableDeclaration ReferenceType ArchiveResource VariableDeclarator tr Cast ReferenceType ArchiveResource MemberReference ArraySelector MemberReference i resources LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement StatementExpression Assignment MemberReference is MethodInvocation tr getInputStream = StatementExpression MethodInvocation MemberReference is MemberReference zOut BinaryOperation + MemberReference prefix MemberReference name MemberReference ArraySelector MemberReference i MethodInvocation getLastModified resources MethodInvocation zfs MethodInvocation getProject getSrc TernaryExpression MethodInvocation zfs hasFileModeBeenSet MemberReference fileMode MethodInvocation tr getMode zipFile StatementExpression MethodInvocation FileUtils MemberReference is close IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement StatementExpression MethodInvocation zf close	1
MethodDeclaration Modifier public fireBuildFinished StatementExpression SuperMethodInvocation Literal null fireBuildFinished	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet fileset StatementExpression Assignment This MemberReference fileset MemberReference fileset =	0
MethodDeclaration Modifier public synchronized BasicType boolean killedProcess ReturnStatement MemberReference timedOut	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String message ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType File getBaseDir IfStatement BinaryOperation == MemberReference baseDir Literal null BlockStatement TryStatement StatementExpression MethodInvocation Literal "." setBasedir CatchClause CatchClauseParameter BuildException ex StatementExpression MethodInvocation ex printStackTrace ReturnStatement MemberReference baseDir	0
MethodDeclaration Modifier private static ReferenceType InternetAddress internetAddresses FormalParameter ReferenceType Vector list AddressException UnsupportedEncodingException LocalVariableDeclaration ReferenceType InternetAddress VariableDeclarator addrs ArrayCreator ReferenceType InternetAddress MethodInvocation list size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation list size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator addr Cast ReferenceType MethodInvocation list MemberReference i elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation addr getName StatementExpression Assignment MemberReference ArraySelector MemberReference i addrs TernaryExpression BinaryOperation == MemberReference name Literal null ClassCreator ReferenceType InternetAddress MethodInvocation addr getAddress ClassCreator ReferenceType InternetAddress MethodInvocation addr getAddress MemberReference name = ReturnStatement MemberReference addrs	1
MethodDeclaration Modifier public ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType Project getProject ReturnStatement SuperMethodInvocation getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String eltype StatementExpression Assignment MemberReference mEltype MemberReference eltype =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd Literal ID setPublicId StatementExpression MethodInvocation dtd Literal setLocation TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog Literal ID Literal resolveEntity StatementExpression MethodInvocation Literal "Nonexistent entry should not be returned" MemberReference result assertNull CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail TryStatement LocalVariableDeclaration ReferenceType Source VariableDeclarator result MethodInvocation catalog Literal Literal null resolve LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation ClassCreator ReferenceType File BinaryOperation + MethodInvocation project MethodInvocation toURL getBaseDir Literal "/i/dont/exist.dtd" toURLString LocalVariableDeclaration ReferenceType String VariableDeclarator resultStr ClassCreator MethodInvocation getFile ReferenceType URL Cast ReferenceType SAXSource MemberReference result StatementExpression MethodInvocation Literal "Nonexistent entry return input" MethodInvocation expected MemberReference resultStr endsWith assertTrue CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "resolve() MethodInvocation e toString fail	0
MethodDeclaration Modifier public static deleteSymlink FormalParameter ReferenceType String path IOException FileNotFoundException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference path deleteSymlink	1
MethodDeclaration Modifier public ReferenceType String getWorkspace ReturnStatement MemberReference workspace	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init StatementExpression MethodInvocation MethodInvocation getProject setProject	1
MethodDeclaration Modifier public test13 StatementExpression MethodInvocation Literal "test13" executeTarget	0
MethodDeclaration Modifier public testOverrideWinsNoInheritAll StatementExpression MethodInvocation Literal "test-property-override-no-inheritall-start" Literal "The value of test is expectLogContaining	0
MethodDeclaration Modifier public testIsDynamic StatementExpression MethodInvocation Literal "Not dynamic" BinaryOperation == Literal false MethodInvocation ih isDynamic assertTrue	1
MethodDeclaration Modifier private getAndMoveToFrontDecode IOException StatementExpression Assignment This MemberReference origPtr MethodInvocation Literal 24 bsR = StatementExpression MethodInvocation recvDecodingTables LocalVariableDeclaration Modifier final ReferenceType InputStream VariableDeclarator inShadow This MemberReference in LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator ll8 MemberReference dataShadow ll8 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator unzftab MemberReference dataShadow unzftab LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator selector MemberReference dataShadow selector LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator seqToUnseq MemberReference dataShadow seqToUnseq LocalVariableDeclaration Modifier final BasicType char VariableDeclarator yy MemberReference dataShadow getAndMoveToFrontDecode_yy LocalVariableDeclaration Modifier final BasicType int VariableDeclarator minLens MemberReference dataShadow minLens LocalVariableDeclaration Modifier final BasicType int VariableDeclarator limit MemberReference dataShadow limit LocalVariableDeclaration Modifier final BasicType int VariableDeclarator base MemberReference dataShadow base LocalVariableDeclaration Modifier final BasicType int VariableDeclarator perm MemberReference dataShadow perm LocalVariableDeclaration Modifier final BasicType int VariableDeclarator limitLast BinaryOperation * This MemberReference Literal 100000 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 256 BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i yy Cast BasicType char MemberReference i = StatementExpression Assignment MemberReference ArraySelector MemberReference i unzftab Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator groupNo Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator groupPos BinaryOperation - MemberReference G_SIZE Literal 1 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator eob BinaryOperation + This MemberReference nInUse Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator nextSym MethodInvocation Literal 0 getAndMoveToFrontDecode0 LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator lastShadow Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator zt BinaryOperation & MemberReference ArraySelector MemberReference groupNo selector Literal 0xff LocalVariableDeclaration BasicType int VariableDeclarator base_zt MemberReference ArraySelector MemberReference zt base LocalVariableDeclaration BasicType int VariableDeclarator limit_zt MemberReference ArraySelector MemberReference zt limit LocalVariableDeclaration BasicType int VariableDeclarator perm_zt MemberReference ArraySelector MemberReference zt perm LocalVariableDeclaration BasicType int VariableDeclarator minLens_zt MemberReference ArraySelector MemberReference zt minLens WhileStatement BinaryOperation != MemberReference nextSym MemberReference eob BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference nextSym MemberReference RUNA BinaryOperation == MemberReference nextSym MemberReference RUNB BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator s Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator n Literal 1 Literal true Assignment MemberReference n Literal 1 <<= BlockStatement IfStatement BinaryOperation == MemberReference nextSym MemberReference RUNA BlockStatement StatementExpression Assignment MemberReference s MemberReference n += IfStatement BinaryOperation == MemberReference nextSym MemberReference RUNB BlockStatement StatementExpression Assignment MemberReference s BinaryOperation << MemberReference n Literal 1 += BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference groupPos Literal 0 BlockStatement StatementExpression Assignment MemberReference groupPos BinaryOperation - MemberReference G_SIZE Literal 1 = StatementExpression Assignment MemberReference zt BinaryOperation & MemberReference ArraySelector MemberReference ++ groupNo selector Literal 0xff = StatementExpression Assignment MemberReference base_zt MemberReference ArraySelector MemberReference zt base = StatementExpression Assignment MemberReference limit_zt MemberReference ArraySelector MemberReference zt limit = StatementExpression Assignment MemberReference perm_zt MemberReference ArraySelector MemberReference zt perm = StatementExpression Assignment MemberReference minLens_zt MemberReference ArraySelector MemberReference zt minLens = BlockStatement StatementExpression MemberReference -- groupPos LocalVariableDeclaration BasicType int VariableDeclarator zn MemberReference minLens_zt WhileStatement BinaryOperation < MemberReference bsLiveShadow MemberReference zn BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator thech MethodInvocation inShadow read IfStatement BinaryOperation >= MemberReference thech Literal 0 BlockStatement StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += ContinueStatement BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" LocalVariableDeclaration BasicType int VariableDeclarator zvec BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow BinaryOperation - MemberReference bsLiveShadow MemberReference zn BinaryOperation - BinaryOperation << Literal 1 MemberReference zn Literal 1 StatementExpression Assignment MemberReference bsLiveShadow MemberReference zn -= WhileStatement BinaryOperation > MemberReference zvec MemberReference ArraySelector MemberReference zn limit_zt BlockStatement StatementExpression MemberReference ++ zn WhileStatement BinaryOperation < MemberReference bsLiveShadow Literal 1 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator thech MethodInvocation inShadow read IfStatement BinaryOperation >= MemberReference thech Literal 0 BlockStatement StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += ContinueStatement BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" StatementExpression MemberReference -- bsLiveShadow StatementExpression Assignment MemberReference zvec BinaryOperation | BinaryOperation << MemberReference zvec Literal 1 BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow MemberReference bsLiveShadow Literal 1 = StatementExpression Assignment MemberReference nextSym MemberReference ArraySelector BinaryOperation - MemberReference zvec MemberReference ArraySelector MemberReference zn base_zt perm_zt = LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator ch MemberReference ArraySelector MemberReference ArraySelector Literal 0 yy seqToUnseq StatementExpression Assignment MemberReference ArraySelector BinaryOperation & MemberReference ch Literal 0xff unzftab BinaryOperation + MemberReference s Literal 1 += WhileStatement BinaryOperation >= MemberReference -- s Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ lastShadow ll8 MemberReference ch = IfStatement BinaryOperation >= MemberReference lastShadow MemberReference limitLast BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "block overrun" BlockStatement IfStatement BinaryOperation >= MemberReference ++ lastShadow MemberReference limitLast BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "block overrun" LocalVariableDeclaration Modifier final BasicType char VariableDeclarator tmp MemberReference ArraySelector BinaryOperation - MemberReference nextSym Literal 1 yy StatementExpression MemberReference ++ ArraySelector BinaryOperation & MemberReference ArraySelector MemberReference tmp seqToUnseq Literal 0xff unzftab StatementExpression Assignment MemberReference ArraySelector MemberReference lastShadow ll8 MemberReference ArraySelector MemberReference tmp seqToUnseq = IfStatement BinaryOperation <= MemberReference nextSym Literal 16 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j BinaryOperation - MemberReference nextSym Literal 1 BinaryOperation > MemberReference j Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference j yy MemberReference ArraySelector MemberReference -- j yy = BlockStatement StatementExpression MethodInvocation System MemberReference yy Literal 0 MemberReference yy Literal 1 BinaryOperation - MemberReference nextSym Literal 1 arraycopy StatementExpression Assignment MemberReference ArraySelector Literal 0 yy MemberReference tmp = IfStatement BinaryOperation == MemberReference groupPos Literal 0 BlockStatement StatementExpression Assignment MemberReference groupPos BinaryOperation - MemberReference G_SIZE Literal 1 = StatementExpression Assignment MemberReference zt BinaryOperation & MemberReference ArraySelector MemberReference ++ groupNo selector Literal 0xff = StatementExpression Assignment MemberReference base_zt MemberReference ArraySelector MemberReference zt base = StatementExpression Assignment MemberReference limit_zt MemberReference ArraySelector MemberReference zt limit = StatementExpression Assignment MemberReference perm_zt MemberReference ArraySelector MemberReference zt perm = StatementExpression Assignment MemberReference minLens_zt MemberReference ArraySelector MemberReference zt minLens = BlockStatement StatementExpression MemberReference -- groupPos LocalVariableDeclaration BasicType int VariableDeclarator zn MemberReference minLens_zt WhileStatement BinaryOperation < MemberReference bsLiveShadow MemberReference zn BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator thech MethodInvocation inShadow read IfStatement BinaryOperation >= MemberReference thech Literal 0 BlockStatement StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += ContinueStatement BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" LocalVariableDeclaration BasicType int VariableDeclarator zvec BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow BinaryOperation - MemberReference bsLiveShadow MemberReference zn BinaryOperation - BinaryOperation << Literal 1 MemberReference zn Literal 1 StatementExpression Assignment MemberReference bsLiveShadow MemberReference zn -= WhileStatement BinaryOperation > MemberReference zvec MemberReference ArraySelector MemberReference zn limit_zt BlockStatement StatementExpression MemberReference ++ zn WhileStatement BinaryOperation < MemberReference bsLiveShadow Literal 1 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator thech MethodInvocation inShadow read IfStatement BinaryOperation >= MemberReference thech Literal 0 BlockStatement StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += ContinueStatement BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" StatementExpression MemberReference -- bsLiveShadow StatementExpression Assignment MemberReference zvec BinaryOperation | BinaryOperation << MemberReference zvec Literal 1 BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow MemberReference bsLiveShadow Literal 1 = StatementExpression Assignment MemberReference nextSym MemberReference ArraySelector BinaryOperation - MemberReference zvec MemberReference ArraySelector MemberReference zn base_zt perm_zt = StatementExpression Assignment This MemberReference last MemberReference lastShadow = StatementExpression Assignment This MemberReference bsLive MemberReference bsLiveShadow = StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow =	1
MethodDeclaration Modifier public ReferenceType Object clone CloneNotSupportedException LocalVariableDeclaration ReferenceType ProjectComponent VariableDeclarator pc Cast ReferenceType ProjectComponent SuperMethodInvocation clone StatementExpression MethodInvocation pc MethodInvocation getLocation setLocation StatementExpression MethodInvocation pc MethodInvocation getProject setProject ReturnStatement MemberReference pc	1
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator depends Literal "" LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation context getProject LocalVariableDeclaration ReferenceType Target VariableDeclarator target ClassCreator ReferenceType Target StatementExpression MethodInvocation target MemberReference project setProject StatementExpression MethodInvocation target ClassCreator ReferenceType Location MethodInvocation context getLocator setLocation StatementExpression MethodInvocation context MemberReference target addTarget ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attrUri MethodInvocation attrs MemberReference i getURI IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference attrUri Literal null MethodInvocation ! attrUri Literal "" equals MethodInvocation ! attrUri MemberReference uri equals BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attrs MemberReference i getLocalName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement MethodInvocation key Literal "name" equals BlockStatement StatementExpression Assignment MemberReference name MemberReference value = IfStatement Literal MethodInvocation MemberReference name equals "" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "name attribute must " Literal "not be empty" IfStatement MethodInvocation key Literal "depends" equals BlockStatement StatementExpression Assignment MemberReference depends MemberReference value = IfStatement MethodInvocation key Literal "if" equals BlockStatement StatementExpression MethodInvocation target MemberReference value IfStatement MethodInvocation key Literal "unless" equals BlockStatement StatementExpression MethodInvocation target MemberReference value IfStatement MethodInvocation key Literal "id" equals BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation ! value Literal "" equals BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference value MemberReference target getProject IfStatement MethodInvocation key Literal "description" equals BlockStatement StatementExpression MethodInvocation target MemberReference value setDescription BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected attribute \"" MemberReference key Literal "\"" MethodInvocation context getLocator IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + Literal "target element appears without " Literal "a name attribute" MethodInvocation context getLocator IfStatement BinaryOperation != MethodInvocation context MethodInvocation MemberReference name get getCurrentTargets Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Duplicate target '" MemberReference name Literal "'" MethodInvocation target getLocation LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator projectTargets MethodInvocation project getTargets LocalVariableDeclaration BasicType boolean VariableDeclarator usedTarget Literal false IfStatement MethodInvocation projectTargets MemberReference name containsKey BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal "Already defined in main or a previous import, " Literal " MemberReference name MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation target MemberReference name setName StatementExpression MethodInvocation context MethodInvocation MemberReference name MemberReference target put getCurrentTargets StatementExpression MethodInvocation project MemberReference name MemberReference target addOrReplaceTarget StatementExpression Assignment MemberReference usedTarget Literal true = IfStatement BinaryOperation > MethodInvocation depends length Literal 0 BlockStatement StatementExpression MethodInvocation target MemberReference depends setDepends IfStatement BinaryOperation && BinaryOperation && MethodInvocation context isIgnoringProjectTag BinaryOperation != MethodInvocation context getCurrentProjectName Literal null BinaryOperation != MethodInvocation context MethodInvocation length getCurrentProjectName Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newName BinaryOperation + BinaryOperation + MethodInvocation context getCurrentProjectName Literal "." MemberReference name LocalVariableDeclaration ReferenceType Target VariableDeclarator newTarget TernaryExpression MemberReference usedTarget ClassCreator ReferenceType Target MemberReference target MemberReference target StatementExpression MethodInvocation newTarget MemberReference newName setName StatementExpression MethodInvocation context MethodInvocation MemberReference newName MemberReference newTarget put getCurrentTargets StatementExpression MethodInvocation project MemberReference newName MemberReference newTarget addOrReplaceTarget	1
MethodDeclaration Modifier public BasicType boolean isSymbolicLink ReturnStatement MethodInvocation ftpFile isSymbolicLink	0
MethodDeclaration Modifier public ReferenceType String getTask ReturnStatement MemberReference task	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "foo" expectPropertyUnset	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" executeTarget StatementExpression MethodInvocation Literal "original" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier protected BasicType boolean needToRebuild FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType File jarFile IfStatement MethodInvocation jarFile exists BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator lastBuild MethodInvocation jarFile lastModified LocalVariableDeclaration ReferenceType Iterator VariableDeclarator fileIter MethodInvocation ejbFiles MethodInvocation iterator values WhileStatement MethodInvocation fileIter hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator currentFile Cast ReferenceType File MethodInvocation fileIter next IfStatement BinaryOperation < MemberReference lastBuild MethodInvocation currentFile lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Build needed because " MethodInvocation currentFile getPath Literal " is out of date" MemberReference Project MSG_VERBOSE log ReturnStatement Literal true ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier static protected BasicType boolean matchPath FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive ReturnStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference str MemberReference isCaseSensitive matchPath	0
MethodDeclaration Modifier private static BasicType boolean doesModernCompilerExist TryStatement StatementExpression MethodInvocation Class MemberReference forName ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException cnfe TryStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl ClassReference MethodInvocation getClassLoader ReferenceType IfStatement BinaryOperation != MemberReference cl Literal null BlockStatement StatementExpression MethodInvocation cl MemberReference loadClass ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException ReturnStatement Literal false	0
MethodDeclaration Modifier public test10 StatementExpression MethodInvocation Literal "test10" executeTarget	0
MethodDeclaration ReferenceType String getError IfStatement BinaryOperation == MemberReference error Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter StatementExpression MethodInvocation error ClassCreator ReferenceType PrintWriter MemberReference sw printStackTrace ReturnStatement MethodInvocation sw toString	0
MethodDeclaration * EXPERIMENTAL */ Modifier public ReferenceType Vector getImportStack ReturnStatement MemberReference importStack	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation assertGoodFile	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment This MemberReference to MemberReference to =	0
MethodDeclaration Modifier public setDepend FormalParameter BasicType boolean depend StatementExpression Assignment This MemberReference depend MemberReference depend =	0
MethodDeclaration Modifier public setKeep FormalParameter BasicType boolean keep StatementExpression Assignment This MemberReference keep MemberReference keep =	0
MethodDeclaration Modifier protected initAll IfStatement MemberReference initAllDone BlockStatement ReturnStatement StatementExpression Assignment MemberReference initAllDone Literal true =	0
MethodDeclaration Modifier public setReplace FormalParameter BasicType boolean replace StatementExpression Assignment This MemberReference replace MemberReference replace =	0
MethodDeclaration Modifier public ReferenceType getSourcespath ReturnStatement MemberReference sourcesPath	0
MethodDeclaration * @see */ Modifier public taskFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation BinaryOperation + Literal "<<< TASK FINISHED -- " MethodInvocation event getTask MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation flush	1
MethodDeclaration Modifier public ReferenceType ClassFile getNextClassFile LocalVariableDeclaration ReferenceType ClassFile VariableDeclarator nextElement Literal null TryStatement WhileStatement BinaryOperation == MemberReference nextElement Literal null BlockStatement IfStatement MethodInvocation currentEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator element Cast ReferenceType File MethodInvocation currentEnum nextElement IfStatement MethodInvocation element isDirectory BlockStatement StatementExpression MethodInvocation enumStack MemberReference currentEnum push LocalVariableDeclaration ReferenceType Vector VariableDeclarator files MethodInvocation MemberReference element getDirectoryEntries StatementExpression Assignment MemberReference currentEnum MethodInvocation files elements = BlockStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator inFileStream ClassCreator ReferenceType FileInputStream MemberReference element IfStatement MethodInvocation element MethodInvocation Literal ".class" endsWith getName BlockStatement LocalVariableDeclaration ReferenceType ClassFile VariableDeclarator javaClass ClassCreator ReferenceType ClassFile StatementExpression MethodInvocation javaClass MemberReference inFileStream read StatementExpression Assignment MemberReference nextElement MemberReference javaClass = BlockStatement IfStatement MethodInvocation enumStack empty BlockStatement BreakStatement BlockStatement StatementExpression Assignment MemberReference currentEnum Cast ReferenceType Enumeration MethodInvocation enumStack pop = CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference nextElement Literal null = ReturnStatement MemberReference nextElement	1
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String message IfStatement BinaryOperation != This MemberReference message Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only one message can be sent in an " Literal "email" StatementExpression Assignment This MemberReference message ClassCreator ReferenceType Message MemberReference message = StatementExpression This MemberReference message MethodInvocation MethodInvocation getProject setProject	0
MethodDeclaration Modifier protected assertJavaFileCreated FormalParameter ReferenceType String filename Exception LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation MemberReference filename getOutputFile StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file " MemberReference filename Literal " not found" MethodInvocation file exists assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file " MemberReference filename Literal " is empty" BinaryOperation > MethodInvocation file length Literal 0 assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "foo" MethodInvocation Jar Literal "foo" ArrayCreator ReferenceType String ArrayInitializer Literal "foo" assertEquals StatementExpression MethodInvocation Literal "lib/foo" MethodInvocation Jar Literal "foo" ArrayCreator ReferenceType String ArrayInitializer Literal "lib/foo" assertEquals StatementExpression MethodInvocation Literal "foo" MethodInvocation Jar BinaryOperation + BinaryOperation + Literal "bar" MemberReference File separatorChar Literal "foo" ArrayCreator ReferenceType String ArrayInitializer Literal "foo" assertEquals StatementExpression MethodInvocation Literal "lib/foo" MethodInvocation Jar BinaryOperation + BinaryOperation + Literal "bar" MemberReference File separatorChar Literal "foo" ArrayCreator ReferenceType String ArrayInitializer Literal "lib/foo" assertEquals	0
MethodDeclaration Modifier private BasicType int run FormalParameter ReferenceType Commandline cmd TryStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN IfStatement BinaryOperation != MemberReference serverPath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator env MethodInvocation exe getEnvironment IfStatement BinaryOperation == MemberReference env Literal null BlockStatement StatementExpression Assignment MemberReference env ArrayCreator ReferenceType String Literal 0 = LocalVariableDeclaration ReferenceType String VariableDeclarator newEnv ArrayCreator ReferenceType String BinaryOperation + MemberReference env length Literal 1 StatementExpression MethodInvocation System MemberReference env Literal 0 MemberReference newEnv Literal 0 MemberReference env length arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference env length newEnv BinaryOperation + Literal MemberReference serverPath = StatementExpression MethodInvocation exe MemberReference newEnv setEnvironment StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation exe MethodInvocation MethodInvocation getBaseDir getProject setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation cmd getCommandline setCommandline StatementExpression MethodInvocation exe Literal false setVMLauncher ReturnStatement MethodInvocation exe execute CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	0
MethodDeclaration Modifier public testMissingFileBail StatementExpression MethodInvocation Literal Literal "not-there doesn't exist" expectBuildException StatementExpression MethodInvocation MethodInvocation MethodInvocation getMessage MethodInvocation Literal "Warning: Could not find file " startsWith getBuildException assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String dbSchema StatementExpression Assignment This MemberReference dbSchema MemberReference dbSchema =	0
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator jarFile ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference tempJar StatementExpression MethodInvocation MethodInvocation jarFile exists assertTrue	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument missing" expectBuildException	0
MethodDeclaration Modifier public setTargetDirectory FormalParameter Modifier final ReferenceType File targetDirectory StatementExpression Assignment MemberReference m_targetDirectory MemberReference targetDirectory =	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid StatementExpression MethodInvocation Literal false setChecked	0
MethodDeclaration Modifier public ReferenceType Method getAttributeMethod FormalParameter ReferenceType String attributeName BuildException LocalVariableDeclaration ReferenceType Object VariableDeclarator setter MethodInvocation attributeSetters MemberReference attributeName get IfStatement BinaryOperation == MemberReference setter Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedAttributeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MethodInvocation bean getName Literal " doesn't support the \"" MemberReference attributeName Literal "\" attribute." MemberReference attributeName ReturnStatement Cast ReferenceType AttributeSetter MemberReference setter	1
MethodDeclaration Modifier public addExtraField FormalParameter ReferenceType ZipExtraField ze IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator type MethodInvocation ze getHeaderId LocalVariableDeclaration BasicType boolean VariableDeclarator done Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator fieldsSize MethodInvocation size BinaryOperation && MemberReference ! done BinaryOperation < MemberReference i MemberReference fieldsSize MemberReference ++ i BlockStatement IfStatement Cast ReferenceType ZipExtraField MethodInvocation MemberReference i elementAt BlockStatement StatementExpression MethodInvocation MemberReference ze MemberReference i setElementAt StatementExpression Assignment MemberReference done Literal true = IfStatement MemberReference ! done BlockStatement StatementExpression MethodInvocation MemberReference ze addElement StatementExpression MethodInvocation setExtra	0
MethodDeclaration Modifier protected setInternalDate FormalParameter Modifier final ReferenceType String date StatementExpression Assignment This MemberReference date MemberReference date =	0
MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore InvocationTargetException IllegalAccessException ReturnStatement MethodInvocation MethodInvocation MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer invoke getMethod	1
MethodDeclaration Modifier public testProhibitSymlinks IfStatement MemberReference ! supportsSymlinks BlockStatement ReturnStatement IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal "symlink-setup" executeTarget getProject LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/" setIncludes StatementExpression MethodInvocation ds Literal false setFollowSymlinks StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration delete FormalParameter ReferenceType java ReferenceType io ReferenceType File local IfStatement BinaryOperation && MethodInvocation local isDirectory MethodInvocation isRecursive BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation local list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference contents length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator file ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference local MemberReference ArraySelector MemberReference i contents StatementExpression MethodInvocation MemberReference file delete StatementExpression MethodInvocation local delete StatementExpression MethodInvocation BinaryOperation + Literal "Deleted uncontrolled item " MethodInvocation local getAbsolutePath log	1
MethodDeclaration Modifier public validate LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation e nextElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BaseSelector BlockStatement StatementExpression Cast ReferenceType BaseSelector MemberReference o	0
MethodDeclaration Modifier final protected ReferenceType String getCcmCommand LocalVariableDeclaration ReferenceType String VariableDeclarator toReturn MemberReference ccmDir IfStatement BinaryOperation && MethodInvocation ! toReturn Literal "" equals MethodInvocation ! toReturn Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference toReturn Literal "/" += StatementExpression Assignment MemberReference toReturn MemberReference += ReturnStatement MemberReference toReturn	0
MethodDeclaration Modifier public ReferenceType File getUribase ReturnStatement MemberReference uriroot	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType CrLf crlf LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation crlf getValue IfStatement BinaryOperation || MethodInvocation s Literal "cr" equals MethodInvocation s Literal "mac" equals BlockStatement StatementExpression Assignment MemberReference eolString Literal "\r" = IfStatement BinaryOperation || MethodInvocation s Literal "lf" equals MethodInvocation s Literal "unix" equals BlockStatement StatementExpression Assignment MemberReference eolString Literal "\n" = IfStatement BinaryOperation || MethodInvocation s Literal "crlf" equals MethodInvocation s Literal "dos" equals BlockStatement StatementExpression Assignment MemberReference eolString Literal "\r\n" =	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public ReferenceType String getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MethodInvocation getIncludedFilesCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i files Cast ReferenceType String MethodInvocation included MemberReference i elementAt = ReturnStatement MemberReference files	1
MethodDeclaration Modifier public setPattern FormalParameter ReferenceType String p StatementExpression Assignment MemberReference format ClassCreator ReferenceType MessageFormat MemberReference p =	0
MethodDeclaration Modifier public setTask FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference task MemberReference v =	0
MethodDeclaration Modifier public ReferenceType String getSkelClassSuffix ReturnStatement MemberReference WL_RMI_SKEL_SUFFIX	1
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement Literal false	0
MethodDeclaration Modifier public synchronized setMode FormalParameter ReferenceType m StatementExpression Assignment This MemberReference mode MethodInvocation m getValue =	0
MethodDeclaration Modifier protected ReferenceType XMLReader LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator factory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation factory Literal true setValidating StatementExpression MethodInvocation factory Literal true setNamespaceAware LocalVariableDeclaration ReferenceType XMLReader VariableDeclarator reader Literal null TryStatement LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser MethodInvocation factory newSAXParser StatementExpression Assignment MemberReference reader MethodInvocation saxParser getXMLReader = CatchClause CatchClauseParameter ParserConfigurationException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_PARSER_CREATION_FAILURE MemberReference e CatchClause CatchClauseParameter SAXException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_PARSER_CREATION_FAILURE MemberReference e ReturnStatement MemberReference reader	1
MethodDeclaration Modifier public setExtraFields FormalParameter ReferenceType ZipExtraField fields StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fields length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i fields addElement StatementExpression MethodInvocation setExtra	1
MethodDeclaration Modifier private addLastChar FormalParameter BasicType char ch ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference lastChars length Literal 2 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i lastChars MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 lastChars = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference lastChars length Literal 1 lastChars MemberReference ch =	1
MethodDeclaration Modifier private init BuildException IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference runner MethodInvocation helper =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType DescriptorHandler getDescriptorHandler FormalParameter ReferenceType File srcDir LocalVariableDeclaration ReferenceType DescriptorHandler VariableDeclarator h ClassCreator ReferenceType DescriptorHandler MethodInvocation getTask MemberReference srcDir StatementExpression MethodInvocation MemberReference h registerKnownDTDs ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MemberReference MethodInvocation iterator getConfig MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType EjbJar ReferenceType VariableDeclarator Cast ReferenceType EjbJar ReferenceType MethodInvocation i next StatementExpression MethodInvocation h MethodInvocation getPublicId MethodInvocation getLocation registerDTD ReturnStatement MemberReference h	0
MethodDeclaration Modifier public copyUserProperties FormalParameter ReferenceType Project other LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation userProperties keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e nextElement IfStatement MethodInvocation inheritedProperties MemberReference arg containsKey BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation userProperties MemberReference arg get StatementExpression MethodInvocation other MethodInvocation arg toString MethodInvocation value toString setUserProperty	0
MethodDeclaration Modifier public testEntityNoCatalog StatementExpression MethodInvocation Literal "src/etc/testcases/types/xmlcatalog.xml" configureProject StatementExpression MethodInvocation Literal "testentitynocatalog" Literal "val1" Literal "A stitch in time saves nine" expectPropertySet	0
MethodDeclaration Modifier public StatementExpression MethodInvocation FILE_UTILS	0
MethodDeclaration Modifier public uncheckout FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal "-rm" MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType CmdResult VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res getStdErr	0
MethodDeclaration Modifier public testSeconds StatementExpression MethodInvocation Literal "seconds" executeTarget LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation	1
MethodDeclaration Modifier private ReferenceType BuildException exactlyOne FormalParameter ReferenceType String attrs FormalParameter ReferenceType String alt LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator MethodInvocation Literal '[' append MethodInvocation MemberReference ArraySelector Literal 0 attrs append ReferenceType StringBuffer Literal "Exactly one of " ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference attrs length MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference ArraySelector MemberReference i attrs append Literal '|' append StatementExpression MethodInvocation buf Literal ']' append IfStatement BinaryOperation != MemberReference alt Literal null BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference alt append Literal " or " append ReturnStatement ClassCreator ReferenceType BuildException MethodInvocation buf MethodInvocation toString Literal " is required." append	1
MethodDeclaration Modifier public BasicType boolean isUpToDate FormalParameter BasicType long sourceTime FormalParameter BasicType long destTime FormalParameter BasicType long granularity IfStatement BinaryOperation == MemberReference destTime Literal - 1 BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation >= MemberReference destTime BinaryOperation + MemberReference sourceTime MemberReference granularity	0
MethodDeclaration Modifier public ReferenceType createLink LocalVariableDeclaration ReferenceType VariableDeclarator la ClassCreator ReferenceType StatementExpression MethodInvocation links MemberReference la addElement ReturnStatement MemberReference la	0
MethodDeclaration Modifier public addTask FormalParameter ReferenceType Task nestedTask IfStatement BinaryOperation != This MemberReference nestedTask Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one element allowed" IfStatement BinaryOperation instanceof MemberReference nestedTask ReferenceType UnknownElement BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "addTask called with a task that is not an unknown element" StatementExpression Assignment This MemberReference nestedTask Cast ReferenceType UnknownElement MemberReference nestedTask =	1
MethodDeclaration Modifier public addText FormalParameter ReferenceType String s StatementExpression MethodInvocation MemberReference fragment MemberReference s addText	0
MethodDeclaration Modifier public addFileSet FormalParameter ReferenceType FileSet fileset StatementExpression MethodInvocation filesets MemberReference fileset add	0
MethodDeclaration Modifier public setPreloadFileInformation FormalParameter BasicType boolean v StatementExpression Assignment This MemberReference preloadFileInformation MemberReference v =	0
MethodDeclaration Modifier public setTimeout FormalParameter ReferenceType Integer i StatementExpression Assignment This MemberReference MemberReference i =	0
MethodDeclaration * Encoding to use for input, defaults to the * encoding. * a list of possible values * * * * @param encoding The new Encoding */ Modifier public final setEncoding FormalParameter Modifier final ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setClasspathref getClassPathDelegate	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement Literal null	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation destroyTempFiles	0
MethodDeclaration Modifier private testCompleteDirectoryMove FormalParameter ReferenceType String target IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "E" resolveFile MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "E/1" resolveFile MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal "A/1" resolveFile MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public testsortdefault StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType Properties VariableDeclarator beforeUpdate MethodInvocation StatementExpression MethodInvocation MemberReference FNAME MethodInvocation beforeUpdate MemberReference FNAME_KEY getProperty assertEquals StatementExpression MethodInvocation MemberReference LNAME MethodInvocation beforeUpdate MemberReference LNAME_KEY getProperty assertEquals StatementExpression MethodInvocation MemberReference MethodInvocation beforeUpdate MemberReference EMAIL_KEY getProperty assertEquals StatementExpression MethodInvocation Literal null MethodInvocation beforeUpdate MemberReference getProperty assertEquals StatementExpression MethodInvocation Literal null MethodInvocation beforeUpdate MemberReference getProperty assertEquals StatementExpression MethodInvocation Literal null MethodInvocation beforeUpdate MemberReference getProperty assertEquals StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Properties VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference NEW_FNAME MethodInvocation MemberReference FNAME_KEY getProperty assertEquals StatementExpression MethodInvocation MemberReference NEW_LNAME MethodInvocation MemberReference LNAME_KEY getProperty assertEquals StatementExpression MethodInvocation MemberReference NEW_EMAIL MethodInvocation MemberReference EMAIL_KEY getProperty assertEquals StatementExpression MethodInvocation MemberReference NEW_PHONE MethodInvocation MemberReference getProperty assertEquals StatementExpression MethodInvocation MemberReference NEW_AGE MethodInvocation MemberReference getProperty assertEquals StatementExpression MethodInvocation MemberReference NEW_DATE MethodInvocation MemberReference getProperty assertEquals	0
MethodDeclaration Modifier public setHaltonerror FormalParameter BasicType boolean value StatementExpression Assignment MemberReference haltOnError MemberReference value =	0
MethodDeclaration Modifier protected BasicType boolean isUsingRevisionLabel ReturnStatement BinaryOperation && BinaryOperation != Literal null This MemberReference This MemberReference MethodInvocation isRevisionLabel	0
MethodDeclaration Modifier private buildWeblogicJar FormalParameter ReferenceType File sourceJar FormalParameter ReferenceType File destJar FormalParameter ReferenceType String publicId LocalVariableDeclaration ReferenceType Java VariableDeclarator javaTask Literal null IfStatement MemberReference BlockStatement TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference sourceJar MemberReference destJar copyFile IfStatement MemberReference ! keepgenerated BlockStatement StatementExpression MethodInvocation sourceJar delete ReturnStatement CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write EJB jar" MemberReference e LocalVariableDeclaration ReferenceType String VariableDeclarator ejbcClassName MemberReference TryStatement StatementExpression Assignment MemberReference javaTask ClassCreator ReferenceType Java MethodInvocation getTask = StatementExpression MethodInvocation javaTask Literal "ejbc" setTaskName StatementExpression MethodInvocation javaTask MethodInvocation MemberReference setLine createJvmarg IfStatement MethodInvocation ! sysprops isEmpty BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator en MethodInvocation sysprops elements MethodInvocation en hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator entry Cast ReferenceType Environment ReferenceType Variable MethodInvocation en nextElement StatementExpression MethodInvocation javaTask MemberReference entry IfStatement BinaryOperation != MethodInvocation getJvmDebugLevel Literal null BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation BinaryOperation + Literal " -Dweblogic.StdoutSeverityLevel=" MemberReference setLine createJvmarg IfStatement BinaryOperation == MemberReference ejbcClassName Literal null BlockStatement IfStatement MethodInvocation PUBLICID_EJB11 MemberReference publicId equals BlockStatement StatementExpression Assignment MemberReference ejbcClassName MemberReference COMPILER_EJB11 = IfStatement MethodInvocation PUBLICID_EJB20 MemberReference publicId equals BlockStatement StatementExpression Assignment MemberReference ejbcClassName MemberReference COMPILER_EJB20 = BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unrecognized publicId " MemberReference publicId Literal " - using EJB 1.1 compiler" MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference ejbcClassName MemberReference COMPILER_EJB11 = StatementExpression MethodInvocation javaTask MemberReference ejbcClassName setClassname StatementExpression MethodInvocation javaTask MethodInvocation MemberReference setLine createArg IfStatement MemberReference keepgenerated BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation Literal "-keepgenerated" setValue createArg IfStatement BinaryOperation == MemberReference compiler Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator buildCompiler MethodInvocation MethodInvocation getProject MethodInvocation Literal "build.compiler" getProperty getTask IfStatement BinaryOperation && BinaryOperation != MemberReference buildCompiler Literal null MethodInvocation buildCompiler Literal "jikes" equals BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation Literal "-compiler" setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation Literal "jikes" setValue createArg BlockStatement IfStatement MethodInvocation ! compiler MemberReference DEFAULT_COMPILER equals BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation Literal "-compiler" setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation MemberReference compiler setLine createArg LocalVariableDeclaration ReferenceType VariableDeclarator combinedClasspath MethodInvocation getCombinedClasspath IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference combinedClasspath Literal null BinaryOperation > MethodInvocation combinedClasspath MethodInvocation trim MethodInvocation length toString Literal 0 BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation Literal "-classpath" setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation MemberReference combinedClasspath setPath createArg StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation sourceJar getPath setValue createArg IfStatement BinaryOperation == MemberReference outputDir Literal null BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation destJar getPath setValue createArg BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation outputDir getPath setValue createArg LocalVariableDeclaration ReferenceType VariableDeclarator classpath MemberReference IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath MethodInvocation getCombinedClasspath = StatementExpression MethodInvocation javaTask Literal true setFork IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation javaTask MemberReference classpath setClasspath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Calling " MemberReference ejbcClassName Literal " for " MethodInvocation sourceJar toString MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MethodInvocation javaTask executeJava Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Ejbc reported an error" CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Exception while calling " MemberReference ejbcClassName Literal ". Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator input Literal "comment with a / inside" LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation P4Change MemberReference input backslash StatementExpression MethodInvocation Literal "comment with a \\/ inside" MemberReference output assertEquals	0
MethodDeclaration Modifier public Exception IfStatement BinaryOperation && MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_2 isJavaVersion MethodInvocation Os Literal "dos" isFamily BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation BinaryOperation * MemberReference TIME_OUT Literal 2 getCommandline StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis StatementExpression MethodInvocation ej MemberReference cp fork LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation - MethodInvocation System currentTimeMillis MemberReference now StatementExpression MethodInvocation Literal "process should have been killed" MethodInvocation ej killedProcess assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal time of " MemberReference Literal " ms is less than timeout value of " MemberReference Literal " ms" BinaryOperation >= MemberReference MemberReference assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal time of " MemberReference Literal " ms is greater than run value of " BinaryOperation * MemberReference TIME_OUT Literal 2 Literal " ms" BinaryOperation < MemberReference BinaryOperation * MemberReference TIME_OUT Literal 2 assertTrue	0
MethodDeclaration Modifier private getCommentFileCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENTFILE setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier private ReferenceType Resource getResource IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef IfStatement BinaryOperation == MemberReference resource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "no resource specified" ReturnStatement MemberReference resource	0
MethodDeclaration Modifier public setMode FormalParameter BasicType int mode StatementExpression Assignment This MemberReference mode MemberReference mode =	0
MethodDeclaration Modifier public ReferenceType String getPattern ReturnStatement This MemberReference pattern	0
MethodDeclaration Modifier public FormalParameter BasicType boolean redoall StatementExpression Assignment This MemberReference redoall MemberReference redoall =	0
MethodDeclaration Modifier public test8UsingZipFilesetSrc StatementExpression MethodInvocation Literal test8	0
MethodDeclaration Modifier public ReferenceType String getViewName ReturnStatement MemberReference viewName	0
MethodDeclaration Modifier public setVersion FormalParameter BasicType int version StatementExpression Assignment This MemberReference version MemberReference version =	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference spec Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No url specified in http condition" StatementExpression MethodInvocation BinaryOperation + Literal "Checking for " MemberReference spec MemberReference Project MSG_VERBOSE log TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassCreator ReferenceType URL MemberReference spec TryStatement LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator conn MethodInvocation url openConnection IfStatement BinaryOperation instanceof MemberReference conn ReferenceType HttpURLConnection BlockStatement LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator http Cast ReferenceType HttpURLConnection MemberReference conn LocalVariableDeclaration BasicType int VariableDeclarator code MethodInvocation http getResponseCode StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Result code for " MemberReference spec Literal " was " MemberReference code MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && BinaryOperation > MemberReference code Literal 0 BinaryOperation < MemberReference code MemberReference BlockStatement ReturnStatement Literal true ReturnStatement Literal false CatchClause CatchClauseParameter java.io.IOException e ReturnStatement Literal false CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Badly formed URL: " MemberReference spec MemberReference e ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference name	0
MethodDeclaration Modifier private spinThreads BuildException LocalVariableDeclaration Modifier final BasicType int VariableDeclarator numTasks MethodInvocation nestedTasks size LocalVariableDeclaration ReferenceType TaskRunnable VariableDeclarator runnables ArrayCreator ReferenceType TaskRunnable MemberReference numTasks StatementExpression Assignment MemberReference stillRunning Literal true = StatementExpression Assignment MemberReference timedOut Literal false = LocalVariableDeclaration BasicType int VariableDeclarator threadNumber Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation nestedTasks elements MethodInvocation e hasMoreElements MemberReference ++ threadNumber BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator nestedTask Cast ReferenceType Task MethodInvocation e nextElement StatementExpression Assignment MemberReference ArraySelector MemberReference threadNumber runnables ClassCreator ReferenceType TaskRunnable MemberReference nestedTask = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator maxRunning TernaryExpression BinaryOperation < MemberReference numTasks MemberReference numThreads MemberReference numTasks MemberReference numThreads LocalVariableDeclaration ReferenceType TaskRunnable VariableDeclarator running ArrayCreator ReferenceType TaskRunnable MemberReference maxRunning StatementExpression Assignment MemberReference threadNumber Literal 0 = LocalVariableDeclaration ReferenceType ThreadGroup VariableDeclarator group ClassCreator ReferenceType ThreadGroup Literal "parallel" LocalVariableDeclaration ReferenceType TaskRunnable VariableDeclarator daemons Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation daemonTasks.tasks size Literal 0 BlockStatement StatementExpression Assignment MemberReference daemons ArrayCreator ReferenceType TaskRunnable MethodInvocation daemonTasks.tasks size = SynchronizedStatement MemberReference semaphore SynchronizedStatement MemberReference semaphore IfStatement BinaryOperation != MemberReference daemons Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference daemons length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i daemons ClassCreator ReferenceType TaskRunnable Cast ReferenceType Task MethodInvocation daemonTasks.tasks MemberReference i get = LocalVariableDeclaration ReferenceType Thread VariableDeclarator daemonThread ClassCreator ReferenceType Thread MemberReference group MemberReference ArraySelector MemberReference i daemons StatementExpression MethodInvocation daemonThread Literal true setDaemon StatementExpression MethodInvocation daemonThread start ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference maxRunning MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i running MemberReference ArraySelector MemberReference ++ threadNumber runnables = LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread ClassCreator ReferenceType Thread MemberReference group MemberReference ArraySelector MemberReference i running StatementExpression MethodInvocation thread start IfStatement BinaryOperation != MemberReference timeout Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Thread VariableDeclarator timeoutThread ClassCreator ReferenceType Thread MethodDeclaration Modifier public synchronized run TryStatement StatementExpression MethodInvocation MemberReference timeout wait SynchronizedStatement MemberReference semaphore StatementExpression Assignment MemberReference stillRunning Literal false = StatementExpression Assignment MemberReference timedOut Literal true = StatementExpression MethodInvocation semaphore notifyAll CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation timeoutThread start WhileStatement outer BinaryOperation && BinaryOperation < MemberReference threadNumber MemberReference numTasks MemberReference stillRunning BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference maxRunning MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference i running Literal null MemberReference ArraySelector MemberReference i MethodInvocation isFinished running BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i running MemberReference ArraySelector MemberReference ++ threadNumber runnables = LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread ClassCreator ReferenceType Thread MemberReference group MemberReference ArraySelector MemberReference i running StatementExpression MethodInvocation thread start ContinueStatement outer TryStatement StatementExpression MethodInvocation semaphore wait CatchClause CatchClauseParameter InterruptedException ie WhileStatement outer2 MemberReference stillRunning BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference maxRunning MemberReference ++ i BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector MemberReference i running Literal null MemberReference ! ArraySelector MemberReference i MethodInvocation isFinished running BlockStatement TryStatement StatementExpression MethodInvocation semaphore wait CatchClause CatchClauseParameter InterruptedException ie ContinueStatement outer2 StatementExpression Assignment MemberReference stillRunning Literal false = IfStatement MemberReference timedOut BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Parallel execution timed out" StatementExpression Assignment MemberReference exceptionMessage ClassCreator ReferenceType StringBuffer = StatementExpression Assignment MemberReference numExceptions Literal 0 = StatementExpression Assignment MemberReference firstException Literal null = StatementExpression Assignment MemberReference firstLocation MemberReference Location UNKNOWN_LOCATION = StatementExpression MethodInvocation MemberReference daemons processExceptions StatementExpression MethodInvocation MemberReference runnables processExceptions IfStatement BinaryOperation == MemberReference numExceptions Literal 1 BlockStatement IfStatement BinaryOperation instanceof MemberReference firstException ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference firstException BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference firstException IfStatement BinaryOperation > MemberReference numExceptions Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exceptionMessage toString MemberReference firstLocation	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType Class defineClassFromData FormalParameter ReferenceType File container FormalParameter BasicType byte classData FormalParameter ReferenceType String classname IOException StatementExpression MethodInvocation MemberReference container MemberReference classname definePackage ReturnStatement MethodInvocation MemberReference classname MemberReference classData Literal 0 MemberReference classData length ClassReference MethodInvocation getProtectionDomain ReferenceType Project defineClass	1
MethodDeclaration Modifier public synchronized BasicType int indexOf FormalParameter ReferenceType Object o FormalParameter BasicType int pos ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference pos BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference i get MemberReference o BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath getBaseDir setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_CHECKOUT setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement BinaryOperation && MethodInvocation ! getNotco MethodInvocation lsCheckout BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Already checked out in this view: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject ReturnStatement IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public testSimple StatementExpression MethodInvocation Literal "simple" Literal expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal "test" Literal "7" setUserProperty getProject StatementExpression MethodInvocation Literal "test-property-override-inheritall-start" Literal "The value of test is 7" expectLogContaining	0
MethodDeclaration Modifier public ReferenceType URL getBase ReturnStatement MemberReference base	0
MethodDeclaration Modifier protected createProcessOutputPump FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os StatementExpression Assignment MemberReference MethodInvocation MemberReference is MemberReference os createPump =	0
MethodDeclaration Modifier public visitField FormalParameter ReferenceType Field field StatementExpression MethodInvocation MethodInvocation field getSignature	0
MethodDeclaration Modifier private testLogoExtraction FormalParameter ReferenceType String target java.io.IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project Literal "../asf-logo.gif" resolveFile MethodInvocation project Literal resolveFile contentEquals assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal test8	0
MethodDeclaration Modifier public ReferenceType PatternSet StatementExpression Assignment MemberReference Literal true = ReturnStatement MethodInvocation defaultSet	0
MethodDeclaration Modifier private ReferenceType Vector vectorizeEmailAddresses FormalParameter ReferenceType String listString LocalVariableDeclaration ReferenceType Vector VariableDeclarator emailList ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference listString Literal "," WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement StatementExpression MethodInvocation emailList ClassCreator ReferenceType MethodInvocation tokens nextToken addElement ReturnStatement MemberReference emailList	1
MethodDeclaration Modifier protected BasicType boolean isExcluded FormalParameter ReferenceType String name StatementExpression MethodInvocation ensureNonPatternSetsReady IfStatement TernaryExpression MethodInvocation isCaseSensitive MethodInvocation excludeNonPatterns MemberReference name contains MethodInvocation excludeNonPatterns MethodInvocation name toUpperCase contains BlockStatement ReturnStatement Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference excludePatterns length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i excludePatterns MemberReference name MethodInvocation isCaseSensitive matchPath BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference MemberReference s =	0
MethodDeclaration Modifier public setTimeToWait FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation project Literal "timeToWait" MethodInvocation Long MemberReference toString setProperty	0
MethodDeclaration processUncontrolledItems BuildException IfStatement This MethodInvocation isActive BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e This MethodInvocation keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator local Cast ReferenceType java ReferenceType io ReferenceType File MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Item VariableDeclarator remoteItem Cast ReferenceType Item This MethodInvocation MemberReference local get StatementExpression MethodInvocation remoteItem update IfStatement MethodInvocation local isDirectory BlockStatement LocalVariableDeclaration ReferenceType Folder VariableDeclarator folder Cast ReferenceType Folder MemberReference remoteItem StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Added uncontrolled folder " MethodInvocation folder getFolderHierarchy Literal " from " MethodInvocation local getAbsoluteFile log IfStatement MethodInvocation isRecursive BlockStatement LocalVariableDeclaration ReferenceType UnmatchedFileMap VariableDeclarator submap ClassCreator MethodInvocation MemberReference local MemberReference folder init ReferenceType CheckinMap StatementExpression MethodInvocation submap processUncontrolledItems BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File VariableDeclarator remoteFile Cast ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File MemberReference remoteItem StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Added uncontrolled file " MethodInvocation MemberReference remoteFile getFullRepositoryPath Literal " from " MethodInvocation local getAbsoluteFile log	0
MethodDeclaration Modifier public FormalParameter ReferenceType fe LocalVariableDeclaration ReferenceType Formatter VariableDeclarator formatter MethodInvocation fe createFormatter StatementExpression MethodInvocation formatters MemberReference formatter add	0
MethodDeclaration Modifier public handleOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation callee MemberReference output handleOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleOutput	1
MethodDeclaration Modifier public FormalParameter ReferenceType IfStatement BinaryOperation == This MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference MemberReference = BlockStatement StatementExpression This MemberReference MethodInvocation MemberReference append	0
MethodDeclaration Modifier private process FormalParameter ReferenceType File baseDir FormalParameter ReferenceType String xmlFile FormalParameter ReferenceType File destDir FormalParameter ReferenceType Resource stylesheet BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator outF Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator inF Literal null TryStatement LocalVariableDeclaration BasicType long VariableDeclarator styleSheetLastModified MethodInvocation stylesheet getLastModified StatementExpression Assignment MemberReference inF ClassCreator ReferenceType File MemberReference baseDir MemberReference xmlFile = IfStatement MethodInvocation inF isDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference inF Literal " it is a directory." MemberReference Project MSG_VERBOSE log ReturnStatement LocalVariableDeclaration ReferenceType FileNameMapper VariableDeclarator mapper Literal null IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement StatementExpression Assignment MemberReference mapper MethodInvocation mapperElement getImplementation = BlockStatement StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType StyleMapper = LocalVariableDeclaration ReferenceType String VariableDeclarator outFileName MethodInvocation mapper MemberReference xmlFile mapFileName IfStatement BinaryOperation || BinaryOperation == MemberReference outFileName Literal null BinaryOperation == MemberReference outFileName length Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference inFile Literal " it cannot get mapped to output." MemberReference Project MSG_VERBOSE log ReturnStatement IfStatement BinaryOperation || BinaryOperation == MemberReference outFileName Literal null BinaryOperation > MemberReference outFileName length Literal 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference inFile Literal " its mapping is ambiguos." MemberReference Project MSG_VERBOSE log ReturnStatement StatementExpression Assignment MemberReference outF ClassCreator ReferenceType File MemberReference destDir MemberReference ArraySelector Literal 0 outFileName = IfStatement BinaryOperation || BinaryOperation || MemberReference force BinaryOperation > MethodInvocation inF lastModified MethodInvocation outF lastModified BinaryOperation > MemberReference styleSheetLastModified MethodInvocation outF lastModified BlockStatement StatementExpression MethodInvocation MemberReference outF ensureDirectoryFor StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Processing " MemberReference inF Literal " to " MemberReference outF log StatementExpression MethodInvocation MemberReference stylesheet configureLiaison StatementExpression MethodInvocation MemberReference liaison MemberReference inF setLiaisonDynamicFileParameters StatementExpression MethodInvocation liaison MemberReference inF MemberReference outF transform CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Failed to process " MemberReference inFile MemberReference Project MSG_INFO log IfStatement BinaryOperation != MemberReference outF Literal null BlockStatement StatementExpression MethodInvocation outF delete ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier public testValidate LocalVariableDeclaration ReferenceType SizeSelector VariableDeclarator s Cast ReferenceType SizeSelector MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "SizeSelector did not check for required fields" fail CatchClause CatchClauseParameter BuildException be1 StatementExpression MethodInvocation BinaryOperation + Literal "The value attribute is and must " Literal "be positive" MethodInvocation be1 getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal - 10 setValue TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation BinaryOperation + Literal "SizeSelector did not check for value being in the " Literal "allowable range" fail CatchClause CatchClauseParameter BuildException be2 StatementExpression MethodInvocation BinaryOperation + Literal "The value attribute is and must " Literal "be positive" MethodInvocation be2 getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param Literal "garbage setName StatementExpression MethodInvocation param Literal "garbage out" setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayInitializer MemberReference param StatementExpression MethodInvocation s MemberReference params setParameters TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "SizeSelector did not check for valid parameter element" fail CatchClause CatchClauseParameter BuildException be3 StatementExpression MethodInvocation Literal "Invalid parameter garbage MethodInvocation be3 getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression Assignment MemberReference param ClassCreator ReferenceType Parameter = StatementExpression MethodInvocation param Literal "value" setName StatementExpression MethodInvocation param Literal "garbage out" setValue StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params setParameters TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "SizeSelector accepted value as parameter" fail CatchClause CatchClauseParameter BuildException be4 StatementExpression MethodInvocation Literal "Invalid size setting garbage out" MethodInvocation be4 getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param1 ClassCreator ReferenceType Parameter LocalVariableDeclaration ReferenceType Parameter VariableDeclarator ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param1 Literal "value" setName StatementExpression MethodInvocation param1 Literal setValue StatementExpression MethodInvocation Literal "units" setName StatementExpression MethodInvocation Literal "garbage out" setValue StatementExpression Assignment MemberReference params ArrayCreator ReferenceType Parameter Literal 2 = StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param1 = StatementExpression Assignment MemberReference ArraySelector Literal 1 params MemberReference = TryStatement StatementExpression MethodInvocation s MemberReference params setParameters StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 filenames MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "SizeSelector accepted units as parameter" fail CatchClause CatchClauseParameter BuildException be5 StatementExpression MethodInvocation Literal "garbage out is not a legal value for this attribute" MethodInvocation be5 getMessage assertEquals	0
MethodDeclaration Modifier public BasicType boolean isVerbose ReturnStatement MemberReference verbose	0
MethodDeclaration Modifier public static clearCache StatementExpression MethodInvocation HELPERS clear	0
MethodDeclaration Modifier public BasicType boolean isUpToDate FormalParameter BasicType long sourceTime FormalParameter BasicType long destTime ReturnStatement MethodInvocation MemberReference sourceTime MemberReference destTime MethodInvocation getFileTimestampGranularity isUpToDate	0
MethodDeclaration Modifier public BasicType boolean getReplace ReturnStatement MemberReference mReplace	0
MethodDeclaration Modifier synchronized protected handle FormalParameter ReferenceType Resource r LocalVariableDeclaration BasicType long VariableDeclarator size MethodInvocation r getSize IfStatement BinaryOperation == MemberReference size MemberReference Resource UNKNOWN_SIZE BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal unknown for " MethodInvocation r toString MemberReference Project MSG_WARN log BlockStatement StatementExpression Assignment MemberReference accum MemberReference size +=	0
MethodDeclaration Modifier public addExpandProperties FormalParameter Modifier final ReferenceType ExpandProperties expandProperties StatementExpression MethodInvocation filterReaders MemberReference expandProperties addElement	0
MethodDeclaration Modifier public ReferenceType String getCurrentCompilerArgs StatementExpression MethodInvocation ReturnStatement MethodInvocation facade	0
MethodDeclaration Modifier public FormalParameter ReferenceType IsFileSelected test StatementExpression MethodInvocation conditions MemberReference test addElement	0
MethodDeclaration Modifier private encodeBegin IOException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "begin " MemberReference Literal " " MemberReference name Literal "\n"	0
MethodDeclaration Modifier public synchronized ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement ClassCreator ReferenceType ByteArrayInputStream MethodInvocation MethodInvocation getBytes getContent	1
MethodDeclaration Modifier public tearDown IfStatement BinaryOperation && BinaryOperation != MemberReference logFile Literal null MethodInvocation logFile exists BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "logFile" MethodInvocation logFile getAbsolutePath setProperty getProject StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference traceTreeWalker MemberReference enable =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference failOnError	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation > MethodInvocation event getPriority MemberReference logLevel BlockStatement ReturnStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation event getPriority MemberReference Project MSG_INFO BinaryOperation == MethodInvocation event getPriority MemberReference Project MSG_WARN BinaryOperation == MethodInvocation event getPriority MemberReference Project MSG_ERR BlockStatement StatementExpression MethodInvocation MethodInvocation event getMessage append StatementExpression MethodInvocation MethodInvocation event getMessage append	0
MethodDeclaration Modifier private synchronized static failFast FormalParameter ReferenceType FailFast f LocalVariableDeclaration ReferenceType Set VariableDeclarator s Cast ReferenceType Set MethodInvocation MAP MemberReference f parent get IfStatement MethodInvocation ! s MemberReference f contains BlockStatement ThrowStatement ClassCreator ReferenceType ConcurrentModificationException	0
MethodDeclaration Modifier public ReferenceType Long getDuration ReturnStatement This MemberReference duration	0
MethodDeclaration Modifier public setOs FormalParameter ReferenceType String os StatementExpression Assignment This MemberReference os MemberReference os =	0
MethodDeclaration Modifier protected validate BuildException StatementExpression SuperMethodInvocation validate IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "DestFile was not specified"	0
MethodDeclaration Modifier public setBaseDir FormalParameter ReferenceType File b StatementExpression MethodInvocation StatementExpression Assignment MemberReference baseDir MemberReference b =	0
MethodDeclaration Modifier private sendDirectoryToRemote FormalParameter ReferenceType Directory directory FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out IOException LocalVariableDeclaration ReferenceType String VariableDeclarator command Literal 0 " StatementExpression Assignment MemberReference command MethodInvocation directory MethodInvocation getName getDirectory += StatementExpression Assignment MemberReference command Literal "\n" += StatementExpression MethodInvocation out MethodInvocation command getBytes write StatementExpression MethodInvocation out flush StatementExpression MethodInvocation MemberReference in waitForAck StatementExpression MethodInvocation MemberReference directory MemberReference in MemberReference out sendDirectory StatementExpression MethodInvocation out Literal MethodInvocation getBytes write StatementExpression MethodInvocation MemberReference in waitForAck	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType createParam LocalVariableDeclaration ReferenceType VariableDeclarator param ClassCreator ReferenceType StatementExpression MethodInvocation params MemberReference param addElement ReturnStatement MemberReference param	0
MethodDeclaration Modifier public FormalParameter BasicType int stop StatementExpression Assignment This MemberReference stop MemberReference stop =	0
MethodDeclaration Modifier public static ReferenceType URL getLocationURLs FormalParameter ReferenceType File location MalformedURLException ReturnStatement MethodInvocation MemberReference location ArrayCreator ReferenceType String ArrayInitializer Literal ".jar" getLocationURLs	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation This release	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "Class$subclass" Literal assertExpandsTo StatementExpression MethodInvocation Literal "$$$-" Literal "$-" assertExpandsTo StatementExpression MethodInvocation Literal "a$b" Literal "ab" assertExpandsTo StatementExpression MethodInvocation Literal "$}}" Literal assertExpandsTo	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType Class c FormalParameter BasicType boolean IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation c getName ReturnStatement MethodInvocation name BinaryOperation + MethodInvocation name Literal '.' lastIndexOf Literal 1 substring ReturnStatement MethodInvocation c toString	0
MethodDeclaration Modifier public setIgnoreProjectTag FormalParameter BasicType boolean flag StatementExpression Assignment This MemberReference ignoreProjectTag MemberReference flag =	0
MethodDeclaration Modifier public FormalParameter ReferenceType u StatementExpression MethodInvocation conditions MemberReference u addElement	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation directory hashCode	0
MethodDeclaration Modifier public testPreserveLastModified StatementExpression MethodInvocation Literal "testPreserveLastModified" executeTarget	0
MethodDeclaration Modifier public testPath StatementExpression MethodInvocation test3 LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference tempFile LocalVariableDeclaration Modifier final BasicType long VariableDeclarator origSize MethodInvocation file length StatementExpression MethodInvocation Literal "testPath" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference tempFile2 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator newSize MethodInvocation file2 length StatementExpression MethodInvocation MemberReference origSize MemberReference newSize assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test9" executeTarget StatementExpression MethodInvocation Literal - 1 MethodInvocation MethodInvocation Literal "Skipped grammar file." indexOf getFullLog assertEquals StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal - 1 MethodInvocation MethodInvocation Literal "Skipped grammar file." indexOf getFullLog assertEquals	0
MethodDeclaration Modifier public ReferenceType getExtdirs ReturnStatement MemberReference	0
MethodDeclaration Modifier final static protected ReferenceType String trimSeparator FormalParameter ReferenceType String s ReturnStatement TernaryExpression MethodInvocation s Literal "/" endsWith MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 1 substring MemberReference s	0
MethodDeclaration Modifier public setProvider FormalParameter ReferenceType String provider StatementExpression Assignment This MemberReference provider MemberReference provider =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String FormalParameter ReferenceType String groupName StatementExpression This MethodInvocation MemberReference setUserName StatementExpression This MethodInvocation MemberReference groupName	0
MethodDeclaration Modifier public synchronized addText FormalParameter ReferenceType String data IfStatement BinaryOperation == MethodInvocation data length Literal 0 BlockStatement ReturnStatement StatementExpression Assignment MemberReference characters TernaryExpression BinaryOperation == MemberReference characters Literal null ClassCreator ReferenceType StringBuffer MemberReference data MethodInvocation characters MemberReference data append =	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the executable attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation MethodInvocation MethodInvocation getProject createClasspath MethodInvocation createPath getCommandline	0
MethodDeclaration Modifier private static ReferenceType SAXParser newSAXParser FormalParameter ReferenceType SAXParserFactory factory BuildException TryStatement ReturnStatement MethodInvocation factory newSAXParser CatchClause CatchClauseParameter ParserConfigurationException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Cannot create parser for the given " Literal "configuration: " MethodInvocation e getMessage MemberReference e CatchClause CatchClauseParameter SAXException e ThrowStatement MethodInvocation MemberReference e	1
MethodDeclaration Modifier public test12 StatementExpression MethodInvocation Literal "test12" executeTarget	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public setFailMessage FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration * override of * @return true */ Modifier protected BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType StripLineComments VariableDeclarator newFilter ClassCreator ReferenceType StripLineComments MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation getComments StatementExpression MethodInvocation newFilter Literal true setInitialized ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public ReferenceType String getClassname IfStatement MemberReference ! BlockStatement ReturnStatement MethodInvocation javaCommand getExecutable ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File file StatementExpression Assignment This MemberReference targetFile MemberReference file =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public final setFile FormalParameter ReferenceType String filename StatementExpression SuperMethodInvocation MemberReference filename setInternalFilename	0
MethodDeclaration Modifier protected init FormalParameter ReferenceType ImageIcon img LocalVariableDeclaration ReferenceType VariableDeclarator pan Cast ReferenceType MethodInvocation getContentPane LocalVariableDeclaration ReferenceType JLabel VariableDeclarator piccy IfStatement BinaryOperation == MemberReference img Literal null BlockStatement StatementExpression Assignment MemberReference piccy ClassCreator ReferenceType JLabel = BlockStatement StatementExpression Assignment MemberReference piccy ClassCreator ReferenceType JLabel MemberReference img = StatementExpression MethodInvocation piccy MethodInvocation BorderFactory MemberReference Color black Literal 1 createLineBorder setBorder StatementExpression Assignment MemberReference text ClassCreator ReferenceType JLabel Literal MemberReference JLabel CENTER = StatementExpression MethodInvocation text ClassCreator ReferenceType Font Literal MemberReference Font BOLD Literal 12 setFont StatementExpression MethodInvocation text MethodInvocation BorderFactory createEtchedBorder setBorder StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference MemberReference = StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference javax.swing.border.BevelBorder setBorder LocalVariableDeclaration ReferenceType VariableDeclarator pan2 ClassCreator ReferenceType StatementExpression MethodInvocation pan2 ClassCreator ReferenceType setLayout StatementExpression MethodInvocation pan2 MemberReference text MemberReference add StatementExpression MethodInvocation pan2 MemberReference MemberReference SOUTH add StatementExpression MethodInvocation pan ClassCreator ReferenceType setLayout StatementExpression MethodInvocation pan MemberReference piccy MemberReference CENTER add StatementExpression MethodInvocation pan MemberReference pan2 MemberReference SOUTH add StatementExpression MethodInvocation pan MethodInvocation BorderFactory MemberReference javax.swing.border.BevelBorder RAISED setBorder StatementExpression MethodInvocation pack LocalVariableDeclaration ReferenceType Dimension VariableDeclarator size MethodInvocation getSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator scr MethodInvocation Toolkit MethodInvocation getScreenSize getDefaultToolkit LocalVariableDeclaration BasicType int VariableDeclarator x BinaryOperation / BinaryOperation - MemberReference scr width MemberReference size width Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation / BinaryOperation - MemberReference scr height MemberReference size height Literal 2 StatementExpression MethodInvocation MemberReference x MemberReference y MemberReference size width MemberReference size height setBounds	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement IfStatement MethodInvocation name MethodInvocation MemberReference ArraySelector MemberReference i extensions endsWith toLowerCase BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType String getNoConfigParameter ReturnStatement TernaryExpression MemberReference noconfig Literal Literal null	0
MethodDeclaration Modifier public ReferenceType String getUserName IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarFileSet MethodInvocation getCheckedRef ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter BasicType int t FormalParameter BasicType int f LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation getIndex IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal value not set." ReturnStatement MemberReference ArraySelector MemberReference index MethodInvocation MemberReference t MemberReference f eval	0
MethodDeclaration Modifier public setUrl FormalParameter ReferenceType String url StatementExpression Assignment This MemberReference url MemberReference url =	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable currentWrapper IfStatement BinaryOperation < MethodInvocation wStack size Literal 1 BlockStatement ReturnStatement Literal null ReturnStatement Cast ReferenceType RuntimeConfigurable MethodInvocation wStack BinaryOperation - MethodInvocation wStack size Literal 1 elementAt	1
MethodDeclaration Modifier private ReferenceType String getEntryName FormalParameter ReferenceType File file FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation file getName IfStatement MethodInvocation ! name Literal ".class" endsWith BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator input Literal null TryStatement StatementExpression Assignment MemberReference input ClassCreator ReferenceType FileInputStream MemberReference file = LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation ClassNameReader MemberReference input getClassName IfStatement BinaryOperation != MemberReference className Literal null BlockStatement ReturnStatement BinaryOperation + MethodInvocation className Literal '.' Literal '/' replace Literal ".class" CatchClause CatchClauseParameter IOException ioe IfStatement BinaryOperation != MemberReference input Literal null BlockStatement TryStatement StatementExpression MethodInvocation input close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "From " MethodInvocation file getPath Literal " and prefix " MemberReference prefix Literal ", creating entry " MemberReference prefix MemberReference name println ReturnStatement BinaryOperation + MemberReference prefix MemberReference name	1
MethodDeclaration Modifier public testPropcacheInvalid LocalVariableDeclaration ReferenceType Cache VariableDeclarator cache ClassCreator ReferenceType PropertiesfileCache IfStatement MethodInvocation cache isValid StatementExpression MethodInvocation Literal "PropertyfilesCache does not check its configuration." fail	1
MethodDeclaration Modifier public ReferenceType String getVersion ReturnStatement MemberReference version	0
MethodDeclaration Modifier private init FormalParameter ReferenceType Project p IfStatement MemberReference ! alreadyInit BlockStatement StatementExpression Assignment This MemberReference regexp MethodInvocation FACTORY MemberReference p newRegexp = StatementExpression Assignment MemberReference alreadyInit Literal true =	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other IfStatement BinaryOperation == This MemberReference other BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference other Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation other getClass MethodInvocation getClass BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation MethodInvocation MethodInvocation other toString equals toString	1
MethodDeclaration Modifier public ReferenceType RegexpMatcher getImplementation ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using symantec java compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator exec MethodInvocation MethodInvocation getExecutable getJavac StatementExpression MethodInvocation cmd TernaryExpression BinaryOperation == MemberReference exec Literal null Literal "sj" MemberReference exec setExecutable LocalVariableDeclaration BasicType int VariableDeclarator firstFileName BinaryOperation - MethodInvocation cmd size MemberReference compileList length ReturnStatement BinaryOperation == MethodInvocation MethodInvocation cmd getCommandline MemberReference firstFileName executeExternalCompile Literal 0	1
MethodDeclaration Modifier public ReferenceType String getValue FormalParameter ReferenceType File file StatementExpression MethodInvocation initChecksum LocalVariableDeclaration ReferenceType String VariableDeclarator rval Literal null TryStatement IfStatement MethodInvocation file canRead BlockStatement StatementExpression MethodInvocation checksum reset LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference file LocalVariableDeclaration ReferenceType CheckedInputStream VariableDeclarator check ClassCreator ReferenceType CheckedInputStream MemberReference fis MemberReference checksum LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator in ClassCreator ReferenceType BufferedInputStream MemberReference check WhileStatement BinaryOperation != MethodInvocation in read Literal - 1 BlockStatement StatementExpression Assignment MemberReference rval MethodInvocation Long MethodInvocation check MethodInvocation getValue getChecksum toString = StatementExpression MethodInvocation in close CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference rval Literal null = ReturnStatement MemberReference rval	1
MethodDeclaration Modifier public ReferenceType Object createDynamicElement FormalParameter ReferenceType String name BuildException ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getEnvironment ReturnStatement TernaryExpression BinaryOperation || BinaryOperation == MemberReference env Literal null MemberReference newEnvironment MemberReference env MethodInvocation patchEnvironment	0
MethodDeclaration Modifier protected BasicType boolean onConnected FormalParameter ReferenceType URLConnection connection BuildException ReturnStatement Literal true	0
MethodDeclaration Modifier public static ReferenceType String getTestCaseName FormalParameter ReferenceType Test t IfStatement BinaryOperation && BinaryOperation != MemberReference t Literal null MethodInvocation t MethodInvocation getName MethodInvocation Literal "junit.framework.JUnit4TestCaseFacade" equals getClass BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation t toString IfStatement MethodInvocation name Literal ")" endsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator paren MethodInvocation name Literal '(' lastIndexOf ReturnStatement MethodInvocation name Literal 0 MemberReference paren substring BlockStatement ReturnStatement MemberReference name IfStatement BinaryOperation && BinaryOperation instanceof MemberReference t ReferenceType TestCase BinaryOperation != MemberReference testCaseName Literal null BlockStatement TryStatement ReturnStatement Cast ReferenceType String MethodInvocation testCaseName MemberReference t ArrayCreator ReferenceType Object Literal 0 invoke CatchClause CatchClauseParameter Throwable e BlockStatement TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator getNameMethod Literal null TryStatement StatementExpression Assignment MemberReference getNameMethod MethodInvocation t MethodInvocation Literal "getName" ArrayCreator ReferenceType Class Literal 0 getMethod getClass = CatchClause CatchClauseParameter NoSuchMethodException e StatementExpression Assignment MemberReference getNameMethod MethodInvocation t MethodInvocation Literal "name" ArrayCreator ReferenceType Class Literal 0 getMethod getClass = IfStatement BinaryOperation && BinaryOperation != MemberReference getNameMethod Literal null BinaryOperation == MethodInvocation getNameMethod getReturnType ClassReference ReferenceType String BlockStatement ReturnStatement Cast ReferenceType String MethodInvocation getNameMethod MemberReference t ArrayCreator ReferenceType Object Literal 0 invoke CatchClause CatchClauseParameter Throwable e ReturnStatement Literal "unknown"	1
MethodDeclaration Modifier public setUp IfStatement MemberReference supportsSymlinks BlockStatement StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/optional/unix/symlink.xml" configureProject StatementExpression MethodInvocation Literal "setup" executeTarget	0
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier protected fillInSharedParameters FormalParameter ReferenceType NetCommand command StatementExpression MethodInvocation command MethodInvocation setFailOnError StatementExpression MethodInvocation command Literal "/nologo" addArgument StatementExpression MethodInvocation command MethodInvocation getAdditionalModulesParameter addArgument StatementExpression MethodInvocation command MethodInvocation getDebugParameter addArgument StatementExpression MethodInvocation command MethodInvocation getDefinitionsParameter addArgument StatementExpression MethodInvocation command MethodInvocation getExtraOptionsParameters addArguments StatementExpression MethodInvocation command MethodInvocation getMainClassParameter addArgument StatementExpression MethodInvocation command MethodInvocation getOptimizeParameter addArgument StatementExpression MethodInvocation command MethodInvocation getDestFileParameter addArgument StatementExpression MethodInvocation command MethodInvocation getReferencesParameter addArgument StatementExpression MethodInvocation command MethodInvocation getTargetTypeParameter addArgument StatementExpression MethodInvocation command MethodInvocation getUtf8OutputParameter addArgument StatementExpression MethodInvocation command MethodInvocation getWin32IconParameter addArgument StatementExpression MethodInvocation command MethodInvocation getWin32ResParameter addArgument	0
MethodDeclaration Modifier public BasicType int getGroupId ReturnStatement This MemberReference groupId	0
MethodDeclaration Modifier public BasicType boolean getKeepEngine ReturnStatement MemberReference keepEngine	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal 1000 MemberReference NULL Literal true Literal true doMultipleCalls	0
MethodDeclaration Modifier public final setUsername FormalParameter ReferenceType String username StatementExpression Assignment MemberReference sosUsername MemberReference username =	0
MethodDeclaration Modifier final protected IfStatement BinaryOperation != Literal null This MemberReference server BlockStatement StatementExpression This MemberReference server MethodInvocation disconnect StatementExpression MethodInvocation BinaryOperation + Literal disconnect from StarTeam Server " MemberReference servername MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier private stdCharacters FormalParameter ReferenceType String value IfStatement MethodInvocation currentLoc Literal "\\ejb-jar\\display-name" equals BlockStatement StatementExpression Assignment MemberReference displayName MemberReference value = ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator base BinaryOperation + Literal "\\ejb-jar\\enterprise-beans\\" MemberReference ejbType IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\ejb-name" equals BlockStatement StatementExpression Assignment MemberReference currentEjb Cast ReferenceType EjbInfo MethodInvocation ejbs MemberReference value get = IfStatement BinaryOperation == MemberReference currentEjb Literal null BlockStatement StatementExpression Assignment MemberReference currentEjb ClassCreator ReferenceType EjbInfo MemberReference value = StatementExpression MethodInvocation ejbs MemberReference value MemberReference currentEjb put IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\home" equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\remote" equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\ejb-class" equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value setImplementation IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\prim-key-class" equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\session-type" equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value setBeantype IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal "\\persistence-type" equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value setCmp	1
MethodDeclaration Modifier public ReferenceType String getConfig ReturnStatement MemberReference config	0
MethodDeclaration Modifier public testTestFailedError Exception LocalVariableDeclaration ReferenceType Exception VariableDeclarator e ClassCreator ReferenceType Exception Literal "error" StatementExpression MethodInvocation e fillInStackTrace LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent ClassCreator ReferenceType Integer Literal 99 MemberReference TestRunEvent Literal "xxxx" MemberReference e StatementExpression MethodInvocation dispatcher MemberReference evt fireTestError StatementExpression MethodInvocation MemberReference evt MethodInvocation recorder.testError Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation MethodInvocation getInputStream getResource IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression Assignment MemberReference in MethodInvocation MemberReference in wrapStream = ReturnStatement MemberReference in	1
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType File out StatementExpression Assignment This MemberReference output MemberReference out = StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration Modifier public static BasicType boolean equals FormalParameter ReferenceType Vector v1 FormalParameter ReferenceType Vector v2 IfStatement BinaryOperation == MemberReference v1 MemberReference v2 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation || BinaryOperation == MemberReference v1 Literal null BinaryOperation == MemberReference v2 Literal null BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation v1 MemberReference v2 equals	1
MethodDeclaration Modifier public static ReferenceType Enumeration asEnumeration FormalParameter Modifier final ReferenceType Iterator iter ReturnStatement ClassCreator ReferenceType Enumeration MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MethodInvocation iter hasNext MethodDeclaration Modifier public ReferenceType Object nextElement ReturnStatement MethodInvocation iter next	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier protected setUp StatementExpression Assignment MemberReference ej ClassCreator ReferenceType ExecuteJava = StatementExpression MethodInvocation ej ClassCreator ReferenceType Long MemberReference TIME_OUT setTimeout StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "." setBasedir StatementExpression MethodInvocation project MemberReference MagicNames ANT_HOME MethodInvocation System MemberReference MagicNames ANT_HOME getProperty setProperty StatementExpression Assignment MemberReference cp ClassCreator ReferenceType MemberReference project MethodInvocation = StatementExpression MethodInvocation ej MemberReference cp setClasspath	1
MethodDeclaration Modifier protected visit FormalParameter ReferenceType Folder starteamFolder FormalParameter ReferenceType java ReferenceType io ReferenceType File targetFolder BuildException TryStatement IfStatement BinaryOperation != Literal null MethodInvocation getRootLocalFolder BlockStatement StatementExpression MethodInvocation starteamFolder MethodInvocation targetFolder getAbsolutePath setAlternatePathFragment IfStatement MethodInvocation ! targetFolder exists BlockStatement IfStatement This ! MethodInvocation isUsingRevisionLabel BlockStatement IfStatement This MemberReference BlockStatement IfStatement MethodInvocation targetFolder mkdirs BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating folder: " MemberReference targetFolder log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to create local folder " MemberReference targetFolder LocalVariableDeclaration ReferenceType Folder VariableDeclarator foldersList MethodInvocation starteamFolder getSubFolders LocalVariableDeclaration ReferenceType Item VariableDeclarator filesList MethodInvocation starteamFolder MethodInvocation MemberReference FILE getTypeNames getItems IfStatement This MethodInvocation isUsingRevisionLabel BlockStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator labelItems ClassCreator ReferenceType Hashtable MemberReference filesList length LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference filesList length LocalVariableDeclaration BasicType int VariableDeclarator ids ArrayCreator BasicType int MemberReference s ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference s MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ids MemberReference ArraySelector MemberReference i MethodInvocation getItemID filesList = StatementExpression MethodInvocation labelItems ClassCreator ReferenceType Integer MemberReference ArraySelector MemberReference i ids ClassCreator ReferenceType Integer MemberReference i put LocalVariableDeclaration BasicType int VariableDeclarator foundIds MethodInvocation MethodInvocation MemberReference ids getLabeledItemIDs getLabelInUse StatementExpression Assignment MemberReference s MemberReference foundIds length = LocalVariableDeclaration ReferenceType Item VariableDeclarator labeledFiles ArrayCreator ReferenceType Item MemberReference s ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference s MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Integer VariableDeclarator id ClassCreator ReferenceType Integer MemberReference ArraySelector MemberReference i foundIds StatementExpression Assignment MemberReference ArraySelector MemberReference i labeledFiles MemberReference ArraySelector Cast ReferenceType Integer MethodInvocation labelItems MemberReference id get filesList = StatementExpression Assignment MemberReference filesList MemberReference labeledFiles = LocalVariableDeclaration ReferenceType UnmatchedFileMap VariableDeclarator ufm ClassCreator MethodInvocation MethodInvocation targetFolder getAbsoluteFile MemberReference starteamFolder init ReferenceType CheckoutMap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference foldersList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Folder VariableDeclarator stFolder MemberReference ArraySelector MemberReference i foldersList LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator subfolder ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MethodInvocation stFolder getName StatementExpression MethodInvocation ufm MemberReference subfolder removeControlledItem IfStatement MethodInvocation isRecursive BlockStatement StatementExpression MethodInvocation MemberReference stFolder MemberReference subfolder visit ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filesList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File VariableDeclarator stFile Cast ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File MemberReference ArraySelector MemberReference i filesList StatementExpression MethodInvocation MemberReference stFile MemberReference targetFolder processFile StatementExpression MethodInvocation ufm ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MethodInvocation stFile getName removeControlledItem IfStatement This MemberReference deleteUncontrolled BlockStatement StatementExpression MethodInvocation ufm processUncontrolledItems CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation && BinaryOperation == MemberReference dateTime Literal null BinaryOperation < MemberReference millis Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "You must provide a datetime or the number of " Literal "milliseconds." setError IfStatement BinaryOperation && BinaryOperation < MemberReference millis Literal 0 BinaryOperation != MemberReference dateTime Literal null BlockStatement LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator df TernaryExpression BinaryOperation == MemberReference pattern Literal null MethodInvocation DateFormat MemberReference DateFormat SHORT MemberReference DateFormat SHORT MemberReference Locale US getDateTimeInstance ClassCreator ReferenceType SimpleDateFormat MemberReference pattern TryStatement StatementExpression MethodInvocation MethodInvocation df MethodInvocation getTime MemberReference dateTime parse setMillis IfStatement BinaryOperation < MemberReference millis Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Date of " MemberReference dateTime Literal " results in negative milliseconds value" Literal " to epoch (January 1, 1970, GMT)." setError CatchClause CatchClauseParameter ParseException pe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Date of " MemberReference dateTime Literal " Cannot be parsed correctly. It should be TernaryExpression BinaryOperation == MemberReference pattern Literal null Literal " MM/DD/YYYY HH:MM AM_PM" MemberReference pattern Literal " format." setError	1
MethodDeclaration Modifier public ReferenceType Object clone ReturnStatement ClassCreator ReferenceType ClassfileSet TernaryExpression MethodInvocation isReference Cast ReferenceType ClassfileSet MethodInvocation MethodInvocation getProject getRef This	1
MethodDeclaration Modifier public validate BuildException IfStatement BinaryOperation == MemberReference token Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + Literal "token is a mandatory attribute " Literal "of replacefilter." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement Literal MethodInvocation MemberReference token equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + Literal "The token attribute must not be an empty " Literal "string." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation != MemberReference property Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Either value or property " Literal "can be specified, but a replacefilter " Literal "element cannot have both." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation != MemberReference property Literal null BlockStatement IfStatement BinaryOperation == MemberReference propertyFile Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "The replacefilter's property attribute " Literal "can only be used with the replacetask's " Literal "propertyFile attribute." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation || BinaryOperation == MemberReference properties Literal null BinaryOperation == MethodInvocation properties MemberReference property getProperty Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + Literal "property \"" MemberReference property Literal "\" was not found in " MethodInvocation propertyFile getPath ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression Assignment MemberReference MethodInvocation =	1
MethodDeclaration Modifier private reinit StatementExpression MethodInvocation init	0
MethodDeclaration BasicType boolean FormalParameter ReferenceType String response FormalParameter BasicType int ok ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ok length MemberReference ++ i BlockStatement IfStatement MethodInvocation response BinaryOperation + Literal "" MemberReference ArraySelector MemberReference i ok startsWith BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public synchronized appendIncludes FormalParameter ReferenceType String includes StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference includes Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation defaultPatterns MethodInvocation MemberReference ArraySelector MemberReference i includes setName createInclude StatementExpression Assignment MemberReference ds Literal null =	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public clear StatementExpression Assignment MemberReference buffer ClassCreator ReferenceType StringBuffer =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String specificationVendor StatementExpression MethodInvocation verifyNotAReference StatementExpression Assignment This MemberReference specificationVendor MemberReference specificationVendor =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src StatementExpression Assignment This MemberReference resource MemberReference src =	0
MethodDeclaration Modifier protected finalize Exception StatementExpression MethodInvocation cancel StatementExpression MethodInvocation shutdown	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public cc FormalParameter ReferenceType String cc StatementExpression MethodInvocation ccList MemberReference cc add	0
MethodDeclaration Modifier public testGetExecutableNetware IfStatement MethodInvocation Os Literal "netware" isName BlockStatement StatementExpression MethodInvocation Literal "java" MethodInvocation JavaEnvUtils Literal "java" getJreExecutable assertEquals StatementExpression MethodInvocation Literal MethodInvocation JavaEnvUtils Literal getJdkExecutable assertEquals StatementExpression MethodInvocation Literal "foo" MethodInvocation JavaEnvUtils Literal "foo" getJreExecutable assertEquals StatementExpression MethodInvocation Literal "foo" MethodInvocation JavaEnvUtils Literal "foo" getJdkExecutable assertEquals	0
MethodDeclaration ReferenceType AssertionFailedError getError ReturnStatement MemberReference error	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference mCfile	0
MethodDeclaration Modifier public setOld FormalParameter BasicType boolean old StatementExpression Assignment This MemberReference old MemberReference old =	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "test1" Literal "from simple expectLog	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator fth ClassCreator ReferenceType Literal "foo" StatementExpression MethodInvocation Literal "foo" MethodInvocation fth getImplementation assertEquals StatementExpression MethodInvocation fth Literal "bar" StatementExpression MethodInvocation Literal "bar" MethodInvocation fth getImplementation assertEquals StatementExpression Assignment MemberReference fth ClassCreator ReferenceType Literal "foo" Literal "bar" = StatementExpression MethodInvocation Literal "bar" MethodInvocation fth getImplementation assertEquals StatementExpression Assignment MemberReference fth ClassCreator ReferenceType Literal "foo" Literal null = StatementExpression MethodInvocation Literal "foo" MethodInvocation fth getImplementation assertEquals StatementExpression Assignment MemberReference fth ClassCreator ReferenceType Literal "foo" = StatementExpression MethodInvocation fth Literal "bar" StatementExpression MethodInvocation fth Literal "baz" setImplementation StatementExpression MethodInvocation Literal "baz" MethodInvocation fth getImplementation assertEquals	0
MethodDeclaration Modifier public ReferenceType Document parseXML FormalParameter ReferenceType File file Exception LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator dbfactory MethodInvocation DocumentBuilderFactory newInstance LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator dbuilder MethodInvocation dbfactory newDocumentBuilder ReturnStatement MethodInvocation dbuilder MemberReference file parse	0
MethodDeclaration Modifier public ReferenceType getClasspath ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier private ReferenceType String getAltCompilerName FormalParameter ReferenceType String anImplementation IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation JAVAC16 MemberReference anImplementation equalsIgnoreCase MethodInvocation JAVAC15 MemberReference anImplementation equalsIgnoreCase MethodInvocation JAVAC14 MemberReference anImplementation equalsIgnoreCase MethodInvocation JAVAC13 MemberReference anImplementation equalsIgnoreCase BlockStatement ReturnStatement MemberReference MODERN IfStatement BinaryOperation || MethodInvocation JAVAC12 MemberReference anImplementation equalsIgnoreCase MethodInvocation JAVAC11 MemberReference anImplementation equalsIgnoreCase BlockStatement ReturnStatement MemberReference CLASSIC IfStatement MethodInvocation MODERN MemberReference anImplementation equalsIgnoreCase BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nextSelected MethodInvocation assumedJavaVersion IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation JAVAC16 MemberReference nextSelected equalsIgnoreCase MethodInvocation JAVAC15 MemberReference nextSelected equalsIgnoreCase MethodInvocation JAVAC14 MemberReference nextSelected equalsIgnoreCase MethodInvocation JAVAC13 MemberReference nextSelected equalsIgnoreCase BlockStatement ReturnStatement MemberReference nextSelected IfStatement MethodInvocation CLASSIC MemberReference anImplementation equals BlockStatement ReturnStatement MethodInvocation assumedJavaVersion IfStatement MethodInvocation MemberReference anImplementation equalsIgnoreCase BlockStatement ReturnStatement MethodInvocation assumedJavaVersion ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object createDynamicElement FormalParameter ReferenceType String name BuildException ThrowStatement ClassCreator ReferenceType BuildException Literal "Not implemented any more"	1
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal Literal Literal "Ki" Literal "KI" Literal Literal Literal "KIBI" Literal "M" Literal "m" Literal Literal Literal Literal "MI" Literal Literal Literal Literal "G" Literal "g" Literal "giga" Literal "GIGA" Literal Literal Literal "gi" Literal Literal "GIBI" Literal "T" Literal "t" Literal Literal Literal "Ti" Literal Literal "ti" Literal Literal	0
MethodDeclaration Modifier protected setInternalWritable FormalParameter Modifier final BasicType boolean writable StatementExpression Assignment This MemberReference writable MemberReference writable =	0
MethodDeclaration Modifier public static ReferenceType String extractUriFromComponentName FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation Literal ':' lastIndexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation Literal 0 MemberReference index substring	0
MethodDeclaration Modifier public setHasession FormalParameter ReferenceType String hasession StatementExpression MethodInvocation MethodInvocation hasession Literal "true" equals setHasession	1
MethodDeclaration Modifier public FormalParameter ReferenceType Class c IfStatement BinaryOperation != MemberReference clazz Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The class attribute has already been set." StatementExpression Assignment MemberReference clazz MemberReference c =	0
MethodDeclaration Modifier public onTestStarted FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation formatter MemberReference evt onTestStarted	0
MethodDeclaration Modifier public BasicType boolean isContainer ReturnStatement ClassReference MethodInvocation MemberReference bean isAssignableFrom ReferenceType TaskContainer	0
MethodDeclaration Modifier private setLiaisonDynamicFileParameters FormalParameter ReferenceType XSLTLiaison liaison FormalParameter ReferenceType File inFile Exception IfStatement BinaryOperation != MemberReference fileNameParameter Literal null BlockStatement StatementExpression MethodInvocation liaison MemberReference fileNameParameter MethodInvocation inFile getName addParam IfStatement BinaryOperation != MemberReference fileDirParameter Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation FileUtils MemberReference baseDir MemberReference inFile getRelativePath LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference fileName StatementExpression MethodInvocation liaison MemberReference fileDirParameter TernaryExpression BinaryOperation != MethodInvocation file getParent Literal null MethodInvocation file MethodInvocation Literal '\\' Literal '/' replace getParent Literal "." addParam	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference type	0
MethodDeclaration Modifier public BasicType boolean isNegated ReturnStatement MemberReference negate	0
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation process waitFor CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Literal "process interrupted in thread" fail	1
MethodDeclaration Modifier public ReferenceType PatternSet ReferenceType NameEntry StatementExpression Assignment MemberReference Literal true = ReturnStatement MethodInvocation defaultSet	0
MethodDeclaration Modifier public ReferenceType Object next ReturnStatement ClassCreator ReferenceType PropertyResource MethodInvocation getProject Cast ReferenceType String MethodInvocation e nextElement	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator algo ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference algo doTest	0
MethodDeclaration Modifier public ReferenceType String getTaskName ReturnStatement MemberReference elementName	1
MethodDeclaration Modifier protected ReferenceType String getLabel ReturnStatement MemberReference label	0
MethodDeclaration Modifier public print FormalParameter ReferenceType PrintStream ps IOException LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out TernaryExpression BinaryOperation != MemberReference charset Literal null ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference ps MemberReference charset ClassCreator ReferenceType PrintWriter MemberReference ps IfStatement BinaryOperation != MemberReference messageSource Literal null BlockStatement LocalVariableDeclaration ReferenceType FileReader VariableDeclarator freader ClassCreator ReferenceType FileReader MemberReference messageSource TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader MemberReference freader LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement StatementExpression MethodInvocation out MethodInvocation MethodInvocation MemberReference line replaceProperties getProject println StatementExpression MethodInvocation freader close BlockStatement StatementExpression MethodInvocation out MethodInvocation MethodInvocation MethodInvocation buffer Literal 0 substring replaceProperties getProject println StatementExpression MethodInvocation out flush	1
MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement MemberReference description	0
MethodDeclaration Modifier public setBccList FormalParameter ReferenceType Vector list StatementExpression Assignment This MemberReference bccList MemberReference list =	1
MethodDeclaration Modifier private static StatementExpression MethodInvocation MemberReference TestRunEvent RUN_STARTED ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent RUN_ENDED ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent ClassCreator ReferenceType TestStartedAction registerAction StatementExpression MethodInvocation MemberReference TestRunEvent ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent SUITE_STARTED ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent SUITE_ENDED ClassCreator ReferenceType registerAction StatementExpression MethodInvocation MemberReference TestRunEvent RUN_STOPPED ClassCreator ReferenceType RunStoppedAction registerAction	0
MethodDeclaration Modifier public BasicType int getUnixMode ReturnStatement Cast BasicType int BinaryOperation & BinaryOperation >> MethodInvocation getExternalAttributes Literal 16 Literal 0xFFFF	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String supportedOptions ReturnStatement MethodInvocation Collections emptySet	0
MethodDeclaration Modifier protected runType FormalParameter ReferenceType Server s FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType Project p FormalParameter ReferenceType View v FormalParameter ReferenceType Type t LocalVariableDeclaration ReferenceType Folder VariableDeclarator f MethodInvocation v getRootFolder IfStatement BinaryOperation != MethodInvocation getFolderName Literal null BlockStatement IfStatement BinaryOperation || MethodInvocation MethodInvocation Literal "\\" equals getFolderName MethodInvocation MethodInvocation Literal "/" equals getFolderName BlockStatement StatementExpression MethodInvocation Literal null setFolderName BlockStatement StatementExpression Assignment MemberReference f MethodInvocation StarTeamFinder MethodInvocation v getRootFolder MethodInvocation getFolderName findFolder = StatementExpression MethodInvocation BinaryOperation != Literal null MemberReference f BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "ERROR: " MethodInvocation getProjectName MemberReference delim MethodInvocation getViewName MemberReference delim MethodInvocation v getRootFolder MemberReference delim MethodInvocation getFolderName MemberReference delim Literal " does not exist." assertTrue IfStatement BinaryOperation && MethodInvocation getVerbose BinaryOperation != MethodInvocation getFolderName Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Found " MethodInvocation getProjectName MemberReference delim MethodInvocation getViewName MemberReference delim MethodInvocation getFolderName MemberReference delim Literal "\n" log LocalVariableDeclaration BasicType int VariableDeclarator nProperties Literal 2 LocalVariableDeclaration ReferenceType Property VariableDeclarator p1 MethodInvocation MemberReference t getPrimaryDescriptor LocalVariableDeclaration ReferenceType Property VariableDeclarator p2 MethodInvocation MemberReference t getSecondaryDescriptor IfStatement BinaryOperation != MemberReference p2 Literal null BlockStatement StatementExpression MemberReference ++ nProperties LocalVariableDeclaration ReferenceType String VariableDeclarator strNames ArrayCreator ReferenceType String MemberReference nProperties LocalVariableDeclaration BasicType int VariableDeclarator iProperty Literal 0 StatementExpression Assignment MemberReference ArraySelector MemberReference ++ iProperty strNames MethodInvocation s MemberReference OBJECT_ID = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ iProperty strNames MethodInvocation p1 getName = IfStatement BinaryOperation != MemberReference p2 Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ iProperty strNames MethodInvocation p2 getName = StatementExpression MethodInvocation f MethodInvocation t getName MemberReference strNames Literal - 1 populateNow StatementExpression MethodInvocation MemberReference s MemberReference p MemberReference v MemberReference t MemberReference f MethodInvocation MemberReference v MemberReference f calcTargetFolder runFolder StatementExpression MethodInvocation f MethodInvocation t getName Literal - 1 discardItems	1
MethodDeclaration Modifier private processExternalCatalogs IfStatement MemberReference ! externalCatalogsProcessed BlockStatement TryStatement StatementExpression MethodInvocation setXMLCatalog MemberReference resolverImpl ArrayCreator ReferenceType Object ArrayInitializer This invoke CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex LocalVariableDeclaration ReferenceType VariableDeclarator catPath MethodInvocation getCatalogPath IfStatement BinaryOperation != MemberReference catPath Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Using catalogpath '" MethodInvocation getCatalogPath Literal "'" MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType String VariableDeclarator catPathList MethodInvocation MethodInvocation list getCatalogPath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference catPathList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator catFile ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i catPathList StatementExpression MethodInvocation BinaryOperation + Literal "Parsing " MemberReference catFile MemberReference Project MSG_DEBUG log TryStatement StatementExpression MethodInvocation parseCatalog MemberReference resolverImpl ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation catFile getPath invoke CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression Assignment MemberReference externalCatalogsProcessed Literal true =	1
MethodDeclaration Modifier protected ReferenceType String getVsspath ReturnStatement MemberReference vssPath	0
MethodDeclaration Modifier public testUri StatementExpression MethodInvocation Literal "uri" Literal "Hello world" expectLog	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean v StatementExpression Assignment MemberReference verbose MemberReference v =	0
MethodDeclaration Modifier public ReferenceType Classname getRemote ReturnStatement MemberReference remote	0
MethodDeclaration Modifier public FormalParameter ReferenceType String token StatementExpression Assignment This MemberReference token MemberReference token =	0
MethodDeclaration Modifier public static ReferenceType Object newInstance FormalParameter ReferenceType String className FormalParameter ReferenceType ClassLoader userDefinedLoader FormalParameter ReferenceType Class expectedType TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation Class MemberReference className Literal true MemberReference userDefinedLoader forName LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation clazz newInstance IfStatement MethodInvocation ! expectedType MemberReference o isInstance BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class of unexpected Type: " MemberReference className Literal " expected :" MemberReference expectedType ReturnStatement MemberReference o CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Class not found: " MemberReference className MemberReference e CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not instantiate " MemberReference className Literal ". Specified class should have a no " Literal "argument constructor." MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not instantiate " MemberReference className Literal ". Specified class should have a " Literal "public constructor." MemberReference e CatchClause CatchClauseParameter LinkageError e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Class " MemberReference className Literal " could not be loaded because of an invalid dependency." MemberReference e	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "myaddconfigured" Literal is Value Setexecute: value is Value Set" expectLogContaining	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected output" BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " out\n" MethodInvocation Literal "redirector.out" getFileString assertEquals StatementExpression MethodInvocation Literal "unexpected error output" BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " err\n" MethodInvocation Literal "redirector.err" getFileString assertEquals	0
MethodDeclaration Modifier protected finalize Throwable StatementExpression MethodInvocation close StatementExpression SuperMethodInvocation finalize	1
MethodDeclaration Modifier public FormalParameter ReferenceType String args StatementExpression Assignment This MemberReference verifyArgs MemberReference args =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal "DEPRECATED - The copydir task is deprecated. Use copy instead." log IfStatement BinaryOperation == MemberReference srcDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "src attribute must be set!" MethodInvocation getLocation IfStatement MethodInvocation ! srcDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "srcdir " MethodInvocation srcDir toString Literal " does not exist!" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The dest attribute must be set." MethodInvocation getLocation IfStatement MethodInvocation srcDir MemberReference destDir equals BlockStatement StatementExpression MethodInvocation Literal "Warning: src == MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds SuperMethodInvocation MemberReference srcDir getDirectoryScanner TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression MethodInvocation MemberReference srcDir MemberReference destDir MemberReference files scanDir IfStatement BinaryOperation > MethodInvocation filecopyList size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MethodInvocation filecopyList size Literal " file" TernaryExpression BinaryOperation == MethodInvocation filecopyList size Literal 1 Literal "" Literal "s" Literal " to " MethodInvocation destDir getAbsolutePath log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filecopyList keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fromFile Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator toFile Cast ReferenceType String MethodInvocation filecopyList MemberReference fromFile get TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference fromFile MemberReference toFile MemberReference filtering MemberReference forceOverwrite copyFile getProject CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference fromFile Literal " to " MemberReference toFile Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation filecopyList clear	1
MethodDeclaration Modifier public addType FormalParameter ReferenceType TypeSelector selector StatementExpression MethodInvocation fileset MemberReference selector addType	1
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation MethodInvocation MemberReference fs add createSourceFiles	0
MethodDeclaration Modifier public synchronized setOutputProperty FormalParameter ReferenceType String outputProperty IfStatement BinaryOperation || BinaryOperation == MemberReference outputProperty Literal null MethodInvocation ! outputProperty This MemberReference outputProperty equals BlockStatement StatementExpression Assignment This MemberReference outputProperty MemberReference outputProperty = StatementExpression Assignment MemberReference baos Literal null =	0
MethodDeclaration Modifier public setStyle FormalParameter ReferenceType String xslFile StatementExpression Assignment This MemberReference xslFile MemberReference xslFile =	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation && BinaryOperation <= MemberReference Project MSG_INFO MemberReference msgOutputLevel MethodInvocation ! event MethodInvocation getName MethodInvocation Literal "" equals getTarget BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + MemberReference StringUtils LINE_SEP MethodInvocation event MethodInvocation getName getTarget Literal ":" StatementExpression MethodInvocation MemberReference msg MemberReference out MethodInvocation event getPriority printMessage StatementExpression MethodInvocation MemberReference msg log	1
MethodDeclaration Modifier public BasicType int executeJava BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation MethodInvocation getClassname getCommandLine IfStatement BinaryOperation && BinaryOperation == MemberReference classname Literal null BinaryOperation == MethodInvocation MethodInvocation getJar getCommandLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Classname must not be null." IfStatement BinaryOperation && MemberReference ! fork BinaryOperation != MethodInvocation MethodInvocation getJar getCommandLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Cannot execute a jar in non-forked mode." Literal " Please set fork='true'. " IfStatement BinaryOperation && MemberReference spawn MemberReference ! fork BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Cannot spawn a java process in non-forked mode." Literal " Please set fork='true'. " IfStatement BinaryOperation && BinaryOperation != MethodInvocation MethodInvocation getClasspath getCommandLine Literal null BinaryOperation != MethodInvocation MethodInvocation getJar getCommandLine Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "When using 'jar' attribute classpath-settings are ignored. " Literal "See the manual for more information." MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && MemberReference spawn MemberReference incompatibleWithSpawn BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "spawn does not attributes related to input, " Literal "output, error, result" MemberReference Project MSG_ERR log getProject StatementExpression MethodInvocation MethodInvocation Literal "spawn also does not MemberReference Project MSG_ERR log getProject StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "finally, spawn is not compatible " Literal "with a I/O <redirector>" MemberReference Project MSG_ERR log getProject ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "You have used an attribute " Literal "or element which is not compatible with spawn" IfStatement BinaryOperation && BinaryOperation != MethodInvocation MethodInvocation getAssertions getCommandLine Literal null MemberReference ! fork BlockStatement StatementExpression MethodInvocation Literal "Assertion statements are ignored in non-forked mode" log IfStatement MemberReference fork BlockStatement IfStatement BinaryOperation != MemberReference perm Literal null BlockStatement StatementExpression MethodInvocation Literal "Permissions can not be set this way in forked mode." MemberReference Project MSG_WARN log StatementExpression MethodInvocation MethodInvocation MethodInvocation describeCommand getCommandLine MemberReference Project MSG_VERBOSE log BlockStatement IfStatement BinaryOperation > MethodInvocation MethodInvocation getVmCommand MethodInvocation size getCommandLine Literal 1 BlockStatement StatementExpression MethodInvocation Literal "JVM args ignored when same JVM is used." MemberReference Project MSG_WARN log IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement StatementExpression MethodInvocation Literal directory ignored when same JVM is used." MemberReference Project MSG_WARN log IfStatement BinaryOperation || MemberReference newEnvironment BinaryOperation != Literal null MethodInvocation env getVariables BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Changes to environment variables are ignored when same " Literal "JVM is used." MemberReference Project MSG_WARN log IfStatement BinaryOperation != MethodInvocation MethodInvocation getBootclasspath getCommandLine Literal null BlockStatement StatementExpression MethodInvocation Literal "bootclasspath ignored when same JVM is used." MemberReference Project MSG_WARN log IfStatement BinaryOperation == MemberReference perm Literal null BlockStatement StatementExpression Assignment MemberReference perm ClassCreator ReferenceType Permissions Literal true = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "running " This MethodInvocation getCommandLine MethodInvocation getClassname Literal " with default permissions (exit forbidden)" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal "Running in same " MethodInvocation MethodInvocation describeJavaCommand getCommandLine MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation setupRedirector TryStatement IfStatement MemberReference fork BlockStatement IfStatement MemberReference ! spawn BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCommandline getCommandLine fork BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getCommandline getCommandLine spawn ReturnStatement Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation getCommandLine run ReturnStatement Literal 0 CatchClause CatchClauseParameter ExitException ex ReturnStatement MethodInvocation ex getStatus CatchClause CatchClauseParameter BuildException e IfStatement BinaryOperation && BinaryOperation == MethodInvocation e getLocation Literal null BinaryOperation != MethodInvocation getLocation Literal null BlockStatement StatementExpression MethodInvocation e MethodInvocation getLocation setLocation IfStatement MemberReference failOnError BlockStatement ThrowStatement MemberReference e BlockStatement StatementExpression MethodInvocation MemberReference e log ReturnStatement Literal 0 CatchClause CatchClauseParameter ThreadDeath t ThrowStatement MemberReference t CatchClause CatchClauseParameter Throwable t IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference t MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference t log ReturnStatement Literal 0	1
MethodDeclaration Modifier private ReferenceType File getRoot FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType File VariableDeclarator root MethodInvocation file getAbsoluteFile WhileStatement BinaryOperation != MethodInvocation root getParent Literal null BlockStatement StatementExpression Assignment MemberReference root MethodInvocation root getParentFile = ReturnStatement MemberReference root	0
MethodDeclaration Modifier public ReferenceType String getImplementation ReturnStatement MethodInvocation implementations MethodInvocation getValue getProperty	0
MethodDeclaration Modifier private static BasicType boolean filterLine FormalParameter ReferenceType String line ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference DEFAULT_TRACE_FILTERS length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation line MemberReference ArraySelector MemberReference i DEFAULT_TRACE_FILTERS indexOf Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public test1 IOException StatementExpression MethodInvocation Literal "test1" executeTarget	0
MethodDeclaration Modifier public setSrcdir FormalParameter ReferenceType File srcDir StatementExpression Assignment This MemberReference srcDir MemberReference srcDir =	0
MethodDeclaration Modifier public ReferenceType Vector getBuildListeners ReturnStatement Cast ReferenceType Vector MethodInvocation listeners clone	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc IfStatement BinaryOperation == MemberReference resources Literal null BlockStatement StatementExpression Assignment MemberReference resources ClassCreator ReferenceType = StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Object getProxy ReturnStatement MemberReference proxy	0
MethodDeclaration Modifier public ReferenceType PatternSet ReferenceType NameEntry createInclude StatementExpression Assignment MemberReference usedMatchingTask Literal true = ReturnStatement SuperMethodInvocation createInclude	1
MethodDeclaration Modifier public add FormalParameter ReferenceType FileSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector add	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath MemberReference classpath = BlockStatement StatementExpression MethodInvocation compileClasspath MemberReference classpath append	0
MethodDeclaration Modifier protected run FormalParameter ReferenceType String classname FormalParameter ReferenceType Vector args BuildException LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator cmdj ClassCreator ReferenceType CommandlineJava StatementExpression MethodInvocation cmdj MemberReference classname setClassname ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation args size MemberReference ++ i BlockStatement StatementExpression MethodInvocation cmdj MethodInvocation Cast ReferenceType String MethodInvocation args MemberReference i elementAt setValue createArgument StatementExpression MethodInvocation MemberReference cmdj run	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "out/out/one.txt" Literal "filename='one.xml'" assertFileContains StatementExpression MethodInvocation Literal "out/out/one.txt" Literal "filedir assertFileContains StatementExpression MethodInvocation Literal "out/out/dir/four.txt" Literal "filename='four.xml'" assertFileContains StatementExpression MethodInvocation Literal "out/out/dir/four.txt" Literal "filedir assertFileContains	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public ReferenceType String getAddress ReturnStatement MemberReference address	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName ReturnStatement MemberReference mergedFile	1
MethodDeclaration Modifier public testNoAdditionalWhiteSpaceForEmptyElement IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation DOMUtils newDocument LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal "root" createElement StatementExpression MethodInvocation DOMUtils MemberReference root Literal "emptyElement" LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType DOMElementWriter VariableDeclarator w ClassCreator ReferenceType DOMElementWriter StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "<root>" MemberReference StringUtils LINE_SEP Literal " <emptyElement />" MemberReference StringUtils LINE_SEP Literal "</root>" MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testSetMultiple" executeTarget	0
MethodDeclaration Modifier protected doStartTest2 FormalParameter ReferenceType String text StatementExpression MethodInvocation reg Literal setPattern StatementExpression MethodInvocation Literal "^Line1 in default mode" MethodInvocation reg MemberReference text matches assertTrue StatementExpression MethodInvocation Literal "^Line1 in single line mode" MethodInvocation reg MemberReference text MemberReference RegexpMatcher MATCH_SINGLELINE matches assertTrue StatementExpression MethodInvocation Literal "^Line1 in multi line mode" MethodInvocation reg MemberReference text MemberReference RegexpMatcher MATCH_MULTILINE matches assertTrue	0
MethodDeclaration Modifier public ReferenceType String getUserID ReturnStatement MemberReference userID	0
MethodDeclaration Modifier public static BasicType long parseHumanSizes FormalParameter ReferenceType String humanSize Exception LocalVariableDeclaration Modifier final BasicType long VariableDeclarator KILOBYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator MEGABYTE BinaryOperation * MemberReference KILOBYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator GIGABYTE BinaryOperation * MemberReference MEGABYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator TERABYTE BinaryOperation * MemberReference GIGABYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator PETABYTE BinaryOperation * MemberReference TERABYTE Literal 1024 IfStatement MethodInvocation ! Character MethodInvocation humanSize BinaryOperation - MethodInvocation humanSize length Literal 1 charAt isDigit BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation humanSize BinaryOperation - MethodInvocation humanSize length Literal 1 charAt LocalVariableDeclaration BasicType long VariableDeclarator value MethodInvocation Long MethodInvocation longValue MethodInvocation humanSize Literal 0 BinaryOperation - MethodInvocation humanSize length Literal 1 substring valueOf SwitchStatement MemberReference c SwitchStatementCase Literal 'K' ReturnStatement BinaryOperation * MemberReference value MemberReference KILOBYTE SwitchStatementCase Literal 'M' ReturnStatement BinaryOperation * MemberReference value MemberReference MEGABYTE SwitchStatementCase Literal 'G' ReturnStatement BinaryOperation * MemberReference value MemberReference GIGABYTE SwitchStatementCase Literal 'T' ReturnStatement BinaryOperation * MemberReference value MemberReference TERABYTE SwitchStatementCase Literal 'P' ReturnStatement BinaryOperation * MemberReference value MemberReference PETABYTE SwitchStatementCase ReturnStatement MemberReference value BlockStatement ReturnStatement MethodInvocation Long MemberReference humanSize parseLong	1
MethodDeclaration Modifier public synchronized BasicType boolean setProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value FormalParameter BasicType boolean verbose IfStatement BinaryOperation != Literal null MethodInvocation userProperties MemberReference name get BlockStatement IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal ignored for user property " MemberReference name MemberReference Project MSG_VERBOSE log ReturnStatement Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator done This MethodInvocation MemberReference ns MemberReference name MemberReference value Literal false Literal false Literal false setPropertyHook IfStatement MemberReference done BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation != Literal null MethodInvocation properties MemberReference name get MemberReference verbose BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal "Overriding previous of property " MemberReference name MemberReference Project MSG_VERBOSE log IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation properties MemberReference name MemberReference value put ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType FilterChain createOutputFilterChain IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType FilterChain VariableDeclarator result ClassCreator ReferenceType FilterChain StatementExpression MethodInvocation result MethodInvocation getProject setProject StatementExpression MethodInvocation outputFilterChains MemberReference result add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MemberReference compileClasspath	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation > MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "You must not nest more than one " Literal "condition into <" MethodInvocation getTaskName Literal ">" IfStatement BinaryOperation < MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "You must nest a condition into <" MethodInvocation getTaskName Literal ">" IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The property attribute is required." LocalVariableDeclaration ReferenceType Condition VariableDeclarator c Cast ReferenceType Condition MethodInvocation MethodInvocation nextElement getConditions IfStatement MethodInvocation c eval BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Condition true; setting " MemberReference property Literal " to " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference value setNewProperty getProject IfStatement BinaryOperation != MemberReference alternative Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Condition setting " MemberReference property Literal " to " MemberReference alternative MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference alternative setNewProperty getProject BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Condition not setting " MemberReference property MemberReference Project MSG_DEBUG log	0
MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation == MethodInvocation entry getMethod MemberReference DEFLATED BlockStatement IfStatement BinaryOperation > MemberReference length Literal 0 BlockStatement IfStatement MethodInvocation ! def finished BlockStatement StatementExpression MethodInvocation def MemberReference b MemberReference offset MemberReference length setInput WhileStatement MethodInvocation ! def needsInput BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation MemberReference b MemberReference offset MemberReference length writeOut StatementExpression Assignment MemberReference written MemberReference length += StatementExpression MethodInvocation crc MemberReference b MemberReference offset MemberReference length update	1
MethodDeclaration Modifier public setOutputToFormatters FormalParameter BasicType boolean outputToFormatters StatementExpression Assignment This MemberReference outputToFormatters MemberReference outputToFormatters =	0
MethodDeclaration Modifier public testExit StatementExpression MethodInvocation perms setSecurityManager TryStatement StatementExpression MethodInvocation System.out Literal "If this is the last line on standard out the testExit println StatementExpression MethodInvocation System Literal 3 exit StatementExpression MethodInvocation Literal impossible that this fail is ever Please let me know if it fail CatchClause CatchClauseParameter ExitException e IfStatement BinaryOperation != MethodInvocation e getStatus Literal 3 BlockStatement StatementExpression MethodInvocation Literal "Received wrong exit status in Exception." fail StatementExpression MethodInvocation System.out Literal println StatementExpression MethodInvocation perms restoreSecurityManager	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one StatementExpression Assignment MemberReference mapperElement ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference mapperElement	0
MethodDeclaration Modifier public testIndexJarsPlusJarMarker StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/delete.xml" configureProject	0
MethodDeclaration Modifier public testBatchTestForkOnceExtension StatementExpression MethodInvocation Literal Literal assertResultFilesExist	0
MethodDeclaration * if the proxy port and host settings are not null, then the * get applied these settings last beyond the life of the object * apply to all network * @return true if the settings were */ Modifier public applyWebProxySettings LocalVariableDeclaration BasicType boolean VariableDeclarator settingsChanged Literal false LocalVariableDeclaration ReferenceType Properties VariableDeclarator prop MethodInvocation System getProperties IfStatement BinaryOperation != MethodInvocation getProxyHost Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting proxy to " MethodInvocation getProxyHost Literal ":" MethodInvocation getProxyPort MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation prop Literal "http.proxyHost" MethodInvocation getProxyHost put StatementExpression MethodInvocation prop Literal "http.proxyPort" MethodInvocation String MethodInvocation getProxyPort valueOf put StatementExpression MethodInvocation prop Literal "https.proxyHost" MethodInvocation getProxyHost put StatementExpression MethodInvocation prop Literal "https.proxyPort" MethodInvocation String MethodInvocation getProxyPort valueOf put StatementExpression MethodInvocation prop Literal "ftp.proxyHost" MethodInvocation getProxyHost put StatementExpression MethodInvocation prop Literal "ftp.proxyPort" MethodInvocation String MethodInvocation getProxyPort valueOf put StatementExpression Assignment MemberReference settingsChanged Literal true = IfStatement BinaryOperation != MemberReference socksProxyHost Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting proxy to " MethodInvocation getProxyHost Literal ":" MethodInvocation getProxyPort MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation prop Literal "socksProxyHost" MemberReference socksProxyHost put StatementExpression MethodInvocation prop Literal "socksProxyPort" MethodInvocation Integer MemberReference socksProxyPort toString put StatementExpression Assignment MemberReference settingsChanged Literal true = IfStatement BinaryOperation && MemberReference settingsChanged BinaryOperation == MethodInvocation project MemberReference Project JAVA_1_1 BlockStatement StatementExpression MethodInvocation prop Literal "http.proxySet" Literal "true" put StatementExpression MethodInvocation sun.net.www.http.HttpClient resetProperties StatementExpression MethodInvocation legacyResetProxySettingsCall	1
MethodDeclaration Modifier public testFile StatementExpression MethodInvocation Literal "test" testProperties	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "xmlcatalog" executeTarget	0
MethodDeclaration Modifier public synchronized ReferenceType StringBuffer getText ReturnStatement TernaryExpression BinaryOperation == MemberReference characters Literal null ClassCreator ReferenceType StringBuffer Literal 0 MemberReference characters	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation getProjectDir BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal "/file1.txt" LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation getProjectDir BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal "/file2.txt" LocalVariableDeclaration ReferenceType File VariableDeclarator file3 ClassCreator ReferenceType File MethodInvocation getProjectDir BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal "/file3.txt" StatementExpression MethodInvocation MethodInvocation file1 exists assertTrue StatementExpression MethodInvocation MethodInvocation file2 exists assertTrue StatementExpression MethodInvocation MethodInvocation file3 exists assertTrue	0
MethodDeclaration Modifier private upload FormalParameter ReferenceType String FormalParameter ReferenceType String toSshUri IOException JSchException LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation MemberReference toSshUri parseUri LocalVariableDeclaration ReferenceType Session VariableDeclarator session Literal null TryStatement StatementExpression Assignment MemberReference session MethodInvocation openSession = LocalVariableDeclaration ReferenceType ScpToMessage VariableDeclarator message Literal null IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType ScpToMessage MethodInvocation getVerbose MemberReference session MethodInvocation MethodInvocation MemberReference resolveFile getProject MemberReference file = BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType ScpToMessageBySftp MethodInvocation getVerbose MemberReference session MethodInvocation MethodInvocation MemberReference resolveFile getProject MemberReference file = StatementExpression MethodInvocation message This StatementExpression MethodInvocation message execute IfStatement BinaryOperation != MemberReference session Literal null BlockStatement StatementExpression MethodInvocation session disconnect	0
MethodDeclaration Modifier public testSrcIsDir Exception StatementExpression MethodInvocation Literal Literal "expected failure" MemberReference WsdlToDotnet.Schema ERROR_FILE_IS_DIR expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable getWrapper ReturnStatement MemberReference wrapper	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter ReferenceType Vector filterChains FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String encoding FormalParameter ReferenceType Project project IOException StatementExpression MethodInvocation MemberReference sourceFile MemberReference destFile MemberReference filters MemberReference filterChains MemberReference overwrite MemberReference preserveLastModified MemberReference encoding MemberReference encoding MemberReference project copyFile	1
MethodDeclaration Modifier public addParam FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation params MemberReference name MemberReference value put	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String language StatementExpression MethodInvocation helper MemberReference language setLanguage	0
MethodDeclaration Modifier public addDepend FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier private static printUsage LocalVariableDeclaration ReferenceType String VariableDeclarator lSep MethodInvocation System Literal "line.separator" getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation msg BinaryOperation + Literal "ant [options] [target [target2 [target3] ...]]" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal "Options: " MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -help, -h print this message" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -projecthelp, -p print project help information" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -version print the version information and exit" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -diagnostics print information that might be helpful to" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " diagnose or report problems." MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -quiet, -q be extra quiet" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -verbose, -v be extra verbose" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -debug, -d print debugging information" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -emacs, -e produce logging information without adornments" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -lib <path> specifies a path to search for jars and classes" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -logfile <file> use given file for log" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -l <file> ''" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -logger <classname> the class which is to perform logging" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -listener <classname> add an instance of class as a project listener" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -noinput do not interactive input" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -buildfile <file> use given MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -file <file> ''" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -f <file> ''" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -D<property>=<value> use value for given property" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -keep-going, -k execute all targets that do not depend" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " on failed target(s)" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -propertyfile <name> load all properties from file with -D" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " properties taking precedence" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -inputhandler <class> the class which will handle input requests" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -find <file> (s)earch for buildfile towards the root of" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -s <file> the filesystem and use it" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + BinaryOperation + BinaryOperation + Literal " -nice number A niceness value for the main thread:" MemberReference lSep Literal " 1 (lowest) to 10 (highest); 5 is the default" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + BinaryOperation + BinaryOperation + Literal " -nouserlib Run ant without using the jar files MemberReference lSep Literal " ${user.home}/.ant/lib" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -noclasspath Run ant without using CLASSPATH" MemberReference lSep append StatementExpression MethodInvocation msg BinaryOperation + Literal " -autoproxy Java1.5+: use the OS proxy settings" MemberReference lSep append StatementExpression MethodInvocation msg Literal " -main <class> override Ant's normal entry point" append StatementExpression MethodInvocation System.out MethodInvocation msg toString println	1
MethodDeclaration Modifier protected fireMessageLogged FormalParameter ReferenceType Task task FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable FormalParameter BasicType int priority LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference task StatementExpression MethodInvocation event MemberReference setException StatementExpression MethodInvocation MemberReference event MemberReference message MemberReference priority fireMessageLoggedEvent	0
MethodDeclaration Modifier public FormalParameter ReferenceType aListener StatementExpression Assignment MemberReference listener MemberReference aListener =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String from LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation from Literal "*" lastIndexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement StatementExpression Assignment MemberReference fromPrefix MemberReference from = StatementExpression Assignment MemberReference fromPostfix Literal "" = BlockStatement StatementExpression Assignment MemberReference fromPrefix MethodInvocation from Literal 0 MemberReference index substring = StatementExpression Assignment MemberReference fromPostfix MethodInvocation from BinaryOperation + MemberReference index Literal 1 substring = StatementExpression Assignment MemberReference prefixLength MethodInvocation fromPrefix length = StatementExpression Assignment MemberReference postfixLength MethodInvocation fromPostfix length =	1
MethodDeclaration Modifier public setToLabel FormalParameter ReferenceType String toLabel StatementExpression SuperMethodInvocation MemberReference toLabel setInternalToLabel	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation MemberReference s Literal null	0
MethodDeclaration Modifier public setRefid FormalParameter Modifier final ReferenceType reference BuildException IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != Literal null MemberReference extensionName BinaryOperation != Literal null MemberReference specificationVersion BinaryOperation != Literal null MemberReference specificationVendor BinaryOperation != Literal null MemberReference implementationVersion BinaryOperation != Literal null MemberReference implementationVendorID BinaryOperation != Literal null MemberReference implementationVendor BinaryOperation != Literal null MemberReference implementationURL BlockStatement ThrowStatement MethodInvocation tooManyAttributes LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation reference MethodInvocation getProject getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType ExtensionAdapter BlockStatement LocalVariableDeclaration Modifier final ReferenceType ExtensionAdapter VariableDeclarator other Cast ReferenceType ExtensionAdapter MemberReference o StatementExpression Assignment MemberReference extensionName MemberReference other extensionName = StatementExpression Assignment MemberReference specificationVersion MemberReference other specificationVersion = StatementExpression Assignment MemberReference specificationVendor MemberReference other specificationVendor = StatementExpression Assignment MemberReference implementationVersion MemberReference other implementationVersion = StatementExpression Assignment MemberReference implementationVendorID MemberReference other implementationVendorID = StatementExpression Assignment MemberReference implementationVendor MemberReference other implementationVendor = StatementExpression Assignment MemberReference implementationURL MemberReference other implementationURL = BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MethodInvocation reference getRefId Literal " doesn\'t refer to a Extension" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression SuperMethodInvocation MemberReference reference setRefid	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Attribute attr1 = test" expectOutput	0
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly ReturnStatement Literal false	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testMultipleDots" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator checkprop MethodInvocation project Literal "file.wo.suf" getProperty StatementExpression MethodInvocation Literal "foo.bar" MemberReference checkprop assertEquals	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation != MethodInvocation selectorCount Literal 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "One and only one selector is allowed within the " Literal "<not> tag" setError	1
MethodDeclaration ReferenceType AssertionFailedError getError ReturnStatement MemberReference error	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier protected setOutput FormalParameter ReferenceType OutputStream value TryStatement StatementExpression Assignment MemberReference writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference value Literal "UTF8" Literal true = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public setDir FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier private BasicType int getNextChar IOException IfStatement BinaryOperation != MemberReference queueIndex Literal - 1 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ch MethodInvocation queuedData MemberReference ++ queueIndex charAt IfStatement BinaryOperation >= MemberReference queueIndex MethodInvocation queuedData length BlockStatement StatementExpression Assignment MemberReference queueIndex Literal - 1 = ReturnStatement MemberReference ch ReturnStatement MethodInvocation in read	0
MethodDeclaration Modifier public BasicType boolean asBoolean LocalVariableDeclaration ReferenceType String VariableDeclarator v MethodInvocation getValue ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MemberReference v equals "true" Literal MethodInvocation MemberReference v equals "on" Literal MethodInvocation MemberReference v equals "yes" Literal MethodInvocation MemberReference v equals "withOutAndErr"	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String password StatementExpression Assignment MemberReference sosPassword MemberReference password =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "no files" MemberReference SignJar ERROR_NO_SOURCE expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class adaptToClass ThrowStatement ClassCreator ReferenceType BuildException Literal "Not supported"	1
MethodDeclaration * Write a character to the output stream. This method * to make sure that there isn't an error being reported * will flush line of input out to the project's log * @param c the character to * @throws IOException on */ Modifier public write FormalParameter BasicType int c IOException LocalVariableDeclaration BasicType char VariableDeclarator cc Cast BasicType char MemberReference c IfStatement BinaryOperation || BinaryOperation == MemberReference cc Literal '\r' BinaryOperation == MemberReference cc Literal '\n' BlockStatement IfStatement BinaryOperation > MethodInvocation line length Literal 0 BlockStatement StatementExpression MethodInvocation processLine BlockStatement StatementExpression MethodInvocation line MemberReference cc append	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference choices	1
MethodDeclaration Modifier public BasicType boolean getTrim ReturnStatement BinaryOperation && BinaryOperation != MemberReference trim Literal null MethodInvocation trim booleanValue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testResourceCollection" executeTarget StatementExpression MethodInvocation Literal has been Literal "unziptestout/junit/framework/Assert.class" assertFileExists	0
MethodDeclaration Modifier public setKeysize FormalParameter Modifier final ReferenceType String keysize BuildException TryStatement StatementExpression Assignment This MemberReference keysize MethodInvocation Integer MemberReference keysize parseInt = CatchClause CatchClauseParameter NumberFormatException nfe ThrowStatement ClassCreator ReferenceType BuildException Literal "KeySize attribute should be a integer"	1
MethodDeclaration Modifier protected ReferenceType String getRecursive ReturnStatement TernaryExpression MemberReference MemberReference FLAG_RECURSION Literal ""	0
MethodDeclaration Modifier private ReferenceType TimedElement getTaskElement FormalParameter ReferenceType Task task LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator element Cast ReferenceType TimedElement MethodInvocation tasks MemberReference task get IfStatement BinaryOperation != MemberReference element Literal null BlockStatement ReturnStatement MemberReference element ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation tasks keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator key Cast ReferenceType Task MethodInvocation e nextElement IfStatement BinaryOperation instanceof MemberReference key ReferenceType UnknownElement BlockStatement IfStatement BinaryOperation == Cast ReferenceType UnknownElement MemberReference key MemberReference task BlockStatement ReturnStatement Cast ReferenceType TimedElement MethodInvocation tasks MemberReference key get ReturnStatement Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator bft ClassCreator ReferenceType Literal "modifiedselector" StatementExpression MethodInvocation bft Literal StatementExpression MethodInvocation bft deleteCachefile	0
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed ReturnStatement MethodInvocation MemberReference excludeList	0
MethodDeclaration Modifier public testConditionTask StatementExpression MethodInvocation Literal "testConditionTask" executeTarget LocalVariableDeclaration ReferenceType TaskAdapter VariableDeclarator ta Cast ReferenceType TaskAdapter MethodInvocation MethodInvocation Literal "cond" getReference getProject LocalVariableDeclaration ReferenceType ConditionTask VariableDeclarator c Cast ReferenceType ConditionTask MethodInvocation ta getProxy StatementExpression MethodInvocation BinaryOperation == MethodInvocation c getLocation MemberReference Location UNKNOWN_LOCATION assertFalse StatementExpression MethodInvocation BinaryOperation == MethodInvocation c MethodInvocation getLineNumber getLocation Literal 0 assertFalse	1
MethodDeclaration Modifier public testInvalidExtraOpsVB Exception StatementExpression MethodInvocation Literal "testInvalidExtraOpsVB" Literal "expected failure" MemberReference WSDL_FAILED expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType DirectoryScanner getDirectoryScanner FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getDirectoryScanner MemberReference p getRef IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation MemberReference p getDirectoryScanner IfStatement MethodInvocation ! src isExists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the archive doesn't exist" IfStatement MethodInvocation src isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the archive can't be a directory" LocalVariableDeclaration ReferenceType ArchiveScanner VariableDeclarator as MethodInvocation newArchiveScanner StatementExpression MethodInvocation as MemberReference src setSrc StatementExpression SuperMethodInvocation MethodInvocation p getBaseDir setDir StatementExpression MethodInvocation MemberReference as MemberReference p setupDirectoryScanner StatementExpression MethodInvocation as init ReturnStatement MemberReference as	1
MethodDeclaration * equality test checks namespace, location and filename. All must * @param o object to compare * @return true iff the objects are considered equal in */ Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation == This MemberReference o BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference o ReferenceType SchemaLocation BlockStatement ReturnStatement Literal false LocalVariableDeclaration Modifier final ReferenceType SchemaLocation VariableDeclarator schemaLocation Cast ReferenceType SchemaLocation MemberReference o IfStatement TernaryExpression BinaryOperation != MemberReference file Literal null MethodInvocation ! file MemberReference schemaLocation file equals BinaryOperation != MemberReference schemaLocation file Literal null BlockStatement ReturnStatement Literal false IfStatement TernaryExpression BinaryOperation != MemberReference namespace Literal null MethodInvocation ! namespace MemberReference schemaLocation namespace equals BinaryOperation != MemberReference schemaLocation namespace Literal null BlockStatement ReturnStatement Literal false IfStatement TernaryExpression BinaryOperation != MemberReference url Literal null MethodInvocation ! url MemberReference schemaLocation url equals BinaryOperation != MemberReference schemaLocation url Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation StatementExpression MethodInvocation MemberReference time MemberReference now Literal 5000	0
MethodDeclaration Modifier public FormalParameter BasicType boolean inValue StatementExpression Assignment MemberReference config flatDestDir MemberReference inValue =	0
MethodDeclaration Modifier public setGranularity FormalParameter BasicType long granularity StatementExpression Assignment This MemberReference granularity MemberReference granularity =	0
MethodDeclaration Modifier public static ReferenceType SelectorUtils getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public setSubject FormalParameter ReferenceType String subj StatementExpression MethodInvocation Literal "Subject" MemberReference subj setHeader	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public BasicType int getUid IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarResource MethodInvocation getCheckedRef ReturnStatement MemberReference uid	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference string Literal null BinaryOperation == MemberReference subString Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "both string and substring are required " Literal "in ReturnStatement TernaryExpression MemberReference BinaryOperation > MethodInvocation string MemberReference subString indexOf Literal - 1 BinaryOperation > MethodInvocation string MethodInvocation MethodInvocation subString toLowerCase indexOf toLowerCase Literal - 1	1
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" executeTarget	0
MethodDeclaration Modifier protected checkNamespace FormalParameter ReferenceType String uri	0
MethodDeclaration Modifier public final setUserName FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setIncluderuntime FormalParameter BasicType boolean b StatementExpression Assignment MemberReference includeRuntime MemberReference b =	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType LineContains VariableDeclarator newFilter ClassCreator ReferenceType LineContains MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation getContains StatementExpression MethodInvocation newFilter MethodInvocation isNegated setNegate ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier protected validateOptions BuildException StatementExpression SuperMethodInvocation validateOptions StatementExpression MethodInvocation Literal checkClass	0
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation != This MemberReference Literal null BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal Literal " cannot coexist with a <outputmapper>" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot have > 1 <outputmapper>" StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public test8 StatementExpression MethodInvocation Literal "test8" executeTarget	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected doResourceOperations FormalParameter ReferenceType Map map IfStatement BinaryOperation > MethodInvocation map size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MethodInvocation map size Literal " resource" TernaryExpression BinaryOperation == MethodInvocation map size Literal 1 Literal "" Literal "s" Literal " to " MethodInvocation destDir getAbsolutePath log LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation map MethodInvocation iterator keySet WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator fromResource Cast ReferenceType Resource MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator toFiles Cast ReferenceType String MethodInvocation map MemberReference fromResource get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator toFile MemberReference ArraySelector MemberReference i toFiles TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MemberReference fromResource Literal " to " MemberReference toFile MemberReference verbosity log LocalVariableDeclaration ReferenceType FilterSetCollection VariableDeclarator executionFilters ClassCreator ReferenceType FilterSetCollection IfStatement MemberReference filtering BlockStatement StatementExpression MethodInvocation executionFilters MethodInvocation MethodInvocation getGlobalFilterSet getProject addFilterSet ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator filterEnum MethodInvocation filterSets elements MethodInvocation filterEnum hasMoreElements BlockStatement StatementExpression MethodInvocation executionFilters Cast ReferenceType FilterSet MethodInvocation filterEnum nextElement addFilterSet StatementExpression MethodInvocation ResourceUtils MemberReference fromResource ClassCreator ReferenceType FileResource MemberReference destDir MemberReference toFile MemberReference executionFilters MemberReference filterChains MemberReference forceOverwrite MemberReference preserveLastModified MemberReference inputEncoding MemberReference outputEncoding MethodInvocation getProject copyResource CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference fromResource Literal " to " MemberReference toFile Literal " due to " MethodInvocation MemberReference ioe getDueTo LocalVariableDeclaration ReferenceType File VariableDeclarator targetFile ClassCreator ReferenceType File MemberReference toFile IfStatement BinaryOperation && MethodInvocation targetFile exists MethodInvocation ! targetFile delete BlockStatement StatementExpression Assignment MemberReference msg BinaryOperation + Literal " and I couldn't delete the corrupt " MemberReference toFile += IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public testBadName Exception StatementExpression MethodInvocation Literal "testBadName" Literal not known" MemberReference ERROR_UNKNOWN_COMPILER expectBuildExceptionContaining	0
MethodDeclaration Modifier public setPathRef FormalParameter ReferenceType BuildException StatementExpression MethodInvocation MemberReference setClasspathRef	0
MethodDeclaration sendQuit IOException LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference TryStatement StatementExpression MethodInvocation Literal "QUIT" MemberReference ok send CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType ErrorInQuitException MemberReference e	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation compileClasspath createPath	0
MethodDeclaration Modifier public setEmbed FormalParameter BasicType boolean embed StatementExpression Assignment This MemberReference embed MemberReference embed =	0
MethodDeclaration Modifier private writeManifest FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType Manifest manifest IOException ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation manifest getWarnings MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Manifest warning: " Cast ReferenceType String MethodInvocation e nextElement MemberReference Project MSG_WARN log StatementExpression MethodInvocation Literal null MemberReference zOut Literal "META-INF/" MemberReference ZipFileSet DEFAULT_DIR_MODE MemberReference JAR_MARKER LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator osw ClassCreator ReferenceType OutputStreamWriter MemberReference baos MemberReference Manifest LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter MemberReference osw StatementExpression MethodInvocation manifest MemberReference writer write StatementExpression MethodInvocation writer flush LocalVariableDeclaration ReferenceType ByteArrayInputStream VariableDeclarator bais ClassCreator ReferenceType ByteArrayInputStream MethodInvocation baos toByteArray StatementExpression SuperMethodInvocation MemberReference bais MemberReference zOut MemberReference MANIFEST_NAME MethodInvocation System currentTimeMillis Literal null MemberReference ZipFileSet DEFAULT_FILE_MODE zipFile StatementExpression SuperMethodInvocation MemberReference zOut initZipOutputStream	1
MethodDeclaration Modifier public setSystem BuildException TryStatement StatementExpression Assignment MemberReference sys MethodInvocation System getProperties = LocalVariableDeclaration ReferenceType Properties VariableDeclarator p ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation sys propertyNames MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation p MemberReference name MethodInvocation sys MemberReference name getProperty put StatementExpression MethodInvocation p MethodInvocation mergePropertySets putAll ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation variables elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator v Cast ReferenceType Environment ReferenceType Variable MethodInvocation e nextElement StatementExpression MethodInvocation v validate StatementExpression MethodInvocation p MethodInvocation v getKey MethodInvocation v getValue put StatementExpression MethodInvocation System MemberReference p setProperties CatchClause CatchClauseParameter SecurityException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot modify system properties" MemberReference e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference FILE_PREPEND_WITH MemberReference FILE_APPEND_WITH doTest	0
MethodDeclaration Modifier public setEncoding FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public ReferenceType String getClassname ReturnStatement MemberReference rootClass	0
MethodDeclaration Modifier public expectLogContaining FormalParameter ReferenceType String target FormalParameter ReferenceType String log StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference log assertLogContaining	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType String path BuildException StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference path setPath createPathElement	1
MethodDeclaration Modifier public setTag FormalParameter ReferenceType String p IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null BinaryOperation > MethodInvocation p MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference tag MemberReference p = StatementExpression MethodInvocation BinaryOperation + Literal "-r" MemberReference p addCommandArgument	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference text MemberReference text =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/macrodef.xml" configureProject	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType TestSuite VariableDeclarator suite ClassCreator ReferenceType TestSuite ClassReference ReferenceType StatementExpression MethodInvocation MemberReference suite run	0
MethodDeclaration Modifier public BasicType boolean supportsCvsLogWithSOption IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference Literal "." LocalVariableDeclaration BasicType long VariableDeclarator counter BinaryOperation * MemberReference MULTIPLY MemberReference MULTIPLY LocalVariableDeclaration BasicType long VariableDeclarator version Literal 0 WhileStatement MethodInvocation tokenizer hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation tokenizer nextToken LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MethodInvocation s length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! Character MethodInvocation s MemberReference i charAt isDigit BlockStatement BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s2 MethodInvocation s Literal 0 MemberReference i substring StatementExpression Assignment MemberReference version BinaryOperation + MemberReference version BinaryOperation * MemberReference counter MethodInvocation Long MemberReference s2 parseLong = IfStatement BinaryOperation == MemberReference counter Literal 1 BlockStatement BreakStatement StatementExpression Assignment MemberReference counter BinaryOperation / MemberReference counter MemberReference MULTIPLY = ReturnStatement BinaryOperation >= MemberReference version MemberReference VERSION_1_11_2	0
MethodDeclaration Modifier public addPropertyset FormalParameter ReferenceType ps IfStatement BinaryOperation == MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation init StatementExpression MethodInvocation callee MemberReference ps addPropertyset	0
MethodDeclaration Modifier protected ReferenceType AbstractFileSet getRef FormalParameter ReferenceType Project p StatementExpression MethodInvocation MemberReference p dieOnCircularReference LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MethodInvocation MemberReference p getReferencedObject getRefid IfStatement BinaryOperation instanceof MemberReference o ReferenceType TarFileSet BlockStatement ReturnStatement Cast ReferenceType AbstractFileSet MemberReference o IfStatement BinaryOperation instanceof MemberReference o ReferenceType FileSet BlockStatement LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator zfs ClassCreator ReferenceType TarFileSet Cast ReferenceType FileSet MemberReference o StatementExpression MethodInvocation MemberReference zfs configureFileSet ReturnStatement MemberReference zfs BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + MethodInvocation MethodInvocation getRefId getRefid Literal " doesn\'t a tarfileset or a fileset" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg	1
MethodDeclaration Modifier public BasicType boolean isValid ReturnStatement Literal true	0
MethodDeclaration Modifier protected ReferenceType PasswordAuthentication getPasswordAuthentication ReturnStatement MemberReference auth	1
MethodDeclaration Modifier public FormalParameter ReferenceType String branch StatementExpression Assignment This MemberReference branch MemberReference branch =	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation project Literal "My Condition execution" log	0
MethodDeclaration Modifier public setArchive FormalParameter ReferenceType File a StatementExpression MethodInvocation StatementExpression Assignment MemberReference archive ClassCreator ReferenceType FileResource MemberReference a =	0
MethodDeclaration Modifier protected ReferenceType TarFileSet asTarFileSet FormalParameter ReferenceType ArchiveFileSet archiveFileSet LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator tfs Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference archiveFileSet Literal null BinaryOperation instanceof MemberReference archiveFileSet ReferenceType TarFileSet BlockStatement StatementExpression Assignment MemberReference tfs Cast ReferenceType TarFileSet MemberReference archiveFileSet = BlockStatement StatementExpression Assignment MemberReference tfs ClassCreator ReferenceType TarFileSet = StatementExpression MethodInvocation tfs MethodInvocation getProject setProject IfStatement BinaryOperation != MemberReference archiveFileSet Literal null BlockStatement StatementExpression MethodInvocation tfs MethodInvocation archiveFileSet MethodInvocation getProject getPrefix setPrefix StatementExpression MethodInvocation tfs MethodInvocation archiveFileSet MethodInvocation getProject getFullpath IfStatement MethodInvocation archiveFileSet hasFileModeBeenSet BlockStatement StatementExpression MethodInvocation tfs MethodInvocation archiveFileSet MethodInvocation getProject IfStatement MethodInvocation archiveFileSet hasDirModeBeenSet BlockStatement StatementExpression MethodInvocation tfs MethodInvocation archiveFileSet MethodInvocation getProject IfStatement BinaryOperation instanceof MemberReference archiveFileSet ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType types ReferenceType TarFileSet BlockStatement LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType types ReferenceType TarFileSet VariableDeclarator t Cast ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType types ReferenceType TarFileSet MemberReference archiveFileSet IfStatement MethodInvocation t hasUserNameBeenSet BlockStatement StatementExpression MethodInvocation tfs MethodInvocation t getUserName setUserName IfStatement MethodInvocation t hasGroupBeenSet BlockStatement StatementExpression MethodInvocation tfs MethodInvocation t getGroup IfStatement MethodInvocation t hasUserIdBeenSet BlockStatement StatementExpression MethodInvocation tfs MethodInvocation t getUid setUid IfStatement MethodInvocation t hasGroupIdBeenSet BlockStatement StatementExpression MethodInvocation tfs MethodInvocation t getGid setGid ReturnStatement MemberReference tfs	1
MethodDeclaration Modifier public final setNoCompress FormalParameter BasicType boolean nocompress StatementExpression Assignment MemberReference noCompress MemberReference nocompress =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public recreate BuildException TryStatement IfStatement MethodInvocation fileSets isEmpty BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "File set identifying link file(s) " Literal "required for action recreate" handleError ReturnStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator links MethodInvocation MemberReference fileSets loadLinks ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator kitr MethodInvocation links MethodInvocation iterator keySet MethodInvocation kitr hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator lnk Cast ReferenceType String MethodInvocation kitr next LocalVariableDeclaration ReferenceType String VariableDeclarator res MethodInvocation links MemberReference lnk getProperty TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator test ClassCreator ReferenceType File MemberReference lnk IfStatement MethodInvocation ! FILE_UTILS Literal null MemberReference lnk isSymbolicLink BlockStatement StatementExpression MethodInvocation MemberReference res MemberReference lnk doLink IfStatement MethodInvocation ! test MethodInvocation ClassCreator MethodInvocation getCanonicalPath ReferenceType File MemberReference res equals getCanonicalPath BlockStatement StatementExpression MethodInvocation MemberReference lnk deleteSymlink StatementExpression MethodInvocation MemberReference res MemberReference lnk doLink CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation Literal "IO exception while creating link" handleError StatementExpression MethodInvocation setDefaults	1
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference mCfile	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation FILE_UTILS Literal null normalize StatementExpression MethodInvocation Literal "successfully normalized a fail CatchClause CatchClauseParameter NullPointerException npe LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation FILE_UTILS Literal null Literal "a" resolveFile StatementExpression MethodInvocation MemberReference f ClassCreator MethodInvocation getAbsoluteFile ReferenceType File Literal "a" assertEquals	0
MethodDeclaration Modifier public forAllTasks FormalParameter ReferenceType String template FormalParameter ReferenceType Properties attributes XDocletException LocalVariableDeclaration ReferenceType Collection VariableDeclarator classes MethodInvocation AbstractProgramElementTagsHandler getAllClasses LocalVariableDeclaration ReferenceType XClass VariableDeclarator cur_class Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation classes iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference cur_class Cast ReferenceType XClass MethodInvocation iter next = StatementExpression MethodInvocation MemberReference cur_class setCurrentClass IfStatement MethodInvocation AntSubTask MemberReference cur_class isAntTask BlockStatement StatementExpression MethodInvocation MemberReference template generate	1
MethodDeclaration Modifier public assertFileIsNotPresent FormalParameter ReferenceType String f StatementExpression MethodInvocation BinaryOperation + Literal "Didn't expect file " MemberReference f MethodInvocation ! MethodInvocation MemberReference f resolveFile MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentCommand BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentFileCommand BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NOCOMMENT setValue createArgument IfStatement MethodInvocation getNoWarn BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation getPreserveTime BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_PRESERVETIME setValue createArgument IfStatement MethodInvocation getKeepCopy BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_KEEPCOPY setValue createArgument IfStatement MethodInvocation getIdentical BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_IDENTICAL setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier public final ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a StatementExpression SuperMethodInvocation MemberReference a IfStatement MethodInvocation ! a isFilesystemOnly BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "only filesystem resources are supported"	1
MethodDeclaration Modifier public printElementDecl FormalParameter ReferenceType PrintWriter out FormalParameter ReferenceType Project p FormalParameter ReferenceType String name FormalParameter ReferenceType Class element IfStatement MethodInvocation visited MemberReference name containsKey BlockStatement ReturnStatement StatementExpression MethodInvocation visited MemberReference name Literal "" put LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih Literal null TryStatement StatementExpression Assignment MemberReference ih MethodInvocation IntrospectionHelper MemberReference p MemberReference element getHelper = CatchClause CatchClauseParameter Throwable t ReturnStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "<!ELEMENT " StatementExpression MethodInvocation sb MethodInvocation Literal " " append MemberReference name append IfStatement ClassReference org.apache.tools.ant.types MethodInvocation MemberReference element equals ReferenceType BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEP append Literal "EMPTY>" append StatementExpression MethodInvocation sb MethodInvocation MemberReference name append Literal "<!ATTLIST " append StatementExpression MethodInvocation sb MethodInvocation Literal " id ID #IMPLIED" append MemberReference LINE_SEP append StatementExpression MethodInvocation sb MethodInvocation Literal " refid IDREF #IMPLIED" append MemberReference LINE_SEP append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEP append Literal ">" append StatementExpression MethodInvocation out MemberReference sb println ReturnStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector IfStatement MethodInvocation ih supportsCharacters BlockStatement StatementExpression MethodInvocation v Literal "#PCDATA" addElement IfStatement ClassReference MethodInvocation MemberReference element isAssignableFrom ReferenceType TaskContainer BlockStatement StatementExpression MethodInvocation v MemberReference TASKS addElement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation ih getNestedElements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation v MethodInvocation e nextElement addElement IfStatement MethodInvocation v isEmpty BlockStatement StatementExpression MethodInvocation sb Literal "EMPTY" append BlockStatement StatementExpression MethodInvocation sb Literal "(" append LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation v size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal " | " append StatementExpression MethodInvocation sb MethodInvocation v MemberReference i elementAt append StatementExpression MethodInvocation sb Literal ")" append IfStatement BinaryOperation || BinaryOperation > MemberReference count Literal 1 MethodInvocation ! v MethodInvocation Literal "#PCDATA" equals Literal 0 elementAt BlockStatement StatementExpression MethodInvocation sb Literal "*" append StatementExpression MethodInvocation sb Literal ">" append StatementExpression MethodInvocation out MemberReference sb println StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuffer Literal "<!ATTLIST " = StatementExpression MethodInvocation sb MemberReference name append StatementExpression MethodInvocation sb MethodInvocation Literal " id ID #IMPLIED" append MemberReference LINE_SEP append StatementExpression Assignment MemberReference e MethodInvocation ih getAttributes = WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attrName Cast ReferenceType String MethodInvocation e nextElement IfStatement Literal MethodInvocation MemberReference attrName equals "id" BlockStatement ContinueStatement StatementExpression MethodInvocation sb MethodInvocation Literal " " append MethodInvocation MemberReference attrName append MethodInvocation Literal " " append MemberReference LINE_SEP append LocalVariableDeclaration ReferenceType Class VariableDeclarator type MethodInvocation ih MemberReference attrName getAttributeType IfStatement BinaryOperation || MethodInvocation type ClassReference java.lang ReferenceType Boolean equals MethodInvocation type MemberReference java.lang.Boolean TYPE equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " " append MemberReference BOOLEAN append IfStatement ClassReference MethodInvocation MemberReference type isAssignableFrom ReferenceType BlockStatement StatementExpression MethodInvocation sb Literal "IDREF " append IfStatement ClassReference MethodInvocation MemberReference type isAssignableFrom ReferenceType EnumeratedAttribute BlockStatement TryStatement LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator ea Cast ReferenceType EnumeratedAttribute MethodInvocation type newInstance LocalVariableDeclaration ReferenceType String VariableDeclarator values MethodInvocation ea getValues IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference values Literal null BinaryOperation == MemberReference values length Literal 0 MethodInvocation ! MemberReference values areNmtokens BlockStatement StatementExpression MethodInvocation sb Literal "CDATA " append BlockStatement StatementExpression MethodInvocation sb Literal "(" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal " | " append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i values append StatementExpression MethodInvocation sb Literal ") " append CatchClause CatchClauseParameter InstantiationException ie StatementExpression MethodInvocation sb Literal "CDATA " append CatchClause CatchClauseParameter IllegalAccessException ie StatementExpression MethodInvocation sb Literal "CDATA " append IfStatement BinaryOperation && BinaryOperation != MethodInvocation type getSuperclass Literal null MethodInvocation type MethodInvocation getName MethodInvocation Literal "java.lang.Enum" equals getSuperclass BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator values Cast ReferenceType Object MethodInvocation type MethodInvocation Literal null Cast ReferenceType Object Literal null invoke Literal "values" Cast ReferenceType Class Literal null getMethod IfStatement BinaryOperation == MemberReference values length Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal "CDATA " append BlockStatement StatementExpression MethodInvocation sb Literal '(' append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal " | " append StatementExpression MethodInvocation sb MethodInvocation type MethodInvocation MemberReference ArraySelector MemberReference i values Cast ReferenceType Object Literal null invoke Literal "name" Cast ReferenceType Class Literal null getMethod append StatementExpression MethodInvocation sb Literal ") " append CatchClause CatchClauseParameter Exception x StatementExpression MethodInvocation sb Literal "CDATA " append BlockStatement StatementExpression MethodInvocation sb Literal "CDATA " append StatementExpression MethodInvocation sb Literal "#IMPLIED" append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEP append Literal ">" append StatementExpression MethodInvocation out MemberReference sb println LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation v size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nestedName Cast ReferenceType String MethodInvocation v MemberReference i elementAt IfStatement BinaryOperation && BinaryOperation && Literal ! MethodInvocation MemberReference nestedName equals "#PCDATA" MethodInvocation ! TASKS MemberReference nestedName equals MethodInvocation ! TYPES MemberReference nestedName equals BlockStatement StatementExpression MethodInvocation MemberReference out MemberReference p MemberReference nestedName MethodInvocation ih MemberReference nestedName getElementType printElementDecl	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceComparator c IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression Assignment MemberReference MemberReference c =	0
MethodDeclaration Modifier public testTestEnded Exception LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent ClassCreator ReferenceType Integer Literal 99 MemberReference TestRunEvent Literal "xxxx" StatementExpression MethodInvocation dispatcher MemberReference evt fireTestEnded StatementExpression MethodInvocation MemberReference evt MethodInvocation recorder.testEnded Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public addContains FormalParameter ReferenceType ContainsSelector selector StatementExpression MethodInvocation fileset MemberReference selector addContains	1
MethodDeclaration Modifier public testTaskdef StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal worked" BinaryOperation > MethodInvocation MethodInvocation Literal "As attribute: it worked" indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation Literal "nested text worked" BinaryOperation > MethodInvocation MethodInvocation Literal "As it worked" indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation Literal "nested text worked" BinaryOperation > MethodInvocation MethodInvocation Literal "As it worked" indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public BasicType boolean isNativeBuild LocalVariableDeclaration BasicType boolean VariableDeclarator nativeBuild Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator additionalArguments MethodInvocation MethodInvocation getCurrentCompilerArgs getJavac LocalVariableDeclaration BasicType int VariableDeclarator argsLength Literal 0 WhileStatement BinaryOperation && MemberReference ! nativeBuild BinaryOperation < MemberReference argsLength MemberReference additionalArguments length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator conflictLength Literal 0 WhileStatement BinaryOperation && MemberReference ! nativeBuild BinaryOperation < MemberReference conflictLength MemberReference CONFLICT_WITH_DASH_C length BlockStatement StatementExpression Assignment MemberReference nativeBuild MemberReference additionalArguments = StatementExpression MemberReference ++ conflictLength StatementExpression MemberReference ++ argsLength ReturnStatement MemberReference nativeBuild	1
MethodDeclaration Modifier public validateConfigured BuildException StatementExpression SuperMethodInvocation validateConfigured	1
MethodDeclaration Modifier public onSuiteStarted FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation formatter MemberReference evt onSuiteStarted	0
MethodDeclaration Modifier public ReferenceType String substring FormalParameter BasicType int begin ReturnStatement MethodInvocation line MemberReference begin substring	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference old	0
MethodDeclaration Modifier public FormalParameter ReferenceType TestRunEvent evt SynchronizedStatement This StatementExpression Assignment MemberReference done Literal true = StatementExpression MethodInvocation notify	1
MethodDeclaration Modifier public synchronized appendSelector FormalParameter ReferenceType FileSelector selector IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed StatementExpression MethodInvocation selectors MemberReference selector addElement StatementExpression Assignment MemberReference directoryScanner Literal null =	1
MethodDeclaration Modifier public setErrorMessage FormalParameter ReferenceType String errorMessage StatementExpression Assignment This MemberReference errorMessage MemberReference errorMessage =	0
MethodDeclaration Modifier public final ReferenceType Vector topoSort FormalParameter ReferenceType String root FormalParameter ReferenceType Hashtable targetTable FormalParameter BasicType boolean returnAll BuildException ReturnStatement MethodInvocation ArrayCreator ReferenceType String ArrayInitializer MemberReference root MemberReference targetTable MemberReference returnAll topoSort	1
MethodDeclaration Modifier public ReferenceType Object getProxy ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType URL fileToURL FormalParameter ReferenceType File file MalformedURLException TryStatement ReturnStatement ClassCreator ReferenceType URL MethodInvocation MethodInvocation file MethodInvocation toString toURL encodeURI CatchClause CatchClauseParameter UnsupportedEncodingException ex ThrowStatement ClassCreator ReferenceType MalformedURLException MethodInvocation ex toString	1
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException IfStatement BinaryOperation == MemberReference project Literal null BlockStatement IfStatement BinaryOperation == MemberReference workingDir Literal null BlockStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal "Cannot locate antRun script: " Literal "No project provided" LocalVariableDeclaration ReferenceType String VariableDeclarator antHome MethodInvocation project MemberReference MagicNames ANT_HOME getProperty IfStatement BinaryOperation == MemberReference antHome Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot locate antRun script: " Literal "Property '" MemberReference MagicNames ANT_HOME Literal "' not found" LocalVariableDeclaration ReferenceType String VariableDeclarator antRun MethodInvocation FILE_UTILS MethodInvocation toString MethodInvocation project getBaseDir BinaryOperation + BinaryOperation + MemberReference antHome MemberReference File separator MemberReference myScript resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator commandDir MemberReference workingDir IfStatement BinaryOperation && BinaryOperation == MemberReference workingDir Literal null BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression Assignment MemberReference commandDir MethodInvocation project getBaseDir = LocalVariableDeclaration ReferenceType String VariableDeclarator newcmd ArrayCreator ReferenceType String BinaryOperation + MemberReference cmd length Literal 3 StatementExpression Assignment MemberReference ArraySelector Literal 0 newcmd Literal "perl" = StatementExpression Assignment MemberReference ArraySelector Literal 1 newcmd MemberReference antRun = StatementExpression Assignment MemberReference ArraySelector Literal 2 newcmd MethodInvocation commandDir getAbsolutePath = StatementExpression MethodInvocation System MemberReference cmd Literal 0 MemberReference newcmd Literal 3 MemberReference cmd length arraycopy ReturnStatement MethodInvocation MemberReference project MemberReference newcmd MemberReference env exec	1
MethodDeclaration Modifier public setInputHandler FormalParameter ReferenceType handler StatementExpression Assignment MemberReference inputHandler MemberReference handler =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator archive MethodInvocation MethodInvocation Literal resolveFile getProject StatementExpression Assignment MemberReference zfPrefixAddsDir ClassCreator ReferenceType ZipFile MemberReference archive = LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze MethodInvocation zfPrefixAddsDir Literal getEntry StatementExpression MethodInvocation Literal has been added" MemberReference ze assertNotNull	0
MethodDeclaration Modifier protected ReferenceType String getElementName FormalParameter ReferenceType Project project FormalParameter ReferenceType Object element ReturnStatement MethodInvocation project MemberReference element getElementName	1
MethodDeclaration Modifier protected execSQL FormalParameter ReferenceType String sql FormalParameter ReferenceType PrintStream out SQLException IfStatement Literal MethodInvocation MethodInvocation sql trim equals "" BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ResultSet VariableDeclarator resultSet Literal null TryStatement StatementExpression MemberReference ++ totalSql StatementExpression MethodInvocation BinaryOperation + Literal "SQL: " MemberReference sql MemberReference Project MSG_VERBOSE log LocalVariableDeclaration BasicType boolean VariableDeclarator ret LocalVariableDeclaration BasicType int VariableDeclarator updateCount Literal 0 VariableDeclarator updateCountTotal Literal 0 StatementExpression Assignment MemberReference ret MethodInvocation statement MemberReference sql execute = StatementExpression Assignment MemberReference updateCount MethodInvocation statement getUpdateCount = StatementExpression Assignment MemberReference resultSet MethodInvocation statement getResultSet = DoStatement MemberReference ret BlockStatement IfStatement MemberReference ! ret BlockStatement IfStatement BinaryOperation != MemberReference updateCount Literal - 1 BlockStatement StatementExpression Assignment MemberReference updateCountTotal MemberReference updateCount += BlockStatement IfStatement MemberReference print BlockStatement StatementExpression MethodInvocation MemberReference resultSet MemberReference out printResults StatementExpression Assignment MemberReference ret MethodInvocation statement getMoreResults = IfStatement MemberReference ret BlockStatement StatementExpression Assignment MemberReference updateCount MethodInvocation statement getUpdateCount = StatementExpression Assignment MemberReference resultSet MethodInvocation statement getResultSet = StatementExpression MethodInvocation BinaryOperation + MemberReference updateCountTotal Literal " rows affected" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && MemberReference print MemberReference BlockStatement StatementExpression MethodInvocation out BinaryOperation + MemberReference updateCountTotal Literal " rows affected" println LocalVariableDeclaration ReferenceType SQLWarning VariableDeclarator warning MethodInvocation conn getWarnings WhileStatement BinaryOperation != MemberReference warning Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference warning Literal " sql warning" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference warning MethodInvocation warning getNextWarning = StatementExpression MethodInvocation conn StatementExpression MemberReference ++ goodSql CatchClause CatchClauseParameter SQLException e StatementExpression MethodInvocation BinaryOperation + Literal "Failed to execute: " MemberReference sql MemberReference Project MSG_ERR log IfStatement MethodInvocation ! Literal "continue" equals BlockStatement ThrowStatement MemberReference e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_ERR log IfStatement BinaryOperation != MemberReference resultSet Literal null BlockStatement StatementExpression MethodInvocation resultSet close	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "istrue-not" Literal "istrue-not" expectPropertyUnset	0
MethodDeclaration Modifier public setToRefid FormalParameter ReferenceType String targetid StatementExpression Assignment This MemberReference targetid MemberReference targetid =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation writeSingleBytes StatementExpression MethodInvocation stream Literal '\r' write StatementExpression MethodInvocation stream Literal '\n' write StatementExpression MethodInvocation stream assertInvoked	0
MethodDeclaration * @see */ Modifier public setOutputPrintStream FormalParameter ReferenceType PrintStream output StatementExpression MethodInvocation StatementExpression Assignment MemberReference out MemberReference output =	1
MethodDeclaration Modifier public FormalParameter ReferenceType ConstantPool constantPool StatementExpression Assignment This MemberReference constantPool MemberReference constantPool =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public list ThrowStatement ClassCreator ReferenceType BuildException Literal "list"	0
MethodDeclaration Modifier public ReferenceType getRefid ReturnStatement MemberReference ref	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter BasicType boolean user IfStatement MethodInvocation ! name MemberReference PREFIX startsWith BlockStatement ReturnStatement SuperMethodInvocation MemberReference ns MemberReference name MemberReference user TryStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation PREFIX length substring = LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter StatementExpression MethodInvocation engine MemberReference context MemberReference sw Literal MemberReference name evaluate StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "VM: getProperty " MemberReference ns Literal " " MemberReference name Literal "=" MethodInvocation sw toString println ReturnStatement MethodInvocation sw toString CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation MethodInvocation MemberReference log getRmic ReturnStatement Literal false	0
MethodDeclaration Modifier public final testEmptyElementIfIsReference LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator f MethodInvocation getInstance StatementExpression MethodInvocation f Literal "**/*.java" setIncludes TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add reference to " MethodInvocation f getDataTypeName Literal " with elements from setIncludes" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f MethodInvocation getInstance = StatementExpression MethodInvocation f TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add reference to " MethodInvocation f getDataTypeName Literal " with patternset element." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify elements when " Literal "using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f MethodInvocation getInstance = StatementExpression MethodInvocation f createInclude TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add reference to " MethodInvocation f getDataTypeName Literal " with include element." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f MethodInvocation getInstance = StatementExpression MethodInvocation f ClassCreator ReferenceType Literal "dummyref" setRefid TryStatement StatementExpression MethodInvocation f Literal "**/*.java" setIncludes StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can set includes in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "/a" setIncludesfile StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can set in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f Literal "**/*.java" setExcludes StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can set in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f ClassCreator ReferenceType File Literal "/a" setExcludesfile StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can set in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f MethodInvocation project Literal "." resolveFile setDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can set dir in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify more than one attribute " Literal using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f createInclude StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add include in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify elements when using " Literal MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add exclude in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify elements when using " Literal MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f createIncludesFile StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify elements when using " Literal MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f createExcludesFile StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify elements when using " Literal MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Can add patternset in " MethodInvocation f getDataTypeName Literal " that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "You must not specify elements when using " Literal MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal "asis" Literal "remove"	0
MethodDeclaration Modifier protected ReferenceType String getDefinitionsParameter LocalVariableDeclaration ReferenceType String VariableDeclarator predecessors SuperMethodInvocation getDefinitionsParameter IfStatement MethodInvocation MemberReference definitions notEmpty BlockStatement IfStatement BinaryOperation == MemberReference predecessors Literal null BlockStatement StatementExpression Assignment MemberReference predecessors Literal = ReturnStatement BinaryOperation + MemberReference predecessors MemberReference definitions BlockStatement ReturnStatement MemberReference predecessors	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal "MockAlgorithm@" MethodInvocation hashCode	0
MethodDeclaration Modifier public FormalParameter BasicType boolean delete StatementExpression Assignment This MemberReference delete MemberReference delete =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "XML file does not schema." expectBuildException	0
MethodDeclaration Modifier public testText StatementExpression MethodInvocation Literal "text" Literal "Inner expectLog	0
MethodDeclaration Modifier private static ReferenceType SAXParser getSAXParser LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator saxParserFactory MethodInvocation SAXParserFactory newInstance IfStatement BinaryOperation == MemberReference saxParserFactory Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser Literal null TryStatement StatementExpression Assignment MemberReference saxParser MethodInvocation saxParserFactory newSAXParser = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation MemberReference e ReturnStatement MemberReference saxParser	0
MethodDeclaration Modifier public setDynamicAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference value setNewProperty getProject	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier public static ReferenceType Hashtable toFiles FormalParameter ReferenceType Vector paths LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator map ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation paths size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path Cast ReferenceType String MethodInvocation paths MemberReference i elementAt TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference path StatementExpression Assignment MemberReference path MethodInvocation f getCanonicalPath = StatementExpression MethodInvocation map MemberReference path MemberReference path put CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference map	1
MethodDeclaration Modifier private ReferenceType BuildException noChildrenAllowed ReturnStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "You must not specify " Literal when using the refid attribute."	0
MethodDeclaration Modifier public ReferenceType Object createFour ReturnStatement Literal null	1
MethodDeclaration Modifier public setError FormalParameter ReferenceType String msg IfStatement BinaryOperation == MemberReference errmsg Literal null BlockStatement StatementExpression Assignment MemberReference errmsg MemberReference msg =	0
MethodDeclaration Modifier public run TryStatement TryStatement WhileStatement MemberReference ! BlockStatement StatementExpression MethodInvocation pumpStream StatementExpression MethodInvocation MemberReference SLEEP_TIME sleep CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation din close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public FormalParameter BasicType boolean failonerr StatementExpression Assignment MemberReference mFailonerr MemberReference failonerr =	0
MethodDeclaration Modifier public synchronized ReferenceType AttributeList getAttributes ReturnStatement MemberReference attributes	0
MethodDeclaration Modifier public FormalParameter ReferenceType String className StatementExpression Assignment This MemberReference className MemberReference className =	0
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator baseDir Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator nameAttributeSet Literal false LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation context getProject StatementExpression MethodInvocation context MethodInvocation ClassCreator ReferenceType Location MethodInvocation context getLocator setLocation getImplicitTarget ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attrUri MethodInvocation attrs MemberReference i getURI IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference attrUri Literal null MethodInvocation ! attrUri Literal "" equals MethodInvocation ! attrUri MemberReference uri equals BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attrs MemberReference i getLocalName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement MethodInvocation key Literal "default" equals BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation ! value Literal "" equals BlockStatement IfStatement MethodInvocation ! context isIgnoringProjectTag BlockStatement StatementExpression MethodInvocation project MemberReference value setDefault IfStatement MethodInvocation key Literal "name" equals BlockStatement IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation context MemberReference value setCurrentProjectName StatementExpression Assignment MemberReference nameAttributeSet Literal true = IfStatement MethodInvocation ! context isIgnoringProjectTag BlockStatement StatementExpression MethodInvocation project MemberReference value setName StatementExpression MethodInvocation project MemberReference value MemberReference project IfStatement MethodInvocation key Literal "id" equals BlockStatement IfStatement BinaryOperation != MemberReference value Literal null BlockStatement IfStatement MethodInvocation ! context isIgnoringProjectTag BlockStatement StatementExpression MethodInvocation project MemberReference value MemberReference project IfStatement MethodInvocation key Literal "basedir" equals BlockStatement IfStatement MethodInvocation ! context isIgnoringProjectTag BlockStatement StatementExpression Assignment MemberReference baseDir MemberReference value = BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected attribute \"" MethodInvocation attrs MemberReference i getQName Literal "\"" MethodInvocation context getLocator LocalVariableDeclaration ReferenceType String VariableDeclarator antFileProp BinaryOperation + Literal "ant.file." MethodInvocation context getCurrentProjectName LocalVariableDeclaration ReferenceType String VariableDeclarator dup MethodInvocation project MemberReference antFileProp getProperty IfStatement BinaryOperation && BinaryOperation != MemberReference dup Literal null MemberReference nameAttributeSet BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dupFile ClassCreator ReferenceType File MemberReference dup IfStatement BinaryOperation && MethodInvocation context isIgnoringProjectTag MethodInvocation ! dupFile MethodInvocation context getBuildFile equals BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Duplicated project name in import. Project " MethodInvocation context getCurrentProjectName Literal " defined first in " MemberReference dup Literal " and again in " MethodInvocation context getBuildFile MemberReference Project MSG_WARN log IfStatement BinaryOperation && BinaryOperation != MethodInvocation context getBuildFile Literal null MemberReference nameAttributeSet BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal "ant.file." MethodInvocation context getCurrentProjectName MethodInvocation context MethodInvocation toString getBuildFile setUserProperty IfStatement MethodInvocation context isIgnoringProjectTag BlockStatement ReturnStatement IfStatement BinaryOperation != MethodInvocation project Literal "basedir" getProperty Literal null BlockStatement StatementExpression MethodInvocation project MethodInvocation project Literal "basedir" getProperty setBasedir BlockStatement IfStatement BinaryOperation == MemberReference baseDir Literal null BlockStatement StatementExpression MethodInvocation project MethodInvocation context MethodInvocation getAbsolutePath getBuildFileParent setBasedir BlockStatement IfStatement ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference baseDir BlockStatement StatementExpression MethodInvocation project MemberReference baseDir setBasedir BlockStatement StatementExpression MethodInvocation project MethodInvocation FILE_UTILS MethodInvocation context getBuildFileParent MemberReference baseDir resolveFile setBaseDir StatementExpression MethodInvocation project Literal "" MethodInvocation context getImplicitTarget addTarget StatementExpression MethodInvocation context MethodInvocation context getImplicitTarget setCurrentTarget	1
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression MethodInvocation javaCommand MemberReference classname setExecutable StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public ReferenceType Factory createFactory BuildException IfStatement BinaryOperation != MemberReference factory Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal element must be unique" StatementExpression Assignment MemberReference factory ClassCreator ReferenceType Factory = ReturnStatement MemberReference factory	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Nothing to test for falsehood" ReturnStatement MethodInvocation ! value booleanValue	1
MethodDeclaration Modifier public setWorkingDirectory FormalParameter ReferenceType File wd StatementExpression Assignment MemberReference workingDirectory TernaryExpression BinaryOperation || BinaryOperation == MemberReference wd Literal null MethodInvocation wd MethodInvocation MemberReference antWorkingDirectory equals getAbsolutePath Literal null MemberReference wd =	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal configureProject StatementExpression Assignment MemberReference baseDir ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference TASKDEFS_DIR = StatementExpression Assignment MemberReference outDir ClassCreator ReferenceType File MemberReference baseDir Literal =	0
MethodDeclaration Modifier protected ReferenceType Commandline buildCmdLine LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation getLocalpath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "localPath attribute must be set!" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation getSSCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_ADD setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLocalpath setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getAutoresponse setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getWritable setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLogin setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "filesmatch-incomplete" Literal "Missing file2 attribute" Literal "both file1 and file2 are required in expectSpecificBuildException	0
MethodDeclaration Modifier public ReferenceType ZipShort getLocalFileDataLength ReturnStatement MemberReference NULL	0
MethodDeclaration Modifier protected ReferenceType Commandline buildCmdLine LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation getVsspath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attribute must be set!" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation getSSCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_CP setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getVsspath setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getAutoresponse setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLogin setValue createArgument ReturnStatement MemberReference commandLine	0
MethodDeclaration Modifier public setDir FormalParameter ReferenceType String d StatementExpression Assignment This MemberReference dir MethodInvocation MethodInvocation MemberReference d resolveFile getProject =	0
MethodDeclaration Modifier public addDepend FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier protected ReferenceType AbstractFileSet getInstance ReturnStatement ClassCreator ReferenceType TarFileSet	1
MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public BasicType boolean eval IfStatement BinaryOperation != MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "A single condition is required." ReturnStatement Cast ReferenceType Condition MethodInvocation getConditions	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType BuildException StatementExpression Assignment MemberReference classpath Cast ReferenceType MethodInvocation MethodInvocation getProject getReferencedObject =	1
MethodDeclaration Modifier public synchronized setEncoding FormalParameter ReferenceType String s StatementExpression Assignment MemberReference encoding MemberReference s =	0
MethodDeclaration Modifier public FormalParameter ReferenceType FormatElement e StatementExpression Assignment MemberReference format MethodInvocation e getFormat =	0
MethodDeclaration Modifier public testEmptyFile Exception StatementExpression MethodInvocation Literal MemberReference WARNING_EMPTY_FILE	0
MethodDeclaration Modifier public FormalParameter BasicType int w StatementExpression Assignment MemberReference arcwidth MemberReference w =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment This MemberReference to MethodInvocation to toCharArray =	1
MethodDeclaration Modifier private setPropertyFromBAOS FormalParameter ReferenceType ByteArrayOutputStream baos FormalParameter ReferenceType String propertyName IOException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType StringReader MethodInvocation Execute MemberReference baos toString LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator val ClassCreator ReferenceType StringBuffer WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation val length Literal 0 BlockStatement StatementExpression MethodInvocation val MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation val MemberReference line append StatementExpression MethodInvocation managingTask MethodInvocation MemberReference propertyName MethodInvocation val toString setNewProperty getProject	1
MethodDeclaration Modifier private writeValue FormalParameter ReferenceType PrintWriter writer FormalParameter ReferenceType String value IOException LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation name MemberReference length MemberReference getBytes IfStatement BinaryOperation > MemberReference MemberReference BlockStatement IfStatement BinaryOperation > MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to write manifest line " MemberReference name Literal ": " MemberReference value StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + MemberReference name Literal ": " MemberReference print StatementExpression Assignment MemberReference line BinaryOperation + Literal " " MemberReference value = BlockStatement StatementExpression Assignment MemberReference line BinaryOperation + BinaryOperation + MemberReference name Literal ": " MemberReference value = WhileStatement BinaryOperation > MethodInvocation line MemberReference length MemberReference getBytes MemberReference MAX_SECTION_LENGTH BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator breakIndex MemberReference MAX_SECTION_LENGTH IfStatement BinaryOperation >= MemberReference breakIndex MethodInvocation line length BlockStatement StatementExpression Assignment MemberReference breakIndex BinaryOperation - MethodInvocation line length Literal 1 = LocalVariableDeclaration ReferenceType String VariableDeclarator section MethodInvocation line Literal 0 MemberReference breakIndex substring WhileStatement BinaryOperation && BinaryOperation > MethodInvocation section MemberReference length MemberReference getBytes MemberReference MAX_SECTION_LENGTH BinaryOperation > MemberReference breakIndex Literal 0 BlockStatement StatementExpression MemberReference -- breakIndex StatementExpression Assignment MemberReference section MethodInvocation line Literal 0 MemberReference breakIndex substring = IfStatement BinaryOperation == MemberReference breakIndex Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to write manifest line " MemberReference name Literal ": " MemberReference value StatementExpression MethodInvocation writer BinaryOperation + MemberReference section MemberReference print StatementExpression Assignment MemberReference line BinaryOperation + Literal " " MethodInvocation line MemberReference breakIndex substring = StatementExpression MethodInvocation writer BinaryOperation + MemberReference line MemberReference print	0
MethodDeclaration Modifier public onTestEnded FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation MemberReference evt addElement	0
MethodDeclaration Modifier public startAnt FormalParameter ReferenceType String args FormalParameter ReferenceType Properties additionalUserProperties FormalParameter ReferenceType ClassLoader coreLoader TryStatement StatementExpression MethodInvocation Diagnostics validateVersion StatementExpression MethodInvocation MemberReference args processArgs CatchClause CatchClauseParameter Throwable exc StatementExpression MethodInvocation handleLogfile StatementExpression MethodInvocation MemberReference exc printMessage StatementExpression MethodInvocation Literal 1 exit ReturnStatement IfStatement BinaryOperation != MemberReference additionalUserProperties Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation additionalUserProperties keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator property MethodInvocation additionalUserProperties MemberReference key getProperty StatementExpression MethodInvocation definedProps MemberReference key MemberReference property put LocalVariableDeclaration BasicType int VariableDeclarator exitCode Literal 1 TryStatement TryStatement StatementExpression MethodInvocation MemberReference coreLoader runBuild StatementExpression Assignment MemberReference exitCode Literal 0 = CatchClause CatchClauseParameter ExitStatusException ese StatementExpression Assignment MemberReference exitCode MethodInvocation ese getStatus = IfStatement BinaryOperation != MemberReference exitCode Literal 0 BlockStatement ThrowStatement MemberReference ese CatchClause CatchClauseParameter BuildException be IfStatement BinaryOperation != MemberReference err MemberReference System err BlockStatement StatementExpression MethodInvocation MemberReference be printMessage CatchClause CatchClauseParameter Throwable exc StatementExpression MethodInvocation exc printStackTrace StatementExpression MethodInvocation MemberReference exc printMessage StatementExpression MethodInvocation handleLogfile StatementExpression MethodInvocation MemberReference exitCode exit	1
MethodDeclaration Modifier public setError FormalParameter ReferenceType error StatementExpression Assignment This MemberReference error MemberReference error =	0
MethodDeclaration Modifier private BasicType boolean isSplit FormalParameter ReferenceType String classname LocalVariableDeclaration ReferenceType String VariableDeclarator simplename MethodInvocation classname BinaryOperation + MethodInvocation classname Literal '.' lastIndexOf Literal 1 substring ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference splitClasses length MemberReference ++ i BlockStatement IfStatement BinaryOperation || MethodInvocation simplename MemberReference ArraySelector MemberReference i splitClasses equals MethodInvocation simplename BinaryOperation + MemberReference ArraySelector MemberReference i splitClasses Literal '$' startsWith BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter BasicType boolean optional StatementExpression Assignment This MemberReference optional MemberReference optional =	0
MethodDeclaration Modifier public testPath StatementExpression MethodInvocation Literal "path" Literal "types.Path" expectLogContaining	0
MethodDeclaration Modifier public setType FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count LocalVariableDeclaration ReferenceType String VariableDeclarator text ClassCreator ReferenceType String MemberReference buf MemberReference start MemberReference count LocalVariableDeclaration ReferenceType String VariableDeclarator currentDescription MethodInvocation helperImpl.project getDescription IfStatement BinaryOperation == MemberReference currentDescription Literal null BlockStatement StatementExpression MethodInvocation helperImpl.project MemberReference text setDescription BlockStatement StatementExpression MethodInvocation helperImpl.project BinaryOperation + MemberReference currentDescription MemberReference text setDescription	1
MethodDeclaration Modifier public addBean FormalParameter ReferenceType String key FormalParameter ReferenceType Object bean LocalVariableDeclaration BasicType boolean VariableDeclarator isValid BinaryOperation && BinaryOperation > MethodInvocation key length Literal 0 MethodInvocation Character MethodInvocation key Literal 0 charAt isJavaIdentifierStart ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation && MemberReference isValid BinaryOperation < MemberReference i MethodInvocation key length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference isValid MethodInvocation Character MethodInvocation key MemberReference i charAt isJavaIdentifierPart = IfStatement MemberReference isValid BlockStatement StatementExpression MethodInvocation beans MemberReference key MemberReference bean put	0
MethodDeclaration Modifier public inheritIDReferences FormalParameter ReferenceType Project parent StatementExpression Assignment MemberReference parentIdProject MemberReference parent =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator hasJar BinaryOperation != MemberReference jar Literal null IfStatement BinaryOperation && MemberReference ! hasJar MethodInvocation ! hasResources BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_NO_SOURCE StatementExpression MethodInvocation beginExecution LocalVariableDeclaration ReferenceType VariableDeclarator redirector MethodInvocation getRedirector StatementExpression MethodInvocation redirector Literal true setAlwaysLog LocalVariableDeclaration ReferenceType FilterChain VariableDeclarator outputFilterChain MethodInvocation redirector createOutputFilterChain StatementExpression MethodInvocation outputFilterChain MemberReference add TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator sources MethodInvocation createUnifiedSourcePath LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation sources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr Cast ReferenceType FileResource MethodInvocation iter next StatementExpression MethodInvocation MethodInvocation fr getFile verifyOneJar StatementExpression MethodInvocation endExecution	1
MethodDeclaration Modifier public setItalic FormalParameter BasicType boolean state StatementExpression Assignment MemberReference italic MemberReference state =	1
MethodDeclaration Modifier private static usage StatementExpression MethodInvocation System.out Literal "java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\" println StatementExpression MethodInvocation System.out Literal " [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]" println StatementExpression MethodInvocation System.out Literal "" println StatementExpression MethodInvocation System.out Literal "Where OPTIONS are:" println StatementExpression MethodInvocation System.out Literal " -debug -- for additional debugging output" println StatementExpression MethodInvocation System.out Literal " -keepsource -- to Java source files generated" println StatementExpression MethodInvocation System.out Literal " -classpath [classpath] -- classpath used for compilation" println StatementExpression MethodInvocation System.out Literal " -d [destination directory] -- directory for compiled classes" println StatementExpression MethodInvocation System.out Literal "" println StatementExpression MethodInvocation System.out Literal "If a classpath is not specified, the system classpath" println StatementExpression MethodInvocation System.out Literal "will be used. If a destination directory is not specified," println StatementExpression MethodInvocation System.out Literal "the current directory will be used (classes will" println StatementExpression MethodInvocation System.out Literal "still be placed in subfolders which correspond to their" println StatementExpression MethodInvocation System.out Literal "package name)." println StatementExpression MethodInvocation System.out Literal "" println StatementExpression MethodInvocation System.out Literal "The EJB home interface, remote interface, and println StatementExpression MethodInvocation System.out Literal "class must be found in the destination directory. In" println StatementExpression MethodInvocation System.out Literal "addition, the destination will look for the stubs and skeletons" println StatementExpression MethodInvocation System.out Literal "in the destination directory to ensure they are up to date." println	1
MethodDeclaration ReferenceType String getClassName ReturnStatement MethodInvocation test getName	0
MethodDeclaration Modifier public BasicType boolean isRecurse ReturnStatement MemberReference recurse	0
MethodDeclaration Modifier public BasicType boolean editsBlocked ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference in ReferenceType SimpleFilterReader Cast ReferenceType SimpleFilterReader MemberReference in	0
MethodDeclaration Modifier public static ReferenceType Color getColorByName FormalParameter ReferenceType String colorName StatementExpression Assignment MemberReference colorName MethodInvocation colorName toLowerCase = IfStatement MethodInvocation colorName MemberReference COLOR_BLACK equals BlockStatement ReturnStatement MemberReference Color black IfStatement MethodInvocation colorName MemberReference COLOR_BLUE equals BlockStatement ReturnStatement MemberReference Color blue IfStatement MethodInvocation colorName MemberReference COLOR_CYAN equals BlockStatement ReturnStatement MemberReference Color cyan IfStatement BinaryOperation || MethodInvocation colorName MemberReference COLOR_DARKGRAY equals MethodInvocation colorName MemberReference COLOR_DARKGREY equals BlockStatement ReturnStatement MemberReference Color darkGray IfStatement BinaryOperation || MethodInvocation colorName MemberReference COLOR_GRAY equals MethodInvocation colorName MemberReference COLOR_GREY equals BlockStatement ReturnStatement MemberReference Color gray IfStatement BinaryOperation || MethodInvocation colorName MemberReference COLOR_LIGHTGRAY equals MethodInvocation colorName MemberReference COLOR_LIGHTGREY equals BlockStatement ReturnStatement MemberReference Color IfStatement MethodInvocation colorName MemberReference COLOR_GREEN equals BlockStatement ReturnStatement MemberReference Color green IfStatement MethodInvocation colorName MemberReference COLOR_MAGENTA equals BlockStatement ReturnStatement MemberReference Color magenta IfStatement MethodInvocation colorName MemberReference COLOR_ORANGE equals BlockStatement ReturnStatement MemberReference Color orange IfStatement MethodInvocation colorName MemberReference COLOR_PINK equals BlockStatement ReturnStatement MemberReference Color pink IfStatement MethodInvocation colorName MemberReference COLOR_RED equals BlockStatement ReturnStatement MemberReference Color red IfStatement MethodInvocation colorName MemberReference COLOR_WHITE equals BlockStatement ReturnStatement MemberReference Color white IfStatement MethodInvocation colorName MemberReference COLOR_YELLOW equals BlockStatement ReturnStatement MemberReference Color yellow ReturnStatement MemberReference Color black	1
MethodDeclaration Modifier public setProcessErrorStream FormalParameter ReferenceType InputStream is IOException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference is LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation reader readLine IfStatement BinaryOperation != MemberReference s Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "err " MemberReference s MemberReference Project MSG_DEBUG log	1
MethodDeclaration Modifier public setParent FormalParameter ReferenceType ClassLoader parent IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement StatementExpression Assignment This MemberReference parent ClassReference MethodInvocation getClassLoader ReferenceType AntClassLoader = BlockStatement StatementExpression Assignment This MemberReference parent MemberReference parent =	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier private accountForIncludedDir FormalParameter ReferenceType String name FormalParameter ReferenceType File file FormalParameter BasicType boolean fast StatementExpression MethodInvocation MemberReference name MemberReference file MemberReference dirsIncluded MemberReference dirsExcluded MemberReference IfStatement BinaryOperation && BinaryOperation && MemberReference fast MethodInvocation MemberReference name couldHoldIncluded MethodInvocation ! MemberReference name contentsExcluded BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal JAR file" MemberReference VerifyJar expectBuildExceptionContaining	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter ReferenceType FilterSetCollection filters IOException StatementExpression MethodInvocation MemberReference sourceFile MemberReference destFile MemberReference filters Literal false Literal false copyFile	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" executeTarget StatementExpression MethodInvocation Literal MethodInvocation Literal Literal "filtered.tmp" assertEquals	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement BinaryOperation + BinaryOperation + TernaryExpression MemberReference Literal 1 Literal 0 TernaryExpression MemberReference haltOnError Literal 2 Literal 0 TernaryExpression MemberReference Literal 4 Literal 0	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource resource IfStatement MethodInvocation resource isFilesystemOnly BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fileResource Cast ReferenceType FileResource MemberReference resource LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation fileResource getFile LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation fileResource getName LocalVariableDeclaration ReferenceType File VariableDeclarator basedir MethodInvocation fileResource getBaseDir ReturnStatement MethodInvocation MemberReference basedir MemberReference filename MemberReference file isSelected BlockStatement TryStatement LocalVariableDeclaration ReferenceType FileUtils VariableDeclarator fu MethodInvocation FileUtils getFileUtils LocalVariableDeclaration ReferenceType File VariableDeclarator tmpFile MethodInvocation fu Literal "modified-" Literal ".tmp" Literal null createTempFile LocalVariableDeclaration ReferenceType Resource VariableDeclarator tmpResource ClassCreator ReferenceType FileResource MemberReference tmpFile StatementExpression MethodInvocation ResourceUtils MemberReference resource MemberReference tmpResource copyResource LocalVariableDeclaration BasicType boolean VariableDeclarator isSelected MethodInvocation MethodInvocation tmpFile getParentFile MethodInvocation tmpFile getName MethodInvocation resource toLongString isSelected StatementExpression MethodInvocation tmpFile delete ReturnStatement MemberReference isSelected CatchClause CatchClauseParameter UnsupportedOperationException uoe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The resource '" MethodInvocation resource getName Literal "' does not provide an InputStream, so it is not checked. " Literal "Akkording to 'selres' attribute value it is " TernaryExpression MemberReference selectResourcesWithoutInputStream Literal "" Literal " not" Literal "selected." MemberReference Project MSG_INFO log ReturnStatement MemberReference selectResourcesWithoutInputStream CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public handleInput FormalParameter ReferenceType InputRequest request BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator prompt MethodInvocation MemberReference request getPrompt LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator r Literal null TryStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation getInputStream = DoStatement MethodInvocation ! request isInputValid BlockStatement StatementExpression MethodInvocation System.err MemberReference prompt println StatementExpression MethodInvocation System.err flush TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator input MethodInvocation r readLine StatementExpression MethodInvocation request MemberReference input setInput CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to read input Literal " Console." MemberReference e IfStatement BinaryOperation != MemberReference r Literal null BlockStatement TryStatement StatementExpression MethodInvocation r close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Failed to close input." MemberReference e	1
MethodDeclaration Modifier public addDataTypeDefinition FormalParameter ReferenceType String typeName FormalParameter ReferenceType Class typeClass StatementExpression MethodInvocation ComponentHelper MethodInvocation MemberReference typeName MemberReference typeClass addDataTypeDefinition This getComponentHelper	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object foo FormalParameter ReferenceType Object bar ReturnStatement BinaryOperation * Cast ReferenceType Comparable MemberReference foo Literal - 1	0
MethodDeclaration Modifier public setParameters FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters setParameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator MethodInvocation longValue ReferenceType Long MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setValue CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression MethodInvocation BinaryOperation + Literal "Invalid size setting " MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setError IfStatement MethodInvocation UNITS_KEY MemberReference paramname equalsIgnoreCase BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator units ClassCreator ReferenceType StatementExpression MethodInvocation units MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setValue StatementExpression MethodInvocation MemberReference units setUnits IfStatement MethodInvocation WHEN_KEY MemberReference paramname equalsIgnoreCase BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator scmp ClassCreator ReferenceType StatementExpression MethodInvocation scmp MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setValue StatementExpression MethodInvocation MemberReference scmp setWhen BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public addCustom FormalParameter ReferenceType ExtendSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addCustom	1
MethodDeclaration Modifier private getCommentCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public init FormalParameter BasicType int op FormalParameter ReferenceType String src FormalParameter ReferenceType String dest FormalParameter BasicType long max StatementExpression Assignment MemberReference initFileSize MemberReference max = StatementExpression Assignment MemberReference totalLength Literal 0 = StatementExpression Assignment MemberReference percentTransmitted Literal 0 =	0
MethodDeclaration Modifier public ReferenceType String getObjselect ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType ScriptRunnerBase StatementExpression MethodInvocation initScriptRunner ReturnStatement MemberReference runner	0
MethodDeclaration Modifier public testOrder1 IOException ManifestException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation manifest LocalVariableDeclaration ReferenceType String VariableDeclarator section1 Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator section2 Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation Literal "First section name unexpected" Literal MemberReference section1 assertEquals StatementExpression MethodInvocation Literal "Second section name unexpected" Literal MemberReference section2 assertEquals LocalVariableDeclaration ReferenceType Manifest ReferenceType Section VariableDeclarator section MethodInvocation manifest Literal StatementExpression Assignment MemberReference e MethodInvocation section = LocalVariableDeclaration ReferenceType String VariableDeclarator attr1Key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator attr2Key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator attr1 MethodInvocation section MethodInvocation getName MemberReference attr1Key getAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator attr2 MethodInvocation section MethodInvocation getName MemberReference attr2Key getAttribute StatementExpression MethodInvocation Literal "First attribute name unexpected" Literal "TestAttr1" MemberReference attr1 assertEquals StatementExpression MethodInvocation Literal "Second attribute name unexpected" Literal "TestAttr2" MemberReference attr2 assertEquals	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one MethodInvocation getLocation StatementExpression Assignment MemberReference mapperElement ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference mapperElement	0
MethodDeclaration Modifier public BasicType int execute ReturnStatement Literal 0	0
MethodDeclaration Modifier protected setInternalLabel FormalParameter Modifier final ReferenceType String label StatementExpression Assignment This MemberReference label MemberReference label =	0
MethodDeclaration Modifier private BasicType char ReturnStatement MemberReference beginToken	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal "-verbose" addArgIf	0
MethodDeclaration Modifier public testEmpty StatementExpression MethodInvocation Literal "testEmpty" Literal "must fail" Literal "No XML specified" expectBuildExceptionContaining	0
MethodDeclaration Modifier public configure FormalParameter ReferenceType Object realObject StatementExpression Assignment MemberReference realThing MemberReference realObject = StatementExpression MethodInvocation MethodInvocation MemberReference realThing setProxy getWrapper LocalVariableDeclaration ReferenceType Task VariableDeclarator task Literal null IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Assignment MemberReference task Cast ReferenceType Task MemberReference realThing = StatementExpression MethodInvocation task MethodInvocation getWrapper IfStatement BinaryOperation != MethodInvocation MethodInvocation getId getWrapper Literal null BlockStatement StatementExpression This MethodInvocation getOwningTarget MethodInvocation This Cast ReferenceType Task MemberReference realThing IfStatement BinaryOperation != MemberReference task Literal null BlockStatement StatementExpression MethodInvocation task maybeConfigure BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getProject maybeConfigure getWrapper StatementExpression MethodInvocation MemberReference realThing MethodInvocation getWrapper handleChildren	1
MethodDeclaration Modifier public ReferenceType Boolean getPublic ReturnStatement MemberReference isPublic	0
MethodDeclaration Modifier public setDebug FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation helper MemberReference r setClasspathRef	0
MethodDeclaration Modifier public ReferenceType Hashtable getDataTypeDefinitions SynchronizedStatement MemberReference typeClassDefinitions SynchronizedStatement MemberReference antTypeTable IfStatement MemberReference rebuildTypeClassDefinitions BlockStatement StatementExpression MethodInvocation typeClassDefinitions clear ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation antTypeTable MethodInvocation iterator keySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation i next LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation antTypeTable MemberReference name getExposedClass IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ContinueStatement IfStatement ClassReference ! ReferenceType Task BlockStatement StatementExpression MethodInvocation typeClassDefinitions MemberReference name MethodInvocation antTypeTable MemberReference name getTypeClass put StatementExpression Assignment MemberReference rebuildTypeClassDefinitions Literal false = ReturnStatement MemberReference typeClassDefinitions	1
MethodDeclaration Modifier public ReferenceType OnMissing ReturnStatement MemberReference onMissingFiltersFile	0
MethodDeclaration Modifier protected processElement IfStatement MethodInvocation currentElement Literal "type-storage" equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fileNameWithMETA MemberReference currentText LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation fileNameWithMETA MethodInvocation META_DIR length MethodInvocation fileNameWithMETA length substring LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference srcDir MemberReference fileName StatementExpression MethodInvocation ejbFiles MemberReference fileNameWithMETA MemberReference descriptorFile put	1
MethodDeclaration Modifier public BasicType int getIncludedFilesCount IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation getIncludedFilesCount StatementExpression MethodInvocation scanme ReturnStatement MethodInvocation matchFileEntries size	1
MethodDeclaration Modifier private printHead FormalParameter ReferenceType PrintWriter out FormalParameter ReferenceType Enumeration tasks FormalParameter ReferenceType Enumeration types StatementExpression MethodInvocation out Literal "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>" println StatementExpression MethodInvocation out Literal "<!ENTITY % boolean println StatementExpression MethodInvocation out Literal "<!ENTITY % tasks \"" print LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation tasks hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tName Cast ReferenceType String MethodInvocation tasks nextElement IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation out Literal " | " print BlockStatement StatementExpression Assignment MemberReference first Literal false = StatementExpression MethodInvocation out MemberReference tName print StatementExpression MethodInvocation out Literal "\">" println StatementExpression MethodInvocation out Literal "<!ENTITY % types \"" print StatementExpression Assignment MemberReference first Literal true = WhileStatement MethodInvocation types hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator typeName Cast ReferenceType String MethodInvocation types nextElement IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation out Literal " | " print BlockStatement StatementExpression Assignment MemberReference first Literal false = StatementExpression MethodInvocation out MemberReference typeName print StatementExpression MethodInvocation out Literal "\">" println StatementExpression MethodInvocation out Literal "" println StatementExpression MethodInvocation out Literal "<!ELEMENT project | " print StatementExpression MethodInvocation out MemberReference TASKS print StatementExpression MethodInvocation out Literal " | " print StatementExpression MethodInvocation out MemberReference TYPES print StatementExpression MethodInvocation out Literal ")*>" println StatementExpression MethodInvocation out Literal "<!ATTLIST project" println StatementExpression MethodInvocation out Literal " name CDATA #IMPLIED" println StatementExpression MethodInvocation out Literal " default CDATA #IMPLIED" println StatementExpression MethodInvocation out Literal " basedir CDATA #IMPLIED>" println StatementExpression MethodInvocation out Literal "" println	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement BinaryOperation < MemberReference pos MemberReference array length	0
MethodDeclaration Modifier protected startProcess XDocletException LocalVariableDeclaration ReferenceType XJavaDoc VariableDeclarator xjd ClassCreator ReferenceType XJavaDoc StatementExpression MethodInvocation xjd Literal false StatementExpression MethodInvocation xjd StatementExpression SuperMethodInvocation startProcess	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" Literal "simpletask: worked" expectLog	0
MethodDeclaration Modifier public ReferenceType String getFailureProperty ReturnStatement MemberReference failureProperty	0
MethodDeclaration Modifier private appendExtraAttributes FormalParameter Modifier final ReferenceType Attributes attributes LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator iterator MethodInvocation extraAttributes iterator WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType ExtraAttribute VariableDeclarator attribute Cast ReferenceType ExtraAttribute MethodInvocation iterator next StatementExpression MethodInvocation attributes MethodInvocation attribute getName MethodInvocation attribute getValue putValue	0
MethodDeclaration Modifier public addMajority FormalParameter ReferenceType MajoritySelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addMajority	1
MethodDeclaration Modifier public BasicType boolean isLeadingPath FormalParameter ReferenceType File leading FormalParameter ReferenceType File path LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation MethodInvocation getAbsolutePath MethodInvocation leading getAbsolutePath normalize LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation MethodInvocation getAbsolutePath MethodInvocation path getAbsolutePath normalize IfStatement MethodInvocation l MemberReference p equals BlockStatement ReturnStatement Literal true IfStatement MethodInvocation ! l MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference l MemberReference File separator += ReturnStatement MethodInvocation p MemberReference l startsWith	0
MethodDeclaration Modifier public ReferenceType createBootclasspath ReturnStatement MethodInvocation MethodInvocation MethodInvocation getProject createBootclasspath MethodInvocation createPath getCommandLine	0
MethodDeclaration Modifier public write FormalParameter ReferenceType PrintWriter writer IOException StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + MemberReference ATTRIBUTE_MANIFEST_VERSION Literal ": " MemberReference manifestVersion MemberReference print LocalVariableDeclaration ReferenceType String VariableDeclarator signatureVersion MethodInvocation mainSection MemberReference ATTRIBUTE_SIGNATURE_VERSION getAttributeValue IfStatement BinaryOperation != MemberReference signatureVersion Literal null BlockStatement StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + MemberReference ATTRIBUTE_SIGNATURE_VERSION Literal ": " MemberReference signatureVersion MemberReference print StatementExpression MethodInvocation mainSection MemberReference ATTRIBUTE_SIGNATURE_VERSION removeAttribute StatementExpression MethodInvocation mainSection MemberReference writer write IfStatement BinaryOperation != MemberReference signatureVersion Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator svAttr ClassCreator ReferenceType Attribute MemberReference ATTRIBUTE_SIGNATURE_VERSION MemberReference signatureVersion StatementExpression MethodInvocation mainSection MemberReference svAttr addConfiguredAttribute CatchClause CatchClauseParameter ManifestException e LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation sectionIndex elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sectionName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Section VariableDeclarator section MethodInvocation MemberReference sectionName StatementExpression MethodInvocation section MemberReference writer write	1
MethodDeclaration Modifier public static ReferenceType ClassLoader getClassLoaderForPath FormalParameter ReferenceType Project p FormalParameter ReferenceType path FormalParameter ReferenceType String ReturnStatement MethodInvocation MemberReference p MemberReference path MemberReference Literal false getClassLoaderForPath	0
MethodDeclaration Modifier public setInheritrefs FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public testSelectionBehaviour LocalVariableDeclaration ReferenceType SizeSelector VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results LocalVariableDeclaration ReferenceType SizeSelector ReferenceType VariableDeclarator kilo ClassCreator ReferenceType SizeSelector ReferenceType StatementExpression MethodInvocation kilo Literal setValue LocalVariableDeclaration ReferenceType SizeSelector ReferenceType VariableDeclarator kibi ClassCreator ReferenceType SizeSelector ReferenceType StatementExpression MethodInvocation kibi Literal "Ki" setValue LocalVariableDeclaration ReferenceType SizeSelector ReferenceType VariableDeclarator tibi ClassCreator ReferenceType SizeSelector ReferenceType StatementExpression MethodInvocation tibi Literal "Ti" setValue LocalVariableDeclaration ReferenceType SizeSelector ReferenceType VariableDeclarator less ClassCreator ReferenceType SizeSelector ReferenceType StatementExpression MethodInvocation less Literal setValue LocalVariableDeclaration ReferenceType SizeSelector ReferenceType VariableDeclarator equal ClassCreator ReferenceType SizeSelector ReferenceType StatementExpression MethodInvocation equal Literal setValue LocalVariableDeclaration ReferenceType SizeSelector ReferenceType VariableDeclarator more ClassCreator ReferenceType SizeSelector ReferenceType StatementExpression MethodInvocation more Literal "more" setValue TryStatement StatementExpression MethodInvocation makeBed StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 10 setValue StatementExpression MethodInvocation s MemberReference less setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 10 setValue StatementExpression MethodInvocation s MemberReference more setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TTTTTTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 32 setValue StatementExpression MethodInvocation s MemberReference equal setWhen StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFFTFFFFFFT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 7 setValue StatementExpression MethodInvocation s MemberReference more setWhen StatementExpression MethodInvocation s MemberReference kilo setUnits StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFTFFTTTTTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 7 setValue StatementExpression MethodInvocation s MemberReference more setWhen StatementExpression MethodInvocation s MemberReference kibi setUnits StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFTFFFTTFTTT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal setValue StatementExpression MethodInvocation s MemberReference more setWhen StatementExpression MethodInvocation s MemberReference tibi setUnits StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType SizeSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param1 ClassCreator ReferenceType Parameter LocalVariableDeclaration ReferenceType Parameter VariableDeclarator ClassCreator ReferenceType Parameter LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param3 ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param1 Literal "value" setName StatementExpression MethodInvocation param1 Literal "20" setValue StatementExpression MethodInvocation Literal "units" setName StatementExpression MethodInvocation Literal "Ki" setValue StatementExpression MethodInvocation param3 Literal "when" setName StatementExpression MethodInvocation param3 Literal "more" setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayInitializer MemberReference param1 MemberReference MemberReference param3 StatementExpression MethodInvocation s MemberReference params setParameters StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression MethodInvocation cleanupBed	0
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier public setCommentFile FormalParameter ReferenceType String cfile StatementExpression Assignment MemberReference mCfile MemberReference cfile =	0
MethodDeclaration Modifier public ReferenceType Enumeration getValues ReturnStatement MethodInvocation values elements	0
MethodDeclaration Modifier synchronized protected connect IOException LocalVariableDeclaration ReferenceType URL VariableDeclarator u MethodInvocation getURL IfStatement BinaryOperation == MemberReference u Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "URL not set" IfStatement BinaryOperation == MemberReference conn Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference conn MethodInvocation u openConnection = StatementExpression MethodInvocation conn connect CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_ERR log StatementExpression Assignment MemberReference conn Literal null = ThrowStatement MemberReference e	0
MethodDeclaration Modifier private setupExecutable FormalParameter ReferenceType Execute exe FormalParameter ReferenceType String command StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation MemberReference exe setupWorkingDir StatementExpression MethodInvocation MemberReference exe setupEnvironment StatementExpression MethodInvocation MemberReference exe MemberReference command setupCommandLine	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference references MemberReference s =	0
MethodDeclaration Modifier public ReferenceType Set entrySet LocalVariableDeclaration ReferenceType Set VariableDeclarator result SuperMethodInvocation entrySet IfStatement MethodInvocation JavaEnvUtils isKaffe BlockStatement LocalVariableDeclaration ReferenceType TreeSet VariableDeclarator t ClassCreator ReferenceType TreeSet ClassCreator ReferenceType Comparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String Cast ReferenceType Map ReferenceType Entry MemberReference o1 LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String Cast ReferenceType Map ReferenceType Entry MemberReference o2 ReturnStatement MethodInvocation MemberReference compareTo StatementExpression MethodInvocation t MemberReference result addAll StatementExpression Assignment MemberReference result MemberReference t = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression MethodInvocation helper MemberReference classpath setClasspath	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String p StatementExpression Assignment MemberReference property MemberReference p =	0
MethodDeclaration Modifier private static ReferenceType String getNamespaceURI FormalParameter ReferenceType Node n LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation n getNamespaceURI IfStatement BinaryOperation == MemberReference uri Literal null BlockStatement StatementExpression Assignment MemberReference uri Literal "" = ReturnStatement MemberReference uri	1
MethodDeclaration Modifier private static concatDescriptions FormalParameter ReferenceType Project project FormalParameter ReferenceType Target t FormalParameter ReferenceType StringBuffer description IfStatement BinaryOperation == MemberReference t Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator tasks MethodInvocation MemberReference project MemberReference t Literal "description" findElementInTarget IfStatement BinaryOperation == MemberReference tasks Literal null BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tasks size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MethodInvocation tasks MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference task ReferenceType UnknownElement BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue Cast ReferenceType UnknownElement MemberReference task LocalVariableDeclaration ReferenceType String VariableDeclarator descComp MethodInvocation ue MethodInvocation getText MethodInvocation toString getWrapper IfStatement BinaryOperation != MemberReference descComp Literal null BlockStatement StatementExpression MethodInvocation description MethodInvocation project MemberReference descComp replaceProperties append	1
MethodDeclaration Modifier public setTen FormalParameter ReferenceType File f LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation f getAbsolutePath IfStatement BinaryOperation || MethodInvocation Os Literal "unix" isFamily MethodInvocation Os Literal "openvms" isFamily BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference projectBasedir Literal "2" MemberReference path assertEquals IfStatement MethodInvocation Os Literal "netware" isFamily BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference projectBasedir Literal "2" MethodInvocation path MemberReference Locale US toLowerCase assertEquals BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal ":" MemberReference projectBasedir Literal "2" MethodInvocation path MethodInvocation Literal 1 substring MemberReference Locale US toLowerCase assertEquals	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "{depthselector min: " StatementExpression MethodInvocation buf MemberReference min append StatementExpression MethodInvocation buf Literal " max: " append StatementExpression MethodInvocation buf MemberReference max append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public setEnd FormalParameter Modifier final ReferenceType Date endDate StatementExpression Assignment This MemberReference endDate MemberReference endDate =	0
MethodDeclaration Modifier public flush IOException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out IfStatement BinaryOperation != MemberReference outShadow Literal null BlockStatement StatementExpression MethodInvocation outShadow flush	1
MethodDeclaration Modifier public FormalParameter ReferenceType String groupName StatementExpression Assignment This MemberReference groupName ClassCreator ReferenceType StringBuffer MemberReference groupName =	0
MethodDeclaration Modifier public BasicType int getColumnNumber ReturnStatement MemberReference columnNumber	0
MethodDeclaration Modifier public testConstructorNetWareStyle LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal "sys:\\test" LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list IfStatement MemberReference isUnixStyle BlockStatement StatementExpression MethodInvocation Literal "no drives on Unix" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "/sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "/test" MemberReference ArraySelector Literal 1 l assertEquals IfStatement MemberReference isNetWare BlockStatement StatementExpression MethodInvocation Literal "sys:\\test" MemberReference ArraySelector Literal 0 MethodInvocation MemberReference Locale US toLowerCase l assertEquals StatementExpression MethodInvocation Literal "volumes on NetWare" Literal 1 MemberReference l length assertEquals BlockStatement StatementExpression MethodInvocation Literal "no multiple character-length volumes on Windows" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "\\sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "test to project\'s basedir" MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference isUnixStyle BlockStatement StatementExpression MethodInvocation Literal "no drives on Unix" Literal 4 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "/sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "/test" MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal "dev to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal "/dev" endsWith l assertTrue StatementExpression MethodInvocation Literal "/temp" MemberReference ArraySelector Literal 3 l assertEquals IfStatement MemberReference isNetWare BlockStatement StatementExpression MethodInvocation Literal "volumes on NetWare" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys:\\test" MemberReference ArraySelector Literal 0 MethodInvocation MemberReference Locale US toLowerCase l assertEquals StatementExpression MethodInvocation Literal "dev:\\temp" MemberReference ArraySelector Literal 1 MethodInvocation MemberReference Locale US toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal "no multiple character-length volumes on Windows" Literal 4 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "\\sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "test to project\'s basedir" MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal "dev to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal "\\dev" endsWith l assertTrue StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 3 MethodInvocation Literal "\\temp" endsWith l assertTrue StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference isUnixStyle BlockStatement StatementExpression MethodInvocation Literal "no drives on Unix" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "/sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "/test" MemberReference ArraySelector Literal 1 l assertEquals IfStatement MemberReference isNetWare BlockStatement StatementExpression MethodInvocation Literal "volumes on NetWare" Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys:\\test" MemberReference ArraySelector Literal 0 MethodInvocation MemberReference Locale US toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal "no multiple character-length volumes on Windows" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "\\sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "test to project\'s basedir" MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference isUnixStyle BlockStatement StatementExpression MethodInvocation Literal "no drives on Unix" Literal 4 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "/sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "/test" MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal "dev to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal "/dev" endsWith l assertTrue StatementExpression MethodInvocation Literal "/temp" MemberReference ArraySelector Literal 3 l assertEquals IfStatement MemberReference isNetWare BlockStatement StatementExpression MethodInvocation Literal "volumes on NetWare" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys:\\test" MemberReference ArraySelector Literal 0 MethodInvocation MemberReference Locale US toLowerCase l assertEquals StatementExpression MethodInvocation Literal "dev:\\temp" MemberReference ArraySelector Literal 1 MethodInvocation MemberReference Locale US toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal "no multiple character-length volumes on Windows" Literal 4 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal "\\sys" endsWith l assertTrue StatementExpression MethodInvocation Literal "test to project\'s basedir" MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal "dev to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal "\\dev" endsWith l assertTrue StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 3 MethodInvocation Literal "\\temp" endsWith l assertTrue StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference isUnixStyle BlockStatement StatementExpression MethodInvocation Literal "no drives on Unix" Literal 3 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 2 l assertEquals IfStatement MemberReference isNetWare BlockStatement StatementExpression MethodInvocation Literal "volumes on NetWare" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference Locale US toLowerCase l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 MethodInvocation MemberReference Locale US toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal "no multiple character-length volumes on Windows" Literal 3 MemberReference l length assertEquals StatementExpression MethodInvocation Literal "sys to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal endsWith l assertTrue	0
MethodDeclaration Modifier public setCompiler FormalParameter ReferenceType String compiler StatementExpression Assignment This MemberReference MemberReference compiler =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean nodeDefaultVoid StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference nodeDefaultVoid MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public FormalParameter BasicType boolean enabled StatementExpression Assignment MemberReference noconfig MemberReference enabled =	0
MethodDeclaration Modifier public setHeight FormalParameter BasicType int h StatementExpression Assignment MemberReference height MemberReference h =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String deleteChars StatementExpression Assignment This MemberReference deleteChars MethodInvocation MemberReference deleteChars =	0
MethodDeclaration Modifier public testXmlCatalogFiles StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected BasicType boolean assumeJava16 ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "javac1.6" BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "classic" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_6 isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "modern" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_6 isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "extJavac" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_6 isJavaVersion	1
MethodDeclaration Modifier public test10 StatementExpression MethodInvocation Literal "test10" Literal "Attribute has no name" Literal "Attributes must have name and value" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType DateFormat ReturnStatement ClassCreator ReferenceType SimpleDateFormat MemberReference pattern	0
MethodDeclaration Modifier public FormalParameter ReferenceType DirSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj This BlockStatement ReturnStatement Literal true IfStatement BinaryOperation || BinaryOperation == MemberReference obj Literal null MethodInvocation ! obj MethodInvocation MethodInvocation getClass equals getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType TemplateElement VariableDeclarator t Cast ReferenceType TemplateElement MemberReference obj ReturnStatement BinaryOperation && BinaryOperation && TernaryExpression BinaryOperation == MemberReference name Literal null BinaryOperation == MemberReference t name Literal null MethodInvocation name MemberReference t name equals BinaryOperation == MemberReference optional MemberReference t optional BinaryOperation == MemberReference implicit MemberReference t implicit	1
MethodDeclaration Modifier public BasicType boolean isSymbolicLink FormalParameter ReferenceType File parent FormalParameter ReferenceType String name IOException IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference name StatementExpression Assignment MemberReference parent MethodInvocation f getParentFile = StatementExpression Assignment MemberReference name MethodInvocation f getName = LocalVariableDeclaration ReferenceType File VariableDeclarator toTest ClassCreator ReferenceType File MethodInvocation parent getCanonicalPath MemberReference name ReturnStatement MethodInvocation ! toTest MethodInvocation MethodInvocation toTest getCanonicalPath equals getAbsolutePath	0
MethodDeclaration Modifier private getCommentFileCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENTFILE setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public BasicType int intValue ReturnStatement MethodInvocation value intValue	0
MethodDeclaration Modifier public testDirectoryHierarchyWithDirMatching Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation exists MethodInvocation MethodInvocation getBaseDir getProject Literal "out/dest/level1/data.html" resolveFile assertTrue	0
MethodDeclaration * ask for authentication details. An empty string means 'no * @return an RFC2617 auth */ Modifier protected ReferenceType String getAuthenticationString IfStatement BinaryOperation && BinaryOperation == MemberReference authType MemberReference AUTH_BASIC BinaryOperation != MemberReference username Literal null BlockStatement StatementExpression Assignment MemberReference password TernaryExpression BinaryOperation == MemberReference password Literal null Literal "" MemberReference password = LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MemberReference username Literal ":" MemberReference password LocalVariableDeclaration ReferenceType VariableDeclarator encoder ClassCreator ReferenceType LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation encoder MethodInvocation getBytes encodeBase64 LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + Literal " ClassCreator ReferenceType String MemberReference ReturnStatement MemberReference BlockStatement ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType Socket s StatementExpression MethodInvocation conditions MemberReference s addElement	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration BasicType byte VariableDeclarator bytes Literal MethodInvocation Literal "utf-16" getBytes "" StatementExpression MethodInvocation System.out BinaryOperation + Literal len is " MemberReference bytes length println	0
MethodDeclaration Modifier public testBlankTarget StatementExpression MethodInvocation Literal "blank-target" Literal "target name must not be empty" expectBuildException	0
MethodDeclaration Modifier public testResource StatementExpression MethodInvocation Literal "realTestWithResource" executeTarget	0
MethodDeclaration Modifier protected ReferenceType Enumeration LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation testCollectors size LocalVariableDeclaration Modifier final ReferenceType Enumeration VariableDeclarator tests ArrayCreator ReferenceType Enumeration MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType TestCollector VariableDeclarator te Cast ReferenceType TestCollector MethodInvocation testCollectors MemberReference i get StatementExpression Assignment MemberReference ArraySelector MemberReference i tests MethodInvocation te = ReturnStatement ClassCreator ReferenceType CompoundEnumeration MemberReference tests	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference includes setIncludes	1
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal testLogoExtraction	0
MethodDeclaration Modifier public setLinkedFile FormalParameter ReferenceType String name StatementExpression Assignment MemberReference link MemberReference name = StatementExpression Assignment MemberReference mode MethodInvocation MemberReference mode getMode =	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public setImplementation FormalParameter ReferenceType String impl IfStatement Literal MethodInvocation MemberReference impl equals "default" BlockStatement StatementExpression MethodInvocation facade MethodInvocation JavahAdapterFactory getDefault setImplementation BlockStatement StatementExpression MethodInvocation facade MemberReference impl setImplementation	0
MethodDeclaration Modifier public testProperty StatementExpression MethodInvocation Literal "property" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal "Expecting property in attribute value replaced" BinaryOperation != MethodInvocation log Literal "Attribute value = test" indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public addFileset FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public ReferenceType String getToken ReturnStatement MemberReference token	0
MethodDeclaration Modifier public execute BuildException IfStatement MemberReference doubleFilePass BlockStatement StatementExpression Assignment MemberReference skipWriting Literal true = StatementExpression MethodInvocation executeMain StatementExpression Assignment MemberReference skipWriting Literal false = StatementExpression MethodInvocation executeMain BlockStatement StatementExpression MethodInvocation executeMain	1
MethodDeclaration Modifier public ReferenceType String getAddress SecurityException UnknownHostException ReturnStatement MethodInvocation MethodInvocation getHostAddress getLocalHostAddress	0
MethodDeclaration Modifier public ReferenceType Object createComponent FormalParameter ReferenceType UnknownElement ue FormalParameter ReferenceType String ns FormalParameter ReferenceType String componentType BuildException LocalVariableDeclaration ReferenceType Object VariableDeclarator component MethodInvocation MemberReference componentType createComponent IfStatement BinaryOperation instanceof MemberReference component ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MemberReference component StatementExpression MethodInvocation task MethodInvocation ue getLocation setLocation StatementExpression MethodInvocation task MemberReference componentType setTaskType StatementExpression MethodInvocation task MethodInvocation ue getTaskName setTaskName StatementExpression MethodInvocation task MethodInvocation ue getOwningTarget setOwningTarget StatementExpression MethodInvocation task init ReturnStatement MemberReference component	1
MethodDeclaration Modifier public FormalParameter BasicType boolean attr StatementExpression Assignment MemberReference use35MappingRules MemberReference attr =	0
MethodDeclaration Modifier public testProhibitSymlinks IfStatement MemberReference ! supportsSymlinks BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal "symlink-setup" executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/" setIncludes StatementExpression MethodInvocation ds Literal false setFollowSymlinks StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier private ReferenceType String toURL FormalParameter ReferenceType File fileToConvert LocalVariableDeclaration ReferenceType String VariableDeclarator url StatementExpression Assignment MemberReference url MethodInvocation FileUtils MethodInvocation MethodInvocation fileToConvert getAbsolutePath toURI getFileUtils = ReturnStatement MemberReference url	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/import/subdir/importintarget.xml" configureProject StatementExpression MethodInvocation Literal Literal "foo" expectPropertyUnset StatementExpression MethodInvocation BinaryOperation == Literal null MethodInvocation MethodInvocation Literal "baz" getReference getProject assertTrue	0
MethodDeclaration Modifier public ReferenceType String getProperty FormalParameter ReferenceType String propertyName LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator ph MethodInvocation PropertyHelper This getPropertyHelper ReturnStatement Cast ReferenceType String MethodInvocation ph Literal null MemberReference propertyName getProperty	0
MethodDeclaration Modifier private handleTarget FormalParameter ReferenceType String tag FormalParameter ReferenceType AttributeList attrs SAXParseException StatementExpression ClassCreator MethodInvocation MemberReference tag MemberReference attrs init ReferenceType TargetHandler MemberReference helperImpl This	1
MethodDeclaration Modifier public setArg1 FormalParameter ReferenceType String a1 StatementExpression Assignment MemberReference arg1 MemberReference a1 =	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String language StatementExpression Assignment This MemberReference language MemberReference language =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection a StatementExpression MethodInvocation resources MemberReference a add	0
MethodDeclaration Modifier private ReferenceType String getOpType IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement MethodInvocation BlockStatement ReturnStatement MethodInvocation getObjselect	0
MethodDeclaration Modifier public static BasicType boolean isOutOfDate FormalParameter ReferenceType File src FormalParameter ReferenceType File target FormalParameter BasicType int granularity IfStatement MethodInvocation ! src exists BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! target exists BlockStatement ReturnStatement Literal true IfStatement BinaryOperation > BinaryOperation - MethodInvocation src lastModified MemberReference granularity MethodInvocation target lastModified BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType String getFileExtension ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference setInternalComment	0
MethodDeclaration Modifier private overrideProperties BuildException LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation properties size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Property MethodInvocation properties MemberReference i get IfStatement BinaryOperation && BinaryOperation != MethodInvocation p getName Literal null MethodInvocation ! p MethodInvocation Literal "" equals getName BlockStatement IfStatement MethodInvocation set MethodInvocation p getName contains BlockStatement StatementExpression MethodInvocation properties MemberReference i remove BlockStatement StatementExpression MethodInvocation set MethodInvocation p getName add LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation properties elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Property MethodInvocation e nextElement StatementExpression MethodInvocation p MemberReference newProject setProject StatementExpression MethodInvocation p execute StatementExpression MethodInvocation MethodInvocation MemberReference newProject copyInheritedProperties getProject	0
MethodDeclaration Modifier protected addClasspathEntry FormalParameter ReferenceType String resource IfStatement MethodInvocation resource Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference resource MethodInvocation resource Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference resource BinaryOperation + Literal MemberReference resource = LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation MethodInvocation getClassLoader getClass MemberReference resource IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found " MethodInvocation f getAbsolutePath MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MethodInvocation MemberReference f setLocation createClasspath BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Couldn\'t find " MemberReference resource MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier protected execP4Command FormalParameter ReferenceType String command FormalParameter ReferenceType P4Handler handler BuildException TryStatement StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference errorMessage Literal "" = LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandline ClassCreator ReferenceType Commandline StatementExpression MethodInvocation commandline Literal "p4" setExecutable IfStatement BinaryOperation && BinaryOperation != MemberReference P4Port Literal null BinaryOperation != MethodInvocation P4Port length Literal 0 BlockStatement StatementExpression MethodInvocation commandline MethodInvocation MemberReference P4Port setValue createArgument IfStatement BinaryOperation && BinaryOperation != MemberReference P4User Literal null BinaryOperation != MethodInvocation P4User length Literal 0 BlockStatement StatementExpression MethodInvocation commandline MethodInvocation MemberReference P4User setValue createArgument IfStatement BinaryOperation && BinaryOperation != MemberReference P4Client Literal null BinaryOperation != MethodInvocation P4Client length Literal 0 BlockStatement StatementExpression MethodInvocation commandline MethodInvocation MemberReference P4Client setValue createArgument IfStatement BinaryOperation && BinaryOperation != MemberReference P4Opts Literal null BinaryOperation != MethodInvocation P4Opts length Literal 0 BlockStatement StatementExpression MethodInvocation commandline MethodInvocation MemberReference P4Opts setLine createArgument StatementExpression MethodInvocation commandline MethodInvocation MemberReference command setLine createArgument StatementExpression MethodInvocation MethodInvocation commandline describeCommand MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation == MemberReference handler Literal null BlockStatement StatementExpression Assignment MemberReference handler ClassCreator ReferenceType SimpleP4OutputHandler This = LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference handler Literal null StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation exe MethodInvocation commandline getCommandline setCommandline TryStatement StatementExpression MethodInvocation exe execute IfStatement BinaryOperation && MemberReference MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference errorMessage CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e TryStatement StatementExpression MethodInvocation handler stop CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_ERR log CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator failMsg BinaryOperation + Literal "Problem exec'ing P4 command: " MethodInvocation e getMessage IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference failMsg BlockStatement StatementExpression MethodInvocation MemberReference failMsg MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public synchronized BasicType boolean isCache ReturnStatement MethodInvocation w isCache	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "antlib.file" Literal "MyTask expectLog	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer Literal "soscmd" Literal "-command" Literal Literal "-server" MemberReference SOS_SERVER_PATH Literal "-name" MemberReference SOS_USERNAME Literal "-password" Literal "" Literal "-database" MemberReference VSS_SERVER_PATH Literal "-project" MemberReference DS_VSS_PROJECT_PATH Literal "-label" MemberReference SRC_LABEL Literal "-verbose" Literal "-log" MemberReference SRC_COMMENT LocalVariableDeclaration ReferenceType SOSLabel VariableDeclarator sosLabel ClassCreator ReferenceType SOSLabel StatementExpression MethodInvocation sosLabel MemberReference VSS_SERVER_PATH setVssServerPath StatementExpression MethodInvocation sosLabel MemberReference SOS_SERVER_PATH setSosServerPath StatementExpression MethodInvocation sosLabel MemberReference DS_VSS_PROJECT_PATH setProjectPath StatementExpression MethodInvocation sosLabel MemberReference SOS_USERNAME setUsername StatementExpression MethodInvocation sosLabel MemberReference SOS_HOME setSosHome StatementExpression MethodInvocation sosLabel MemberReference SRC_COMMENT StatementExpression MethodInvocation sosLabel MemberReference SRC_LABEL StatementExpression MethodInvocation sosLabel Literal true setNoCache StatementExpression MethodInvocation sosLabel Literal false setNoCompress StatementExpression MethodInvocation sosLabel Literal true setVerbose StatementExpression Assignment MemberReference commandline MethodInvocation sosLabel buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier private getCommentFileCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENTFILE setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public test6 LocalVariableDeclaration ReferenceType Timer VariableDeclarator timer ClassCreator ReferenceType Timer StatementExpression MethodInvocation Literal "test6" executeTarget StatementExpression MethodInvocation timer stop IfStatement MemberReference TRACE StatementExpression MethodInvocation System.out BinaryOperation + Literal " test6 time=" MethodInvocation timer time println StatementExpression MethodInvocation BinaryOperation < MethodInvocation timer time Literal 2000 assertTrue	1
MethodDeclaration Modifier public synchronized ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef IfStatement BinaryOperation == MethodInvocation MethodInvocation size cacheCollection Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation coll iterator MethodInvocation i hasNext BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb MemberReference File pathSeparatorChar append StatementExpression MethodInvocation sb MethodInvocation i next append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public setAccount FormalParameter ReferenceType String pAccount StatementExpression Assignment This MemberReference account MemberReference pAccount =	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true setInitialized LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation line Literal 0 charAt = IfStatement BinaryOperation == MethodInvocation line length Literal 1 BlockStatement StatementExpression Assignment MemberReference line Literal null = BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line Literal 1 substring = BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator regexpsSize MethodInvocation regexps size ForStatement ForControl Assignment MemberReference line MethodInvocation readLine = BinaryOperation != MemberReference line Literal null Assignment MemberReference line MethodInvocation readLine = BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator matches Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && MemberReference matches BinaryOperation < MemberReference i MemberReference regexpsSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RegularExpression VariableDeclarator regexp Cast ReferenceType RegularExpression MethodInvocation regexps MemberReference i elementAt LocalVariableDeclaration ReferenceType Regexp VariableDeclarator re MethodInvocation regexp MethodInvocation getProject StatementExpression Assignment MemberReference matches MethodInvocation re MemberReference line matches = IfStatement BinaryOperation ^ MemberReference matches MethodInvocation isNegated BlockStatement BreakStatement IfStatement BinaryOperation != MemberReference line Literal null BlockStatement ReturnStatement MethodInvocation read ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public setExcludes FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType String VariableDeclarator destfiles MethodInvocation map MemberReference filename mapFileName IfStatement BinaryOperation == MemberReference destfiles Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation != MemberReference destfiles length Literal 1 BinaryOperation == MemberReference ArraySelector Literal 0 destfiles Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Invalid destination file results for " MethodInvocation targetdir getName Literal " with filename " MemberReference filename LocalVariableDeclaration ReferenceType String VariableDeclarator destname MemberReference ArraySelector Literal 0 destfiles LocalVariableDeclaration ReferenceType File VariableDeclarator destfile ClassCreator ReferenceType File MemberReference targetdir MemberReference destname LocalVariableDeclaration BasicType boolean VariableDeclarator selected MethodInvocation MemberReference file MemberReference destfile selectionTest ReturnStatement MemberReference selected	1
MethodDeclaration Modifier protected ReferenceType OutputStream getErr ReturnStatement MemberReference err	0
MethodDeclaration Modifier protected ReferenceType String getListingParameter IfStatement MemberReference ! isMono BlockStatement ReturnStatement TernaryExpression MemberReference listing Literal Literal ReturnStatement Literal null	0
MethodDeclaration Modifier public setOptions FormalParameter ReferenceType String options StatementExpression Assignment MemberReference cmdOptions MemberReference options =	0
MethodDeclaration Modifier public sendString FormalParameter ReferenceType String s FormalParameter BasicType boolean echoString LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os This MethodInvocation getOutputStream TryStatement StatementExpression MethodInvocation os BinaryOperation + MemberReference s Literal "\n" write IfStatement MemberReference echoString BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference Project MSG_INFO log StatementExpression MethodInvocation os flush CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType Properties getProperties ReturnStatement MemberReference props	0
MethodDeclaration Modifier public static BasicType long getValue FormalParameter BasicType byte bytes ReturnStatement MethodInvocation MemberReference bytes Literal 0 getValue	0
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class argType1 FormalParameter ReferenceType Object arg1 FormalParameter ReferenceType Class argType2 FormalParameter ReferenceType Object arg2 ReturnStatement MethodInvocation ReflectUtil MemberReference obj MemberReference methodName MemberReference argType1 MemberReference arg1 MemberReference argType2 MemberReference arg2 invoke	0
MethodDeclaration Modifier final static protected grabFilesAndDirs FormalParameter ReferenceType String file FormalParameter ReferenceType List dirs FormalParameter ReferenceType List files IOException LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType zip ReferenceType ZipFile VariableDeclarator zf Literal null TryStatement StatementExpression Assignment MemberReference zf ClassCreator ReferenceType org ReferenceType apache ReferenceType tools ReferenceType zip ReferenceType ZipFile MemberReference file Literal "utf-8" = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator entries MethodInvocation zf getEntries LocalVariableDeclaration ReferenceType HashSet VariableDeclarator dirSet ClassCreator ReferenceType HashSet WhileStatement MethodInvocation entries hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType zip ReferenceType ZipEntry VariableDeclarator ze Cast ReferenceType org ReferenceType apache ReferenceType tools ReferenceType zip ReferenceType ZipEntry MethodInvocation entries nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation ze getName IfStatement MethodInvocation ! name Literal "META-INF/" startsWith BlockStatement IfStatement MethodInvocation ze isDirectory BlockStatement StatementExpression MethodInvocation dirSet MemberReference name add IfStatement BinaryOperation == MethodInvocation name Literal "/" indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation files MemberReference name add BlockStatement StatementExpression MethodInvocation dirSet MethodInvocation name Literal 0 BinaryOperation + MethodInvocation name Literal "/" lastIndexOf Literal 1 substring add StatementExpression MethodInvocation dirs MemberReference dirSet addAll IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement StatementExpression MethodInvocation zf close	1
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation getReplace BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_REPLACE setValue createArgument IfStatement MethodInvocation getRecurse BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_RECURSE setValue createArgument IfStatement BinaryOperation != MethodInvocation getVersion Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getVersionCommand IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentCommand BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentFileCommand BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NOCOMMENT setValue createArgument IfStatement BinaryOperation != MethodInvocation getTypeName Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getTypeCommand IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getTypeValueCommand StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier protected BasicType boolean isTestClass FormalParameter ReferenceType String ReturnStatement MethodInvocation Literal ".class" endsWith	0
MethodDeclaration Modifier protected ReferenceType String getOutputFileParameter IfStatement BinaryOperation == MemberReference outputFile Literal null BlockStatement ReturnStatement Literal null ReturnStatement BinaryOperation + Literal MethodInvocation outputFile toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType String path StatementExpression MethodInvocation cmd MethodInvocation Literal "-extdirs" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference path setValue createArgument	1
MethodDeclaration Modifier public setDate FormalParameter ReferenceType String p IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null BinaryOperation > MethodInvocation p MethodInvocation length trim Literal 0 BlockStatement StatementExpression MethodInvocation Literal "-D" addCommandArgument StatementExpression MethodInvocation MemberReference p addCommandArgument	0
MethodDeclaration Modifier protected ReferenceType Thread createPump FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter BasicType boolean closeWhenExhausted LocalVariableDeclaration Modifier final ReferenceType Thread VariableDeclarator result ClassCreator ReferenceType Thread ClassCreator ReferenceType StreamPumper MemberReference is MemberReference os MemberReference closeWhenExhausted StatementExpression MethodInvocation result Literal true setDaemon ReturnStatement MemberReference result	0
MethodDeclaration Modifier public addMessage FormalParameter ReferenceType Message message BuildException IfStatement BinaryOperation != This MemberReference message Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one message can be sent in an email" StatementExpression Assignment This MemberReference message MemberReference message =	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference sourcesPath Literal null BlockStatement StatementExpression Assignment MemberReference sourcesPath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation sourcesPath createPath	0
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier public ReferenceType String diff FormalParameter ReferenceType String expected FormalParameter ReferenceType String result LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation expected length LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation result length LocalVariableDeclaration BasicType int VariableDeclarator min TernaryExpression BinaryOperation > MemberReference MemberReference MemberReference MemberReference LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference min MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb TernaryExpression BinaryOperation == MethodInvocation expected MemberReference i charAt MethodInvocation result MemberReference i charAt Literal "-" Literal "X" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Vector getGroups FormalParameter ReferenceType String argument BuildException ReturnStatement MethodInvocation MemberReference argument MemberReference MATCH_DEFAULT getGroups	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "MyTask expectLog	0
MethodDeclaration Modifier public ReferenceType String getObjselect ReturnStatement MethodInvocation getObjSelect	0
MethodDeclaration Modifier public setText FormalParameter BasicType boolean StatementExpression MethodInvocation optionalAttrs MemberReference TEXT TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private getPnameCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_PNAME setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	1
MethodDeclaration Modifier public ReferenceType ScriptRunnerBase createRunner FormalParameter ReferenceType String manager FormalParameter ReferenceType String language FormalParameter ReferenceType ClassLoader classLoader StatementExpression Assignment This MemberReference manager MemberReference manager = StatementExpression Assignment This MemberReference language MemberReference language = StatementExpression Assignment This MemberReference MemberReference classLoader = IfStatement BinaryOperation == MemberReference language Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "script language must be specified" IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! manager MemberReference AUTO equals MethodInvocation ! manager MemberReference JAVAX equals MethodInvocation ! manager MemberReference BSF equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unsupported language prefix " MemberReference manager LocalVariableDeclaration ReferenceType ScriptRunnerBase VariableDeclarator ret Literal null StatementExpression Assignment MemberReference ret MethodInvocation MemberReference BSF MemberReference BSF_MANAGER MemberReference BSF_RUNNER createRunner = IfStatement BinaryOperation == MemberReference ret Literal null BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation MemberReference JAVAX MemberReference JAVAX_MANAGER MemberReference JAVAX_RUNNER createRunner = IfStatement BinaryOperation != MemberReference ret Literal null BlockStatement ReturnStatement MemberReference ret IfStatement MethodInvocation JAVAX MemberReference manager equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to load the script engine manager " Literal "(" MemberReference JAVAX_MANAGER Literal ")" IfStatement MethodInvocation BSF MemberReference manager equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to load the BSF script engine manager " Literal "(" MemberReference BSF_MANAGER Literal ")" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to load a script engine manager " Literal "(" MemberReference BSF_MANAGER Literal " or " MemberReference JAVAX_MANAGER Literal ")"	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference implementationVersion	0
MethodDeclaration Modifier public ReferenceType String getIncludes ReturnStatement MemberReference includes	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference setInternalComment	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Vector comments StatementExpression Assignment This MemberReference comments MemberReference comments =	1
MethodDeclaration reopenFile BuildException StatementExpression MethodInvocation Literal true openFileImpl	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String serverName StatementExpression Assignment This MemberReference serverName MemberReference serverName =	0
MethodDeclaration Modifier private static ReferenceType Native2AsciiAdapter resolveClassName FormalParameter ReferenceType String className BuildException ReturnStatement Cast ReferenceType Native2AsciiAdapter MethodInvocation ClasspathUtils MemberReference className ClassReference MethodInvocation getClassLoader ReferenceType Native2AsciiAdapterFactory ClassReference ReferenceType Native2AsciiAdapter newInstance	1
MethodDeclaration Modifier public execute BuildException StatementExpression Assignment MemberReference handler ClassCreator ReferenceType FStatP4OutputHandler This = IfStatement BinaryOperation != MemberReference P4View Literal null BlockStatement StatementExpression Assignment MemberReference addCmd MemberReference P4View = StatementExpression Assignment MemberReference P4CmdOpts TernaryExpression BinaryOperation > MemberReference changelist Literal 0 BinaryOperation + Literal "-c " MemberReference changelist Literal "" = StatementExpression Assignment MemberReference filelist ClassCreator ReferenceType StringBuffer = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator srcFiles MethodInvocation ds getIncludedFiles StatementExpression Assignment MemberReference fileNum MemberReference srcFiles length = IfStatement BinaryOperation != MemberReference srcFiles Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference srcFiles length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation ds getBasedir MemberReference ArraySelector MemberReference j srcFiles StatementExpression MethodInvocation filelist MethodInvocation Literal '"' append MethodInvocation MethodInvocation f getAbsolutePath append MethodInvocation Literal '"' append Literal " " append StatementExpression MemberReference ++ doneFileNum IfStatement BinaryOperation > MethodInvocation filelist length MemberReference cmdLength BlockStatement StatementExpression MethodInvocation MemberReference filelist execP4Fstat StatementExpression Assignment MemberReference filelist ClassCreator ReferenceType StringBuffer = IfStatement BinaryOperation > MethodInvocation filelist length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference filelist execP4Fstat BlockStatement StatementExpression MethodInvocation Literal "No files specified to query status on!" MemberReference Project MSG_WARN log IfStatement BinaryOperation || BinaryOperation == MemberReference show MemberReference SHOW_ALL BinaryOperation == MemberReference show MemberReference SHOW_EXISTING BlockStatement StatementExpression MethodInvocation MethodInvocation handler getExisting MemberReference EXISTING_HEADER printRes IfStatement BinaryOperation || BinaryOperation == MemberReference show MemberReference SHOW_ALL BinaryOperation == MemberReference show MemberReference SHOW_NON_EXISTING BlockStatement StatementExpression MethodInvocation MethodInvocation handler getNonExisting MemberReference NONEXISTING_HEADER printRes	1
MethodDeclaration Modifier public ReferenceType createCondition IfStatement BinaryOperation != MemberReference nestedCondition Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one condition is StatementExpression Assignment MemberReference nestedCondition ClassCreator ReferenceType = ReturnStatement MemberReference nestedCondition	0
MethodDeclaration Modifier public addArguments FormalParameter ReferenceType String line ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference line length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i line setValue createArgument	1
MethodDeclaration Modifier public synchronized BasicType boolean isSelected FormalParameter ReferenceType Resource r IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ResourceSelector MethodInvocation getCheckedRef IfStatement BinaryOperation == MemberReference control Literal null BlockStatement ThrowStatement MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator t Literal 0 VariableDeclarator f Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation control iterator MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation when MethodInvocation comp MemberReference r Cast ReferenceType Resource MethodInvocation it next compare evaluate BlockStatement StatementExpression MemberReference ++ t BlockStatement StatementExpression MemberReference ++ f ReturnStatement MethodInvocation against MemberReference t MemberReference f evaluate	1
MethodDeclaration Modifier public FormalParameter ReferenceType String outputFile StatementExpression Assignment This MemberReference outputFile MemberReference outputFile =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String u StatementExpression Assignment MemberReference uri MemberReference u =	0
MethodDeclaration Modifier public encode FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream out IOException StatementExpression Assignment This MemberReference out MemberReference out = StatementExpression MethodInvocation encodeBegin LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * MemberReference MAX_CHARS_PER_LINE Literal 100 LocalVariableDeclaration BasicType int VariableDeclarator count WhileStatement BinaryOperation != Assignment MemberReference count MethodInvocation is MemberReference buffer Literal 0 MemberReference buffer length read = Literal - 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 WhileStatement BinaryOperation > MemberReference count Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator num TernaryExpression BinaryOperation > MemberReference count MemberReference MAX_CHARS_PER_LINE MemberReference MAX_CHARS_PER_LINE MemberReference count StatementExpression MethodInvocation MemberReference buffer MemberReference pos MemberReference num MemberReference out encodeLine StatementExpression Assignment MemberReference pos MemberReference num += StatementExpression Assignment MemberReference count MemberReference num -= StatementExpression MethodInvocation out flush StatementExpression MethodInvocation encodeEnd	0
MethodDeclaration Modifier public ReferenceType Map getElements ReturnStatement MemberReference elements	0
MethodDeclaration Modifier public FormalParameter BasicType boolean userCharStream StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference userCharStream MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier private endBlock IOException StatementExpression Assignment This MemberReference computedBlockCRC This MemberReference crc MethodInvocation getFinalCRC = IfStatement BinaryOperation != This MemberReference storedBlockCRC This MemberReference computedBlockCRC BlockStatement StatementExpression Assignment This MemberReference computedCombinedCRC BinaryOperation | BinaryOperation << This MemberReference storedCombinedCRC Literal 1 BinaryOperation >>> This MemberReference storedCombinedCRC Literal 31 = StatementExpression Assignment This MemberReference computedCombinedCRC This MemberReference storedBlockCRC ^= StatementExpression MethodInvocation StatementExpression Assignment This MemberReference computedCombinedCRC BinaryOperation | BinaryOperation << This MemberReference computedCombinedCRC Literal 1 BinaryOperation >>> This MemberReference computedCombinedCRC Literal 31 = StatementExpression Assignment This MemberReference computedCombinedCRC This MemberReference computedBlockCRC ^=	0
MethodDeclaration Modifier public stop StatementExpression SuperMethodInvocation stop TryStatement StatementExpression MethodInvocation MethodInvocation close getErr StatementExpression MethodInvocation MethodInvocation close getOut CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean verbose StatementExpression MethodInvocation myCopy MemberReference verbose setVerbose	0
MethodDeclaration Modifier protected ReferenceType String getWin32ResParameter IfStatement BinaryOperation != MemberReference win32res Literal null BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation win32res toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean markSupported ReturnStatement Literal false	1
MethodDeclaration Modifier public setPort FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration * @see */ Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "hashvalue" Literal Literal "checksum"	0
MethodDeclaration Modifier public addFailure FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType String VariableDeclarator testName MethodInvocation test toString LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent MemberReference id MemberReference TestRunEvent MemberReference testName MemberReference t IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt onTestFailure StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier private ReferenceType String getCurrentValue FormalParameter ReferenceType String oldValue LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal null IfStatement BinaryOperation == MemberReference operation MemberReference Operation EQUALS_OPER BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation == MemberReference defaultValue Literal null BlockStatement StatementExpression Assignment MemberReference ret MemberReference value = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference value Literal null BinaryOperation != MemberReference defaultValue Literal null BinaryOperation != MemberReference oldValue Literal null BlockStatement StatementExpression Assignment MemberReference ret MemberReference oldValue = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference value Literal null BinaryOperation != MemberReference defaultValue Literal null BinaryOperation == MemberReference oldValue Literal null BlockStatement StatementExpression Assignment MemberReference ret MemberReference defaultValue = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation != MemberReference defaultValue Literal null BinaryOperation != MemberReference oldValue Literal null BlockStatement StatementExpression Assignment MemberReference ret MemberReference value = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation != MemberReference defaultValue Literal null BinaryOperation == MemberReference oldValue Literal null BlockStatement StatementExpression Assignment MemberReference ret MemberReference defaultValue = BlockStatement StatementExpression Assignment MemberReference ret TernaryExpression BinaryOperation == MemberReference oldValue Literal null MemberReference defaultValue MemberReference oldValue = ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public setLongfile FormalParameter ReferenceType TarLongFileMode mode StatementExpression Assignment This MemberReference longFileMode MemberReference mode =	0
MethodDeclaration Modifier public ReferenceType String getEofStr ReturnStatement MethodInvocation eofStr Literal 0 substring	0
MethodDeclaration Modifier public setOverwrite FormalParameter BasicType boolean b StatementExpression Assignment MemberReference overwrite MemberReference b =	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal "ExtensionSet" MethodInvocation Arrays MethodInvocation MethodInvocation getProject toExtensions asList	1
MethodDeclaration Modifier public synchronized ReferenceType PatternSet ReferenceType NameEntry createIncludesFile IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed StatementExpression Assignment MemberReference directoryScanner Literal null = ReturnStatement MethodInvocation defaultPatterns createIncludesFile	0
MethodDeclaration Modifier public synchronized setDir FormalParameter ReferenceType File dir BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference dir MemberReference dir = StatementExpression Assignment MemberReference directoryScanner Literal null =	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getTypeName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute TypeName not specified" IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute TypeValue not specified" IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath getBaseDir setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_MKATTR setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes StatementExpression Assignment This MemberReference includes MemberReference includes =	0
MethodDeclaration Modifier public onEndChild FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType context SAXParseException	0
MethodDeclaration Modifier public setProcessOutputStream FormalParameter ReferenceType InputStream is IOException StatementExpression Assignment This MemberReference is MemberReference is =	0
MethodDeclaration Modifier protected BasicType boolean accept FormalParameter ReferenceType file ReturnStatement MethodInvocation file isCheckedOut	0
MethodDeclaration * get the location of a from * @param * @return the jar file or path where a class was found, or */ Modifier private static ReferenceType String FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference clazz ReturnStatement TernaryExpression BinaryOperation == MemberReference f Literal null Literal null MethodInvocation f getAbsolutePath	0
MethodDeclaration Modifier public setPackage FormalParameter ReferenceType String p StatementExpression Assignment MemberReference mypackage MemberReference p =	1
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String description StatementExpression Assignment This MemberReference description MemberReference description =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean q StatementExpression Assignment MemberReference reallyquiet MemberReference q =	0
MethodDeclaration Modifier protected createResourceParameter FormalParameter ReferenceType NetCommand command FormalParameter ReferenceType DotnetResource resource StatementExpression MethodInvocation resource MethodInvocation getProject MemberReference command Literal true getParameters	0
MethodDeclaration Modifier public synchronized static ReferenceType SAXParserFactory getParserFactory BuildException IfStatement BinaryOperation == MemberReference parserFactory Literal null BlockStatement StatementExpression Assignment MemberReference parserFactory MethodInvocation newParserFactory = ReturnStatement MemberReference parserFactory	0
MethodDeclaration Modifier public setLevel FormalParameter BasicType int level IfStatement BinaryOperation || BinaryOperation < MemberReference level MemberReference Deflater DEFAULT_COMPRESSION BinaryOperation > MemberReference level MemberReference Deflater BEST_COMPRESSION BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Invalid level: " MemberReference level StatementExpression Assignment MemberReference BinaryOperation != This MemberReference level MemberReference level = StatementExpression Assignment This MemberReference level MemberReference level =	1
MethodDeclaration Modifier private expectFileContains FormalParameter ReferenceType String name FormalParameter ReferenceType String contains IOException LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation MemberReference name getFileString StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expecting file " MemberReference name Literal " to contain " MemberReference contains Literal " but got " MemberReference content BinaryOperation > MethodInvocation content MemberReference contains indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public ReferenceType String describeCommand ReturnStatement MethodInvocation Commandline MethodInvocation getCommandline describeCommand	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public _testRuleComparatorViaSelector LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator s Cast ReferenceType ModifiedSelector MethodInvocation getSelector LocalVariableDeclaration ReferenceType ModifiedSelector ReferenceType ComparatorName VariableDeclarator compName ClassCreator ReferenceType ModifiedSelector ReferenceType ComparatorName StatementExpression MethodInvocation compName Literal "rule" setValue StatementExpression MethodInvocation s MemberReference compName TryStatement StatementExpression MethodInvocation MemberReference s Literal "TTTTTTTTTTTT" performTests StatementExpression MethodInvocation s MethodInvocation delete getCache	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "not found" Literal "Java returned: 9" expectBuildExceptionContaining	0
MethodDeclaration Modifier protected setupRedirector StatementExpression MethodInvocation redirector MemberReference input setInput StatementExpression MethodInvocation redirector MemberReference inputString setInputString StatementExpression MethodInvocation redirector MemberReference output setOutput StatementExpression MethodInvocation redirector MemberReference error setError	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference wasClasspath Literal null BlockStatement StatementExpression Assignment MemberReference wasClasspath ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getTask = ReturnStatement MethodInvocation wasClasspath createPath	0
MethodDeclaration Modifier private BasicType int run FormalParameter ReferenceType String args LaunchException MalformedURLException LocalVariableDeclaration ReferenceType String VariableDeclarator antHomeProperty MethodInvocation System MemberReference ANTHOME_PROPERTY getProperty LocalVariableDeclaration ReferenceType File VariableDeclarator antHome Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator sourceJar MethodInvocation Locator MethodInvocation getClass LocalVariableDeclaration ReferenceType File VariableDeclarator jarDir MethodInvocation sourceJar getParentFile LocalVariableDeclaration ReferenceType String VariableDeclarator mainClassname MemberReference MAIN_CLASS IfStatement BinaryOperation != MemberReference antHomeProperty Literal null BlockStatement StatementExpression Assignment MemberReference antHome ClassCreator ReferenceType File MemberReference antHomeProperty = IfStatement BinaryOperation || BinaryOperation == MemberReference antHome Literal null MethodInvocation ! antHome exists BlockStatement StatementExpression Assignment MemberReference antHome MethodInvocation jarDir getParentFile = StatementExpression MethodInvocation System MemberReference ANTHOME_PROPERTY MethodInvocation antHome getAbsolutePath setProperty IfStatement MethodInvocation ! antHome exists BlockStatement ThrowStatement ClassCreator ReferenceType LaunchException BinaryOperation + Literal "Ant home is set incorrectly or " Literal "ant could not be located" LocalVariableDeclaration ReferenceType List VariableDeclarator libPaths ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType String VariableDeclarator cpString Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator argList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType String VariableDeclarator newArgs LocalVariableDeclaration BasicType boolean VariableDeclarator noUserLib Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator noClassPath Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "-lib" equals args BlockStatement IfStatement BinaryOperation == MemberReference i BinaryOperation - MemberReference args length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType LaunchException BinaryOperation + Literal "The -lib argument must " Literal "be followed by a library location" StatementExpression MethodInvocation libPaths MemberReference ArraySelector MemberReference ++ i args add IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "-cp" equals args BlockStatement IfStatement BinaryOperation == MemberReference i BinaryOperation - MemberReference args length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType LaunchException BinaryOperation + Literal "The -cp argument must " Literal "be followed by a classpath expression" IfStatement BinaryOperation != MemberReference cpString Literal null BlockStatement ThrowStatement ClassCreator ReferenceType LaunchException BinaryOperation + Literal "The -cp argument must " Literal "not be repeated" StatementExpression Assignment MemberReference cpString MemberReference ArraySelector MemberReference ++ i args = IfStatement BinaryOperation || MemberReference ArraySelector MemberReference i MethodInvocation Literal "--nouserlib" equals args MemberReference ArraySelector MemberReference i MethodInvocation Literal "-nouserlib" equals args BlockStatement StatementExpression Assignment MemberReference noUserLib Literal true = IfStatement BinaryOperation || MemberReference ArraySelector MemberReference i MethodInvocation Literal "--noclasspath" equals args MemberReference ArraySelector MemberReference i MethodInvocation Literal "-noclasspath" equals args BlockStatement StatementExpression Assignment MemberReference noClassPath Literal true = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "-main" equals args BlockStatement IfStatement BinaryOperation == MemberReference i BinaryOperation - MemberReference args length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType LaunchException BinaryOperation + Literal "The -main argument must " Literal "be followed by a library location" StatementExpression Assignment MemberReference mainClassname MemberReference ArraySelector MemberReference ++ i args = BlockStatement StatementExpression MethodInvocation argList MemberReference ArraySelector MemberReference i args add IfStatement BinaryOperation == MethodInvocation argList size MemberReference args length BlockStatement StatementExpression Assignment MemberReference newArgs MemberReference args = BlockStatement StatementExpression Assignment MemberReference newArgs Cast ReferenceType String MethodInvocation argList ArrayCreator ReferenceType String MethodInvocation argList size toArray = LocalVariableDeclaration ReferenceType URL VariableDeclarator libURLs MethodInvocation TernaryExpression MemberReference noClassPath Literal null MemberReference cpString MemberReference libPaths getLibPathURLs LocalVariableDeclaration ReferenceType URL VariableDeclarator systemURLs MethodInvocation MemberReference jarDir getSystemURLs LocalVariableDeclaration ReferenceType URL VariableDeclarator userURLs TernaryExpression MemberReference noUserLib ArrayCreator ReferenceType URL Literal 0 MethodInvocation getUserURLs LocalVariableDeclaration ReferenceType URL VariableDeclarator jars MethodInvocation MemberReference libURLs MemberReference userURLs MemberReference systemURLs MethodInvocation Locator getToolsJar getJarArray LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator baseClassPath ClassCreator ReferenceType StringBuffer MethodInvocation System MemberReference JAVA_CLASS_PATH getProperty IfStatement BinaryOperation == MethodInvocation baseClassPath BinaryOperation - MethodInvocation baseClassPath length Literal 1 charAt MemberReference File pathSeparatorChar BlockStatement StatementExpression MethodInvocation baseClassPath BinaryOperation - MethodInvocation baseClassPath length Literal 1 setLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference jars length MemberReference ++ i BlockStatement StatementExpression MethodInvocation baseClassPath MemberReference File pathSeparatorChar append StatementExpression MethodInvocation baseClassPath MethodInvocation Locator MemberReference ArraySelector MemberReference i MethodInvocation toString jars fromURI append StatementExpression MethodInvocation System MemberReference JAVA_CLASS_PATH MethodInvocation baseClassPath toString setProperty LocalVariableDeclaration ReferenceType URLClassLoader VariableDeclarator loader ClassCreator ReferenceType URLClassLoader MemberReference jars StatementExpression MethodInvocation Thread MethodInvocation MemberReference loader setContextClassLoader currentThread LocalVariableDeclaration ReferenceType Class VariableDeclarator mainClass Literal null LocalVariableDeclaration BasicType int VariableDeclarator exitCode Literal 0 TryStatement StatementExpression Assignment MemberReference mainClass MethodInvocation loader MemberReference mainClassname loadClass = LocalVariableDeclaration ReferenceType AntMain VariableDeclarator main Cast ReferenceType AntMain MethodInvocation mainClass newInstance StatementExpression MethodInvocation main MemberReference newArgs Literal null Literal null startAnt CatchClause CatchClauseParameter InstantiationException ex StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "Incompatible version of " MemberReference mainClassname Literal " detected" println LocalVariableDeclaration ReferenceType File VariableDeclarator mainJar MethodInvocation Locator MemberReference mainClass StatementExpression MethodInvocation System.err BinaryOperation + Literal "Location of this class " MemberReference mainJar println StatementExpression Assignment MemberReference exitCode MemberReference EXIT_CODE_ERROR = CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation t MemberReference System err printStackTrace StatementExpression Assignment MemberReference exitCode MemberReference EXIT_CODE_ERROR = ReturnStatement MemberReference exitCode	1
MethodDeclaration Modifier public testEmptyElementIfIsReference LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation m Literal "*.java" TryStatement StatementExpression MethodInvocation m ClassCreator ReferenceType Literal "dummyref" setRefid StatementExpression MethodInvocation Literal "Can add reference to Mapper with from attribute set" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference m ClassCreator ReferenceType Mapper MemberReference project = StatementExpression MethodInvocation m ClassCreator ReferenceType Literal "dummyref" setRefid TryStatement StatementExpression MethodInvocation m Literal "*.java" StatementExpression MethodInvocation Literal "Can set from in Mapper that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference m ClassCreator ReferenceType Mapper MemberReference project = StatementExpression MethodInvocation m ClassCreator ReferenceType Literal "dummyref" setRefid TryStatement StatementExpression MethodInvocation m Literal "*.java" StatementExpression MethodInvocation Literal "Can set to in Mapper that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator mt ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation mt Literal "glob" setValue StatementExpression MethodInvocation m MemberReference mt setType StatementExpression MethodInvocation Literal "Can set type in Mapper that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "You must not specify more than one attribute when using refid" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public BasicType boolean hasFileModeBeenSet IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MethodInvocation getProject getRef ReturnStatement MemberReference fileModeHasBeenSet	0
MethodDeclaration Modifier private sendMTFValues6 FormalParameter Modifier final BasicType int nGroups FormalParameter Modifier final BasicType int alphaSize IOException LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len This MemberReference data MemberReference sendMTFValues_len LocalVariableDeclaration Modifier final ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference nGroups MemberReference ++ t BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator len_t MemberReference ArraySelector MemberReference t len LocalVariableDeclaration BasicType int VariableDeclarator curr BinaryOperation & MemberReference ArraySelector Literal 0 len_t Literal 0xff WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation << MemberReference curr BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow Literal 5 |= StatementExpression Assignment MemberReference bsLiveShadow Literal 5 += ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lti BinaryOperation & MemberReference ArraySelector MemberReference i len_t Literal 0xff WhileStatement BinaryOperation < MemberReference curr MemberReference lti BlockStatement WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation << Literal 2 BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow Literal 2 |= StatementExpression Assignment MemberReference bsLiveShadow Literal 2 += StatementExpression MemberReference ++ curr WhileStatement BinaryOperation > MemberReference curr MemberReference lti BlockStatement WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation << Literal 3 BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow Literal 2 |= StatementExpression Assignment MemberReference bsLiveShadow Literal 2 += StatementExpression MemberReference -- curr WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression MemberReference ++ bsLiveShadow StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = StatementExpression Assignment This MemberReference bsLive MemberReference bsLiveShadow =	1
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String desc StatementExpression Assignment MemberReference description MemberReference desc =	0
MethodDeclaration Modifier public synchronized ReferenceType String FormalParameter ReferenceType String line ReturnStatement MethodInvocation MemberReference line iReplaceTokens	0
MethodDeclaration Modifier public testEchoPrefixAsDoublyNegatedPropertyset Exception StatementExpression MethodInvocation Literal testEchoPrefixVarious	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testTaskThatDoesntReallyExist" Literal "testTaskThatDoesntReallyExist" expectPropertyUnset	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation project Literal "MyRunnable log	0
MethodDeclaration Modifier protected log FormalParameter ReferenceType String message StatementExpression MethodInvocation listener MemberReference message log	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "timeout" expectPropertyUnset	0
MethodDeclaration Modifier public FormalParameter ReferenceType String aString StatementExpression Assignment MemberReference javacopts MemberReference aString =	0
MethodDeclaration Modifier public setCode FormalParameter BasicType int c StatementExpression Assignment MemberReference code MemberReference c =	0
MethodDeclaration Modifier protected ReferenceType String getDirs FormalParameter ReferenceType File baseDir FormalParameter ReferenceType DirectoryScanner ds ReturnStatement MethodInvocation MethodInvocation ds getIncludedDirectories MemberReference baseDir restrict	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference mComment MemberReference =	0
MethodDeclaration Modifier public setType FormalParameter ReferenceType String s StatementExpression Assignment MemberReference type MemberReference s =	0
MethodDeclaration Modifier public onSuiteEnded FormalParameter ReferenceType TestRunEvent evt LocalVariableDeclaration ReferenceType TestSummary VariableDeclarator summary MethodInvocation evt getSummary LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation RES Literal "suite.summary.msg" MethodInvocation evt getName ClassCreator ReferenceType Integer MethodInvocation summary runCount ClassCreator ReferenceType Integer MethodInvocation summary failureCount ClassCreator ReferenceType Integer MethodInvocation summary ClassCreator ReferenceType Long BinaryOperation / MethodInvocation summary elapsedTime Literal 1000 getString StatementExpression MethodInvocation MethodInvocation MemberReference msg println getWriter	1
MethodDeclaration Modifier private BasicType boolean empty FormalParameter ReferenceType String string ReturnStatement BinaryOperation || BinaryOperation == MemberReference string Literal null BinaryOperation == MethodInvocation string length Literal 0	0
MethodDeclaration Modifier private ReferenceType Process getProcess FormalParameter BasicType long timetorun Exception LocalVariableDeclaration ReferenceType String VariableDeclarator cmdArray ArrayInitializer MethodInvocation JavaEnvUtils Literal "java" getJreExecutable Literal "-classpath" MemberReference ClassReference MethodInvocation getName ReferenceType TimeProcess MethodInvocation String MemberReference timetorun valueOf ReturnStatement MethodInvocation Runtime MethodInvocation MemberReference cmdArray exec getRuntime	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testPathAndSignedJar" Literal "incompatible MemberReference SignJar expectBuildExceptionContaining	0
MethodDeclaration Modifier private BasicType boolean isOffline ReturnStatement MethodInvocation Boolean Literal "offline" getBoolean	0
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal "test4" Literal cannot include itself" expectBuildException	0
MethodDeclaration Modifier public setIncludeDelims FormalParameter BasicType boolean includeDelims StatementExpression Assignment This MemberReference includeDelims MemberReference includeDelims =	0
MethodDeclaration Modifier public setSrc FormalParameter ReferenceType File src StatementExpression Assignment This MemberReference src MemberReference src =	0
MethodDeclaration Modifier private FormalParameter ReferenceType View v BuildException LocalVariableDeclaration ReferenceType Label VariableDeclarator allLabels MethodInvocation v getLabels ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference allLabels length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Label VariableDeclarator stLabel MemberReference ArraySelector MemberReference i allLabels StatementExpression MethodInvocation BinaryOperation + Literal "checking label " MethodInvocation stLabel getName MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference stLabel Literal null MethodInvocation ! stLabel MethodInvocation stLabel MethodInvocation This MemberReference label equals getName BlockStatement IfStatement BinaryOperation && MethodInvocation ! stLabel isRevisionLabel MethodInvocation ! stLabel isViewLabel BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unexpected label type." StatementExpression MethodInvocation BinaryOperation + Literal "using label " MethodInvocation stLabel getName MemberReference Project MSG_VERBOSE log StatementExpression Assignment This MemberReference MemberReference stLabel = ReturnStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error: label " This MemberReference label Literal " does not exist in view " MethodInvocation v getFullName	1
MethodDeclaration Modifier private static ensureReferences FormalParameter ReferenceType String msg FormalParameter ReferenceType File inputFile FormalParameter ReferenceType Hashtable references LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator referenceKeyEnum MethodInvocation references keys WhileStatement MethodInvocation referenceKeyEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentKey MethodInvocation referenceKeyEnum MethodInvocation toString nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator currentValue MethodInvocation references MemberReference currentKey get IfStatement BinaryOperation instanceof MemberReference currentValue ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference currentValue ReferenceType String BlockStatement BlockStatement IfStatement MethodInvocation ! currentKey Literal "ant." startsWith BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference msg Literal "-" MethodInvocation inputFile getName Literal " Key=" MemberReference currentKey Literal " is not a recognized type." fail	1
MethodDeclaration Modifier public FormalParameter ReferenceType String filters LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference filters Literal "," WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType FilterElement VariableDeclarator fe ClassCreator ReferenceType FilterElement LocalVariableDeclaration ReferenceType FilterElement ReferenceType FilterAttribute VariableDeclarator ClassCreator ReferenceType FilterElement ReferenceType FilterAttribute StatementExpression MethodInvocation MethodInvocation st nextToken setValue StatementExpression MethodInvocation fe MemberReference setType StatementExpression MethodInvocation MemberReference fe addFilter	0
MethodDeclaration Modifier public ReferenceType Object createDynamicElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qName LocalVariableDeclaration ReferenceType Element VariableDeclarator e Literal null IfStatement MethodInvocation uri Literal "" equals BlockStatement StatementExpression Assignment MemberReference e MethodInvocation doc MemberReference name createElement = BlockStatement StatementExpression Assignment MemberReference e MethodInvocation doc MemberReference uri MemberReference qName createElementNS = StatementExpression MethodInvocation fragment MemberReference e appendChild ReturnStatement ClassCreator ReferenceType Child MemberReference e	1
MethodDeclaration Modifier public ReferenceType Vector getStdErrLines ReturnStatement MethodInvocation StringUtils MemberReference stderr lineSplit	1
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal "result/trimfilebyline" getFileString StatementExpression MethodInvocation Literal "no ws at start" MethodInvocation contents Literal "This is startsWith assertFalse StatementExpression MethodInvocation Literal "no ws at end" MethodInvocation contents Literal "second line." endsWith assertFalse StatementExpression MethodInvocation MemberReference contents Literal " This is the second" StatementExpression MethodInvocation MemberReference contents Literal is the second" assertStringContains	0
MethodDeclaration Modifier public ReferenceType String getClasses LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al ClassCreator ReferenceType ArrayList IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference cls Literal "," Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression MethodInvocation al MethodInvocation tok MethodInvocation trim nextToken add LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation classes elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ClassArgument VariableDeclarator arg Cast ReferenceType ClassArgument MethodInvocation e nextElement StatementExpression MethodInvocation al MethodInvocation arg getName add ReturnStatement Cast ReferenceType String MethodInvocation al ArrayCreator ReferenceType String MethodInvocation al size toArray	0
MethodDeclaration Modifier public testCompilerAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator compiler MethodInvocation StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "expected sun or kaffe, but found " MemberReference compiler MemberReference compiler Literal "default" assertEquals StatementExpression MethodInvocation project Literal "build.rmic" Literal "weblogic" setNewProperty StatementExpression Assignment MemberReference compiler MethodInvocation = StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation Literal "weblogic" MemberReference compiler assertEquals StatementExpression MethodInvocation Literal setCompiler StatementExpression Assignment MemberReference compiler MethodInvocation = StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation Literal MemberReference compiler assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference to MemberReference to =	0
MethodDeclaration Modifier public setIasHomeDir FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static BasicType boolean isName FormalParameter ReferenceType String name ReturnStatement MethodInvocation Literal null MemberReference name Literal null Literal null isOs	0
MethodDeclaration getReady IOException LocalVariableDeclaration ReferenceType String VariableDeclarator response MethodInvocation in getResponse LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference IfStatement MethodInvocation ! MemberReference response MemberReference ok BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal "Didn't get introduction from " MemberReference response	0
MethodDeclaration Modifier public enterAntLib FormalParameter ReferenceType String uri StatementExpression Assignment MemberReference antLibCurrentUri MemberReference uri = StatementExpression MethodInvocation antLibStack MemberReference uri push	0
MethodDeclaration Modifier public BasicType boolean isDirectory ReturnStatement MethodInvocation ftpFile isDirectory	0
MethodDeclaration Modifier private BasicType boolean checkResource FormalParameter ReferenceType String resource IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement ReturnStatement BinaryOperation != MethodInvocation loader MemberReference resource getResourceAsStream Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cL This MethodInvocation getClass MethodInvocation getClassLoader IfStatement BinaryOperation != MemberReference cL Literal null BlockStatement ReturnStatement BinaryOperation != MethodInvocation cL MemberReference resource getResourceAsStream Literal null BlockStatement ReturnStatement BinaryOperation != MethodInvocation ClassLoader MemberReference resource getSystemResourceAsStream Literal null	1
MethodDeclaration Modifier public ReferenceType createSourcepath IfStatement BinaryOperation == MemberReference sourcePath Literal null BlockStatement StatementExpression Assignment MemberReference sourcePath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation sourcePath createPath	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal 946080000000L touchFile	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test StatementExpression MethodInvocation testListener MemberReference test	0
MethodDeclaration Modifier private writeCachedDependencies FormalParameter ReferenceType Hashtable dependencyMap IOException IfStatement BinaryOperation != MemberReference cache Literal null BlockStatement LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw Literal null TryStatement StatementExpression MethodInvocation cache mkdirs LocalVariableDeclaration ReferenceType File VariableDeclarator depFile ClassCreator ReferenceType File MemberReference cache MemberReference CACHE_FILE_NAME StatementExpression Assignment MemberReference pw ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference depFile = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dependencyMap keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation pw BinaryOperation + MemberReference CLASSNAME_PREPEND MemberReference className println LocalVariableDeclaration ReferenceType Vector VariableDeclarator dependencyList Cast ReferenceType Vector MethodInvocation dependencyMap MemberReference className get LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation dependencyList size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator x Literal 0 BinaryOperation < MemberReference x MemberReference size MemberReference ++ x BlockStatement StatementExpression MethodInvocation pw MethodInvocation dependencyList MemberReference x elementAt println IfStatement BinaryOperation != MemberReference pw Literal null BlockStatement StatementExpression MethodInvocation pw close	1
MethodDeclaration Modifier private BasicType boolean regenerateSerializedFile FormalParameter ReferenceType File serFile TryStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference serFile LocalVariableDeclaration ReferenceType ObjectInputStream VariableDeclarator ois ClassCreator ReferenceType ObjectInputStream MemberReference fis LocalVariableDeclaration ReferenceType DeploymentDescriptor VariableDeclarator dd Cast ReferenceType DeploymentDescriptor MethodInvocation ois readObject StatementExpression MethodInvocation fis close ReturnStatement Literal false CatchClause CatchClauseParameter Exception e ReturnStatement Literal true	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType p StatementExpression Assignment MemberReference classpath MemberReference p =	0
MethodDeclaration Modifier private verifyBorlandJarV5 FormalParameter ReferenceType File sourceJar StatementExpression MethodInvocation BinaryOperation + Literal BES " MemberReference sourceJar MemberReference Project MSG_INFO log TryStatement LocalVariableDeclaration ReferenceType ExecTask VariableDeclarator execTask Literal null StatementExpression Assignment MemberReference execTask ClassCreator ReferenceType ExecTask MethodInvocation getTask = StatementExpression MethodInvocation execTask ClassCreator ReferenceType File Literal "." setDir StatementExpression MethodInvocation execTask Literal "iastool" setExecutable IfStatement BinaryOperation != MethodInvocation getCombinedClasspath Literal null BlockStatement StatementExpression MethodInvocation execTask MethodInvocation Literal "-VBJclasspath" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation MethodInvocation MethodInvocation toString getCombinedClasspath setValue createArg IfStatement MemberReference java2iiopdebug BlockStatement StatementExpression MethodInvocation execTask MethodInvocation Literal "-debug" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation Literal "-verify" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation execTask MethodInvocation MethodInvocation sourceJar getPath setValue createArg StatementExpression MethodInvocation Literal "Calling iastool" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation execTask execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while calling Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	0
MethodDeclaration Modifier protected setInternalRecursive FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration ReferenceType String getDefaultDateFormatConfig ReturnStatement MemberReference defaultDateFormatConfig	0
MethodDeclaration Modifier public transform FormalParameter ReferenceType File infile FormalParameter ReferenceType File outfile Exception IfStatement BinaryOperation == MemberReference transformer Literal null BlockStatement StatementExpression MethodInvocation createTransformer LocalVariableDeclaration ReferenceType InputStream VariableDeclarator fis Literal null LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator fos Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference infile = StatementExpression Assignment MemberReference fos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference outfile = LocalVariableDeclaration ReferenceType StreamResult VariableDeclarator res ClassCreator ReferenceType StreamResult MemberReference fos StatementExpression MethodInvocation res MethodInvocation JAXPUtils MemberReference outfile getSystemId setSystemId LocalVariableDeclaration ReferenceType Source VariableDeclarator src MethodInvocation MemberReference fis MemberReference infile getSource StatementExpression MethodInvocation setTransformationParameters StatementExpression MethodInvocation transformer MemberReference src MemberReference res transform TryStatement IfStatement BinaryOperation != MemberReference fis Literal null BlockStatement StatementExpression MethodInvocation fis close CatchClause CatchClauseParameter IOException ignored TryStatement IfStatement BinaryOperation != MemberReference fos Literal null BlockStatement StatementExpression MethodInvocation fos close CatchClause CatchClauseParameter IOException ignored	1
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count FormalParameter ReferenceType AntXMLContext context SAXParseException LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator wrapper MethodInvocation context currentWrapper StatementExpression MethodInvocation wrapper MemberReference buf MemberReference start MemberReference count addText	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object rhs IfStatement BinaryOperation || BinaryOperation == MemberReference rhs Literal null BinaryOperation != MethodInvocation rhs getClass MethodInvocation getClass BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference rhs This BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType Section VariableDeclarator rhsSection Cast ReferenceType Section MemberReference rhs ReturnStatement MethodInvocation attributes MemberReference rhsSection attributes equals	1
MethodDeclaration Modifier public setKeeproot FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object createProjectComponent FormalParameter ReferenceType Project project FormalParameter ReferenceType String ns FormalParameter ReferenceType String taskName BuildException ReturnStatement Literal null	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation DOMUtils newDocument LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal "root" createElement StatementExpression MethodInvocation DOMUtils MemberReference root Literal "cdataElement" Literal "content" appendCDATAElement LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType DOMElementWriter VariableDeclarator w ClassCreator ReferenceType DOMElementWriter StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "<root>" MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal "</root>" MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier private mergeZipJarContents FormalParameter ReferenceType ZipOutputStream output FormalParameter ReferenceType File f IOException IfStatement MethodInvocation ! f exists BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipf ClassCreator ReferenceType ZipFile MemberReference f LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator entries MethodInvocation zipf entries WhileStatement MethodInvocation entries hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator inputEntry Cast ReferenceType ZipEntry MethodInvocation entries nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator inputEntryName MethodInvocation inputEntry getName LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation inputEntryName Literal "META-INF" indexOf IfStatement BinaryOperation < MemberReference index Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation output MethodInvocation MemberReference zipf MemberReference inputEntry processEntry putNextEntry CatchClause CatchClauseParameter ZipException ex LocalVariableDeclaration ReferenceType String VariableDeclarator mess MethodInvocation ex getMessage IfStatement BinaryOperation >= MethodInvocation mess Literal "duplicate" indexOf Literal 0 BlockStatement ContinueStatement BlockStatement ThrowStatement MemberReference ex LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation zipf MemberReference inputEntry getInputStream LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference buffer length LocalVariableDeclaration BasicType int VariableDeclarator count Literal - 1 WhileStatement BinaryOperation > Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference len read = Literal 0 BlockStatement StatementExpression MethodInvocation output MemberReference buffer Literal 0 MemberReference count write StatementExpression MethodInvocation in close StatementExpression MethodInvocation output closeEntry StatementExpression MethodInvocation zipf close	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference mNdata MemberReference =	0
MethodDeclaration Modifier public final setValue FormalParameter ReferenceType String contains StatementExpression Assignment MemberReference value MemberReference contains =	0
MethodDeclaration Modifier public synchronized start FormalParameter ReferenceType Process process IfStatement BinaryOperation == MemberReference process Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "process is null." IfStatement BinaryOperation != This MemberReference process Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "Already StatementExpression Assignment This MemberReference caught Literal null = StatementExpression Assignment This MemberReference killedProcess Literal false = StatementExpression Assignment This MemberReference watch Literal true = StatementExpression Assignment This MemberReference process MemberReference process = StatementExpression MethodInvocation watchdog start	0
MethodDeclaration Modifier public BasicType int getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier protected ReferenceType Object getCheckedRef FormalParameter ReferenceType Project p ReturnStatement MethodInvocation MethodInvocation getClass MethodInvocation getDataTypeName MemberReference p getCheckedRef	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal testRedirector9Thru12	0
MethodDeclaration Modifier public setIn FormalParameter ReferenceType File inFile StatementExpression Assignment This MemberReference inFile MemberReference inFile =	0
MethodDeclaration Modifier public synchronized ReferenceType File getBasedir ReturnStatement MemberReference basedir	0
MethodDeclaration Modifier public ReferenceType AntHandler onStartChild FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException IfStatement BinaryOperation && MethodInvocation name Literal "project" equals BinaryOperation || MethodInvocation uri Literal "" equals MethodInvocation uri MemberReference ANT_CORE_URI equals BlockStatement ReturnStatement MemberReference ProjectHelper2 projectHandler BlockStatement IfStatement MethodInvocation name MemberReference qname equals BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unexpected element \"{" MemberReference uri Literal "}" MemberReference name Literal "\" {" MemberReference ANT_CORE_URI Literal "}" MemberReference name MethodInvocation context getLocator BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unexpected element \"" MemberReference qname Literal "\" " MemberReference name MethodInvocation context getLocator	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation entries size BinaryOperation == MemberReference index Literal - 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation entries MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference element ReferenceType InterfaceMethodRefCPInfo BlockStatement LocalVariableDeclaration ReferenceType InterfaceMethodRefCPInfo VariableDeclarator interfaceMethodRefEntry Cast ReferenceType InterfaceMethodRefCPInfo MemberReference element IfStatement BinaryOperation && BinaryOperation && MethodInvocation interfaceMethodRefEntry MethodInvocation MemberReference equals getInterfaceMethodClassName MethodInvocation interfaceMethodRefEntry MethodInvocation MemberReference equals getInterfaceMethodName MethodInvocation interfaceMethodRefEntry MethodInvocation MemberReference equals getInterfaceMethodType BlockStatement StatementExpression Assignment MemberReference index MemberReference i = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public static parsePropertyString FormalParameter ReferenceType String value FormalParameter ReferenceType Vector fragments FormalParameter ReferenceType Vector propertyRefs BuildException StatementExpression MethodInvocation PropertyHelper MemberReference value MemberReference fragments MemberReference propertyRefs parsePropertyStringDefault	1
MethodDeclaration Modifier public ReferenceType String getRefId ReturnStatement MemberReference refid	0
MethodDeclaration Modifier public doSleep FormalParameter BasicType long millis TryStatement StatementExpression MethodInvocation Thread MemberReference millis sleep CatchClause CatchClauseParameter InterruptedException ie	1
MethodDeclaration Modifier public FormalParameter BasicType boolean preserve StatementExpression Assignment MemberReference preserveLastModified MemberReference preserve =	0
MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child InvocationTargetException IllegalAccessException InstantiationException IfStatement BinaryOperation == MemberReference child Literal null BlockStatement StatementExpression Assignment MemberReference child MethodInvocation constructor TernaryExpression BinaryOperation == MethodInvocation constructor MemberReference length getParameterTypes Literal 0 ArrayCreator ReferenceType Object ArrayInitializer ArrayCreator ReferenceType Object ArrayInitializer MemberReference project newInstance = IfStatement BinaryOperation instanceof MemberReference child ReferenceType PreSetDef ReferenceType PreSetDefinition BlockStatement StatementExpression Assignment MemberReference child Cast ReferenceType PreSetDef ReferenceType PreSetDefinition MemberReference child = IfStatement BinaryOperation == MemberReference behavior MemberReference ADD BlockStatement StatementExpression MethodInvocation MemberReference parent MemberReference child istore ReturnStatement MemberReference child	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/filters/build.xml" configureProject	0
MethodDeclaration Modifier public init FormalParameter ReferenceType String propType FormalParameter ReferenceType AttributeList attrs SAXParseException LocalVariableDeclaration ReferenceType Class VariableDeclarator parentClass MethodInvocation parent getClass LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MemberReference helperImpl project MemberReference parentClass getHelper TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator elementName MethodInvocation propType MemberReference Locale US toLowerCase IfStatement BinaryOperation instanceof MemberReference parent ReferenceType UnknownElement BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator uc ClassCreator ReferenceType UnknownElement MemberReference elementName StatementExpression MethodInvocation uc MemberReference helperImpl project setProject StatementExpression Cast ReferenceType UnknownElement MemberReference parent StatementExpression Assignment MemberReference child MemberReference uc = BlockStatement StatementExpression Assignment MemberReference child MethodInvocation ih MemberReference helperImpl project MemberReference parent MemberReference elementName createElement = StatementExpression MethodInvocation helperImpl MemberReference child MemberReference attrs configureId StatementExpression Assignment MemberReference childWrapper ClassCreator ReferenceType RuntimeConfigurable MemberReference child MemberReference propType = StatementExpression MethodInvocation childWrapper MemberReference attrs setAttributes StatementExpression MethodInvocation parentWrapper MemberReference childWrapper addChild CatchClause CatchClauseParameter BuildException exc ThrowStatement ClassCreator ReferenceType SAXParseException MethodInvocation exc getMessage MemberReference helperImpl locator MemberReference exc	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project init StatementExpression MethodInvocation project MemberReference basedir setBaseDir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator x Literal 0 BinaryOperation < MemberReference x MemberReference files length MemberReference ++ x BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference x files ClassCreator ReferenceType File MemberReference beddir MemberReference ArraySelector MemberReference x filenames = StatementExpression Assignment MemberReference ArraySelector MemberReference x mirrorfiles ClassCreator ReferenceType File MemberReference mirrordir MemberReference ArraySelector MemberReference x filenames =	0
MethodDeclaration Modifier public testKeepGoingSingleCheck TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference targetNames executeTargets MemberReference SINGLE_CHECK Literal true Literal true getProject StatementExpression MethodInvocation Literal "should fail" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation e MethodInvocation Literal "failfoo" equals getMessage assertTrue StatementExpression MethodInvocation MemberReference targetCount Literal 1 assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType Integer StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected scanDir FormalParameter ReferenceType String files LocalVariableDeclaration BasicType long VariableDeclarator now ClassCreator MethodInvocation getTime ReferenceType Date LocalVariableDeclaration ReferenceType File VariableDeclarator jspFile Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator parents Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator pack Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File This MemberReference sourceDirectory MemberReference ArraySelector MemberReference i files StatementExpression Assignment MemberReference jspFile ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i files = StatementExpression Assignment MemberReference parents MethodInvocation jspFile getParent = IfStatement BinaryOperation && BinaryOperation != MemberReference parents Literal null Literal "" BlockStatement StatementExpression Assignment MemberReference parents This MethodInvocation MemberReference parents MemberReference File separator Literal "_/" replaceString = StatementExpression Assignment MemberReference pack BinaryOperation + BinaryOperation + BinaryOperation + MemberReference pathToPackage MemberReference File separator Literal "_" MemberReference parents = BlockStatement StatementExpression Assignment MemberReference pack MemberReference pathToPackage = LocalVariableDeclaration ReferenceType String VariableDeclarator filePath BinaryOperation + BinaryOperation + MemberReference pack MemberReference File separator Literal "_" LocalVariableDeclaration BasicType int VariableDeclarator startingIndex TernaryExpression BinaryOperation != MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separator lastIndexOf files Literal - 1 BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separator lastIndexOf files Literal 1 Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator endingIndex MemberReference ArraySelector MemberReference i MethodInvocation Literal ".jsp" indexOf files IfStatement BinaryOperation == MemberReference endingIndex Literal - 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference ArraySelector MemberReference i files Literal ". Not a JSP" MemberReference Project MSG_VERBOSE log ContinueStatement StatementExpression Assignment MemberReference filePath MemberReference ArraySelector MemberReference i MethodInvocation MemberReference startingIndex MemberReference endingIndex substring files += StatementExpression Assignment MemberReference filePath Literal ".class" += LocalVariableDeclaration ReferenceType File VariableDeclarator classFile ClassCreator ReferenceType File This MemberReference destinationDirectory MemberReference filePath IfStatement BinaryOperation > MethodInvocation srcFile lastModified MemberReference now BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: file modified in the future: " MemberReference ArraySelector MemberReference i files MemberReference Project MSG_WARN log IfStatement BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation classFile lastModified BlockStatement StatementExpression MethodInvocation filesToDo MemberReference ArraySelector MemberReference i files addElement StatementExpression MethodInvocation BinaryOperation + Literal "Recompiling File " MemberReference ArraySelector MemberReference i files MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType cp IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath MemberReference cp = BlockStatement StatementExpression MethodInvocation classpath MemberReference cp append	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createClasspath	0
MethodDeclaration Modifier private static doReportUserHomeLibraries FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType String VariableDeclarator home MethodInvocation System MemberReference Launcher getProperty StatementExpression MethodInvocation out BinaryOperation + Literal "user.home: " MemberReference home println LocalVariableDeclaration ReferenceType File VariableDeclarator libDir ClassCreator ReferenceType File MemberReference home MemberReference Launcher LocalVariableDeclaration ReferenceType File VariableDeclarator libs MethodInvocation MemberReference libDir StatementExpression MethodInvocation MemberReference libs MemberReference out	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference server MethodInvocation = StatementExpression MethodInvocation server start StatementExpression Assignment MemberReference runner MethodInvocation = StatementExpression Assignment MemberReference recorder ClassCreator ReferenceType TestRunRecorder = StatementExpression MethodInvocation server MemberReference recorder addListener StatementExpression MethodInvocation server This addListener	0
MethodDeclaration Modifier public BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation != MemberReference ant Literal null BlockStatement ReturnStatement MethodInvocation ant MemberReference buffer MemberReference offset MemberReference length handleInput BlockStatement ReturnStatement SuperMethodInvocation MemberReference buffer MemberReference offset MemberReference length handleInput	1
MethodDeclaration Modifier private BasicType boolean isCompileNeeded FormalParameter ReferenceType File srcFile FormalParameter ReferenceType File javaFile LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false IfStatement MethodInvocation ! javaFile exists BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MethodInvocation srcFile getPath Literal " because java file " MethodInvocation javaFile getPath Literal " does not exist" MemberReference Project MSG_VERBOSE log BlockStatement IfStatement BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation javaFile lastModified BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MethodInvocation srcFile getPath Literal " because it is out of date with respect to " MethodInvocation javaFile getPath MemberReference Project MSG_VERBOSE log BlockStatement IfStatement BinaryOperation == MethodInvocation javaFile length Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MethodInvocation srcFile getPath Literal " because java file " MethodInvocation javaFile getPath Literal " is empty" MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String outputEncoding IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference outputEncoding MemberReference outputEncoding =	0
MethodDeclaration Modifier public subBuildFinished FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation == MethodInvocation event getProject MemberReference project BlockStatement StatementExpression MethodInvocation cleanup	1
MethodDeclaration Modifier public ReferenceType IPlanetDeploymentTool createIplanet StatementExpression MethodInvocation Literal "iPlanet Application Server deployment MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType IPlanetDeploymentTool VariableDeclarator tool ClassCreator ReferenceType IPlanetDeploymentTool StatementExpression MethodInvocation MemberReference tool addDeploymentTool ReturnStatement MemberReference tool	0
MethodDeclaration Modifier private BasicType int bsR FormalParameter Modifier final BasicType int n IOException LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff IfStatement BinaryOperation < MemberReference bsLiveShadow MemberReference n BlockStatement LocalVariableDeclaration Modifier final ReferenceType InputStream VariableDeclarator inShadow This MemberReference in DoStatement BinaryOperation < MemberReference bsLiveShadow MemberReference n BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator thech MethodInvocation inShadow read IfStatement BinaryOperation < MemberReference thech Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = StatementExpression Assignment This MemberReference bsLive BinaryOperation - MemberReference bsLiveShadow MemberReference n = ReturnStatement BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow BinaryOperation - MemberReference bsLiveShadow MemberReference n BinaryOperation - BinaryOperation << Literal 1 MemberReference n Literal 1	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference p ClassCreator ReferenceType Project = StatementExpression MethodInvocation p init StatementExpression Assignment MemberReference root ClassCreator MethodInvocation getAbsolutePath MethodInvocation toUpperCase ReferenceType File MemberReference File separator = StatementExpression Assignment MemberReference mbl ClassCreator ReferenceType MockBuildListener MemberReference p =	1
MethodDeclaration Modifier private IOException IfStatement BinaryOperation != This MemberReference su_ch2 This MemberReference su_chPrev BlockStatement StatementExpression Assignment This MemberReference su_count Literal 1 = StatementExpression MethodInvocation setupNoRandPartA IfStatement BinaryOperation >= This ++ MemberReference su_count Literal 4 BlockStatement StatementExpression Assignment This MemberReference su_z Cast BasicType char BinaryOperation & This MemberReference data MemberReference ll8 ArraySelector This MemberReference su_tPos Literal 0xff = StatementExpression Assignment This MemberReference su_tPos This MemberReference data MemberReference ArraySelector This MemberReference su_tPos = StatementExpression Assignment This MemberReference su_j2 Literal 0 = StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation setupNoRandPartA	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String filename IfStatement BinaryOperation || BinaryOperation || MemberReference onDos MemberReference onNetWare BinaryOperation == MethodInvocation filename length Literal 0 BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType char VariableDeclarator sep MemberReference File separatorChar StatementExpression Assignment MemberReference filename MethodInvocation filename MethodInvocation Literal '\\' MemberReference sep replace Literal '/' MemberReference sep replace = LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation filename Literal 0 charAt LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation filename length ReturnStatement BinaryOperation || BinaryOperation && BinaryOperation == MemberReference c MemberReference sep BinaryOperation || BinaryOperation == MemberReference len Literal 1 BinaryOperation != MethodInvocation filename Literal 1 charAt MemberReference sep BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation Character MemberReference c isLetter BinaryOperation > MemberReference len Literal 1 BinaryOperation == MethodInvocation filename Literal ':' indexOf Literal 1 BinaryOperation || BinaryOperation == MemberReference len Literal 2 BinaryOperation != MethodInvocation filename Literal 2 charAt MemberReference sep	1
MethodDeclaration Modifier public BasicType long ReturnStatement MemberReference errors	0
MethodDeclaration Modifier public BasicType byte IfStatement BinaryOperation != MemberReference centralData Literal null BlockStatement ReturnStatement MemberReference centralData ReturnStatement MethodInvocation getLocalFileDataData	0
MethodDeclaration Modifier public FormalParameter ReferenceType String ext StatementExpression Assignment This MemberReference extension MemberReference ext =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ServerThread VariableDeclarator testMailServer ClassCreator ReferenceType ServerThread LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType ClientThread VariableDeclarator testMailClient ClassCreator ReferenceType ClientThread StatementExpression MethodInvocation testMailClient Literal "Mail Message <EmailTaskTest@ant.apache.org>" from StatementExpression MethodInvocation testMailClient Literal "to@you.com" to StatementExpression MethodInvocation testMailClient BinaryOperation + Literal "test line 1\n" Literal "test line 2" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal "InterruptedException: " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator expectedResult BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "220 test EmailTaskTest\r\n" Literal "HELO " MemberReference local Literal "\r\n" Literal "250 " MemberReference local Literal " Hello " MemberReference local Literal " [127.0.0.1], pleased to you\r\n" Literal "MAIL FROM: <EmailTaskTest@ant.apache.org>\r\n" Literal "250\r\n" Literal "RCPT TO: <to@you.com>\r\n" Literal "250\r\n" Literal "DATA\r\n" Literal "354\r\n" Literal Message <EmailTaskTest@ant.apache.org>\r\n" Literal "To: to@you.com\r\n" Literal "X-Mailer: org.apache.tools.mail.MailMessage (ant.apache.org)\r\n" Literal "\r\n" Literal "test line 1\r\n" Literal "test line 2\r\n" Literal "\r\n" Literal ".\r\n" Literal "250\r\n" Literal "QUIT\r\n" Literal "221\r\n" StatementExpression MethodInvocation MethodInvocation expectedResult length MethodInvocation result length assertEquals StatementExpression MethodInvocation MemberReference expectedResult MemberReference result assertEquals IfStatement MethodInvocation testMailClient isFailed BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient getFailMessage fail	0
MethodDeclaration Modifier public testrvtype StatementExpression MethodInvocation Literal "testrvtype" executeTarget	0
MethodDeclaration Modifier public final setKey FormalParameter ReferenceType String key StatementExpression Assignment This MemberReference key MemberReference key =	0
MethodDeclaration Modifier private static ReferenceType String getSignString FormalParameter BasicType boolean attr ReturnStatement TernaryExpression MemberReference attr MemberReference SET MemberReference UNSET	1
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly ReturnStatement Literal true	0
MethodDeclaration Modifier protected normalize FormalParameter ReferenceType String files IfStatement BinaryOperation != MemberReference files Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i files MemberReference ArraySelector MemberReference i MethodInvocation Literal '\\' Literal '/' replace files =	0
MethodDeclaration Modifier public testFilterSet IOException StatementExpression MethodInvocation Literal "testFilterSet" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator tmp ClassCreator ReferenceType File MethodInvocation getProjectDir Literal "copy.filterset.tmp" LocalVariableDeclaration ReferenceType File VariableDeclarator check ClassCreator ReferenceType File MethodInvocation getProjectDir Literal "expected/copy.filterset.filtered" StatementExpression MethodInvocation MethodInvocation tmp exists assertTrue StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference tmp MemberReference check contentEquals assertTrue	0
MethodDeclaration Modifier public final setWritable FormalParameter BasicType boolean writable StatementExpression SuperMethodInvocation MemberReference writable setInternalWritable	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal "asis" Literal "remove"	0
MethodDeclaration Modifier public ReferenceType Vector getGroups FormalParameter ReferenceType String argument BuildException ReturnStatement MethodInvocation MemberReference argument MemberReference MATCH_DEFAULT getGroups	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation MemberReference REPORT resolveFile getProject LocalVariableDeclaration ReferenceType FileReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType FileReader MemberReference f = LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation FileUtils MemberReference reader readFully StatementExpression MethodInvocation BinaryOperation > MethodInvocation content BinaryOperation + Literal Literal indexOf Literal 0 assertTrue IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close StatementExpression MethodInvocation f delete	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static ReferenceType ConstantPoolEntry readEntry FormalParameter ReferenceType DataInputStream cpStream IOException LocalVariableDeclaration ReferenceType ConstantPoolEntry VariableDeclarator cpInfo Literal null LocalVariableDeclaration BasicType int VariableDeclarator cpTag MethodInvocation cpStream readUnsignedByte SwitchStatement MemberReference cpTag SwitchStatementCase StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType Utf8CPInfo = BreakStatement SwitchStatementCase CONSTANT_INTEGER StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType LongCPInfo = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType = BreakStatement SwitchStatementCase CONSTANT_CLASS StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType ClassCPInfo = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType StringCPInfo = BreakStatement SwitchStatementCase CONSTANT_FIELDREF StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType FieldRefCPInfo = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType MethodRefCPInfo = BreakStatement SwitchStatementCase CONSTANT_INTERFACEMETHODREF StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType InterfaceMethodRefCPInfo = BreakStatement SwitchStatementCase CONSTANT_NAMEANDTYPE StatementExpression Assignment MemberReference cpInfo ClassCreator ReferenceType NameAndTypeCPInfo = BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType BinaryOperation + Literal "Invalid Constant Pool entry Type " MemberReference cpTag StatementExpression MethodInvocation cpInfo MemberReference cpStream read ReturnStatement MemberReference cpInfo	0
MethodDeclaration Modifier public FormalParameter BasicType boolean setBeans StatementExpression Assignment This MemberReference setBeans MemberReference setBeans =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "This task is deprecated and will be removed in a future Literal "of It is now part of the Literal MemberReference Project MSG_WARN log StatementExpression MethodInvocation validate IfStatement MethodInvocation ! isDisassemblyNeeded BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType NetCommand VariableDeclarator command ClassCreator ReferenceType NetCommand This Literal MemberReference executable StatementExpression MethodInvocation command Literal true setFailOnError StatementExpression MethodInvocation command Literal addArgument StatementExpression MethodInvocation command BinaryOperation + Literal MethodInvocation destFile toString addArgument IfStatement MemberReference ! progressBar BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference linenumbers BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference showSource BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference quoteallnames BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference header BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference ! assembler BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference metadata BlockStatement StatementExpression MethodInvocation command Literal addArgument StatementExpression MethodInvocation command Literal "/item:" MemberReference item addArgument IfStatement MemberReference rawExceptionHandling BlockStatement StatementExpression MethodInvocation command Literal addArgument StatementExpression MethodInvocation command MethodInvocation EncodingTypes MemberReference encoding getEncodingOption addArgument IfStatement MemberReference bytes BlockStatement StatementExpression MethodInvocation command Literal addArgument StatementExpression MethodInvocation command Literal MemberReference visibility addArgument StatementExpression MethodInvocation command MethodInvocation sourceFile getAbsolutePath addArgument LocalVariableDeclaration ReferenceType File VariableDeclarator execDir MemberReference resourceDir IfStatement BinaryOperation == MemberReference execDir Literal null BlockStatement StatementExpression Assignment MemberReference execDir MethodInvocation destFile getParentFile = StatementExpression MethodInvocation command MemberReference execDir setDirectory TryStatement StatementExpression MethodInvocation command runCommand CatchClause CatchClauseParameter BuildException e IfStatement MethodInvocation destFile exists BlockStatement StatementExpression MethodInvocation Literal "Deleting destination file as it may be log StatementExpression MethodInvocation destFile delete ThrowStatement MemberReference e	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceCollection c IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference resources TernaryExpression BinaryOperation == MemberReference resources Literal null ClassCreator ReferenceType Resources MemberReference resources = StatementExpression MethodInvocation resources MemberReference c add	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean verbose StatementExpression Assignment This MemberReference verbose MemberReference verbose =	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType Marker createTargetfile IfStatement BinaryOperation != MemberReference targetFilePos Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support multiple " Literal "targetfile MethodInvocation getLocation StatementExpression Assignment MemberReference targetFilePos MethodInvocation cmdl = StatementExpression Assignment MemberReference srcIsFirst BinaryOperation != MemberReference srcFilePos Literal null = ReturnStatement MemberReference targetFilePos	1
MethodDeclaration Modifier public BasicType boolean isCheckedOut IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference checkedout	0
MethodDeclaration Modifier public setOutput FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out = StatementExpression Assignment MemberReference output ClassCreator ReferenceType PrintWriter MemberReference out =	0
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType File file StatementExpression MethodInvocation MethodInvocation file getAbsolutePath setValue	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference vmVersion	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public setJarfile FormalParameter ReferenceType File jarFile StatementExpression MethodInvocation MemberReference jarFile setDestFile	1
MethodDeclaration Modifier private log FormalParameter ReferenceType String msg IfStatement MemberReference debug StatementExpression MethodInvocation System.out BinaryOperation + This MemberReference msg println	1
MethodDeclaration Modifier public setUnsafe FormalParameter BasicType boolean unsafe StatementExpression Assignment This MemberReference unsafe MemberReference unsafe =	0
MethodDeclaration Modifier public BasicType boolean getIncludeEmptyDirs ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceComparator c IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference v TernaryExpression BinaryOperation == MemberReference v Literal null ClassCreator ReferenceType Vector MemberReference v = StatementExpression MethodInvocation v MemberReference c add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s FormalParameter ReferenceType Integer timeout LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is This MethodInvocation getInputStream TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference timeout Literal null BinaryOperation == MethodInvocation timeout intValue Literal 0 BlockStatement WhileStatement BinaryOperation == MethodInvocation sb MethodInvocation MemberReference s indexOf toString Literal - 1 BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MethodInvocation is read append BlockStatement LocalVariableDeclaration ReferenceType Calendar VariableDeclarator endTime MethodInvocation Calendar getInstance StatementExpression MethodInvocation endTime MemberReference Calendar SECOND MethodInvocation timeout intValue add WhileStatement BinaryOperation == MethodInvocation sb MethodInvocation MemberReference s indexOf toString Literal - 1 BlockStatement WhileStatement BinaryOperation && MethodInvocation Calendar MethodInvocation MemberReference endTime before getInstance BinaryOperation == MethodInvocation is available Literal 0 BlockStatement StatementExpression MethodInvocation Thread Literal 250 sleep IfStatement BinaryOperation == MethodInvocation is available Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Response timed-out waiting for \"" MemberReference s Literal '\"' MethodInvocation getLocation StatementExpression MethodInvocation sb Cast BasicType char MethodInvocation is read append StatementExpression MethodInvocation MethodInvocation sb toString MemberReference Project MSG_INFO log CatchClause CatchClauseParameter BuildException be ThrowStatement MemberReference be CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier private BasicType boolean mkdirs FormalParameter ReferenceType File f IfStatement MethodInvocation ! f mkdirs BlockStatement TryStatement StatementExpression MethodInvocation Thread MemberReference MKDIR_RETRY_SLEEP_MILLIS sleep ReturnStatement MethodInvocation f mkdirs CatchClause CatchClauseParameter InterruptedException ex ReturnStatement MethodInvocation f mkdirs ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean isExists IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement BinaryOperation || BinaryOperation == MemberReference exists Literal null MethodInvocation exists booleanValue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class clazz StatementExpression Assignment This MemberReference clazz MemberReference clazz = IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement StatementExpression Assignment This MemberReference classLoader TernaryExpression BinaryOperation == MemberReference classLoader Literal null MethodInvocation clazz getClassLoader MemberReference classLoader = StatementExpression Assignment This MemberReference className TernaryExpression BinaryOperation == MemberReference className Literal null MethodInvocation clazz getName MemberReference className =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/core/immutable.xml" configureProject	0
MethodDeclaration Modifier private displaySpecification FormalParameter Modifier final ReferenceType Specification specification LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator sections MethodInvocation specification getSections IfStatement BinaryOperation != Literal null MemberReference sections BlockStatement LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Sections: " ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference sections length MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i sections append StatementExpression MethodInvocation System.out MemberReference sb println StatementExpression MethodInvocation System.out MethodInvocation specification toString println	1
MethodDeclaration Modifier public ReferenceType Method getElementMethod FormalParameter ReferenceType String elementName BuildException LocalVariableDeclaration ReferenceType Object VariableDeclarator creator MethodInvocation nestedCreators MemberReference elementName get IfStatement BinaryOperation == MemberReference creator Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedElementException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MethodInvocation bean getName Literal " doesn't support the \"" MemberReference elementName Literal "\" element." MemberReference elementName ReturnStatement Cast ReferenceType NestedCreator MemberReference creator	1
MethodDeclaration Modifier public testParseHumanSizes Exception LocalVariableDeclaration Modifier final BasicType long VariableDeclarator KILOBYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator MEGABYTE BinaryOperation * MemberReference KILOBYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator GIGABYTE BinaryOperation * MemberReference MEGABYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator TERABYTE BinaryOperation * MemberReference GIGABYTE Literal 1024 LocalVariableDeclaration Modifier final BasicType long VariableDeclarator PETABYTE BinaryOperation * MemberReference TERABYTE Literal 1024 StatementExpression MethodInvocation MethodInvocation StringUtils Literal "1K" parseHumanSizes MemberReference KILOBYTE assertEquals StatementExpression MethodInvocation MethodInvocation StringUtils Literal "1M" parseHumanSizes MemberReference MEGABYTE assertEquals StatementExpression MethodInvocation MethodInvocation StringUtils Literal "1G" parseHumanSizes MemberReference GIGABYTE assertEquals StatementExpression MethodInvocation MethodInvocation StringUtils Literal "1T" parseHumanSizes MemberReference TERABYTE assertEquals StatementExpression MethodInvocation MethodInvocation StringUtils Literal "1P" parseHumanSizes MemberReference PETABYTE assertEquals StatementExpression MethodInvocation MethodInvocation StringUtils Literal "1" parseHumanSizes Literal 1L assertEquals	1
MethodDeclaration Modifier protected doEndTest1 FormalParameter ReferenceType String text StatementExpression MethodInvocation reg Literal "endtest$" setPattern StatementExpression MethodInvocation Literal "endtest$ in default mode" MethodInvocation ! reg MemberReference text matches assertTrue StatementExpression MethodInvocation Literal "endtest$ in single line mode" MethodInvocation ! reg MemberReference text MemberReference RegexpMatcher MATCH_SINGLELINE matches assertTrue StatementExpression MethodInvocation Literal "endtest$ in multi line mode" MethodInvocation reg MemberReference text MemberReference RegexpMatcher MATCH_MULTILINE matches assertTrue	1
MethodDeclaration Modifier public test4 StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "test1" Literal "from included entity" expectLog	0
MethodDeclaration Modifier public static ReferenceType File FormalParameter ReferenceType Class c ReturnStatement MethodInvocation MethodInvocation Locator MemberReference c	0
MethodDeclaration Modifier private BasicType boolean valid FormalParameter ReferenceType Project p IfStatement BinaryOperation && BinaryOperation != MemberReference ifCond Literal null BinaryOperation == MethodInvocation p MemberReference ifCond getProperty Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference unlessCond Literal null BinaryOperation != MethodInvocation p MemberReference unlessCond getProperty Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType TestRunListener listener FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation listener MemberReference evt	0
MethodDeclaration Modifier public BasicType boolean isReference FormalParameter ReferenceType String ent IfStatement BinaryOperation || BinaryOperation == MethodInvocation ent Literal 0 charAt Literal '&' MethodInvocation ! ent Literal ";" endsWith BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation ent Literal 1 charAt Literal '#' BlockStatement IfStatement BinaryOperation == MethodInvocation ent Literal 2 charAt Literal 'x' BlockStatement TryStatement StatementExpression MethodInvocation Integer MethodInvocation ent Literal 3 BinaryOperation - MethodInvocation ent length Literal 1 substring Literal 16 parseInt ReturnStatement Literal true CatchClause CatchClauseParameter NumberFormatException nfe ReturnStatement Literal false BlockStatement TryStatement StatementExpression MethodInvocation Integer MethodInvocation ent Literal 2 BinaryOperation - MethodInvocation ent length Literal 1 substring parseInt ReturnStatement Literal true CatchClause CatchClauseParameter NumberFormatException nfe ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation ent Literal 1 BinaryOperation - MethodInvocation ent length Literal 1 substring ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference knownEntities length MemberReference ++ i BlockStatement IfStatement MethodInvocation name MemberReference ArraySelector MemberReference i knownEntities equals BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public testCreatePropertiesCacheViaModifiedSelector LocalVariableDeclaration ReferenceType File VariableDeclarator cachefile ClassCreator ReferenceType File MemberReference basedir Literal "cachefile.properties" TryStatement StatementExpression MethodInvocation makeBed LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator s Cast ReferenceType ModifiedSelector MethodInvocation getSelector StatementExpression MethodInvocation s Literal false setDelayUpdate StatementExpression MethodInvocation s Literal "cache.cachefile" MemberReference cachefile addParam LocalVariableDeclaration ReferenceType ModifiedSelector ReferenceType CacheName VariableDeclarator cacheName ClassCreator ReferenceType ModifiedSelector ReferenceType CacheName StatementExpression MethodInvocation cacheName Literal "propertyfile" setValue StatementExpression MethodInvocation s MemberReference cacheName StatementExpression MethodInvocation s Literal true setUpdate LocalVariableDeclaration ReferenceType String VariableDeclarator results MethodInvocation MemberReference s selectionString StatementExpression MethodInvocation Literal "Cache file is not created." MethodInvocation cachefile exists assertTrue StatementExpression MethodInvocation cleanupBed IfStatement BinaryOperation != MemberReference cachefile Literal null StatementExpression MethodInvocation cachefile delete	1
MethodDeclaration Modifier protected declareSysProperty FormalParameter ReferenceType ExecTask cmd FormalParameter ReferenceType Environment ReferenceType Variable property BuildException StatementExpression MethodInvocation MemberReference cmd BinaryOperation + Literal "-J-D" MethodInvocation property getContent addValue	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation writeByteArray StatementExpression MethodInvocation Literal '\n' writeAsArray StatementExpression MethodInvocation stream assertInvoked	0
MethodDeclaration Modifier public setResultProperty FormalParameter ReferenceType String resultProperty StatementExpression Assignment This MemberReference resultProperty MemberReference resultProperty = StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration Modifier public static addText FormalParameter ReferenceType Project project FormalParameter ReferenceType Object target FormalParameter ReferenceType String text BuildException IfStatement BinaryOperation == MemberReference text Literal null BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference target ReferenceType TypeAdapter BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType TypeAdapter MemberReference target = StatementExpression MethodInvocation IntrospectionHelper MethodInvocation MemberReference project MemberReference target MemberReference text addText MemberReference project MethodInvocation target getClass getHelper	1
MethodDeclaration Modifier public copyInheritedProperties FormalParameter ReferenceType Project other LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator ph MethodInvocation PropertyHelper This getPropertyHelper StatementExpression MethodInvocation ph MemberReference other copyInheritedProperties	0
MethodDeclaration Modifier public testDateCheck StatementExpression MethodInvocation Literal "testDateCheck" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Expecting message ending with is up to date.' but got '" MemberReference log Literal "'" MethodInvocation log Literal is up to date." endsWith assertTrue	0
MethodDeclaration Modifier public ReferenceType String describeCommand ReturnStatement MethodInvocation This describeCommand	0
MethodDeclaration Modifier public test9 IOException StatementExpression MethodInvocation Literal "test9" executeTarget	0
MethodDeclaration Modifier public testNoFrames Exception StatementExpression MethodInvocation Literal "testNoFrames" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/junit-noframes.html" StatementExpression MethodInvocation Literal "No junit-noframes.html present. Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration FormalParameter ReferenceType IntrospectionHelper ih StatementExpression Assignment This MemberReference ih MemberReference ih =	0
MethodDeclaration Modifier private configureId FormalParameter ReferenceType Object target FormalParameter ReferenceType AttributeList attr LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation attr Literal "id" getValue IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation project MemberReference id MemberReference target	1
MethodDeclaration Modifier public setTypeKind FormalParameter ReferenceType String tk StatementExpression Assignment MemberReference mTypeKind MemberReference tk =	0
MethodDeclaration Modifier private appendExtensionList FormalParameter Modifier final ReferenceType Attributes attributes FormalParameter Modifier final ReferenceType Attributes ReferenceType Name extensionKey FormalParameter Modifier final ReferenceType String listPrefix FormalParameter Modifier final BasicType int size LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb MemberReference listPrefix append StatementExpression MethodInvocation sb MemberReference i append StatementExpression MethodInvocation sb Literal ' ' append StatementExpression MethodInvocation attributes MemberReference extensionKey MethodInvocation sb toString put	0
MethodDeclaration Modifier public setFork FormalParameter BasicType boolean f StatementExpression Assignment MemberReference fork MemberReference f =	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MethodInvocation parent getClassName	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference unsafe	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement TernaryExpression MethodInvocation MethodInvocation MemberReference WRITABLE_SKIP equals getWritableFiles Literal false MemberReference failOnError	1
MethodDeclaration Modifier public appendSelector FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation selectorsList MemberReference selector addElement	1
MethodDeclaration Modifier protected testBaseDirs FormalParameter ReferenceType String target FormalParameter ReferenceType String dirs LocalVariableDeclaration ReferenceType SubAntTest ReferenceType BasedirChecker VariableDeclarator bc ClassCreator ReferenceType SubAntTest ReferenceType BasedirChecker MemberReference dirs StatementExpression MethodInvocation project MemberReference bc StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator ae MethodInvocation bc getError IfStatement BinaryOperation != MemberReference ae Literal null BlockStatement ThrowStatement MemberReference ae StatementExpression MethodInvocation project MemberReference bc removeBuildListener	0
MethodDeclaration Modifier protected ReferenceType Exception LocalVariableDeclaration ReferenceType VariableDeclarator client ClassCreator ReferenceType StatementExpression MethodInvocation client Literal true setDebug StatementExpression MethodInvocation client Literal "127.0.0.1" setHost StatementExpression MethodInvocation client MemberReference PORT setPort ReturnStatement MemberReference client	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "it is required to fail Literal "test2" expectSpecificBuildException	0
MethodDeclaration Modifier private processFile FormalParameter ReferenceType File src BuildException IfStatement MethodInvocation ! src exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Replace: source file " MethodInvocation src getPath Literal " doesn't exist" MethodInvocation getLocation LocalVariableDeclaration ReferenceType File VariableDeclarator temp Literal null LocalVariableDeclaration ReferenceType FileInput VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType FileOutput VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInput MemberReference src = StatementExpression Assignment MemberReference temp MethodInvocation FILE_UTILS Literal "rep" Literal ".tmp" MethodInvocation src getParentFile createTempFile = StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileOutput MemberReference temp = LocalVariableDeclaration BasicType int VariableDeclarator repCountStart MemberReference replaceCount StatementExpression MethodInvocation MethodInvocation src getPath logFilterChain StatementExpression MethodInvocation out MethodInvocation MethodInvocation in getOutputBuffer buildFilterChain setInputBuffer WhileStatement MethodInvocation in readChunk BlockStatement IfStatement MethodInvocation processFilterChain BlockStatement StatementExpression MethodInvocation out process StatementExpression MethodInvocation flushFilterChain StatementExpression MethodInvocation out flush StatementExpression MethodInvocation in close StatementExpression Assignment MemberReference in Literal null = StatementExpression MethodInvocation out close StatementExpression Assignment MemberReference out Literal null = LocalVariableDeclaration BasicType boolean VariableDeclarator changes BinaryOperation != MemberReference replaceCount MemberReference repCountStart IfStatement MemberReference changes BlockStatement StatementExpression MethodInvocation FILE_UTILS MemberReference temp MemberReference src rename StatementExpression Assignment MemberReference temp Literal null = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "IOException in " MemberReference src Literal " - " MethodInvocation ioe MethodInvocation getName getClass Literal ":" MethodInvocation ioe getMessage MemberReference ioe MethodInvocation getLocation IfStatement BinaryOperation != Literal null MemberReference in BlockStatement StatementExpression MethodInvocation in closeQuietly IfStatement BinaryOperation != Literal null MemberReference out BlockStatement StatementExpression MethodInvocation out closeQuietly IfStatement BinaryOperation != MemberReference temp Literal null BlockStatement IfStatement MethodInvocation ! temp delete BlockStatement StatementExpression MethodInvocation temp deleteOnExit	1
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression Assignment This MemberReference append TernaryExpression MemberReference append MemberReference Boolean TRUE MemberReference Boolean FALSE =	1
MethodDeclaration Modifier public setScanIncludedDirectories FormalParameter BasicType boolean b StatementExpression Assignment MemberReference performDirectoryScan MemberReference b =	0
MethodDeclaration Modifier public setAlias FormalParameter Modifier final ReferenceType String alias StatementExpression Assignment This MemberReference alias MemberReference alias =	0
MethodDeclaration Modifier public testRun StatementExpression MethodInvocation Literal "testRun" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getRepository ReturnStatement MemberReference repository	0
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType TestRunListener listener FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation listener MemberReference evt onTestStarted	0
MethodDeclaration Modifier public FormalParameter ReferenceType String fileDirParameter StatementExpression Assignment This MemberReference fileDirParameter MemberReference fileDirParameter =	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier protected ReferenceType File getOutput FormalParameter ReferenceType FormatterElement fe FormalParameter ReferenceType JUnitTest test IfStatement MethodInvocation fe BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation test getOutfile IfStatement BinaryOperation == MemberReference base Literal null BlockStatement StatementExpression Assignment MemberReference base MemberReference JUnitTaskMirror.JUnitTestRunnerMirror IGNORED_FILE_NAME = LocalVariableDeclaration ReferenceType String VariableDeclarator filename BinaryOperation + MemberReference base MethodInvocation fe getExtension LocalVariableDeclaration ReferenceType File VariableDeclarator destFile ClassCreator ReferenceType File MethodInvocation test getTodir MemberReference filename LocalVariableDeclaration ReferenceType String VariableDeclarator absFilename MethodInvocation destFile getAbsolutePath ReturnStatement MethodInvocation MethodInvocation MemberReference absFilename resolveFile getProject ReturnStatement Literal null	0
MethodDeclaration Modifier public synchronized BasicType int read IOException IfStatement MemberReference ! initialized BlockStatement StatementExpression MethodInvocation initInternalFilters ReturnStatement MethodInvocation in read	1
MethodDeclaration Modifier public addSyspropertyset FormalParameter ReferenceType sysp StatementExpression MethodInvocation MethodInvocation MemberReference sysp addSyspropertyset getCommandline	0
MethodDeclaration Modifier public BasicType int getMajorVersion ReturnStatement Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference resolver MemberReference v =	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation JXPathIntrospector ClassReference ReferenceType Hashtable ClassReference ReferenceType JXPathHashtableHandler registerDynamicClass StatementExpression Assignment MemberReference helper jxpathCtx MethodInvocation JXPathContext MemberReference project newContext = StatementExpression MethodInvocation helper.jxpathCtx ClassCreator ReferenceType AntVariables setVariables LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator MethodInvocation PropertyHelper MemberReference project getPropertyHelper StatementExpression MethodInvocation helper MemberReference project setProject StatementExpression MethodInvocation helper MethodInvocation getNext setNext StatementExpression MethodInvocation MemberReference helper setNext StatementExpression MethodInvocation project Literal "jxpathTask" This	1
MethodDeclaration Modifier public targetFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier private static ReferenceType ResourceCollection FormalParameter ReferenceType Iterator i ReturnStatement Cast ReferenceType ResourceCollection MethodInvocation i next	0
MethodDeclaration Modifier public testJarWithManifestInNonAsciiDir LocalVariableDeclaration ReferenceType String VariableDeclarator mainjarstring MethodInvocation MethodInvocation Literal "main.jar.nonascii" getProperty getProject LocalVariableDeclaration ReferenceType String VariableDeclarator extjarstring MethodInvocation MethodInvocation Literal "ext.jar.nonascii" getProperty getProject LocalVariableDeclaration ReferenceType VariableDeclarator myPath ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation myPath ClassCreator ReferenceType File MemberReference mainjarstring setLocation StatementExpression MethodInvocation MethodInvocation Literal "build.sysclasspath" Literal "ignore" setUserProperty getProject LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator myLoader MethodInvocation MethodInvocation MemberReference myPath createClassLoader getProject LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation myLoader getClasspath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference mainjarstring MemberReference File pathSeparator MemberReference extjarstring MemberReference path assertEquals	1
MethodDeclaration Modifier public synchronized setupDirectoryScanner FormalParameter ReferenceType ds FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ds MemberReference p setupDirectoryScanner MemberReference p getRef ReturnStatement IfStatement BinaryOperation == MemberReference ds Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "ds cannot be null" StatementExpression MethodInvocation ds MemberReference dir setBasedir LocalVariableDeclaration ReferenceType PatternSet VariableDeclarator ps MethodInvocation MemberReference p mergePatterns StatementExpression MethodInvocation p BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getDataTypeName Literal ": Setup scanner in dir " MemberReference dir Literal " with " MemberReference ps MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation ds MethodInvocation ps MemberReference p getIncludePatterns setIncludes StatementExpression MethodInvocation ds MethodInvocation ps MemberReference p getExcludePatterns setExcludes IfStatement BinaryOperation instanceof MemberReference ds ReferenceType SelectorScanner BlockStatement LocalVariableDeclaration ReferenceType SelectorScanner VariableDeclarator ss Cast ReferenceType SelectorScanner MemberReference ds StatementExpression MethodInvocation ss MethodInvocation MemberReference p getSelectors IfStatement MemberReference useDefaultExcludes BlockStatement StatementExpression MethodInvocation ds addDefaultExcludes StatementExpression MethodInvocation ds MemberReference setCaseSensitive	0
MethodDeclaration Modifier public ReferenceType getPath ReturnStatement This MemberReference path	0
MethodDeclaration Modifier public setShouldDestroy FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType String getPublicId ReturnStatement MethodInvocation handler getPublicId	0
MethodDeclaration Modifier public FormalParameter BasicType boolean targetFolderAbsolute StatementExpression Assignment This MemberReference targetFolderAbsolute MemberReference targetFolderAbsolute =	0
MethodDeclaration Modifier public ReferenceType String getUsername ReturnStatement MemberReference username	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration * @see */ Modifier public taskFinished FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType Logger VariableDeclarator log MethodInvocation Logger MethodInvocation task MethodInvocation getName getClass getLogger IfStatement BinaryOperation == MethodInvocation event getException Literal null BlockStatement StatementExpression MethodInvocation log BinaryOperation + BinaryOperation + Literal "Task \"" MethodInvocation task getTaskName Literal "\" finished." info BlockStatement StatementExpression MethodInvocation log BinaryOperation + BinaryOperation + Literal "Task \"" MethodInvocation task getTaskName Literal "\" finished with error." MethodInvocation event getException error	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType p IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation > MethodInvocation p size Literal 0 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public run LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator argument ArrayInitializer MethodInvocation javaCommand getArguments TryStatement IfStatement BinaryOperation != MemberReference perm Literal null BlockStatement StatementExpression MethodInvocation perm setSecurityManager StatementExpression MethodInvocation main Literal null MemberReference argument invoke CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType InterruptedException BlockStatement StatementExpression Assignment MemberReference caught MemberReference t = CatchClause CatchClauseParameter Throwable t StatementExpression Assignment MemberReference caught MemberReference t = IfStatement BinaryOperation != MemberReference perm Literal null BlockStatement StatementExpression MethodInvocation perm restoreSecurityManager SynchronizedStatement This StatementExpression MethodInvocation notifyAll	1
MethodDeclaration Modifier public static ReferenceType ComponentHelper getComponentHelper FormalParameter ReferenceType Project project IfStatement BinaryOperation == MemberReference project Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator ph Cast ReferenceType ComponentHelper MethodInvocation project MemberReference COMPONENT_HELPER_REFERENCE getReference IfStatement BinaryOperation != MemberReference ph Literal null BlockStatement ReturnStatement MemberReference ph StatementExpression Assignment MemberReference ph ClassCreator ReferenceType ComponentHelper = StatementExpression MethodInvocation ph MemberReference project setProject StatementExpression MethodInvocation project MemberReference COMPONENT_HELPER_REFERENCE MemberReference ph ReturnStatement MemberReference ph	0
MethodDeclaration Modifier public setPassfile FormalParameter ReferenceType File passFile StatementExpression Assignment This MemberReference passFile MemberReference passFile =	0
MethodDeclaration Modifier public addAnd FormalParameter ReferenceType AndSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/core/location.xml" configureProject	0
MethodDeclaration Modifier public BasicType boolean getKeepCopy ReturnStatement MemberReference mKeep	0
MethodDeclaration Modifier protected ReferenceType Session openSession JSchException LocalVariableDeclaration ReferenceType JSch VariableDeclarator jsch ClassCreator ReferenceType JSch IfStatement BinaryOperation != Literal null MethodInvocation userInfo BlockStatement StatementExpression MethodInvocation jsch MethodInvocation userInfo IfStatement BinaryOperation && MethodInvocation ! userInfo getTrust BinaryOperation != MemberReference knownHosts Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Using known " MemberReference knownHosts MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation jsch MemberReference knownHosts setKnownHosts LocalVariableDeclaration ReferenceType Session VariableDeclarator session MethodInvocation jsch MethodInvocation userInfo getName MemberReference host MemberReference port getSession StatementExpression MethodInvocation session MemberReference userInfo setUserInfo StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Connecting to " MemberReference host Literal ":" MemberReference port log StatementExpression MethodInvocation session connect ReturnStatement MemberReference session	0
MethodDeclaration Modifier public testSelectionBehaviour LocalVariableDeclaration ReferenceType ContainsSelector VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results TryStatement StatementExpression MethodInvocation makeBed StatementExpression Assignment MemberReference s Cast ReferenceType ContainsSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "no such string in test files" setText StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType ContainsSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "Apache setText StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFFTFFFFFFT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType ContainsSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "apache ant" setText StatementExpression MethodInvocation s Literal true StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType ContainsSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "apache ant" setText StatementExpression MethodInvocation s Literal false StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFFTFFFFFFT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType ContainsSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal setText StatementExpression MethodInvocation s Literal true StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFFTFFFFFFT" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType ContainsSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "A p a c h e A n t" setText StatementExpression MethodInvocation s Literal true StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "TFFFTFFFFFFT" MemberReference results assertEquals StatementExpression MethodInvocation cleanupBed	0
MethodDeclaration Modifier public FormalParameter ReferenceType String vm StatementExpression MethodInvocation MemberReference vm setExecutable	0
MethodDeclaration Modifier public testNoOverwrite StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference tempFile2 LocalVariableDeclaration BasicType long VariableDeclarator size MethodInvocation file2 length StatementExpression MethodInvocation MemberReference size Literal 0 assertEquals	0
MethodDeclaration Modifier public synchronized BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator result Literal - 1 TryStatement StatementExpression Assignment MemberReference result SuperMethodInvocation read = CatchClause CatchClauseParameter IOException eyeOhEx IfStatement Literal MethodInvocation MethodInvocation eyeOhEx getMessage equalsIgnoreCase "write end dead" BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation > SuperMemberReference in Literal 0 BinaryOperation < SuperMemberReference out SuperMemberReference MemberReference length buffer BinaryOperation > SuperMemberReference out SuperMemberReference in BlockStatement StatementExpression Assignment MemberReference result BinaryOperation & SuperMemberReference ArraySelector SuperMemberReference ++ out buffer Literal 0xFF = BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "error at LeadPipeInputStream.read(): " MethodInvocation eyeOhEx getMessage MemberReference Project MSG_INFO log ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Hashtable getUserProperties LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator propertiesCopy ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation userProperties keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator name MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation properties MemberReference name get StatementExpression MethodInvocation propertiesCopy MemberReference name MemberReference value put ReturnStatement MemberReference propertiesCopy	0
MethodDeclaration Modifier public testNonForkedCapture IOException StatementExpression MethodInvocation Literal "capture" executeTarget StatementExpression MethodInvocation MethodInvocation getLog Literal "log" assertNoPrint StatementExpression MethodInvocation MethodInvocation getFullLog Literal "debug log" assertNoPrint	0
MethodDeclaration Modifier public onTestFailure FormalParameter ReferenceType TestRunEvent evt LocalVariableDeclaration ReferenceType String VariableDeclarator type TernaryExpression BinaryOperation == MethodInvocation evt getType MemberReference TestRunEvent MemberReference MemberReference ERROR LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference type createElement StatementExpression MethodInvocation lastTestElement MemberReference appendChild LocalVariableDeclaration ReferenceType VariableDeclarator error MethodInvocation evt getError StatementExpression MethodInvocation MemberReference ATTR_MESSAGE MethodInvocation error getMessage setAttribute StatementExpression MethodInvocation MemberReference ATTR_TYPE MethodInvocation error getType setAttribute LocalVariableDeclaration ReferenceType Text VariableDeclarator text MethodInvocation doc MethodInvocation error getStackTrace createTextNode StatementExpression MethodInvocation MemberReference text appendChild StatementExpression MethodInvocation MemberReference evt onTestEnded	0
MethodDeclaration Modifier public BasicType boolean getFailonerror ReturnStatement MemberReference failOnError	0
MethodDeclaration Modifier public ReferenceType String evaluate StatementExpression MethodInvocation validate IfStatement BinaryOperation != MemberReference url Literal null BlockStatement ReturnStatement MethodInvocation getUrl IfStatement MemberReference BlockStatement TryStatement ReturnStatement MethodInvocation file MethodInvocation toExternalForm toURL CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference ERROR_NO_URL_CONVERT MemberReference file ReturnStatement MethodInvocation file toString	1
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal "test2" executeTarget StatementExpression MethodInvocation Literal not thrown" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal "password is required" MethodInvocation e getMessage assertEquals	0
MethodDeclaration Modifier private ReferenceType Source getSource FormalParameter ReferenceType InputStream is FormalParameter ReferenceType File infile ParserConfigurationException SAXException LocalVariableDeclaration ReferenceType Source VariableDeclarator src Literal null IfStatement BinaryOperation != MemberReference entityResolver Literal null BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference SAXSource FEATURE getFeature getFactory BlockStatement LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator spFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation spFactory Literal true setNamespaceAware LocalVariableDeclaration ReferenceType XMLReader VariableDeclarator reader MethodInvocation spFactory MethodInvocation getXMLReader newSAXParser StatementExpression MethodInvocation reader MemberReference entityResolver setEntityResolver StatementExpression Assignment MemberReference src ClassCreator ReferenceType SAXSource MemberReference reader ClassCreator ReferenceType InputSource MemberReference is = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "xcatalog specified, but " Literal "parser doesn't support SAX" BlockStatement StatementExpression Assignment MemberReference src ClassCreator ReferenceType StreamSource MemberReference is = StatementExpression MethodInvocation src MethodInvocation JAXPUtils MemberReference infile getSystemId setSystemId ReturnStatement MemberReference src	1
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression Assignment This MemberReference append MemberReference append =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String string LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference string Literal ";" WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator descriptor MethodInvocation tokens nextToken LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation descriptor Literal 'L' indexOf IfStatement BinaryOperation != MemberReference pos Literal - 1 BlockStatement StatementExpression MethodInvocation MethodInvocation descriptor BinaryOperation + MemberReference pos Literal 1 substring addSlashClass	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType GlobPatternMapper VariableDeclarator m ClassCreator ReferenceType GlobPatternMapper StatementExpression MethodInvocation m Literal "foo*" StatementExpression MethodInvocation m Literal StatementExpression MethodInvocation Literal "Shouldn\'t match foo*" MethodInvocation m Literal "bar.baz" mapFileName assertNull LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation m Literal "foo.bar" mapFileName StatementExpression MethodInvocation Literal "Should match foo*" MemberReference result assertNotNull StatementExpression MethodInvocation Literal "only one result for foo.bar" Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals StatementExpression MethodInvocation m Literal "*foo" StatementExpression Assignment MemberReference result MethodInvocation m Literal "foo.bar" mapFileName = StatementExpression MethodInvocation Literal ".barfoo" MemberReference ArraySelector Literal 0 result assertEquals	0
MethodDeclaration Modifier public setHref FormalParameter ReferenceType String hr StatementExpression Assignment MemberReference href MemberReference hr =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected ReferenceType ResourceCollection assertFilesystemOnly FormalParameter ReferenceType ResourceCollection rc IfStatement BinaryOperation && BinaryOperation != MemberReference rc Literal null MethodInvocation ! rc isFilesystemOnly BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getDataTypeName Literal " only filesystem resources." ReturnStatement MemberReference rc	0
MethodDeclaration Modifier public testMultipleTargets StatementExpression MethodInvocation Literal "multiple-targets" Literal "tadadctbdbtc" expectLog	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String argv LocalVariableDeclaration BasicType int VariableDeclarator sleepTime Literal 10 LocalVariableDeclaration ReferenceType String VariableDeclarator logFile Literal "spawn.log" IfStatement BinaryOperation >= MemberReference argv length Literal 1 BlockStatement StatementExpression Assignment MemberReference sleepTime MethodInvocation Integer MemberReference ArraySelector Literal 0 argv parseInt = IfStatement BinaryOperation >= MemberReference argv length Literal 2 BlockStatement StatementExpression Assignment MemberReference logFile MemberReference ArraySelector Literal 1 argv = LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator out Literal null TryStatement StatementExpression MethodInvocation Thread BinaryOperation * MemberReference sleepTime Literal 1000 sleep CatchClause CatchClauseParameter InterruptedException ex StatementExpression MethodInvocation System.out Literal "my sleep was interrupted" println TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dest ClassCreator ReferenceType File MemberReference logFile LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference dest StatementExpression Assignment MemberReference out ClassCreator ReferenceType OutputStreamWriter MemberReference fos = StatementExpression MethodInvocation out Literal "bye bye\n" write CatchClause CatchClauseParameter Exception ex TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public FormalParameter ReferenceType String rootNamespace StatementExpression Assignment This MemberReference rootNamespace MemberReference rootNamespace =	0
MethodDeclaration Modifier protected BasicType boolean assumeJava14 ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "javac1.4" BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "classic" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_4 isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "modern" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_4 isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "extJavac" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_4 isJavaVersion	1
MethodDeclaration Modifier public testAbsolute3 StatementExpression MethodInvocation MethodInvocation Literal "extended-setup" executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator tmpdir BinaryOperation + MethodInvocation MethodInvocation getBaseDir MethodInvocation getAbsolutePath MethodInvocation MemberReference File separatorChar Literal '/' replace getProject Literal "/tmp" StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal "/**/*" setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setExcludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal "/alpha/beta/beta.xml" BinaryOperation + MemberReference tmpdir Literal "/alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal "/alpha/beta" BinaryOperation + MemberReference tmpdir Literal "/alpha/beta/gamma" BinaryOperation + MemberReference tmpdir Literal "/delta" compareFiles	0
MethodDeclaration Modifier public testFailed Exception LocalVariableDeclaration ReferenceType Process VariableDeclarator process MethodInvocation Literal - 1 getProcess StatementExpression MethodInvocation watchdog MemberReference process start LocalVariableDeclaration BasicType int VariableDeclarator retCode MethodInvocation process waitFor StatementExpression MethodInvocation Literal "process should not have been killed" MethodInvocation ! watchdog killedProcess assertTrue StatementExpression MethodInvocation BinaryOperation + Literal "return code is invalid: " MemberReference retCode BinaryOperation != MemberReference retCode Literal 0 assertTrue	1
MethodDeclaration Modifier public synchronized setFollowSymlinks FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference ds Literal null =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "wc.can.run" getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected output" Literal "3" MethodInvocation MethodInvocation trim Literal "redirector.out" getFileString assertEquals StatementExpression MethodInvocation Literal "property Literal "3" MethodInvocation MethodInvocation Literal "redirector.out" getProperty MethodInvocation trim getProject assertEquals StatementExpression MethodInvocation Literal "unexpected error output" MethodInvocation Literal "redirector.err" getFileString assertNull StatementExpression MethodInvocation Literal "redirector.err" Literal "" assertPropertyEquals	0
MethodDeclaration Modifier private static ReferenceType DocumentBuilder getDocumentBuilder TryStatement ReturnStatement MethodInvocation DocumentBuilderFactory MethodInvocation newDocumentBuilder newInstance CatchClause CatchClauseParameter Exception exc ThrowStatement ClassCreator ReferenceType MemberReference exc	1
MethodDeclaration Modifier private ReferenceType getClasspath LocalVariableDeclaration ReferenceType VariableDeclarator cp Literal null IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference cp ClassCreator MethodInvocation Literal "last" concatSystemClasspath ReferenceType MethodInvocation getProject = BlockStatement StatementExpression Assignment MemberReference cp MethodInvocation classpath Literal "ignore" concatSystemClasspath = ReturnStatement MemberReference cp	0
MethodDeclaration Modifier public testXmlCatalogFiles StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf Literal "<DigestAlgorithm:" append StatementExpression MethodInvocation buf MethodInvocation MemberReference algorithm append Literal "algorithm=" append StatementExpression MethodInvocation buf MethodInvocation MemberReference provider append Literal ";provider=" append StatementExpression MethodInvocation buf Literal ">" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public ReferenceType String getSubSystem ReturnStatement MemberReference subSystem	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference src MemberReference file =	0
MethodDeclaration Modifier public testNested StatementExpression MethodInvocation Literal "nested" Literal "/abc/a:/abc/b" expectLog	0
MethodDeclaration Modifier public ReferenceType String getEnvironment ReturnStatement MemberReference env	0
MethodDeclaration Modifier public ReferenceType Integer getJvmDebugLevel ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isIncluded FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getPattern includes MemberReference ArraySelector MemberReference i MethodInvocation getSelectorList includes MemberReference name MemberReference isCaseSensitive matchPath BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier private static BasicType int getArchiveLocationIndex FormalParameter ReferenceType File home BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference home Literal null MethodInvocation ! home isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "JavaCC home must be a valid directory." ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ARCHIVE_LOCATIONS length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference home MemberReference ArraySelector MemberReference i ARCHIVE_LOCATIONS IfStatement MethodInvocation f exists BlockStatement ReturnStatement MemberReference i ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find a path to JavaCC.zip " Literal "or javacc.jar from '" MemberReference home Literal "'."	1
MethodDeclaration Modifier private BasicType boolean isRmiStub FormalParameter ReferenceType String affectedClass FormalParameter ReferenceType String className ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation MemberReference affectedClass MemberReference className MemberReference DefaultRmicAdapter RMI_STUB_SUFFIX isStub MethodInvocation MemberReference affectedClass MemberReference className MemberReference DefaultRmicAdapter RMI_SKEL_SUFFIX isStub MethodInvocation MemberReference affectedClass MemberReference className MemberReference RMI_STUB_SUFFIX isStub MethodInvocation MemberReference affectedClass MemberReference className MemberReference RMI_SKEL_SUFFIX isStub	0
MethodDeclaration Modifier protected BasicType boolean isActive ReturnStatement This MemberReference listUncontrolled	0
MethodDeclaration Modifier public setSrc FormalParameter ReferenceType File file StatementExpression MethodInvocation helper MemberReference file setSrc	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference descr MemberReference text =	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier public test2 IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/beta.xml" Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal "alpha/beta" Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference ant Literal null BlockStatement StatementExpression MethodInvocation ant MemberReference output handleErrorFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorFlush	1
MethodDeclaration Modifier public IfStatement MemberReference ! supportsSymlinks BlockStatement ReturnStatement IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fsDestination Cast ReferenceType FileSet MethodInvocation MethodInvocation Literal "fileset-destination-without-selector" getReference getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator dsDestination MethodInvocation fsDestination MethodInvocation getProject getDirectoryScanner StatementExpression MethodInvocation dsDestination scan StatementExpression MethodInvocation MemberReference dsDestination ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "1/foo is not Literal "unziptestout/1/foo" assertFileMissing StatementExpression MethodInvocation Literal "2/bar is Literal "unziptestout/2/bar" assertFileExists	0
MethodDeclaration Modifier public BasicType boolean getFailonerror ReturnStatement MemberReference failOnError	0
MethodDeclaration Modifier public addPropertyset FormalParameter ReferenceType ref StatementExpression MethodInvocation assertNotReference StatementExpression MethodInvocation setRefs MemberReference ref addElement	0
MethodDeclaration Modifier public setPreserveTime FormalParameter BasicType boolean pt StatementExpression Assignment MemberReference mPtime MemberReference pt =	0
MethodDeclaration Modifier protected BasicType boolean isIncluded FormalParameter ReferenceType String name StatementExpression MethodInvocation ensureNonPatternSetsReady IfStatement TernaryExpression MethodInvocation isCaseSensitive MethodInvocation includeNonPatterns MemberReference name contains MethodInvocation includeNonPatterns MethodInvocation name toUpperCase contains BlockStatement ReturnStatement Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includePatterns length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i includePatterns MemberReference name MethodInvocation isCaseSensitive matchPath BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType int getName ReturnStatement Literal 1	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference VALUES	0
MethodDeclaration Modifier public setDir FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier public static BasicType boolean contentEquals FormalParameter ReferenceType Resource r1 FormalParameter ReferenceType Resource r2 FormalParameter BasicType boolean text IOException IfStatement BinaryOperation != MethodInvocation r1 isExists MethodInvocation r2 isExists BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! r1 isExists BlockStatement ReturnStatement Literal true IfStatement BinaryOperation || MethodInvocation r1 isDirectory MethodInvocation r2 isDirectory BlockStatement ReturnStatement Literal false IfStatement MethodInvocation r1 MemberReference r2 equals BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && MemberReference ! text BinaryOperation != MethodInvocation r1 getSize MethodInvocation r2 getSize BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation == MethodInvocation MemberReference r1 MemberReference r2 MemberReference text compareContent Literal 0	0
MethodDeclaration Modifier public setAlgorithm FormalParameter ReferenceType String algorithm StatementExpression Assignment This MemberReference algorithm MemberReference algorithm =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "This task is deprecated and will be removed in a future Literal "of It is now part of the Literal MemberReference Project MSG_WARN log IfStatement BinaryOperation == MemberReference compiler Literal null BlockStatement StatementExpression Assignment MemberReference compiler MethodInvocation createDefaultCompiler = StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType NetCommand VariableDeclarator command ClassCreator ReferenceType NetCommand This Literal "WSDL" MethodInvocation compiler getCommand StatementExpression MethodInvocation command MemberReference failOnError setFailOnError StatementExpression MethodInvocation compiler MemberReference command applyExtraArgs StatementExpression MethodInvocation command Literal "/nologo" addArgument StatementExpression MethodInvocation command BinaryOperation + Literal MemberReference destFile addArgument StatementExpression MethodInvocation command Literal "/language:" MemberReference language addArgument IfStatement MemberReference server BlockStatement StatementExpression MethodInvocation command Literal "/server" addArgument StatementExpression MethodInvocation command Literal "/namespace:" MemberReference namespace addArgument IfStatement BinaryOperation != MemberReference protocol Literal null BlockStatement StatementExpression MethodInvocation command BinaryOperation + Literal "/protocol:" MemberReference protocol addArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation command Literal "/parsableErrors" addArgument StatementExpression MethodInvocation command MemberReference extraOptions addArgument LocalVariableDeclaration BasicType boolean VariableDeclarator rebuild Literal true LocalVariableDeclaration BasicType long VariableDeclarator destLastModified Literal - 1 IfStatement MethodInvocation destFile exists BlockStatement StatementExpression Assignment MemberReference destLastModified MethodInvocation destFile lastModified = StatementExpression Assignment MemberReference rebuild MethodInvocation MemberReference wsdl MemberReference destLastModified isRebuildNeeded = LocalVariableDeclaration ReferenceType String VariableDeclarator path StatementExpression Assignment MemberReference path MethodInvocation wsdl evaluate = IfStatement BinaryOperation && MethodInvocation ! compiler supportsAbsoluteFiles BinaryOperation != MethodInvocation wsdl getFile Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation wsdl getFile StatementExpression MethodInvocation command MethodInvocation f getParentFile setDirectory StatementExpression Assignment MemberReference path MethodInvocation f getName = StatementExpression MethodInvocation command MemberReference path addArgument LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation schemas iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Schema VariableDeclarator schema Cast ReferenceType Schema MethodInvocation it next StatementExpression Assignment MemberReference rebuild MethodInvocation MemberReference schema MemberReference destLastModified isRebuildNeeded |= StatementExpression MethodInvocation command MethodInvocation schema evaluate addArgument IfStatement MemberReference rebuild BlockStatement StatementExpression MethodInvocation command runCommand	1
MethodDeclaration Modifier public setProcessOutputStream FormalParameter ReferenceType InputStream is StatementExpression MethodInvocation MemberReference is MemberReference out createProcessOutputPump	1
MethodDeclaration Modifier public startPrefixMapping FormalParameter ReferenceType String prefix FormalParameter ReferenceType String uri LocalVariableDeclaration ReferenceType List VariableDeclarator list Cast ReferenceType List MethodInvocation prefixMapping MemberReference prefix get IfStatement BinaryOperation == MemberReference list Literal null BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation prefixMapping MemberReference prefix MemberReference list put StatementExpression MethodInvocation list MemberReference uri add	1
MethodDeclaration Modifier private static ReferenceType Class ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference RMIC_CLASSNAMES length MemberReference ++ i BlockStatement TryStatement ReturnStatement MethodInvocation Class MemberReference ArraySelector MemberReference i RMIC_CLASSNAMES forName CatchClause CatchClauseParameter ClassNotFoundException cnfe ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType createFormat LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation customFormats MemberReference addElement ReturnStatement MemberReference	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public ReferenceType String getElementName FormalParameter ReferenceType Object element ReturnStatement MethodInvocation MemberReference element Literal false getElementName	0
MethodDeclaration Modifier public ReferenceType String mergeExcludes FormalParameter ReferenceType Project p ReturnStatement MethodInvocation MethodInvocation MemberReference p getExcludePatterns MemberReference p mergePatterns	0
MethodDeclaration Modifier public FormalParameter BasicType boolean useimplicitfileset StatementExpression Assignment MemberReference useImplicitFileset MemberReference useimplicitfileset =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal is not empty" MethodInvocation buffer isEmpty assertTrue	0
MethodDeclaration Modifier public testSerial StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/import/subdir/serial.xml" configureProject StatementExpression MethodInvocation Literal assertLogContaining LocalVariableDeclaration ReferenceType String VariableDeclarator fullLog MethodInvocation getFullLog LocalVariableDeclaration ReferenceType String VariableDeclarator substring Literal "Skipped already imported file" StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expecting full log to contain \"" MemberReference substring Literal "\" full log was \"" MemberReference fullLog Literal "\"" BinaryOperation >= MethodInvocation fullLog MemberReference substring indexOf Literal 0 assertTrue	0
MethodDeclaration Modifier public setDir FormalParameter ReferenceType File d StatementExpression Assignment This MemberReference dir MemberReference d =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal "xmlvalidate.xml" configureProject	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal "Double Constant Pool " MethodInvocation getValue	0
MethodDeclaration Modifier public execute TryStatement IfStatement BinaryOperation && Literal MethodInvocation MethodInvocation MethodInvocation Literal "build.sysclasspath" getProperty getProject equals "only" BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation SYSTEM_LOADER_REF MemberReference name equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Changing the system loader is disabled " Literal "by build.sysclasspath=only" MemberReference Project MSG_WARN log ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression BinaryOperation == MemberReference name Literal null MemberReference SYSTEM_LOADER_REF MemberReference name LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation MethodInvocation MemberReference getReference getProject IfStatement MemberReference reset BlockStatement StatementExpression Assignment MemberReference obj Literal null = IfStatement BinaryOperation && BinaryOperation != MemberReference obj Literal null BinaryOperation instanceof MemberReference obj ReferenceType AntClassLoader BlockStatement StatementExpression MethodInvocation Literal "Referenced object is not an AntClassLoader" MemberReference Project MSG_ERR log ReturnStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator acl Cast ReferenceType AntClassLoader MemberReference obj IfStatement BinaryOperation == MemberReference acl Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent Literal null IfStatement BinaryOperation != MemberReference parentName Literal null BlockStatement StatementExpression Assignment MemberReference parent MethodInvocation MethodInvocation MemberReference parentName getReference getProject = IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ClassLoader BlockStatement StatementExpression Assignment MemberReference parent Literal null = IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement StatementExpression Assignment MemberReference parent This MethodInvocation getClass MethodInvocation getClassLoader = IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting parent loader " MemberReference name Literal " " MemberReference parent Literal " " MemberReference MemberReference Project MSG_DEBUG log getProject StatementExpression Assignment MemberReference acl ClassCreator ReferenceType AntClassLoader Cast ReferenceType ClassLoader MemberReference parent MethodInvocation getProject MemberReference classpath MemberReference = StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference acl getProject IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression MethodInvocation acl Literal StatementExpression MethodInvocation MethodInvocation MemberReference acl setCoreLoader getProject IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation classpath list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i list IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation acl MethodInvocation f getAbsolutePath addPathElement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Adding to class loader " MemberReference acl Literal " " MethodInvocation f getAbsolutePath MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace	1
MethodDeclaration Modifier private init IOException StatementExpression Assignment This MemberReference data ClassCreator ReferenceType Data This MemberReference = StatementExpression MethodInvocation Literal 'h' bsPutUByte StatementExpression MethodInvocation BinaryOperation + Literal '0' This MemberReference bsPutUByte StatementExpression Assignment This MemberReference Literal 0 = StatementExpression MethodInvocation initBlock	0
MethodDeclaration Modifier public setUserid FormalParameter ReferenceType String userid StatementExpression Assignment This MemberReference userid MemberReference userid =	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r IfStatement BinaryOperation != MemberReference encoding Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r setRefid	1
MethodDeclaration Modifier public ReferenceType Executor LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference MagicNames ANT_EXECUTOR_REFERENCE getReference IfStatement BinaryOperation == MemberReference o Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation MemberReference MagicNames ANT_EXECUTOR_CLASSNAME getProperty IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement StatementExpression Assignment MemberReference classname ClassReference MethodInvocation getName ReferenceType = StatementExpression MethodInvocation BinaryOperation + Literal "Attempting to create object of type " MemberReference classname MemberReference MSG_DEBUG log TryStatement StatementExpression Assignment MemberReference o MethodInvocation Class MethodInvocation newInstance MemberReference classname Literal true MemberReference coreLoader forName = CatchClause CatchClauseParameter ClassNotFoundException TryStatement StatementExpression Assignment MemberReference o MethodInvocation Class MethodInvocation newInstance MemberReference classname forName = CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation MethodInvocation ex toString MemberReference MSG_ERR log CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation MethodInvocation ex toString MemberReference MSG_ERR log IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to obtain a Target Executor instance." StatementExpression MethodInvocation Cast ReferenceType Executor MemberReference o setExecutor ReturnStatement Cast ReferenceType Executor MemberReference o	0
MethodDeclaration Modifier public testTaskThatIsntDefined StatementExpression MethodInvocation Literal "testTaskThatIsntDefined" Literal "testTaskThatIsntDefined" expectPropertyUnset	0
MethodDeclaration Modifier public FormalParameter ReferenceType File outputDirectory StatementExpression Assignment This MemberReference outputDirectory MemberReference outputDirectory =	0
MethodDeclaration Modifier private assertResultFileExists FormalParameter ReferenceType String classNameFragment FormalParameter ReferenceType String ext StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "result for " MemberReference classNameFragment Literal "Test" MemberReference ext Literal " exists" MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal Literal MemberReference classNameFragment Literal "Test" MemberReference ext resolveFile MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public addDepth FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference outfile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "outfile attribute is required! " Literal "Please set." IfStatement BinaryOperation && MethodInvocation ! haveAddFiles MethodInvocation ! haveMergeFiles BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "addfiles or required! " Literal "Please set." StatementExpression MethodInvocation BinaryOperation + Literal "linking: " MethodInvocation outfile getPath log StatementExpression MethodInvocation BinaryOperation + Literal "compression: " MemberReference compress MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType jlink VariableDeclarator linker ClassCreator ReferenceType jlink StatementExpression MethodInvocation linker MethodInvocation outfile getPath setOutfile StatementExpression MethodInvocation linker MemberReference compress IfStatement MethodInvocation haveMergeFiles BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "merge files: " MethodInvocation toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation linker MethodInvocation list addMergeFiles IfStatement MethodInvocation haveAddFiles BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "add files: " MethodInvocation toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation linker MethodInvocation list addAddFiles TryStatement StatementExpression MethodInvocation linker link CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex MethodInvocation getLocation	1
MethodDeclaration Modifier public setDelimiter FormalParameter ReferenceType String delimiter StatementExpression Assignment This MemberReference delimiter MemberReference delimiter =	0
MethodDeclaration Modifier private regenerateSupportClasses FormalParameter ReferenceType File descriptorFile Exception LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation Literal false MemberReference descriptorFile getCommandLine TryStatement StatementExpression MethodInvocation weblogic.ejbc MemberReference args main CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator newArgs MethodInvocation Literal true MemberReference descriptorFile getCommandLine StatementExpression MethodInvocation weblogic.ejbc MemberReference newArgs main	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "mirrorfiles" executeTarget	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType String fromURI FormalParameter ReferenceType String uri IfStatement MethodInvocation ! uri Literal "file:" startsWith BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Can only handle file: URIs" IfStatement MethodInvocation uri Literal "file://" startsWith BlockStatement StatementExpression Assignment MemberReference uri MethodInvocation uri Literal 7 substring = BlockStatement StatementExpression Assignment MemberReference uri MethodInvocation uri Literal 5 substring = StatementExpression Assignment MemberReference uri MethodInvocation uri Literal '/' MemberReference File separatorChar replace = IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation Os Literal "dos" isFamily MethodInvocation uri Literal "\\" startsWith BinaryOperation > MethodInvocation uri length Literal 2 MethodInvocation Character MethodInvocation uri Literal 1 charAt isLetter BinaryOperation == MethodInvocation uri Literal 2 charAt Literal ':' BlockStatement StatementExpression Assignment MemberReference uri MethodInvocation uri Literal 1 substring = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType CharacterIterator VariableDeclarator iter ClassCreator ReferenceType StringCharacterIterator MemberReference uri ForStatement ForControl VariableDeclaration BasicType char VariableDeclarator c MethodInvocation iter first BinaryOperation != MemberReference c MemberReference CharacterIterator DONE Assignment MemberReference c MethodInvocation iter next = BlockStatement IfStatement BinaryOperation == MemberReference c Literal '%' BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c1 MethodInvocation iter next IfStatement BinaryOperation != MemberReference c1 MemberReference CharacterIterator DONE BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i1 MethodInvocation Character MemberReference c1 Literal 16 digit LocalVariableDeclaration BasicType char VariableDeclarator c2 MethodInvocation iter next IfStatement BinaryOperation != MemberReference c2 MemberReference CharacterIterator DONE BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i2 MethodInvocation Character MemberReference c2 Literal 16 digit StatementExpression MethodInvocation sb Cast BasicType char BinaryOperation + BinaryOperation << MemberReference i1 Literal 4 MemberReference i2 append BlockStatement StatementExpression MethodInvocation sb MemberReference c append LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation sb toString TryStatement StatementExpression Assignment MemberReference path MethodInvocation fu MethodInvocation getAbsolutePath MemberReference path normalize = CatchClause CatchClauseParameter BuildException e ReturnStatement MemberReference path	1
MethodDeclaration Modifier private ReferenceType Driver getDriver BuildException IfStatement BinaryOperation == MemberReference driver Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Driver attribute must be set!" MethodInvocation getLocation LocalVariableDeclaration ReferenceType Driver VariableDeclarator driverInstance Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator dc IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement SynchronizedStatement MemberReference loaderMap IfStatement MemberReference caching BlockStatement StatementExpression Assignment MemberReference loader Cast ReferenceType AntClassLoader MethodInvocation loaderMap MemberReference driver get = IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Loading " MemberReference driver Literal " using AntClassLoader with classpath " MemberReference classpath MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = IfStatement MemberReference caching BlockStatement StatementExpression MethodInvocation loaderMap MemberReference driver MemberReference loader put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Loading " MemberReference driver Literal " using a cached AntClassLoader." MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference dc MethodInvocation loader MemberReference driver loadClass = BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Loading " MemberReference driver Literal " using system loader." MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference dc MethodInvocation Class MemberReference driver forName = StatementExpression Assignment MemberReference driverInstance Cast ReferenceType Driver MethodInvocation dc newInstance = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Class Not Found: JDBC driver " MemberReference driver Literal " could not be loaded" MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Illegal Access: JDBC driver " MemberReference driver Literal " could not be loaded" MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Instantiation Exception: JDBC driver " MemberReference driver Literal " could not be loaded" MemberReference e MethodInvocation getLocation ReturnStatement MemberReference driverInstance	1
MethodDeclaration Modifier private static ReferenceType String mangleChar FormalParameter BasicType char ch LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Integer MemberReference ch toHexString LocalVariableDeclaration BasicType int VariableDeclarator nzeros BinaryOperation - Literal 5 MethodInvocation s length LocalVariableDeclaration BasicType char VariableDeclarator result ArrayCreator BasicType char Literal 6 StatementExpression Assignment MemberReference ArraySelector Literal 0 result Literal '_' = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference nzeros MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result Literal '0' = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference nzeros Literal 1 VariableDeclarator j Literal 0 BinaryOperation < MemberReference i Literal 6 MemberReference ++ i MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result MethodInvocation s MemberReference j charAt = ReturnStatement ClassCreator ReferenceType String MemberReference result	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public testGetExecutableMostPlatforms IfStatement BinaryOperation && MethodInvocation ! Os Literal "netware" isName MethodInvocation ! Os Literal "windows" isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator javaHome MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath MethodInvocation System Literal "java.home" getProperty normalize LocalVariableDeclaration ReferenceType String VariableDeclarator extension TernaryExpression MethodInvocation Os Literal "dos" isFamily Literal ".exe" Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator j MethodInvocation JavaEnvUtils Literal "java" getJreExecutable IfStatement MethodInvocation ! extension Literal "" equals BlockStatement StatementExpression MethodInvocation MethodInvocation j MemberReference extension endsWith assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is absolute" ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference j assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and in the JRE dir" MethodInvocation j MemberReference javaHome startsWith assertTrue StatementExpression Assignment MemberReference j MethodInvocation JavaEnvUtils Literal getJdkExecutable = IfStatement MethodInvocation ! extension Literal "" equals BlockStatement StatementExpression MethodInvocation MethodInvocation j MemberReference extension endsWith assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is absolute" ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference j assertTrue LocalVariableDeclaration ReferenceType String VariableDeclarator javaHomeParent MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath BinaryOperation + MemberReference javaHome Literal "/.." normalize StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and in the JDK dir" MethodInvocation j MemberReference javaHomeParent startsWith assertTrue IfStatement MethodInvocation Os Literal "mac" isFamily BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and in the JRE dir" MethodInvocation j MemberReference javaHome startsWith assertTrue BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference j Literal " is normalized and not in the JRE dir" MethodInvocation ! j MemberReference javaHome startsWith assertTrue StatementExpression MethodInvocation BinaryOperation + Literal "foo" MemberReference extension MethodInvocation JavaEnvUtils Literal "foo" getJreExecutable assertEquals StatementExpression MethodInvocation BinaryOperation + Literal "foo" MemberReference extension MethodInvocation JavaEnvUtils Literal "foo" getJdkExecutable assertEquals	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation ClassReference ReferenceType run	0
MethodDeclaration Modifier static protected ReferenceType File getArchiveFile FormalParameter ReferenceType File home BuildException ReturnStatement ClassCreator ReferenceType File MemberReference home MemberReference ArraySelector MethodInvocation MemberReference home getArchiveLocationIndex ARCHIVE_LOCATIONS	1
MethodDeclaration Modifier public BasicType boolean isFile ReturnStatement Literal MethodInvocation MethodInvocation getValue equalsIgnoreCase "file"	0
MethodDeclaration Modifier public setBytes FormalParameter BasicType boolean bytes StatementExpression Assignment This MemberReference bytes MemberReference bytes =	0
MethodDeclaration Modifier public BasicType long getSize IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement TernaryExpression MethodInvocation isExists Cast BasicType long MethodInvocation MethodInvocation length getValue Literal 0L	1
MethodDeclaration Modifier protected ReferenceType Vector getFilterChains ReturnStatement MemberReference filterChains	1
MethodDeclaration * @see */ Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference FILE MemberReference Literal "both"	0
MethodDeclaration Modifier protected ReferenceType String getVersion ReturnStatement MemberReference version	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation getResource IfStatement BinaryOperation == MemberReference r Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "XmlProperty task requires a source resource" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Loading " MemberReference src MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation r isExists BlockStatement LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator factory MethodInvocation DocumentBuilderFactory newInstance StatementExpression MethodInvocation factory MemberReference validate setValidating StatementExpression MethodInvocation factory Literal false setNamespaceAware LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator builder MethodInvocation factory newDocumentBuilder StatementExpression MethodInvocation builder MethodInvocation setEntityResolver LocalVariableDeclaration ReferenceType Document VariableDeclarator document Literal null IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement StatementExpression Assignment MemberReference document MethodInvocation builder Cast ReferenceType FileResource MemberReference src parse = BlockStatement StatementExpression Assignment MemberReference document MethodInvocation builder MethodInvocation src getInputStream parse = LocalVariableDeclaration ReferenceType Element VariableDeclarator topElement MethodInvocation document getDocumentElement StatementExpression Assignment MemberReference addedAttributes ClassCreator ReferenceType Hashtable = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference topElement MemberReference prefix Literal null addNodeRecursively BlockStatement LocalVariableDeclaration ReferenceType NodeList VariableDeclarator topChildren MethodInvocation topElement getChildNodes LocalVariableDeclaration BasicType int VariableDeclarator numChildren MethodInvocation topChildren getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference numChildren MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation topChildren MemberReference i item MemberReference prefix Literal null addNodeRecursively BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to find property resource: " MemberReference r MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter SAXException sxe LocalVariableDeclaration ReferenceType Exception VariableDeclarator x MemberReference sxe IfStatement BinaryOperation != MethodInvocation sxe getException Literal null BlockStatement StatementExpression Assignment MemberReference x MethodInvocation sxe getException = ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to load " MemberReference src MemberReference x CatchClause CatchClauseParameter ParserConfigurationException pce ThrowStatement ClassCreator ReferenceType BuildException MemberReference pce CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to load " MemberReference src MemberReference ioe	1
MethodDeclaration Modifier public testEquals LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator zs ClassCreator ReferenceType ZipShort Literal 0x1234 LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator zs2 ClassCreator ReferenceType ZipShort Literal 0x1234 LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator zs3 ClassCreator ReferenceType ZipShort Literal 0x5678 StatementExpression MethodInvocation Literal "reflexive" MethodInvocation zs MemberReference zs equals assertTrue StatementExpression MethodInvocation Literal "works" MethodInvocation zs MemberReference zs2 equals assertTrue StatementExpression MethodInvocation Literal "works, part two" MethodInvocation ! zs MemberReference zs3 equals assertTrue StatementExpression MethodInvocation Literal "symmetric" MethodInvocation zs2 MemberReference zs equals assertTrue StatementExpression MethodInvocation Literal "null handling" MethodInvocation ! zs Literal null equals assertTrue StatementExpression MethodInvocation Literal "non ZipShort handling" MethodInvocation ! zs ClassCreator ReferenceType Integer Literal 0x1234 equals assertTrue	1
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression MethodInvocation filtersFiles MemberReference file add	0
MethodDeclaration Modifier public static ReferenceType Vector tokenizePath FormalParameter ReferenceType String path FormalParameter ReferenceType String separator LocalVariableDeclaration ReferenceType Vector VariableDeclarator ret ClassCreator ReferenceType Vector IfStatement MethodInvocation FileUtils MemberReference path isAbsolutePath BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation FILE_UTILS MemberReference path StatementExpression MethodInvocation ret MemberReference ArraySelector Literal 0 s add StatementExpression Assignment MemberReference path MemberReference ArraySelector Literal 1 s = LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference path MemberReference separator WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation ret MethodInvocation st nextToken addElement ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public checkExit FormalParameter BasicType int status ThrowStatement ClassCreator ReferenceType ExitException MemberReference status	1
MethodDeclaration Modifier public verifySettings LocalVariableDeclaration BasicType int VariableDeclarator cnt MethodInvocation selectorCount IfStatement BinaryOperation || BinaryOperation < MemberReference cnt Literal 0 BinaryOperation > MemberReference cnt Literal 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Only one selector is allowed within the " Literal "<selector> tag" setError	1
MethodDeclaration Modifier private ReferenceType String getIasDescriptorName IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator basename LocalVariableDeclaration ReferenceType String VariableDeclarator remainder LocalVariableDeclaration BasicType int VariableDeclarator startOfFileName MethodInvocation descriptorName MemberReference File separatorChar lastIndexOf IfStatement BinaryOperation != MemberReference startOfFileName Literal - 1 BlockStatement StatementExpression Assignment MemberReference path MethodInvocation descriptorName Literal 0 BinaryOperation + MemberReference startOfFileName Literal 1 substring = IfStatement MethodInvocation descriptorName MethodInvocation MemberReference EJB_DD equals BinaryOperation + MemberReference startOfFileName Literal 1 substring BlockStatement StatementExpression Assignment MemberReference basename Literal "" = StatementExpression Assignment MemberReference remainder MemberReference EJB_DD = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation descriptorName MethodInvocation MemberReference baseNameTerminator getConfig MemberReference startOfFileName indexOf IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MethodInvocation descriptorName Literal '.' lastIndexOf Literal 1 = IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MethodInvocation descriptorName length Literal 1 = StatementExpression Assignment MemberReference basename MethodInvocation descriptorName BinaryOperation + MemberReference startOfFileName Literal 1 BinaryOperation + MemberReference Literal 1 substring = StatementExpression Assignment MemberReference remainder MethodInvocation descriptorName BinaryOperation + MemberReference Literal 1 substring = StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference path MemberReference basename Literal MemberReference remainder = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation ds getIncludedDirectories LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirs length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ';' append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i dirs append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType AggregateTransformer LocalVariableDeclaration ReferenceType AggregateTransformer VariableDeclarator transformer ClassCreator ReferenceType AggregateTransformer This StatementExpression MethodInvocation transformers MemberReference transformer addElement ReturnStatement MemberReference transformer	0
MethodDeclaration Modifier public log FormalParameter ReferenceType Task task FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable FormalParameter BasicType int msgLevel StatementExpression MethodInvocation MemberReference task MemberReference message MemberReference MemberReference msgLevel fireMessageLogged	0
MethodDeclaration Modifier public ReferenceType PatternSet IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType PatternSet VariableDeclarator patterns ClassCreator ReferenceType PatternSet StatementExpression MethodInvocation additionalPatterns MemberReference patterns addElement ReturnStatement MemberReference patterns	0
MethodDeclaration Modifier public setAutoresponse FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response setInternalAutoResponse	0
MethodDeclaration Modifier public BasicType int getAction LocalVariableDeclaration ReferenceType String VariableDeclarator actionL MethodInvocation MethodInvocation MemberReference Locale US toLowerCase getValue IfStatement BinaryOperation || MethodInvocation actionL Literal "send" equals MethodInvocation actionL Literal "put" equals BlockStatement ReturnStatement MemberReference SEND_FILES IfStatement BinaryOperation || MethodInvocation actionL Literal equals MethodInvocation actionL Literal "get" equals BlockStatement ReturnStatement MemberReference GET_FILES IfStatement BinaryOperation || MethodInvocation actionL Literal equals MethodInvocation actionL Literal "delete" equals BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation actionL Literal "list" equals BlockStatement ReturnStatement MemberReference LIST_FILES IfStatement MethodInvocation actionL Literal "chmod" equals BlockStatement ReturnStatement MemberReference CHMOD IfStatement MethodInvocation actionL Literal equals BlockStatement ReturnStatement MemberReference MK_DIR IfStatement MethodInvocation actionL Literal "rmdir" equals BlockStatement ReturnStatement MemberReference RM_DIR IfStatement MethodInvocation actionL Literal equals BlockStatement ReturnStatement MemberReference SITE_CMD ReturnStatement MemberReference SEND_FILES	0
MethodDeclaration Modifier public testAntlib_uri_auto2 IfStatement MethodInvocation isSharedJVM BlockStatement StatementExpression MethodInvocation Literal "antlib_uri_auto2" executeTarget	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation assertGoodFile	0
MethodDeclaration Modifier public setFailOnError FormalParameter BasicType boolean failonerror StatementExpression Assignment This MemberReference failonerror MemberReference failonerror =	0
MethodDeclaration Modifier public setStubs FormalParameter BasicType boolean stubs StatementExpression Assignment This MemberReference stubs MemberReference stubs =	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference mCfile	0
MethodDeclaration Modifier public ReferenceType Vector matches FormalParameter ReferenceType String pattern FormalParameter ReferenceType String input LocalVariableDeclaration ReferenceType RegexpMatcher VariableDeclarator matcher Cast ReferenceType RegexpMatcher MethodInvocation matchers MemberReference pattern get IfStatement BinaryOperation == MemberReference matcher Literal null BlockStatement StatementExpression Assignment MemberReference matcher MethodInvocation __reFactory newRegexpMatcher = StatementExpression MethodInvocation matcher MemberReference pattern setPattern StatementExpression MethodInvocation matchers MemberReference pattern MemberReference matcher put ReturnStatement MethodInvocation matcher MemberReference input getGroups	1
MethodDeclaration Modifier public BasicType boolean isSimulationmode ReturnStatement MemberReference simulationmode	0
MethodDeclaration Modifier public store TryStatement StatementExpression MethodInvocation nestedCreator MemberReference parent MemberReference nestedObject store CatchClause CatchClauseParameter IllegalAccessException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex CatchClause CatchClauseParameter InstantiationException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex CatchClause CatchClauseParameter IllegalArgumentException ex IfStatement BinaryOperation != MemberReference polyType Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid type used " MemberReference polyType ThrowStatement MemberReference ex CatchClause CatchClauseParameter InvocationTargetException ex LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ex getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public BasicType boolean sameDefinition FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation MemberReference obj Literal true	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference sources Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "At least one set of source resources must be specified" IfStatement BinaryOperation == MemberReference targets Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "At least one set of target files must be specified" IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation sources size Literal 0 BinaryOperation > MethodInvocation targets size Literal 0 MethodInvocation ! MemberReference sources MemberReference targets uptodate BlockStatement StatementExpression MethodInvocation Literal "Deleting all target files." MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Delete VariableDeclarator delete ClassCreator ReferenceType Delete StatementExpression MethodInvocation delete This bindToOwner StatementExpression MethodInvocation delete MemberReference targets add StatementExpression MethodInvocation delete perform	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement This MemberReference name MethodInvocation toString	0
MethodDeclaration Modifier public testCleanup BuildException LocalVariableDeclaration ReferenceType VariableDeclarator path ClassCreator ReferenceType MemberReference p Literal "." LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader MethodInvocation p MemberReference path createClassLoader TryStatement StatementExpression MethodInvocation loader Literal "fubar" findClass StatementExpression MethodInvocation Literal "Did not expect to find fubar class" fail CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation loader cleanup TryStatement StatementExpression MethodInvocation loader Literal "fubar" findClass StatementExpression MethodInvocation Literal "Did not expect to find fubar class" fail CatchClause CatchClauseParameter ClassNotFoundException e CatchClause CatchClauseParameter NullPointerException e StatementExpression MethodInvocation Literal "loader should not fail even if cleaned up" fail StatementExpression MethodInvocation p Literal null fireBuildFinished TryStatement StatementExpression MethodInvocation loader Literal "fubar" findClass StatementExpression MethodInvocation Literal "Did not expect to find fubar class" fail CatchClause CatchClauseParameter ClassNotFoundException e CatchClause CatchClauseParameter NullPointerException e StatementExpression MethodInvocation Literal "loader should not fail even if project finished" fail	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == This MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference MethodInvocation createPath	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public addFiles FormalParameter ReferenceType String s LocalVariableDeclaration BasicType int VariableDeclarator start TernaryExpression BinaryOperation == MemberReference files Literal null Literal 0 MemberReference files length LocalVariableDeclaration ReferenceType String VariableDeclarator newfiles ArrayCreator ReferenceType String BinaryOperation + MemberReference start MemberReference s length IfStatement BinaryOperation > MemberReference start Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference files Literal 0 MemberReference newfiles Literal 0 MemberReference start arraycopy StatementExpression Assignment MemberReference files MemberReference newfiles = StatementExpression MethodInvocation System MemberReference s Literal 0 MemberReference files MemberReference start MemberReference s length arraycopy	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final setServername FormalParameter ReferenceType String servername StatementExpression Assignment This MemberReference servername MemberReference servername =	0
MethodDeclaration Modifier public check IfStatement BinaryOperation == MemberReference type Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "type attribute must be set for service element" MethodInvocation getLocation IfStatement BinaryOperation == MethodInvocation type length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid empty type classname" MethodInvocation getLocation IfStatement BinaryOperation == MethodInvocation size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "provider attribute or provider element must be set!" MethodInvocation getLocation	1
MethodDeclaration Modifier public synchronized setGranularity FormalParameter BasicType long g StatementExpression Assignment MemberReference granularity MemberReference g =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public ReferenceType FileNameMapper getMapper ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath getBaseDir setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "no fork means no executable" MethodInvocation javac getJavacExecutable assertNull StatementExpression MethodInvocation project Literal "build.compiler" Literal "modern" setProperty StatementExpression MethodInvocation Literal "no fork means no executable" MethodInvocation javac getJavacExecutable assertNull StatementExpression MethodInvocation javac Literal true setFork StatementExpression MethodInvocation Literal "normal MethodInvocation javac getJavacExecutable assertNotNull StatementExpression MethodInvocation Literal "name should contain \"javac\"" BinaryOperation > MethodInvocation javac MethodInvocation Literal indexOf getJavacExecutable Literal - 1 assertTrue StatementExpression MethodInvocation project Literal "build.compiler" Literal "extJavac" setProperty StatementExpression MethodInvocation javac Literal false setFork StatementExpression MethodInvocation Literal "fork via property" MethodInvocation javac getJavacExecutable assertNotNull StatementExpression MethodInvocation Literal "name should contain \"javac\"" BinaryOperation > MethodInvocation javac MethodInvocation Literal indexOf getJavacExecutable Literal - 1 assertTrue StatementExpression MethodInvocation project Literal "build.compiler" Literal "whatever" setProperty StatementExpression MethodInvocation Literal "no fork and not extJavac means no executable" MethodInvocation javac getJavacExecutable assertNull LocalVariableDeclaration ReferenceType String VariableDeclarator myJavac Literal StatementExpression MethodInvocation javac Literal true setFork StatementExpression MethodInvocation javac MemberReference myJavac setExecutable StatementExpression MethodInvocation MemberReference myJavac MethodInvocation javac getJavacExecutable assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference failOnError MemberReference fail =	0
MethodDeclaration Modifier synchronized protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement IfStatement BinaryOperation != MemberReference union Literal null BlockStatement StatementExpression MethodInvocation stk MemberReference union push StatementExpression MethodInvocation MemberReference union MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation stk pop StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public addSelector FormalParameter ReferenceType SelectSelector selector StatementExpression MethodInvocation fileset MemberReference selector addSelector	1
MethodDeclaration Modifier public ReferenceType String getPackage ReturnStatement MemberReference packageName	0
MethodDeclaration Modifier public testBadDirectory StatementExpression MethodInvocation Literal Literal Literal "Jar's directory not found:" expectBuildExceptionContaining StatementExpression MethodInvocation Literal "jar.classpath" assertPropertyUnset	0
MethodDeclaration Modifier static protected BasicType boolean isSelected FormalParameter ReferenceType String fileToScan FormalParameter ReferenceType Vector selectorList LocalVariableDeclaration BasicType boolean VariableDeclarator isInclusive Literal true IfStatement BinaryOperation != MemberReference selectorList Literal null BlockStatement LocalVariableDeclaration ReferenceType PatternSet ReferenceType SelectorEntry VariableDeclarator selectorEntries ArrayCreator ReferenceType PatternSet ReferenceType SelectorEntry MethodInvocation selectorList size StatementExpression MethodInvocation selectorList MemberReference selectorEntries copyInto LocalVariableDeclaration BasicType boolean VariableDeclarator ArrayCreator BasicType boolean MemberReference selectorEntries length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference selectorEntries length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator type MemberReference ArraySelector MemberReference i MethodInvocation getType selectorEntries LocalVariableDeclaration ReferenceType String VariableDeclarator value MemberReference ArraySelector MemberReference i MethodInvocation getValue selectorEntries LocalVariableDeclaration ReferenceType String VariableDeclarator operation MemberReference ArraySelector MemberReference i MethodInvocation getOperation selectorEntries LocalVariableDeclaration ReferenceType Class VariableDeclarator c Cast ReferenceType Class MethodInvocation MemberReference type get IfStatement BinaryOperation != MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType FileSelector VariableDeclarator s Literal null TryStatement StatementExpression Assignment MemberReference s Cast ReferenceType FileSelector MethodInvocation c newInstance = StatementExpression MethodInvocation s MemberReference value setValue StatementExpression MethodInvocation s MemberReference operation setOperation StatementExpression Assignment MemberReference isInclusive MethodInvocation s MemberReference fileToScan isSelected = CatchClause CatchClauseParameter InstantiationException ie CatchClause CatchClauseParameter IllegalAccessException ie IfStatement MemberReference ! isInclusive BlockStatement BreakStatement ReturnStatement MemberReference isInclusive	0
MethodDeclaration Modifier public FormalParameter ReferenceType ActionChoices action IfStatement MethodInvocation action MethodInvocation Literal equalsIgnoreCase getValue BlockStatement StatementExpression Assignment MemberReference start MemberReference Boolean TRUE = BlockStatement StatementExpression Assignment MemberReference start MemberReference Boolean FALSE =	1
MethodDeclaration Modifier public test5 IOException StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier public ReferenceType XSLTLiaison createLiaison Exception LocalVariableDeclaration ReferenceType TraXLiaison VariableDeclarator l ClassCreator ReferenceType TraXLiaison StatementExpression MethodInvocation l This setLogger ReturnStatement MemberReference l	0
MethodDeclaration Modifier public synchronized BasicType boolean isSelected FormalParameter ReferenceType Resource r LocalVariableDeclaration BasicType int VariableDeclarator passed Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator failed Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation selectorCount LocalVariableDeclaration BasicType boolean VariableDeclarator even BinaryOperation == BinaryOperation % MemberReference count Literal 2 Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator threshold BinaryOperation / MemberReference count Literal 2 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation getSelectors MethodInvocation i hasNext BlockStatement IfStatement Cast ReferenceType ResourceSelector MethodInvocation i next BlockStatement StatementExpression MemberReference ++ passed IfStatement BinaryOperation || BinaryOperation > MemberReference passed MemberReference threshold BinaryOperation && BinaryOperation && MemberReference even MemberReference tie BinaryOperation == MemberReference passed MemberReference threshold BlockStatement ReturnStatement Literal true BlockStatement StatementExpression MemberReference ++ failed IfStatement BinaryOperation || BinaryOperation > MemberReference failed MemberReference threshold BinaryOperation && BinaryOperation && MemberReference even MemberReference ! tie BinaryOperation == MemberReference failed MemberReference threshold BlockStatement ReturnStatement Literal false ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType String getErrorMessage ReturnStatement MemberReference errorMessage	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MemberReference MyPrinter TAIL_CALLED assertLogContaining	0
MethodDeclaration Modifier public ReferenceType String restrict FormalParameter ReferenceType String files FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File destDir FormalParameter ReferenceType FileNameMapper mapper ReturnStatement MethodInvocation MemberReference files MemberReference srcDir MemberReference destDir MemberReference mapper MethodInvocation FILE_UTILS getFileTimestampGranularity restrict	0
MethodDeclaration Modifier public synchronized addExcludes FormalParameter ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MemberReference length Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation != This MemberReference Literal null BinaryOperation > This MemberReference MemberReference length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tmp ArrayCreator ReferenceType String BinaryOperation + MemberReference length This MemberReference MemberReference length StatementExpression MethodInvocation System This MemberReference Literal 0 MemberReference tmp Literal 0 This MemberReference MemberReference length arraycopy ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + This MemberReference MemberReference length MemberReference i tmp MethodInvocation MemberReference ArraySelector MemberReference i normalizePattern = StatementExpression Assignment This MemberReference MemberReference tmp = BlockStatement StatementExpression MethodInvocation MemberReference setExcludes	0
MethodDeclaration Modifier private ReferenceType FileNameMapper getMapper LocalVariableDeclaration ReferenceType FileNameMapper VariableDeclarator mapper Literal null IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement StatementExpression Assignment MemberReference mapper MethodInvocation mapperElement getImplementation = IfStatement MemberReference flatten BlockStatement StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType FlatFileNameMapper = BlockStatement StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType IdentityMapper = ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public BasicType int getRecordSize ReturnStatement This MemberReference buffer MethodInvocation getRecordSize	0
MethodDeclaration Modifier public init StatementExpression Assignment MemberReference newProject MethodInvocation MethodInvocation createSubProject getProject = StatementExpression MethodInvocation newProject	1
MethodDeclaration Modifier public setStart FormalParameter BasicType int start StatementExpression Assignment This MemberReference start MemberReference start =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected ReferenceType Commandline setupModernJavacCommandlineSwitches FormalParameter ReferenceType Commandline cmd StatementExpression MethodInvocation MemberReference cmd Literal true setupJavacCommandlineSwitches IfStatement BinaryOperation && BinaryOperation != MethodInvocation attributes getSource Literal null MethodInvocation ! assumeJava13 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-source" setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator source MethodInvocation attributes getSource IfStatement BinaryOperation && BinaryOperation || MethodInvocation assumeJava14 MethodInvocation assumeJava15 BinaryOperation || MethodInvocation source Literal "1.1" equals MethodInvocation source Literal "1.2" equals BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "1.3" setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference source setValue createArgument IfStatement BinaryOperation && BinaryOperation || MethodInvocation assumeJava15 MethodInvocation assumeJava16 BinaryOperation != MethodInvocation attributes getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation attributes getTarget IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation t Literal "1.1" equals MethodInvocation t Literal "1.2" equals MethodInvocation t Literal "1.3" equals MethodInvocation t Literal "1.4" equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference t IfStatement MethodInvocation t Literal "1.1" equals BlockStatement StatementExpression Assignment MemberReference s Literal "1.2" = StatementExpression MethodInvocation attributes Literal "" MemberReference Project MSG_WARN log StatementExpression MethodInvocation attributes Literal " WARNING" MemberReference Project MSG_WARN log StatementExpression MethodInvocation attributes Literal "" MemberReference Project MSG_WARN log StatementExpression MethodInvocation attributes Literal "The -source switch defaults to 1.5 in JDK 1.5 and 1.6." MemberReference Project MSG_WARN log StatementExpression MethodInvocation attributes BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "If you specify -target " MemberReference t Literal " you now must also specify -source " MemberReference s Literal "." MemberReference Project MSG_WARN log StatementExpression MethodInvocation attributes BinaryOperation + BinaryOperation + Literal "Ant will implicitly add -source " MemberReference s Literal " for you. Please change your build file." MemberReference Project MSG_WARN log StatementExpression MethodInvocation cmd MethodInvocation Literal "-source" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference s setValue createArgument ReturnStatement MemberReference cmd	1
MethodDeclaration Modifier public BasicType boolean getPreserveTime ReturnStatement MemberReference mPtime	0
MethodDeclaration Modifier public mark FormalParameter BasicType int i java.io.IOException StatementExpression MethodInvocation in MemberReference i mark	1
MethodDeclaration Modifier public setProperties FormalParameter ReferenceType Hashtable p StatementExpression Assignment MemberReference props ClassCreator ReferenceType Properties = ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation p keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator key MethodInvocation e nextElement StatementExpression MethodInvocation props MemberReference key MethodInvocation p MemberReference key get put	1
MethodDeclaration Modifier public static ReferenceType Document newDocument ReturnStatement MethodInvocation JAXPUtils MethodInvocation newDocument getDocumentBuilder	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public addFileset FormalParameter Modifier final ReferenceType FileSet fileSet StatementExpression MethodInvocation filesets MemberReference fileSet addElement	0
MethodDeclaration Modifier public testNoRecreateZipfilesetExcludesWithUpdate StatementExpression MethodInvocation Literal testNoRecreate	0
MethodDeclaration Modifier public FormalParameter ReferenceType String partition StatementExpression Assignment This MemberReference partition MemberReference partition =	0
MethodDeclaration Modifier public ReferenceType Object getRealThing ReturnStatement MemberReference realThing	0
MethodDeclaration Modifier public write FormalParameter BasicType byte wBuf IOException StatementExpression This MethodInvocation MemberReference wBuf Literal 0 MemberReference wBuf length write	1
MethodDeclaration Modifier public ReferenceType FormatterElement LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator fes ArrayCreator ReferenceType FormatterElement MethodInvocation formatters size StatementExpression MethodInvocation formatters MemberReference fes copyInto ReturnStatement MemberReference fes	0
MethodDeclaration Modifier public BasicType boolean hasSelectors ReturnStatement MethodInvocation fileset hasSelectors	0
MethodDeclaration Modifier public static ReferenceType File listLibraries LocalVariableDeclaration ReferenceType String VariableDeclarator home MethodInvocation System MemberReference MagicNames ANT_HOME getProperty IfStatement BinaryOperation == MemberReference home Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator libDir ClassCreator ReferenceType File MemberReference home Literal "lib" ReturnStatement MethodInvocation MemberReference libDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project subProject StatementExpression MethodInvocation ComponentHelper MethodInvocation MethodInvocation ComponentHelper This getComponentHelper MemberReference subProject getComponentHelper StatementExpression MethodInvocation subProject MethodInvocation getDefaultInputStream StatementExpression MethodInvocation subProject This MethodInvocation StatementExpression MethodInvocation subProject MethodInvocation MethodInvocation getSubProjectExecutor setExecutor	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation MemberReference UNIX_LINE append Literal append StatementExpression MethodInvocation buf MethodInvocation MemberReference UNIX_LINE append Literal append StatementExpression MethodInvocation buf MethodInvocation MemberReference UNIX_LINE append Literal append StatementExpression MethodInvocation buf MethodInvocation MemberReference UNIX_LINE append Literal append LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation buf toString StatementExpression MethodInvocation MemberReference text doStartTest1 StatementExpression MethodInvocation MemberReference text doStartTest2 StatementExpression MethodInvocation MemberReference text doEndTest1 StatementExpression MethodInvocation MemberReference text doEndTest2	0
MethodDeclaration Modifier public BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator hashCode Literal 0 IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference hashCode MethodInvocation MethodInvocation hashCode getKey += StatementExpression Assignment MemberReference hashCode MethodInvocation values hashCode += ReturnStatement MemberReference hashCode	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation helper This setProjectComponent	1
MethodDeclaration Modifier public setLogo FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected tryToSetAParameter FormalParameter ReferenceType Object obj FormalParameter ReferenceType String name FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType Project VariableDeclarator prj TernaryExpression BinaryOperation != MethodInvocation getProject Literal null MethodInvocation getProject ClassCreator ReferenceType Project LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator iHelper MethodInvocation IntrospectionHelper MemberReference prj MethodInvocation obj getClass getHelper TryStatement StatementExpression MethodInvocation iHelper MemberReference prj MemberReference obj MemberReference name MemberReference value setAttribute CatchClause CatchClauseParameter org.apache.tools.ant.BuildException e	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private assertLogoUncorrupted IOException StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project Literal "../asf-logo.gif" resolveFile MethodInvocation project Literal resolveFile contentEquals assertTrue	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference contains Literal null BlockStatement StatementExpression MethodInvocation Literal "The text attribute is required" setError	1
MethodDeclaration Modifier public addEnv FormalParameter ReferenceType Environment ReferenceType Variable var StatementExpression MethodInvocation env MemberReference var addVariable	0
MethodDeclaration Modifier public setMode FormalParameter BasicType int mode StatementExpression MethodInvocation StatementExpression Assignment This MemberReference mode MemberReference mode = StatementExpression Assignment MemberReference modeSet Literal true =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean exists StatementExpression MethodInvocation StatementExpression Assignment This MemberReference exists TernaryExpression MemberReference exists MemberReference Boolean TRUE MemberReference Boolean FALSE =	0
MethodDeclaration Modifier protected scanDir FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File dest FormalParameter ReferenceType JspMangler FormalParameter ReferenceType String files LocalVariableDeclaration BasicType long VariableDeclarator now ClassCreator MethodInvocation getTime ReferenceType Date ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MemberReference ArraySelector MemberReference i files LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File MemberReference srcDir MemberReference filename LocalVariableDeclaration ReferenceType File VariableDeclarator javaFile MethodInvocation MemberReference MemberReference srcFile MemberReference srcDir MemberReference dest mapToJavaFile IfStatement BinaryOperation == MemberReference javaFile Literal null BlockStatement ContinueStatement IfStatement BinaryOperation > MethodInvocation srcFile lastModified MemberReference now BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: file modified in the future: " MemberReference filename MemberReference Project MSG_WARN log LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false StatementExpression Assignment MemberReference MethodInvocation MemberReference srcFile MemberReference javaFile isCompileNeeded = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation compileList MethodInvocation srcFile getAbsolutePath addElement StatementExpression MethodInvocation MemberReference javaFile addElement	1
MethodDeclaration Modifier public BasicType int countTestCases ReturnStatement Literal 1	0
MethodDeclaration Modifier public FormalParameter BasicType boolean obsolete StatementExpression Assignment MemberReference mObsolete MemberReference obsolete =	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String text StatementExpression MethodInvocation Literal "test" MemberReference text assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference reloading MemberReference value =	0
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator z Literal null TryStatement StatementExpression Assignment MemberReference z ClassCreator ReferenceType ZipFile MethodInvocation MethodInvocation getEncoding = StatementExpression MethodInvocation MethodInvocation z MethodInvocation getName getEntry setEntry CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MethodInvocation e getMessage MemberReference Project MSG_DEBUG log ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference z Literal null BlockStatement TryStatement StatementExpression MethodInvocation z close CatchClause CatchClauseParameter IOException e	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer MemberReference MSVSS SS_EXE MemberReference MSVSS COMMAND_LABEL MemberReference DS_VSS_PROJECT_PATH BinaryOperation + MemberReference MSVSS FLAG_COMMENT MemberReference SRC_COMMENT MemberReference MSVSS FLAG_AUTORESPONSE_DEF BinaryOperation + MemberReference MSVSS MemberReference LONG_LABEL BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS FLAG_LOGIN MemberReference VSS_USERNAME Literal "," MemberReference VSS_PASSWORD LocalVariableDeclaration ReferenceType MSVSSLABEL VariableDeclarator vssLabel ClassCreator ReferenceType MSVSSLABEL StatementExpression MethodInvocation vssLabel MemberReference project setProject StatementExpression MethodInvocation vssLabel MemberReference SRC_COMMENT StatementExpression MethodInvocation vssLabel BinaryOperation + BinaryOperation + MemberReference VSS_USERNAME Literal "," MemberReference VSS_PASSWORD setLogin StatementExpression MethodInvocation vssLabel BinaryOperation + MemberReference LONG_LABEL Literal "blahblah" StatementExpression MethodInvocation vssLabel MemberReference VSS_PROJECT_PATH setVsspath StatementExpression Assignment MemberReference commandline MethodInvocation vssLabel buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier private touch FormalParameter ReferenceType Resource r FormalParameter BasicType long defaultTimestamp IfStatement BinaryOperation == MemberReference fileNameMapper Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference r ReferenceType FileResource BlockStatement StatementExpression MethodInvocation Cast ReferenceType FileResource MemberReference r MemberReference defaultTimestamp touch BlockStatement StatementExpression Cast ReferenceType Touchable MemberReference r BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mapped MethodInvocation fileNameMapper MethodInvocation r getName mapFileName IfStatement BinaryOperation && BinaryOperation != MemberReference mapped Literal null BinaryOperation > MemberReference mapped length Literal 0 BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator modTime TernaryExpression MethodInvocation r isExists MethodInvocation r getLastModified MemberReference defaultTimestamp ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference mapped length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i mapped resolveFile getProject MemberReference modTime touch	1
MethodDeclaration Modifier public FormalParameter ReferenceType String dbName StatementExpression Assignment This MemberReference dbName MemberReference dbName =	0
MethodDeclaration Modifier public addLineContainsRegExp FormalParameter Modifier final ReferenceType LineContainsRegExp lineContainsRegExp StatementExpression MethodInvocation filterReaders MemberReference lineContainsRegExp addElement	0
MethodDeclaration Modifier public handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference ant Literal null BlockStatement StatementExpression MethodInvocation ant MemberReference output handleErrorOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier protected addCurrentCompilerArgs FormalParameter ReferenceType Commandline cmd StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCurrentCompilerArgs getJavac addArguments	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createArg ReturnStatement MethodInvocation MethodInvocation createArgument getCommandLine	0
MethodDeclaration Modifier public synchronized setPattern FormalParameter ReferenceType String p StatementExpression Assignment MemberReference pattern MemberReference p =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String aName StatementExpression Assignment MemberReference name MethodInvocation aName trim =	0
MethodDeclaration Modifier public ReferenceType Vector getCompileList ReturnStatement MemberReference compileList	1
MethodDeclaration Modifier public static ReferenceType createDefaultCompiler LocalVariableDeclaration ReferenceType VariableDeclarator c ClassCreator ReferenceType LocalVariableDeclaration ReferenceType String VariableDeclarator StatementExpression Assignment MemberReference TernaryExpression MethodInvocation Os Literal "windows" isFamily MemberReference MemberReference = StatementExpression MethodInvocation c MemberReference setValue ReturnStatement MemberReference c	0
MethodDeclaration Modifier public pumpStream IOException IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation din readLine IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation MemberReference line MemberReference messageLevel outputLog BlockStatement StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buffer MemberReference filename append IfStatement BinaryOperation == MemberReference revision Literal null BlockStatement StatementExpression MethodInvocation buffer Literal " was removed" append IfStatement BinaryOperation != MemberReference prevRevision Literal null BlockStatement StatementExpression MethodInvocation buffer MethodInvocation MemberReference prevRevision append Literal "; previous revision was " append IfStatement BinaryOperation && BinaryOperation != MemberReference revision Literal null BinaryOperation == MemberReference prevRevision Literal null BlockStatement StatementExpression MethodInvocation buffer MethodInvocation MemberReference revision append Literal " is new; current revision is " append IfStatement BinaryOperation && BinaryOperation != MemberReference revision Literal null BinaryOperation != MemberReference prevRevision Literal null BlockStatement StatementExpression MethodInvocation buffer MethodInvocation MemberReference prevRevision append MethodInvocation Literal " to " append MethodInvocation MemberReference revision append Literal " has changed from " append ReturnStatement MethodInvocation buffer toString	1
MethodDeclaration Modifier public ReferenceType Hashtable getProperties LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator ph MethodInvocation PropertyHelper This getPropertyHelper ReturnStatement MethodInvocation ph getProperties	1
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName ReturnStatement ArrayCreator ReferenceType String ArrayInitializer ClassCreator MethodInvocation getName ReferenceType java ReferenceType io ReferenceType File MemberReference sourceFileName	1
MethodDeclaration Modifier protected handleOutput FormalParameter ReferenceType String line StatementExpression Assignment MemberReference line MethodInvocation line trim = IfStatement BinaryOperation && BinaryOperation != MethodInvocation line length Literal 0 MethodInvocation ! line MemberReference randomOutValue equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Received = [" MemberReference line Literal expected = [" MemberReference randomOutValue Literal "]" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression Assignment MemberReference outputReceived Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File tmpDir IfStatement BinaryOperation != MemberReference tmpDir Literal null BlockStatement IfStatement BinaryOperation || MethodInvocation ! tmpDir exists MethodInvocation ! tmpDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation tmpDir toString Literal " is not a valid temp directory" StatementExpression Assignment This MemberReference tmpDir MemberReference tmpDir =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test LocalVariableDeclaration ReferenceType String VariableDeclarator testName MethodInvocation test toString LocalVariableDeclaration ReferenceType TestRunEvent VariableDeclarator evt ClassCreator ReferenceType TestRunEvent MemberReference id MemberReference TestRunEvent MemberReference testName IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt onTestEnded StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier public BasicType int demuxInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation MethodInvocation Thread currentThread IfStatement BinaryOperation == MemberReference task Literal null BlockStatement ReturnStatement MethodInvocation MemberReference buffer MemberReference offset MemberReference length BlockStatement ReturnStatement MethodInvocation task MemberReference buffer MemberReference offset MemberReference length handleInput	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType String VariableDeclarator categoryString MemberReference LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MemberReference categoryString Literal null getLog IfStatement MemberReference initialized BlockStatement StatementExpression MethodInvocation MemberReference log Literal "Build started." MemberReference Project MSG_INFO Literal null	0
MethodDeclaration Modifier private ReferenceType ClassLoader getClassLoader IfStatement BinaryOperation == MemberReference classLoader Literal null BlockStatement StatementExpression Assignment MemberReference classLoader ClassReference MethodInvocation getClassLoader ReferenceType Antlib = ReturnStatement MemberReference classLoader	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean b StatementExpression Assignment MemberReference verbose MemberReference b =	0
MethodDeclaration Modifier public BasicType boolean killedProcess ReturnStatement MemberReference killedProcess	0
MethodDeclaration Modifier public FormalParameter BasicType boolean multi StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference multi MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier private ReferenceType getClasspath LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation MethodInvocation getClasspath getJspc IfStatement BinaryOperation == MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference p ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation p Literal "only" concatSystemClasspath BlockStatement ReturnStatement MethodInvocation p Literal "ignore" concatSystemClasspath	0
MethodDeclaration Modifier public setWebxml FormalParameter ReferenceType File webxml StatementExpression Assignment This MemberReference webxml MemberReference webxml =	0
MethodDeclaration Modifier private static ReferenceType File resolveFile FormalParameter ReferenceType Project project FormalParameter ReferenceType String ReturnStatement MethodInvocation FileUtils MethodInvocation TernaryExpression BinaryOperation == MemberReference project Literal null Literal null MethodInvocation project getBaseDir MemberReference resolveFile getFileUtils	0
MethodDeclaration Modifier public setSubSystem FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference subSystem MemberReference v =	0
MethodDeclaration Modifier public synchronized final ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType BaseResourceCollectionContainer MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement ClassCreator ReferenceType FailFast This MethodInvocation MethodInvocation iterator cacheCollection	1
MethodDeclaration Modifier public final FormalParameter Modifier final BasicType boolean fail StatementExpression Assignment MemberReference failOnError MemberReference fail =	0
MethodDeclaration Modifier private ReferenceType Directory createDirectory FormalParameter ReferenceType FileSet set LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation set MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType Directory VariableDeclarator root ClassCreator ReferenceType Directory MethodInvocation scanner getBasedir LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation scanner getIncludedFiles IfStatement BinaryOperation != MemberReference files length Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation Directory MemberReference ArraySelector MemberReference j files getPath LocalVariableDeclaration ReferenceType Directory VariableDeclarator current MemberReference root LocalVariableDeclaration ReferenceType File VariableDeclarator currentParent MethodInvocation scanner getBasedir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference path length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference currentParent MemberReference ArraySelector MemberReference i path IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression MethodInvocation current ClassCreator ReferenceType Directory MemberReference file addDirectory StatementExpression Assignment MemberReference current MethodInvocation current MemberReference file getChild = StatementExpression Assignment MemberReference currentParent MethodInvocation current getDirectory = IfStatement MethodInvocation file isFile BlockStatement StatementExpression MethodInvocation current MemberReference file addFile BlockStatement StatementExpression Assignment MemberReference root Literal null = ReturnStatement MemberReference root	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true setInitialized WhileStatement BinaryOperation || BinaryOperation == MemberReference line Literal null BinaryOperation == MethodInvocation line length Literal 0 BlockStatement StatementExpression Assignment MemberReference line MethodInvocation lineTokenizer MemberReference in getToken = StatementExpression Assignment MemberReference line MethodInvocation MemberReference line tailFilter = IfStatement BinaryOperation == MemberReference line Literal null BlockStatement ReturnStatement Literal - 1 StatementExpression Assignment MemberReference linePos Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation line MemberReference linePos charAt StatementExpression MemberReference ++ linePos IfStatement BinaryOperation == MemberReference linePos MethodInvocation line length BlockStatement StatementExpression Assignment MemberReference line Literal null = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public setNewenvironment FormalParameter BasicType boolean newenv StatementExpression Assignment MemberReference newEnvironment MemberReference newenv =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testDestDirFileset" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testPatternSetExcludeOnly" executeTarget StatementExpression MethodInvocation Literal "1/foo is excluded" Literal "unziptestout/1/foo" assertFileMissing StatementExpression MethodInvocation Literal "2/bar is not excluded" Literal "unziptestout/2/bar" assertFileExists	0
MethodDeclaration Modifier public setExcludesfile FormalParameter ReferenceType File StatementExpression MethodInvocation fileset MemberReference setExcludesfile	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType String namespace StatementExpression Assignment This MemberReference namespace MemberReference namespace =	0
MethodDeclaration Modifier private ReferenceType TestResultHolder executeAsForked FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType ExecuteWatchdog watchdog FormalParameter ReferenceType File casesFile BuildException IfStatement BinaryOperation != MemberReference perm Literal null BlockStatement StatementExpression MethodInvocation Literal "Permissions ignored when running in forked mode!" MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator cmd Literal null TryStatement StatementExpression Assignment MemberReference cmd Cast ReferenceType CommandlineJava MethodInvocation getCommandline = CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException Literal "This shouldn't happen" MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation cmd Literal "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner" setClassname IfStatement BinaryOperation == MemberReference casesFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation test getName setValue createArgument BlockStatement StatementExpression MethodInvocation Literal "Running multiple tests in the same VM" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants TESTSFILE MemberReference casesFile setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants FILTERTRACE MethodInvocation test getFiltertrace setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants HALT_ON_ERROR MethodInvocation test getHaltonerror setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants HALT_ON_FAILURE MethodInvocation test getHaltonfailure setValue createArgument IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation Execute getProcEnvironment LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation v elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation s MemberReference CLASSPATH startsWith BlockStatement StatementExpression MethodInvocation cmd MethodInvocation createPath MethodInvocation ClassCreator ReferenceType MethodInvocation getProject MethodInvocation s MethodInvocation CLASSPATH length substring append MethodInvocation getProject createClasspath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Implicitly adding " MemberReference antRuntimeClasses Literal " to CLASSPATH" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation cmd MethodInvocation createPath MethodInvocation MemberReference antRuntimeClasses append MethodInvocation getProject createClasspath IfStatement MemberReference summary BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Literal "" IfStatement Literal MethodInvocation MemberReference summaryValue equalsIgnoreCase "withoutanderr" BlockStatement StatementExpression Assignment MemberReference prefix Literal "OutErr" = StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Constants FORMATTER Literal "org.apache.tools.ant.taskdefs.optional.junit." MemberReference prefix Literal "SummaryJUnitResultFormatter" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants SHOWOUTPUT MethodInvocation String MemberReference showOutput valueOf setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants OUTPUT_TO_FORMATTERS MethodInvocation String MemberReference outputToFormatters valueOf setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants LOGTESTLISTENEREVENTS Literal "true" setValue createArgument LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator formatterArg ClassCreator ReferenceType StringBuffer MemberReference STRING_BUFFER_SIZE LocalVariableDeclaration Modifier final ReferenceType FormatterElement VariableDeclarator feArray MethodInvocation MemberReference test mergeFormatters ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference feArray length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator fe MemberReference ArraySelector MemberReference i feArray IfStatement MethodInvocation fe This shouldUse BlockStatement StatementExpression MethodInvocation formatterArg MemberReference Constants FORMATTER append StatementExpression MethodInvocation formatterArg MethodInvocation fe getClassname append LocalVariableDeclaration ReferenceType File VariableDeclarator outFile MethodInvocation MemberReference fe MemberReference test getOutput IfStatement BinaryOperation != MemberReference outFile Literal null BlockStatement StatementExpression MethodInvocation formatterArg Literal "," append StatementExpression MethodInvocation formatterArg MemberReference outFile append StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation formatterArg toString setValue createArgument StatementExpression Assignment MemberReference formatterArg ClassCreator ReferenceType StringBuffer = LocalVariableDeclaration ReferenceType File VariableDeclarator vmWatcher MethodInvocation Literal "junitvmwatcher" createTempPropertiesFile StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants CRASHFILE MethodInvocation vmWatcher getAbsolutePath setValue createArgument LocalVariableDeclaration ReferenceType File VariableDeclarator propsFile MethodInvocation Literal "junit" createTempPropertiesFile StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + MemberReference Constants PROPSFILE MethodInvocation propsFile getAbsolutePath setValue createArgument LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator p MethodInvocation MethodInvocation getProperties getProject LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation p keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator key MethodInvocation e nextElement StatementExpression MethodInvocation props MemberReference key MethodInvocation p MemberReference key get put TryStatement LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator outstream ClassCreator ReferenceType FileOutputStream MemberReference propsFile StatementExpression MethodInvocation props MemberReference outstream Literal "Ant JUnitTask generated properties file" store StatementExpression MethodInvocation outstream close CatchClause CatchClauseParameter java.io.IOException e StatementExpression MethodInvocation propsFile delete ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error creating temporary properties " Literal "file." MemberReference e MethodInvocation getLocation LocalVariableDeclaration ReferenceType Execute VariableDeclarator execute ClassCreator ReferenceType Execute ClassCreator ReferenceType JUnitLogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN MemberReference watchdog StatementExpression MethodInvocation execute MethodInvocation cmd getCommandline setCommandline StatementExpression MethodInvocation execute MethodInvocation getProject setAntRun IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement StatementExpression MethodInvocation execute MemberReference dir setWorkingDirectory LocalVariableDeclaration ReferenceType String VariableDeclarator environment MethodInvocation env getVariables IfStatement BinaryOperation != MemberReference environment Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference environment length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Setting environment variable: " MemberReference ArraySelector MemberReference i environment MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation execute MemberReference newEnvironment setNewenvironment StatementExpression MethodInvocation execute MemberReference environment setEnvironment StatementExpression MethodInvocation MethodInvocation cmd describeCommand MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType TestResultHolder VariableDeclarator result ClassCreator ReferenceType TestResultHolder TryStatement StatementExpression Assignment MemberReference result exitCode MethodInvocation execute execute = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Process fork failed." MemberReference e MethodInvocation getLocation LocalVariableDeclaration ReferenceType String VariableDeclarator vmCrashString Literal "unknown" LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator br Literal null TryStatement StatementExpression Assignment MemberReference br ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference vmWatcher = StatementExpression Assignment MemberReference vmCrashString MethodInvocation br readLine = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace StatementExpression MethodInvocation FileUtils MemberReference br close IfStatement BinaryOperation && BinaryOperation != MemberReference watchdog Literal null MethodInvocation watchdog killedProcess BlockStatement StatementExpression Assignment MemberReference result timedOut Literal true = StatementExpression MethodInvocation MemberReference feArray MemberReference test MemberReference vmCrashString logTimeout IfStatement MethodInvocation ! Constants.TERMINATED_SUCCESSFULLY MemberReference vmCrashString equals BlockStatement StatementExpression Assignment MemberReference result crashed Literal true = StatementExpression MethodInvocation MemberReference feArray MemberReference test MemberReference vmCrashString logVmCrash StatementExpression MethodInvocation vmWatcher delete IfStatement MethodInvocation ! propsFile delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not delete temporary " Literal "properties file." ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter BasicType long t1 FormalParameter BasicType long t2 ReturnStatement MethodInvocation MemberReference t1 MemberReference t2 MethodInvocation FILE_UTILS getFileTimestampGranularity evaluate	0
MethodDeclaration Modifier public setUp Exception StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setTwelve FormalParameter ReferenceType Boolean b StatementExpression MethodInvocation MethodInvocation ! b booleanValue assertTrue	1
MethodDeclaration Modifier protected ReferenceType Resource getStylesheet LocalVariableDeclaration ReferenceType String VariableDeclarator xslname Literal "junit-frames.xsl" IfStatement MethodInvocation NOFRAMES MemberReference format equals BlockStatement StatementExpression Assignment MemberReference xslname Literal "junit-noframes.xsl" = IfStatement BinaryOperation == MemberReference styleDir Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator stylesheet ClassCreator ReferenceType LocalVariableDeclaration ReferenceType URL VariableDeclarator stylesheetURL MethodInvocation MethodInvocation getClassLoader MethodInvocation BinaryOperation + Literal MemberReference xslname getResource getClass StatementExpression MethodInvocation stylesheet MemberReference stylesheetURL setURL ReturnStatement MemberReference stylesheet LocalVariableDeclaration ReferenceType FileResource VariableDeclarator stylesheet ClassCreator ReferenceType FileResource LocalVariableDeclaration ReferenceType File VariableDeclarator stylesheetFile ClassCreator ReferenceType File MemberReference styleDir MemberReference xslname StatementExpression MethodInvocation stylesheet MemberReference stylesheetFile setFile ReturnStatement MemberReference stylesheet	0
MethodDeclaration Modifier public setKeepCopy FormalParameter BasicType boolean keep StatementExpression Assignment MemberReference mKeep MemberReference keep =	0
MethodDeclaration Modifier protected rmDir FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dirname IOException BuildException IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "removing " MemberReference dirname log IfStatement MethodInvocation ! ftp MethodInvocation MemberReference dirname resolveFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + Literal "could not remove directory: " MethodInvocation ftp getReplyString IfStatement MemberReference skipFailedTransfers BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference Project MSG_WARN log StatementExpression MemberReference ++ skipped BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference s BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Directory " MemberReference dirname Literal " removed from " MemberReference server MemberReference Project MSG_VERBOSE log StatementExpression MemberReference ++ transferred	1
MethodDeclaration Modifier public setQuiet FormalParameter BasicType boolean value StatementExpression Assignment MemberReference quiet MemberReference value =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Tstamp VariableDeclarator tstamp ClassCreator ReferenceType Tstamp LocalVariableDeclaration ReferenceType Location VariableDeclarator location ClassCreator ReferenceType Location Literal "src/etc/testcases/taskdefs/optional/vss/vss.xml" StatementExpression MethodInvocation tstamp MemberReference location setLocation StatementExpression MethodInvocation tstamp MemberReference project setProject LocalVariableDeclaration ReferenceType Tstamp ReferenceType VariableDeclarator format MethodInvocation tstamp createFormat StatementExpression MethodInvocation format Literal setProperty StatementExpression MethodInvocation format Literal "HH:mm:ss z" setPattern StatementExpression MethodInvocation format Literal "GMT" setTimezone LocalVariableDeclaration ReferenceType Date VariableDeclarator date MethodInvocation Calendar MethodInvocation getTime getInstance StatementExpression MethodInvocation format MemberReference project MemberReference date MemberReference location execute LocalVariableDeclaration ReferenceType String VariableDeclarator today MethodInvocation project Literal getProperty LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator sdf ClassCreator ReferenceType SimpleDateFormat Literal "HH:mm:ss z" StatementExpression MethodInvocation sdf MethodInvocation TimeZone Literal "GMT" getTimeZone LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation sdf MemberReference date format LocalVariableDeclaration ReferenceType MSVSSHISTORY VariableDeclarator vssHistory ClassCreator ReferenceType MSVSSHISTORY StatementExpression MethodInvocation vssHistory MemberReference project setProject StatementExpression MethodInvocation vssHistory MemberReference VSS_USERNAME setLogin StatementExpression MethodInvocation vssHistory MemberReference today setToDate StatementExpression MethodInvocation vssHistory MemberReference VSS_PROJECT_PATH setVsspath LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer MemberReference MSVSS SS_EXE MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH MemberReference MSVSS FLAG_AUTORESPONSE_DEF BinaryOperation + MemberReference MSVSS FLAG_VERSION_DATE MemberReference expected BinaryOperation + MemberReference MSVSS FLAG_LOGIN MemberReference VSS_USERNAME StatementExpression Assignment MemberReference commandline MethodInvocation vssHistory buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier public ReferenceType Extension toExtensions FormalParameter Modifier final ReferenceType Project proj BuildException LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator extensionsList MethodInvocation ExtensionUtil MemberReference extensions toExtensions StatementExpression MethodInvocation ExtensionUtil MemberReference proj MemberReference extensionsList MemberReference extensionsFilesets extractExtensions ReturnStatement Cast ReferenceType Extension MethodInvocation extensionsList ArrayCreator ReferenceType Extension MethodInvocation extensionsList size toArray	1
MethodDeclaration Modifier public setPname FormalParameter ReferenceType String pname StatementExpression Assignment MemberReference mPname MemberReference pname =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String r StatementExpression Assignment MemberReference revision MemberReference r =	0
MethodDeclaration Modifier public synchronized setName FormalParameter ReferenceType String s IfStatement BinaryOperation != MethodInvocation getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException ClassCreator ReferenceType ImmutableResourceException StatementExpression SuperMethodInvocation MemberReference s setName	1
MethodDeclaration Modifier public ReferenceType Object create FormalParameter ReferenceType Project project LocalVariableDeclaration ReferenceType Object VariableDeclarator o SuperMethodInvocation MemberReference project create IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal null StatementExpression Cast ReferenceType MacroInstance MemberReference o ReturnStatement MemberReference o	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/makeurl.xml" configureProject	0
MethodDeclaration Modifier public setType FormalParameter ReferenceType FileType fileTypes StatementExpression Assignment This MemberReference type MethodInvocation fileTypes getValue =	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File f StatementExpression Assignment MemberReference file MemberReference f =	0
MethodDeclaration Modifier public test2 LocalVariableDeclaration ReferenceType String VariableDeclarator expected ArrayInitializer Literal "**/*~" Literal "**/#*#" Literal "**/.#*" Literal "**/%*%" Literal "**/._*" Literal "**/CVS" Literal "**/CVS/**" Literal "**/.cvsignore" Literal "**/SCCS" Literal "**/SCCS/**" Literal "**/vssver.scc" Literal "**/.svn" Literal "**/.svn/**" Literal "**/.DS_Store" Literal "foo" StatementExpression MethodInvocation project Literal "test2" executeTarget StatementExpression MethodInvocation Literal "current default MemberReference expected MethodInvocation DirectoryScanner assertEquals	0
MethodDeclaration Modifier public setNoCheckout FormalParameter BasicType boolean co StatementExpression Assignment MemberReference mNoco MemberReference co =	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceComparator c IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed StatementExpression MethodInvocation comp MemberReference c add StatementExpression MethodInvocation FailFast This invalidate	0
MethodDeclaration Modifier protected expandResource FormalParameter ReferenceType Resource srcR FormalParameter ReferenceType File dir LocalVariableDeclaration ReferenceType InputStream VariableDeclarator i Literal null TryStatement StatementExpression Assignment MemberReference i MethodInvocation srcR getInputStream = StatementExpression MethodInvocation MethodInvocation srcR getName MemberReference i MemberReference dir expandStream CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error while expanding " MethodInvocation srcR getName MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference i close	1
MethodDeclaration Modifier public setListing FormalParameter BasicType boolean b StatementExpression Assignment MemberReference listing MemberReference b =	0
MethodDeclaration Modifier public setSimulationmode FormalParameter BasicType boolean simulationmode StatementExpression Assignment This MemberReference simulationmode MemberReference simulationmode =	0
MethodDeclaration Modifier public testDelayUpdateTaskFinished StatementExpression MethodInvocation Literal 1	0
MethodDeclaration Modifier public ReferenceType Resource getResourcesToAdd ReturnStatement MemberReference resourcesToAdd	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public static ReferenceType Test suite ReturnStatement ClassCreator ReferenceType ClassCreator ReferenceType TestSuite ClassReference ReferenceType SimpleTestCase	0
MethodDeclaration Modifier public BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef ReturnStatement BinaryOperation * SuperMethodInvocation hashCode MemberReference PROPERTY_MAGIC	1
MethodDeclaration Modifier public FormalParameter ReferenceType File jarfile LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation jarfile getParentFile IfStatement MethodInvocation ! parent isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Jar's directory not found: " MemberReference parent StatementExpression Assignment This MemberReference dir MemberReference parent =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Date ReturnStatement ClassCreator ReferenceType Date BinaryOperation * This MemberReference modTime MemberReference MILLIS_PER_SECOND	0
MethodDeclaration Modifier public ReferenceType Iterator getSelectors IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ResourceSelectorContainer MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation Collections MethodInvocation iterator MemberReference v	0
MethodDeclaration Modifier public setReplyToList FormalParameter ReferenceType Vector list StatementExpression Assignment This MemberReference replyToList MemberReference list =	1
MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator e Cast ReferenceType ZipEntry SuperMethodInvocation clone StatementExpression Assignment MemberReference e TernaryExpression BinaryOperation != MemberReference Literal null Cast ReferenceType Vector MethodInvocation clone Literal null = StatementExpression MethodInvocation e MethodInvocation setInternalAttributes StatementExpression MethodInvocation e MethodInvocation getExternalAttributes setExternalAttributes StatementExpression MethodInvocation e MethodInvocation getExtraFields setExtraFields ReturnStatement MemberReference e	1
MethodDeclaration Modifier public setFilesetmanifest FormalParameter ReferenceType FilesetManifestConfig config StatementExpression Assignment MemberReference filesetManifestConfig MemberReference config = StatementExpression Assignment MemberReference mergeManifestsMain Literal MethodInvocation MethodInvocation config getValue equals "merge" = IfStatement BinaryOperation && BinaryOperation != MemberReference filesetManifestConfig Literal null MethodInvocation ! filesetManifestConfig MethodInvocation Literal "skip" equals getValue BlockStatement StatementExpression Assignment MemberReference doubleFilePass Literal true =	1
MethodDeclaration Modifier protected IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes	0
MethodDeclaration Modifier private BasicType boolean isSharedJVM LocalVariableDeclaration ReferenceType String VariableDeclarator property MethodInvocation System Literal "tests.and.ant.share.classloader" getProperty ReturnStatement BinaryOperation && BinaryOperation != MemberReference property Literal null MethodInvocation Project MemberReference property toBoolean	0
MethodDeclaration Modifier public ReferenceType FileSelector getSelectors FormalParameter ReferenceType Project p LocalVariableDeclaration ReferenceType FileSelector VariableDeclarator result ArrayCreator ReferenceType FileSelector MethodInvocation selectorsList size StatementExpression MethodInvocation selectorsList MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier public setPattern FormalParameter ReferenceType String pattern IfStatement BinaryOperation != MemberReference regularExpression Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one regular expression is StatementExpression Assignment MemberReference regularExpression ClassCreator ReferenceType RegularExpression = StatementExpression MethodInvocation regularExpression MemberReference pattern setPattern	0
MethodDeclaration Modifier public ReferenceType AntClassLoader createClassLoader FormalParameter ReferenceType path ReturnStatement ClassCreator ReferenceType AntClassLoader MethodInvocation MethodInvocation getClassLoader getClass This MemberReference path	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression MethodInvocation helper MemberReference classpath setClasspath	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation || MethodInvocation ! parameters isEmpty BinaryOperation != MemberReference className Literal null BinaryOperation != MemberReference classpath Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation r MethodInvocation getProject getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType AntFilterReader BlockStatement LocalVariableDeclaration ReferenceType AntFilterReader VariableDeclarator afr Cast ReferenceType AntFilterReader MemberReference o StatementExpression MethodInvocation MethodInvocation afr getClassName StatementExpression MethodInvocation MethodInvocation afr getClasspath setClasspath LocalVariableDeclaration ReferenceType Parameter VariableDeclarator p MethodInvocation afr getParams IfStatement BinaryOperation != MemberReference p Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference p length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i p addParam BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + MethodInvocation r getRefId Literal " doesn\'t refer to a FilterReader" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression SuperMethodInvocation MemberReference r setRefid	1
MethodDeclaration Modifier public ReferenceType AntHandler onStartChild FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException IfStatement MethodInvocation qname Literal "project" equals BlockStatement ReturnStatement MemberReference projectHandler BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unexpected element \"" MemberReference qname Literal "\" " MemberReference name MemberReference context locator	1
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p MemberReference value resolveFile invoke	1
MethodDeclaration Modifier private IOException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation getEntries WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze Cast ReferenceType ZipEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType OffsetEntry VariableDeclarator offsetEntry Cast ReferenceType OffsetEntry MethodInvocation entries MemberReference ze get LocalVariableDeclaration BasicType long VariableDeclarator offset MemberReference offsetEntry headerOffset StatementExpression MethodInvocation archive BinaryOperation + MemberReference offset MemberReference LFH_OFFSET_FOR_FILENAME_LENGTH seek LocalVariableDeclaration BasicType byte VariableDeclarator b ArrayCreator BasicType byte Literal 2 StatementExpression MethodInvocation archive MemberReference b readFully LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ZipShort MemberReference b getValue StatementExpression MethodInvocation archive MemberReference b readFully LocalVariableDeclaration BasicType int VariableDeclarator extraFieldLen MethodInvocation ZipShort MemberReference b getValue StatementExpression MethodInvocation archive MemberReference skipBytes LocalVariableDeclaration BasicType byte VariableDeclarator localExtraData ArrayCreator BasicType byte MemberReference extraFieldLen StatementExpression MethodInvocation archive MemberReference localExtraData readFully StatementExpression MethodInvocation ze MemberReference localExtraData setExtra StatementExpression Assignment MemberReference offsetEntry dataOffset BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference offset MemberReference LFH_OFFSET_FOR_FILENAME_LENGTH Literal 2 Literal 2 MemberReference MemberReference extraFieldLen =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType RegularExpression regExp StatementExpression This MemberReference regexps MethodInvocation MemberReference regExp addElement	0
MethodDeclaration Modifier public run ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 9 BinaryOperation > MemberReference i Literal 0 MemberReference -- i BlockStatement TryStatement StatementExpression Assignment MemberReference msg ClassCreator ReferenceType MailMessage Literal "localhost" MemberReference TEST_PORT = CatchClause CatchClauseParameter java.net.ConnectException ce TryStatement StatementExpression MethodInvocation Thread BinaryOperation * Literal 10 Literal 1000 sleep CatchClause CatchClauseParameter InterruptedException ie CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference fail Literal true = StatementExpression Assignment MemberReference BinaryOperation + Literal "IOException: " MemberReference ioe = ReturnStatement IfStatement BinaryOperation != MemberReference msg Literal null BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference msg Literal null BlockStatement StatementExpression Assignment MemberReference fail Literal true = StatementExpression Assignment MemberReference Literal "java.net.ConnectException: Connection refused" = ReturnStatement TryStatement StatementExpression MethodInvocation msg MemberReference from from LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e StatementExpression Assignment MemberReference e MethodInvocation replyToList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation msg MethodInvocation e MethodInvocation toString nextElement StatementExpression Assignment MemberReference e MethodInvocation toList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation msg MethodInvocation e MethodInvocation toString nextElement to StatementExpression Assignment MemberReference e MethodInvocation ccList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation msg MethodInvocation e MethodInvocation toString nextElement cc StatementExpression Assignment MemberReference e MethodInvocation bccList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation msg MethodInvocation e MethodInvocation toString nextElement bcc IfStatement BinaryOperation != MemberReference subject Literal null BlockStatement StatementExpression MethodInvocation msg MemberReference subject setSubject IfStatement BinaryOperation != MemberReference message Literal null BlockStatement LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out MethodInvocation msg getPrintStream StatementExpression MethodInvocation out MemberReference message println StatementExpression MethodInvocation msg sendAndClose CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference fail Literal true = StatementExpression Assignment MemberReference BinaryOperation + Literal "IOException: " MemberReference ioe = ReturnStatement	1
MethodDeclaration Modifier public BasicType boolean hasSelectors ReturnStatement MethodInvocation ! selectorsList isEmpty	0
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType File targetFile StatementExpression Assignment This MemberReference targetFile MemberReference targetFile =	0
MethodDeclaration Modifier private static ReferenceType String formatTime FormalParameter BasicType long millis LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation / MemberReference millis Literal 1000 LocalVariableDeclaration BasicType long VariableDeclarator minutes BinaryOperation / MemberReference Literal 60 IfStatement BinaryOperation > MemberReference minutes Literal 0 BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Long MemberReference minutes toString Literal " TernaryExpression BinaryOperation == MemberReference minutes Literal 1 Literal " " Literal "s " MethodInvocation Long BinaryOperation % MemberReference Literal 60 toString Literal " second" TernaryExpression BinaryOperation == BinaryOperation % MemberReference Literal 60 Literal 1 Literal "" Literal "s" BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation Long MemberReference toString Literal " second" TernaryExpression BinaryOperation == BinaryOperation % MemberReference Literal 60 Literal 1 Literal "" Literal "s"	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference mComment MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator typenm Literal null StatementExpression Assignment MemberReference typenm MethodInvocation getTypeName = IfStatement BinaryOperation != MethodInvocation getVOB Literal null BlockStatement StatementExpression Assignment MemberReference typenm BinaryOperation + Literal "@" MethodInvocation getVOB += ReturnStatement MemberReference typenm	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference perms ClassCreator ReferenceType Permissions = LocalVariableDeclaration ReferenceType Permissions ReferenceType Permission VariableDeclarator perm ClassCreator ReferenceType Permissions ReferenceType Permission StatementExpression MethodInvocation perm Literal "read, setActions StatementExpression MethodInvocation perm Literal "user.*" setName StatementExpression MethodInvocation perm Literal "java.util.PropertyPermission" StatementExpression MethodInvocation perms MemberReference perm addConfiguredGrant StatementExpression Assignment MemberReference perm ClassCreator ReferenceType Permissions ReferenceType Permission = StatementExpression MethodInvocation perm Literal "read" setActions StatementExpression MethodInvocation perm Literal "java.home" setName StatementExpression MethodInvocation perm Literal "java.util.PropertyPermission" StatementExpression MethodInvocation perms MemberReference perm addConfiguredGrant StatementExpression Assignment MemberReference perm ClassCreator ReferenceType Permissions ReferenceType Permission = StatementExpression MethodInvocation perm Literal "read" setActions StatementExpression MethodInvocation perm Literal "file.encoding" setName StatementExpression MethodInvocation perm Literal "java.util.PropertyPermission" StatementExpression MethodInvocation perms MemberReference perm addConfiguredGrant StatementExpression Assignment MemberReference perm ClassCreator ReferenceType Permissions ReferenceType Permission = StatementExpression MethodInvocation perm Literal "write" setActions StatementExpression MethodInvocation perm Literal "user.home" setName StatementExpression MethodInvocation perm Literal "java.util.PropertyPermission" StatementExpression MethodInvocation perms MemberReference perm addConfiguredRevoke StatementExpression Assignment MemberReference perm ClassCreator ReferenceType Permissions ReferenceType Permission = StatementExpression MethodInvocation perm Literal "read" setActions StatementExpression MethodInvocation perm Literal setName StatementExpression MethodInvocation perm Literal "java.util.PropertyPermission" StatementExpression MethodInvocation perms MemberReference perm addConfiguredRevoke	0
MethodDeclaration Modifier public process FormalParameter ReferenceType String line IfStatement MethodInvocation ! util Literal "/^#/" MemberReference line match BlockStatement IfStatement MethodInvocation util Literal "/error/" MemberReference line match BlockStatement StatementExpression MethodInvocation Literal Error" MemberReference Project MSG_VERBOSE log ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Perforce Error, " Literal "check client settings and/or server" IfStatement MethodInvocation util Literal "/<enter description here>/" MemberReference line match BlockStatement StatementExpression Assignment MemberReference description MethodInvocation MemberReference description backslash = StatementExpression Assignment MemberReference line MethodInvocation util BinaryOperation + BinaryOperation + Literal "s/<enter description here>/" MemberReference description Literal "/" MemberReference line substitute = IfStatement MethodInvocation util Literal "/\\/\\//" MemberReference line match BlockStatement ReturnStatement StatementExpression MethodInvocation stringbuf MemberReference line append StatementExpression MethodInvocation stringbuf Literal "\n" append	0
MethodDeclaration connect IOException StatementExpression Assignment MemberReference socket ClassCreator ReferenceType Socket MemberReference host MemberReference port = StatementExpression Assignment MemberReference out ClassCreator ReferenceType ClassCreator ReferenceType BufferedOutputStream MethodInvocation socket getOutputStream = StatementExpression Assignment MemberReference in ClassCreator ReferenceType MethodInvocation socket getInputStream = StatementExpression MethodInvocation getReady	0
MethodDeclaration Modifier private writeChangeLog FormalParameter Modifier final ReferenceType CVSEntry entrySet BuildException LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator output Literal null TryStatement StatementExpression Assignment MemberReference output ClassCreator ReferenceType FileOutputStream MemberReference destFile = LocalVariableDeclaration Modifier final ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference output Literal "UTF-8" LocalVariableDeclaration Modifier final ReferenceType ChangeLogWriter VariableDeclarator serializer ClassCreator ReferenceType ChangeLogWriter StatementExpression MethodInvocation serializer MemberReference writer MemberReference entrySet CatchClause CatchClauseParameter UnsupportedEncodingException uee StatementExpression MethodInvocation MethodInvocation MethodInvocation uee toString MemberReference Project MSG_ERR log getProject CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe toString MemberReference ioe StatementExpression MethodInvocation FileUtils MemberReference output close	1
MethodDeclaration Modifier public testElementCreators BuildException TryStatement StatementExpression MethodInvocation ih Literal "one" getElementType StatementExpression MethodInvocation Literal "don't have element type one" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "two" getElementType StatementExpression MethodInvocation Literal "createTwo takes arguments" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "three" getElementType StatementExpression MethodInvocation Literal "createThree returns void" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "four" getElementType StatementExpression MethodInvocation Literal "createFour returns array" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "five" getElementType StatementExpression MethodInvocation Literal "createFive returns primitive type" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation ClassReference ReferenceType String MethodInvocation ih Literal "six" getElementType assertEquals StatementExpression MethodInvocation Literal "test" MethodInvocation ih MemberReference p This Literal "six" createElement assertEquals TryStatement StatementExpression MethodInvocation ih Literal "seven" getElementType StatementExpression MethodInvocation Literal "addSeven takes two arguments" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "eight" getElementType StatementExpression MethodInvocation Literal "addEight takes no arguments" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "nine" getElementType StatementExpression MethodInvocation Literal "nine return non void" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "ten" getElementType StatementExpression MethodInvocation Literal "addTen takes array argument" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "eleven" getElementType StatementExpression MethodInvocation Literal "addEleven takes primitive argument" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih Literal "twelve" getElementType StatementExpression MethodInvocation Literal "no primitive constructor for fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation ClassReference ReferenceType StringBuffer MethodInvocation ih Literal "thirteen" getElementType assertEquals StatementExpression MethodInvocation Literal "test" MethodInvocation ih MethodInvocation toString MemberReference p This Literal "thirteen" createElement assertEquals TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "fourteen" createElement StatementExpression MethodInvocation Literal "fourteen throws NullPointerException" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType NullPointerException assertTrue TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "fourteen" createElement StatementExpression MethodInvocation Literal "fifteen throws NullPointerException" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType NullPointerException assertTrue	1
MethodDeclaration Modifier public BasicType boolean setPropertyHook FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value FormalParameter BasicType boolean inherited FormalParameter BasicType boolean user FormalParameter BasicType boolean isNew IfStatement BinaryOperation != MethodInvocation getNext Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator subst MethodInvocation MethodInvocation MemberReference ns MemberReference name MemberReference value MemberReference inherited MemberReference user MemberReference isNew setPropertyHook getNext IfStatement MemberReference subst BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createBootclasspath	0
MethodDeclaration Modifier public ReferenceType String getTodir IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement ReturnStatement MethodInvocation destDir getAbsolutePath ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference ref Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No reference specified for isreference " Literal "condition" LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MethodInvocation MethodInvocation ref getRefId getReference getProject IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference type Literal null BlockStatement ReturnStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator typeClass Cast ReferenceType Class MethodInvocation MethodInvocation getDataTypeDefinitions MethodInvocation MemberReference type get getProject IfStatement BinaryOperation == MemberReference typeClass Literal null BlockStatement StatementExpression Assignment MemberReference typeClass Cast ReferenceType Class MethodInvocation MethodInvocation getTaskDefinitions MethodInvocation MemberReference type get getProject = IfStatement BinaryOperation == MemberReference typeClass Literal null BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation typeClass MethodInvocation o getClass isAssignableFrom	1
MethodDeclaration Modifier public final setParameters FormalParameter Modifier final ReferenceType Parameter parameters StatementExpression Assignment This MemberReference parameters MemberReference parameters = StatementExpression MethodInvocation Literal false setInitialized	1
MethodDeclaration Modifier private process FormalParameter ReferenceType File inFile FormalParameter ReferenceType File outFile FormalParameter ReferenceType Resource stylesheet BuildException TryStatement LocalVariableDeclaration BasicType long VariableDeclarator styleSheetLastModified MethodInvocation stylesheet getLastModified StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "In file " MemberReference inFile Literal " time: " MethodInvocation inFile lastModified MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Out file " MemberReference outFile Literal " time: " MethodInvocation outFile lastModified MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Style file " MemberReference xslFile Literal " time: " MemberReference styleSheetLastModified MemberReference Project MSG_DEBUG log IfStatement BinaryOperation || BinaryOperation || MemberReference force BinaryOperation >= MethodInvocation inFile lastModified MethodInvocation outFile lastModified BinaryOperation >= MemberReference styleSheetLastModified MethodInvocation outFile lastModified BlockStatement StatementExpression MethodInvocation MemberReference outFile ensureDirectoryFor StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Processing " MemberReference inFile Literal " to " MemberReference outFile MemberReference Project MSG_INFO log StatementExpression MethodInvocation MemberReference stylesheet configureLiaison StatementExpression MethodInvocation MemberReference liaison MemberReference inFile setLiaisonDynamicFileParameters StatementExpression MethodInvocation liaison MemberReference inFile MemberReference outFile transform BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Skipping input file " MemberReference inFile Literal " because it is older than output file " MemberReference outFile Literal " and so is the stylesheet " MemberReference stylesheet MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Failed to process " MemberReference inFile MemberReference Project MSG_INFO log IfStatement BinaryOperation != MemberReference outFile Literal null BlockStatement StatementExpression MethodInvocation outFile delete ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier public setBuiltin FormalParameter ReferenceType BuiltinPropertySetName b LocalVariableDeclaration ReferenceType String VariableDeclarator pBuiltIn MethodInvocation b getValue StatementExpression MethodInvocation Literal MemberReference pBuiltIn StatementExpression Assignment This MemberReference builtin MemberReference pBuiltIn =	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType String path StatementExpression Assignment This MemberReference path MemberReference path =	0
MethodDeclaration Modifier public forAllElements FormalParameter ReferenceType String template FormalParameter ReferenceType Properties attributes XDocletException LocalVariableDeclaration ReferenceType XClass VariableDeclarator cur_class MethodInvocation getCurrentClass LocalVariableDeclaration ReferenceType XMethod VariableDeclarator methods MethodInvocation MemberReference cur_class getElementMethods ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methods length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i methods setCurrentMethod StatementExpression MethodInvocation MemberReference template generate	1
MethodDeclaration Modifier public setUserName FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType SysProperties ps StatementExpression MethodInvocation variables MemberReference ps variables addAll StatementExpression MethodInvocation MemberReference ps addAll	0
MethodDeclaration Modifier public static ReferenceType String encodeURI FormalParameter ReferenceType String path UnsupportedEncodingException LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation path length LocalVariableDeclaration BasicType int VariableDeclarator ch Literal 0 LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb Literal null ForStatement ForControl BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation path MemberReference i charAt = IfStatement BinaryOperation >= MemberReference ch Literal 128 BlockStatement BreakStatement IfStatement MemberReference ArraySelector MemberReference ch gNeedEscaping BlockStatement IfStatement BinaryOperation == MemberReference sb Literal null BlockStatement StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuffer MethodInvocation path Literal 0 MemberReference i substring = StatementExpression MethodInvocation sb Literal '%' append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference ch gAfterEscaping1 append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference ch gAfterEscaping2 append IfStatement BinaryOperation != MemberReference sb Literal null BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference ch append IfStatement BinaryOperation < MemberReference i MemberReference len BlockStatement IfStatement BinaryOperation == MemberReference sb Literal null BlockStatement StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuffer MethodInvocation path Literal 0 MemberReference i substring = LocalVariableDeclaration BasicType byte VariableDeclarator bytes Literal null LocalVariableDeclaration BasicType byte VariableDeclarator b StatementExpression Assignment MemberReference bytes MethodInvocation path MethodInvocation MemberReference URI_ENCODING getBytes MemberReference i substring = StatementExpression Assignment MemberReference len MemberReference bytes length = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference b MemberReference ArraySelector MemberReference i bytes = IfStatement BinaryOperation < MemberReference b Literal 0 BlockStatement StatementExpression Assignment MemberReference ch BinaryOperation + MemberReference b Literal 256 = StatementExpression MethodInvocation sb Literal '%' append StatementExpression MethodInvocation sb MemberReference ArraySelector BinaryOperation >> MemberReference ch Literal 4 gHexChs append StatementExpression MethodInvocation sb MemberReference ArraySelector BinaryOperation & MemberReference ch Literal 0xf gHexChs append IfStatement MemberReference ArraySelector MemberReference b gNeedEscaping BlockStatement StatementExpression MethodInvocation sb Literal '%' append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference b gAfterEscaping1 append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference b gAfterEscaping2 append BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference b append ReturnStatement TernaryExpression BinaryOperation == MemberReference sb Literal null MemberReference path MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference tsaurl	0
MethodDeclaration Modifier private expectNameAddress FormalParameter ReferenceType e StatementExpression MethodInvocation Literal "name" MethodInvocation e getName assertEquals StatementExpression MethodInvocation Literal "address" MethodInvocation e getAddress assertEquals	0
MethodDeclaration Modifier protected ReferenceType Commandline setupRmicCommand LocalVariableDeclaration ReferenceType String VariableDeclarator options ArrayCreator ReferenceType String ArrayInitializer Literal "-Xnew" LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandline SuperMethodInvocation MemberReference options setupRmicCommand ReturnStatement MemberReference commandline	1
MethodDeclaration openFile FormalParameter BasicType boolean append BuildException StatementExpression MethodInvocation MemberReference append openFileImpl	1
MethodDeclaration ReferenceType String ReturnStatement MemberReference revision	0
MethodDeclaration Modifier public testGetAttributeMap LocalVariableDeclaration ReferenceType Map VariableDeclarator attrMap MethodInvocation LocalVariableDeclaration ReferenceType Map VariableDeclarator actualMap MethodInvocation ih getAttributeMap ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation actualMap MethodInvocation iterator entrySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator attrName Cast ReferenceType String MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Class VariableDeclarator attrClass Cast ReferenceType Class MethodInvocation attrMap MemberReference attrName get StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Support for " MemberReference attrName Literal " in IntrospectionHelperTest?" MemberReference attrClass assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "Type of " MemberReference attrName MemberReference attrClass MethodInvocation entry getValue assertEquals StatementExpression MethodInvocation attrMap MemberReference attrName remove StatementExpression MethodInvocation attrMap Literal "name" remove StatementExpression MethodInvocation Literal "Found all" MethodInvocation attrMap isEmpty assertTrue TryStatement StatementExpression MethodInvocation actualMap clear CatchClause CatchClauseParameter UnsupportedOperationException e	1
MethodDeclaration Modifier public setAntlibClassLoader FormalParameter ReferenceType ClassLoader classLoader StatementExpression Assignment This MemberReference antlibClassLoader MemberReference classLoader =	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType createClasspath StatementExpression MethodInvocation assertSrcIsJavaResource ReturnStatement Cast ReferenceType MemberReference src	0
MethodDeclaration Modifier protected executeScript FormalParameter ReferenceType String execName StatementExpression MethodInvocation MethodInvocation MemberReference execName executeScript	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal "/a:/b" LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal "2 after construction" Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation p ClassCreator ReferenceType File Literal "/c" setLocation StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after setLocation" Literal 3 MemberReference l length assertEquals StatementExpression MethodInvocation p Literal setPath StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal "5 after setPath" Literal 5 MemberReference l length assertEquals StatementExpression MethodInvocation p ClassCreator ReferenceType MemberReference project Literal "\\f" append StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after append" Literal 6 MemberReference l length assertEquals StatementExpression MethodInvocation p MethodInvocation ClassCreator ReferenceType File Literal "/g" setLocation createPath StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal "7 after append" Literal 7 MemberReference l length assertEquals	0
MethodDeclaration Modifier public _testResourcePlain StatementExpression MethodInvocation Literal "testResourcePlain" executeTarget	1
MethodDeclaration Modifier public setOld FormalParameter BasicType boolean b StatementExpression Assignment MemberReference old MemberReference b =	0
MethodDeclaration Modifier public setKeypass FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference delay MethodInvocation Integer MemberReference s parseInt =	0
MethodDeclaration Modifier public setSrc FormalParameter ReferenceType Resource src StatementExpression Assignment This MemberReference src MemberReference src = IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement StatementExpression Assignment MemberReference srcFile Cast ReferenceType FileResource MemberReference src =	0
MethodDeclaration Modifier public ReferenceType Commandline getVmCommand ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType String buildListArgs ReturnStatement MethodInvocation MethodInvocation toString	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/core/immutable.xml" configureProject	0
MethodDeclaration Modifier public setErrorProperty FormalParameter ReferenceType String errorProperty StatementExpression MethodInvocation redirector MemberReference errorProperty setErrorProperty StatementExpression Assignment MemberReference incompatibleWithSpawn Literal true =	0
MethodDeclaration Modifier public setSrcResource FormalParameter ReferenceType Resource src IfStatement MethodInvocation src isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the source can't be a directory" IfStatement BinaryOperation && BinaryOperation instanceof MemberReference src ReferenceType FileResource MethodInvocation ! supportsNonFileResources BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only resources are" Literal " supported." StatementExpression Assignment This MemberReference src MemberReference src =	0
MethodDeclaration Modifier private ReferenceType XMethod getElementMethods FormalParameter ReferenceType XClass cur_class XDocletException LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator is Literal null TryStatement StatementExpression Assignment MemberReference is MethodInvocation IntrospectionHelper MethodInvocation Class MethodInvocation cur_class getQualifiedName forName getHelper = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType XDocletException MethodInvocation e getMessage LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enum3 MethodInvocation is getNestedElements LocalVariableDeclaration ReferenceType Properties VariableDeclarator elementTypeMap ClassCreator ReferenceType Properties WhileStatement MethodInvocation enum3 hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation enum3 nextElement LocalVariableDeclaration ReferenceType Class VariableDeclarator type MethodInvocation is MemberReference name getElementType StatementExpression MethodInvocation elementTypeMap MemberReference name MethodInvocation type getName setProperty LocalVariableDeclaration ReferenceType XMethod VariableDeclarator allMethods MethodInvocation MemberReference cur_class getMethods LocalVariableDeclaration ReferenceType List VariableDeclarator elementMethods ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference allMethods length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType XMethod VariableDeclarator method MemberReference ArraySelector MemberReference i allMethods LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation method getName LocalVariableDeclaration ReferenceType String VariableDeclarator elementName Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator adder Literal false IfStatement MethodInvocation methodName Literal "create" startsWith BlockStatement StatementExpression Assignment MemberReference elementName MethodInvocation methodName MethodInvocation toLowerCase Literal 6 substring = IfStatement MethodInvocation methodName Literal startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator length Literal 3 IfStatement MethodInvocation methodName Literal "addConfigured" startsWith BlockStatement StatementExpression Assignment MemberReference length Literal 13 = StatementExpression Assignment MemberReference elementName MethodInvocation methodName MethodInvocation toLowerCase MemberReference length substring = StatementExpression Assignment MemberReference adder Literal true = IfStatement BinaryOperation == MemberReference elementName Literal null BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator elementType Literal null IfStatement MemberReference adder BlockStatement IfStatement BinaryOperation != MethodInvocation method MethodInvocation size getParameters Literal 1 BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation method MethodInvocation iterator getParameters StatementExpression Assignment MemberReference elementType Cast ReferenceType XParameter MethodInvocation it next = BlockStatement StatementExpression Assignment MemberReference elementType MethodInvocation method MethodInvocation getType MethodInvocation getQualifiedName getReturnType = IfStatement MethodInvocation ! method isPublic BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mapElementType MethodInvocation elementTypeMap MemberReference elementName getProperty IfStatement BinaryOperation == MemberReference mapElementType Literal null BlockStatement ContinueStatement IfStatement MethodInvocation ! elementType MethodInvocation mapElementType Literal '$' Literal '.' replace equals BlockStatement ContinueStatement StatementExpression MethodInvocation elementMethods MemberReference method add ReturnStatement Cast ReferenceType XMethod MethodInvocation elementMethods ArrayCreator ReferenceType XMethod MethodInvocation elementMethods size toArray	1
MethodDeclaration Modifier private FormalParameter ReferenceType String attr FormalParameter ReferenceType String value IfStatement BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation < MethodInvocation value length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid attribute: " MemberReference attr IfStatement BinaryOperation != MemberReference ++ count Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Attributes name, regex, and " Literal are mutually exclusive"	1
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType Vector VariableDeclarator tmp ClassCreator ReferenceType Vector MethodInvocation args size ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation args elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ImplementationSpecificArgument VariableDeclarator arg Cast ReferenceType ImplementationSpecificArgument MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator curr MethodInvocation arg MethodInvocation getImplementation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference curr length MemberReference ++ i BlockStatement StatementExpression MethodInvocation tmp MemberReference ArraySelector MemberReference i curr addElement LocalVariableDeclaration ReferenceType String VariableDeclarator res ArrayCreator ReferenceType String MethodInvocation tmp size StatementExpression MethodInvocation tmp MemberReference res copyInto ReturnStatement MemberReference res	1
MethodDeclaration Modifier private addTimestampAuthorityCommands FormalParameter Modifier final ReferenceType ExecTask cmd IfStatement BinaryOperation != MemberReference tsaurl Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue StatementExpression MethodInvocation MemberReference cmd MemberReference tsaurl addValue IfStatement BinaryOperation != MemberReference tsacert Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue StatementExpression MethodInvocation MemberReference cmd MemberReference tsacert addValue	0
MethodDeclaration Modifier protected BasicType boolean accept FormalParameter ReferenceType file ReturnStatement MethodInvocation file isVersioned	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ReplaceTokens StatementExpression MethodInvocation filterReaders MemberReference addElement	0
MethodDeclaration Modifier private ReferenceType Vector getDirectoryEntries FormalParameter ReferenceType File directory LocalVariableDeclaration ReferenceType Vector VariableDeclarator files ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType String VariableDeclarator filesInDir MethodInvocation directory list IfStatement BinaryOperation != MemberReference filesInDir Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator length MemberReference filesInDir length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files ClassCreator ReferenceType File MemberReference directory MemberReference ArraySelector MemberReference i filesInDir addElement ReturnStatement MemberReference files	1
MethodDeclaration Modifier final protected addResources FormalParameter ReferenceType ResourceCollection rc FormalParameter ReferenceType Resource resources FormalParameter ReferenceType ZipOutputStream zOut IOException IfStatement BinaryOperation instanceof MemberReference rc ReferenceType FileSet BlockStatement StatementExpression MethodInvocation Cast ReferenceType FileSet MemberReference rc MemberReference resources MemberReference zOut addResources ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference resources length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector MemberReference i MethodInvocation getName MethodInvocation MemberReference File separatorChar Literal '/' replace resources IfStatement Literal MethodInvocation MemberReference name equals "" BlockStatement ContinueStatement IfStatement BinaryOperation && MemberReference ArraySelector MemberReference i MethodInvocation isDirectory resources MemberReference doFilesonly BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator base Literal null IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i resources ReferenceType FileResource BlockStatement StatementExpression Assignment MemberReference base Cast ReferenceType FileResource MemberReference ArraySelector MemberReference i resources = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isDirectory resources BlockStatement IfStatement MethodInvocation ! name Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MemberReference name Literal "/" = StatementExpression MethodInvocation MemberReference base MemberReference name MemberReference zOut Literal "" MemberReference ArchiveFileSet DEFAULT_DIR_MODE addParentDirs IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation isDirectory resources BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i resources ReferenceType FileResource BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType FileResource MemberReference ArraySelector MemberReference i resources StatementExpression MethodInvocation MemberReference f MemberReference zOut MemberReference name MemberReference ArchiveFileSet DEFAULT_FILE_MODE zipFile BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement StatementExpression Assignment MemberReference is MemberReference ArraySelector MemberReference i MethodInvocation getInputStream resources = StatementExpression MethodInvocation MemberReference is MemberReference zOut MemberReference name MemberReference ArraySelector MemberReference i MethodInvocation getLastModified resources Literal null MemberReference ArchiveFileSet DEFAULT_FILE_MODE zipFile StatementExpression MethodInvocation FileUtils MemberReference is close	1
MethodDeclaration Modifier public static ReferenceType CmdResult FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType String VariableDeclarator nargs ArrayCreator ReferenceType String BinaryOperation + MemberReference args length Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 nargs Literal = StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference nargs Literal 1 MemberReference args length arraycopy LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator out ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator err ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType PumpStreamHandler MemberReference out MemberReference err LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference handler StatementExpression MethodInvocation exe MemberReference nargs setCommandline TryStatement LocalVariableDeclaration BasicType int VariableDeclarator retcode MethodInvocation exe execute ReturnStatement ClassCreator ReferenceType CmdResult MemberReference retcode MethodInvocation out toString MethodInvocation err toString CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testFileset" executeTarget StatementExpression MethodInvocation Literal "testFileset" Literal ".xml " assertPropertyContains LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation Literal "testFileset" getProperty StatementExpression MethodInvocation Literal "testFileset" Literal ".xml"	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument missing" expectBuildException	0
MethodDeclaration Modifier protected ReferenceType String getSkelClassSuffix ReturnStatement MemberReference RMI_SKEL_SUFFIX	0
MethodDeclaration Modifier public addURIEntry FormalParameter ReferenceType String uri FormalParameter ReferenceType String altURI FormalParameter ReferenceType URL base LocalVariableDeclaration ReferenceType VariableDeclarator entity ClassCreator ReferenceType StatementExpression MethodInvocation entity MemberReference base setBase StatementExpression MethodInvocation entity MemberReference uri setPublicId StatementExpression MethodInvocation entity MemberReference altURI setLocation StatementExpression MethodInvocation MemberReference entity addEntity	0
MethodDeclaration Modifier public FormalParameter ReferenceType String mainClass StatementExpression Assignment This MemberReference mainClass MemberReference mainClass =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean includeURL StatementExpression Assignment This MemberReference includeURL MemberReference includeURL =	0
MethodDeclaration Modifier public test16 StatementExpression MethodInvocation Literal "test16" executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String field StatementExpression Assignment This MemberReference field MemberReference field =	0
MethodDeclaration Modifier public FormalParameter BasicType char c StatementExpression MethodInvocation MemberReference c Literal 'a' assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testReadBadFile" Literal "srcfile is a directory" Literal "srcfile is a expectBuildExceptionContaining	0
MethodDeclaration Modifier public testNoDuplicateIndex IOException LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator archive Literal null TryStatement StatementExpression MethodInvocation Literal "testIndexTests" executeTarget StatementExpression Assignment MemberReference archive ClassCreator ReferenceType ZipFile MethodInvocation MethodInvocation MemberReference tempJar resolveFile getProject = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation archive entries LocalVariableDeclaration BasicType int VariableDeclarator numberOfIndexLists Literal 0 WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze Cast ReferenceType ZipEntry MethodInvocation e nextElement IfStatement MethodInvocation ze MethodInvocation Literal "META-INF/INDEX.LIST" equals getName BlockStatement StatementExpression MemberReference ++ numberOfIndexLists StatementExpression MethodInvocation Literal 1 MemberReference numberOfIndexLists assertEquals IfStatement BinaryOperation != MemberReference archive Literal null BlockStatement StatementExpression MethodInvocation archive close	1
MethodDeclaration Modifier public setAuthor FormalParameter BasicType boolean b StatementExpression Assignment MemberReference author MemberReference b =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Element element LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al Cast ReferenceType ArrayList MethodInvocation nsURIByElement MemberReference element get IfStatement BinaryOperation != MemberReference al Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation al iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation nsPrefixMap MethodInvocation iter next remove StatementExpression MethodInvocation nsURIByElement MemberReference element remove	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "This task is deprecated and will be removed in a future Literal "of It is now part of the Literal MemberReference Project MSG_WARN log StatementExpression MethodInvocation validate StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Importing typelib " MemberReference srcFile Literal " to " MemberReference destFile Literal " in namespace " MemberReference namespace MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation ! isExecuteNeeded BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType NetCommand VariableDeclarator command ClassCreator ReferenceType NetCommand This Literal Literal StatementExpression MethodInvocation command Literal true setFailOnError StatementExpression MethodInvocation command MethodInvocation srcFile toString addArgument StatementExpression MethodInvocation command Literal "/nologo" addArgument StatementExpression MethodInvocation command BinaryOperation + Literal MemberReference destFile addArgument StatementExpression MethodInvocation command Literal "/namespace:" MemberReference namespace addArgument IfStatement MemberReference useSysArray BlockStatement StatementExpression MethodInvocation command Literal addArgument IfStatement MemberReference unsafe BlockStatement StatementExpression MethodInvocation command Literal "/unsafe" addArgument StatementExpression MethodInvocation command MemberReference extraOptions addArgument StatementExpression MethodInvocation command runCommand	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier private static vswap FormalParameter BasicType int fmap FormalParameter BasicType int p1 FormalParameter BasicType int p2 FormalParameter BasicType int n StatementExpression Assignment MemberReference n MemberReference p1 += WhileStatement BinaryOperation < MemberReference p1 MemberReference n BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator t MemberReference ArraySelector MemberReference p1 fmap StatementExpression Assignment MemberReference ArraySelector MemberReference ++ p1 fmap MemberReference ArraySelector MemberReference p2 fmap = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ p2 fmap MemberReference t =	0
MethodDeclaration Modifier public ReferenceType String getKey IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation name toLowerCase	0
MethodDeclaration Modifier public ReferenceType String getBranch ReturnStatement MemberReference branch	0
MethodDeclaration Modifier public setCommentFile FormalParameter ReferenceType String cfile StatementExpression Assignment MemberReference mCfile MemberReference cfile =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference FILE_PREPEND_WITH MemberReference FILE_APPEND doTest	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType loc StatementExpression MethodInvocation resolvers MemberReference loc add	0
MethodDeclaration Modifier public setOverwrite FormalParameter BasicType boolean overwrite StatementExpression Assignment This MemberReference forceOverwrite MemberReference overwrite =	0
MethodDeclaration Modifier public addAssertions FormalParameter ReferenceType asserts IfStatement BinaryOperation != MethodInvocation MethodInvocation getAssertions getCommandLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one assertion declaration is allowed" StatementExpression MethodInvocation MethodInvocation MemberReference asserts setAssertions getCommandLine	0
MethodDeclaration Modifier public FormalParameter ReferenceType File uriroot StatementExpression Assignment This MemberReference uriroot MemberReference uriroot =	0
MethodDeclaration Modifier public test9 StatementExpression MethodInvocation Literal "test9" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType root StatementExpression MethodInvocation rootClasses MethodInvocation root getClassname addElement	0
MethodDeclaration Modifier synchronized protected ReferenceType Collection getCollection LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc MethodInvocation getResourceCollection LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation rc iterator IfStatement MethodInvocation ! iter hasNext BlockStatement ReturnStatement MemberReference Collections EMPTY_SET LocalVariableDeclaration ReferenceType SortedBag VariableDeclarator b ClassCreator ReferenceType SortedBag MemberReference comp WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation b MethodInvocation iter next add ReturnStatement MemberReference b	1
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object another ReturnStatement TernaryExpression This MethodInvocation MemberReference another equals Literal 0 SuperMethodInvocation MemberReference another compareTo	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setNodeprefix FormalParameter ReferenceType String nodePrefix StatementExpression MethodInvocation optionalAttrs MemberReference MemberReference nodePrefix put	0
MethodDeclaration Modifier private mainQSort3 FormalParameter Modifier final ReferenceType Data dataShadow FormalParameter Modifier final BasicType int loSt FormalParameter Modifier final BasicType int hiSt FormalParameter Modifier final BasicType int dSt LocalVariableDeclaration Modifier final BasicType int VariableDeclarator stack_ll MemberReference dataShadow stack_ll LocalVariableDeclaration Modifier final BasicType int VariableDeclarator stack_hh MemberReference dataShadow stack_hh LocalVariableDeclaration Modifier final BasicType int VariableDeclarator stack_dd MemberReference dataShadow stack_dd LocalVariableDeclaration Modifier final BasicType int VariableDeclarator fmap MemberReference dataShadow fmap LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block MemberReference dataShadow block StatementExpression Assignment MemberReference ArraySelector Literal 0 stack_ll MemberReference loSt = StatementExpression Assignment MemberReference ArraySelector Literal 0 stack_hh MemberReference hiSt = StatementExpression Assignment MemberReference ArraySelector Literal 0 stack_dd MemberReference dSt = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator sp Literal 1 BinaryOperation >= MemberReference -- sp Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lo MemberReference ArraySelector MemberReference sp stack_ll LocalVariableDeclaration Modifier final BasicType int VariableDeclarator hi MemberReference ArraySelector MemberReference sp stack_hh LocalVariableDeclaration Modifier final BasicType int VariableDeclarator d MemberReference ArraySelector MemberReference sp stack_dd IfStatement BinaryOperation || BinaryOperation < BinaryOperation - MemberReference hi MemberReference lo MemberReference SMALL_THRESH BinaryOperation > MemberReference d MemberReference DEPTH_THRESH BlockStatement IfStatement MethodInvocation MemberReference dataShadow MemberReference lo MemberReference hi MemberReference d mainSimpleSort BlockStatement ReturnStatement BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator d1 BinaryOperation + MemberReference d Literal 1 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator med BinaryOperation & MethodInvocation MemberReference ArraySelector BinaryOperation + MemberReference ArraySelector MemberReference lo fmap MemberReference d1 block MemberReference ArraySelector BinaryOperation + MemberReference ArraySelector MemberReference hi fmap MemberReference d1 block MemberReference ArraySelector BinaryOperation + MemberReference ArraySelector BinaryOperation >> BinaryOperation + MemberReference lo MemberReference hi Literal 1 fmap MemberReference d1 block med3 Literal 0xff LocalVariableDeclaration BasicType int VariableDeclarator unLo MemberReference lo LocalVariableDeclaration BasicType int VariableDeclarator unHi MemberReference hi LocalVariableDeclaration BasicType int VariableDeclarator ltLo MemberReference lo LocalVariableDeclaration BasicType int VariableDeclarator gtHi MemberReference hi WhileStatement Literal true BlockStatement WhileStatement BinaryOperation <= MemberReference unLo MemberReference unHi BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator n BinaryOperation - BinaryOperation & Cast BasicType int MemberReference ArraySelector BinaryOperation + MemberReference ArraySelector MemberReference unLo fmap MemberReference d1 block Literal 0xff MemberReference med IfStatement BinaryOperation == MemberReference n Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator temp MemberReference ArraySelector MemberReference unLo fmap StatementExpression Assignment MemberReference ArraySelector MemberReference ++ unLo fmap MemberReference ArraySelector MemberReference ltLo fmap = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ ltLo fmap MemberReference temp = IfStatement BinaryOperation < MemberReference n Literal 0 BlockStatement StatementExpression MemberReference ++ unLo BlockStatement BreakStatement WhileStatement BinaryOperation <= MemberReference unLo MemberReference unHi BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator n BinaryOperation - BinaryOperation & Cast BasicType int MemberReference ArraySelector BinaryOperation + MemberReference ArraySelector MemberReference unHi fmap MemberReference d1 block Literal 0xff MemberReference med IfStatement BinaryOperation == MemberReference n Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator temp MemberReference ArraySelector MemberReference unHi fmap StatementExpression Assignment MemberReference ArraySelector MemberReference -- unHi fmap MemberReference ArraySelector MemberReference gtHi fmap = StatementExpression Assignment MemberReference ArraySelector MemberReference -- gtHi fmap MemberReference temp = IfStatement BinaryOperation > MemberReference n Literal 0 BlockStatement StatementExpression MemberReference -- unHi BlockStatement BreakStatement IfStatement BinaryOperation <= MemberReference unLo MemberReference unHi BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator temp MemberReference ArraySelector MemberReference unLo fmap StatementExpression Assignment MemberReference ArraySelector MemberReference ++ unLo fmap MemberReference ArraySelector MemberReference unHi fmap = StatementExpression Assignment MemberReference ArraySelector MemberReference -- unHi fmap MemberReference temp = BlockStatement BreakStatement IfStatement BinaryOperation < MemberReference gtHi MemberReference ltLo BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_ll MemberReference lo = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_hh MemberReference hi = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_dd MemberReference d1 = StatementExpression MemberReference ++ sp BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n TernaryExpression BinaryOperation < BinaryOperation - MemberReference ltLo MemberReference lo BinaryOperation - MemberReference unLo MemberReference ltLo BinaryOperation - MemberReference ltLo MemberReference lo BinaryOperation - MemberReference unLo MemberReference ltLo StatementExpression MethodInvocation MemberReference fmap MemberReference lo BinaryOperation - MemberReference unLo MemberReference n MemberReference n vswap LocalVariableDeclaration BasicType int VariableDeclarator m TernaryExpression BinaryOperation < BinaryOperation - MemberReference hi MemberReference gtHi BinaryOperation - MemberReference gtHi MemberReference unHi BinaryOperation - MemberReference hi MemberReference gtHi BinaryOperation - MemberReference gtHi MemberReference unHi StatementExpression MethodInvocation MemberReference fmap MemberReference unLo BinaryOperation + BinaryOperation - MemberReference hi MemberReference m Literal 1 MemberReference m vswap StatementExpression Assignment MemberReference n BinaryOperation - BinaryOperation - BinaryOperation + MemberReference lo MemberReference unLo MemberReference ltLo Literal 1 = StatementExpression Assignment MemberReference m BinaryOperation + BinaryOperation - MemberReference hi BinaryOperation - MemberReference gtHi MemberReference unHi Literal 1 = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_ll MemberReference lo = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_hh MemberReference n = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_dd MemberReference d = StatementExpression MemberReference ++ sp StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_ll BinaryOperation + MemberReference n Literal 1 = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_hh BinaryOperation - MemberReference m Literal 1 = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_dd MemberReference d1 = StatementExpression MemberReference ++ sp StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_ll MemberReference m = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_hh MemberReference hi = StatementExpression Assignment MemberReference ArraySelector MemberReference sp stack_dd MemberReference d = StatementExpression MemberReference ++ sp	1
MethodDeclaration Modifier public setDynamicAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType String value BuildException IfStatement Literal MethodInvocation MemberReference name equalsIgnoreCase "name" BlockStatement StatementExpression Assignment This MemberReference name MemberReference value = IfStatement Literal MethodInvocation MemberReference name equalsIgnoreCase "value" BlockStatement IfStatement Literal MethodInvocation MemberReference value equalsIgnoreCase "true" BlockStatement StatementExpression Assignment This MemberReference value MemberReference Boolean TRUE = IfStatement Literal MethodInvocation MemberReference value equalsIgnoreCase "false" BlockStatement StatementExpression Assignment This MemberReference value MemberReference Boolean FALSE = BlockStatement TryStatement StatementExpression Assignment This MemberReference value ClassCreator ReferenceType Integer MemberReference value = CatchClause CatchClauseParameter NumberFormatException e StatementExpression Assignment This MemberReference value MemberReference value = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unsupported attribute: " MemberReference name	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation helper MemberReference r setClasspathRef	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType FilterSet filterSet IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filterSet MethodInvocation elements getFilters MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation Cast ReferenceType Filter MethodInvocation e nextElement addFilter	0
MethodDeclaration Modifier public testRedirect2 IOException StatementExpression MethodInvocation Literal "redirect2" executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected output" BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " out\n" MethodInvocation Literal "redirect.out" getFileString assertEquals StatementExpression MethodInvocation Literal "unexpected error output" BinaryOperation + MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject Literal " err\n" MethodInvocation Literal "redirect.err" getFileString assertEquals	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String line ReturnStatement MethodInvocation line trim	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "testCSCintrinsicFileset" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType elip StatementExpression MethodInvocation instructions MemberReference elip add	0
MethodDeclaration Modifier public testGetNestedElementMap LocalVariableDeclaration ReferenceType Map VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Map VariableDeclarator actualMap MethodInvocation ih getNestedElementMap ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation actualMap MethodInvocation iterator entrySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator elemName Cast ReferenceType String MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Class VariableDeclarator elemClass Cast ReferenceType Class MethodInvocation MemberReference elemName get StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Support for " MemberReference elemName Literal " in IntrospectionHelperTest?" MemberReference elemClass assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "Type of " MemberReference elemName MemberReference elemClass MethodInvocation entry getValue assertEquals StatementExpression MethodInvocation MemberReference elemName remove StatementExpression MethodInvocation Literal "Found all" MethodInvocation isEmpty assertTrue TryStatement StatementExpression MethodInvocation actualMap clear CatchClause CatchClauseParameter UnsupportedOperationException e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "copywithempty" executeTarget	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" executeTarget StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation MethodInvocation Literal "test1" getReference getProject ReferenceType assertTrue	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType Resource VariableDeclarator s MethodInvocation getSrcResource IfStatement MethodInvocation ! s isExists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Nothing to do: " MethodInvocation s toString Literal " doesn't exist." log IfStatement BinaryOperation < MethodInvocation zipFile lastModified MethodInvocation s getLastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Building: " MethodInvocation zipFile getAbsolutePath log StatementExpression MethodInvocation pack BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Nothing to do: " MethodInvocation zipFile getAbsolutePath Literal " is up to date." log	1
MethodDeclaration Modifier public final performTasks LocalVariableDeclaration ReferenceType RuntimeException VariableDeclarator thrown Literal null StatementExpression MethodInvocation project This fireTargetStarted TryStatement StatementExpression MethodInvocation execute CatchClause CatchClauseParameter RuntimeException exc StatementExpression Assignment MemberReference thrown MemberReference exc = ThrowStatement MemberReference exc StatementExpression MethodInvocation project This MemberReference thrown	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference VALUES	0
MethodDeclaration Modifier private playClip FormalParameter ReferenceType Clip clip FormalParameter BasicType int loops StatementExpression MethodInvocation clip MemberReference loops loop WhileStatement MethodInvocation clip isRunning BlockStatement	1
MethodDeclaration Modifier public setCommand FormalParameter ReferenceType String command StatementExpression Assignment This MemberReference command MemberReference command =	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference stream LocalVariableDeclaration ReferenceType String VariableDeclarator text TryStatement WhileStatement BinaryOperation != Assignment MemberReference text MethodInvocation reader readLine = Literal null BlockStatement StatementExpression MethodInvocation System.out MemberReference text println CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace TryStatement StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public ReferenceType RegularExpression getRef FormalParameter ReferenceType Project p ReturnStatement Cast ReferenceType RegularExpression MethodInvocation MemberReference p getCheckedRef	0
MethodDeclaration Modifier public static BasicType boolean match FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive LocalVariableDeclaration BasicType char VariableDeclarator patArr MethodInvocation pattern toCharArray LocalVariableDeclaration BasicType char VariableDeclarator strArr MethodInvocation str toCharArray LocalVariableDeclaration BasicType int VariableDeclarator patIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator patIdxEnd BinaryOperation - MemberReference patArr length Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator strIdxEnd BinaryOperation - MemberReference strArr length Literal 1 LocalVariableDeclaration BasicType char VariableDeclarator ch LocalVariableDeclaration BasicType boolean VariableDeclarator containsStar Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference patArr length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement StatementExpression Assignment MemberReference containsStar Literal true = BreakStatement IfStatement MemberReference ! containsStar BlockStatement IfStatement BinaryOperation != MemberReference patIdxEnd MemberReference strIdxEnd BlockStatement ReturnStatement Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ch MemberReference ArraySelector MemberReference i patArr = IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector MemberReference i strArr BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector MemberReference i strArr toUpperCase BlockStatement ReturnStatement Literal false ReturnStatement Literal true IfStatement BinaryOperation == MemberReference patIdxEnd Literal 0 BlockStatement ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != Assignment MemberReference ch MemberReference ArraySelector MemberReference patIdxStart patArr = Literal '*' BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector MemberReference strIdxStart strArr BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector MemberReference strIdxStart strArr toUpperCase BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ patIdxStart StatementExpression MemberReference ++ strIdxStart IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement ReturnStatement Literal false ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != Assignment MemberReference ch MemberReference ArraySelector MemberReference patIdxEnd patArr = Literal '*' BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector MemberReference strIdxEnd strArr BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector MemberReference strIdxEnd strArr toUpperCase BlockStatement ReturnStatement Literal false StatementExpression MemberReference -- patIdxEnd StatementExpression MemberReference -- strIdxEnd IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement ReturnStatement Literal false ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator patIdxTmp Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference patIdxStart Literal 1 BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement StatementExpression Assignment MemberReference patIdxTmp MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference patIdxTmp BinaryOperation + MemberReference patIdxStart Literal 1 BlockStatement StatementExpression MemberReference ++ patIdxStart ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator patLength BinaryOperation - BinaryOperation - MemberReference patIdxTmp MemberReference patIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strLength BinaryOperation + BinaryOperation - MemberReference strIdxEnd MemberReference strIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator foundIdx Literal - 1 ForStatement strLoop ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i BinaryOperation - MemberReference strLength MemberReference patLength MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference patLength MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference ch MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference patIdxStart MemberReference j Literal 1 patArr = IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference strIdxStart MemberReference i MemberReference j strArr BlockStatement ContinueStatement strLoop IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference strIdxStart MemberReference i MemberReference j strArr toUpperCase BlockStatement ContinueStatement strLoop StatementExpression Assignment MemberReference foundIdx BinaryOperation + MemberReference strIdxStart MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference foundIdx Literal - 1 BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference patIdxStart MemberReference patIdxTmp = StatementExpression Assignment MemberReference strIdxStart BinaryOperation + MemberReference foundIdx MemberReference patLength = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public setUnixMode FormalParameter BasicType int mode StatementExpression MethodInvocation BinaryOperation | BinaryOperation | BinaryOperation << MemberReference mode Literal 16 TernaryExpression BinaryOperation == BinaryOperation & MemberReference mode Literal 0200 Literal 0 Literal 1 Literal 0 TernaryExpression MethodInvocation isDirectory Literal 0x10 Literal 0 setExternalAttributes StatementExpression Assignment MemberReference platform MemberReference PLATFORM_UNIX =	1
MethodDeclaration Modifier public static ReferenceType Delegate getDelegate FormalParameter ReferenceType ProjectComponent component ReturnStatement ClassCreator ReferenceType Delegate MemberReference component	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project StatementExpression MethodInvocation project Literal "dummy" MemberReference p StatementExpression MethodInvocation p ClassCreator ReferenceType Literal "dummy" setRefid TryStatement StatementExpression MethodInvocation p list StatementExpression MethodInvocation Literal "Can make a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType VariableDeclarator p1 ClassCreator ReferenceType MemberReference project StatementExpression MethodInvocation project Literal "dummy1" MemberReference p1 LocalVariableDeclaration ReferenceType VariableDeclarator p2 MethodInvocation p1 createPath StatementExpression MethodInvocation project Literal "dummy2" MemberReference p2 LocalVariableDeclaration ReferenceType VariableDeclarator p3 MethodInvocation p2 createPath StatementExpression MethodInvocation project Literal "dummy3" MemberReference p3 StatementExpression MethodInvocation p3 ClassCreator ReferenceType Literal "dummy1" setRefid TryStatement StatementExpression MethodInvocation p1 list StatementExpression MethodInvocation Literal "Can make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference p1 ClassCreator ReferenceType MemberReference project = StatementExpression MethodInvocation project Literal "dummy1" MemberReference p1 StatementExpression Assignment MemberReference p2 MethodInvocation p1 createPath = StatementExpression MethodInvocation project Literal "dummy2" MemberReference p2 StatementExpression Assignment MemberReference p3 MethodInvocation p2 createPath = StatementExpression MethodInvocation project Literal "dummy3" MemberReference p3 StatementExpression MethodInvocation p3 ClassCreator ReferenceType File Literal "/a" setLocation LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p1 list StatementExpression MethodInvocation Literal "One element buried deep inside a path Literal 1 MemberReference l length assertEquals IfStatement MemberReference isUnixStyle BlockStatement StatementExpression MethodInvocation Literal "/a" MemberReference ArraySelector Literal 0 l assertEquals IfStatement MemberReference isNetWare BlockStatement StatementExpression MethodInvocation Literal "\\a" MemberReference ArraySelector Literal 0 l assertEquals BlockStatement StatementExpression MethodInvocation Literal ":\\a" MemberReference ArraySelector Literal 0 MethodInvocation Literal 1 substring l assertEquals	0
MethodDeclaration Modifier public BasicType boolean isCaseSensitive ReturnStatement MemberReference cs	0
MethodDeclaration Modifier public fireBuildFinished FormalParameter ReferenceType Throwable exception LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent This StatementExpression MethodInvocation event MemberReference exception setException LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event buildFinished StatementExpression MethodInvocation IntrospectionHelper clearCache	0
MethodDeclaration Modifier public setDefaultTimeout FormalParameter ReferenceType Integer IfStatement BinaryOperation == MemberReference timeout Literal null BlockStatement StatementExpression Assignment MemberReference timeout MemberReference =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator savedDest MemberReference dest TryStatement StatementExpression MethodInvocation validate StatementExpression MethodInvocation extract StatementExpression Assignment MemberReference dest MemberReference savedDest =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal expectAssertion	0
MethodDeclaration Modifier private BasicType boolean isDelim FormalParameter BasicType char ch IfStatement BinaryOperation == MemberReference delims Literal null BlockStatement ReturnStatement MethodInvocation Character MemberReference ch isWhitespace ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference delims length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i delims MemberReference ch BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType BuildException getBuildException ReturnStatement MemberReference buildException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference failOnError MemberReference fail = StatementExpression Assignment MemberReference incompatibleWithSpawn MemberReference fail |=	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation ClassFileUtils MemberReference className convertSlashName	0
MethodDeclaration Modifier private BasicType int readCurrent IOException ReturnStatement TernaryExpression BinaryOperation || MemberReference eof BinaryOperation == MemberReference currentStream Literal null MemberReference EOF MethodInvocation currentStream read	0
MethodDeclaration Modifier public static copyResource FormalParameter ReferenceType Resource source FormalParameter ReferenceType Resource dest FormalParameter ReferenceType FilterSetCollection filters FormalParameter ReferenceType Vector filterChains FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String inputEncoding FormalParameter ReferenceType String outputEncoding FormalParameter ReferenceType Project project IOException IfStatement MemberReference ! overwrite BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator slm MethodInvocation source getLastModified IfStatement BinaryOperation && BinaryOperation && MethodInvocation dest isExists BinaryOperation != MemberReference slm Literal 0 BinaryOperation > MethodInvocation dest getLastModified MemberReference slm BlockStatement ReturnStatement LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator filterSetsAvailable BinaryOperation && BinaryOperation != MemberReference filters Literal null MethodInvocation filters hasFilters LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator filterChainsAvailable BinaryOperation && BinaryOperation != MemberReference filterChains Literal null BinaryOperation > MethodInvocation filterChains size Literal 0 IfStatement MemberReference filterSetsAvailable BlockStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator out Literal null TryStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr Literal null IfStatement BinaryOperation == MemberReference inputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MethodInvocation source getInputStream = BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MethodInvocation source getInputStream MemberReference inputEncoding = StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader MemberReference isr = LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator osw Literal null IfStatement BinaryOperation == MemberReference outputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference osw ClassCreator ReferenceType OutputStreamWriter MethodInvocation dest getOutputStream = BlockStatement StatementExpression Assignment MemberReference osw ClassCreator ReferenceType OutputStreamWriter MethodInvocation dest getOutputStream MemberReference outputEncoding = StatementExpression Assignment MemberReference out ClassCreator ReferenceType BufferedWriter MemberReference osw = IfStatement MemberReference filterChainsAvailable BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator crh ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation crh MemberReference FileUtils BUF_SIZE setBufferSize StatementExpression MethodInvocation crh MemberReference in setPrimaryReader StatementExpression MethodInvocation crh MemberReference filterChains setFilterChains StatementExpression MethodInvocation crh MemberReference project setProject LocalVariableDeclaration ReferenceType Reader VariableDeclarator rdr MethodInvocation crh getAssembledReader StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader MemberReference rdr = LocalVariableDeclaration ReferenceType LineTokenizer VariableDeclarator lineTokenizer ClassCreator ReferenceType LineTokenizer StatementExpression MethodInvocation lineTokenizer Literal true setIncludeDelims LocalVariableDeclaration ReferenceType String VariableDeclarator newline Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation lineTokenizer MemberReference in getToken WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation line length Literal 0 BlockStatement StatementExpression MethodInvocation out newLine BlockStatement StatementExpression Assignment MemberReference newline MethodInvocation filters MemberReference line = StatementExpression MethodInvocation out MemberReference newline write StatementExpression Assignment MemberReference line MethodInvocation lineTokenizer MemberReference in getToken = StatementExpression MethodInvocation FileUtils MemberReference out close StatementExpression MethodInvocation FileUtils MemberReference in close IfStatement BinaryOperation || BinaryOperation || MemberReference filterChainsAvailable BinaryOperation && BinaryOperation != MemberReference inputEncoding Literal null MethodInvocation ! inputEncoding MemberReference outputEncoding equals BinaryOperation && BinaryOperation == MemberReference inputEncoding Literal null BinaryOperation != MemberReference outputEncoding Literal null BlockStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator out Literal null TryStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr Literal null IfStatement BinaryOperation == MemberReference inputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MethodInvocation source getInputStream = BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MethodInvocation source getInputStream MemberReference inputEncoding = StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader MemberReference isr = LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator osw Literal null IfStatement BinaryOperation == MemberReference outputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference osw ClassCreator ReferenceType OutputStreamWriter MethodInvocation dest getOutputStream = BlockStatement StatementExpression Assignment MemberReference osw ClassCreator ReferenceType OutputStreamWriter MethodInvocation dest getOutputStream MemberReference outputEncoding = StatementExpression Assignment MemberReference out ClassCreator ReferenceType BufferedWriter MemberReference osw = IfStatement MemberReference filterChainsAvailable BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator crh ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation crh MemberReference FileUtils BUF_SIZE setBufferSize StatementExpression MethodInvocation crh MemberReference in setPrimaryReader StatementExpression MethodInvocation crh MemberReference filterChains setFilterChains StatementExpression MethodInvocation crh MemberReference project setProject LocalVariableDeclaration ReferenceType Reader VariableDeclarator rdr MethodInvocation crh getAssembledReader StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader MemberReference rdr = LocalVariableDeclaration BasicType char VariableDeclarator buffer ArrayCreator BasicType char MemberReference FileUtils BUF_SIZE WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nRead MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read IfStatement BinaryOperation == MemberReference nRead Literal - 1 BlockStatement BreakStatement StatementExpression MethodInvocation out MemberReference buffer Literal 0 MemberReference nRead write StatementExpression MethodInvocation FileUtils MemberReference out close StatementExpression MethodInvocation FileUtils MemberReference in close BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference in MethodInvocation source getInputStream = StatementExpression Assignment MemberReference out MethodInvocation dest getOutputStream = LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference FileUtils BUF_SIZE LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression MethodInvocation out MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read = StatementExpression MethodInvocation FileUtils MemberReference out close StatementExpression MethodInvocation FileUtils MemberReference in close IfStatement BinaryOperation && MemberReference preserveLastModified BinaryOperation instanceof MemberReference dest ReferenceType Touchable BlockStatement StatementExpression MethodInvocation Cast ReferenceType Touchable MemberReference dest MethodInvocation source getLastModified setLastModified	1
MethodDeclaration Modifier public setNewenvironment FormalParameter BasicType boolean newenv StatementExpression Assignment MemberReference newEnvironment MemberReference newenv =	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one MethodInvocation getLocation StatementExpression Assignment MemberReference mapperElement ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference mapperElement	0
MethodDeclaration Modifier private BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType String cacheKey StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference basedir MemberReference filename IfStatement MethodInvocation f isDirectory BlockStatement ReturnStatement MemberReference selectDirectories LocalVariableDeclaration ReferenceType String VariableDeclarator cachedValue MethodInvocation String MethodInvocation cache MethodInvocation f getAbsolutePath get valueOf LocalVariableDeclaration ReferenceType String VariableDeclarator newValue MethodInvocation algorithm MemberReference f getValue LocalVariableDeclaration BasicType boolean VariableDeclarator rv BinaryOperation != MethodInvocation MemberReference cachedValue MemberReference newValue compare Literal 0 IfStatement BinaryOperation && MemberReference update MemberReference rv BlockStatement StatementExpression MethodInvocation cache MethodInvocation f getAbsolutePath MemberReference newValue put StatementExpression MethodInvocation BinaryOperation + MethodInvocation getModified Literal 1 IfStatement MethodInvocation ! getDelayUpdate BlockStatement StatementExpression MethodInvocation saveCache ReturnStatement MemberReference rv	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/filters/build.xml" configureProject	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation hasSelectors BlockStatement StatementExpression MethodInvocation buf Literal "{select" append IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation buf Literal " if: " append StatementExpression MethodInvocation buf MemberReference append IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation buf Literal " unless: " append StatementExpression MethodInvocation buf MemberReference append StatementExpression MethodInvocation buf Literal " " append StatementExpression MethodInvocation buf SuperMethodInvocation toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public final static BasicType boolean isAntTask FormalParameter ReferenceType XClass clazz IfStatement MethodInvocation clazz isAbstract BlockStatement ReturnStatement Literal false IfStatement MethodInvocation clazz isInner BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator ignoreValue MethodInvocation clazz MethodInvocation Literal "ant.task" Literal "ignore" getTagAttributeValue getDoc LocalVariableDeclaration BasicType boolean VariableDeclarator ignore MethodInvocation TypeConversionUtil MemberReference ignoreValue Literal false stringToBoolean IfStatement MemberReference ignore BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference clazz hasExecuteMethod BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType NestedCreator getNestedCreator FormalParameter ReferenceType Project project FormalParameter ReferenceType String parentUri FormalParameter ReferenceType Object parent FormalParameter ReferenceType String elementName FormalParameter ReferenceType UnknownElement child BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation ProjectHelper MemberReference elementName extractUriFromComponentName LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation ProjectHelper MemberReference elementName extractNameFromComponentName IfStatement MethodInvocation uri MemberReference ProjectHelper ANT_CORE_URI equals BlockStatement StatementExpression Assignment MemberReference uri Literal "" = IfStatement MethodInvocation parentUri MemberReference ProjectHelper ANT_CORE_URI equals BlockStatement StatementExpression Assignment MemberReference parentUri Literal "" = LocalVariableDeclaration ReferenceType NestedCreator VariableDeclarator nc Literal null IfStatement BinaryOperation || MethodInvocation uri MemberReference parentUri equals MethodInvocation uri Literal "" equals BlockStatement StatementExpression Assignment MemberReference nc Cast ReferenceType NestedCreator MethodInvocation nestedCreators MethodInvocation name MemberReference Locale US toLowerCase get = IfStatement BinaryOperation == MemberReference nc Literal null BlockStatement StatementExpression Assignment MemberReference nc MethodInvocation MemberReference project MemberReference parent MemberReference elementName createAddTypeCreator = IfStatement BinaryOperation && BinaryOperation == MemberReference nc Literal null BinaryOperation instanceof MemberReference parent ReferenceType DynamicElementNS BlockStatement LocalVariableDeclaration ReferenceType DynamicElementNS VariableDeclarator dc Cast ReferenceType DynamicElementNS MemberReference parent LocalVariableDeclaration ReferenceType String VariableDeclarator qName TernaryExpression BinaryOperation == MemberReference child Literal null MemberReference name MethodInvocation child getQName LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator nestedElement MethodInvocation dc TernaryExpression BinaryOperation == MemberReference child Literal null Literal "" MethodInvocation child getNamespace MemberReference name MemberReference qName createDynamicElement IfStatement BinaryOperation != MemberReference nestedElement Literal null BlockStatement StatementExpression Assignment MemberReference nc ClassCreator ReferenceType NestedCreator Literal null MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore ReturnStatement MemberReference nestedElement = IfStatement BinaryOperation && BinaryOperation == MemberReference nc Literal null BinaryOperation instanceof MemberReference parent ReferenceType DynamicElement BlockStatement LocalVariableDeclaration ReferenceType DynamicElement VariableDeclarator dc Cast ReferenceType DynamicElement MemberReference parent LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator nestedElement MethodInvocation dc MethodInvocation name MemberReference Locale US toLowerCase createDynamicElement IfStatement BinaryOperation != MemberReference nestedElement Literal null BlockStatement StatementExpression Assignment MemberReference nc ClassCreator ReferenceType NestedCreator Literal null MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore ReturnStatement MemberReference nestedElement = IfStatement BinaryOperation == MemberReference nc Literal null BlockStatement StatementExpression MethodInvocation MemberReference project MemberReference parent MemberReference elementName throwNotSupported ReturnStatement MemberReference nc	1
MethodDeclaration Modifier public synchronized BasicType boolean isFilesystemOnly IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference StatementExpression MethodInvocation MemberReference union assertFilesystemOnly ReturnStatement Literal true	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required attribute missing" expectBuildException	0
MethodDeclaration Modifier public addFailure FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation MemberReference test Cast ReferenceType Throwable MemberReference t addFailure	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal line testvalue" LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal "@test@ line LocalVariableDeclaration ReferenceType FilterSet VariableDeclarator fs ClassCreator ReferenceType FilterSet StatementExpression MethodInvocation fs Literal "test" Literal "@test1@" addFilter StatementExpression MethodInvocation fs Literal "test1" Literal "@test@" addFilter StatementExpression MethodInvocation fs Literal "test2" Literal "testvalue" addFilter StatementExpression MethodInvocation fs Literal "@" setBeginToken StatementExpression MethodInvocation fs Literal "@" setEndToken StatementExpression MethodInvocation fs Literal false setRecurse StatementExpression MethodInvocation MemberReference result MethodInvocation fs MemberReference line assertEquals	0
MethodDeclaration Modifier public setReplace FormalParameter BasicType char replace StatementExpression Assignment This MemberReference replace MemberReference replace =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType TreeMap VariableDeclarator sorted ClassCreator ReferenceType TreeMap MethodInvocation getProperties ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation sorted MethodInvocation iterator entrySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator e Cast ReferenceType Map ReferenceType Entry MethodInvocation i next IfStatement BinaryOperation != MethodInvocation b length Literal 0 BlockStatement StatementExpression MethodInvocation b Literal ", " append StatementExpression MethodInvocation b MethodInvocation e MethodInvocation toString getKey append StatementExpression MethodInvocation b Literal "=" append StatementExpression MethodInvocation b MethodInvocation e MethodInvocation toString getValue append ReturnStatement MethodInvocation b toString	1
MethodDeclaration Modifier public synchronized final ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Restrict MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation w iterator	0
MethodDeclaration Modifier public onTestFailure FormalParameter ReferenceType TestRunEvent evt StatementExpression MethodInvocation testFailed MemberReference evt addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType i StatementExpression MethodInvocation conditions MemberReference i addElement	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType JspCompilerAdapter VariableDeclarator adapter MethodInvocation Literal "jasper" Literal null Literal null LocalVariableDeclaration ReferenceType JspMangler VariableDeclarator MethodInvocation adapter StatementExpression MethodInvocation BinaryOperation instanceof MemberReference ReferenceType JspNameMangler assertTrue StatementExpression Assignment MemberReference adapter MethodInvocation Literal "jasper41" Literal null Literal null = StatementExpression Assignment MemberReference MethodInvocation adapter = StatementExpression MethodInvocation BinaryOperation instanceof MemberReference ReferenceType assertTrue	0
MethodDeclaration Modifier public testAddFilter StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType File toDir StatementExpression Assignment This MemberReference toDir MemberReference toDir =	0
MethodDeclaration Modifier public testSelectionBehaviour LocalVariableDeclaration ReferenceType FilenameSelector VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results TryStatement StatementExpression MethodInvocation makeBed StatementExpression Assignment MemberReference s Cast ReferenceType FilenameSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "no match possible" setName StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType FilenameSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal setName StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression Assignment MemberReference s Cast ReferenceType FilenameSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal setName StatementExpression MethodInvocation s Literal true setNegate StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType FilenameSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal setName StatementExpression MethodInvocation s Literal false StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType FilenameSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param1 ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param1 Literal "name" setName StatementExpression MethodInvocation param1 Literal setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayInitializer MemberReference param1 StatementExpression MethodInvocation s MemberReference params setParameters StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "FFTFFFFFFTTF" MemberReference results assertEquals StatementExpression MethodInvocation cleanupBed	0
MethodDeclaration Modifier public BasicType int mapValueToNumber LocalVariableDeclaration ReferenceType String VariableDeclarator choice MethodInvocation getValue LocalVariableDeclaration BasicType int VariableDeclarator value Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator values MethodInvocation getValues ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference choice equalsIgnoreCase values StatementExpression Assignment MemberReference value MemberReference i = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public BasicType boolean fileNameEquals FormalParameter ReferenceType File f1 FormalParameter ReferenceType File f2 ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation f2 getAbsolutePath normalize equals MethodInvocation f1 getAbsolutePath normalize	0
MethodDeclaration Modifier public BasicType boolean isLink ReturnStatement BinaryOperation != MethodInvocation MethodInvocation length getLinkedFile Literal 0	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal "extended-setup" executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator tmpdir BinaryOperation + MethodInvocation MethodInvocation getBaseDir MethodInvocation getAbsolutePath MethodInvocation MemberReference File separatorChar Literal '/' replace getProject Literal "/tmp" StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal "/**/*" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal "/alpha/beta/beta.xml" BinaryOperation + MemberReference tmpdir Literal "/alpha/beta/gamma/gamma.xml" BinaryOperation + MemberReference tmpdir Literal "/delta/delta.xml" ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal BinaryOperation + MemberReference tmpdir Literal "/alpha/beta" BinaryOperation + MemberReference tmpdir Literal "/alpha/beta/gamma" BinaryOperation + MemberReference tmpdir Literal "/delta" compareFiles	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected failure" MemberReference WsdlToDotnet.Schema ERROR_FILE_NOT_FOUND expectBuildExceptionContaining	0
MethodDeclaration Modifier private ReferenceType Class getClassFromStream FormalParameter ReferenceType InputStream stream FormalParameter ReferenceType String classname FormalParameter ReferenceType File container IOException SecurityException LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration BasicType int VariableDeclarator bytesRead Literal - 1 LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference BUFFER_SIZE WhileStatement BinaryOperation != Assignment MemberReference bytesRead MethodInvocation stream MemberReference buffer Literal 0 MemberReference BUFFER_SIZE read = Literal - 1 BlockStatement StatementExpression MethodInvocation baos MemberReference buffer Literal 0 MemberReference bytesRead write LocalVariableDeclaration BasicType byte VariableDeclarator classData MethodInvocation baos toByteArray ReturnStatement MethodInvocation MemberReference container MemberReference classData MemberReference classname defineClassFromData	1
MethodDeclaration Modifier public ReferenceType String getFileName ReturnStatement MemberReference fileName	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException StatementExpression MethodInvocation m MemberReference parent Cast ReferenceType Object ArrayCreator ReferenceType Boolean ArrayInitializer TernaryExpression MethodInvocation Project MemberReference value toBoolean MemberReference Boolean TRUE MemberReference Boolean FALSE invoke	1
MethodDeclaration Modifier protected getFile FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dir FormalParameter ReferenceType String filename IOException BuildException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator outstream Literal null TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation MethodInvocation ClassCreator MethodInvocation getPath ReferenceType File MemberReference dir MemberReference filename resolveFile getProject IfStatement BinaryOperation && MemberReference newerOnly MethodInvocation MemberReference ftp MemberReference file MethodInvocation MemberReference filename resolveFile isUpToDate BlockStatement ReturnStatement IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "transferring " MemberReference filename Literal " to " MethodInvocation file getAbsolutePath log LocalVariableDeclaration ReferenceType File VariableDeclarator pdir MethodInvocation file getParentFile IfStatement MethodInvocation ! pdir exists BlockStatement StatementExpression MethodInvocation pdir mkdirs StatementExpression Assignment MemberReference outstream ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference file = StatementExpression MethodInvocation ftp MethodInvocation MemberReference filename resolveFile MemberReference outstream retrieveFile IfStatement MethodInvocation ! FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + Literal "could not get file: " MethodInvocation ftp getReplyString IfStatement MemberReference skipFailedTransfers BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference Project MSG_WARN log StatementExpression MemberReference ++ skipped BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference s BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MethodInvocation file getAbsolutePath Literal " from " MemberReference server MemberReference Project MSG_VERBOSE log StatementExpression MemberReference ++ transferred IfStatement MemberReference preserveLastModified BlockStatement StatementExpression MethodInvocation outstream close StatementExpression Assignment MemberReference outstream Literal null = LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator remote MethodInvocation ftp MethodInvocation MemberReference filename resolveFile listFiles IfStatement BinaryOperation > MemberReference remote length Literal 0 BlockStatement StatementExpression MethodInvocation FILE_UTILS MemberReference file MemberReference ArraySelector Literal 0 MethodInvocation MethodInvocation getTime MethodInvocation getTime remote setFileLastModified IfStatement BinaryOperation != MemberReference outstream Literal null BlockStatement TryStatement StatementExpression MethodInvocation outstream close CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier public setPtime FormalParameter BasicType boolean ptime StatementExpression Assignment This MemberReference ptime MemberReference ptime =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "-1" MethodInvocation project Literal "exitcode" getProperty assertEquals	0
MethodDeclaration Modifier public ReferenceType File getPreprocessDir ReturnStatement MemberReference preprocessDir	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File f StatementExpression MethodInvocation StatementExpression Assignment MemberReference file MemberReference f =	0
MethodDeclaration Modifier public addConfiguredRevoke FormalParameter ReferenceType Permissions ReferenceType Permission perm StatementExpression MethodInvocation revokedPermissions MemberReference perm add	0
MethodDeclaration Modifier public ReferenceType UnknownElement copy FormalParameter ReferenceType Project newProject LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ret ClassCreator ReferenceType UnknownElement MethodInvocation getTag StatementExpression MethodInvocation ret MethodInvocation getNamespace setNamespace StatementExpression MethodInvocation ret MemberReference newProject setProject StatementExpression MethodInvocation ret MethodInvocation getQName StatementExpression MethodInvocation ret MethodInvocation getTaskType setTaskType StatementExpression MethodInvocation ret MethodInvocation getTaskName setTaskName StatementExpression MethodInvocation ret MethodInvocation getLocation setLocation IfStatement BinaryOperation == MethodInvocation getOwningTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Target VariableDeclarator t ClassCreator ReferenceType Target StatementExpression MethodInvocation t MethodInvocation getProject setProject StatementExpression MethodInvocation ret MemberReference t setOwningTarget BlockStatement StatementExpression MethodInvocation ret MethodInvocation getOwningTarget setOwningTarget LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator copyRC ClassCreator ReferenceType RuntimeConfigurable MemberReference ret MethodInvocation getTaskName StatementExpression MethodInvocation copyRC MethodInvocation MethodInvocation getPolyType getWrapper LocalVariableDeclaration ReferenceType Map VariableDeclarator m MethodInvocation MethodInvocation getAttributeMap getWrapper ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation m MethodInvocation iterator entrySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation i next StatementExpression MethodInvocation copyRC Cast ReferenceType String MethodInvocation entry getKey Cast ReferenceType String MethodInvocation entry getValue setAttribute StatementExpression MethodInvocation copyRC MethodInvocation MethodInvocation getText MethodInvocation toString getWrapper addText ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation getChildren getWrapper MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator r Cast ReferenceType RuntimeConfigurable MethodInvocation e nextElement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ueChild Cast ReferenceType UnknownElement MethodInvocation r getProxy LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator copyChild MethodInvocation ueChild MemberReference newProject copy StatementExpression MethodInvocation copyRC MethodInvocation copyChild getWrapper addChild StatementExpression MethodInvocation ret MemberReference copyChild addChild ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using jvc compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator classpath ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation getBootClassPath IfStatement BinaryOperation > MethodInvocation p size Literal 0 BlockStatement StatementExpression MethodInvocation classpath MemberReference p append IfStatement MemberReference BlockStatement StatementExpression MethodInvocation classpath MemberReference extdirs addExtdirs StatementExpression MethodInvocation classpath MethodInvocation getCompileClasspath append IfStatement BinaryOperation != MemberReference compileSourcepath Literal null BlockStatement StatementExpression MethodInvocation classpath MemberReference compileSourcepath append BlockStatement StatementExpression MethodInvocation classpath MemberReference src append LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType String VariableDeclarator exec MethodInvocation MethodInvocation getExecutable getJavac StatementExpression MethodInvocation cmd TernaryExpression BinaryOperation == MemberReference exec Literal null Literal MemberReference exec setExecutable IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "/d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference destDir setFile createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "/cp:p" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference classpath setPath createArgument LocalVariableDeclaration BasicType boolean VariableDeclarator msExtensions Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator mse MethodInvocation MethodInvocation Literal "build.compiler.jvc.extensions" getProperty getProject IfStatement BinaryOperation != MemberReference mse Literal null BlockStatement StatementExpression Assignment MemberReference msExtensions MethodInvocation Project MemberReference mse toBoolean = IfStatement MemberReference msExtensions BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "/x-" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "/nomessage" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "/nologo" setValue createArgument IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "/g" setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "/O" setValue createArgument IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "/verbose" setValue createArgument StatementExpression MethodInvocation MemberReference cmd addCurrentCompilerArgs LocalVariableDeclaration BasicType int VariableDeclarator firstFileName MethodInvocation cmd size StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement BinaryOperation == MethodInvocation MethodInvocation cmd getCommandline MemberReference firstFileName executeExternalCompile Literal 0	1
MethodDeclaration Modifier protected BasicType int getResponseCode FormalParameter ReferenceType HttpURLConnection connection IOException LocalVariableDeclaration ReferenceType IOException VariableDeclarator swallowed Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator caught Literal false LocalVariableDeclaration BasicType int VariableDeclarator response Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator attempts Literal 0 BinaryOperation < MemberReference attempts Literal 5 MemberReference ++ attempts BlockStatement TryStatement StatementExpression Assignment MemberReference response MethodInvocation connection getResponseCode = StatementExpression Assignment MemberReference caught Literal true = BreakStatement CatchClause CatchClauseParameter FileNotFoundException ex StatementExpression MethodInvocation Literal "Swallowed FileNotFoundException in getResponseCode" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation ex toString MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference swallowed MemberReference ex = IfStatement BinaryOperation && MemberReference ! caught BinaryOperation != MemberReference swallowed Literal null BlockStatement ThrowStatement MemberReference swallowed ReturnStatement MemberReference response	1
MethodDeclaration Modifier private deleteAfter FormalParameter Modifier final ReferenceType File f FormalParameter Modifier final ReferenceType Process p StatementExpression ClassCreator MethodInvocation start ReferenceType Thread MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation p waitFor CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation FileUtils MemberReference f delete	0
MethodDeclaration Modifier private ReferenceType Map LocalVariableDeclaration ReferenceType Map VariableDeclarator attrMap ClassCreator ReferenceType Hashtable StatementExpression MethodInvocation attrMap Literal "seven" ClassReference ReferenceType String put StatementExpression MethodInvocation attrMap Literal "eight" MemberReference Integer TYPE put StatementExpression MethodInvocation attrMap Literal "nine" ClassReference ReferenceType Integer put StatementExpression MethodInvocation attrMap Literal "ten" ClassReference ReferenceType File put StatementExpression MethodInvocation attrMap Literal "eleven" MemberReference Boolean TYPE put StatementExpression MethodInvocation attrMap Literal "twelve" ClassReference ReferenceType Boolean put StatementExpression MethodInvocation attrMap Literal "thirteen" ClassReference ReferenceType Class put StatementExpression MethodInvocation attrMap Literal "fourteen" ClassReference ReferenceType StringBuffer put StatementExpression MethodInvocation attrMap Literal "fifteen" MemberReference Character TYPE put StatementExpression MethodInvocation attrMap Literal "sixteen" ClassReference ReferenceType Character put StatementExpression MethodInvocation attrMap Literal "seventeen" MemberReference Byte TYPE put StatementExpression MethodInvocation attrMap Literal "eightteen" MemberReference Short TYPE put StatementExpression MethodInvocation attrMap Literal "nineteen" MemberReference Double TYPE put StatementExpression MethodInvocation attrMap Literal "name" ClassReference ReferenceType String put ReturnStatement MemberReference attrMap	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType Tokenizer tokenizer IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation != This MemberReference tokenizer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one tokenizer StatementExpression Assignment This MemberReference tokenizer MemberReference tokenizer =	0
MethodDeclaration Modifier private addDirContents FormalParameter ReferenceType ZipOutputStream output FormalParameter ReferenceType File dir FormalParameter ReferenceType String prefix FormalParameter BasicType boolean compress IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation dir list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference contents length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector MemberReference i contents LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference name IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression MethodInvocation MemberReference output MemberReference file BinaryOperation + BinaryOperation + MemberReference prefix MemberReference name Literal '/' MemberReference compress addDirContents BlockStatement StatementExpression MethodInvocation MemberReference output MemberReference file MemberReference prefix MemberReference compress addFile	1
MethodDeclaration Modifier protected execP4Command FormalParameter ReferenceType String command BuildException StatementExpression MethodInvocation MemberReference command Literal null execP4Command	1
MethodDeclaration Modifier private ReferenceType getClasspath ReturnStatement MethodInvocation MemberReference classpath getRef	0
MethodDeclaration Modifier public BasicType boolean isRecursive ReturnStatement This MemberReference	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean v StatementExpression Assignment This MemberReference verbose MemberReference v =	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal testRealTest	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal "alpha"	0
MethodDeclaration Modifier protected ReferenceType String doReplace FormalParameter ReferenceType RegularExpression r FormalParameter ReferenceType Substitution s FormalParameter ReferenceType String input FormalParameter BasicType int options LocalVariableDeclaration ReferenceType String VariableDeclarator res MemberReference input LocalVariableDeclaration ReferenceType Regexp VariableDeclarator regexp MethodInvocation r MethodInvocation getProject IfStatement MethodInvocation regexp MemberReference input MemberReference options matches BlockStatement StatementExpression MethodInvocation Literal "Found MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference res MethodInvocation regexp MemberReference input MethodInvocation s MethodInvocation getProject getExpression MemberReference options substitute = ReturnStatement MemberReference res	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public synchronized restoreSecurityManager StatementExpression Assignment MemberReference active Literal false = StatementExpression MethodInvocation System MemberReference origSm setSecurityManager	0
MethodDeclaration Modifier public fireTargetStarted StatementExpression SuperMethodInvocation MemberReference target fireTargetStarted	0
MethodDeclaration Modifier public reset StatementExpression Assignment MemberReference append Literal false = StatementExpression Assignment MemberReference forceOverwrite Literal true = StatementExpression Assignment MemberReference destinationFile Literal null = StatementExpression Assignment MemberReference encoding Literal null = StatementExpression Assignment MemberReference outputEncoding Literal null = StatementExpression Assignment MemberReference fixLastLine Literal false = StatementExpression Assignment MemberReference filterChains Literal null = StatementExpression Assignment MemberReference footer Literal null = StatementExpression Assignment MemberReference header Literal null = StatementExpression Assignment MemberReference binary Literal false = StatementExpression Assignment MemberReference outputWriter Literal null = StatementExpression Assignment MemberReference textBuffer Literal null = StatementExpression Assignment MemberReference eolString MethodInvocation System Literal "line.separator" getProperty = StatementExpression Assignment MemberReference rc Literal null =	0
MethodDeclaration Modifier public setLineBreaks FormalParameter Modifier final ReferenceType String lineBreaks StatementExpression Assignment This MemberReference lineBreaks MemberReference lineBreaks =	0
MethodDeclaration Modifier public static ReferenceType ClassLoader getClassLoaderForPath FormalParameter ReferenceType Project p FormalParameter ReferenceType ref FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator pathId MethodInvocation ref getRefId LocalVariableDeclaration ReferenceType Object VariableDeclarator path MethodInvocation p MemberReference pathId getReference IfStatement BinaryOperation instanceof MemberReference path ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The specified " MemberReference pathId Literal " does not reference a LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MemberReference MagicNames REFID_CLASSPATH_LOADER_PREFIX MemberReference pathId ReturnStatement MethodInvocation MemberReference p Cast ReferenceType MemberReference path MemberReference MemberReference getClassLoaderForPath	0
MethodDeclaration Modifier protected ReferenceType ServerDeploy getTask ReturnStatement MemberReference task	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private checkConfiguration FormalParameter ReferenceType File buildDir EjbcException IfStatement BinaryOperation == MemberReference home Literal null BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + Literal "A home interface was not found " Literal "for the " MemberReference name Literal " EJB." IfStatement BinaryOperation == MemberReference remote Literal null BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + Literal "A remote interface was not found " Literal "for the " MemberReference name Literal " EJB." IfStatement BinaryOperation == MemberReference implementation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + Literal "An EJB implementation class was not " Literal "found for the " MemberReference name Literal " EJB." IfStatement BinaryOperation && BinaryOperation && MethodInvocation beantype MemberReference ENTITY_BEAN equals MethodInvocation beantype MemberReference STATELESS_SESSION equals MethodInvocation beantype MemberReference STATEFUL_SESSION equals BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The beantype found (" MemberReference beantype Literal ") " Literal "isn't valid in the " MemberReference name Literal " EJB." IfStatement BinaryOperation && MemberReference cmp MethodInvocation beantype MemberReference ENTITY_BEAN equals BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "CMP stubs and skeletons may not be generated" Literal " for a Session Bean -- the \"cmp\" attribute will Literal " ignoredfor the " MemberReference name Literal " EJB." println IfStatement BinaryOperation && MemberReference hasession MethodInvocation beantype MemberReference STATEFUL_SESSION equals BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Highly available stubs and skeletons may " Literal "only be generated for a Stateful Session Bean -- the " Literal "\"hasession\" attribute will be ignored for the " MemberReference name Literal " EJB." println IfStatement MethodInvocation ! remote MethodInvocation exists MemberReference buildDir getClassFile BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The remote interface " MethodInvocation remote getQualifiedClassName Literal " could not be " Literal "found." IfStatement MethodInvocation ! home MethodInvocation exists MemberReference buildDir getClassFile BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The home interface " MethodInvocation home getQualifiedClassName Literal " could not be " Literal "found." IfStatement MethodInvocation ! implementation MethodInvocation exists MemberReference buildDir getClassFile BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The EJB implementation class " MethodInvocation implementation getQualifiedClassName Literal " could " Literal "not be found."	1
MethodDeclaration Modifier public static ReferenceType File FormalParameter ReferenceType ClassLoader c FormalParameter ReferenceType String resource IfStatement BinaryOperation == MemberReference c Literal null BlockStatement StatementExpression Assignment MemberReference c ClassReference MethodInvocation getClassLoader ReferenceType = ReturnStatement MethodInvocation MethodInvocation Locator MemberReference c MemberReference resource	0
MethodDeclaration Modifier public FormalParameter ReferenceType String iepluginid StatementExpression Assignment This MemberReference iepluginid MemberReference iepluginid =	0
MethodDeclaration Modifier protected configureFileSet FormalParameter ReferenceType ArchiveFileSet zfs StatementExpression MethodInvocation zfs MemberReference prefix setPrefix StatementExpression MethodInvocation zfs MemberReference fullpath StatementExpression Assignment MemberReference zfs fileModeHasBeenSet MemberReference fileModeHasBeenSet = StatementExpression Assignment MemberReference zfs fileMode MemberReference fileMode = StatementExpression Assignment MemberReference zfs dirModeHasBeenSet MemberReference dirModeHasBeenSet = StatementExpression Assignment MemberReference zfs dirMode MemberReference dirMode =	0
MethodDeclaration Modifier public onTestFailure FormalParameter ReferenceType TestRunEvent evt StatementExpression Assignment MemberReference filteredTrace MemberReference trace =	0
MethodDeclaration Modifier private ReferenceType String quoteString FormalParameter ReferenceType String str IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation str Literal ' ' indexOf Literal - 1 BinaryOperation == MethodInvocation str Literal '\'' indexOf Literal - 1 BinaryOperation == MethodInvocation str Literal '"' indexOf Literal - 1 BlockStatement ReturnStatement MemberReference str IfStatement BinaryOperation == MethodInvocation str Literal '\'' indexOf Literal - 1 BlockStatement ReturnStatement MethodInvocation MemberReference str Literal '\'' quoteString BlockStatement ReturnStatement MethodInvocation MemberReference str Literal '"' quoteString	0
MethodDeclaration Modifier public final setVssServerPath FormalParameter ReferenceType String vssServerPath StatementExpression Assignment This MemberReference vssServerPath MemberReference vssServerPath =	0
MethodDeclaration Modifier protected ReferenceType Commandline buildCmdLine LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation getVsspath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attribute must be set!" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation getSSCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference COMMAND_CHECKOUT setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getVsspath setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLocalpath setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getAutoresponse setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getVersionDateLabel setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLogin setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getFileTimeStamp setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getWritableFiles setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getGetLocalCopy setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier private ReferenceType String getCompileOptionsAsArray LocalVariableDeclaration ReferenceType Vector VariableDeclarator options ClassCreator ReferenceType Vector StatementExpression MethodInvocation options TernaryExpression MemberReference binary Literal "-binary" Literal "-nobinary" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference comments Literal "-comments" Literal "-nocomments" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference compile Literal "-compile" Literal "-nocompile" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference compact Literal "-compact" Literal "-nocompact" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference console Literal "-console" Literal "-noconsole" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-crossref" Literal "-nocrossref" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference decimal Literal "-decimal" Literal "-nodecimal" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference diag Literal "-diag" Literal "-nodiag" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference explicit Literal "-explicit" Literal "-noexplicit" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference format Literal "-format" Literal "-noformat" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference keep Literal "-keep" Literal "-nokeep" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-logo" Literal "-nologo" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference replace Literal "-replace" Literal "-noreplace" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-savelog" Literal "-nosavelog" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference sourcedir Literal "-sourcedir" Literal "-nosourcedir" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-strictargs" Literal "-nostrictargs" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-strictassign" Literal "-nostrictassign" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-strictcase" Literal "-nostrictcase" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-strictimport" Literal "-nostrictimport" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-strictprops" Literal "-nostrictprops" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-strictsignal" Literal "-nostrictsignal" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference symbols Literal "-symbols" Literal "-nosymbols" addElement StatementExpression MethodInvocation options TernaryExpression MemberReference time Literal "-time" Literal "-notime" addElement StatementExpression MethodInvocation options BinaryOperation + Literal "-" MemberReference trace addElement StatementExpression MethodInvocation options TernaryExpression MemberReference Literal "-utf8" Literal "-noutf8" addElement StatementExpression MethodInvocation options BinaryOperation + Literal "-" MemberReference verbose addElement LocalVariableDeclaration ReferenceType String VariableDeclarator results ArrayCreator ReferenceType String MethodInvocation options size StatementExpression MethodInvocation options MemberReference results copyInto ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType String getTypeName ReturnStatement MemberReference mTypeName	0
MethodDeclaration Modifier public FormalParameter ReferenceType String dirName StatementExpression Assignment MemberReference generatedFilesDirectory ClassCreator ReferenceType File MemberReference dirName =	0
MethodDeclaration Modifier private ReferenceType String formatCommandLine FormalParameter ReferenceType Commandline cmd LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sBuff ClassCreator ReferenceType StringBuffer MethodInvocation cmd toString LocalVariableDeclaration BasicType int VariableDeclarator indexUser MethodInvocation sBuff MethodInvocation MemberReference FLAG_LOGIN indexOf Literal 0 substring IfStatement BinaryOperation > MemberReference indexUser Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator indexPass MethodInvocation sBuff MethodInvocation Literal "," MemberReference indexUser indexOf Literal 0 substring LocalVariableDeclaration BasicType int VariableDeclarator indexAfterPass MethodInvocation sBuff MethodInvocation Literal " " MemberReference indexPass indexOf Literal 0 substring ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference indexPass Literal 1 BinaryOperation < MemberReference i MemberReference indexAfterPass MemberReference ++ i BlockStatement StatementExpression MethodInvocation sBuff MemberReference i Literal '*' setCharAt ReturnStatement MethodInvocation sBuff toString	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject Literal resolveFile StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result contentEquals assertTrue	0
MethodDeclaration Modifier public setDescriptors FormalParameter ReferenceType String dirName StatementExpression Assignment MemberReference descriptorDirectory ClassCreator ReferenceType File MemberReference dirName =	0
MethodDeclaration Modifier public testurloutput LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation Literal "testurloutput" resolveFile getProject TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference f createNewFile StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference f testoutput StatementExpression MethodInvocation Literal "should have caught UnknownServiceException" fail CatchClause CatchClauseParameter UnknownServiceException e CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e MemberReference System err printStackTrace StatementExpression MethodInvocation BinaryOperation + Literal "caught some other IOException: " MemberReference e fail IfStatement MethodInvocation ! f delete BlockStatement StatementExpression MethodInvocation f deleteOnExit	1
MethodDeclaration Modifier public setType FormalParameter ReferenceType type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier private generateClient FormalParameter ReferenceType File sourceJar StatementExpression MethodInvocation MethodInvocation getProject MethodInvocation Literal "internal_bas_generateclient" ClassReference org.apache.tools.ant.taskdefs.optional.ejb ReferenceType BorlandGenerateClient getTask LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType taskdefs ReferenceType optional ReferenceType ejb ReferenceType BorlandGenerateClient VariableDeclarator gentask Literal null StatementExpression MethodInvocation BinaryOperation + Literal "generate client for " MemberReference sourceJar MemberReference Project MSG_INFO log TryStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation MethodInvocation getProject getTask StatementExpression Assignment MemberReference gentask Cast ReferenceType BorlandGenerateClient MethodInvocation project Literal "internal_bas_generateclient" createTask = StatementExpression MethodInvocation gentask MemberReference sourceJar setEjbjar StatementExpression MethodInvocation gentask MemberReference java2iiopdebug setDebug LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation getCombinedClasspath IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation gentask MemberReference classpath setClasspath StatementExpression MethodInvocation gentask MemberReference version setVersion StatementExpression MethodInvocation gentask Literal "generate client" setTaskName StatementExpression MethodInvocation gentask execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Exception while calling " MemberReference VERIFY Literal " Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier protected processFlush FormalParameter ReferenceType ByteArrayOutputStream buffer LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation buffer toString StatementExpression MethodInvocation project MemberReference output MemberReference isErrorStream demuxFlush StatementExpression MethodInvocation resetBufferInfo	0
MethodDeclaration Modifier public setUseCaches FormalParameter BasicType boolean usecaches StatementExpression Assignment This MemberReference usecaches MemberReference usecaches =	0
MethodDeclaration Modifier protected BasicType boolean isSigned FormalParameter ReferenceType File file TryStatement ReturnStatement MethodInvocation IsSigned MemberReference file MemberReference alias isSigned CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_VERBOSE log ReturnStatement Literal false	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "andempty" Literal "andempty" expectPropertySet	0
MethodDeclaration Modifier public clear StatementExpression SuperMethodInvocation clear StatementExpression Assignment MemberReference docFile Literal null = StatementExpression Assignment MemberReference fileAlign Literal 0 = StatementExpression Assignment MemberReference fullpaths Literal true = StatementExpression Assignment MemberReference incremental Literal false = StatementExpression Assignment MemberReference unsafe Literal false = StatementExpression Assignment MemberReference noconfig Literal false = StatementExpression Assignment MemberReference definitions Literal null = StatementExpression MethodInvocation TernaryExpression MemberReference isWindows Literal Literal "mcs" setExecutable	0
MethodDeclaration Modifier private LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator entryKey BinaryOperation + BinaryOperation + MemberReference date MemberReference author MemberReference LocalVariableDeclaration ReferenceType CVSEntry VariableDeclarator entry IfStatement MethodInvocation ! entries MemberReference entryKey containsKey BlockStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator dateObject MethodInvocation MemberReference date parseDate StatementExpression Assignment MemberReference entry ClassCreator ReferenceType CVSEntry MemberReference dateObject MemberReference author MemberReference = StatementExpression MethodInvocation entries MemberReference entryKey MemberReference entry put BlockStatement StatementExpression Assignment MemberReference entry Cast ReferenceType CVSEntry MethodInvocation entries MemberReference entryKey get = StatementExpression MethodInvocation entry MemberReference file MemberReference revision MemberReference addFile	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file = StatementExpression Assignment This MemberReference filename MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getBaseDir getProject MemberReference file removeLeadingPath =	0
MethodDeclaration Modifier public FormalParameter ReferenceType RegularExpression regularExpression IfStatement BinaryOperation != This MemberReference regularExpression Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Only one regular expression is StatementExpression Assignment This MemberReference regularExpression MemberReference regularExpression =	0
MethodDeclaration Modifier protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m ArrayCreator ReferenceType Mapper ArrayInitializer MemberReference MemberReference MemberReference ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference m length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i m Literal null BlockStatement StatementExpression MethodInvocation stk MemberReference ArraySelector MemberReference i m push StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MemberReference stk MemberReference p dieOnCircularReference m StatementExpression MethodInvocation stk pop LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ArrayCreator ReferenceType Vector ArrayInitializer MemberReference inputFilterChains MemberReference outputFilterChains MemberReference errorFilterChains ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference v length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i v Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator fci MemberReference ArraySelector MemberReference i MethodInvocation iterator v MethodInvocation fci hasNext BlockStatement LocalVariableDeclaration ReferenceType FilterChain VariableDeclarator fc Cast ReferenceType FilterChain MethodInvocation fci next StatementExpression MethodInvocation stk MemberReference fc push StatementExpression MethodInvocation fc MemberReference stk MemberReference p dieOnCircularReference StatementExpression MethodInvocation stk pop StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setHeader FormalParameter BasicType boolean header StatementExpression Assignment This MemberReference header MemberReference header =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference change	0
MethodDeclaration Modifier public testInheritFilterset StatementExpression MethodInvocation project Literal executeTarget	0
MethodDeclaration Modifier private logRemovedCount FormalParameter BasicType int count FormalParameter ReferenceType String prefix FormalParameter ReferenceType String singularSuffix FormalParameter ReferenceType String pluralSuffix LocalVariableDeclaration ReferenceType File VariableDeclarator toDir MethodInvocation myCopy getToDir LocalVariableDeclaration ReferenceType String VariableDeclarator what TernaryExpression BinaryOperation == MemberReference prefix Literal null Literal "" MemberReference prefix StatementExpression Assignment MemberReference what TernaryExpression BinaryOperation < MemberReference count Literal 2 MemberReference singularSuffix MemberReference pluralSuffix += IfStatement BinaryOperation > MemberReference count Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Removed " MemberReference count Literal " " MemberReference what Literal " from " MemberReference toDir MemberReference Project MSG_INFO log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "NO " MemberReference what Literal " to remove from " MemberReference toDir MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public setGenericJarSuffix FormalParameter ReferenceType String inString StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Since a generic JAR file is not created during processing, the " Literal "iPlanet Deployment Tool does not support the " Literal "\"genericjarsuffix\" attribute. It will be ignored." MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference config classpath Literal null BlockStatement StatementExpression Assignment MemberReference config classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public static runCommand FormalParameter ReferenceType Task task FormalParameter ReferenceType String cmdline BuildException TryStatement StatementExpression MethodInvocation task MethodInvocation Commandline MemberReference cmdline describeCommand MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler MemberReference task MemberReference Project MSG_INFO MemberReference Project MSG_ERR StatementExpression MethodInvocation exe MethodInvocation task getProject setAntRun StatementExpression MethodInvocation exe MemberReference cmdline setCommandline LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation exe execute IfStatement MethodInvocation MemberReference retval isFailure BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference ArraySelector Literal 0 cmdline Literal " failed with return code " MemberReference retval MethodInvocation task getLocation CatchClause CatchClauseParameter java.io.IOException exc ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not launch " MemberReference ArraySelector Literal 0 cmdline Literal ": " MemberReference exc MethodInvocation task getLocation	1
MethodDeclaration Modifier public ReferenceType String getFilename ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public BasicType int execute IOException IfStatement BinaryOperation && BinaryOperation != MemberReference workingDirectory Literal null MethodInvocation ! workingDirectory exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference workingDirectory Literal " doesn't exist." LocalVariableDeclaration Modifier final ReferenceType Process VariableDeclarator process MethodInvocation MemberReference project MethodInvocation getCommandline MethodInvocation getEnvironment MemberReference workingDirectory MemberReference launch TryStatement StatementExpression MethodInvocation streamHandler MethodInvocation process getOutputStream setProcessInputStream StatementExpression MethodInvocation streamHandler MethodInvocation process getInputStream setProcessOutputStream StatementExpression MethodInvocation streamHandler MethodInvocation process getErrorStream setProcessErrorStream CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation process destroy ThrowStatement MemberReference e StatementExpression MethodInvocation streamHandler start TryStatement StatementExpression MethodInvocation processDestroyer MemberReference process add IfStatement BinaryOperation != MemberReference watchdog Literal null BlockStatement StatementExpression MethodInvocation watchdog MemberReference process start StatementExpression MethodInvocation MemberReference process waitFor IfStatement BinaryOperation != MemberReference watchdog Literal null BlockStatement StatementExpression MethodInvocation watchdog stop StatementExpression MethodInvocation streamHandler stop StatementExpression MethodInvocation MemberReference process IfStatement BinaryOperation != MemberReference watchdog Literal null BlockStatement StatementExpression MethodInvocation watchdog checkException ReturnStatement MethodInvocation CatchClause CatchClauseParameter ThreadDeath t StatementExpression MethodInvocation process destroy ThrowStatement MemberReference t StatementExpression MethodInvocation processDestroyer MemberReference process remove	0
MethodDeclaration Modifier private FormalParameter BasicType int blockSize FormalParameter BasicType int recordSize StatementExpression Assignment This MemberReference debug Literal false = StatementExpression Assignment This MemberReference blockSize MemberReference blockSize = StatementExpression Assignment This MemberReference recordSize MemberReference recordSize = StatementExpression Assignment This MemberReference recsPerBlock BinaryOperation / This MemberReference blockSize This MemberReference recordSize = StatementExpression Assignment This MemberReference blockBuffer ArrayCreator BasicType byte This MemberReference blockSize = IfStatement BinaryOperation != This MemberReference inStream Literal null BlockStatement StatementExpression Assignment This MemberReference currBlkIdx Literal - 1 = StatementExpression Assignment This MemberReference currRecIdx This MemberReference recsPerBlock = BlockStatement StatementExpression Assignment This MemberReference currBlkIdx Literal 0 = StatementExpression Assignment This MemberReference currRecIdx Literal 0 =	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation init IfStatement MemberReference ! targetSet BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Attribute target or at least one target is required." MethodInvocation getLocation StatementExpression MethodInvocation callee MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject setAntfile StatementExpression MethodInvocation callee MemberReference StatementExpression MethodInvocation callee MemberReference StatementExpression MethodInvocation callee execute	1
MethodDeclaration Modifier public addFailure FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation testListener MemberReference test MemberReference t addFailure	0
MethodDeclaration Modifier protected assertPropertyContains FormalParameter ReferenceType String property FormalParameter ReferenceType String contains LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation MemberReference property getProperty StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "expected " MemberReference contains Literal " in " MemberReference result BinaryOperation && BinaryOperation != MemberReference result Literal null BinaryOperation >= MethodInvocation result MemberReference contains indexOf Literal 0 assertTrue	0
MethodDeclaration Modifier public testExceptions LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator t1 ClassCreator ReferenceType TestNormal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference expected length MemberReference ++ i BlockStatement TryStatement StatementExpression MethodInvocation t1 MemberReference ArraySelector MemberReference i expected setValue CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal "unexpected exception for value " MemberReference ArraySelector MemberReference i expected fail TryStatement StatementExpression MethodInvocation t1 Literal "d" setValue StatementExpression MethodInvocation Literal "expected exception for value \"d\"" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression ClassCreator MethodInvocation Literal "d" setValue ReferenceType TestNull StatementExpression MethodInvocation Literal "expected exception for value \"d\" in TestNull" fail CatchClause CatchClauseParameter BuildException be CatchClause CatchClauseParameter Throwable other StatementExpression MethodInvocation BinaryOperation + Literal "unexpected death of TestNull: " MethodInvocation other getMessage fail	1
MethodDeclaration Modifier protected handleChildren FormalParameter ReferenceType Object parent FormalParameter ReferenceType RuntimeConfigurable parentWrapper BuildException IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TaskAdapter BlockStatement StatementExpression Assignment MemberReference parent Cast ReferenceType TaskAdapter MemberReference parent = LocalVariableDeclaration ReferenceType Class VariableDeclarator parentClass MethodInvocation parent getClass LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MemberReference parentClass getHelper ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation children size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator childWrapper MethodInvocation parentWrapper MemberReference i getChild LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator child Cast ReferenceType UnknownElement MethodInvocation children MemberReference i elementAt LocalVariableDeclaration ReferenceType Object VariableDeclarator realChild Literal null IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TaskContainer BlockStatement LocalVariableDeclaration ReferenceType ProjectComponentHelper VariableDeclarator helper MethodInvocation ProjectComponentHelper getProjectComponentHelper StatementExpression Assignment MemberReference realChild MethodInvocation helper MemberReference child MethodInvocation getProject Literal null MethodInvocation child getTag createProjectComponent = IfStatement BinaryOperation == MemberReference realChild Literal null BlockStatement ThrowStatement MethodInvocation Literal "task" MethodInvocation child getTag IfStatement BinaryOperation instanceof MemberReference realChild ReferenceType Task BlockStatement StatementExpression Cast ReferenceType TaskContainer MemberReference parent LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MemberReference realChild StatementExpression MethodInvocation task MethodInvocation child getLocation setLocation StatementExpression MethodInvocation task This MethodInvocation getOwningTarget setOwningTarget StatementExpression MethodInvocation task init BlockStatement BlockStatement StatementExpression Assignment MemberReference realChild MethodInvocation ih MethodInvocation getProject MemberReference parent MethodInvocation child getTag createElement = StatementExpression MethodInvocation childWrapper MemberReference realChild setProxy IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TaskContainer BlockStatement StatementExpression Cast ReferenceType Task MemberReference realChild StatementExpression MethodInvocation child MemberReference realChild MemberReference childWrapper handleChildren IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TaskContainer BlockStatement StatementExpression Cast ReferenceType Task MemberReference realChild	1
MethodDeclaration Modifier public synchronized BasicType boolean isFilesystemOnly IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Restrict MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation w isFilesystemOnly	0
MethodDeclaration Modifier public start StatementExpression Assignment MemberReference start MethodInvocation System currentTimeMillis =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "Text" MethodInvocation MethodInvocation Literal "root-tag.inner-tag" getProperty getProject assertEquals	0
MethodDeclaration Modifier public ReferenceType UnknownElement getPreSets ReturnStatement MemberReference element	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileNameMapper fileNameMapper LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m ClassCreator ReferenceType Mapper MethodInvocation getProject StatementExpression MethodInvocation m MemberReference fileNameMapper add StatementExpression MethodInvocation MemberReference m	0
MethodDeclaration Modifier public testMultipleTargets2 StatementExpression MethodInvocation Literal "multiple-targets-2" Literal "dadctb" expectLog	0
MethodDeclaration Modifier public synchronized timeoutOccured FormalParameter ReferenceType Watchdog w IfStatement BinaryOperation != MemberReference thread Literal null BlockStatement StatementExpression Assignment MemberReference timedOut Literal true = StatementExpression MethodInvocation thread StatementExpression MethodInvocation notifyAll	1
MethodDeclaration Modifier public addFormatter FormalParameter ReferenceType FormatterElement fe StatementExpression MethodInvocation formatters MemberReference fe addElement	0
MethodDeclaration Modifier public setWarfile FormalParameter ReferenceType File warFile StatementExpression MethodInvocation MemberReference warFile setDestFile	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression MethodInvocation assertSrcIsJavaResource StatementExpression Cast ReferenceType MemberReference src	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation BinaryOperation * Literal 50 Literal 1000 StatementExpression MethodInvocation Literal seconds" MemberReference text assertEquals StatementExpression Assignment MemberReference text MethodInvocation BinaryOperation * Literal 65 Literal 1000 = StatementExpression MethodInvocation Literal minute 5 seconds" MemberReference text assertEquals StatementExpression Assignment MemberReference text MethodInvocation BinaryOperation * Literal 120 Literal 1000 = StatementExpression MethodInvocation Literal "2 minutes 0 seconds" MemberReference text assertEquals StatementExpression Assignment MemberReference text MethodInvocation BinaryOperation * Literal 121 Literal 1000 = StatementExpression MethodInvocation Literal "2 minutes 1 second" MemberReference text assertEquals	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference readAheadCh Literal - 1 BlockStatement StatementExpression Assignment MemberReference ch MemberReference readAheadCh = StatementExpression Assignment MemberReference readAheadCh Literal - 1 = BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation && BinaryOperation == MemberReference ch Literal '"' MemberReference ! quoted BlockStatement StatementExpression Assignment MemberReference inString MemberReference ! inString = StatementExpression Assignment MemberReference quoted Literal false = IfStatement BinaryOperation == MemberReference ch Literal '\\' BlockStatement StatementExpression Assignment MemberReference quoted MemberReference ! quoted = BlockStatement StatementExpression Assignment MemberReference quoted Literal false = IfStatement MemberReference ! inString BlockStatement IfStatement BinaryOperation == MemberReference ch Literal '/' BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal '/' BlockStatement WhileStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference ch Literal '\n' BinaryOperation != MemberReference ch Literal - 1 BinaryOperation != MemberReference ch Literal '\r' BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal '*' BlockStatement WhileStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal '*' BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = WhileStatement BinaryOperation && BinaryOperation == MemberReference ch Literal '*' BinaryOperation != MemberReference ch Literal - 1 BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal '/' BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation read = BreakStatement BlockStatement StatementExpression Assignment MemberReference readAheadCh MemberReference ch = StatementExpression Assignment MemberReference ch Literal '/' = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference change Literal null BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + Literal "-c " MemberReference change = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -f" = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -d" = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -h" = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -i" = IfStatement This MemberReference simulationmode BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -n" = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -r" = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -t" = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal "-v" = LocalVariableDeclaration ReferenceType String VariableDeclarator command IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference branch Literal null BinaryOperation != MemberReference fromfile Literal null BinaryOperation != MemberReference tofile Literal null BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference P4CmdOpts Literal " " MemberReference fromfile Literal " " MemberReference tofile = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference branch Literal null BinaryOperation == MemberReference fromfile Literal null BinaryOperation != MemberReference tofile Literal null BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference P4CmdOpts Literal " -b " MemberReference branch Literal " " MemberReference tofile = IfStatement BinaryOperation && BinaryOperation != MemberReference branch Literal null BinaryOperation != MemberReference fromfile Literal null BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference P4CmdOpts Literal " -b " MemberReference branch Literal " -s " MemberReference fromfile Literal " " MemberReference tofile = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "you need to specify fromfile and tofile, " Literal "or branch and tofile, or branch and fromfile, or branch and fromfile and tofile " StatementExpression MethodInvocation BinaryOperation + Literal "-s integrate " MemberReference command ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier final protected ReferenceType String getXalanVersion FormalParameter ReferenceType String procVersionClassName ClassNotFoundException LocalVariableDeclaration ReferenceType Class VariableDeclarator procVersion MethodInvocation Class MemberReference procVersionClassName forName LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation procVersion MethodInvocation getName getPackage TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator f MethodInvocation procVersion Literal "S_VERSION" getField ReturnStatement BinaryOperation + BinaryOperation + MemberReference pkg Literal " " MethodInvocation f MethodInvocation toString Literal null get CatchClause CatchClauseParameter Exception e ReturnStatement BinaryOperation + MemberReference pkg Literal "	0
MethodDeclaration Modifier public setSubject FormalParameter ReferenceType String subject StatementExpression Assignment This MemberReference subject MemberReference subject =	0
MethodDeclaration Modifier public static resetDefaultExcludes StatementExpression Assignment MemberReference defaultExcludes ClassCreator ReferenceType Vector = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference DEFAULTEXCLUDES length MemberReference ++ i BlockStatement StatementExpression MethodInvocation defaultExcludes MemberReference ArraySelector MemberReference i DEFAULTEXCLUDES add	0
MethodDeclaration Modifier public ReferenceType String getURI ReturnStatement MemberReference uri	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "presetdef-with-nested-element-twice" executeTarget StatementExpression MethodInvocation Literal "presetdef-with-nested-element-twice" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Unit unit StatementExpression Assignment MemberReference maxWaitMultiplier MethodInvocation unit getMultiplier =	0
MethodDeclaration Modifier protected ReferenceType RegexpMatcher createInstance FormalParameter ReferenceType String className BuildException ReturnStatement Cast ReferenceType RegexpMatcher MethodInvocation ClasspathUtils MemberReference className ClassReference MethodInvocation getClassLoader ReferenceType RegexpMatcherFactory ClassReference ReferenceType RegexpMatcher newInstance	1
MethodDeclaration Modifier public setValue FormalParameter Modifier final ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier protected ReferenceType BuildException noChildrenAllowed ReturnStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "You must not specify elements " Literal using refid"	0
MethodDeclaration Modifier public ReferenceType Hashtable getUserProperties ReturnStatement ClassCreator ReferenceType Hashtable MemberReference userProperties	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createClasspath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public testIgnoreCase StatementExpression MethodInvocation Literal "ignore.case" executeTarget	0
MethodDeclaration Modifier public addFilename FormalParameter ReferenceType FilenameSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/java.xml" configureProject LocalVariableDeclaration ReferenceType String VariableDeclarator propname Literal "tests-classpath.value" LocalVariableDeclaration ReferenceType String VariableDeclarator runFatal MethodInvocation System Literal "junit.run.fatal.tests" getProperty IfStatement BinaryOperation != MemberReference runFatal Literal null StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String varName ReturnStatement TernaryExpression BinaryOperation == MethodInvocation project MemberReference varName getProperty Literal null Literal false Literal true	0
MethodDeclaration Modifier public addChild FormalParameter ReferenceType RuntimeConfigurable child StatementExpression MethodInvocation children MemberReference child addElement	0
MethodDeclaration Modifier public BasicType boolean markSupported ReturnStatement MethodInvocation in markSupported	1
MethodDeclaration Modifier public static appendCDATAElement FormalParameter ReferenceType Element parent FormalParameter ReferenceType String name FormalParameter ReferenceType String content LocalVariableDeclaration ReferenceType Element VariableDeclarator e MethodInvocation MemberReference parent MemberReference name StatementExpression MethodInvocation MemberReference e MemberReference content appendCDATA	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String msg FormalParameter ReferenceType Throwable t FormalParameter BasicType int msgLevel IfStatement BinaryOperation != MethodInvocation getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation This MemberReference msg MemberReference t MemberReference msgLevel log getProject BlockStatement StatementExpression SuperMethodInvocation MemberReference msg MemberReference msgLevel log	0
MethodDeclaration Modifier public testFilterChain IOException StatementExpression MethodInvocation Literal "testFilterChain" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator tmp ClassCreator ReferenceType File MethodInvocation getProjectDir Literal LocalVariableDeclaration ReferenceType File VariableDeclarator check ClassCreator ReferenceType File MethodInvocation getProjectDir Literal "expected/copy.filterset.filtered" StatementExpression MethodInvocation MethodInvocation tmp exists assertTrue StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference tmp MemberReference check contentEquals assertTrue	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "patternSet{ includes: " MemberReference includeList Literal " excludes: " MemberReference excludeList Literal " }"	1
MethodDeclaration Modifier public FormalParameter BasicType boolean backTrace StatementExpression Assignment This MemberReference backTrace MemberReference backTrace =	0
MethodDeclaration Modifier protected assertMapped FormalParameter ReferenceType JspMangler FormalParameter ReferenceType String filename FormalParameter ReferenceType String classname LocalVariableDeclaration ReferenceType String VariableDeclarator mappedname MethodInvocation ClassCreator ReferenceType File MemberReference filename mapJspToJavaName StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference filename Literal " should have mapped to " MemberReference classname Literal " but instead mapped to " MemberReference mappedname MethodInvocation classname MemberReference mappedname equals assertTrue	0
MethodDeclaration Modifier private static doReportTasksAvailability FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is ClassReference MethodInvocation MemberReference MagicNames TASKDEF_PROPERTIES_RESOURCE getResourceAsStream ReferenceType Main IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression MethodInvocation out Literal "None available" println BlockStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties TryStatement StatementExpression MethodInvocation props MemberReference is load ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator keys MethodInvocation props keys MethodInvocation keys hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation keys nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation props MemberReference key getProperty TryStatement StatementExpression MethodInvocation Class MemberReference classname forName StatementExpression MethodInvocation props MemberReference key remove CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference key Literal " : Not Available " Literal "(the implementation class is not present)" println CatchClause CatchClauseParameter NoClassDefFoundError e LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation e MethodInvocation Literal '/' Literal '.' replace getMessage StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference key Literal " : Missing dependency " MemberReference pkg println CatchClause CatchClauseParameter LinkageError e StatementExpression MethodInvocation out BinaryOperation + MemberReference key Literal " : Initialization error" println IfStatement BinaryOperation == MethodInvocation props size Literal 0 BlockStatement StatementExpression MethodInvocation out Literal "All defined tasks are available" println BlockStatement StatementExpression MethodInvocation out BinaryOperation + Literal "A task being missing/unavailable should only " Literal "matter if you are trying to use it" println CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation out MethodInvocation e getMessage println	1
MethodDeclaration ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName ReturnStatement ClassCreator ReferenceType File MethodInvocation getDestDir BinaryOperation + MemberReference baseName MemberReference jarSuffix	1
MethodDeclaration Modifier public FormalParameter ReferenceType String params StatementExpression Assignment MemberReference definitions MemberReference params =	0
MethodDeclaration Modifier public merge FormalParameter ReferenceType Manifest other ManifestException StatementExpression MethodInvocation MemberReference other Literal false merge	0
MethodDeclaration Modifier public BasicType long getLastModified ReturnStatement MethodInvocation MethodInvocation getLastModified getResource	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected ReferenceType String getSSCommand IfStatement BinaryOperation == MemberReference ssDir Literal null BlockStatement ReturnStatement MemberReference SS_EXE ReturnStatement TernaryExpression MethodInvocation ssDir MemberReference File separator endsWith BinaryOperation + MemberReference ssDir MemberReference SS_EXE BinaryOperation + BinaryOperation + MemberReference ssDir MemberReference File separator MemberReference SS_EXE	0
MethodDeclaration Modifier public FormalParameter ReferenceType String target IfStatement MemberReference ! isConfigured StatementExpression MethodInvocation setUp StatementExpression MethodInvocation MemberReference target executeTarget	1
MethodDeclaration Modifier public ReferenceType String evalName FormalParameter ReferenceType Project p ReturnStatement TernaryExpression MethodInvocation MemberReference p valid MemberReference name Literal null	0
MethodDeclaration Modifier protected jdkSaveProperties FormalParameter ReferenceType Properties props FormalParameter ReferenceType OutputStream os FormalParameter ReferenceType String header IOException TryStatement StatementExpression MethodInvocation props MemberReference os MemberReference header store CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation IfStatement BinaryOperation != MemberReference os Literal null BlockStatement TryStatement StatementExpression MethodInvocation os close CatchClause CatchClauseParameter IOException ioex StatementExpression MethodInvocation Literal "Failed to close output stream" log	0
MethodDeclaration Modifier public BasicType int getStatus ReturnStatement MemberReference status	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator f ClassCreator ReferenceType java ReferenceType io ReferenceType File MethodInvocation getProjectDir Literal IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation f delete BlockStatement StatementExpression MethodInvocation Literal failed" fail	0
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType String serverPath StatementExpression Assignment This MemberReference serverPath MemberReference serverPath =	0
MethodDeclaration Modifier public static addClasspathEntry FormalParameter ReferenceType path FormalParameter ReferenceType String resource LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference resource getResourceEntry IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation path MethodInvocation MemberReference f setLocation createPathElement	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement MemberReference expected	0
MethodDeclaration Modifier private ReferenceType String list FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator files Cast ReferenceType String MethodInvocation fileListMap MemberReference file get IfStatement BinaryOperation == MemberReference files Literal null BlockStatement StatementExpression Assignment MemberReference files MethodInvocation file list = IfStatement BinaryOperation != MemberReference files Literal null BlockStatement StatementExpression MethodInvocation fileListMap MemberReference file MemberReference files put ReturnStatement MemberReference files	0
MethodDeclaration Modifier public testImportError TryStatement StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/import/import_bad_import.xml" configureProject CatchClause CatchClauseParameter BuildException ex LocalVariableDeclaration ReferenceType Location VariableDeclarator lo MethodInvocation ex getLocation StatementExpression MethodInvocation Literal "expected location of build exception to be set" BinaryOperation != MemberReference lo Literal null assertTrue StatementExpression MethodInvocation Literal "expected location to contain calling file" BinaryOperation != MethodInvocation lo MethodInvocation Literal "import_bad_import.xml" indexOf getFileName Literal - 1 assertTrue StatementExpression MethodInvocation Literal "expected message of ex to contain called file" BinaryOperation != MethodInvocation ex MethodInvocation Literal "bad.xml" indexOf getMessage Literal - 1 assertTrue ReturnStatement StatementExpression MethodInvocation Literal "Did not see build exception" Literal false assertTrue	1
MethodDeclaration Modifier public ReferenceType PatternSet ReferenceType NameEntry createExcludesFile ReturnStatement MethodInvocation fileset createExcludesFile	0
MethodDeclaration Modifier public execute BuildException IfStatement MethodInvocation ! destinationDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "destination directory " MethodInvocation destinationDirectory getPath Literal " is not valid" IfStatement MethodInvocation ! sourceDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "src directory " MethodInvocation sourceDirectory getPath Literal " is not valid" IfStatement BinaryOperation == MemberReference destinationPackage Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "package attribute must be present." MethodInvocation getLocation StatementExpression Assignment MemberReference pathToPackage This MemberReference destinationPackage MethodInvocation Literal '.' MemberReference File separatorChar replace = LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds SuperMethodInvocation MemberReference sourceDirectory getDirectoryScanner IfStatement BinaryOperation == MemberReference compileClasspath Literal null BlockStatement StatementExpression Assignment MemberReference compileClasspath ClassCreator ReferenceType MethodInvocation getProject = StatementExpression Assignment MemberReference compileClasspath MethodInvocation compileClasspath concatSystemClasspath = LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType Java VariableDeclarator helperTask ClassCreator ReferenceType Java This StatementExpression MethodInvocation helperTask Literal true setFork StatementExpression MethodInvocation helperTask Literal "weblogic.jspc" setClassname StatementExpression MethodInvocation helperTask MethodInvocation getTaskName setTaskName LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayCreator ReferenceType String Literal 12 LocalVariableDeclaration ReferenceType File VariableDeclarator jspFile Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator parents Literal "" LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args Literal "-d" = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args MethodInvocation destinationDirectory MethodInvocation trim getAbsolutePath = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args Literal "-docroot" = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args MethodInvocation sourceDirectory MethodInvocation trim getAbsolutePath = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args Literal "-keepgenerated" = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args Literal "-compilerclass" = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args Literal "sun.tools.javac.Main" = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args Literal "-classpath" = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ j args MethodInvocation compileClasspath toString = StatementExpression This MethodInvocation MemberReference files scanDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Compiling " MethodInvocation filesToDo size Literal " JSP files" log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesToDo size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename Cast ReferenceType String MethodInvocation filesToDo MemberReference i elementAt StatementExpression Assignment MemberReference jspFile ClassCreator ReferenceType File MemberReference filename = StatementExpression Assignment MemberReference ArraySelector MemberReference j args Literal "-package" = StatementExpression Assignment MemberReference parents MethodInvocation jspFile getParent = IfStatement BinaryOperation && BinaryOperation != MemberReference parents Literal null Literal "" BlockStatement StatementExpression Assignment MemberReference parents This MethodInvocation MemberReference parents MemberReference File separator Literal "_." replaceString = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference j Literal 1 args BinaryOperation + BinaryOperation + BinaryOperation + MemberReference destinationPackage Literal "." Literal "_" MemberReference parents = BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference j Literal 1 args MemberReference destinationPackage = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference j Literal 2 args BinaryOperation + BinaryOperation + MemberReference sourceDirectory MemberReference File separator MemberReference filename = StatementExpression MethodInvocation helperTask clearArgs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator x Literal 0 BinaryOperation < MemberReference x BinaryOperation + MemberReference j Literal 3 MemberReference ++ x BlockStatement StatementExpression MethodInvocation helperTask MethodInvocation MemberReference ArraySelector MemberReference x args setValue createArg StatementExpression MethodInvocation helperTask MemberReference compileClasspath setClasspath IfStatement BinaryOperation != MethodInvocation helperTask executeJava Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference filename Literal " failed to compile" MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public ReferenceType Object next ReturnStatement MethodInvocation	1
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal getFileString StatementExpression MethodInvocation MemberReference contents Literal "This is the moon" assertStringContains	0
MethodDeclaration Modifier public removeExtraField FormalParameter ReferenceType ZipShort type IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = LocalVariableDeclaration BasicType boolean VariableDeclarator done Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator fieldsSize MethodInvocation size BinaryOperation && MemberReference ! done BinaryOperation < MemberReference i MemberReference fieldsSize MemberReference ++ i BlockStatement IfStatement Cast ReferenceType ZipExtraField MethodInvocation MemberReference i elementAt BlockStatement StatementExpression MethodInvocation MemberReference i removeElementAt StatementExpression Assignment MemberReference done Literal true = IfStatement MemberReference ! done BlockStatement ThrowStatement ClassCreator ReferenceType java ReferenceType util ReferenceType NoSuchElementException StatementExpression MethodInvocation setExtra	0
MethodDeclaration Modifier public ReferenceType String getUrl ReturnStatement MemberReference url	0
MethodDeclaration Modifier public setIdentical FormalParameter BasicType boolean identical StatementExpression Assignment MemberReference mIdentical MemberReference identical =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Set set FormalParameter ReferenceType String patterns LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al ClassCreator ReferenceType ArrayList MemberReference patterns length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference patterns length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! SelectorUtils MemberReference ArraySelector MemberReference i patterns hasWildcards BlockStatement StatementExpression MethodInvocation set TernaryExpression MethodInvocation isCaseSensitive MemberReference ArraySelector MemberReference i patterns MemberReference ArraySelector MemberReference i MethodInvocation toUpperCase patterns add BlockStatement StatementExpression MethodInvocation al MemberReference ArraySelector MemberReference i patterns add ReturnStatement TernaryExpression BinaryOperation == MethodInvocation set size Literal 0 MemberReference patterns Cast ReferenceType String MethodInvocation al ArrayCreator ReferenceType String MethodInvocation al size toArray	1
MethodDeclaration Modifier public testIfAndUnless StatementExpression MethodInvocation Literal "testIfAndUnless" executeTarget StatementExpression MethodInvocation project Literal "if" Literal "" setProperty StatementExpression MethodInvocation Literal "testIfAndUnless" Literal fail on Literal "if=if and expectBuildExceptionContaining StatementExpression MethodInvocation project Literal "unless" Literal "" setProperty StatementExpression MethodInvocation Literal "testIfAndUnless" executeTarget	0
MethodDeclaration Modifier public setMetadata FormalParameter BasicType boolean metadata StatementExpression Assignment This MemberReference metadata MemberReference metadata =	0
MethodDeclaration Modifier public setUsername FormalParameter ReferenceType String u StatementExpression Assignment This MemberReference uname MemberReference u =	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier public testBasic StatementExpression MethodInvocation Literal "basic" Literal "basic" expectPropertySet	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append StatementExpression MethodInvocation Literal false setChecked	0
MethodDeclaration Modifier public testRedirector13 StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "test.can.run" getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator antfile MethodInvocation MethodInvocation Literal "ant.file" getProperty getProject TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference antfile Literal " OUTPUT???" MemberReference antfile Literal " ERROR!!!" MethodInvocation getLog assertEquals CatchClause CatchClauseParameter ComparisonFailure cf StatementExpression MethodInvocation Literal "unexpected log content" BinaryOperation + BinaryOperation + BinaryOperation + MemberReference antfile Literal " ERROR!!!" MemberReference antfile Literal " OUTPUT???" MethodInvocation getLog assertEquals	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getType params equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MemberReference ArraySelector MemberReference i MethodInvocation getValue params LocalVariableDeclaration ReferenceType RegularExpression VariableDeclarator regexp ClassCreator ReferenceType RegularExpression StatementExpression MethodInvocation regexp MemberReference pattern setPattern StatementExpression MethodInvocation regexps MemberReference regexp addElement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getType params equals BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue params toBoolean setNegate	0
MethodDeclaration Modifier public ReferenceType String getInterfaceMethodName ReturnStatement MemberReference	0
MethodDeclaration Modifier public testCheckinExceptions StatementExpression MethodInvocation Literal "src/etc/testcases/taskdefs/optional/vss/vss.xml" configureProject StatementExpression MethodInvocation Literal Literal "some cause" Literal attribute must be set!" expectSpecificBuildException	0
MethodDeclaration Modifier public synchronized setFile FormalParameter ReferenceType File f TryStatement StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference f getFileURL setURL CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier private preConfigure FormalParameter ReferenceType test StatementExpression MethodInvocation test MemberReference setFiltertrace StatementExpression MethodInvocation test MemberReference haltOnError setHaltonerror IfStatement BinaryOperation != MemberReference errorProperty Literal null BlockStatement StatementExpression MethodInvocation test MemberReference errorProperty setErrorProperty StatementExpression MethodInvocation test MemberReference haltOnFail setHaltonfailure IfStatement BinaryOperation != MemberReference failureProperty Literal null BlockStatement StatementExpression MethodInvocation test MemberReference failureProperty setFailureProperty StatementExpression MethodInvocation test MemberReference fork setFork	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType Manifest VariableDeclarator manifest ClassCreator ReferenceType Manifest LocalVariableDeclaration Modifier final ReferenceType Attributes VariableDeclarator attributes MethodInvocation manifest getMainAttributes StatementExpression MethodInvocation attributes MemberReference Attributes.Name MANIFEST_VERSION MemberReference MANIFEST_VERSION put LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator createdBy BinaryOperation + Literal "Apache Ant " MethodInvocation MethodInvocation MemberReference MagicNames getProperty getProject StatementExpression MethodInvocation attributes MemberReference CREATED_BY MemberReference createdBy putValue StatementExpression MethodInvocation MemberReference attributes appendExtraAttributes IfStatement BinaryOperation != Literal null MemberReference extension BlockStatement StatementExpression MethodInvocation Extension MemberReference extension MemberReference attributes addExtension LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator depends MethodInvocation MemberReference dependencies toExtensions StatementExpression MethodInvocation MemberReference attributes MemberReference Extension EXTENSION_LIST Literal "lib" MethodInvocation depends size appendExtensionList StatementExpression MethodInvocation MemberReference attributes Literal "lib" MemberReference depends appendLibraryList LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator option MethodInvocation MemberReference optionals toExtensions StatementExpression MethodInvocation MemberReference attributes MemberReference Extension OPTIONAL_EXTENSION_LIST Literal "opt" MethodInvocation option size appendExtensionList StatementExpression MethodInvocation MemberReference attributes Literal "opt" MemberReference option appendLibraryList TryStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Generating manifest " MethodInvocation destFile getAbsoluteFile StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_INFO log StatementExpression MethodInvocation MemberReference manifest writeManifest CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe getMessage MemberReference ioe	1
MethodDeclaration Modifier private ReferenceType File createCommandFile FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env IOException LocalVariableDeclaration ReferenceType File VariableDeclarator script MethodInvocation FILE_UTILS Literal "ANT" Literal ".COM" Literal null createTempFile StatementExpression MethodInvocation script deleteOnExit LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference script = IfStatement BinaryOperation != MemberReference env Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator eqIndex ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference env length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference eqIndex MemberReference ArraySelector MemberReference i MethodInvocation Literal '=' indexOf env = IfStatement BinaryOperation != MemberReference eqIndex Literal - 1 BlockStatement StatementExpression MethodInvocation out Literal "$ DEFINE/NOLOG " print StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i MethodInvocation Literal 0 MemberReference eqIndex substring env print StatementExpression MethodInvocation out Literal " \"" print StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + MemberReference eqIndex Literal 1 substring env print StatementExpression MethodInvocation out Literal '\"' println StatementExpression MethodInvocation out BinaryOperation + Literal "$ " MemberReference ArraySelector Literal 0 cmd print ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference cmd length MemberReference ++ i BlockStatement StatementExpression MethodInvocation out Literal " -" println StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i cmd print IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close ReturnStatement MemberReference script	1
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile TernaryExpression MemberReference filtering MemberReference globalFilters Literal null MemberReference overwrite copyFile	1
MethodDeclaration Modifier public FormalParameter ReferenceType String separator StatementExpression Assignment This MemberReference separator MemberReference separator =	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation MethodInvocation Literal "Using jasper compiler" MemberReference Project MSG_VERBOSE log getJspc LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator cmd MethodInvocation setupJasperCommand TryStatement LocalVariableDeclaration ReferenceType Java VariableDeclarator java ClassCreator ReferenceType Java MemberReference owner LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation getClasspath IfStatement BinaryOperation != MethodInvocation MethodInvocation getClasspath getJspc Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "using user supplied classpath: " MemberReference p MemberReference Project MSG_DEBUG log getProject BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "using system classpath: " MemberReference p MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation java MemberReference p setClasspath StatementExpression MethodInvocation java MethodInvocation MethodInvocation getBaseDir getProject setDir StatementExpression MethodInvocation java Literal "org.apache.jasper.JspC" setClassname LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation cmd MethodInvocation getArguments getJavaCommand ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation java MethodInvocation MemberReference ArraySelector MemberReference i args setValue createArg StatementExpression MethodInvocation java MethodInvocation MethodInvocation getFailonerror getJspc StatementExpression MethodInvocation java Literal true setFork StatementExpression MethodInvocation java Literal "jasperc" setTaskName StatementExpression MethodInvocation java execute ReturnStatement Literal true CatchClause CatchClauseParameter Exception ex IfStatement BinaryOperation instanceof MemberReference ex ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference ex BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Error running jsp compiler: " MemberReference ex MethodInvocation MethodInvocation getLocation getJspc StatementExpression MethodInvocation MethodInvocation deleteEmptyJavaFiles getJspc	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "two mappers" MemberReference SignJar ERROR_MAPPER_WITHOUT_DEST expectBuildExceptionContaining	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal Literal "end of has" expectFileContains	0
MethodDeclaration Modifier public static ReferenceType DocumentBuilder getDocumentBuilder BuildException TryStatement ReturnStatement MethodInvocation MethodInvocation newDocumentBuilder CatchClause CatchClauseParameter ParserConfigurationException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public testCaseInsensitive StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "works outside of container" BinaryOperation > MethodInvocation MethodInvocation Literal " indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation Literal "works inside of container" BinaryOperation > MethodInvocation MethodInvocation Literal "world" indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public synchronized setBasedir FormalParameter ReferenceType File basedir StatementExpression Assignment This MemberReference basedir MemberReference basedir =	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String l StatementExpression Assignment MemberReference lineStart MemberReference l =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier static protected setA FormalParameter ReferenceType A oa StatementExpression Assignment MemberReference a MemberReference oa =	0
MethodDeclaration Modifier public setJavaCommand FormalParameter ReferenceType Commandline javaCommand StatementExpression Assignment This MemberReference javaCommand MemberReference javaCommand =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal 3	0
MethodDeclaration Modifier static protected BasicType boolean match FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive LocalVariableDeclaration BasicType char VariableDeclarator patArr MethodInvocation pattern toCharArray LocalVariableDeclaration BasicType char VariableDeclarator strArr MethodInvocation str toCharArray LocalVariableDeclaration BasicType int VariableDeclarator patIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator patIdxEnd BinaryOperation - MemberReference patArr length Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator strIdxEnd BinaryOperation - MemberReference strArr length Literal 1 LocalVariableDeclaration BasicType char VariableDeclarator ch LocalVariableDeclaration BasicType boolean VariableDeclarator containsStar Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference patArr length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement StatementExpression Assignment MemberReference containsStar Literal true = BreakStatement IfStatement MemberReference ! containsStar BlockStatement IfStatement BinaryOperation != MemberReference patIdxEnd MemberReference strIdxEnd BlockStatement ReturnStatement Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ch MemberReference ArraySelector MemberReference i patArr = IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector MemberReference i strArr BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector MemberReference i strArr toUpperCase BlockStatement ReturnStatement Literal false ReturnStatement Literal true IfStatement BinaryOperation == MemberReference patIdxEnd Literal 0 BlockStatement ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != Assignment MemberReference ch MemberReference ArraySelector MemberReference patIdxStart patArr = Literal '*' BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector MemberReference strIdxStart strArr BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector MemberReference strIdxStart strArr toUpperCase BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ patIdxStart StatementExpression MemberReference ++ strIdxStart IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement ReturnStatement Literal false ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != Assignment MemberReference ch MemberReference ArraySelector MemberReference patIdxEnd patArr = Literal '*' BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector MemberReference strIdxEnd strArr BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector MemberReference strIdxEnd strArr toUpperCase BlockStatement ReturnStatement Literal false StatementExpression MemberReference -- patIdxEnd StatementExpression MemberReference -- strIdxEnd IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement ReturnStatement Literal false ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator patIdxTmp Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference patIdxStart Literal 1 BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement StatementExpression Assignment MemberReference patIdxTmp MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference patIdxTmp BinaryOperation + MemberReference patIdxStart Literal 1 BlockStatement StatementExpression MemberReference ++ patIdxStart ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator patLength BinaryOperation - BinaryOperation - MemberReference patIdxTmp MemberReference patIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strLength BinaryOperation + BinaryOperation - MemberReference strIdxEnd MemberReference strIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator foundIdx Literal - 1 ForStatement strLoop ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i BinaryOperation - MemberReference strLength MemberReference patLength MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference patLength MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference ch MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference patIdxStart MemberReference j Literal 1 patArr = IfStatement BinaryOperation != MemberReference ch Literal '?' BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive BinaryOperation != MemberReference ch MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference strIdxStart MemberReference i MemberReference j strArr BlockStatement ContinueStatement strLoop IfStatement BinaryOperation && MemberReference ! isCaseSensitive BinaryOperation != MethodInvocation Character MemberReference ch toUpperCase MethodInvocation Character MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference strIdxStart MemberReference i MemberReference j strArr toUpperCase BlockStatement ContinueStatement strLoop StatementExpression Assignment MemberReference foundIdx BinaryOperation + MemberReference strIdxStart MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference foundIdx Literal - 1 BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference patIdxStart MemberReference patIdxTmp = StatementExpression Assignment MemberReference strIdxStart BinaryOperation + MemberReference foundIdx MemberReference patLength = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i patArr Literal '*' BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier private IfStatement BinaryOperation && BinaryOperation != MemberReference addShutdownHookMethod Literal null MemberReference ! running BlockStatement StatementExpression Assignment MemberReference destroyProcessThread ClassCreator ReferenceType = LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference destroyProcessThread TryStatement StatementExpression MethodInvocation addShutdownHookMethod MethodInvocation Runtime getRuntime MemberReference args invoke StatementExpression Assignment MemberReference added Literal true = CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getTargetException IfStatement BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation == MethodInvocation t getClass ClassReference ReferenceType IllegalStateException BlockStatement StatementExpression Assignment MemberReference running Literal true = BlockStatement StatementExpression MethodInvocation e printStackTrace	0
MethodDeclaration Modifier public ReferenceType Properties getProperties FormalParameter ReferenceType File propertyFile BuildException LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference propertyFile = StatementExpression MethodInvocation props MemberReference in load CatchClause CatchClauseParameter FileNotFoundException e LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Property file (" MethodInvocation propertyFile getPath Literal ") not found." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Property file (" MethodInvocation propertyFile getPath Literal ") cannot be loaded." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression MethodInvocation FileUtils MemberReference in close ReturnStatement MemberReference props	1
MethodDeclaration Modifier public setSrc FormalParameter ReferenceType File dirName StatementExpression Assignment MemberReference sourceDirectory MemberReference dirName =	0
MethodDeclaration Modifier public ReferenceType String getFieldClassName ReturnStatement MemberReference	0
MethodDeclaration Modifier public setRemoveSpec FormalParameter BasicType boolean rs StatementExpression Assignment MemberReference removeSpec MemberReference rs =	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation > MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "You must not nest more than one " Literal "condition into <not>" IfStatement BinaryOperation < MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "You must nest a condition into <not>" ReturnStatement Cast ReferenceType Condition MethodInvocation MethodInvocation nextElement getConditions	1
MethodDeclaration Modifier public addDepend FormalParameter ReferenceType selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addDepend	1
MethodDeclaration Modifier public BasicType int getGid IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarFileSet MethodInvocation getCheckedRef ReturnStatement MemberReference gid	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" Literal "dest invalid (or no http-server on local machine)" expectBuildException	0
MethodDeclaration Modifier public setSrcdir FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean eval BuildException StatementExpression Assignment MemberReference isCondition Literal true = ReturnStatement MethodInvocation validateAndExecute	1
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String s BuildException IfStatement BinaryOperation != MethodInvocation MethodInvocation getJar getCommandLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Cannot use 'jar' and 'classname' " Literal in same command" StatementExpression MethodInvocation MethodInvocation MemberReference s setClassname getCommandLine	1
MethodDeclaration Modifier protected addFiles FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType ProjectComponent log FormalParameter ReferenceType File src FormalParameter ReferenceType File dest BuildException StatementExpression MethodInvocation cmd MethodInvocation MemberReference src setFile createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference dest setFile createArgument	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference mComment MemberReference =	0
MethodDeclaration Modifier protected ReferenceType Object getCheckedRef FormalParameter Modifier final ReferenceType Class requiredClass FormalParameter Modifier final ReferenceType String dataTypeName FormalParameter Modifier final ReferenceType Project project IfStatement BinaryOperation == MemberReference project Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Project specified" StatementExpression MethodInvocation MemberReference project dieOnCircularReference LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation ref MemberReference project getReferencedObject IfStatement MethodInvocation ! requiredClass MethodInvocation o getClass isAssignableFrom BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MethodInvocation o getClass Literal " is not a subclass of " MemberReference requiredClass MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + MethodInvocation ref getRefId Literal " doesn\'t a " MemberReference dataTypeName ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg ReturnStatement MemberReference o	0
MethodDeclaration Modifier private static ReferenceType String getProperty FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType String VariableDeclarator value TryStatement StatementExpression Assignment MemberReference value MethodInvocation System MemberReference key getProperty = CatchClause CatchClauseParameter SecurityException e StatementExpression Assignment MemberReference value MemberReference = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public addCmpDescriptor FormalParameter ReferenceType String descriptor StatementExpression MethodInvocation cmpDescriptors MemberReference descriptor add	0
MethodDeclaration Modifier protected ReferenceType Channel openExecChannel FormalParameter ReferenceType String command JSchException LocalVariableDeclaration ReferenceType ChannelExec VariableDeclarator channel Cast ReferenceType ChannelExec MethodInvocation session Literal "exec" openChannel StatementExpression MethodInvocation channel MemberReference command setCommand ReturnStatement MemberReference channel	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator args TernaryExpression MemberReference finalIncludeProject ArrayCreator ReferenceType Object ArrayInitializer MemberReference p MemberReference value ArrayCreator ReferenceType Object ArrayInitializer MemberReference value LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation finalConstructor MemberReference args newInstance IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation p MemberReference attribute setProjectReference StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference attribute invoke CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie	1
MethodDeclaration Modifier private ReferenceType SAXParser getParser BuildException LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser Literal null TryStatement LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator saxParserFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation saxParserFactory Literal true setValidating StatementExpression Assignment MemberReference saxParser MethodInvocation saxParserFactory newSAXParser = CatchClause CatchClauseParameter SAXException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Unable to create a SAXParser: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter ParserConfigurationException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Unable to create a SAXParser: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e MethodInvocation getLocation ReturnStatement MemberReference saxParser	1
MethodDeclaration Modifier public addFilterChain FormalParameter ReferenceType FilterChain filterChain IfStatement BinaryOperation == MemberReference filterChains Literal null BlockStatement StatementExpression Assignment MemberReference filterChains ClassCreator ReferenceType Vector = StatementExpression MethodInvocation filterChains MemberReference filterChain addElement	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator publicId Literal "-//stevo//DTD doc LocalVariableDeclaration ReferenceType String VariableDeclarator dtdLoc Literal "src/etc/testcases/taskdefs/optional/xml/doc.dtd" LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd MemberReference publicId setPublicId StatementExpression MethodInvocation dtd MemberReference dtdLoc setLocation StatementExpression MethodInvocation catalog MemberReference dtd LocalVariableDeclaration ReferenceType File VariableDeclarator dtdFile MethodInvocation project MemberReference dtdLoc resolveFile LocalVariableDeclaration ReferenceType String VariableDeclarator uri Literal "http://foo.com/bar/blah.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator uriLoc Literal "src/etc/testcases/taskdefs/optional/xml/about.xml" LocalVariableDeclaration ReferenceType VariableDeclarator entity ClassCreator ReferenceType StatementExpression MethodInvocation entity MemberReference uri setPublicId StatementExpression MethodInvocation entity MemberReference uriLoc setLocation StatementExpression MethodInvocation catalog MemberReference entity addEntity LocalVariableDeclaration ReferenceType File VariableDeclarator xmlFile MethodInvocation project MemberReference uriLoc resolveFile LocalVariableDeclaration ReferenceType VariableDeclarator catalog1 MethodInvocation StatementExpression MethodInvocation catalog1 MemberReference catalog addConfiguredXMLCatalog TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog1 MemberReference publicId Literal "nap:chemical+brothers" resolveEntity StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference dtdFile toURLString MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail TryStatement LocalVariableDeclaration ReferenceType Source VariableDeclarator result MethodInvocation catalog MemberReference uri Literal null resolve StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference xmlFile toURLString MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "resolve() MethodInvocation e toString fail	0
MethodDeclaration Modifier public static close FormalParameter ReferenceType InputStream device IfStatement BinaryOperation != MemberReference device Literal null BlockStatement TryStatement StatementExpression MethodInvocation device close CatchClause CatchClauseParameter IOException ioex	1
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String encoding IOException StatementExpression MethodInvocation MemberReference sourceFile MemberReference destFile MemberReference filters Literal null MemberReference overwrite MemberReference preserveLastModified MemberReference encoding Literal null copyFile	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i params Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator type MemberReference ArraySelector MemberReference i MethodInvocation getType params IfStatement Literal MethodInvocation MemberReference type equals "tokenchar" BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MemberReference ArraySelector MemberReference i MethodInvocation getName params LocalVariableDeclaration ReferenceType String VariableDeclarator value MemberReference ArraySelector MemberReference i MethodInvocation getValue params IfStatement Literal MethodInvocation MemberReference name equals "begintoken" BlockStatement IfStatement BinaryOperation == MethodInvocation value length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Begin token cannot " Literal "be empty" StatementExpression Assignment MemberReference beginToken MemberReference ArraySelector MemberReference i MethodInvocation getValue MethodInvocation Literal 0 charAt params = IfStatement Literal MethodInvocation MemberReference name equals "endtoken" BlockStatement IfStatement BinaryOperation == MethodInvocation value length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "End token cannot " Literal "be empty" StatementExpression Assignment MemberReference endToken MemberReference ArraySelector MemberReference i MethodInvocation getValue MethodInvocation Literal 0 charAt params = IfStatement Literal MethodInvocation MemberReference type equals "token" BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MemberReference ArraySelector MemberReference i MethodInvocation getName params LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator value MemberReference ArraySelector MemberReference i MethodInvocation getValue params StatementExpression MethodInvocation hash MemberReference name MemberReference value put IfStatement Literal MethodInvocation MemberReference type equals "propertiesfile" BlockStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue params getPropertiesFromFile ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation props MemberReference key getProperty StatementExpression MethodInvocation hash MemberReference key MemberReference value put	1
MethodDeclaration Modifier public BasicType boolean hasFilters ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filterSets elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType FilterSet VariableDeclarator filterSet Cast ReferenceType FilterSet MethodInvocation e nextElement IfStatement MethodInvocation filterSet hasFilters BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType Collection getCollection LocalVariableDeclaration ReferenceType List VariableDeclarator rc MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation rc size IfStatement BinaryOperation < MemberReference size Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The difference of " MemberReference size Literal " resource collection" TernaryExpression BinaryOperation == MemberReference size Literal 1 Literal "" Literal "s" Literal " is LocalVariableDeclaration ReferenceType HashSet VariableDeclarator hs ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator rcIter MethodInvocation rc iterator MethodInvocation rcIter hasNext BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator r MethodInvocation MethodInvocation iterator MemberReference rcIter MethodInvocation r hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation r next IfStatement MethodInvocation hs MemberReference next add BlockStatement StatementExpression MethodInvocation al MemberReference next add BlockStatement StatementExpression MethodInvocation al MemberReference next remove ReturnStatement MemberReference al	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter ReferenceType Reader reader LocalVariableDeclaration ReferenceType TokenFilter VariableDeclarator tokenFilter ClassCreator ReferenceType TokenFilter MemberReference reader IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation tokenFilter ClassCreator ReferenceType FileTokenizer add StatementExpression MethodInvocation tokenFilter This add ReturnStatement MemberReference tokenFilter	1
MethodDeclaration Modifier public ReferenceType String getTaskType ReturnStatement MemberReference taskType	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter ReferenceType Vector filterChains FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String encoding FormalParameter ReferenceType Project project IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile MemberReference filters MemberReference filterChains MemberReference overwrite MemberReference preserveLastModified MemberReference encoding MemberReference project copyFile	1
MethodDeclaration Modifier public setGid FormalParameter BasicType int gid StatementExpression MethodInvocation checkTarFileSetAttributesAllowed StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference gid MemberReference gid =	0
MethodDeclaration Modifier public expectOutput FormalParameter ReferenceType String target FormalParameter ReferenceType String output StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator realOutput MethodInvocation getOutput StatementExpression MethodInvocation MemberReference output MethodInvocation realOutput trim assertEquals	0
MethodDeclaration * Get the set of Resources that represent * @return an Iterator of * @since Ant */ ReferenceType Iterator IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation getBasedir MethodInvocation getIncludedDirectories StatementExpression MethodInvocation scanme ReturnStatement MethodInvocation matchDirEntries MethodInvocation iterator values	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" Literal "zip cannot include itself" expectBuildException	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected scandir FormalParameter ReferenceType String dir FormalParameter ReferenceType String vpath FormalParameter BasicType boolean fast IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference vpath hasBeenScanned BlockStatement ReturnStatement TryStatement IfStatement MethodInvocation ! ftp MemberReference dir changeWorkingDirectory BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator completePath Literal null IfStatement MethodInvocation ! vpath Literal "" equals BlockStatement StatementExpression Assignment MemberReference completePath BinaryOperation + BinaryOperation + MemberReference rootPath MemberReference remoteFileSep MethodInvocation vpath MemberReference File separatorChar MethodInvocation remoteFileSep Literal 0 charAt replace = BlockStatement StatementExpression Assignment MemberReference completePath MemberReference rootPath = LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator newfiles MethodInvocation MemberReference completePath Literal false listFiles IfStatement BinaryOperation == MemberReference newfiles Literal null BlockStatement StatementExpression MethodInvocation ftp changeToParentDirectory ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference newfiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator file MemberReference ArraySelector MemberReference i newfiles IfStatement BinaryOperation && MethodInvocation ! file MethodInvocation Literal "." equals getName MethodInvocation ! file MethodInvocation Literal ".." equals getName BlockStatement IfStatement MethodInvocation MemberReference ftp MemberReference dir MemberReference file isFunctioningAsDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MemberReference vpath MethodInvocation file getName LocalVariableDeclaration BasicType boolean VariableDeclarator slowScanAllowed Literal true IfStatement BinaryOperation && MethodInvocation ! isFollowSymlinks MethodInvocation file isSymbolicLink BlockStatement StatementExpression MethodInvocation dirsExcluded MemberReference name addElement StatementExpression Assignment MemberReference slowScanAllowed Literal false = IfStatement MethodInvocation MemberReference name isIncluded BlockStatement StatementExpression MethodInvocation MemberReference name ClassCreator ReferenceType AntFTPFile MemberReference ftp MemberReference file MemberReference completePath MemberReference fast accountForIncludedDir BlockStatement StatementExpression MethodInvocation MemberReference name addElement IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference name couldHoldIncluded BlockStatement StatementExpression MethodInvocation MethodInvocation file getName BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir IfStatement BinaryOperation && MemberReference ! fast MemberReference slowScanAllowed BlockStatement StatementExpression MethodInvocation MethodInvocation file getName BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MemberReference vpath MethodInvocation file getName IfStatement BinaryOperation && MethodInvocation ! isFollowSymlinks MethodInvocation file isSymbolicLink BlockStatement StatementExpression MethodInvocation filesExcluded MemberReference name addElement IfStatement MethodInvocation MemberReference ftp MemberReference dir MemberReference file isFunctioningAsFile BlockStatement StatementExpression MethodInvocation MemberReference name accountForIncludedFile StatementExpression MethodInvocation ftp changeToParentDirectory CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error while communicating with FTP " Literal "server: " MemberReference e	1
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference realThing Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not create task of type: " MemberReference elementName MethodInvocation getLocation IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing StatementExpression Assignment MemberReference realThing Literal null =	0
MethodDeclaration Modifier public test4 IOException StatementExpression MethodInvocation Literal "test4" executeTarget	0
MethodDeclaration Modifier protected ReferenceType File createRelativeFile FormalParameter ReferenceType String filename IfStatement MethodInvocation filename Literal "." equals BlockStatement ReturnStatement MethodInvocation getProjectDir ReturnStatement ClassCreator ReferenceType File MethodInvocation getProjectDir MemberReference filename	1
MethodDeclaration Modifier public synchronized readFiltersFromFile FormalParameter ReferenceType File filtersFile BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement MethodInvocation ! filtersFile exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Could not read filters from file " MemberReference filtersFile Literal " as it doesn't exist." handleMissingFile IfStatement MethodInvocation filtersFile isFile BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Reading filters from " MemberReference filtersFile MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in Literal null TryStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference filtersFile = StatementExpression MethodInvocation props MemberReference in load LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props propertyNames LocalVariableDeclaration ReferenceType Vector VariableDeclarator filts MethodInvocation getFilters WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator strPropName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator strValue MethodInvocation props MemberReference strPropName getProperty StatementExpression MethodInvocation filts ClassCreator ReferenceType Filter MemberReference strPropName MemberReference strValue addElement CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not read filters from file: " MemberReference filtersFile StatementExpression MethodInvocation FileUtils MemberReference in close BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal specify a file rather than a directory in " Literal "the filtersfile attribute:" MemberReference filtersFile handleMissingFile StatementExpression Assignment MemberReference filterHash Literal null =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setDebugOutput FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized ReferenceType String toString ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation toString getCheckedRef MethodInvocation String MethodInvocation getURL valueOf	1
MethodDeclaration Modifier public setDate FormalParameter ReferenceType String date StatementExpression SuperMethodInvocation MemberReference date setInternalDate	0
MethodDeclaration Modifier private verifyNotAReference BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType boolean on StatementExpression Assignment This MemberReference verbose MemberReference on =	0
MethodDeclaration sendData IOException LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference StatementExpression MethodInvocation Literal "DATA" MemberReference ok send	0
MethodDeclaration Modifier protected FormalParameter BasicType int result LocalVariableDeclaration ReferenceType String VariableDeclarator res MethodInvocation Integer MemberReference result toString IfStatement BinaryOperation != MemberReference resultProperty Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference resultProperty MemberReference res setNewProperty getProject	0
MethodDeclaration Modifier protected ReferenceType DescriptorHandler getWeblogicDescriptorHandler FormalParameter Modifier final ReferenceType File srcDir LocalVariableDeclaration ReferenceType DescriptorHandler VariableDeclarator handler ClassCreator ReferenceType DescriptorHandler MethodInvocation getTask MemberReference srcDir MethodDeclaration Modifier protected processElement IfStatement MethodInvocation currentElement Literal "type-storage" equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fileNameWithMETA MemberReference currentText LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation fileNameWithMETA MethodInvocation META_DIR length MethodInvocation fileNameWithMETA length substring LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference srcDir MemberReference fileName StatementExpression MethodInvocation ejbFiles MemberReference fileNameWithMETA MemberReference descriptorFile put StatementExpression MethodInvocation handler MemberReference PUBLICID_WEBLOGIC_EJB510 MemberReference registerDTD StatementExpression MethodInvocation handler MemberReference PUBLICID_WEBLOGIC_EJB510 MemberReference DEFAULT_WL60_51_DTD_LOCATION registerDTD StatementExpression MethodInvocation handler MemberReference PUBLICID_WEBLOGIC_EJB600 MemberReference DEFAULT_WL60_DTD_LOCATION registerDTD StatementExpression MethodInvocation handler MemberReference MemberReference registerDTD StatementExpression MethodInvocation handler MemberReference PUBLICID_WEBLOGIC_EJB510 MemberReference weblogicDTD registerDTD StatementExpression MethodInvocation handler MemberReference PUBLICID_WEBLOGIC_EJB600 MemberReference weblogicDTD registerDTD ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MemberReference MethodInvocation iterator getConfig MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType EjbJar ReferenceType VariableDeclarator Cast ReferenceType EjbJar ReferenceType MethodInvocation i next StatementExpression MethodInvocation handler MethodInvocation getPublicId MethodInvocation getLocation registerDTD ReturnStatement MemberReference handler	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType Project project FormalParameter ReferenceType Date date FormalParameter ReferenceType Location location IfStatement BinaryOperation == MemberReference propertyName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "property attribute must be provided" MemberReference location IfStatement BinaryOperation == MemberReference pattern Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "pattern attribute must be provided" MemberReference location LocalVariableDeclaration ReferenceType SimpleDateFormat VariableDeclarator sdf IfStatement BinaryOperation == MemberReference language Literal null BlockStatement StatementExpression Assignment MemberReference sdf ClassCreator ReferenceType SimpleDateFormat MemberReference pattern = IfStatement BinaryOperation == MemberReference variant Literal null BlockStatement StatementExpression Assignment MemberReference sdf ClassCreator ReferenceType SimpleDateFormat MemberReference pattern ClassCreator ReferenceType Locale MemberReference language MemberReference country = BlockStatement StatementExpression Assignment MemberReference sdf ClassCreator ReferenceType SimpleDateFormat MemberReference pattern ClassCreator ReferenceType Locale MemberReference language MemberReference country MemberReference variant = IfStatement BinaryOperation != MemberReference offset Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Calendar VariableDeclarator calendar MethodInvocation Calendar getInstance StatementExpression MethodInvocation calendar MemberReference date setTime StatementExpression MethodInvocation calendar MemberReference field MemberReference offset add StatementExpression Assignment MemberReference date MethodInvocation calendar getTime = IfStatement BinaryOperation != MemberReference timeZone Literal null BlockStatement StatementExpression MethodInvocation sdf MemberReference timeZone StatementExpression This Tstamp MethodInvocation MemberReference propertyName MethodInvocation sdf MemberReference date format setProperty	0
MethodDeclaration Modifier private BasicType int deleteAffectedFiles FormalParameter ReferenceType String className LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator affectedClasses Cast ReferenceType Hashtable MethodInvocation affectedClassMap MemberReference className get IfStatement BinaryOperation == MemberReference affectedClasses Literal null BlockStatement ReturnStatement MemberReference count ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation affectedClasses keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator affectedClass Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator affectedClassInfo Cast ReferenceType ClassFileInfo MethodInvocation affectedClasses MemberReference affectedClass get IfStatement MethodInvocation ! affectedClassInfo.absoluteFile exists BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference affectedClassInfo sourceFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference affectedClassInfo MemberReference affectedClass MemberReference className warnOutOfDateButNotDeleted ContinueStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Deleting file " MethodInvocation affectedClassInfo.absoluteFile getPath Literal " since " MemberReference className Literal " out of date" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation affectedClassInfo.absoluteFile delete StatementExpression MemberReference ++ count IfStatement MemberReference closure BlockStatement StatementExpression Assignment MemberReference count MethodInvocation MemberReference affectedClass deleteAffectedFiles += BlockStatement IfStatement BinaryOperation == MethodInvocation affectedClass Literal "$" indexOf Literal - 1 BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator topLevelClassName MethodInvocation affectedClass Literal 0 MethodInvocation affectedClass Literal "$" indexOf substring StatementExpression MethodInvocation BinaryOperation + Literal "Top level class = " MemberReference topLevelClassName MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator topLevelClassInfo Cast ReferenceType ClassFileInfo MethodInvocation classFileInfoMap MemberReference topLevelClassName get IfStatement BinaryOperation && BinaryOperation != MemberReference topLevelClassInfo Literal null MethodInvocation topLevelClassInfo.absoluteFile exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Deleting file " MethodInvocation topLevelClassInfo.absoluteFile getPath Literal " since one of its inner classes was removed" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation topLevelClassInfo.absoluteFile delete StatementExpression MemberReference ++ count IfStatement MemberReference closure BlockStatement StatementExpression Assignment MemberReference count MethodInvocation MemberReference topLevelClassName deleteAffectedFiles += ReturnStatement MemberReference count	1
MethodDeclaration Modifier private ReferenceType Project getContextProject ReturnStatement This MemberReference component MethodInvocation getProject	0
MethodDeclaration Modifier public reset StatementExpression MethodInvocation rootClasses removeAllElements StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference fileDependencies ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector =	0
MethodDeclaration Modifier public ReferenceType String describeArguments ReturnStatement MethodInvocation This describeArguments	0
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation isFilesystemOnly getRef StatementExpression MethodInvocation validate ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator getNested MethodInvocation i hasNext BlockStatement IfStatement Cast ReferenceType ResourceCollection MethodInvocation i next BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public setDavidhost FormalParameter Modifier final ReferenceType String inValue StatementExpression Assignment MemberReference davidHost MemberReference inValue =	0
MethodDeclaration Modifier public addAddFiles FormalParameter ReferenceType String filesToAdd IfStatement BinaryOperation == MemberReference filesToAdd Literal null BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filesToAdd length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i filesToAdd addAddFile	1
MethodDeclaration Modifier public ReferenceType PathElement createPathElement BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType PathElement VariableDeclarator pe ClassCreator ReferenceType PathElement StatementExpression MethodInvocation MemberReference pe add ReturnStatement MemberReference pe	0
MethodDeclaration Modifier private replaceAuthorIdWithName FormalParameter Modifier final ReferenceType Properties userList FormalParameter Modifier final ReferenceType CVSEntry entrySet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference entrySet length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType CVSEntry VariableDeclarator entry MemberReference ArraySelector MemberReference i entrySet IfStatement MethodInvocation userList MethodInvocation entry getAuthor containsKey BlockStatement StatementExpression MethodInvocation entry MethodInvocation userList MethodInvocation entry getAuthor getProperty setAuthor	1
MethodDeclaration Modifier public setHost FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference host MemberReference host =	0
MethodDeclaration Modifier public ReferenceType PlanarImage performRotate FormalParameter ReferenceType PlanarImage image LocalVariableDeclaration BasicType float VariableDeclarator tAngle Cast BasicType float BinaryOperation * MemberReference angle BinaryOperation / MemberReference Math PI MemberReference LocalVariableDeclaration ReferenceType ParameterBlock VariableDeclarator ClassCreator ReferenceType ParameterBlock StatementExpression MethodInvocation MemberReference image StatementExpression MethodInvocation Literal 0.0F add StatementExpression MethodInvocation Literal 0.0F add StatementExpression MethodInvocation MemberReference tAngle add StatementExpression MethodInvocation ClassCreator ReferenceType add ReturnStatement MethodInvocation JAI Literal MemberReference Literal null create	0
MethodDeclaration Modifier public FormalParameter BasicType int kind LocalVariableDeclaration ReferenceType String VariableDeclarator kinds ArrayInitializer Literal "task" Literal "target" Literal LocalVariableDeclaration ReferenceType MockProject VariableDeclarator project ClassCreator ReferenceType MockProject LocalVariableDeclaration ReferenceType File VariableDeclarator base ClassCreator ReferenceType File Literal "base" LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File Literal LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File Literal LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator sel ClassCreator ReferenceType ModifiedSelector StatementExpression MethodInvocation sel MemberReference project setProject StatementExpression MethodInvocation sel Literal true setUpdate StatementExpression MethodInvocation sel Literal true setDelayUpdate StatementExpression MethodInvocation sel This MethodInvocation getClass MethodInvocation getClassLoader StatementExpression MethodInvocation sel MemberReference testclasses addClasspath StatementExpression MethodInvocation sel Literal "org.apache.tools.ant.types.selectors.MockAlgorithm" setAlgorithmClass StatementExpression MethodInvocation sel Literal "org.apache.tools.ant.types.selectors.MockCache" setCacheClass StatementExpression MethodInvocation sel configure LocalVariableDeclaration ReferenceType MockCache VariableDeclarator cache Cast ReferenceType MockCache MethodInvocation sel getCache StatementExpression MethodInvocation Literal "Cache must not be saved before 1st selection." MemberReference cache saved assertFalse StatementExpression MethodInvocation sel MemberReference base Literal MemberReference file1 isSelected StatementExpression MethodInvocation Literal "Cache must not be saved after 1st selection." MemberReference cache saved assertFalse StatementExpression MethodInvocation sel MemberReference base Literal MemberReference file2 isSelected StatementExpression MethodInvocation Literal "Cache must not be saved after 2nd selection." MemberReference cache saved assertFalse SwitchStatement MemberReference kind SwitchStatementCase Literal 1 StatementExpression MethodInvocation project fireTaskFinished BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation project BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation project fireBuildFinished BreakStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Cache must be saved after " MemberReference ArraySelector BinaryOperation - MemberReference kind Literal 1 kinds Literal "Finished-Event." MemberReference cache saved assertTrue	1
MethodDeclaration Modifier public ReferenceType Object clone TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator result Cast ReferenceType SuperMethodInvocation clone StatementExpression Assignment MemberReference result union TernaryExpression BinaryOperation == MemberReference union Literal null MemberReference union Cast ReferenceType MethodInvocation union clone = ReturnStatement MemberReference result CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testTask" Literal "testTask" expectPropertySet	0
MethodDeclaration Modifier protected executeJava BuildException TryStatement IfStatement BinaryOperation == MemberReference version MemberReference BorlandDeploymentTool BES BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "java mode is supported only for " Literal "previous version <=" MemberReference BorlandDeploymentTool BAS StatementExpression MethodInvocation Literal "mode : java" log LocalVariableDeclaration ReferenceType Java VariableDeclarator execTask Literal null StatementExpression Assignment MemberReference execTask ClassCreator ReferenceType Java This = StatementExpression MethodInvocation execTask ClassCreator ReferenceType File Literal "." setDir StatementExpression MethodInvocation execTask Literal "com.inprise.server.commandline.EJBUtilities" setClassname StatementExpression MethodInvocation execTask MethodInvocation classpath concatSystemClasspath setClasspath StatementExpression MethodInvocation execTask Literal true setFork StatementExpression MethodInvocation execTask MethodInvocation Literal "generateclient" setValue createArg IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation execTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation execTask MethodInvocation Literal "-short" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation Literal "-jarfile" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation MethodInvocation ejbjarfile getAbsolutePath setValue createArg StatementExpression MethodInvocation execTask MethodInvocation Literal "-single" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation Literal "-clientjarfile" setValue createArg StatementExpression MethodInvocation execTask MethodInvocation MethodInvocation clientjarfile getAbsolutePath setValue createArg StatementExpression MethodInvocation Literal "Calling EJBUtilities" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation execTask execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while calling Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	1
MethodDeclaration Modifier public setUserName FormalParameter ReferenceType String StatementExpression MethodInvocation checkTarFileSetAttributesAllowed StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType TraceAttr trace StatementExpression Assignment This MemberReference trace MethodInvocation trace getValue =	0
MethodDeclaration Modifier public setType FormalParameter ReferenceType String t StatementExpression Assignment This MemberReference type MemberReference t =	0
MethodDeclaration Modifier public BasicType boolean getFiltertrace ReturnStatement MemberReference	0
MethodDeclaration Modifier public setProcessErrorStream FormalParameter ReferenceType InputStream is IOException StatementExpression Assignment This MemberReference es MemberReference is =	0
MethodDeclaration Modifier public ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MethodInvocation getProject getRef BlockStatement ReturnStatement SuperMethodInvocation clone	1
MethodDeclaration Modifier public ReferenceType String getToken FormalParameter ReferenceType Reader in IOException LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference pushed Literal - 2 BlockStatement StatementExpression Assignment MemberReference ch MemberReference pushed = StatementExpression Assignment MemberReference pushed Literal - 2 = BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement ReturnStatement Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator inToken Literal true StatementExpression Assignment MemberReference intraString Literal "" = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator word ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator padding ClassCreator ReferenceType StringBuffer WhileStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c Cast BasicType char MemberReference ch LocalVariableDeclaration BasicType boolean VariableDeclarator isDelim MethodInvocation MemberReference c isDelim IfStatement MemberReference inToken BlockStatement IfStatement MemberReference isDelim BlockStatement IfStatement MemberReference BlockStatement IfStatement BinaryOperation == MethodInvocation word length Literal 0 BlockStatement StatementExpression MethodInvocation word MemberReference c append BlockStatement StatementExpression Assignment MemberReference pushed MemberReference ch = BreakStatement StatementExpression MethodInvocation padding MemberReference c append StatementExpression Assignment MemberReference inToken Literal false = BlockStatement StatementExpression MethodInvocation word MemberReference c append BlockStatement IfStatement MemberReference isDelim BlockStatement StatementExpression MethodInvocation padding MemberReference c append BlockStatement StatementExpression Assignment MemberReference pushed MemberReference ch = BreakStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = StatementExpression Assignment MemberReference intraString MethodInvocation padding toString = IfStatement MemberReference includeDelims BlockStatement StatementExpression MethodInvocation word MemberReference intraString append ReturnStatement MethodInvocation word toString	1
MethodDeclaration Modifier public setSize FormalParameter BasicType long size StatementExpression Assignment This MemberReference size MemberReference size =	0
MethodDeclaration Modifier private BasicType boolean testIfCondition IfStatement Literal MethodInvocation MemberReference equals "" BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator test MethodInvocation project MemberReference replaceProperties ReturnStatement BinaryOperation != MethodInvocation project MemberReference test getProperty Literal null	0
MethodDeclaration Modifier protected ReferenceType Collection getCollection LocalVariableDeclaration BasicType int VariableDeclarator ct MethodInvocation getCount IfStatement BinaryOperation < MemberReference ct Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation MethodInvocation iterator getResourceCollection LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator al ClassCreator ReferenceType ArrayList MemberReference ct ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MemberReference ct MethodInvocation iter hasNext MemberReference ++ i BlockStatement StatementExpression MethodInvocation al MethodInvocation iter next add ReturnStatement MemberReference al	0
MethodDeclaration Modifier private ReferenceType getInputHandler ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType ReturnStatement MethodInvocation createArgument	0
MethodDeclaration Modifier public FormalParameter ReferenceType Commandline c FormalParameter BasicType boolean insertAtStart IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement StatementExpression This MethodInvocation MemberReference c configureCommandline IfStatement MemberReference insertAtStart BlockStatement StatementExpression MethodInvocation vecCommandlines MemberReference c Literal 0 insertElementAt BlockStatement StatementExpression MethodInvocation vecCommandlines MemberReference c addElement	0
MethodDeclaration Modifier public setAntlib FormalParameter ReferenceType String antlib IfStatement MemberReference BlockStatement StatementExpression MethodInvocation IfStatement MethodInvocation ! antlib Literal "antlib:" startsWith BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid antlib attribute - it must start with antlib:" StatementExpression MethodInvocation MemberReference antlib StatementExpression Assignment This MemberReference resource BinaryOperation + MethodInvocation antlib MethodInvocation Literal '.' Literal '/' replace Literal MethodInvocation length "antlib:" substring Literal "/antlib.xml" = StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MethodInvocation MethodInvocation getContextProject This MemberReference classpath MethodInvocation getClassLoadId This MemberReference BinaryOperation || BinaryOperation != MemberReference Literal null MethodInvocation MethodInvocation getContextProject isMagicPropertySet getClassLoaderForPath	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "" expectLog LocalVariableDeclaration ReferenceType Object VariableDeclarator ref MethodInvocation project MethodInvocation Literal "local" get getReferences StatementExpression MethodInvocation Literal "ref is not null" MemberReference ref assertNotNull StatementExpression MethodInvocation Literal "org.example.types.TypedefTestType" MethodInvocation ref MethodInvocation getName getClass assertEquals	0
MethodDeclaration Modifier public ReferenceType Regexp newRegexp BuildException ReturnStatement Cast ReferenceType Regexp MethodInvocation Literal null newRegexp	0
MethodDeclaration Modifier public FormalParameter ReferenceType File propertyFile StatementExpression Assignment This MemberReference propertyFile MemberReference propertyFile =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal testEchoPrefixVarious	0
MethodDeclaration Modifier public setImplementation FormalParameter ReferenceType String impl IfStatement Literal MethodInvocation MemberReference impl equals "default" BlockStatement StatementExpression MethodInvocation facade MethodInvocation Native2AsciiAdapterFactory getDefault setImplementation BlockStatement StatementExpression MethodInvocation facade MemberReference impl setImplementation	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation reflectedArg MethodInvocation Literal null ArrayCreator ReferenceType Object ArrayInitializer MemberReference value invoke Literal "valueOf" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod invoke CatchClause CatchClauseParameter InvocationTargetException x IfStatement BinaryOperation instanceof MethodInvocation x getTargetException ReferenceType IllegalArgumentException BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "'" MemberReference value Literal "' is not a permitted value for " MethodInvocation reflectedArg getName BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation x getTargetException CatchClause CatchClauseParameter Exception x ThrowStatement ClassCreator ReferenceType BuildException MemberReference x	1
MethodDeclaration Modifier public ReferenceType String getExtraOptions ReturnStatement This MemberReference extraOptions	0
MethodDeclaration Modifier public testRealTestWithResource java.io.IOException StatementExpression MethodInvocation Literal "realTestWithResource" testRealTest	0
MethodDeclaration Modifier public testGlobal StatementExpression MethodInvocation Literal "testGlobal" Literal "" expectLog LocalVariableDeclaration ReferenceType Object VariableDeclarator ref MethodInvocation project MethodInvocation Literal "global" get getReferences StatementExpression MethodInvocation Literal "ref is not null" MemberReference ref assertNotNull StatementExpression MethodInvocation Literal "org.example.types.TypedefTestType" MethodInvocation ref MethodInvocation getName getClass assertEquals	0
MethodDeclaration Modifier public testGetAddTextMethod LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation ih getAddTextMethod StatementExpression MethodInvocation MemberReference m Literal "addText" ClassReference ReferenceType String Literal "test" Literal "bing!" assertMethod StatementExpression Assignment MemberReference ih MethodInvocation IntrospectionHelper ClassReference ReferenceType String getHelper = TryStatement StatementExpression Assignment MemberReference m MethodInvocation ih getAddTextMethod = CatchClause CatchClauseParameter BuildException e	1
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference ccmAction MemberReference v =	0
MethodDeclaration Modifier public setKeepCompression FormalParameter BasicType boolean keep StatementExpression Assignment MemberReference keepCompression MemberReference keep =	0
MethodDeclaration Modifier public ReferenceType Java getJava ReturnStatement MemberReference java	0
MethodDeclaration Modifier public testOverride2 StatementExpression MethodInvocation Literal "test-override2" executeTarget	0
MethodDeclaration Modifier public setPreserveTime FormalParameter BasicType boolean ptime StatementExpression Assignment MemberReference mPtime MemberReference ptime =	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation getGraphical BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement IfStatement MethodInvocation getOverwrite BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement IfStatement MethodInvocation getRename BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_RENAME setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NOVERWRITE setValue createArgument IfStatement MethodInvocation getCurrentTime BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement IfStatement MethodInvocation getPreserveTime BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_PRESERVETIME setValue createArgument StatementExpression MethodInvocation MemberReference cmd getLogCommand StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier public ReferenceType Hashtable getEjbFiles ReturnStatement MemberReference ejbFiles	1
MethodDeclaration Modifier static protected ReferenceType String formatTime FormalParameter Modifier final BasicType long millis ReturnStatement MethodInvocation MemberReference millis	0
MethodDeclaration Modifier public testSingle IfStatement MemberReference supportsSymlinks BlockStatement StatementExpression MethodInvocation Literal "test-single" executeTarget StatementExpression Assignment MemberReference p MethodInvocation getProject = StatementExpression MethodInvocation Literal "Failed to create file" MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create link" MethodInvocation p Literal getProperty assertNotNull	0
MethodDeclaration Modifier private sendMTFValues IOException LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len This MemberReference data MemberReference sendMTFValues_len LocalVariableDeclaration Modifier final BasicType int VariableDeclarator alphaSize BinaryOperation + This MemberReference nInUse Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t MemberReference N_GROUPS BinaryOperation >= MemberReference -- t Literal 0 BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator len_t MemberReference ArraySelector MemberReference t len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator v MemberReference alphaSize BinaryOperation >= MemberReference -- v Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference v len_t MemberReference GREATER_ICOST = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nGroups TernaryExpression BinaryOperation < This MemberReference nMTF Literal 200 Literal 2 TernaryExpression BinaryOperation < This MemberReference nMTF Literal 600 Literal 3 TernaryExpression BinaryOperation < This MemberReference nMTF Literal 1200 Literal 4 TernaryExpression BinaryOperation < This MemberReference nMTF Literal 2400 Literal 5 Literal 6 StatementExpression MethodInvocation MemberReference nGroups MemberReference alphaSize sendMTFValues0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nSelectors MethodInvocation MemberReference nGroups MemberReference alphaSize sendMTFValues1 StatementExpression MethodInvocation MemberReference nGroups MemberReference nSelectors sendMTFValues2 StatementExpression MethodInvocation MemberReference nGroups MemberReference alphaSize sendMTFValues3 StatementExpression MethodInvocation sendMTFValues4 StatementExpression MethodInvocation MemberReference nGroups MemberReference nSelectors sendMTFValues5 StatementExpression MethodInvocation MemberReference nGroups MemberReference alphaSize sendMTFValues6 StatementExpression MethodInvocation MemberReference nSelectors sendMTFValues7	1
MethodDeclaration Modifier public FormalParameter ReferenceType pa StatementExpression Assignment MemberReference proportions MethodInvocation pa getValue =	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r IfStatement BinaryOperation != MemberReference path Literal null BlockStatement ThrowStatement MethodInvocation noChildrenAllowed StatementExpression Assignment MemberReference refid MemberReference r =	0
MethodDeclaration Modifier protected ReferenceType String getExecutableName ReturnStatement MemberReference SunRmic	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier static protected ReferenceType String describeArguments FormalParameter ReferenceType String args FormalParameter BasicType int offset IfStatement BinaryOperation || BinaryOperation == MemberReference args Literal null BinaryOperation <= MemberReference args length MemberReference offset BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "argument" IfStatement BinaryOperation > MemberReference args length MemberReference offset BlockStatement StatementExpression MethodInvocation buf Literal "s" append StatementExpression MethodInvocation buf MethodInvocation MemberReference StringUtils LINE_SEP append Literal ":" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference offset BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference ArraySelector MemberReference i args append MethodInvocation Literal "\'" append MethodInvocation MemberReference StringUtils LINE_SEP append Literal "\'" append StatementExpression MethodInvocation buf MemberReference DISCLAIMER append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public static copyResource FormalParameter ReferenceType Resource source FormalParameter ReferenceType Resource dest IOException StatementExpression MethodInvocation MemberReference source MemberReference dest Literal null copyResource	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference failOnError MemberReference fail =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String tn StatementExpression Assignment MemberReference mTypeName MemberReference tn =	0
MethodDeclaration BasicType boolean eval FormalParameter BasicType int t FormalParameter BasicType int f ReturnStatement BinaryOperation == MemberReference t Literal 1	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BasicType boolean isDirectory IfStatement BinaryOperation != This MemberReference file Literal null BlockStatement ReturnStatement This MemberReference file MethodInvocation isDirectory IfStatement BinaryOperation == This MemberReference linkFlag MemberReference LF_DIR BlockStatement ReturnStatement Literal true IfStatement This MethodInvocation getName MethodInvocation Literal "/" endsWith BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "recursive expectBuildException	0
MethodDeclaration Modifier public testSupportsCharacters StatementExpression MethodInvocation Literal "IntrospectionHelperTest supports addText" MethodInvocation ih supportsCharacters assertTrue StatementExpression Assignment MemberReference ih MethodInvocation IntrospectionHelper ClassReference ReferenceType String getHelper = StatementExpression MethodInvocation Literal "String doesn\'t support addText" MethodInvocation ! ih supportsCharacters assertTrue	1
MethodDeclaration Modifier public addFileset FormalParameter Modifier final ReferenceType FileSet fileSet StatementExpression MethodInvocation libraryFileSets MemberReference fileSet addElement	0
MethodDeclaration Modifier private BasicType long getSkip ReturnStatement MemberReference skip	0
MethodDeclaration * Set a stream to use as * @param inputStream the stream from which input will be * @since Ant */ setInputStream FormalParameter ReferenceType InputStream inputStream StatementExpression Assignment This MemberReference inputStream MemberReference inputStream =	0
MethodDeclaration Modifier private ReferenceType String macroSubs FormalParameter ReferenceType String s FormalParameter ReferenceType Map macroMapping IfStatement BinaryOperation == MemberReference s Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ret ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator macroName Literal null LocalVariableDeclaration BasicType int VariableDeclarator state MemberReference STATE_NORMAL ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation s length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation s MemberReference i charAt SwitchStatement MemberReference state SwitchStatementCase STATE_NORMAL IfStatement BinaryOperation == MemberReference ch Literal '@' BlockStatement StatementExpression Assignment MemberReference state MemberReference STATE_EXPECT_BRACKET = BlockStatement StatementExpression MethodInvocation ret MemberReference ch append BreakStatement SwitchStatementCase STATE_EXPECT_BRACKET IfStatement BinaryOperation == MemberReference ch Literal '{' BlockStatement StatementExpression Assignment MemberReference state MemberReference STATE_EXPECT_NAME = StatementExpression Assignment MemberReference macroName ClassCreator ReferenceType StringBuffer = IfStatement BinaryOperation == MemberReference ch Literal '@' BlockStatement StatementExpression Assignment MemberReference state MemberReference STATE_NORMAL = StatementExpression MethodInvocation ret Literal '@' append BlockStatement StatementExpression Assignment MemberReference state MemberReference STATE_NORMAL = StatementExpression MethodInvocation ret Literal '@' append StatementExpression MethodInvocation ret MemberReference ch append BreakStatement SwitchStatementCase STATE_EXPECT_NAME IfStatement BinaryOperation == MemberReference ch Literal '}' BlockStatement StatementExpression Assignment MemberReference state MemberReference STATE_NORMAL = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation macroName MethodInvocation MemberReference Locale US toLowerCase toString LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation macroMapping MemberReference name get IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression MethodInvocation ret Literal "@{" append StatementExpression MethodInvocation ret MemberReference name append StatementExpression MethodInvocation ret Literal "}" append BlockStatement StatementExpression MethodInvocation ret MemberReference value append StatementExpression Assignment MemberReference macroName Literal null = BlockStatement StatementExpression MethodInvocation macroName MemberReference ch append BreakStatement SwitchStatementCase BreakStatement SwitchStatement MemberReference state SwitchStatementCase STATE_NORMAL BreakStatement SwitchStatementCase STATE_EXPECT_BRACKET StatementExpression MethodInvocation ret Literal '@' append BreakStatement SwitchStatementCase STATE_EXPECT_NAME StatementExpression MethodInvocation ret Literal "@{" append StatementExpression MethodInvocation ret MethodInvocation macroName toString append BreakStatement SwitchStatementCase BreakStatement ReturnStatement MethodInvocation ret toString	1
MethodDeclaration Modifier public clear StatementExpression Assignment MemberReference targetType Literal null = StatementExpression Assignment MemberReference win32icon Literal null = StatementExpression Assignment MemberReference srcDir Literal null = StatementExpression Assignment MemberReference mainClass Literal null = StatementExpression Assignment MemberReference warnLevel Literal 3 = StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference debug Literal true = StatementExpression Assignment MemberReference references Literal null = StatementExpression Assignment MemberReference failOnError Literal true = StatementExpression Assignment MemberReference additionalModules Literal null = StatementExpression Assignment MemberReference includeDefaultReferences Literal true = StatementExpression Assignment MemberReference extraOptions Literal null =	0
MethodDeclaration Modifier final protected ReferenceType String readLine IOException LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation in read IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator line ClassCreator ReferenceType StringBuffer WhileStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement StatementExpression MethodInvocation line Cast BasicType char MemberReference ch append IfStatement BinaryOperation == MemberReference ch Literal '\n' BlockStatement BreakStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = ReturnStatement MethodInvocation line toString	1
MethodDeclaration Modifier public setDate FormalParameter ReferenceType String date StatementExpression SuperMethodInvocation MemberReference date setInternalDate	0
MethodDeclaration Modifier public setJavac FormalParameter ReferenceType attributes StatementExpression Assignment This MemberReference attributes MemberReference attributes = StatementExpression Assignment MemberReference src MethodInvocation attributes getSrcdir = StatementExpression Assignment MemberReference destDir MethodInvocation attributes getDestdir = StatementExpression Assignment MemberReference encoding MethodInvocation attributes getEncoding = StatementExpression Assignment MemberReference debug MethodInvocation attributes getDebug = StatementExpression Assignment MemberReference MethodInvocation attributes = StatementExpression Assignment MemberReference MethodInvocation attributes getDeprecation = StatementExpression Assignment MemberReference depend MethodInvocation attributes getDepend = StatementExpression Assignment MemberReference verbose MethodInvocation attributes getVerbose = StatementExpression Assignment MemberReference target MethodInvocation attributes getTarget = StatementExpression Assignment MemberReference bootclasspath MethodInvocation attributes getBootclasspath = StatementExpression Assignment MemberReference extdirs MethodInvocation attributes getExtdirs = StatementExpression Assignment MemberReference compileList MethodInvocation attributes getFileList = StatementExpression Assignment MemberReference compileClasspath MethodInvocation attributes getClasspath = StatementExpression Assignment MemberReference compileSourcepath MethodInvocation attributes getSourcepath = StatementExpression Assignment MemberReference project MethodInvocation attributes getProject = StatementExpression Assignment MemberReference location MethodInvocation attributes getLocation = StatementExpression Assignment MemberReference MethodInvocation attributes = StatementExpression Assignment MemberReference MethodInvocation attributes = StatementExpression Assignment MemberReference memoryInitialSize MethodInvocation attributes getMemoryInitialSize = StatementExpression Assignment MemberReference memoryMaximumSize MethodInvocation attributes getMemoryMaximumSize =	1
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MethodInvocation e hasMoreElements	0
MethodDeclaration Modifier private ReferenceType String fixupPath FormalParameter ReferenceType String file ReturnStatement MethodInvocation file Literal '/' MemberReference File separatorChar replace	0
MethodDeclaration Modifier public FormalParameter ReferenceType String rootStarteamFolder StatementExpression Assignment This MemberReference rootStarteamFolder MemberReference rootStarteamFolder =	0
MethodDeclaration Modifier public setRefid FormalParameter Modifier final ReferenceType ref StatementExpression Assignment This MemberReference ref MemberReference ref = StatementExpression Assignment MemberReference checked Literal false =	0
MethodDeclaration Modifier private ReferenceType Properties loadLinks FormalParameter ReferenceType Vector v LocalVariableDeclaration ReferenceType Properties VariableDeclarator finalList ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation v size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation v MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation fs MemberReference ds MethodInvocation getProject setupDirectoryScanner StatementExpression MethodInvocation ds Literal false setFollowSymlinks StatementExpression MethodInvocation ds scan LocalVariableDeclaration ReferenceType String VariableDeclarator incs MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation fs MethodInvocation getProject getDir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference incs length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator inc ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference j incs LocalVariableDeclaration ReferenceType File VariableDeclarator pf MethodInvocation inc getParentFile LocalVariableDeclaration ReferenceType Properties VariableDeclarator lnks ClassCreator ReferenceType Properties TryStatement StatementExpression MethodInvocation lnks ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference inc load StatementExpression Assignment MemberReference pf MethodInvocation pf getCanonicalFile = CatchClause CatchClauseParameter FileNotFoundException fnfe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to find " MemberReference ArraySelector MemberReference j incs Literal "; skipping it." handleError ContinueStatement CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to open " MemberReference ArraySelector MemberReference j incs Literal " or its parent dir; skipping it." handleError ContinueStatement StatementExpression MethodInvocation lnks ClassCreator ReferenceType PrintStream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO list ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator kitr MethodInvocation lnks MethodInvocation iterator keySet MethodInvocation kitr hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation kitr next StatementExpression MethodInvocation finalList ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference pf MemberReference key MethodInvocation lnks MemberReference key getProperty put ReturnStatement MemberReference finalList	1
MethodDeclaration Modifier public static ReferenceType String getJavaHome ReturnStatement MemberReference JAVA_HOME	0
MethodDeclaration Modifier public static BasicType boolean isAbsolutePath FormalParameter ReferenceType String filename LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation filename length IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType char VariableDeclarator sep MemberReference File separatorChar StatementExpression Assignment MemberReference filename MethodInvocation filename MethodInvocation Literal '\\' MemberReference sep replace Literal '/' MemberReference sep replace = LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation filename Literal 0 charAt IfStatement BinaryOperation || MemberReference onDos MemberReference onNetWare BlockStatement ReturnStatement BinaryOperation == MemberReference c MemberReference sep IfStatement BinaryOperation == MemberReference c MemberReference sep BlockStatement IfStatement BinaryOperation && BinaryOperation && MemberReference onDos BinaryOperation > MemberReference len Literal 4 BinaryOperation == MethodInvocation filename Literal 1 charAt MemberReference sep BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator nextsep MethodInvocation filename MemberReference sep Literal 2 indexOf ReturnStatement BinaryOperation && BinaryOperation > MemberReference nextsep Literal 2 BinaryOperation < BinaryOperation + MemberReference nextsep Literal 1 MemberReference len LocalVariableDeclaration BasicType int VariableDeclarator colon MethodInvocation filename Literal ':' indexOf ReturnStatement BinaryOperation || BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation Character MemberReference c isLetter BinaryOperation == MemberReference colon Literal 1 BinaryOperation > MethodInvocation filename length Literal 2 BinaryOperation == MethodInvocation filename Literal 2 charAt MemberReference sep BinaryOperation && MemberReference onNetWare BinaryOperation > MemberReference colon Literal 0	1
MethodDeclaration Modifier public onEndElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType context	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation getReserved BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_RESERVED setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_UNRESERVED setValue createArgument IfStatement BinaryOperation != MethodInvocation getOut Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getOutCommand BlockStatement IfStatement MethodInvocation getNoData BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NODATA setValue createArgument IfStatement BinaryOperation != MethodInvocation getBranch Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getBranchCommand BlockStatement IfStatement MethodInvocation getVersion BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation getNoWarn BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentCommand BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd getCommentFileCommand BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_NOCOMMENT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	1
MethodDeclaration Modifier private ReferenceType FormatterElement mergeFormatters FormalParameter ReferenceType JUnitTest test LocalVariableDeclaration ReferenceType Vector VariableDeclarator feVector Cast ReferenceType Vector MethodInvocation formatters clone StatementExpression MethodInvocation test MemberReference feVector addFormattersTo LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator feArray ArrayCreator ReferenceType FormatterElement MethodInvocation feVector size StatementExpression MethodInvocation feVector MemberReference feArray copyInto ReturnStatement MemberReference feArray	1
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter ReferenceType Vector filterChains FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String inputEncoding FormalParameter ReferenceType String outputEncoding FormalParameter ReferenceType Project project IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile MemberReference filters MemberReference filterChains MemberReference overwrite MemberReference preserveLastModified MemberReference inputEncoding MemberReference outputEncoding MemberReference project copyFile	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "import element appears without a file attribute" LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator context StatementExpression Assignment MemberReference context Cast ReferenceType ReferenceType MethodInvocation project Literal "ant.parsing.context" getReference = StatementExpression MemberReference ++ context StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "importlevel: " BinaryOperation - MemberReference context Literal 1 Literal " -> " MemberReference context MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Importing file " MemberReference file Literal " from " MethodInvocation context.buildFile getAbsolutePath MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType File VariableDeclarator importedFile ClassCreator ReferenceType File MemberReference file IfStatement MethodInvocation ! importedFile isAbsolute BlockStatement StatementExpression Assignment MemberReference importedFile ClassCreator ReferenceType File MemberReference context buildFileParent MemberReference file = IfStatement MethodInvocation ! importedFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot find " MemberReference file Literal " imported from " MethodInvocation context.buildFile getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator parentFilename MethodInvocation MemberReference context buildFile getPath IfStatement MethodInvocation ! context.importedFiles MemberReference parentFilename containsKey BlockStatement StatementExpression MethodInvocation context.importedFiles MemberReference parentFilename MemberReference context buildFile put LocalVariableDeclaration ReferenceType String VariableDeclarator importedFilename MethodInvocation MemberReference importedFile getPath IfStatement MethodInvocation context.importedFiles MemberReference importedFilename containsKey BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal already imported file:\n " MemberReference importedFilename Literal "\n" MemberReference Project MSG_WARN log StatementExpression MemberReference -- context StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "importlevel: " MemberReference context Literal " " BinaryOperation + MemberReference context Literal 1 MemberReference Project MSG_DEBUG log ReturnStatement BlockStatement StatementExpression MethodInvocation context.importedFiles MemberReference importedFilename MemberReference importedFile put StatementExpression Assignment MemberReference context ignoreProjectTag Literal true = StatementExpression MethodInvocation MemberReference project MemberReference importedFile ClassCreator ReferenceType ReferenceType RootHandler MemberReference context parse StatementExpression MemberReference -- context StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "importlevel: " MemberReference context Literal " " BinaryOperation + MemberReference context Literal 1 MemberReference Project MSG_DEBUG log	0
MethodDeclaration Modifier public addFile FormalParameter ReferenceType File file StatementExpression MethodInvocation files MemberReference file add	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference BUILD_FILE configureProject	0
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public setIiopopts FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType File VariableDeclarator xsl MethodInvocation Literal "/taskdefs/optional/xsltliaison-in.xsl" getFile StatementExpression MethodInvocation liaison MemberReference xsl setStylesheet StatementExpression MethodInvocation liaison Literal "param" Literal "value" addParam LocalVariableDeclaration ReferenceType File VariableDeclarator in MethodInvocation Literal "/taskdefs/optional/xsltliaison-in.xml" getFile LocalVariableDeclaration ReferenceType File VariableDeclarator out ClassCreator ReferenceType File Literal StatementExpression MethodInvocation out deleteOnExit TryStatement StatementExpression MethodInvocation liaison MemberReference in MemberReference out transform StatementExpression MethodInvocation out delete	0
MethodDeclaration Modifier protected testPreconditions BuildException IfStatement BinaryOperation && BinaryOperation != Literal null MethodInvocation getLabel BinaryOperation != Literal null MethodInvocation getAsOfDate BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Both label and asOfDate specified. " Literal "Unable to process request."	0
MethodDeclaration Modifier public run SynchronizedStatement MemberReference processes StatementExpression Assignment MemberReference running Literal true = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation processes elements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Cast ReferenceType Process MethodInvocation e nextElement	0
MethodDeclaration Modifier static protected BasicType boolean matchPath FormalParameter ReferenceType String pattern FormalParameter ReferenceType Vector selectorList FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive IfStatement BinaryOperation != MethodInvocation str MemberReference File separator startsWith MethodInvocation pattern MemberReference File separator startsWith BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Vector VariableDeclarator patDirs ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference pattern MemberReference File separator WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation patDirs MethodInvocation st nextToken addElement LocalVariableDeclaration ReferenceType Vector VariableDeclarator strDirs ClassCreator ReferenceType Vector StatementExpression Assignment MemberReference st ClassCreator ReferenceType StringTokenizer MemberReference str MemberReference File separator = WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation strDirs MethodInvocation st nextToken addElement LocalVariableDeclaration BasicType int VariableDeclarator patIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator patIdxEnd BinaryOperation - MethodInvocation patDirs size Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator strIdxEnd BinaryOperation - MethodInvocation strDirs size Literal 1 WhileStatement BinaryOperation && BinaryOperation <= MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator patDir Cast ReferenceType String MethodInvocation patDirs MemberReference patIdxStart elementAt IfStatement MethodInvocation patDir Literal "**" equals BlockStatement BreakStatement IfStatement MethodInvocation ! MemberReference patDir Cast ReferenceType String MethodInvocation strDirs MemberReference strIdxStart elementAt MemberReference isCaseSensitive match BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ patIdxStart StatementExpression MemberReference ++ strIdxStart IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MethodInvocation ! patDirs MethodInvocation Literal "**" equals MemberReference i elementAt BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation MemberReference str MemberReference selectorList isSelected BlockStatement IfStatement BinaryOperation > MemberReference patIdxStart MemberReference patIdxEnd BlockStatement ReturnStatement Literal false WhileStatement BinaryOperation && BinaryOperation <= MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator patDir Cast ReferenceType String MethodInvocation patDirs MemberReference patIdxEnd elementAt IfStatement MethodInvocation patDir Literal "**" equals BlockStatement BreakStatement IfStatement MethodInvocation ! MemberReference patDir Cast ReferenceType String MethodInvocation strDirs MemberReference strIdxEnd elementAt MemberReference isCaseSensitive match BlockStatement ReturnStatement Literal false StatementExpression MemberReference -- patIdxEnd StatementExpression MemberReference -- strIdxEnd IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MethodInvocation ! patDirs MethodInvocation Literal "**" equals MemberReference i elementAt BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation MemberReference str MemberReference selectorList isSelected WhileStatement BinaryOperation && BinaryOperation != MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator patIdxTmp Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference patIdxStart Literal 1 BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MethodInvocation patDirs MethodInvocation Literal "**" equals MemberReference i elementAt BlockStatement StatementExpression Assignment MemberReference patIdxTmp MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference patIdxTmp BinaryOperation + MemberReference patIdxStart Literal 1 BlockStatement StatementExpression MemberReference ++ patIdxStart ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator patLength BinaryOperation - BinaryOperation - MemberReference patIdxTmp MemberReference patIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strLength BinaryOperation + BinaryOperation - MemberReference strIdxEnd MemberReference strIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator foundIdx Literal - 1 ForStatement strLoop ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i BinaryOperation - MemberReference strLength MemberReference patLength MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference patLength MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator subPat Cast ReferenceType String MethodInvocation patDirs BinaryOperation + BinaryOperation + MemberReference patIdxStart MemberReference j Literal 1 elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation strDirs BinaryOperation + BinaryOperation + MemberReference strIdxStart MemberReference i MemberReference j elementAt IfStatement MethodInvocation ! MemberReference subPat MemberReference MemberReference isCaseSensitive match BlockStatement ContinueStatement strLoop StatementExpression Assignment MemberReference foundIdx BinaryOperation + MemberReference strIdxStart MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference foundIdx Literal - 1 BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference patIdxStart MemberReference patIdxTmp = StatementExpression Assignment MemberReference strIdxStart BinaryOperation + MemberReference foundIdx MemberReference patLength = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MethodInvocation ! patDirs MethodInvocation Literal "**" equals MemberReference i elementAt BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation MemberReference str MemberReference selectorList isSelected	0
MethodDeclaration Modifier public setGlib FormalParameter ReferenceType File superGrammar StatementExpression Assignment This MemberReference superGrammar MemberReference superGrammar =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "the name \"text\" is already used as an attribute" expectBuildException	0
MethodDeclaration Modifier public setEJBdtd FormalParameter ReferenceType String inString StatementExpression Assignment This MemberReference ejb11DTD MemberReference inString =	0
MethodDeclaration Modifier public testMatches StatementExpression MethodInvocation reg Literal setPattern StatementExpression MethodInvocation Literal "aaaa should match itself" MethodInvocation reg Literal matches assertTrue StatementExpression MethodInvocation Literal "aaaa should match xaaaa" MethodInvocation reg Literal "xaaaa" matches assertTrue StatementExpression MethodInvocation Literal "aaaa shouldn\'t match xaaa" MethodInvocation ! reg Literal "xaaa" matches assertTrue StatementExpression MethodInvocation reg Literal "^aaaa" setPattern StatementExpression MethodInvocation Literal "^aaaa shouldn\'t match xaaaa" MethodInvocation ! reg Literal "xaaaa" matches assertTrue StatementExpression MethodInvocation Literal "^aaaa should match aaaax" MethodInvocation reg Literal "aaaax" matches assertTrue StatementExpression MethodInvocation reg Literal "aaaa$" setPattern StatementExpression MethodInvocation Literal "aaaa$ shouldn\'t match aaaax" MethodInvocation ! reg Literal "aaaax" matches assertTrue StatementExpression MethodInvocation Literal "aaaa$ should match xaaaa" MethodInvocation reg Literal "xaaaa" matches assertTrue StatementExpression MethodInvocation reg Literal "[0-9]+" setPattern StatementExpression MethodInvocation Literal "[0-9]+ should match 123" MethodInvocation reg Literal matches assertTrue StatementExpression MethodInvocation Literal "[0-9]+ should match 1" MethodInvocation reg Literal "1" matches assertTrue StatementExpression MethodInvocation Literal "[0-9]+ shouldn\'t match \'\'" MethodInvocation ! reg Literal "" matches assertTrue StatementExpression MethodInvocation Literal "[0-9]+ shouldn\'t match a" MethodInvocation ! reg Literal "a" matches assertTrue StatementExpression MethodInvocation reg Literal "[0-9]*" setPattern StatementExpression MethodInvocation Literal "[0-9]* should match 123" MethodInvocation reg Literal matches assertTrue StatementExpression MethodInvocation Literal "[0-9]* should match 1" MethodInvocation reg Literal "1" matches assertTrue StatementExpression MethodInvocation Literal "[0-9]* should match \'\'" MethodInvocation reg Literal "" matches assertTrue StatementExpression MethodInvocation Literal "[0-9]* should match a" MethodInvocation reg Literal "a" matches assertTrue StatementExpression MethodInvocation reg Literal "([0-9]+)=\\1" setPattern StatementExpression MethodInvocation Literal "([0-9]+)=\\1 should match 1=1" MethodInvocation reg Literal "1=1" matches assertTrue StatementExpression MethodInvocation Literal "([0-9]+)=\\1 shouldn\'t match 1=2" MethodInvocation ! reg Literal "1=2" matches assertTrue	1
MethodDeclaration Modifier private printLine FormalParameter Modifier final BasicType int size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation System.out Literal "-" print StatementExpression MethodInvocation System.out println	0
MethodDeclaration Modifier public ReferenceType Object create IfStatement BinaryOperation != MemberReference polyType Literal null BlockStatement IfStatement MethodInvocation ! nestedCreator isPolyMorphic BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Not allowed to use the Literal " for this element" LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MemberReference project getComponentHelper StatementExpression Assignment MemberReference nestedObject MethodInvocation helper MemberReference polyType createComponent = IfStatement BinaryOperation == MemberReference nestedObject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to create object of type " MemberReference polyType TryStatement StatementExpression Assignment MemberReference nestedObject MethodInvocation nestedCreator MemberReference project MemberReference parent MemberReference nestedObject create = IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project MemberReference nestedObject setProjectReference ReturnStatement MemberReference nestedObject CatchClause CatchClauseParameter IllegalAccessException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex CatchClause CatchClauseParameter InstantiationException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex CatchClause CatchClauseParameter IllegalArgumentException ex IfStatement BinaryOperation != MemberReference polyType Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid type used " MemberReference polyType ThrowStatement MemberReference ex CatchClause CatchClauseParameter InvocationTargetException ex LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ex getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String Cast ReferenceType Map ReferenceType Entry MemberReference o1 LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String Cast ReferenceType Map ReferenceType Entry MemberReference o2 ReturnStatement MethodInvocation MemberReference compareTo	0
MethodDeclaration Modifier public FormalParameter ReferenceType String shortMonthNames IfStatement BinaryOperation && BinaryOperation != MemberReference shortMonthNames Literal null MethodInvocation ! shortMonthNames Literal "" equals BlockStatement StatementExpression Assignment This MemberReference shortMonthNamesConfig MemberReference shortMonthNames = StatementExpression MethodInvocation configurationHasBeenSet	0
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar ReturnStatement BinaryOperation * Literal - 1 TernaryExpression BinaryOperation == MemberReference Literal null MethodInvocation foo MemberReference bar compareTo MethodInvocation MemberReference foo MemberReference bar compare	1
MethodDeclaration Modifier public ReferenceType String getPublicId ReturnStatement MemberReference publicId	0
MethodDeclaration Modifier public BasicType boolean getOverwrite ReturnStatement MemberReference mOverwrite	0
MethodDeclaration Modifier public static ReferenceType FormatElement getDefault LocalVariableDeclaration ReferenceType FormatElement VariableDeclarator e ClassCreator ReferenceType FormatElement StatementExpression MethodInvocation e MemberReference CHECKSUM setValue ReturnStatement MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType String out StatementExpression MethodInvocation MemberReference MemberReference out	0
MethodDeclaration Modifier public ReferenceType createPath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation MemberReference result add ReturnStatement MemberReference result	0
MethodDeclaration Modifier private ReferenceType String modifyName FormalParameter ReferenceType String name IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name toLowerCase = IfStatement MemberReference BlockStatement IfStatement BinaryOperation != MethodInvocation name Literal '\\' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name Literal '\\' Literal '/' replace = ReturnStatement MemberReference name	1
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType File VariableDeclarator xsl MethodInvocation Literal "/taskdefs/optional/xsltliaison-in.xsl" getFile StatementExpression MethodInvocation liaison MemberReference xsl setStylesheet StatementExpression MethodInvocation liaison Literal "param" Literal "value" addParam LocalVariableDeclaration ReferenceType File VariableDeclarator in MethodInvocation Literal "/taskdefs/optional/xsltliaison-in.xml" getFile ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 50 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator out ClassCreator ReferenceType File BinaryOperation + BinaryOperation + Literal MemberReference i Literal ".tmp" TryStatement StatementExpression MethodInvocation liaison MemberReference in MemberReference out transform CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "failed in transform " MemberReference i MemberReference e StatementExpression MethodInvocation out delete	0
MethodDeclaration Modifier private static BasicType int binaryCompare FormalParameter ReferenceType Resource r1 FormalParameter ReferenceType Resource r2 IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in1 Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in2 Literal null TryStatement StatementExpression Assignment MemberReference in1 ClassCreator ReferenceType BufferedInputStream MethodInvocation r1 getInputStream = StatementExpression Assignment MemberReference in2 ClassCreator ReferenceType BufferedInputStream MethodInvocation r2 getInputStream = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator b1 MethodInvocation in1 read BinaryOperation != MemberReference b1 Literal - 1 Assignment MemberReference b1 MethodInvocation in1 read = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator b2 MethodInvocation in2 read IfStatement BinaryOperation != MemberReference b1 MemberReference b2 BlockStatement ReturnStatement TernaryExpression BinaryOperation > MemberReference b1 MemberReference b2 Literal 1 Literal - 1 ReturnStatement TernaryExpression BinaryOperation == MethodInvocation in2 read Literal - 1 Literal 0 Literal - 1 StatementExpression MethodInvocation FileUtils MemberReference in1 close StatementExpression MethodInvocation FileUtils MemberReference in2 close	1
MethodDeclaration Modifier public setValue FormalParameter Modifier final ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public setErrorProperty FormalParameter ReferenceType String propertyName StatementExpression Assignment This MemberReference errorProperty MemberReference propertyName =	0
MethodDeclaration Modifier public ReferenceType String getToken FormalParameter ReferenceType Reader in IOException ReturnStatement MethodInvocation FileUtils MemberReference in readFully	1
MethodDeclaration Modifier public BasicType boolean matches FormalParameter ReferenceType String input FormalParameter BasicType int options BuildException TryStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation MemberReference options getCompiledPattern ReturnStatement MethodInvocation p MethodInvocation find MemberReference input matcher CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String dir StatementExpression Assignment MemberReference sosCmdDir MethodInvocation FileUtils MemberReference dir translatePath =	0
MethodDeclaration Modifier private ReferenceType File getParentFile FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation file getParentFile IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null BinaryOperation >= MemberReference msgOutputLevel MemberReference Project MSG_VERBOSE BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal "Searching in " MethodInvocation parent getAbsolutePath println ReturnStatement MemberReference parent	1
MethodDeclaration Modifier public setReplace FormalParameter BasicType boolean replace StatementExpression Assignment MemberReference mReplace MemberReference replace =	0
MethodDeclaration Modifier protected doMultipleCalls FormalParameter BasicType int calls FormalParameter BasicType int database FormalParameter BasicType boolean caching FormalParameter BasicType boolean catchexception LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation MemberReference database getProperties ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference calls MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType SQLExec VariableDeclarator sql MethodInvocation MemberReference props createTask StatementExpression MethodInvocation sql MemberReference caching setCaching TryStatement StatementExpression MethodInvocation sql execute CatchClause CatchClauseParameter BuildException e IfStatement MemberReference ! catchexception BlockStatement ThrowStatement MemberReference e	0
MethodDeclaration Modifier public setColor FormalParameter ReferenceType String c StatementExpression Assignment MemberReference color MemberReference c =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected setupRedirector StatementExpression SuperMethodInvocation setupRedirector StatementExpression MethodInvocation redirector Literal true setAppendProperties	1
MethodDeclaration Modifier public FormalParameter ReferenceType String title StatementExpression MethodInvocation Literal MemberReference title addArgIfNotEmpty	0
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String ddPrefix StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference IAS_DD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig MethodInvocation getIasDescriptorName put	1
MethodDeclaration Modifier protected ReferenceType FileNameMapper getMapper LocalVariableDeclaration ReferenceType FileNameMapper VariableDeclarator mapper Literal null IfStatement BinaryOperation != MemberReference mapperElement Literal null BlockStatement StatementExpression Assignment MemberReference mapper MethodInvocation mapperElement getImplementation = BlockStatement StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType IdentityMapper = ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public setTask FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference task MemberReference v =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType Vector getCompileList ReturnStatement MemberReference compileList	1
MethodDeclaration Modifier public ReferenceType createPath BuildException LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation MemberReference p add ReturnStatement MemberReference p	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation MemberReference System out doReport	1
MethodDeclaration Modifier protected ReferenceType RuntimeConfigurable2 getWrapper2 ReturnStatement Cast ReferenceType RuntimeConfigurable2 MemberReference wrapper	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testFilenameAttribute" executeTarget	0
MethodDeclaration Modifier public ReferenceType FilterChain IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed LocalVariableDeclaration ReferenceType FilterChain VariableDeclarator result ClassCreator ReferenceType FilterChain StatementExpression MethodInvocation result MethodInvocation getProject setProject StatementExpression MethodInvocation inputFilterChains MemberReference result add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter ReferenceType Vector filterChains FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified FormalParameter ReferenceType String inputEncoding FormalParameter ReferenceType String outputEncoding FormalParameter ReferenceType Project project IOException StatementExpression MethodInvocation ResourceUtils ClassCreator ReferenceType FileResource MemberReference sourceFile ClassCreator ReferenceType FileResource MemberReference destFile MemberReference filters MemberReference filterChains MemberReference overwrite MemberReference preserveLastModified MemberReference inputEncoding MemberReference outputEncoding MemberReference project copyResource	1
MethodDeclaration Modifier public ReferenceType String getFastRelativePath LocalVariableDeclaration ReferenceType String VariableDeclarator absPath MethodInvocation getAbsolutePath IfStatement BinaryOperation == MethodInvocation absPath BinaryOperation + MemberReference rootPath MemberReference remoteFileSep indexOf Literal 0 BlockStatement ReturnStatement MethodInvocation absPath BinaryOperation + MethodInvocation rootPath length MethodInvocation remoteFileSep length substring ReturnStatement Literal null	1
MethodDeclaration Modifier private static BasicType boolean equalsString FormalParameter ReferenceType String a FormalParameter ReferenceType String b ReturnStatement TernaryExpression BinaryOperation == MemberReference a Literal null BinaryOperation == MemberReference b Literal null MethodInvocation a MemberReference b equals	1
MethodDeclaration Modifier protected BasicType boolean isUpToDate FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType File localFile FormalParameter ReferenceType String remoteFile IOException BuildException StatementExpression MethodInvocation BinaryOperation + Literal "checking date for " MemberReference remoteFile MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator files MethodInvocation ftp MemberReference remoteFile listFiles IfStatement BinaryOperation || BinaryOperation == MemberReference files Literal null BinaryOperation == MemberReference files length Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference action MemberReference SEND_FILES BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Could not date test remote file: " MemberReference remoteFile Literal "assuming out of date." MemberReference Project MSG_VERBOSE log ReturnStatement Literal false BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "could not date test remote file: " MethodInvocation ftp getReplyString LocalVariableDeclaration BasicType long VariableDeclarator remoteTimestamp MemberReference ArraySelector Literal 0 MethodInvocation MethodInvocation getTime MethodInvocation getTime files LocalVariableDeclaration BasicType long VariableDeclarator localTimestamp MethodInvocation localFile lastModified LocalVariableDeclaration BasicType long VariableDeclarator adjustedRemoteTimestamp BinaryOperation + BinaryOperation + MemberReference remoteTimestamp This MemberReference This MemberReference granularityMillis LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator MethodInvocation MethodInvocation TIMESTAMP_LOGGING_SDF ClassCreator ReferenceType Date MemberReference localTimestamp format append MethodInvocation Literal "] local" append ReferenceType StringBuffer Literal " [" StatementExpression MethodInvocation MethodInvocation msg toString MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference msg ClassCreator MethodInvocation MethodInvocation TIMESTAMP_LOGGING_SDF ClassCreator ReferenceType Date MemberReference adjustedRemoteTimestamp format append MethodInvocation Literal "] remote" append ReferenceType StringBuffer Literal " [" = IfStatement BinaryOperation != MemberReference remoteTimestamp MemberReference adjustedRemoteTimestamp BlockStatement StatementExpression MethodInvocation msg MethodInvocation MethodInvocation TIMESTAMP_LOGGING_SDF ClassCreator ReferenceType Date MemberReference remoteTimestamp format append MethodInvocation Literal ")" append Literal " - (raw: " append StatementExpression MethodInvocation MethodInvocation msg toString MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation == This MemberReference action MemberReference SEND_FILES BlockStatement ReturnStatement BinaryOperation >= MemberReference adjustedRemoteTimestamp MemberReference localTimestamp BlockStatement ReturnStatement BinaryOperation >= MemberReference localTimestamp MemberReference adjustedRemoteTimestamp	1
MethodDeclaration Modifier private getCommentFileCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENTFILE setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public setUrl FormalParameter ReferenceType String url StatementExpression Assignment MemberReference spec MemberReference url =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validateAttributes LocalVariableDeclaration ReferenceType File VariableDeclarator generatedFile MethodInvocation getGeneratedFile LocalVariableDeclaration BasicType boolean VariableDeclarator targetIsOutOfDate BinaryOperation > MethodInvocation targetFile lastModified MethodInvocation generatedFile lastModified LocalVariableDeclaration BasicType boolean VariableDeclarator superGrammarIsOutOfDate BinaryOperation && BinaryOperation != MemberReference superGrammar Literal null BinaryOperation > MethodInvocation superGrammar lastModified MethodInvocation generatedFile lastModified IfStatement BinaryOperation || MemberReference targetIsOutOfDate MemberReference superGrammarIsOutOfDate BlockStatement IfStatement MemberReference targetIsOutOfDate BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MemberReference targetFile Literal " as it is than " MemberReference generatedFile MemberReference Project MSG_VERBOSE log IfStatement MemberReference superGrammarIsOutOfDate BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MemberReference targetFile Literal " as " MemberReference superGrammar Literal " is than " MemberReference generatedFile MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation populateAttributes StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation targetFile toString setValue createArgument StatementExpression MethodInvocation MethodInvocation commandline describeCommand MemberReference Project MSG_VERBOSE log LocalVariableDeclaration BasicType int VariableDeclarator err MethodInvocation MethodInvocation commandline getCommandline run IfStatement BinaryOperation != MemberReference err Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "ANTLR returned: " MemberReference err MethodInvocation getLocation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation bos toString IfStatement BinaryOperation > MethodInvocation output Literal "error:" indexOf Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "ANTLR signaled an error: " MemberReference output MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipped grammar file. Generated file " MemberReference generatedFile Literal " is newer." MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public BasicType boolean getNotco ReturnStatement MemberReference mNotco	0
MethodDeclaration Modifier protected logAndAddFilesToCompile FormalParameter ReferenceType Commandline cmd StatementExpression MethodInvocation BinaryOperation + Literal "Compilation " MethodInvocation cmd describeArguments MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator niceClassList ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator c MethodInvocation getClasses ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference c length MemberReference ++ i BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference ArraySelector MemberReference i c setValue createArgument StatementExpression MethodInvocation niceClassList Literal " " append StatementExpression MethodInvocation niceClassList MemberReference ArraySelector MemberReference i c append StatementExpression MethodInvocation niceClassList MemberReference lSep append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator prefix ClassCreator ReferenceType StringBuffer Literal "Class" IfStatement BinaryOperation > MemberReference c length Literal 1 BlockStatement StatementExpression MethodInvocation prefix Literal "es" append StatementExpression MethodInvocation prefix Literal " to be compiled:" append StatementExpression MethodInvocation prefix MemberReference lSep append StatementExpression MethodInvocation BinaryOperation + MethodInvocation prefix toString MethodInvocation niceClassList toString MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public final ReferenceType Vector topoSort FormalParameter ReferenceType String root FormalParameter ReferenceType Hashtable targetTable BuildException ReturnStatement MethodInvocation ArrayCreator ReferenceType String ArrayInitializer MemberReference root MemberReference targetTable Literal true topoSort	1
MethodDeclaration Modifier public execute BuildException IfStatement MemberReference usedMatchingTask BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - Use of the implicit FileSet is deprecated. " Literal "Use a fileset element instead." TernaryExpression MemberReference quiet MemberReference Project MSG_VERBOSE MemberReference verbosity log IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MemberReference dir Literal null BinaryOperation == MethodInvocation filesets size Literal 0 BinaryOperation == MemberReference rcs Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "At least one of the file or dir " Literal "attributes, or a resource collection, " Literal "must be set." IfStatement BinaryOperation && MemberReference quiet MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "quiet and failonerror cannot both be " Literal "set to MethodInvocation getLocation IfStatement BinaryOperation != MemberReference file Literal null BlockStatement IfStatement MethodInvocation file exists BlockStatement IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Directory " MethodInvocation file getAbsolutePath Literal " cannot be removed using the file attribute. " Literal "Use dir instead." TernaryExpression MemberReference quiet MemberReference Project MSG_VERBOSE MemberReference verbosity log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting: " MethodInvocation file getAbsolutePath log IfStatement MethodInvocation ! MemberReference file delete BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to delete file " MethodInvocation file getAbsolutePath handle BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Could not find file " MethodInvocation file getAbsolutePath Literal " to delete." TernaryExpression MemberReference quiet MemberReference Project MSG_VERBOSE MemberReference verbosity log IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference dir Literal null MethodInvocation dir exists MethodInvocation dir isDirectory MemberReference ! usedMatchingTask BlockStatement IfStatement BinaryOperation == MemberReference verbosity MemberReference Project MSG_VERBOSE BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting directory " MethodInvocation dir getAbsolutePath log StatementExpression MethodInvocation MemberReference dir removeDir LocalVariableDeclaration ReferenceType Resources VariableDeclarator resourcesToDelete ClassCreator ReferenceType Resources StatementExpression MethodInvocation resourcesToDelete MethodInvocation getProject setProject LocalVariableDeclaration ReferenceType Resources VariableDeclarator filesetDirs ClassCreator ReferenceType Resources StatementExpression MethodInvocation filesetDirs MethodInvocation getProject setProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator implicit Literal null IfStatement BinaryOperation && BinaryOperation && MemberReference usedMatchingTask BinaryOperation != MemberReference dir Literal null MethodInvocation dir isDirectory BlockStatement StatementExpression Assignment MemberReference implicit MethodInvocation getImplicitFileSet = StatementExpression MethodInvocation implicit MethodInvocation getProject setProject StatementExpression MethodInvocation filesets MemberReference implicit add ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator size MethodInvocation filesets size BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i get IfStatement BinaryOperation == MethodInvocation fs getProject Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting fileset with no project specified;" Literal " assuming executing project" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference fs Cast ReferenceType FileSet MethodInvocation fs clone = StatementExpression MethodInvocation fs MethodInvocation getProject setProject IfStatement MethodInvocation ! fs MethodInvocation isDirectory getDir BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Directory does not exist:" MethodInvocation fs getDir handle BlockStatement StatementExpression MethodInvocation resourcesToDelete MemberReference fs add IfStatement MemberReference BlockStatement StatementExpression MethodInvocation filesetDirs ClassCreator ReferenceType ReverseDirs MethodInvocation fs getDir MethodInvocation fs MethodInvocation getIncludedDirectories getDirectoryScanner add StatementExpression MethodInvocation resourcesToDelete MemberReference filesetDirs add IfStatement BinaryOperation != MemberReference rcs Literal null BlockStatement LocalVariableDeclaration ReferenceType Restrict VariableDeclarator exists ClassCreator ReferenceType Restrict StatementExpression MethodInvocation exists MemberReference EXISTS add StatementExpression MethodInvocation exists MemberReference rcs add LocalVariableDeclaration ReferenceType Sort VariableDeclarator s ClassCreator ReferenceType Sort StatementExpression MethodInvocation s MemberReference REVERSE_FILESYSTEM add StatementExpression MethodInvocation s MemberReference exists add StatementExpression MethodInvocation resourcesToDelete MemberReference s add TryStatement IfStatement MethodInvocation resourcesToDelete isFilesystemOnly BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resourcesToDelete iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator r Cast ReferenceType FileResource MethodInvocation iter next IfStatement MethodInvocation ! r isExists BlockStatement ContinueStatement IfStatement BinaryOperation || MethodInvocation ! r isDirectory BinaryOperation == MethodInvocation r MethodInvocation list MemberReference length getFile Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting " MemberReference r MemberReference verbosity log IfStatement BinaryOperation && MethodInvocation ! MethodInvocation r getFile delete MemberReference failonerror BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to delete " TernaryExpression MethodInvocation r isDirectory Literal "directory " Literal "file " MemberReference r handle BlockStatement StatementExpression MethodInvocation BinaryOperation + MethodInvocation getTaskName Literal " handles only filesystem resources" handle CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation MemberReference e handle IfStatement BinaryOperation != MemberReference implicit Literal null BlockStatement StatementExpression MethodInvocation filesets MemberReference implicit remove	1
MethodDeclaration Modifier public XsetIgnore FormalParameter ReferenceType String ignoreString StatementExpression MethodInvocation BinaryOperation + Literal "The ignore attribute is deprecated." Literal "Please use the attribute." MemberReference Project MSG_WARN log IfStatement BinaryOperation && BinaryOperation != MemberReference ignoreString Literal null BinaryOperation > MethodInvocation ignoreString length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference ignoreString Literal ", " Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "**/" MethodInvocation tok MethodInvocation trim nextToken Literal "/**" setName	1
MethodDeclaration Modifier private static doReportWhich FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType Throwable VariableDeclarator error Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator which MethodInvocation Class Literal "org.apache.env.Which" forName LocalVariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation which Literal "main" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod StatementExpression MethodInvocation method Literal null ArrayCreator ReferenceType Object ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer invoke CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation out Literal "Not available." println StatementExpression MethodInvocation out Literal "Download it at http://xml.apache.org/commons/" println CatchClause CatchClauseParameter InvocationTargetException e StatementExpression Assignment MemberReference error TernaryExpression BinaryOperation == MethodInvocation e getTargetException Literal null MemberReference e MethodInvocation e getTargetException = CatchClause CatchClauseParameter Throwable e StatementExpression Assignment MemberReference error MemberReference e = IfStatement BinaryOperation != MemberReference error Literal null BlockStatement StatementExpression MethodInvocation out Literal "Error while running org.apache.env.Which" println StatementExpression MethodInvocation error printStackTrace	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "out/out/one.txt" Literal "filename='one.xml'" assertFileContains StatementExpression MethodInvocation Literal "out/out/two.txt" Literal assertFileContains StatementExpression MethodInvocation Literal "out/out/three.txt" Literal assertFileContains StatementExpression MethodInvocation Literal "out/out/dir/four.txt" Literal "filename='four.xml'" assertFileContains StatementExpression MethodInvocation Literal "out/out/dir/four.txt" Literal "filedir assertFileContains	0
MethodDeclaration Modifier public to FormalParameter ReferenceType String to StatementExpression MethodInvocation toList MemberReference to add	0
MethodDeclaration Modifier protected BasicType boolean supportsNonFileResources ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType GUnzip equals getClass	1
MethodDeclaration Modifier public ReferenceType IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation == This MemberReference catalogPath Literal null BlockStatement StatementExpression Assignment This MemberReference catalogPath ClassCreator ReferenceType MethodInvocation getProject = StatementExpression MethodInvocation Literal false setChecked ReturnStatement This MemberReference catalogPath MethodInvocation createPath	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator is ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType InputStream MethodDeclaration Modifier public BasicType int read ReturnStatement Literal - 1 TryStatement ReturnStatement MethodInvocation is getEncoding StatementExpression MethodInvocation MemberReference is close	0
MethodDeclaration Modifier public setNext FormalParameter BasicType int next StatementExpression Assignment This MemberReference next MemberReference next =	0
MethodDeclaration Modifier protected fillMapsFromArchive FormalParameter ReferenceType Resource src FormalParameter ReferenceType String encoding FormalParameter ReferenceType Map fileEntries FormalParameter ReferenceType Map matchFileEntries FormalParameter ReferenceType Map dirEntries FormalParameter ReferenceType Map matchDirEntries LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry Literal null LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zf Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile Literal null IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement StatementExpression Assignment MemberReference srcFile Cast ReferenceType FileResource MemberReference src = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "only file resources are supported" TryStatement TryStatement StatementExpression Assignment MemberReference zf ClassCreator ReferenceType ZipFile MemberReference srcFile MemberReference encoding = CatchClause CatchClauseParameter ZipException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "problem reading " MemberReference srcFile MemberReference ex CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "problem opening " MemberReference srcFile MemberReference ex LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation zf getEntries WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference entry Cast ReferenceType ZipEntry MethodInvocation e nextElement = LocalVariableDeclaration ReferenceType Resource VariableDeclarator r ClassCreator ReferenceType ZipResource MemberReference srcFile MemberReference encoding MemberReference entry LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation entry getName IfStatement MethodInvocation entry isDirectory BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference name trimSeparator = StatementExpression MethodInvocation dirEntries MemberReference name MemberReference r put IfStatement MethodInvocation MemberReference name match BlockStatement StatementExpression MethodInvocation matchDirEntries MemberReference name MemberReference r put BlockStatement StatementExpression MethodInvocation fileEntries MemberReference name MemberReference r put IfStatement MethodInvocation MemberReference name match BlockStatement StatementExpression MethodInvocation matchFileEntries MemberReference name MemberReference r put IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement TryStatement StatementExpression MethodInvocation zf close CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier protected BasicType boolean isActionValid ReturnStatement MethodInvocation getTask	0
MethodDeclaration Modifier public setOut FormalParameter ReferenceType File outFile StatementExpression Assignment This MemberReference outFile MemberReference outFile =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean getIgnoreReturnCode ReturnStatement MemberReference ignorerc	0
MethodDeclaration Modifier protected ReferenceType View FormalParameter ReferenceType View raw ReturnStatement MemberReference raw	0
MethodDeclaration Modifier public ReferenceType String getFolderName ReturnStatement MemberReference folderName	0
MethodDeclaration Modifier public BasicType char ReturnStatement MethodInvocation MemberReference ++ next getChar	0
MethodDeclaration Modifier public setDebug FormalParameter BasicType boolean enable StatementExpression Assignment This MemberReference debug MemberReference enable =	0
MethodDeclaration Modifier public ReferenceType getClasspath ReturnStatement MethodInvocation getCompileClasspath	0
MethodDeclaration Modifier public testSelectionBehaviour LocalVariableDeclaration ReferenceType VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results LocalVariableDeclaration ReferenceType File VariableDeclarator subdir LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator identity ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation identity Literal "identity" setValue LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator glob ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation glob Literal "glob" setValue LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator merge ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation merge Literal "merge" setValue TryStatement StatementExpression MethodInvocation makeBed StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference identity setType StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference merge setType StatementExpression MethodInvocation m Literal "asf-logo.gif.gz" StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MethodInvocation results Literal 0 Literal 11 substring assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference beddir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference merge setType StatementExpression MethodInvocation m Literal StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression Assignment MemberReference subdir ClassCreator ReferenceType File Literal = StatementExpression MethodInvocation s MemberReference subdir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference glob setType StatementExpression MethodInvocation m Literal "*.bz2" StatementExpression MethodInvocation m Literal "*.tar.bz2" StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "FFTFFFFFFTTF" MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression Assignment MemberReference subdir ClassCreator ReferenceType File MemberReference beddir Literal "tar/bz2" = StatementExpression MethodInvocation s MemberReference subdir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference glob setType StatementExpression MethodInvocation m Literal "*.bz2" StatementExpression MethodInvocation m Literal "*.tar.bz2" StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "FFFFFFFFFTTF" MemberReference results assertEquals TryStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = LocalVariableDeclaration ReferenceType File VariableDeclarator testdir MethodInvocation MethodInvocation Literal "selectortest2" resolveFile getProject StatementExpression MethodInvocation s MemberReference testdir setTargetdir StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression Assignment MemberReference testdir MethodInvocation MethodInvocation Literal resolveFile getProject = StatementExpression MethodInvocation s MemberReference testdir setTargetdir StatementExpression Assignment MemberReference m MethodInvocation s createMapper = StatementExpression MethodInvocation m MemberReference glob setType StatementExpression MethodInvocation m Literal "*.bz2" StatementExpression MethodInvocation m Literal "*.tar.bz2" StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal "FFFFFFFFFTTF" MemberReference results assertEquals StatementExpression Assignment MemberReference results MethodInvocation MemberReference s selectionString = StatementExpression MethodInvocation Literal "FFFFFFFFFTTF" MemberReference results assertEquals StatementExpression MethodInvocation StatementExpression MethodInvocation cleanupBed	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File append StatementExpression Assignment This MemberReference append MemberReference append =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ignoreCase StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference ignoreCase MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setIncludesfile FormalParameter ReferenceType File StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference setIncludesfile	1
MethodDeclaration Modifier private ReferenceType TransformerFactory getFactory BuildException IfStatement BinaryOperation != MemberReference tfactory Literal null BlockStatement ReturnStatement MemberReference tfactory IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference tfactory MethodInvocation TransformerFactory newInstance = BlockStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation Class MemberReference forName StatementExpression Assignment MemberReference tfactory Cast ReferenceType TransformerFactory MethodInvocation clazz newInstance = CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation tfactory This setErrorListener ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attributes size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator pair Cast ReferenceType Object MethodInvocation attributes MemberReference i elementAt StatementExpression MethodInvocation tfactory Cast ReferenceType String MemberReference ArraySelector Literal 0 pair MemberReference ArraySelector Literal 1 pair setAttribute IfStatement BinaryOperation != MemberReference uriResolver Literal null BlockStatement StatementExpression MethodInvocation tfactory MemberReference uriResolver ReturnStatement MemberReference tfactory	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env IOException IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal " MethodInvocation Commandline MemberReference cmd describeCommand MemberReference Project MSG_DEBUG log ReturnStatement MethodInvocation Runtime MethodInvocation MemberReference cmd MemberReference env exec getRuntime	0
MethodDeclaration Modifier public log FormalParameter ReferenceType Target target FormalParameter ReferenceType String message FormalParameter BasicType int msgLevel StatementExpression MethodInvocation MemberReference target MemberReference message Literal null MemberReference msgLevel log	0
MethodDeclaration Modifier public setOutputFile FormalParameter ReferenceType File outputFile StatementExpression Assignment This MemberReference outputFile MemberReference outputFile =	0
MethodDeclaration Modifier public assertLogContaining FormalParameter ReferenceType String substring LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getLog StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expecting log to contain \"" MemberReference substring Literal "\" log was \"" MemberReference Literal "\"" BinaryOperation >= MethodInvocation MemberReference substring indexOf Literal 0 assertTrue	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileNameMapper fileNameMapper StatementExpression MethodInvocation MethodInvocation MemberReference fileNameMapper add createMapper	0
MethodDeclaration Modifier public setSrcFile FormalParameter ReferenceType File sourceFile StatementExpression MethodInvocation MemberReference sourceFile	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation Literal "2" MemberReference s assertEquals	0
MethodDeclaration Modifier public ReferenceType String getClassLoadId ReturnStatement TernaryExpression BinaryOperation && BinaryOperation == This MemberReference Literal null BinaryOperation != This MemberReference Literal null BinaryOperation + MemberReference MagicNames REFID_CLASSPATH_LOADER_PREFIX This MemberReference This MemberReference	0
MethodDeclaration Modifier protected setInternalComment FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setExcludes FormalParameter ReferenceType Pattern IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference Literal null = BlockStatement StatementExpression Assignment This MemberReference ArrayCreator ReferenceType Pattern MemberReference length = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern StatementExpression Assignment MemberReference pattern MemberReference ArraySelector MemberReference i MethodInvocation getPattern MethodInvocation Literal '/' MemberReference File separatorChar replace MethodInvocation Literal '\\' MemberReference File separatorChar replace = IfStatement MethodInvocation pattern MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference pattern Literal "**" += StatementExpression Assignment This MemberReference ArraySelector MemberReference i ClassCreator ReferenceType Pattern = StatementExpression This MemberReference ArraySelector MemberReference i MethodInvocation MemberReference pattern setPattern StatementExpression This MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getSelectorList setSelectorList	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal testRedirector9Thru12	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation != MethodInvocation MethodInvocation Literal "loop in indexOf getOutput Literal - 1 assertTrue	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal executeJspCompile	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count StatementExpression MethodInvocation wrapper MemberReference buf MemberReference start MemberReference count addText	1
MethodDeclaration Modifier public FormalParameter ReferenceType srcDir IfStatement BinaryOperation == MemberReference src Literal null BlockStatement StatementExpression Assignment MemberReference src MemberReference srcDir = BlockStatement StatementExpression MethodInvocation src MemberReference srcDir append	0
MethodDeclaration setInputBuffer FormalParameter ReferenceType StringBuffer input StatementExpression Assignment MemberReference inputBuffer MemberReference input =	0
MethodDeclaration Modifier public static configure FormalParameter ReferenceType Object target FormalParameter ReferenceType AttributeList attrs FormalParameter ReferenceType Project project BuildException IfStatement BinaryOperation instanceof MemberReference target ReferenceType TypeAdapter BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType TypeAdapter MemberReference target = LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MemberReference project MethodInvocation target getClass getHelper ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MemberReference project MethodInvocation attrs MemberReference i getValue MethodInvocation project getProperties replaceProperties TryStatement StatementExpression MethodInvocation ih MemberReference project MemberReference target MethodInvocation attrs MethodInvocation MemberReference Locale US toLowerCase MemberReference i getName MemberReference value setAttribute CatchClause CatchClauseParameter BuildException be IfStatement MethodInvocation ! attrs MethodInvocation Literal "id" equals MemberReference i getName BlockStatement ThrowStatement MemberReference be	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "src/etc/testcases/core/include/basic/include.xml" configureProject StatementExpression MethodInvocation Literal "test1" Literal "from included entity" expectLog	0
MethodDeclaration Modifier public setBasedir FormalParameter ReferenceType String basedir StatementExpression MethodInvocation ClassCreator ReferenceType File MethodInvocation basedir MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace setBasedir	0
MethodDeclaration Modifier protected ReferenceType ClassLoader getClassLoaderFromJar FormalParameter ReferenceType File classjar IOException LocalVariableDeclaration ReferenceType VariableDeclarator lookupPath ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getTask StatementExpression MethodInvocation lookupPath MemberReference classjar setLocation LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation getCombinedClasspath IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation lookupPath MemberReference classpath append ReturnStatement MethodInvocation MethodInvocation getProject MethodInvocation MemberReference lookupPath createClassLoader getTask	0
MethodDeclaration Modifier public setString FormalParameter ReferenceType String string StatementExpression Assignment This MemberReference string MemberReference string =	0
MethodDeclaration FormalParameter ReferenceType Task el FormalParameter ReferenceType RuntimeConfigurable o LocalVariableDeclaration BasicType int VariableDeclarator index WhileStatement BinaryOperation >= Assignment MemberReference index MethodInvocation children MemberReference el indexOf = Literal 0 BlockStatement StatementExpression MethodInvocation children MemberReference index MemberReference o set	0
MethodDeclaration Modifier public setIncludeantruntime FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier protected addDeploymentTool FormalParameter ReferenceType EJBDeploymentTool deploymentTool StatementExpression MethodInvocation deploymentTool This setTask StatementExpression MethodInvocation deploymentTools MemberReference deploymentTool add	0
MethodDeclaration Modifier private ReferenceType InputStream getResourceStream FormalParameter ReferenceType File file FormalParameter ReferenceType String resourceName TryStatement IfStatement MethodInvocation ! file exists BlockStatement ReturnStatement Literal null IfStatement MethodInvocation file isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator resource ClassCreator ReferenceType File MemberReference file MemberReference resourceName IfStatement MethodInvocation resource exists BlockStatement ReturnStatement ClassCreator ReferenceType FileInputStream MemberReference resource BlockStatement LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile Cast ReferenceType ZipFile MethodInvocation zipFiles MemberReference file get IfStatement BinaryOperation == MemberReference zipFile Literal null BlockStatement StatementExpression Assignment MemberReference zipFile ClassCreator ReferenceType ZipFile MemberReference file = StatementExpression MethodInvocation zipFiles MemberReference file MemberReference zipFile put LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zipFile MemberReference resourceName getEntry IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement ReturnStatement MethodInvocation zipFile MemberReference entry getInputStream CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Ignoring Exception " MethodInvocation e MethodInvocation getName getClass Literal ": " MethodInvocation e getMessage Literal " reading resource " MemberReference resourceName Literal " from " MemberReference file MemberReference Project MSG_VERBOSE log ReturnStatement Literal null	1
MethodDeclaration Modifier public addText FormalParameter ReferenceType String text StatementExpression MethodInvocation buffer MemberReference text append	0
MethodDeclaration Modifier protected FormalParameter ReferenceType File dir FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType int mode IOException StatementExpression MethodInvocation MemberReference dir MemberReference zOut MemberReference vPath MemberReference mode Literal null	0
MethodDeclaration Modifier public static ReferenceType Test suite ReturnStatement ClassCreator ReferenceType Nested Literal	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation readCurrent IfStatement BinaryOperation && BinaryOperation == MemberReference result MemberReference EOF MemberReference ! eof BlockStatement StatementExpression MethodInvocation MemberReference ++ currentIndex openFile StatementExpression Assignment MemberReference result MethodInvocation readCurrent = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public FormalParameter BasicType boolean failOnError StatementExpression Assignment This MemberReference failOnError MemberReference failOnError =	0
MethodDeclaration Modifier public synchronized ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef IfStatement BinaryOperation != MethodInvocation getValue Literal null BlockStatement ThrowStatement ClassCreator ReferenceType ImmutableResourceException LocalVariableDeclaration Modifier final ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream ReturnStatement ClassCreator ReferenceType MemberReference baos MethodDeclaration Modifier public close IOException StatementExpression SuperMethodInvocation close StatementExpression This StringResource MethodInvocation TernaryExpression BinaryOperation == MemberReference encoding Literal null MethodInvocation baos toString MethodInvocation baos MemberReference encoding toString setValue	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "parameter validation" Literal "Classname must not be null." expectBuildExceptionContaining	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference pattern Literal null BlockStatement StatementExpression MethodInvocation Literal "The name attribute is required" setError	1
MethodDeclaration Modifier public forAllAttributesInGroup FormalParameter ReferenceType String template FormalParameter ReferenceType Properties attributes XDocletException LocalVariableDeclaration ReferenceType XClass VariableDeclarator cur_class MethodInvocation getCurrentClass LocalVariableDeclaration ReferenceType XMethod VariableDeclarator methods MethodInvocation MemberReference cur_class getAttributeMethods LocalVariableDeclaration ReferenceType String VariableDeclarator group MethodInvocation attributes Literal "group" MemberReference DEFAULT_GROUP getProperty ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methods length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value MemberReference ArraySelector MemberReference i MethodInvocation getDoc MethodInvocation Literal "ant.attribute" Literal "group" getTagAttributeValue methods IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value MemberReference group equals BinaryOperation && BinaryOperation == MemberReference value Literal null MethodInvocation group MemberReference DEFAULT_GROUP equals BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i methods setCurrentMethod StatementExpression MethodInvocation MemberReference template generate	1
MethodDeclaration Modifier public testNoRecreateBasedirExcludesWithoutUpdate StatementExpression MethodInvocation Literal testNoRecreate	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType URLConnection doConnectFormPost FormalParameter ReferenceType URLConnection connection BuildException IOException StatementExpression MethodInvocation Literal "Posting data as a MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator ClassCreator ReferenceType ByteArrayOutputStream Literal 256 LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out ClassCreator ReferenceType PrintWriter MemberReference StatementExpression MethodInvocation MemberReference out writePostData StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close LocalVariableDeclaration BasicType byte VariableDeclarator data MethodInvocation toByteArray ReturnStatement MethodInvocation MemberReference connection Literal "application/x-www-form-urlencoded" MethodInvocation size ClassCreator ReferenceType ByteArrayInputStream MemberReference data doConnectWithUpload	0
MethodDeclaration Modifier public synchronized appendExcludes FormalParameter ReferenceType String StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation defaultPatterns MethodInvocation MemberReference ArraySelector MemberReference i setName StatementExpression Assignment MemberReference ds Literal null =	1
MethodDeclaration Modifier public setFile FormalParameter Modifier final ReferenceType File file StatementExpression Assignment This MemberReference MemberReference file =	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileNameMapper fileNameMapper StatementExpression MethodInvocation MemberReference fileNameMapper add	0
MethodDeclaration Modifier public scan IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement StatementExpression SuperMethodInvocation scan	1
MethodDeclaration Modifier public static ReferenceType String getEncodingOption FormalParameter ReferenceType String enumValue IfStatement MethodInvocation UNICODE MemberReference enumValue equals BlockStatement ReturnStatement Literal "/unicode" IfStatement MethodInvocation UTF8 MemberReference enumValue equals BlockStatement ReturnStatement Literal ReturnStatement Literal null	0
MethodDeclaration Modifier public setStroke FormalParameter ReferenceType String col StatementExpression Assignment MemberReference stroke MemberReference col =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation != This MemberReference Literal null BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal Literal " cannot coexist with a <errormapper>" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot have > 1 <errormapper>" StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setRecursion FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType Task makeTask FormalParameter ReferenceType UnknownElement ue FormalParameter ReferenceType RuntimeConfigurable w LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation MethodInvocation MethodInvocation ue getTag createTask getProject IfStatement BinaryOperation != MemberReference task Literal null BlockStatement StatementExpression MethodInvocation task MethodInvocation getLocation setLocation StatementExpression MethodInvocation task MethodInvocation getOwningTarget setOwningTarget StatementExpression MethodInvocation task init ReturnStatement MemberReference task	0
MethodDeclaration Modifier protected executeFork BuildException IfStatement BinaryOperation == MemberReference version MemberReference BorlandDeploymentTool BAS BlockStatement StatementExpression MethodInvocation executeForkV4 IfStatement BinaryOperation == MemberReference version MemberReference BorlandDeploymentTool BES BlockStatement StatementExpression MethodInvocation executeForkV5	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration ReferenceType ReturnStatement MemberReference timestampGranularity	0
MethodDeclaration Modifier private ReferenceType ClassLoader getClassLoader FormalParameter ReferenceType ClassLoader classLoader LocalVariableDeclaration ReferenceType String VariableDeclarator buildSysclasspath MethodInvocation project MemberReference MagicNames getProperty IfStatement BinaryOperation && BinaryOperation != MethodInvocation project Literal null MethodInvocation ! BUILD_SYSCLASSPATH_ONLY MemberReference buildSysclasspath equals BlockStatement StatementExpression Assignment MemberReference classLoader MethodInvocation project = ReturnStatement MemberReference classLoader	0
MethodDeclaration Modifier public ReferenceType Enumeration getAttributes ReturnStatement MethodInvocation attributeSetters keys	0
MethodDeclaration Modifier private getCommentCommand FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference FLAG_COMMENT setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier protected zipFile FormalParameter ReferenceType File file FormalParameter ReferenceType OutputStream zOut IOException StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference file MemberReference zOut zipResource	1
MethodDeclaration addDummy StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public expectPropertyUnset FormalParameter ReferenceType String target FormalParameter ReferenceType String property StatementExpression MethodInvocation MemberReference target MemberReference property Literal null expectPropertySet	0
MethodDeclaration Modifier public FormalParameter ReferenceType String inString StatementExpression MethodInvocation MemberReference inString setEJBdtd	0
MethodDeclaration Modifier public addMergeFile FormalParameter ReferenceType String fileToMerge IfStatement BinaryOperation == MemberReference fileToMerge Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference fileToMerge addElement	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No classname defined" LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation MemberReference classname loadClass IfStatement BinaryOperation != MemberReference method Literal null BlockStatement ReturnStatement MethodInvocation MemberReference clazz isMethodFound IfStatement BinaryOperation != MemberReference field Literal null BlockStatement ReturnStatement MethodInvocation MemberReference clazz isFieldFound ThrowStatement ClassCreator ReferenceType BuildException Literal method nor field defined"	1
MethodDeclaration Modifier public setSrcResource FormalParameter ReferenceType Resource src StatementExpression MethodInvocation IfStatement MemberReference hasDir BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot set both dir and src StatementExpression Assignment This MemberReference src MemberReference src =	0
MethodDeclaration Modifier public expectPropertySet FormalParameter ReferenceType String target FormalParameter ReferenceType String property StatementExpression MethodInvocation MemberReference target MemberReference property Literal "true" expectPropertySet	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setExtension FormalParameter ReferenceType String name StatementExpression Assignment MemberReference targetExtension MemberReference name =	0
MethodDeclaration Modifier public testOnlyOneInstance LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enumeration LocalVariableDeclaration ReferenceType String VariableDeclarator list Literal "" LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator c MethodInvocation ClasspathUtils MemberReference p Cast ReferenceType Literal null Literal false TryStatement StatementExpression Assignment MemberReference enumeration MethodInvocation c Literal "org/apache/tools/ant/taskdefs/defaults.properties" getResources = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Could not get the defaults.properties resource" LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 WhileStatement MethodInvocation enumeration hasMoreElements BlockStatement StatementExpression Assignment MemberReference list BinaryOperation + BinaryOperation + MemberReference list Literal " " MethodInvocation enumeration nextElement = StatementExpression MemberReference ++ count StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Should be only one and not " MemberReference count Literal " " MemberReference list BinaryOperation == MemberReference count Literal 1 assertTrue	1
MethodDeclaration Modifier public testParagraphCharacter IOException TryStatement StatementExpression SuperMethodInvocation testParagraphCharacter StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public makeTestbed StatementExpression MethodInvocation Literal "setupfiles" executeTarget	0
MethodDeclaration Modifier public run IfStatement MemberReference BlockStatement StatementExpression This MethodInvocation run	1
MethodDeclaration Modifier protected BasicType boolean notEmpty FormalParameter ReferenceType String s ReturnStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation != MethodInvocation s length Literal 0	0
MethodDeclaration Modifier private ReferenceType String getKey FormalParameter ReferenceType String key ReturnStatement MemberReference key	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileNameMapper fileNameMapper StatementExpression MethodInvocation MemberReference fileNameMapper add	0
MethodDeclaration Modifier public setMimeType FormalParameter ReferenceType String mimeType StatementExpression Assignment This MemberReference mimeType MemberReference mimeType = StatementExpression Assignment MemberReference specified Literal true =	0
MethodDeclaration Modifier public testNoDots StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator checkprop MethodInvocation project Literal "file.wo.suf" getProperty StatementExpression MethodInvocation Literal "foo.bar" MemberReference checkprop assertEquals	0
MethodDeclaration Modifier public static BasicType int toType FormalParameter ReferenceType String type IfStatement Literal MethodInvocation MemberReference type equals "int" BlockStatement ReturnStatement MemberReference INTEGER_TYPE IfStatement Literal MethodInvocation MemberReference type equals "date" BlockStatement ReturnStatement MemberReference DATE_TYPE ReturnStatement MemberReference STRING_TYPE	0
MethodDeclaration Modifier public FormalParameter ReferenceType UnknownElement u IfStatement MemberReference presetDefed BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation u getWrapper getWrapper IfStatement BinaryOperation != MemberReference u children Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator newChildren ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation newChildren MemberReference u children addAll IfStatement BinaryOperation != MemberReference children Literal null BlockStatement StatementExpression MethodInvocation newChildren MemberReference children addAll StatementExpression Assignment MemberReference children MemberReference newChildren = StatementExpression Assignment MemberReference presetDefed Literal true =	0
MethodDeclaration Modifier public expectOutputAndError FormalParameter ReferenceType String target FormalParameter ReferenceType String output FormalParameter ReferenceType String error StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator realOutput MethodInvocation getOutput StatementExpression MethodInvocation MemberReference output MemberReference realOutput assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator realError MethodInvocation getError StatementExpression MethodInvocation MemberReference error MemberReference realError assertEquals	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected ReferenceType PrintStream getPs ReturnStatement MemberReference ps	0
MethodDeclaration Modifier public ReferenceType String getOptionExplicitParameter ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference optionExplicit Literal "+" Literal "-"	0
MethodDeclaration Modifier public test2 IOException StatementExpression MethodInvocation Literal "test2" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public setIncludesfile FormalParameter ReferenceType File includesFile BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MethodInvocation includesFile getAbsolutePath setName createIncludesFile	0
MethodDeclaration Modifier public setAssertions FormalParameter ReferenceType assertions StatementExpression Assignment This MemberReference assertions MemberReference assertions =	0
MethodDeclaration Modifier public ReferenceType Task createTask FormalParameter ReferenceType String taskType BuildException LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation MemberReference taskType createNewTask IfStatement BinaryOperation && BinaryOperation == MemberReference task Literal null MethodInvocation taskType MemberReference ANT_PROPERTY_TASK equals BlockStatement StatementExpression MethodInvocation MemberReference ANT_PROPERTY_TASK ClassReference org.apache.tools.ant.taskdefs ReferenceType Property StatementExpression Assignment MemberReference task MethodInvocation MemberReference taskType createNewTask = ReturnStatement MemberReference task	1
MethodDeclaration Modifier public setDir FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String f StatementExpression Assignment MemberReference filenameFormat MemberReference f =	0
MethodDeclaration Modifier public setPoint FormalParameter ReferenceType String p StatementExpression Assignment MemberReference point MethodInvocation Integer MemberReference p parseInt =	0
MethodDeclaration Modifier public setFolderName FormalParameter ReferenceType String folderName StatementExpression Assignment This MemberReference folderName MemberReference folderName =	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement BinaryOperation instanceof MemberReference xmlReader ReferenceType ParserAdapter	0
MethodDeclaration Modifier private ReferenceType String readChecksum FormalParameter ReferenceType File f LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator diskChecksumReader Literal null TryStatement StatementExpression Assignment MemberReference diskChecksumReader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference f = LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation format MethodInvocation diskChecksumReader readLine parse IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference result Literal null BinaryOperation == MemberReference result length Literal 0 BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "failed to find a checksum" ReturnStatement Cast ReferenceType String MemberReference ArraySelector Literal 0 result CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Couldn't read checksum file " MemberReference f MemberReference e CatchClause CatchClauseParameter ParseException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Couldn't read checksum file " MemberReference f MemberReference e StatementExpression MethodInvocation FileUtils MemberReference diskChecksumReader close	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getTypeName ReturnStatement MemberReference mTypeName	0
MethodDeclaration * The target to call on the different Set to "" to * the default * @param target the * */ Modifier public setTarget FormalParameter ReferenceType String target StatementExpression Assignment This MemberReference MemberReference target =	0
MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File file IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation file MethodInvocation Literal "taskdefs" indexOf getPath Literal 0 MethodInvocation file MethodInvocation toLowerCase MethodInvocation Literal ".xml" endsWith getPath	1
MethodDeclaration Modifier public setFilterChains FormalParameter ReferenceType Vector fchain StatementExpression Assignment MemberReference filterChains MemberReference fchain =	1
MethodDeclaration Modifier public maybeConfigure BuildException IfStatement MemberReference ! invalid BlockStatement IfStatement BinaryOperation != MemberReference wrapper Literal null BlockStatement StatementExpression MethodInvocation wrapper MethodInvocation getProject maybeConfigure BlockStatement StatementExpression MethodInvocation getReplacement	0
MethodDeclaration Modifier public setTask FormalParameter ReferenceType ServerDeploy task StatementExpression Assignment This MemberReference task MemberReference task =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean setrest StatementExpression Assignment This MemberReference MemberReference setrest =	0
MethodDeclaration Modifier private processComment FormalParameter Modifier final ReferenceType String line LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator lineSeparator MethodInvocation System Literal "line.separator" getProperty IfStatement MethodInvocation line Literal equals BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator end BinaryOperation - MethodInvocation length MethodInvocation lineSeparator length StatementExpression Assignment MemberReference MethodInvocation Literal 0 MemberReference end substring = StatementExpression MethodInvocation StatementExpression Assignment MemberReference status MemberReference = IfStatement MethodInvocation line Literal "----------------------------" equals BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator end BinaryOperation - MethodInvocation length MethodInvocation lineSeparator length StatementExpression Assignment MemberReference MethodInvocation Literal 0 MemberReference end substring = StatementExpression Assignment MemberReference status MemberReference GET_PREVIOUS_REV = BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference line MemberReference lineSeparator +=	1
MethodDeclaration Modifier public setExtraOptions FormalParameter ReferenceType String extraOptions StatementExpression Assignment This MemberReference extraOptions MemberReference extraOptions =	0
MethodDeclaration Modifier public ReferenceType File getWorkingDirectory ReturnStatement TernaryExpression BinaryOperation == MemberReference workingDirectory Literal null ClassCreator ReferenceType File MemberReference antWorkingDirectory MemberReference workingDirectory	0
MethodDeclaration Modifier public ReferenceType String getFileExtension ReturnStatement Literal ".java"	0
MethodDeclaration Modifier public ReferenceType String getValues ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference CMP2_0	0
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String name SAXException StatementExpression MethodInvocation helperImpl.parser MemberReference parentHandler setDocumentHandler	1
MethodDeclaration Modifier private writeExternalArgs FormalParameter ReferenceType Commandline toExecute LocalVariableDeclaration ReferenceType File VariableDeclarator optionsTmpFile Literal null LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator optionsListWriter Literal null TryStatement StatementExpression Assignment MemberReference optionsTmpFile MethodInvocation FILE_UTILS Literal "javadocOptions" Literal "" Literal null createTempFile = StatementExpression MethodInvocation optionsTmpFile deleteOnExit LocalVariableDeclaration ReferenceType String VariableDeclarator listOpt MethodInvocation toExecute getArguments StatementExpression MethodInvocation toExecute clearArgs StatementExpression MethodInvocation toExecute MethodInvocation BinaryOperation + Literal "@" MethodInvocation optionsTmpFile getAbsolutePath setValue createArgument StatementExpression Assignment MemberReference optionsListWriter ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MethodInvocation optionsTmpFile getAbsolutePath Literal true = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference listOpt length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator string MemberReference ArraySelector MemberReference i listOpt IfStatement MethodInvocation string Literal "-J-" startsWith BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation MemberReference string setValue createArgument BlockStatement IfStatement MethodInvocation string Literal "-" startsWith BlockStatement StatementExpression MethodInvocation optionsListWriter MemberReference string print StatementExpression MethodInvocation optionsListWriter Literal " " print BlockStatement StatementExpression MethodInvocation optionsListWriter MethodInvocation MemberReference string quoteString println StatementExpression MethodInvocation optionsListWriter close CatchClause CatchClauseParameter IOException ex IfStatement BinaryOperation != MemberReference optionsTmpFile Literal null BlockStatement StatementExpression MethodInvocation optionsTmpFile delete ThrowStatement ClassCreator ReferenceType BuildException Literal "Error creating or writing temporary file for javadoc options" MemberReference ex MethodInvocation getLocation StatementExpression MethodInvocation FILE_UTILS MemberReference optionsListWriter close	1
MethodDeclaration Modifier public copyUserProperties FormalParameter ReferenceType Project other LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation userProperties keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e nextElement IfStatement MethodInvocation inheritedProperties MemberReference arg containsKey BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation userProperties MemberReference arg get StatementExpression MethodInvocation other MethodInvocation arg toString MethodInvocation value toString setUserProperty	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference DEFAULT	0
MethodDeclaration Modifier public send TryStatement LocalVariableDeclaration ReferenceType MailMessage VariableDeclarator mailMessage ClassCreator ReferenceType MailMessage MemberReference host MemberReference port StatementExpression MethodInvocation mailMessage MethodInvocation from toString from LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e StatementExpression Assignment MemberReference e MethodInvocation replyToList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation mailMessage MethodInvocation e MethodInvocation toString nextElement StatementExpression Assignment MemberReference e MethodInvocation toList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation mailMessage MethodInvocation e MethodInvocation toString nextElement to StatementExpression Assignment MemberReference e MethodInvocation ccList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation mailMessage MethodInvocation e MethodInvocation toString nextElement cc StatementExpression Assignment MemberReference e MethodInvocation bccList elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation mailMessage MethodInvocation e MethodInvocation toString nextElement bcc IfStatement BinaryOperation != MemberReference subject Literal null BlockStatement StatementExpression MethodInvocation mailMessage MemberReference subject setSubject StatementExpression MethodInvocation mailMessage Literal "Date" MethodInvocation getDate setHeader IfStatement BinaryOperation != MethodInvocation message getCharset Literal null BlockStatement StatementExpression MethodInvocation mailMessage Literal "Content-Type" BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation message getMimeType Literal "; charset=\"" MethodInvocation message getCharset Literal "\"" setHeader BlockStatement StatementExpression MethodInvocation mailMessage Literal "Content-Type" MethodInvocation message getMimeType setHeader StatementExpression Assignment MemberReference e MethodInvocation headers elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Header VariableDeclarator h Cast ReferenceType Header MethodInvocation e nextElement StatementExpression MethodInvocation mailMessage MethodInvocation h getName MethodInvocation h getValue setHeader LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out MethodInvocation mailMessage getPrintStream StatementExpression MethodInvocation message MemberReference out print StatementExpression Assignment MemberReference e MethodInvocation files elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation Cast ReferenceType File MethodInvocation e nextElement MemberReference out attach StatementExpression MethodInvocation mailMessage sendAndClose CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "IO error sending mail" MemberReference ioe	0
MethodDeclaration Modifier public ReferenceType ImplementationSpecificArgument createArg LocalVariableDeclaration ReferenceType ImplementationSpecificArgument VariableDeclarator arg ClassCreator ReferenceType ImplementationSpecificArgument StatementExpression MethodInvocation facade MemberReference arg addImplementationArgument ReturnStatement MemberReference arg	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType File getSourceBase ReturnStatement MemberReference sourceBase	0
MethodDeclaration Modifier protected ReferenceType String getProcVersion FormalParameter ReferenceType String classNameImpl BuildException TryStatement IfStatement BinaryOperation || MethodInvocation classNameImpl BinaryOperation + MemberReference APAC Literal "processor.TransformerFactoryImpl" equals MethodInvocation classNameImpl BinaryOperation + MemberReference APAC Literal "xslt.XSLTProcessorFactory" equals BlockStatement ReturnStatement MethodInvocation BinaryOperation + MemberReference APAC Literal "processor.XSLProcessorVersion" getXalanVersion IfStatement MethodInvocation classNameImpl BinaryOperation + MemberReference APAC Literal "xsltc.trax.TransformerFactoryImpl" equals BlockStatement ReturnStatement MethodInvocation BinaryOperation + MemberReference APAC Literal "xsltc.ProcessorVersion" getXSLTCVersion IfStatement MethodInvocation classNameImpl BinaryOperation + MemberReference SPAC Literal "internal.xsltc.trax.TransformerFactoryImpl" equals BlockStatement ReturnStatement MethodInvocation BinaryOperation + MemberReference SPAC Literal "internal.xsltc.ProcessorVersion" getXSLTCVersion ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Could not find a valid processor version" Literal " implementation from " MemberReference classNameImpl CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not find processor version " Literal "implementation" MemberReference e	1
MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException LocalVariableDeclaration BasicType int VariableDeclarator offset MemberReference off LocalVariableDeclaration BasicType int VariableDeclarator blockStartOffset MemberReference offset LocalVariableDeclaration BasicType int VariableDeclarator remaining MemberReference len LocalVariableDeclaration ReferenceType VariableDeclarator bufferInfo MethodInvocation getBufferInfo WhileStatement BinaryOperation > MemberReference remaining Literal 0 BlockStatement WhileStatement BinaryOperation && BinaryOperation && BinaryOperation > MemberReference remaining Literal 0 BinaryOperation != MemberReference ArraySelector MemberReference offset b MemberReference LF BinaryOperation != MemberReference ArraySelector MemberReference offset b MemberReference CR BlockStatement StatementExpression MemberReference ++ offset StatementExpression MemberReference -- remaining LocalVariableDeclaration BasicType int VariableDeclarator blockLength BinaryOperation - MemberReference offset MemberReference blockStartOffset IfStatement BinaryOperation > MemberReference blockLength Literal 0 BlockStatement StatementExpression MethodInvocation bufferInfo.buffer MemberReference b MemberReference blockStartOffset MemberReference blockLength write WhileStatement BinaryOperation && BinaryOperation > MemberReference remaining Literal 0 BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference offset b MemberReference LF BinaryOperation == MemberReference ArraySelector MemberReference offset b MemberReference CR BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference offset b write StatementExpression MemberReference ++ offset StatementExpression MemberReference -- remaining StatementExpression Assignment MemberReference blockStartOffset MemberReference offset =	1
MethodDeclaration Modifier public removeListener FormalParameter ReferenceType TestRunListener listener StatementExpression MethodInvocation dispatcher MemberReference listener removeListener	0
MethodDeclaration Modifier public setRecordState FormalParameter ReferenceType Boolean state IfStatement BinaryOperation != MemberReference state Literal null BlockStatement StatementExpression MethodInvocation flush StatementExpression Assignment MemberReference record MethodInvocation state booleanValue =	0
MethodDeclaration Modifier public testModificationTests LocalVariableDeclaration BasicType long VariableDeclarator firstTime MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator secondTime BinaryOperation + MemberReference firstTime Literal 60000 StatementExpression MethodInvocation Literal "older source files are up to date" MethodInvocation FILE_UTILS MemberReference firstTime MemberReference secondTime isUpToDate assertTrue StatementExpression MethodInvocation Literal "newer source files are no up to date" MethodInvocation FILE_UTILS MemberReference secondTime MemberReference firstTime isUpToDate assertFalse StatementExpression MethodInvocation Literal "-1 dest implies nonexistence" MethodInvocation ! FILE_UTILS MemberReference firstTime Literal - 1L isUpToDate assertTrue	1
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname = IfStatement MethodInvocation XML_FORMATTER_CLASS_NAME MemberReference classname equals BlockStatement StatementExpression MethodInvocation Literal ".xml" setExtension IfStatement MethodInvocation PLAIN_FORMATTER_CLASS_NAME MemberReference classname equals BlockStatement StatementExpression MethodInvocation Literal ".txt" setExtension IfStatement MethodInvocation BRIEF_FORMATTER_CLASS_NAME MemberReference classname equals BlockStatement StatementExpression MethodInvocation Literal ".txt" setExtension	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation noChildrenAllowed IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType PropertyResource VariableDeclarator r ClassCreator ReferenceType PropertyResource MethodInvocation getProject Literal "bar" StatementExpression MethodInvocation MemberReference r StatementExpression MethodInvocation Literal "bar" Literal "foo" assertPropertyEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType WhenEmpty we StatementExpression Assignment MemberReference emptyBehavior MethodInvocation we getValue =	0
MethodDeclaration Modifier public setCachefile FormalParameter ReferenceType File file StatementExpression Assignment MemberReference cachefile MemberReference file =	0
MethodDeclaration Modifier public testPrefixSuccess StatementExpression MethodInvocation Literal "prefix.success" executeTarget StatementExpression MethodInvocation Literal "80" MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public NotestFile Exception StatementExpression MethodInvocation Literal Literal "error on file URL" MemberReference ERROR_NO_HOST_IN_URL expectBuildExceptionContaining	1
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType String classpath StatementExpression Assignment This MemberReference classpath MemberReference classpath =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference extensionName	0
MethodDeclaration Modifier protected ReferenceType String getExtraOptionsParameter IfStatement BinaryOperation && BinaryOperation != MemberReference extraOptions Literal null BinaryOperation != MethodInvocation extraOptions length Literal 0 BlockStatement ReturnStatement MemberReference extraOptions BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal "REPLACED" indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public ReferenceType String getLog ReturnStatement MemberReference mLog	0
MethodDeclaration Modifier public copyUserProperties FormalParameter ReferenceType Project other LocalVariableDeclaration ReferenceType PropertyHelper VariableDeclarator ph MethodInvocation PropertyHelper This getPropertyHelper StatementExpression MethodInvocation ph MemberReference other copyUserProperties	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation facade	0
MethodDeclaration Modifier private static ReferenceType File getKeyFile FormalParameter ReferenceType File f ReturnStatement TernaryExpression BinaryOperation == MemberReference f Literal null MemberReference NULL_FILE_PLACEHOLDER MemberReference f	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference property Literal null BinaryOperation == MethodInvocation property length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "no property specified" IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement StatementExpression Assignment MemberReference destDir MethodInvocation MethodInvocation Literal "." resolveFile getProject = LocalVariableDeclaration ReferenceType File VariableDeclarator tfile MethodInvocation FILE_UTILS MemberReference prefix MemberReference suffix MemberReference destDir MemberReference deleteOnExit createTempFile StatementExpression MethodInvocation MethodInvocation MemberReference property MethodInvocation tfile toString setNewProperty getProject	1
MethodDeclaration Modifier public setDestFile FormalParameter ReferenceType File file StatementExpression Assignment MemberReference outputFile MemberReference file =	0
MethodDeclaration Modifier public addDepth FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier private handle FormalParameter ReferenceType String msg StatementExpression MethodInvocation ClassCreator ReferenceType BuildException MemberReference msg handle	0
MethodDeclaration Modifier public FormalParameter ReferenceType String verifyProperty StatementExpression Assignment This MemberReference verifyProperty MemberReference verifyProperty =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Resources rc IfStatement BinaryOperation != MethodInvocation rc size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The style element must be specified" Literal " with exactly one resource." StatementExpression MethodInvocation Cast ReferenceType Resource MethodInvocation rc MethodInvocation next iterator	0
MethodDeclaration Modifier public ReferenceType Object create FormalParameter ReferenceType Project project ReturnStatement This	1
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String desc StatementExpression Assignment MemberReference description MemberReference desc =	0
MethodDeclaration Modifier public setDynamicAttribute FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qName FormalParameter ReferenceType String value IfStatement MethodInvocation uri Literal "" equals BlockStatement StatementExpression MethodInvocation e MemberReference name MemberReference value setAttribute BlockStatement StatementExpression MethodInvocation e MemberReference uri MemberReference qName MemberReference value	1
MethodDeclaration Modifier private sendOutAndErr FormalParameter ReferenceType String out FormalParameter ReferenceType String err ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation formatters size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType JUnitResultFormatter VariableDeclarator formatter Cast ReferenceType JUnitResultFormatter MethodInvocation formatters MemberReference i elementAt StatementExpression MethodInvocation formatter MemberReference out StatementExpression MethodInvocation formatter MemberReference err	1
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public BasicType boolean getVerify ReturnStatement MemberReference verify	0
MethodDeclaration Modifier public initProperties BuildException StatementExpression MethodInvocation StatementExpression MethodInvocation setSystemProperties StatementExpression MethodInvocation MemberReference MagicNames MethodInvocation Main setPropertyInternal StatementExpression MethodInvocation setAntLib	0
MethodDeclaration Modifier public testWithParams Exception StatementExpression MethodInvocation Literal "testWithParams" Literal "key1=value1,key2=value2" expectLogContaining LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html" StatementExpression MethodInvocation Literal "No index.html present. Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration Modifier public setSrcResource FormalParameter ReferenceType Resource src IfStatement MethodInvocation src isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the source can't be a directory" IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType FileResource MemberReference src = IfStatement MethodInvocation ! supportsNonFileResources BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only resources are" Literal " supported." StatementExpression Assignment This MemberReference src MemberReference src =	0
MethodDeclaration Modifier private filesetManifest FormalParameter ReferenceType File file FormalParameter ReferenceType InputStream is IOException IfStatement BinaryOperation && BinaryOperation != MemberReference manifestFile Literal null MethodInvocation manifestFile MemberReference file equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found manifest " MemberReference file MemberReference Project MSG_VERBOSE log TryStatement IfStatement BinaryOperation != MemberReference is Literal null BlockStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr IfStatement BinaryOperation == MemberReference manifestEncoding Literal null BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference is = BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference is MemberReference manifestEncoding = StatementExpression Assignment MemberReference manifest MethodInvocation MemberReference isr getManifest = BlockStatement StatementExpression Assignment MemberReference manifest MethodInvocation MemberReference file getManifest = CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unsupported encoding while reading " Literal "manifest: " MethodInvocation e getMessage MemberReference e IfStatement BinaryOperation && BinaryOperation != MemberReference filesetManifestConfig Literal null MethodInvocation ! filesetManifestConfig MethodInvocation Literal "skip" equals getValue BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found manifest to merge in file " MemberReference file MemberReference Project MSG_VERBOSE log TryStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator newManifest Literal null IfStatement BinaryOperation != MemberReference is Literal null BlockStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr IfStatement BinaryOperation == MemberReference manifestEncoding Literal null BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference is = BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference is MemberReference manifestEncoding = StatementExpression Assignment MemberReference newManifest MethodInvocation MemberReference isr getManifest = BlockStatement StatementExpression Assignment MemberReference newManifest MethodInvocation MemberReference file getManifest = IfStatement BinaryOperation == MemberReference filesetManifest Literal null BlockStatement StatementExpression Assignment MemberReference filesetManifest MemberReference newManifest = BlockStatement StatementExpression MethodInvocation filesetManifest MemberReference newManifest merge CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unsupported encoding while reading " Literal "manifest: " MethodInvocation e getMessage MemberReference e CatchClause CatchClauseParameter ManifestException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Manifest in file " MemberReference file Literal " is invalid: " MethodInvocation e getMessage MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid MemberReference e MethodInvocation getLocation BlockStatement	1
MethodDeclaration Modifier public setEndToken FormalParameter ReferenceType String endToken StatementExpression Assignment This MemberReference endToken MemberReference endToken =	0
MethodDeclaration * Creates a stream pumper to copy the given input stream to * given output stream. Used for standard * @since Ant */ ReferenceType StreamPumper createInputPump FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter BasicType boolean closeWhenExhausted LocalVariableDeclaration ReferenceType StreamPumper VariableDeclarator pumper ClassCreator ReferenceType StreamPumper MemberReference is MemberReference os MemberReference closeWhenExhausted StatementExpression MethodInvocation pumper Literal true setAutoflush ReturnStatement MemberReference pumper	0
MethodDeclaration Modifier public testText StatementExpression MethodInvocation Literal "testText" Literal "it is required to fail Literal "testText" expectSpecificBuildException	0
MethodDeclaration Modifier public execute ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation tasks iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue Cast ReferenceType UnknownElement MethodInvocation i next StatementExpression MethodInvocation MethodInvocation ue getLocation setLocation StatementExpression MethodInvocation ue maybeConfigure LocalVariableDeclaration ReferenceType Object VariableDeclarator configuredObject MethodInvocation ue getRealThing IfStatement BinaryOperation == MemberReference configuredObject Literal null BlockStatement ContinueStatement IfStatement BinaryOperation instanceof MemberReference configuredObject ReferenceType AntlibDefinition BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Invalid task in antlib " MethodInvocation ue getTag Literal " " MethodInvocation configuredObject getClass Literal " does not " Literal "extend org.apache.tools.ant.taskdefs.AntlibDefinition" LocalVariableDeclaration ReferenceType AntlibDefinition VariableDeclarator def Cast ReferenceType AntlibDefinition MemberReference configuredObject StatementExpression MethodInvocation def MemberReference uri StatementExpression MethodInvocation def MethodInvocation getClassLoader setAntlibClassLoader StatementExpression MethodInvocation def init StatementExpression MethodInvocation def execute	1
MethodDeclaration Modifier protected createProcessErrorPump FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os StatementExpression Assignment MemberReference MethodInvocation MemberReference is MemberReference os createPump =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference resources TernaryExpression BinaryOperation == MemberReference resources Literal null ClassCreator ReferenceType MemberReference resources = StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "." setBasedir	0
MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp MemberReference remotedir makeRemoteDir	0
MethodDeclaration Modifier public static BasicType long getValue FormalParameter BasicType byte bytes FormalParameter BasicType int offset LocalVariableDeclaration BasicType long VariableDeclarator value BinaryOperation & BinaryOperation << MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 3 bytes Literal 24 Literal 0xFF000000L StatementExpression Assignment MemberReference value BinaryOperation & BinaryOperation << MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 2 bytes Literal 16 Literal 0xFF0000 += StatementExpression Assignment MemberReference value BinaryOperation & BinaryOperation << MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 bytes Literal 8 Literal 0xFF00 += StatementExpression Assignment MemberReference value BinaryOperation & MemberReference ArraySelector MemberReference offset bytes Literal 0xFF += ReturnStatement MemberReference value	1
MethodDeclaration Modifier public addZipfileset FormalParameter ReferenceType ZipFileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public BasicType boolean containsValue FormalParameter ReferenceType Object value ReturnStatement MethodInvocation MemberReference value contains	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator toExecute ClassCreator ReferenceType Commandline StatementExpression MethodInvocation toExecute TernaryExpression BinaryOperation == MemberReference rpmBuildCommand Literal null MethodInvocation guessRpmBuildCommand MemberReference rpmBuildCommand setExecutable IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation BinaryOperation + Literal "_topdir" MemberReference setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference command setLine createArgument IfStatement MemberReference cleanBuildDir BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "--clean" setValue createArgument IfStatement MemberReference removeSpec BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "--rmspec" setValue createArgument IfStatement MemberReference removeSource BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "--rmsource" setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation BinaryOperation + Literal "SPECS/" MemberReference specFile setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator streamhandler Literal null LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator outputstream Literal null LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator errorstream Literal null IfStatement BinaryOperation && BinaryOperation == MemberReference error Literal null BinaryOperation == MemberReference output Literal null BlockStatement IfStatement MemberReference ! quiet BlockStatement StatementExpression Assignment MemberReference streamhandler ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN = BlockStatement StatementExpression Assignment MemberReference streamhandler ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_DEBUG MemberReference Project MSG_DEBUG = BlockStatement IfStatement BinaryOperation != MemberReference output Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType BufferedOutputStream VariableDeclarator bos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference output StatementExpression Assignment MemberReference outputstream ClassCreator ReferenceType PrintStream MemberReference bos = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation IfStatement MemberReference ! quiet BlockStatement StatementExpression Assignment MemberReference outputstream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO = BlockStatement StatementExpression Assignment MemberReference outputstream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_DEBUG = IfStatement BinaryOperation != MemberReference error Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType BufferedOutputStream VariableDeclarator bos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference error StatementExpression Assignment MemberReference errorstream ClassCreator ReferenceType PrintStream MemberReference bos = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation IfStatement MemberReference ! quiet BlockStatement StatementExpression Assignment MemberReference errorstream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_WARN = BlockStatement StatementExpression Assignment MemberReference errorstream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_DEBUG = StatementExpression Assignment MemberReference streamhandler ClassCreator ReferenceType PumpStreamHandler MemberReference outputstream MemberReference errorstream = LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe MethodInvocation MemberReference toExecute MemberReference streamhandler TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Building the RPM based on the " MemberReference specFile Literal " file" log LocalVariableDeclaration BasicType int VariableDeclarator returncode MethodInvocation exe execute IfStatement MethodInvocation Execute MemberReference returncode isFailure BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "'" MethodInvocation toExecute getExecutable Literal "' failed with exit code " MemberReference returncode IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_ERR log CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference outputstream close StatementExpression MethodInvocation FileUtils MemberReference errorstream close	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public testVerifyJar StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType ClassLoader ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal implicitAfter implicit" expectLog	0
MethodDeclaration Modifier public setURL FormalParameter ReferenceType String u StatementExpression Assignment This MemberReference source MemberReference u =	0
MethodDeclaration Modifier protected setInternalAutoResponse FormalParameter Modifier final ReferenceType String autoResponse StatementExpression Assignment This MemberReference autoResponse MemberReference autoResponse =	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal "test3" executeTarget	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal "testSchemaBad" executeTarget StatementExpression MethodInvocation Literal "Should throw BuildException because Schema fail StatementExpression MethodInvocation Literal "testSchemaBad" Literal "Bad Schema Literal "not a valid XML document" expectBuildExceptionContaining CatchClause CatchClauseParameter BuildException e IfStatement BinaryOperation || MethodInvocation e MethodInvocation Literal " doesn't recognize feature http://apache.org/xml/features/validation/schema" endsWith getMessage MethodInvocation e MethodInvocation Literal " doesn't support feature http://apache.org/xml/features/validation/schema" endsWith getMessage BlockStatement StatementExpression MethodInvocation System.err Literal " skipped, parser doesn't support schema" println BlockStatement StatementExpression MethodInvocation BinaryOperation > MethodInvocation e MethodInvocation Literal "not a valid XML document" indexOf getMessage Literal - 1 assertTrue	0
MethodDeclaration Modifier public final setEncoding FormalParameter Modifier final ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public setConfig FormalParameter ReferenceType File f StatementExpression Assignment MemberReference config MethodInvocation f toString =	0
MethodDeclaration Modifier public cc FormalParameter ReferenceType String cc IOException StatementExpression MethodInvocation MemberReference cc sendRcpt StatementExpression This MemberReference cc MethodInvocation MemberReference cc addElement	0
MethodDeclaration Modifier public setAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType Object value LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator pair ArrayCreator ReferenceType Object ArrayInitializer MemberReference name MemberReference value StatementExpression MethodInvocation attributes MemberReference pair addElement	0
MethodDeclaration execute Exception LocalVariableDeclaration ReferenceType String VariableDeclarator systemId MethodInvocation caller getStylesheetSystemId LocalVariableDeclaration ReferenceType Source VariableDeclarator xslSrc ClassCreator ReferenceType StreamSource MemberReference systemId LocalVariableDeclaration ReferenceType Transformer VariableDeclarator tformer MethodInvocation tfactory MemberReference xslSrc newTransformer LocalVariableDeclaration ReferenceType Source VariableDeclarator xmlSrc ClassCreator ReferenceType DOMSource MemberReference caller document LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os MethodInvocation getOutputStream TryStatement StatementExpression MethodInvocation tformer Literal "output.dir" MethodInvocation getAbsolutePath setParameter LocalVariableDeclaration ReferenceType Result VariableDeclarator result ClassCreator ReferenceType StreamResult MemberReference os StatementExpression MethodInvocation tformer MemberReference xmlSrc MemberReference result transform StatementExpression MethodInvocation os close	0
MethodDeclaration Modifier public close IOException IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef ClassCreator ReferenceType Iterator FieldDeclaration Modifier private BasicType boolean VariableDeclarator done Literal false MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MemberReference ! done MethodDeclaration Modifier public ReferenceType Object next IfStatement MemberReference done BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException StatementExpression Assignment MemberReference done Literal true = ReturnStatement This Resource MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean debugTokenManager StatementExpression MethodInvocation optionalAttrs MemberReference TernaryExpression MemberReference debugTokenManager MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType createAttachments IfStatement BinaryOperation == MemberReference attachments Literal null BlockStatement StatementExpression Assignment MemberReference attachments ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation attachments createPath	0
MethodDeclaration Modifier public testFileSetIsNoDirSet LocalVariableDeclaration ReferenceType DirSet VariableDeclarator ds Cast ReferenceType DirSet MethodInvocation getInstance StatementExpression MethodInvocation ds MethodInvocation getProject setProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MethodInvocation getProject setProject StatementExpression MethodInvocation MethodInvocation Literal "dummy" MemberReference fs getProject StatementExpression MethodInvocation ds ClassCreator ReferenceType MethodInvocation getProject Literal "dummy" setRefid TryStatement StatementExpression MethodInvocation ds MethodInvocation getProject getDir StatementExpression MethodInvocation Literal created from FileSet reference" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal "dummy doesn\'t a DirSet" MethodInvocation e getMessage assertEquals StatementExpression Assignment MemberReference ds Cast ReferenceType DirSet MethodInvocation getInstance = StatementExpression MethodInvocation ds MethodInvocation getProject setProject StatementExpression MethodInvocation MethodInvocation Literal "dummy2" MemberReference ds getProject StatementExpression MethodInvocation fs ClassCreator ReferenceType MethodInvocation getProject Literal "dummy2" setRefid TryStatement StatementExpression MethodInvocation fs MethodInvocation getProject getDir StatementExpression MethodInvocation Literal created from DirSet reference" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal doesn\'t a FileSet" MethodInvocation e getMessage assertEquals	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer Literal "soscmd" Literal "-command" Literal Literal "-file" MemberReference SRC_FILE Literal Literal Literal "-server" MemberReference SOS_SERVER_PATH Literal "-name" MemberReference SOS_USERNAME Literal "-password" MemberReference SOS_PASSWORD Literal "-database" MemberReference VSS_SERVER_PATH Literal "-project" MemberReference DS_VSS_PROJECT_PATH Literal "-verbose" Literal "-nocompress" Literal "-nocache" Literal "-workdir" BinaryOperation + BinaryOperation + MethodInvocation project MethodInvocation getAbsolutePath getBaseDir MemberReference File separator MemberReference LOCAL_PATH LocalVariableDeclaration ReferenceType SOSGet VariableDeclarator sosGet ClassCreator ReferenceType SOSGet StatementExpression MethodInvocation sosGet MemberReference project setProject StatementExpression MethodInvocation sosGet MemberReference VSS_SERVER_PATH setVssServerPath StatementExpression MethodInvocation sosGet MemberReference SOS_SERVER_PATH setSosServerPath StatementExpression MethodInvocation sosGet MemberReference VSS_PROJECT_PATH setProjectPath StatementExpression MethodInvocation sosGet MemberReference SRC_FILE setFile StatementExpression MethodInvocation sosGet MemberReference SOS_USERNAME setUsername StatementExpression MethodInvocation sosGet MemberReference SOS_PASSWORD StatementExpression MethodInvocation sosGet MemberReference setVersion StatementExpression MethodInvocation sosGet ClassCreator ReferenceType MemberReference project MemberReference LOCAL_PATH setLocalPath StatementExpression MethodInvocation sosGet Literal true setNoCache StatementExpression MethodInvocation sosGet Literal true setNoCompress StatementExpression MethodInvocation sosGet Literal true setVerbose StatementExpression MethodInvocation sosGet Literal true setRecursive StatementExpression Assignment MemberReference commandline MethodInvocation sosGet buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation checkParameters StatementExpression MethodInvocation resetFileLists LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation src list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcDir MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i list resolveFile getProject IfStatement MethodInvocation ! srcDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "srcdir \"" MethodInvocation srcDir getPath Literal "\" does not exist!" MethodInvocation getLocation LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds This MethodInvocation MemberReference srcDir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression MethodInvocation MemberReference srcDir TernaryExpression BinaryOperation != MemberReference destDir Literal null MemberReference destDir MemberReference srcDir MemberReference files scanDir StatementExpression MethodInvocation compile	1
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Thread BinaryOperation * Literal 5 Literal 1000 sleep CatchClause CatchClauseParameter InterruptedException e	0
MethodDeclaration Modifier public ReferenceType String readFully FormalParameter ReferenceType Reader rdr IOException ReturnStatement MethodInvocation FileUtils MemberReference rdr MemberReference bufferSize readFully	0
MethodDeclaration Modifier public FormalParameter ReferenceType String dest StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The setDest(String) method has been deprecated." Literal " Use setDest(File) instead." log StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference dest resolveFile getProject	1
MethodDeclaration Modifier public flush IOException SynchronizedStatement This OutputStreamFunneler StatementExpression MethodInvocation dieIfClosed StatementExpression MethodInvocation out flush	1
MethodDeclaration Modifier public setIncludeFileNames FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator url MethodInvocation project Literal getProperty StatementExpression MethodInvocation Literal MemberReference url assertEquals	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier private ReferenceType String getFileString FormalParameter ReferenceType String filename IOException LocalVariableDeclaration ReferenceType Reader VariableDeclarator r Literal null TryStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType FileReader MethodInvocation MethodInvocation MemberReference filename resolveFile getProject = ReturnStatement MethodInvocation FileUtils MemberReference r readFully StatementExpression MethodInvocation FileUtils MemberReference r close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using external apt compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator apt MethodInvocation getApt LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation cmd MethodInvocation apt getAptExecutable setExecutable StatementExpression MethodInvocation MemberReference cmd setupModernJavacCommandlineSwitches StatementExpression MethodInvocation AptCompilerAdapter MemberReference apt MemberReference cmd LocalVariableDeclaration BasicType int VariableDeclarator firstFileName MethodInvocation cmd size StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement BinaryOperation == Literal 0 MethodInvocation MethodInvocation cmd getCommandline MemberReference firstFileName Literal true executeExternalCompile	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType TailFilter VariableDeclarator newFilter ClassCreator ReferenceType TailFilter MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation getLines StatementExpression MethodInvocation newFilter MethodInvocation getSkip setSkip StatementExpression MethodInvocation newFilter Literal true setInitialized ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public FormalParameter ReferenceType String change StatementExpression Assignment This MemberReference change MemberReference change =	0
MethodDeclaration Modifier private processDate FormalParameter Modifier final ReferenceType String line IfStatement MethodInvocation line Literal startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endOfDateIndex MethodInvocation line Literal ';' indexOf StatementExpression Assignment MemberReference date MethodInvocation line Literal MethodInvocation length "date: " MemberReference endOfDateIndex substring = LocalVariableDeclaration BasicType int VariableDeclarator startOfAuthorIndex MethodInvocation line Literal "author: " BinaryOperation + MemberReference endOfDateIndex Literal 1 indexOf LocalVariableDeclaration BasicType int VariableDeclarator endOfAuthorIndex MethodInvocation line Literal ';' BinaryOperation + MemberReference startOfAuthorIndex Literal 1 indexOf StatementExpression Assignment MemberReference author MethodInvocation line BinaryOperation + Literal MethodInvocation length "author: " MemberReference startOfAuthorIndex MemberReference endOfAuthorIndex substring = StatementExpression Assignment MemberReference status MemberReference GET_COMMENT = StatementExpression Assignment MemberReference Literal "" =	0
MethodDeclaration Modifier public ReferenceType Directory getParent ReturnStatement MemberReference parent	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one MethodInvocation getLocation StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference mapper	0
MethodDeclaration Modifier public setPort FormalParameter BasicType int value StatementExpression Assignment MemberReference port MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean getNoWarn ReturnStatement MemberReference mNwarn	0
MethodDeclaration Modifier public synchronized ReferenceType String getEncoding ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StripLineBreaks stripLineBreaks StatementExpression MethodInvocation filterReaders MemberReference stripLineBreaks addElement	0
MethodDeclaration Modifier public ReferenceType Task getTask ReturnStatement MemberReference task	0
MethodDeclaration Modifier public ReferenceType String getCommandline LocalVariableDeclaration ReferenceType List VariableDeclarator commands ClassCreator ReferenceType LinkedList LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator list MethodInvocation commands listIterator StatementExpression MethodInvocation MemberReference list addCommandToList LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MethodInvocation commands size ReturnStatement Cast ReferenceType String MethodInvocation commands MemberReference result toArray	0
MethodDeclaration * @see */ Modifier public messageLogged FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator categoryObject MethodInvocation event getTask LocalVariableDeclaration ReferenceType String VariableDeclarator categoryString Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator categoryDetail Literal null IfStatement BinaryOperation == MemberReference categoryObject Literal null BlockStatement StatementExpression Assignment MemberReference categoryObject MethodInvocation event getTarget = IfStatement BinaryOperation == MemberReference categoryObject Literal null BlockStatement StatementExpression Assignment MemberReference categoryObject MethodInvocation event getProject = StatementExpression Assignment MemberReference categoryString MemberReference = StatementExpression Assignment MemberReference categoryDetail MethodInvocation event MethodInvocation getName getProject = BlockStatement StatementExpression Assignment MemberReference categoryString MemberReference = StatementExpression Assignment MemberReference categoryDetail MethodInvocation event MethodInvocation getName getTarget = BlockStatement IfStatement BinaryOperation != MethodInvocation event getTarget Literal null BlockStatement StatementExpression Assignment MemberReference categoryString MethodInvocation categoryObject MethodInvocation getName getClass = StatementExpression Assignment MemberReference categoryDetail MethodInvocation event MethodInvocation getName getTarget = BlockStatement StatementExpression Assignment MemberReference categoryString MethodInvocation categoryObject MethodInvocation getName getClass = LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MemberReference categoryString MemberReference categoryDetail getLog LocalVariableDeclaration BasicType int VariableDeclarator priority MethodInvocation event getPriority LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation event getMessage StatementExpression MethodInvocation MemberReference log MemberReference message MemberReference priority Literal null	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public test8 StatementExpression MethodInvocation Literal "test8" executeTarget StatementExpression MethodInvocation Literal "<%@ include file=\"root/some/include.jsp\"%>" MethodInvocation Literal "8" Literal assertEquals	0
MethodDeclaration Modifier private static ReferenceType ResourceCollection FormalParameter ReferenceType Iterator i ReturnStatement Cast ReferenceType ResourceCollection MethodInvocation i next	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "zipEmptyDirFilesOnly" executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType FTPFile listFiles FormalParameter ReferenceType String directory FormalParameter BasicType boolean changedir LocalVariableDeclaration ReferenceType String VariableDeclarator currentPath MemberReference directory IfStatement MemberReference changedir BlockStatement TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation ftp MemberReference directory changeWorkingDirectory IfStatement MemberReference ! result BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference currentPath MethodInvocation ftp printWorkingDirectory = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation IfStatement MethodInvocation fileListMap MemberReference currentPath containsKey BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "filelist map used in listing files" MemberReference Project MSG_DEBUG log getProject ReturnStatement Cast ReferenceType FTPFile MethodInvocation fileListMap MemberReference currentPath get LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator result Literal null TryStatement StatementExpression Assignment MemberReference result MethodInvocation ftp listFiles = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation fileListMap MemberReference currentPath MemberReference result put IfStatement MemberReference ! remoteSensitivityChecked BlockStatement StatementExpression MethodInvocation MemberReference result MemberReference directory checkRemoteSensitivity ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType String assumedJavaVersion IfStatement MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_2 isJavaVersion BlockStatement ReturnStatement MemberReference JAVAC12 IfStatement MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_3 isJavaVersion BlockStatement ReturnStatement MemberReference JAVAC13 IfStatement MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_4 isJavaVersion BlockStatement ReturnStatement MemberReference JAVAC14 IfStatement MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_5 isJavaVersion BlockStatement ReturnStatement MemberReference JAVAC15 IfStatement MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils JAVA_1_6 isJavaVersion BlockStatement ReturnStatement MemberReference JAVAC16 BlockStatement ReturnStatement MemberReference CLASSIC	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public testCreateTempFile LocalVariableDeclaration ReferenceType File VariableDeclarator parent ClassCreator ReferenceType File ClassCreator MethodInvocation getAbsolutePath ReferenceType File Literal "/tmp" LocalVariableDeclaration ReferenceType File VariableDeclarator tmp1 MethodInvocation FILE_UTILS Literal "pre" Literal ".suf" MemberReference parent createTempFile StatementExpression MethodInvocation Literal "new file" MethodInvocation ! tmp1 exists assertTrue LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation tmp1 getName StatementExpression MethodInvocation Literal with MethodInvocation name Literal "pre" startsWith assertTrue StatementExpression MethodInvocation Literal with MethodInvocation name Literal ".suf" endsWith assertTrue StatementExpression MethodInvocation Literal "is inside parent dir" MethodInvocation parent getAbsolutePath MethodInvocation tmp1 getParent assertEquals LocalVariableDeclaration ReferenceType File VariableDeclarator tmp2 MethodInvocation FILE_UTILS Literal "pre" Literal ".suf" MemberReference parent createTempFile StatementExpression MethodInvocation Literal "files are different" MethodInvocation ! tmp1 MethodInvocation MethodInvocation tmp2 getAbsolutePath equals getAbsolutePath assertTrue LocalVariableDeclaration ReferenceType File VariableDeclarator tmp3 MethodInvocation FILE_UTILS Literal "pre" Literal ".suf" Literal null createTempFile LocalVariableDeclaration ReferenceType String VariableDeclarator tmploc MethodInvocation System Literal "java.io.tmpdir" getProperty StatementExpression MethodInvocation ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference tmploc MethodInvocation tmp3 getName MethodInvocation tmp3 getAbsolutePath assertEquals	0
MethodDeclaration Modifier private executeDate FormalParameter ReferenceType String oldValue BuildException LocalVariableDeclaration ReferenceType Calendar VariableDeclarator currentValue MethodInvocation Calendar getInstance IfStatement BinaryOperation == MemberReference pattern Literal null BlockStatement StatementExpression Assignment MemberReference pattern Literal "yyyy/MM/dd HH:mm" = LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator fmt ClassCreator ReferenceType SimpleDateFormat MemberReference pattern LocalVariableDeclaration ReferenceType String VariableDeclarator currentStringValue MethodInvocation MemberReference oldValue getCurrentValue IfStatement BinaryOperation == MemberReference currentStringValue Literal null BlockStatement StatementExpression Assignment MemberReference currentStringValue MemberReference DEFAULT_DATE_VALUE = IfStatement Literal MethodInvocation MemberReference currentStringValue equals "now" BlockStatement StatementExpression MethodInvocation currentValue ClassCreator ReferenceType Date setTime BlockStatement TryStatement StatementExpression MethodInvocation currentValue MethodInvocation fmt MemberReference currentStringValue parse setTime CatchClause CatchClauseParameter ParseException pe IfStatement BinaryOperation != MemberReference operation MemberReference Operation EQUALS_OPER BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator offset Literal 0 TryStatement StatementExpression Assignment MemberReference offset MethodInvocation Integer MemberReference value parseInt = IfStatement BinaryOperation == MemberReference operation MemberReference Operation DECREMENT_OPER BlockStatement StatementExpression Assignment MemberReference offset BinaryOperation * Literal - 1 MemberReference offset = CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Value not an on " MemberReference key StatementExpression MethodInvocation currentValue MemberReference field MemberReference offset add StatementExpression Assignment MemberReference newValue MethodInvocation fmt MethodInvocation currentValue getTime format =	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType TarEntry it ReturnStatement This MethodInvocation getName MethodInvocation MethodInvocation it getName equals	1
MethodDeclaration Modifier public FormalParameter BasicType boolean spawn StatementExpression Assignment This MemberReference spawn MemberReference spawn =	0
MethodDeclaration Modifier public ReferenceType String getAptExecutable ReturnStatement MethodInvocation JavaEnvUtils MemberReference getJdkExecutable	0
MethodDeclaration Modifier private BasicType int getFinalSize ReturnStatement BinaryOperation + MethodInvocation assertionList size TernaryExpression BinaryOperation != MemberReference Literal null Literal 1 Literal 0	0
MethodDeclaration Modifier public testTimeOut Exception LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation BinaryOperation * MemberReference TIME_OUT Literal 2 getCommandline StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis StatementExpression MethodInvocation ej MemberReference project execute LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation - MethodInvocation System currentTimeMillis MemberReference now StatementExpression MethodInvocation Literal "process should have been killed" MethodInvocation ej killedProcess assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal time of " MemberReference Literal " ms is less than timeout value of " MemberReference Literal " ms" BinaryOperation >= MemberReference MemberReference assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal time of " MemberReference Literal " ms is greater than run value of " BinaryOperation * MemberReference TIME_OUT Literal 2 Literal " ms" BinaryOperation < MemberReference BinaryOperation * MemberReference TIME_OUT Literal 2 assertTrue	0
MethodDeclaration Modifier private ReferenceType ClasspathUtils ReferenceType Delegate getDelegate IfStatement BinaryOperation == MemberReference cpDelegate Literal null BlockStatement StatementExpression Assignment MemberReference cpDelegate MethodInvocation ClasspathUtils This getDelegate = ReturnStatement MemberReference cpDelegate	0
MethodDeclaration Modifier public static ReferenceType Manifest BuildException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator insr Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator defManifest Literal "/org/apache/tools/ant/defaultManifest.mf" StatementExpression Assignment MemberReference in ClassReference MethodInvocation MemberReference defManifest getResourceAsStream ReferenceType Manifest = IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not find default manifest: " MemberReference defManifest TryStatement StatementExpression Assignment MemberReference insr ClassCreator ReferenceType InputStreamReader MemberReference in Literal "UTF-8" = LocalVariableDeclaration ReferenceType Manifest VariableDeclarator defaultManifest ClassCreator ReferenceType Manifest MemberReference insr LocalVariableDeclaration ReferenceType Attribute VariableDeclarator createdBy ClassCreator ReferenceType Attribute Literal "Created-By" BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.vm.version" getProperty Literal " (" MethodInvocation System Literal "java.vm.vendor" getProperty Literal ")" StatementExpression MethodInvocation defaultManifest MethodInvocation MemberReference createdBy storeAttribute getMainSection ReturnStatement MemberReference defaultManifest CatchClause CatchClauseParameter UnsupportedEncodingException e StatementExpression Assignment MemberReference insr ClassCreator ReferenceType InputStreamReader MemberReference in = ReturnStatement ClassCreator ReferenceType Manifest MemberReference insr CatchClause CatchClauseParameter ManifestException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Default manifest is invalid !!" MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to read default manifest" MemberReference e StatementExpression MethodInvocation FileUtils MemberReference insr close StatementExpression MethodInvocation FileUtils MemberReference in close	1
MethodDeclaration Modifier protected writeCentralDirectoryEnd IOException StatementExpression MethodInvocation MemberReference EOCD_SIG writeOut StatementExpression MethodInvocation MemberReference ZERO writeOut StatementExpression MethodInvocation MemberReference ZERO writeOut LocalVariableDeclaration BasicType byte VariableDeclarator num MethodInvocation ZipShort MethodInvocation entries size getBytes StatementExpression MethodInvocation MemberReference num writeOut StatementExpression MethodInvocation MemberReference num writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MemberReference cdLength getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MemberReference cdOffset getBytes writeOut LocalVariableDeclaration BasicType byte VariableDeclarator data MethodInvocation MemberReference getBytes StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference data length getBytes writeOut StatementExpression MethodInvocation MemberReference data writeOut	0
MethodDeclaration Modifier public testBadTimeout Exception StatementExpression MethodInvocation Literal Literal "error on -ve MemberReference ERROR_BAD_TIMEOUT expectBuildExceptionContaining	0
MethodDeclaration Modifier synchronized protected cleanUp StatementExpression Assignment MemberReference watch Literal false = StatementExpression Assignment MemberReference process Literal null =	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation MethodInvocation Literal "Using SUN compiler" MemberReference Project MSG_VERBOSE log getRmic LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation setupRmicCommand LocalVariableDeclaration ReferenceType LogOutputStream VariableDeclarator logstr ClassCreator ReferenceType LogOutputStream MethodInvocation getRmic MemberReference Project MSG_WARN TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class MemberReference RMIC_CLASSNAME forName LocalVariableDeclaration ReferenceType Constructor VariableDeclarator cons MethodInvocation c ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType OutputStream ClassReference ReferenceType String getConstructor LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation cons ArrayCreator ReferenceType Object ArrayInitializer MemberReference logstr Literal "rmic" newInstance LocalVariableDeclaration ReferenceType Method VariableDeclarator doRmic MethodInvocation c Literal "compile" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod LocalVariableDeclaration ReferenceType Boolean VariableDeclarator ok Cast ReferenceType Boolean MethodInvocation doRmic MemberReference ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation cmd getArguments invoke ReturnStatement MethodInvocation ok booleanValue CatchClause CatchClauseParameter ClassNotFoundException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_NO_RMIC_ON_CLASSPATH MethodInvocation MethodInvocation getLocation getRmic CatchClause CatchClauseParameter Exception ex IfStatement BinaryOperation instanceof MemberReference ex ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference ex BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ERROR_RMIC_FAILED MemberReference ex MethodInvocation MethodInvocation getLocation getRmic TryStatement StatementExpression MethodInvocation logstr close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent a IfStatement BinaryOperation < MemberReference total MemberReference BlockStatement StatementExpression MemberReference ++ total BlockStatement StatementExpression Assignment MemberReference total MemberReference = StatementExpression MethodInvocation MemberReference total setValue	0
MethodDeclaration Modifier private expectFileContains FormalParameter ReferenceType String target FormalParameter ReferenceType String filename FormalParameter ReferenceType String contains IOException LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation MemberReference target MemberReference filename getFileString StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expecting file " MemberReference filename Literal " to contain " MemberReference contains Literal " but got " MemberReference content BinaryOperation > MethodInvocation content MemberReference contains indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public static BasicType boolean isFailure FormalParameter BasicType int exitValue ReturnStatement TernaryExpression MethodInvocation Os Literal "openvms" isFamily BinaryOperation == BinaryOperation % MemberReference exitValue Literal 2 Literal 0 BinaryOperation != MemberReference exitValue Literal 0	1
MethodDeclaration Modifier private ReferenceType String getFileString FormalParameter ReferenceType String target FormalParameter ReferenceType String filename IOException StatementExpression MethodInvocation MemberReference target executeTarget ReturnStatement MethodInvocation MemberReference filename getFileString	0
MethodDeclaration Modifier public testFTPURL Exception StatementExpression MethodInvocation Literal "testFTPURL" executeTarget	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef ReturnStatement BinaryOperation * MemberReference MAGIC TernaryExpression BinaryOperation == MethodInvocation getURL Literal null MemberReference NULL_URL MethodInvocation MethodInvocation hashCode getURL	1
MethodDeclaration Modifier protected ReferenceType ChannelSftp openSftpChannel JSchException LocalVariableDeclaration ReferenceType ChannelSftp VariableDeclarator channel Cast ReferenceType ChannelSftp MethodInvocation session Literal "sftp" openChannel ReturnStatement MemberReference channel	1
MethodDeclaration Modifier public FormalParameter ReferenceType FTPSystemType systemKey IfStatement BinaryOperation && BinaryOperation != MemberReference systemKey Literal null MethodInvocation ! systemKey MethodInvocation Literal "" equals getValue BlockStatement StatementExpression Assignment This MemberReference systemTypeKey MemberReference systemKey = StatementExpression MethodInvocation configurationHasBeenSet	0
MethodDeclaration Modifier public BasicType boolean hasUserIdBeenSet ReturnStatement MemberReference	0
MethodDeclaration Modifier public addFormatter FormalParameter ReferenceType FormatterElement elem StatementExpression MethodInvocation formatters MemberReference elem addElement	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" Literal "Invalid value specified for attribute." expectBuildException	0
MethodDeclaration Modifier public testExcludeHasPrecedence IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/**" setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/**" setExcludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal "test1" Literal "required argument missing" expectBuildException	0
MethodDeclaration Modifier private BasicType boolean isRemoteUri FormalParameter ReferenceType String uri LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true LocalVariableDeclaration BasicType int VariableDeclarator indexOfAt MethodInvocation uri Literal '@' indexOf IfStatement BinaryOperation < MemberReference indexOfAt Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal false = ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType String getIncludedDirectories IfStatement BinaryOperation == MemberReference dirsIncluded Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal call first" LocalVariableDeclaration ReferenceType String VariableDeclarator directories ArrayCreator ReferenceType String MethodInvocation dirsIncluded size StatementExpression MethodInvocation dirsIncluded MemberReference directories copyInto StatementExpression MethodInvocation Arrays MemberReference directories sort ReturnStatement MemberReference directories	0
MethodDeclaration Modifier public test8 IOException ManifestException StatementExpression MethodInvocation Literal "test8" executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType Manifest ReferenceType Section VariableDeclarator mainSection MethodInvocation manifest getMainSection LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation mainSection Literal getAttributeValue StatementExpression MethodInvocation Literal attribute was not set correctly - " Literal "fubar" MemberReference classpath assertEquals LocalVariableDeclaration ReferenceType Manifest ReferenceType Section VariableDeclarator testSection MethodInvocation manifest Literal "Test" LocalVariableDeclaration ReferenceType String VariableDeclarator testAttr MethodInvocation testSection Literal getAttributeValue StatementExpression MethodInvocation Literal "TestAttr attribute was not set correctly - " Literal "Test" MemberReference testAttr assertEquals	0
MethodDeclaration Modifier public ReferenceType String getToRefid ReturnStatement MemberReference targetid	0
MethodDeclaration Modifier public testCreateMD5SUMformat IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String res IfStatement MemberReference BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference resource MemberReference res =	0
MethodDeclaration Modifier protected ReferenceType Object getCheckedRef ReturnStatement MethodInvocation MethodInvocation getProject getCheckedRef	0
MethodDeclaration Modifier protected handleErrorOutput FormalParameter ReferenceType String line IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing BlockStatement StatementExpression SuperMethodInvocation MemberReference line handleErrorOutput	0
MethodDeclaration Modifier protected processBuffer IOException TryStatement StatementExpression MethodInvocation MethodInvocation buffer toString processLine StatementExpression MethodInvocation buffer reset	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected setCurpwd FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getElementName FormalParameter ReferenceType Object element ReturnStatement MethodInvocation ComponentHelper MethodInvocation MemberReference element getElementName This getComponentHelper	0
MethodDeclaration Modifier public test5 StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator sTestCmdLine ArrayInitializer Literal "soscmd" Literal "-command" Literal Literal "-file" MemberReference SRC_FILE Literal "-server" MemberReference SOS_SERVER_PATH Literal "-name" MemberReference SOS_USERNAME Literal "-password" MemberReference SOS_PASSWORD Literal "-database" MemberReference VSS_SERVER_PATH Literal "-project" MemberReference DS_VSS_PROJECT_PATH Literal "-verbose" Literal "-nocompress" Literal "-nocache" Literal "-workdir" BinaryOperation + BinaryOperation + MethodInvocation project MethodInvocation getAbsolutePath getBaseDir MemberReference File separator MemberReference LOCAL_PATH LocalVariableDeclaration ReferenceType SOSCheckout VariableDeclarator sosCheckout ClassCreator ReferenceType SOSCheckout StatementExpression MethodInvocation sosCheckout MemberReference project setProject StatementExpression MethodInvocation sosCheckout MemberReference VSS_SERVER_PATH setVssServerPath StatementExpression MethodInvocation sosCheckout MemberReference SOS_SERVER_PATH setSosServerPath StatementExpression MethodInvocation sosCheckout MemberReference DS_VSS_PROJECT_PATH setProjectPath StatementExpression MethodInvocation sosCheckout MemberReference SRC_FILE setFile StatementExpression MethodInvocation sosCheckout MemberReference SOS_USERNAME setUsername StatementExpression MethodInvocation sosCheckout MemberReference SOS_PASSWORD StatementExpression MethodInvocation sosCheckout ClassCreator ReferenceType MemberReference project MemberReference LOCAL_PATH setLocalPath StatementExpression MethodInvocation sosCheckout Literal true setNoCache StatementExpression MethodInvocation sosCheckout Literal true setNoCompress StatementExpression MethodInvocation sosCheckout Literal true setVerbose StatementExpression MethodInvocation sosCheckout Literal true setRecursive StatementExpression Assignment MemberReference commandline MethodInvocation sosCheckout buildCmdLine = StatementExpression MethodInvocation MemberReference sTestCmdLine MethodInvocation commandline getCommandline checkCommandLines	0
MethodDeclaration Modifier public test6 StatementExpression MethodInvocation Literal "test6" executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public static ReferenceType Vector lineSplit FormalParameter ReferenceType String data ReturnStatement MethodInvocation MemberReference data Literal '\n' split	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal "cat.can.run" getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "error with MethodInvocation FILE_UTILS MethodInvocation MethodInvocation Literal resolveFile getProject MethodInvocation MethodInvocation Literal "redirector.out" resolveFile getProject contentEquals assertTrue	0
MethodDeclaration Modifier private BasicType int getTablength ReturnStatement MemberReference tabLength	0
MethodDeclaration Modifier protected registerKnownDTDs FormalParameter ReferenceType DescriptorHandler handler StatementExpression MethodInvocation handler MemberReference EJB_JAR_1_1_PUBLIC_ID BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference jonasroot MemberReference File separator Literal "xml" MemberReference File separator MemberReference EJB_JAR_1_1_DTD registerDTD StatementExpression MethodInvocation handler MemberReference EJB_JAR_2_0_PUBLIC_ID BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference jonasroot MemberReference File separator Literal "xml" MemberReference File separator MemberReference EJB_JAR_2_0_DTD registerDTD StatementExpression MethodInvocation handler MemberReference JONAS_EJB_JAR_2_4_PUBLIC_ID BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference jonasroot MemberReference File separator Literal "xml" MemberReference File separator MemberReference JONAS_EJB_JAR_2_4_DTD registerDTD StatementExpression MethodInvocation handler MemberReference JONAS_EJB_JAR_2_5_PUBLIC_ID BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference jonasroot MemberReference File separator Literal "xml" MemberReference File separator MemberReference JONAS_EJB_JAR_2_5_DTD registerDTD	1
MethodDeclaration Modifier public setValue FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public ReferenceType Class getComponentClass FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation MemberReference getDefinition ReturnStatement TernaryExpression BinaryOperation == MemberReference def Literal null Literal null MethodInvocation def MemberReference project getExposedClass	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference delete	0
MethodDeclaration Modifier public addReplaceString FormalParameter ReferenceType TokenFilter ReferenceType ReplaceString filter StatementExpression MethodInvocation filterReaders MemberReference filter addElement	0
MethodDeclaration Modifier private static doReportProxy FormalParameter ReferenceType PrintStream out StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTP_PROXY_HOST printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTP_PROXY_PORT printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTP_PROXY_USERNAME printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTP_PROXY_PASSWORD printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTP_NON_PROXY_HOSTS printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTPS_PROXY_HOST printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTPS_PROXY_PORT printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup HTTPS_NON_PROXY_HOSTS printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup FTP_PROXY_HOST printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup FTP_PROXY_PORT printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup FTP_NON_PROXY_HOSTS printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup SOCKS_PROXY_HOST printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup SOCKS_PROXY_PORT printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup SOCKS_PROXY_USERNAME printProperty StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup SOCKS_PROXY_PASSWORD printProperty IfStatement BinaryOperation < MethodInvocation JavaEnvUtils getJavaVersionNumber Literal 15 BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference out MemberReference ProxySetup USE_SYSTEM_PROXIES printProperty LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator proxyDiagClassname Literal "org.apache.tools.ant.util.java15.ProxyDiagnostics" TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator proxyDiagClass MethodInvocation Class MemberReference proxyDiagClassname forName LocalVariableDeclaration ReferenceType Object VariableDeclarator instance MethodInvocation proxyDiagClass newInstance StatementExpression MethodInvocation out Literal "Java1.5+ proxy settings:" println StatementExpression MethodInvocation out MethodInvocation instance toString println CatchClause CatchClauseParameter ClassNotFoundException e CatchClause CatchClauseParameter IllegalAccessException e CatchClause CatchClauseParameter InstantiationException e CatchClause CatchClauseParameter NoClassDefFoundError e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference PASS_TEST_TARGET executeTarget StatementExpression MethodInvocation Literal "expecting test ended message" MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference JUnitTask TESTLISTENER_PREFIX Literal "endTest(" MemberReference PASS_TEST Literal ")" hasEventMessage assertTrue	0
MethodDeclaration Modifier private assertProcessed StatementExpression MethodInvocation Literal "DistributedAnnotationProcessor-is-go" assertLogContaining StatementExpression MethodInvocation Literal assertLogContaining StatementExpression MethodInvocation Literal "visiting assertLogContaining	0
MethodDeclaration Modifier public setClasspath FormalParameter ReferenceType classpath StatementExpression MethodInvocation helper MemberReference classpath setClasspath	0
MethodDeclaration Modifier protected ReferenceType File toFileArray FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList MemberReference name length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference name length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i name Literal null BlockStatement StatementExpression MethodInvocation list MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i name resolveFile getProject add ReturnStatement Cast ReferenceType File MethodInvocation list ArrayCreator ReferenceType File MethodInvocation list size toArray	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty assertNull	0
MethodDeclaration Modifier public setRefid FormalParameter ReferenceType r StatementExpression Assignment MemberReference ref MemberReference r =	0
MethodDeclaration Modifier public addSelector FormalParameter ReferenceType SelectSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public testKeepGoingDefault TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference targetNames executeTargets Literal null Literal true Literal true getProject StatementExpression MethodInvocation Literal "should fail" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation e MethodInvocation Literal "failfoo" equals getMessage assertTrue StatementExpression MethodInvocation MemberReference targetCount Literal 2 assertEquals	1
MethodDeclaration Modifier protected ReferenceType EntityResolver ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getMainClass ReturnStatement This MemberReference mainClass	0
MethodDeclaration Modifier private static copyProperty FormalParameter ReferenceType Property to FormalParameter ReferenceType Property from StatementExpression MethodInvocation to MethodInvocation from getName setName IfStatement BinaryOperation != MethodInvocation from getValue Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getValue setValue IfStatement BinaryOperation != MethodInvocation from getFile Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getFile setFile IfStatement BinaryOperation != MethodInvocation from getResource Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getResource IfStatement BinaryOperation != MethodInvocation from getPrefix Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getPrefix setPrefix IfStatement BinaryOperation != MethodInvocation from getRefid Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getRefid setRefid IfStatement BinaryOperation != MethodInvocation from getEnvironment Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getEnvironment setEnvironment IfStatement BinaryOperation != MethodInvocation from getClasspath Literal null BlockStatement StatementExpression MethodInvocation to MethodInvocation from getClasspath setClasspath	0
MethodDeclaration Modifier public ReferenceType Class getTypeClass FormalParameter ReferenceType Project project ReturnStatement MethodInvocation parent MemberReference project getTypeClass	1
MethodDeclaration Modifier private validateFile FormalParameter ReferenceType File fileToCheck IfStatement BinaryOperation && MemberReference validate MethodInvocation ! fileToCheck exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference ERROR_MISSING_FILE MethodInvocation fileToCheck toString	0
MethodDeclaration Modifier public BasicType boolean getIiop ReturnStatement MemberReference iiop	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType EqualComparator VariableDeclarator comp ClassCreator ReferenceType EqualComparator StatementExpression MethodInvocation MemberReference comp doTest	0
MethodDeclaration Modifier public BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator result StatementExpression Assignment MemberReference result TernaryExpression BinaryOperation != MemberReference namespace Literal null MethodInvocation namespace hashCode Literal 0 = StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * Literal 29 MemberReference result TernaryExpression BinaryOperation != MemberReference file Literal null MethodInvocation file hashCode Literal 0 = StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * Literal 29 MemberReference result TernaryExpression BinaryOperation != MemberReference url Literal null MethodInvocation url hashCode Literal 0 = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public fatalError FormalParameter ReferenceType TransformerException e StatementExpression MethodInvocation MemberReference e Literal "Fatal Error" logError ThrowStatement ClassCreator ReferenceType BuildException Literal "Fatal error during transformation" MemberReference e	1
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation runner ClassReference TestCases MethodInvocation getName ReferenceType FailSetupTestSuite StatementExpression MethodInvocation runner run SynchronizedStatement This WhileStatement MemberReference ! done BlockStatement StatementExpression MethodInvocation wait StatementExpression MethodInvocation Literal 1 MethodInvocation size assertEquals StatementExpression MethodInvocation Literal 1 MethodInvocation size assertEquals	0
MethodDeclaration Modifier private static hbMakeCodeLengths FormalParameter Modifier final BasicType byte len FormalParameter Modifier final BasicType int freq FormalParameter Modifier final ReferenceType Data dat FormalParameter Modifier final BasicType int alphaSize FormalParameter Modifier final BasicType int maxLen LocalVariableDeclaration Modifier final BasicType int VariableDeclarator heap MemberReference dat heap LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight MemberReference dat weight LocalVariableDeclaration Modifier final BasicType int VariableDeclarator parent MemberReference dat parent ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference alphaSize BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 weight BinaryOperation << TernaryExpression BinaryOperation == MemberReference ArraySelector MemberReference i freq Literal 0 Literal 1 MemberReference ArraySelector MemberReference i freq Literal 8 = ForStatement ForControl VariableDeclaration BasicType boolean VariableDeclarator tooLong Literal true MemberReference tooLong BlockStatement StatementExpression Assignment MemberReference tooLong Literal false = LocalVariableDeclaration BasicType int VariableDeclarator nNodes MemberReference alphaSize LocalVariableDeclaration BasicType int VariableDeclarator nHeap Literal 0 StatementExpression Assignment MemberReference ArraySelector Literal 0 heap Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 weight Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 parent Literal - 2 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i parent Literal - 1 = StatementExpression MemberReference ++ nHeap StatementExpression Assignment MemberReference ArraySelector MemberReference nHeap heap MemberReference i = LocalVariableDeclaration BasicType int VariableDeclarator zz MemberReference nHeap LocalVariableDeclaration BasicType int VariableDeclarator tmp MemberReference ArraySelector MemberReference zz heap WhileStatement BinaryOperation < MemberReference ArraySelector MemberReference tmp weight MemberReference ArraySelector MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap weight BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap = StatementExpression Assignment MemberReference zz Literal 1 >>= StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = WhileStatement BinaryOperation > MemberReference nHeap Literal 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n1 MemberReference ArraySelector Literal 1 heap StatementExpression Assignment MemberReference ArraySelector Literal 1 heap MemberReference ArraySelector MemberReference nHeap heap = StatementExpression MemberReference -- nHeap LocalVariableDeclaration BasicType int VariableDeclarator yy Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator zz Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator tmp MemberReference ArraySelector Literal 1 heap WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference yy BinaryOperation << MemberReference zz Literal 1 = IfStatement BinaryOperation > MemberReference yy MemberReference nHeap BlockStatement BreakStatement IfStatement BinaryOperation && BinaryOperation < MemberReference yy MemberReference nHeap BinaryOperation < MemberReference ArraySelector MemberReference ArraySelector BinaryOperation + MemberReference yy Literal 1 heap weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement StatementExpression MemberReference ++ yy IfStatement BinaryOperation < MemberReference ArraySelector MemberReference tmp weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector MemberReference yy heap = StatementExpression Assignment MemberReference zz MemberReference yy = StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = LocalVariableDeclaration BasicType int VariableDeclarator n2 MemberReference ArraySelector Literal 1 heap StatementExpression Assignment MemberReference ArraySelector Literal 1 heap MemberReference ArraySelector MemberReference nHeap heap = StatementExpression MemberReference -- nHeap StatementExpression Assignment MemberReference yy Literal 0 = StatementExpression Assignment MemberReference zz Literal 1 = StatementExpression Assignment MemberReference tmp MemberReference ArraySelector Literal 1 heap = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference yy BinaryOperation << MemberReference zz Literal 1 = IfStatement BinaryOperation > MemberReference yy MemberReference nHeap BlockStatement BreakStatement IfStatement BinaryOperation && BinaryOperation < MemberReference yy MemberReference nHeap BinaryOperation < MemberReference ArraySelector MemberReference ArraySelector BinaryOperation + MemberReference yy Literal 1 heap weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement StatementExpression MemberReference ++ yy IfStatement BinaryOperation < MemberReference ArraySelector MemberReference tmp weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector MemberReference yy heap = StatementExpression Assignment MemberReference zz MemberReference yy = StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = StatementExpression MemberReference ++ nNodes StatementExpression Assignment MemberReference ArraySelector MemberReference n1 parent Assignment MemberReference ArraySelector MemberReference n2 parent MemberReference nNodes = = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight_n1 MemberReference ArraySelector MemberReference n1 weight LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight_n2 MemberReference ArraySelector MemberReference n2 weight StatementExpression Assignment MemberReference ArraySelector MemberReference nNodes weight BinaryOperation | BinaryOperation + BinaryOperation & MemberReference weight_n1 Literal 0xffffff00 BinaryOperation & MemberReference weight_n2 Literal 0xffffff00 BinaryOperation + Literal 1 TernaryExpression BinaryOperation > BinaryOperation & MemberReference weight_n1 Literal 0x000000ff BinaryOperation & MemberReference weight_n2 Literal 0x000000ff BinaryOperation & MemberReference weight_n1 Literal 0x000000ff BinaryOperation & MemberReference weight_n2 Literal 0x000000ff = StatementExpression Assignment MemberReference ArraySelector MemberReference nNodes parent Literal - 1 = StatementExpression MemberReference ++ nHeap StatementExpression Assignment MemberReference ArraySelector MemberReference nHeap heap MemberReference nNodes = StatementExpression Assignment MemberReference tmp Literal 0 = StatementExpression Assignment MemberReference zz MemberReference nHeap = StatementExpression Assignment MemberReference tmp MemberReference ArraySelector MemberReference zz heap = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight_tmp MemberReference ArraySelector MemberReference tmp weight WhileStatement BinaryOperation < MemberReference weight_tmp MemberReference ArraySelector MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap weight BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap = StatementExpression Assignment MemberReference zz Literal 1 >>= StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator k MemberReference i ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator parent_k BinaryOperation >= Assignment MemberReference parent_k MemberReference ArraySelector MemberReference k parent = Literal 0 BlockStatement StatementExpression Assignment MemberReference k MemberReference parent_k = StatementExpression MemberReference ++ j StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 len Cast BasicType byte MemberReference j = IfStatement BinaryOperation > MemberReference j MemberReference maxLen BlockStatement StatementExpression Assignment MemberReference tooLong Literal true = IfStatement MemberReference tooLong BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j BinaryOperation >> MemberReference ArraySelector MemberReference i weight Literal 8 StatementExpression Assignment MemberReference j BinaryOperation + Literal 1 BinaryOperation >> MemberReference j Literal 1 = StatementExpression Assignment MemberReference ArraySelector MemberReference i weight BinaryOperation << MemberReference j Literal 8 =	1
MethodDeclaration Modifier protected ReferenceType URLConnection FormalParameter ReferenceType URLConnection connection BuildException IOException IfStatement BinaryOperation == MemberReference postFile Literal null BlockStatement ReturnStatement MethodInvocation MemberReference connection doConnectFormPost BlockStatement ReturnStatement MethodInvocation MemberReference connection doConnectFilePost	0
MethodDeclaration Modifier public test3 LocalVariableDeclaration ReferenceType Timer VariableDeclarator timer ClassCreator ReferenceType Timer StatementExpression MethodInvocation Literal "test3" executeTarget StatementExpression MethodInvocation timer stop IfStatement MemberReference TRACE StatementExpression MethodInvocation System.out BinaryOperation + Literal " test3 time=" MethodInvocation timer time println StatementExpression MethodInvocation BinaryOperation >= MethodInvocation timer time BinaryOperation - Literal 2000 MemberReference ERROR_RANGE assertTrue	1
MethodDeclaration Modifier protected StatementExpression Assignment MemberReference tbed ClassCreator ReferenceType TaskdefForMakingBed Literal "mirrorfiles" = StatementExpression MethodInvocation tbed setUp StatementExpression MethodInvocation tbed	0
MethodDeclaration Modifier public addDeleteCharacters FormalParameter ReferenceType DeleteCharacters filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public setProxy FormalParameter ReferenceType Object o StatementExpression Assignment This MemberReference proxy MemberReference o =	1
MethodDeclaration Modifier public setProvider FormalParameter ReferenceType String provider StatementExpression Assignment This MemberReference provider MemberReference provider =	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String string StatementExpression MethodInvocation IfStatement MethodInvocation ! regexp MemberReference string MemberReference options matches BlockStatement ReturnStatement Literal null IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MemberReference string ReturnStatement MethodInvocation regexp MemberReference string MethodInvocation MethodInvocation getProject getExpression MemberReference options substitute	1
MethodDeclaration Modifier public setErrorPrintStream FormalParameter ReferenceType PrintStream err StatementExpression Assignment This MemberReference err MemberReference err =	0
MethodDeclaration Modifier public handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement StatementExpression MethodInvocation runner MemberReference output handleErrorFlush IfStatement MemberReference showOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorFlush	1
MethodDeclaration Modifier public FormalParameter BasicType int gid StatementExpression Assignment This MemberReference gid MemberReference gid =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String nusers StatementExpression Assignment MemberReference mNusers MemberReference nusers =	0
MethodDeclaration Modifier public ReferenceType Node item FormalParameter BasicType int i TryStatement ReturnStatement Cast ReferenceType Node MethodInvocation MemberReference i elementAt CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e ReturnStatement Literal null	0
MethodDeclaration Modifier final protected ReferenceType PrintWriter getWriter ReturnStatement MemberReference writer	0
MethodDeclaration Modifier public BasicType boolean eval BuildException ReturnStatement MethodInvocation MemberReference family MemberReference name MemberReference arch MemberReference version isOs	1
MethodDeclaration Modifier final public static BasicType boolean FormalParameter ReferenceType String s LocalVariableDeclaration Modifier final BasicType int VariableDeclarator length MethodInvocation s length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation ! Character MemberReference c isLetterOrDigit BinaryOperation != MemberReference c Literal '.' BinaryOperation != MemberReference c Literal '-' BinaryOperation != MemberReference c Literal '_' BinaryOperation != MemberReference c Literal ':' BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation getName ReturnStatement TernaryExpression BinaryOperation == MemberReference n Literal null Literal "(anonymous)" MemberReference n	1
MethodDeclaration Modifier public ReferenceType String getNamespace ReturnStatement MemberReference namespace	0
MethodDeclaration Modifier public checkout FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal "co" Literal Literal "-unreserved" MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType CmdResult VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res getStdErr	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private doSingleTransfer IOException JSchException LocalVariableDeclaration ReferenceType ChannelSftp VariableDeclarator channel MethodInvocation openSftpChannel TryStatement StatementExpression MethodInvocation channel connect TryStatement StatementExpression MethodInvocation MemberReference channel MemberReference localFile MemberReference remotePath sendFileToRemote CatchClause CatchClauseParameter SftpException e ThrowStatement ClassCreator ReferenceType JSchException MethodInvocation e toString IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel disconnect	1
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier public setStart FormalParameter Modifier final ReferenceType Date start StatementExpression Assignment This MemberReference startDate MemberReference start =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private static ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation System Literal "build.tests" getProperty IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation System.err Literal "WARNING: 'build.tests' property is not available !" println StatementExpression Assignment MemberReference classpath MethodInvocation System Literal "java.class.path" getProperty = ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier private bsFinishedWithStream IOException WhileStatement BinaryOperation > This MemberReference bsLive Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ch BinaryOperation >> This MemberReference bsBuff Literal 24 StatementExpression This MemberReference out MethodInvocation MemberReference ch write StatementExpression Assignment This MemberReference bsBuff Literal 8 <<= StatementExpression Assignment This MemberReference bsLive Literal 8 -=	0
MethodDeclaration Modifier public BasicType boolean isFilesystemOnly ReturnStatement BinaryOperation || MethodInvocation ! isReference Cast ReferenceType FileResource MethodInvocation getCheckedRef	1
MethodDeclaration Modifier public FormalParameter BasicType boolean cbd StatementExpression Assignment MemberReference cleanBuildDir MemberReference cbd =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file IfStatement BinaryOperation != This MemberReference message Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Only one message can be sent in an " Literal "email" StatementExpression Assignment This MemberReference message ClassCreator ReferenceType Message MemberReference file = StatementExpression This MemberReference message MethodInvocation MethodInvocation getProject setProject	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected FormalParameter ReferenceType TestRunEvent evt TryStatement StatementExpression MethodInvocation messenger MemberReference evt CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MemberReference e log	0
MethodDeclaration Modifier public setFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier private BasicType boolean validDefinition FormalParameter ReferenceType AntTypeDefinition def ReturnStatement BinaryOperation || BinaryOperation == MethodInvocation def MemberReference project getTypeClass Literal null BinaryOperation == MethodInvocation def MemberReference project getExposedClass Literal null	0
MethodDeclaration Modifier synchronized ReferenceType RuntimeConfigurable getChild FormalParameter BasicType int index ReturnStatement Cast ReferenceType RuntimeConfigurable MethodInvocation children MemberReference index get	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "simplecopy" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal "dest" getProperty getProject Literal "/a/b/c/d" StatementExpression MethodInvocation MemberReference d assertFileIsPresent StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal "dangling" indexOf getFullLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public BasicType long time ReturnStatement BinaryOperation - MemberReference stop MemberReference start	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference o1 ReferenceType String BinaryOperation instanceof MemberReference o2 ReferenceType String BlockStatement ReturnStatement BinaryOperation - Cast ReferenceType String MemberReference o2 Cast ReferenceType String MemberReference o1 ReturnStatement Literal 0	0
MethodDeclaration Modifier private static ReferenceType BuildException makeCircularException FormalParameter ReferenceType String end FormalParameter ReferenceType Stack stk LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal dependency: " StatementExpression MethodInvocation sb MemberReference end append LocalVariableDeclaration ReferenceType String VariableDeclarator c DoStatement MethodInvocation ! c MemberReference end equals BlockStatement StatementExpression Assignment MemberReference c Cast ReferenceType String MethodInvocation stk pop = StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation sb MemberReference c append ReturnStatement ClassCreator ReferenceType BuildException ClassCreator ReferenceType String MemberReference sb	1
MethodDeclaration Modifier public testIgnoreCase StatementExpression MethodInvocation Literal Literal "a is ab is expectLog	0
MethodDeclaration Modifier public FormalParameter ReferenceType Commandline c StatementExpression This MethodInvocation MemberReference c Literal false	0
MethodDeclaration Modifier public testWindowsLineSeparator2 IOException TryStatement StatementExpression SuperMethodInvocation testWindowsLineSeparator2 StatementExpression MethodInvocation Literal "Should trigger when this bug is fixed. {@since 1.2}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public FormalParameter ReferenceType df StatementExpression Assignment MemberReference duplicate MethodInvocation df getValue =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ignore IfStatement MemberReference ignore BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-l" setValue createArgument	0
MethodDeclaration Modifier public ReferenceType Enumeration getNestedElements ReturnStatement MethodInvocation keys	0
MethodDeclaration Modifier public ReferenceType Vector getTargets ReturnStatement MemberReference targetVector	1
MethodDeclaration Modifier public setFailOnError FormalParameter BasicType boolean failOnError StatementExpression Assignment This MemberReference failOnError MemberReference failOnError =	0
MethodDeclaration Modifier protected ReferenceType createHandler BuildException ReturnStatement MethodInvocation redirector createHandler	0
MethodDeclaration Modifier private static printParserInfo FormalParameter ReferenceType PrintStream out FormalParameter ReferenceType String parserType FormalParameter ReferenceType String parserName FormalParameter ReferenceType String parserLocation IfStatement BinaryOperation == MemberReference parserName Literal null BlockStatement StatementExpression Assignment MemberReference parserName Literal "unknown" = IfStatement BinaryOperation == MemberReference parserLocation Literal null BlockStatement StatementExpression Assignment MemberReference parserLocation Literal "unknown" = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference parserType Literal " : " MemberReference parserName println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference parserType Literal " Location: " MemberReference parserLocation println	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType String VariableDeclarator userDefinedLineBreaks Literal null LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression Assignment MemberReference userDefinedLineBreaks MemberReference ArraySelector MemberReference i MethodInvocation getValue params = BreakStatement IfStatement BinaryOperation != MemberReference userDefinedLineBreaks Literal null BlockStatement StatementExpression Assignment MemberReference lineBreaks MemberReference userDefinedLineBreaks =	0
MethodDeclaration Modifier public testConditionType StatementExpression MethodInvocation Literal "condition.type" Literal expectLogContaining	0
MethodDeclaration Modifier protected scandir FormalParameter ReferenceType File file FormalParameter ReferenceType String vpath FormalParameter BasicType boolean fast LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zip Literal null TryStatement StatementExpression Assignment MemberReference zip ClassCreator ReferenceType ZipFile MemberReference file = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType IllegalStateException MethodInvocation e getMessage LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator entries MethodInvocation zip entries WhileStatement MethodInvocation entries hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry Cast ReferenceType ZipEntry MethodInvocation entries nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation entry getName IfStatement MethodInvocation entry isDirectory BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement IfStatement MethodInvocation ! MemberReference name isExcluded BlockStatement StatementExpression MethodInvocation dirsIncluded MemberReference name addElement BlockStatement StatementExpression Assignment MemberReference everythingIncluded Literal false = StatementExpression MethodInvocation dirsExcluded MemberReference name addElement BlockStatement StatementExpression Assignment MemberReference everythingIncluded Literal false = StatementExpression MethodInvocation MemberReference name addElement BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement IfStatement MethodInvocation ! MemberReference name isExcluded BlockStatement StatementExpression MethodInvocation MemberReference name addElement BlockStatement StatementExpression Assignment MemberReference everythingIncluded Literal false = StatementExpression MethodInvocation filesExcluded MemberReference name addElement BlockStatement StatementExpression Assignment MemberReference everythingIncluded Literal false = StatementExpression MethodInvocation filesNotIncluded MemberReference name addElement	1
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment MemberReference weblogicMainClass MemberReference c =	0
MethodDeclaration Modifier public testFiltersFileElement StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier public ReferenceType String getArguments BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator action MethodInvocation MethodInvocation getAction getTask LocalVariableDeclaration ReferenceType String VariableDeclarator args Literal null IfStatement BinaryOperation || MethodInvocation action MemberReference ACTION_DEPLOY equals MethodInvocation action MemberReference ACTION_UPDATE equals BlockStatement StatementExpression Assignment MemberReference args MethodInvocation buildDeployArgs = IfStatement BinaryOperation || MethodInvocation action MemberReference ACTION_DELETE equals MethodInvocation action MemberReference ACTION_UNDEPLOY equals BlockStatement StatementExpression Assignment MemberReference args MethodInvocation buildUndeployArgs = IfStatement MethodInvocation action MemberReference ACTION_LIST equals BlockStatement StatementExpression Assignment MemberReference args MethodInvocation buildListArgs = ReturnStatement MemberReference args	1
MethodDeclaration Modifier public synchronized final ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement TernaryExpression BinaryOperation == MemberReference union Literal null MemberReference EMPTY_ITERATOR MethodInvocation MethodInvocation iterator MemberReference union assertFilesystemOnly	0
MethodDeclaration Modifier public testCompilerArg LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation getCurrentCompilerArgs StatementExpression MethodInvocation MemberReference args assertNotNull StatementExpression MethodInvocation Literal "no args" Literal 0 MemberReference args length assertEquals LocalVariableDeclaration ReferenceType Rmic ReferenceType ImplementationSpecificArgument VariableDeclarator arg MethodInvocation createCompilerArg LocalVariableDeclaration ReferenceType String VariableDeclarator ford Literal "Ford" LocalVariableDeclaration ReferenceType String VariableDeclarator prefect Literal "Prefect" LocalVariableDeclaration ReferenceType String VariableDeclarator testArg BinaryOperation + BinaryOperation + MemberReference ford Literal " " MemberReference prefect StatementExpression MethodInvocation arg MemberReference testArg setValue StatementExpression Assignment MemberReference args MethodInvocation getCurrentCompilerArgs = StatementExpression MethodInvocation Literal "unconditional single Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation MemberReference testArg MemberReference ArraySelector Literal 0 args assertEquals StatementExpression MethodInvocation arg Literal "weblogic" setCompiler StatementExpression Assignment MemberReference args MethodInvocation getCurrentCompilerArgs = StatementExpression MethodInvocation MemberReference args assertNotNull StatementExpression MethodInvocation Literal is weblogic but build.rmic is null" Literal 0 MemberReference args length assertEquals StatementExpression MethodInvocation project Literal "build.rmic" Literal "sun" setProperty StatementExpression Assignment MemberReference args MethodInvocation getCurrentCompilerArgs = StatementExpression MethodInvocation MemberReference args assertNotNull StatementExpression MethodInvocation Literal is weblogic but build.rmic is Literal 0 MemberReference args length assertEquals StatementExpression MethodInvocation project Literal "build.rmic" Literal "weblogic" setProperty StatementExpression Assignment MemberReference args MethodInvocation getCurrentCompilerArgs = StatementExpression MethodInvocation Literal "both are Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation MemberReference testArg MemberReference ArraySelector Literal 0 args assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testNested6" Literal "it is required to fail Literal expectSpecificBuildException	0
MethodDeclaration Modifier private synchronized checkEntry BuildException IfStatement MemberReference haveEntry BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getName IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "entry name not set" LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation getArchive IfStatement BinaryOperation == MemberReference r Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "archive attribute not set" IfStatement MethodInvocation ! r isExists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation r toString Literal " does not exist." IfStatement MethodInvocation r isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference r Literal " a directory." StatementExpression MethodInvocation StatementExpression Assignment MemberReference haveEntry Literal true =	0
MethodDeclaration Modifier public addFilelist FormalParameter ReferenceType FileList fl BuildException IfStatement BinaryOperation == MethodInvocation fl getProject Literal null BlockStatement StatementExpression MethodInvocation fl MethodInvocation getProject setProject StatementExpression MethodInvocation MemberReference fl add	1
MethodDeclaration Modifier public FormalParameter ReferenceType String fullpath StatementExpression MethodInvocation IfStatement BinaryOperation && MethodInvocation ! prefix Literal "" equals MethodInvocation ! fullpath Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot set both fullpath and prefix StatementExpression Assignment This MemberReference fullpath MemberReference fullpath =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String target IfStatement MemberReference ! isConfigured StatementExpression MethodInvocation setUp StatementExpression MethodInvocation MemberReference target executeTarget	1
MethodDeclaration Modifier protected BasicType int getIDofLabelInUse IfStatement BinaryOperation != Literal null This MemberReference BlockStatement ReturnStatement This MemberReference MethodInvocation getID ReturnStatement Literal - 1	0
MethodDeclaration Modifier private assertOutput IOException LocalVariableDeclaration ReferenceType FileReader VariableDeclarator inner ClassCreator ReferenceType FileReader MethodInvocation MethodInvocation Literal "testlog.txt" resolveFile getProject LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader MemberReference inner TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation reader readLine StatementExpression MethodInvocation Literal "Testsuite: org.apache.tools.ant.taskdefs.optional.junit.Printer" MemberReference line assertEquals StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation MemberReference line assertNotNull StatementExpression MethodInvocation MethodInvocation line Literal "Tests run: 1, Failures: 0, Errors: 0, Time elapsed:" startsWith assertTrue StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation Literal "------------- Standard Output ---------------" MemberReference line assertEquals StatementExpression MethodInvocation MethodInvocation reader readLine Literal "static" Literal "out" assertPrint StatementExpression MethodInvocation MethodInvocation reader readLine Literal "constructor" Literal "out" assertPrint StatementExpression MethodInvocation MethodInvocation reader readLine Literal "method" Literal "out" assertPrint StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation Literal "------------- ---------------- ---------------" MemberReference line assertEquals StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation Literal "------------- Standard Error -----------------" MemberReference line assertEquals StatementExpression MethodInvocation MethodInvocation reader readLine Literal "static" Literal "err" assertPrint StatementExpression MethodInvocation MethodInvocation reader readLine Literal "constructor" Literal "err" assertPrint StatementExpression MethodInvocation MethodInvocation reader readLine Literal "method" Literal "err" assertPrint StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation Literal "------------- ---------------- ---------------" MemberReference line assertEquals StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation Literal "" MemberReference line assertEquals StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation MemberReference line assertNotNull StatementExpression MethodInvocation MethodInvocation line Literal took " startsWith assertTrue StatementExpression MethodInvocation inner close	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public setRetriesAllowed FormalParameter ReferenceType String retriesAllowed IfStatement Literal MethodInvocation MemberReference retriesAllowed equalsIgnoreCase "FOREVER" BlockStatement StatementExpression Assignment This MemberReference retriesAllowed MemberReference Retryable RETRY_FOREVER = BlockStatement TryStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Integer MemberReference retriesAllowed parseInt IfStatement BinaryOperation < MemberReference MemberReference Retryable RETRY_FOREVER BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid value for retriesAllowed attribute: " MemberReference retriesAllowed StatementExpression Assignment This MemberReference retriesAllowed MemberReference = CatchClause CatchClauseParameter NumberFormatException px ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid value for retriesAllowed attribute: " MemberReference retriesAllowed	1
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal testLogoExtraction	0
MethodDeclaration Modifier public BasicType long getSize ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MethodInvocation MethodInvocation length getNotNullFile	1
MethodDeclaration Modifier protected configureLiaison FormalParameter ReferenceType File stylesheet BuildException LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr ClassCreator ReferenceType FileResource StatementExpression MethodInvocation fr MethodInvocation getProject setProject StatementExpression MethodInvocation fr MemberReference stylesheet setFile StatementExpression MethodInvocation MemberReference fr configureLiaison	1
MethodDeclaration Modifier public testForkXml StatementExpression MethodInvocation Literal "fork-xml" Literal "<DependsUpon>" expectLogContaining	0
MethodDeclaration Modifier public setDeleteOnExit FormalParameter BasicType boolean deleteOnExit StatementExpression Assignment This MemberReference deleteOnExit MemberReference deleteOnExit =	0
MethodDeclaration Modifier public setSocksProxyHost FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference socksProxyHost MemberReference host =	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Class MemberReference value forName invoke CatchClause CatchClauseParameter ClassNotFoundException ce ThrowStatement ClassCreator ReferenceType BuildException MemberReference ce	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator bft ClassCreator ReferenceType StatementExpression MethodInvocation bft setUp TryStatement StatementExpression MethodInvocation bft Literal LocalVariableDeclaration ReferenceType String VariableDeclarator fsFullValue MethodInvocation bft Literal getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator fsModValue MethodInvocation bft Literal getProperty StatementExpression MethodInvocation Literal "'fs.full.value' must be set." MemberReference fsFullValue assertNotNull StatementExpression MethodInvocation Literal "'fs.full.value' must not be null." Literal ! MethodInvocation MemberReference fsFullValue equals "" assertTrue StatementExpression MethodInvocation Literal "'fs.full.value' must contain BinaryOperation > MethodInvocation fsFullValue Literal indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal "'fs.mod.value' must be set." MemberReference fsModValue assertNotNull StatementExpression MethodInvocation Literal "'fs.mod.value' must be empty." Literal MethodInvocation MemberReference fsModValue equals "" assertTrue StatementExpression MethodInvocation bft Literal "modifiedselectortest-scenario-clean" StatementExpression MethodInvocation bft deletePropertiesfile StatementExpression MethodInvocation bft tearDown	0
MethodDeclaration Modifier public ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType DirSet MethodInvocation MethodInvocation getProject getRef ReturnStatement ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getDir MethodInvocation MethodInvocation getIncludedDirectories MethodInvocation getProject getDirectoryScanner	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "\\foo\\bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "\\foo\\bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "c:/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "c:/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "c:\\foo" ClassCreator ReferenceType File Literal "c:\\foo\\bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "bar" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "c:\\foo\\" ClassCreator ReferenceType File Literal "c:\\foo\\bar" removeLeadingPath assertEquals IfStatement BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal "netware" isFamily BlockStatement StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath Literal "/bar" normalize MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath Literal "/foobar" normalize MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal ClassCreator ReferenceType File Literal "/foobar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "/foo/bar" ClassCreator ReferenceType File Literal "/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "/foo/bar" ClassCreator ReferenceType File Literal "/foo/bar/" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "/foo/bar/" ClassCreator ReferenceType File Literal "/foo/bar/" removeLeadingPath assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "/foo/bar/" ClassCreator ReferenceType File Literal "/foo/bar" removeLeadingPath assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator expected Literal MethodInvocation Literal '\\' MemberReference File separatorChar replace MethodInvocation Literal '/' MemberReference File separatorChar replace StatementExpression MethodInvocation MemberReference expected MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "/" ClassCreator ReferenceType File Literal "/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation MemberReference expected MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "c:/" ClassCreator ReferenceType File Literal "c:/foo/bar" removeLeadingPath assertEquals StatementExpression MethodInvocation MemberReference expected MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "c:\\" ClassCreator ReferenceType File Literal "c:\\foo\\bar" removeLeadingPath assertEquals	0
MethodDeclaration Modifier public synchronized close IOException IfStatement BinaryOperation && MemberReference alwaysCreate MemberReference ! closed BlockStatement StatementExpression MethodInvocation ensureOpened IfStatement MemberReference opened BlockStatement StatementExpression MethodInvocation fos close StatementExpression Assignment MemberReference closed Literal true =	1
MethodDeclaration Modifier public setCollapseAttributes FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier final StatementExpression Assignment MemberReference invalid Literal true =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private BasicType long getSkip ReturnStatement MemberReference skip	0
MethodDeclaration Modifier private executeOperation BuildException ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation entries elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Entry VariableDeclarator entry Cast ReferenceType Entry MethodInvocation e nextElement StatementExpression MethodInvocation entry MemberReference properties executeOn	0
MethodDeclaration Modifier public ReferenceType getBootclasspath ReturnStatement MemberReference bootclasspath	0
MethodDeclaration Modifier public setCurrentPriority FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized BasicType boolean isFilesystemOnly IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType BaseResourceCollectionContainer MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference IfStatement BinaryOperation || BinaryOperation == MemberReference rc Literal null MethodInvocation rc isFilesystemOnly BlockStatement ReturnStatement Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator cacheCollection MethodInvocation i hasNext BlockStatement IfStatement BinaryOperation instanceof MethodInvocation i next ReferenceType FileResource BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public setManifest FormalParameter ReferenceType File manifest StatementExpression Assignment MemberReference config manifest MemberReference manifest =	0
MethodDeclaration Modifier public FormalParameter BasicType byte b StatementExpression MethodInvocation Literal 17 MemberReference b assertEquals	0
MethodDeclaration Modifier protected ReferenceType Map Exception LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation testClassNames size StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal testcases from " MemberReference count Literal " log LocalVariableDeclaration Modifier final ReferenceType Map VariableDeclarator suites ClassCreator ReferenceType HashMap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation testClassNames MemberReference i get TryStatement LocalVariableDeclaration ReferenceType Test VariableDeclarator test MethodInvocation JUnitHelper Literal null MemberReference classname IfStatement BinaryOperation != MemberReference test Literal null BlockStatement StatementExpression MethodInvocation suites MemberReference classname MemberReference test put CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "Could not get Test instance from " MemberReference classname log StatementExpression MethodInvocation MemberReference e log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Extracted " MethodInvocation suites size Literal " testcases." log ReturnStatement MemberReference suites	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference mComment	0
MethodDeclaration Modifier public BasicType boolean getFork ReturnStatement MemberReference fork	0
MethodDeclaration Modifier public setStoretype FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator ea Cast ReferenceType EnumeratedAttribute MethodInvocation reflectedArg newInstance StatementExpression MethodInvocation ea MemberReference value setValue StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference ea invoke CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "1/foo is not Literal "unziptestout/1/foo" assertFileMissing StatementExpression MethodInvocation Literal is Literal "unziptestout/2/bar" assertFileExists	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validateAttributes LocalVariableDeclaration ReferenceType String VariableDeclarator sourceFiles MethodInvocation path list IfStatement BinaryOperation == MemberReference sourceFiles length Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Path is empty" MemberReference Project MSG_VERBOSE log ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator sources Literal 0 BinaryOperation < MemberReference sources MemberReference sourceFiles length MemberReference ++ sources BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sourceFileName MemberReference ArraySelector MemberReference sources sourceFiles LocalVariableDeclaration ReferenceType File VariableDeclarator sourceFile ClassCreator ReferenceType File MemberReference sourceFileName LocalVariableDeclaration ReferenceType String VariableDeclarator toFiles Cast ReferenceType String MethodInvocation mapper MemberReference sourceFileName mapFileName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator destFileName MemberReference ArraySelector MemberReference i toFiles LocalVariableDeclaration ReferenceType File VariableDeclarator destFile ClassCreator ReferenceType File MemberReference destDir MemberReference destFileName IfStatement MethodInvocation sourceFile MemberReference destFile equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Skipping self-copy of " MemberReference sourceFileName MemberReference Project MSG_VERBOSE log ContinueStatement IfStatement MethodInvocation sourceFile isDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Skipping directory " MemberReference sourceFileName log ContinueStatement TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MemberReference sourceFile Literal " to " MemberReference destFile MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile Literal null Literal null Literal false MemberReference preserveLastModified Literal null Literal null MethodInvocation getProject copyFile CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference sourceFile Literal " to " MemberReference destFile Literal " due to " MethodInvocation ioe getMessage IfStatement BinaryOperation && MethodInvocation destFile exists MethodInvocation ! destFile delete BlockStatement StatementExpression Assignment MemberReference msg BinaryOperation + Literal " and I couldn't delete the corrupt " MemberReference destFile += ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean eval IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation sourceFileSets size Literal 0 BinaryOperation == MethodInvocation sourceResources size Literal 0 BinaryOperation == MemberReference sourceFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "At least one srcfile or a " Literal "<srcfiles> or <srcresources> element " Literal "must be set." IfStatement BinaryOperation && BinaryOperation || BinaryOperation > MethodInvocation sourceFileSets size Literal 0 BinaryOperation > MethodInvocation sourceResources size Literal 0 BinaryOperation != MemberReference sourceFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Cannot specify both the srcfile " Literal and a <srcfiles> " Literal "or <srcresources> element." IfStatement BinaryOperation && BinaryOperation == MemberReference targetFile Literal null BinaryOperation == MemberReference mapperElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The targetfile attribute or a " Literal "mapper element must be set." IfStatement BinaryOperation && BinaryOperation != MemberReference targetFile Literal null MethodInvocation ! targetFile exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "The targetfile \"" MethodInvocation targetFile getAbsolutePath Literal "\" does not exist." MemberReference Project MSG_VERBOSE log ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference sourceFile Literal null MethodInvocation ! sourceFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation sourceFile getAbsolutePath Literal " not found." LocalVariableDeclaration BasicType boolean VariableDeclarator upToDate Literal true IfStatement BinaryOperation != MemberReference sourceFile Literal null BlockStatement IfStatement BinaryOperation == MemberReference mapperElement Literal null BlockStatement StatementExpression Assignment MemberReference upToDate BinaryOperation && MemberReference upToDate BinaryOperation >= MethodInvocation targetFile lastModified MethodInvocation sourceFile lastModified = BlockStatement LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator sfs ClassCreator ReferenceType SourceFileScanner This StatementExpression Assignment MemberReference upToDate BinaryOperation && MemberReference upToDate BinaryOperation == MethodInvocation sfs MemberReference length ArrayCreator ReferenceType String ArrayInitializer MethodInvocation sourceFile getAbsolutePath Literal null Literal null MethodInvocation mapperElement getImplementation restrict Literal 0 = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation sourceFileSets elements WhileStatement BinaryOperation && MemberReference upToDate MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation e nextElement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner StatementExpression Assignment MemberReference upToDate BinaryOperation && MemberReference upToDate MethodInvocation MethodInvocation fs MethodInvocation getProject getDir MethodInvocation ds getIncludedFiles scanDir = IfStatement MemberReference upToDate BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation sourceResources listResources StatementExpression Assignment MemberReference upToDate BinaryOperation && MemberReference upToDate BinaryOperation == MethodInvocation ResourceUtils MemberReference length This MemberReference r MethodInvocation getMapper MethodInvocation getProject selectOutOfDateSources Literal 0 = ReturnStatement MemberReference upToDate	1
MethodDeclaration Modifier public testCreatePropertiesCacheViaCustomSelector LocalVariableDeclaration ReferenceType File VariableDeclarator cachefile MethodInvocation FILE_UTILS Literal "tmp-cache-" Literal ".properties" Literal null createTempFile TryStatement StatementExpression MethodInvocation makeBed LocalVariableDeclaration ReferenceType ExtendSelector VariableDeclarator s ClassCreator ReferenceType ExtendSelector StatementExpression MethodInvocation s Literal "org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector" setClassname StatementExpression MethodInvocation s MethodInvocation Literal "update" Literal "true" createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal "cache.cachefile" MethodInvocation cachefile getAbsolutePath createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal "cache" Literal "propertyfile" createParam addParam LocalVariableDeclaration ReferenceType String VariableDeclarator results MethodInvocation MemberReference s selectionString StatementExpression MethodInvocation Literal "Cache file is not created." MethodInvocation cachefile exists assertTrue StatementExpression MethodInvocation cleanupBed IfStatement BinaryOperation != MemberReference cachefile Literal null StatementExpression MethodInvocation cachefile delete	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal ".xml" assertResultFilesExist	0
MethodDeclaration Modifier protected ReferenceType Commandline setupKjcCommand LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation getCompileClasspath IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-deprecation" setValue createArgument IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference destDir setFile createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator cp ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation getBootClassPath IfStatement BinaryOperation > MethodInvocation p size Literal 0 BlockStatement StatementExpression MethodInvocation cp MemberReference p append IfStatement BinaryOperation != MemberReference extdirs Literal null BlockStatement StatementExpression MethodInvocation cp MemberReference extdirs addExtdirs StatementExpression MethodInvocation cp MemberReference classpath append IfStatement BinaryOperation != MemberReference compileSourcepath Literal null BlockStatement StatementExpression MethodInvocation cp MemberReference compileSourcepath append BlockStatement StatementExpression MethodInvocation cp MemberReference src append StatementExpression MethodInvocation cmd MethodInvocation MemberReference cp setPath createArgument IfStatement BinaryOperation != MemberReference encoding Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-encoding" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference encoding setValue createArgument IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-g" setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MemberReference verbose BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-verbose" setValue createArgument StatementExpression MethodInvocation MemberReference cmd addCurrentCompilerArgs StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier public addDefaultExcludes LocalVariableDeclaration BasicType int VariableDeclarator excludesLength TernaryExpression BinaryOperation == MemberReference Literal null Literal 0 MemberReference length LocalVariableDeclaration ReferenceType Pattern VariableDeclarator newExcludes StatementExpression Assignment MemberReference newExcludes ArrayCreator ReferenceType Pattern BinaryOperation + MemberReference excludesLength MemberReference DEFAULTEXCLUDES length = IfStatement BinaryOperation > MemberReference excludesLength Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference newExcludes Literal 0 MemberReference excludesLength arraycopy ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference DEFAULTEXCLUDES length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference excludesLength newExcludes ClassCreator ReferenceType Pattern = StatementExpression MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference excludesLength MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation Literal '/' MemberReference File separatorChar replace MethodInvocation Literal '\\' MemberReference File separatorChar replace DEFAULTEXCLUDES setPattern newExcludes LocalVariableDeclaration ReferenceType Pattern VariableDeclarator ep ArrayCreator ReferenceType Pattern MemberReference newExcludes length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ep length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ep ClassCreator ReferenceType Pattern = StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getPattern newExcludes setPattern ep StatementExpression Assignment MemberReference MemberReference ep =	0
MethodDeclaration Modifier public FormalParameter ReferenceType handler StatementExpression Assignment This MemberReference executeStreamHandler MemberReference handler =	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference valueString MemberReference s =	0
MethodDeclaration Modifier public test1 IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType FTP ReferenceType FTPDirectoryScanner VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getBaseDir getProject Literal "tmp" setBasedir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" setIncludes StatementExpression MethodInvocation ds scan StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" compareFiles	0
MethodDeclaration Modifier public setHost FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference host MemberReference host =	0
MethodDeclaration Modifier public putNextEntry FormalParameter ReferenceType TarEntry entry IOException IfStatement BinaryOperation >= MethodInvocation entry MethodInvocation length getName MemberReference TarConstants NAMELEN BlockStatement IfStatement BinaryOperation == MemberReference longFileMode MemberReference LONGFILE_GNU BlockStatement LocalVariableDeclaration ReferenceType TarEntry VariableDeclarator longLinkEntry ClassCreator ReferenceType TarEntry MemberReference TarConstants GNU_LONGLINK MemberReference TarConstants LF_GNUTYPE_LONGNAME StatementExpression MethodInvocation longLinkEntry BinaryOperation + MethodInvocation entry MethodInvocation length getName Literal 1 setSize StatementExpression MethodInvocation MemberReference longLinkEntry putNextEntry StatementExpression MethodInvocation MethodInvocation entry MethodInvocation getBytes getName write StatementExpression MethodInvocation Literal 0 write StatementExpression MethodInvocation closeEntry IfStatement BinaryOperation != MemberReference longFileMode MemberReference LONGFILE_TRUNCATE BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "file name '" MethodInvocation entry getName Literal "' is too long ( > " MemberReference TarConstants NAMELEN Literal " bytes)" StatementExpression MethodInvocation entry This MemberReference recordBuf writeEntryHeader StatementExpression This MemberReference buffer MethodInvocation This MemberReference recordBuf writeRecord StatementExpression Assignment This MemberReference currBytes Literal 0 = IfStatement MethodInvocation entry isDirectory BlockStatement StatementExpression Assignment This MemberReference currSize Literal 0 = BlockStatement StatementExpression Assignment This MemberReference currSize MethodInvocation entry getSize = StatementExpression Assignment MemberReference currName MethodInvocation entry getName =	1
MethodDeclaration Modifier public addImageOperation FormalParameter ReferenceType ImageOperation instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier protected writeJar FormalParameter ReferenceType String baseName FormalParameter ReferenceType File jarfile FormalParameter ReferenceType Hashtable files FormalParameter ReferenceType String publicId BuildException LocalVariableDeclaration ReferenceType JarOutputStream VariableDeclarator jarStream Literal null TryStatement IfStatement BinaryOperation == MemberReference addedfiles Literal null BlockStatement StatementExpression Assignment MemberReference addedfiles ClassCreator ReferenceType HashSet = BlockStatement StatementExpression MethodInvocation addedfiles clear IfStatement MethodInvocation jarfile exists BlockStatement StatementExpression MethodInvocation jarfile delete StatementExpression MethodInvocation jarfile MethodInvocation mkdirs getParentFile StatementExpression MethodInvocation jarfile createNewFile LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest Literal null TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator manifestFile Cast ReferenceType File MethodInvocation files MemberReference MANIFEST get IfStatement BinaryOperation && BinaryOperation != MemberReference manifestFile Literal null MethodInvocation manifestFile exists BlockStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference manifestFile = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator defaultManifest Literal "/org/apache/tools/ant/defaultManifest.mf" StatementExpression Assignment MemberReference in This MethodInvocation getClass MethodInvocation MemberReference defaultManifest getResourceAsStream = IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Could not find " Literal "default manifest: " MemberReference defaultManifest StatementExpression Assignment MemberReference manifest ClassCreator ReferenceType Manifest MemberReference in = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to read manifest" MemberReference e MethodInvocation getLocation IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close StatementExpression Assignment MemberReference jarStream ClassCreator ReferenceType JarOutputStream ClassCreator ReferenceType FileOutputStream MemberReference jarfile MemberReference manifest = StatementExpression MethodInvocation jarStream MemberReference JarOutputStream DEFLATED setMethod ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator entryIterator MethodInvocation files MethodInvocation iterator keySet MethodInvocation entryIterator hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entryName Cast ReferenceType String MethodInvocation entryIterator next IfStatement MethodInvocation entryName MemberReference MANIFEST equals BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator entryFile Cast ReferenceType File MethodInvocation files MemberReference entryName get StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "adding file '" MemberReference entryName Literal "'" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference jarStream MemberReference entryFile MemberReference entryName addFileToJar LocalVariableDeclaration ReferenceType InnerClassFilenameFilter VariableDeclarator flt ClassCreator ReferenceType InnerClassFilenameFilter MethodInvocation entryFile getName LocalVariableDeclaration ReferenceType File VariableDeclarator entryDir MethodInvocation entryFile getParentFile LocalVariableDeclaration ReferenceType String VariableDeclarator innerfiles MethodInvocation entryDir MemberReference flt list IfStatement BinaryOperation != MemberReference innerfiles Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator n MemberReference innerfiles length BinaryOperation < MemberReference i MemberReference n MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator entryIndex BinaryOperation - MethodInvocation entryName MethodInvocation entryFile getName lastIndexOf Literal 1 IfStatement BinaryOperation < MemberReference entryIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference entryName MemberReference ArraySelector MemberReference i innerfiles = BlockStatement StatementExpression Assignment MemberReference entryName BinaryOperation + BinaryOperation + MethodInvocation entryName Literal 0 MemberReference entryIndex substring MemberReference File separatorChar MemberReference ArraySelector MemberReference i innerfiles = StatementExpression Assignment MemberReference entryFile ClassCreator ReferenceType File MemberReference config srcDir MemberReference entryName = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "adding innerclass file '" MemberReference entryName Literal "'" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference jarStream MemberReference entryFile MemberReference entryName addFileToJar CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "IOException while processing ejb-jar file '" MethodInvocation jarfile toString Literal "'. Details: " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe IfStatement BinaryOperation != MemberReference jarStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation jarStream close CatchClause CatchClauseParameter IOException closeException	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal "beta " SuperMethodInvocation toString	0
MethodDeclaration Modifier public synchronized ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation clone MethodInvocation getProject getRef BlockStatement TryStatement LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator fs Cast ReferenceType AbstractFileSet SuperMethodInvocation clone StatementExpression Assignment MemberReference fs defaultPatterns Cast ReferenceType PatternSet MethodInvocation defaultPatterns clone = StatementExpression Assignment MemberReference fs additionalPatterns ClassCreator ReferenceType Vector MethodInvocation additionalPatterns size = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation additionalPatterns elements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation fs.additionalPatterns Cast ReferenceType PatternSet MethodInvocation e nextElement addElement StatementExpression Assignment MemberReference fs selectors ClassCreator ReferenceType Vector MemberReference selectors = ReturnStatement MemberReference fs CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier private ReferenceType File getGeneratedFile BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator generatedFileName Literal null TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference targetFile LocalVariableDeclaration ReferenceType String VariableDeclarator line WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator extendsIndex MethodInvocation line Literal " extends " indexOf IfStatement BinaryOperation && MethodInvocation line Literal "class " startsWith BinaryOperation > MemberReference extendsIndex Literal - 1 BlockStatement StatementExpression Assignment MemberReference generatedFileName MethodInvocation line MethodInvocation trim Literal 6 MemberReference extendsIndex substring = BreakStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to determine generated class" MemberReference e IfStatement BinaryOperation == MemberReference generatedFileName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to determine generated class" ReturnStatement ClassCreator ReferenceType File MemberReference outputDirectory BinaryOperation + MemberReference generatedFileName TernaryExpression MemberReference html Literal ".html" Literal ".java"	1
MethodDeclaration Modifier static protected FormalParameter ReferenceType AntHandler handler StatementExpression Assignment MemberReference projectHandler MemberReference handler =	0
MethodDeclaration * @see Copy#scan(File, File, String[], */ Modifier protected scan FormalParameter ReferenceType File fromDir FormalParameter ReferenceType File toDir FormalParameter ReferenceType String files FormalParameter ReferenceType String dirs StatementExpression MethodInvocation Literal "No BinaryOperation == MemberReference mapperElement Literal null assertTrue StatementExpression SuperMethodInvocation MemberReference fromDir MemberReference toDir MemberReference files MemberReference dirs scan ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression MethodInvocation nonOrphans MemberReference ArraySelector MemberReference i files add ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirs length MemberReference ++ i BlockStatement StatementExpression MethodInvocation nonOrphans MemberReference ArraySelector MemberReference i dirs add	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator algo ClassCreator ReferenceType StatementExpression MethodInvocation algo Literal "SHA" setAlgorithm StatementExpression MethodInvocation MemberReference algo doTest	0
MethodDeclaration Modifier private addProperty FormalParameter ReferenceType String name FormalParameter ReferenceType String value FormalParameter ReferenceType String id LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + MemberReference name Literal ":" MemberReference value IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression Assignment MemberReference msg BinaryOperation + BinaryOperation + Literal "(id=" MemberReference id Literal ")" += StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_DEBUG log IfStatement MethodInvocation addedAttributes MemberReference name containsKey BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + Cast ReferenceType String MethodInvocation addedAttributes MemberReference name get Literal "," MemberReference value = StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference value setProperty getProject StatementExpression MethodInvocation addedAttributes MemberReference name MemberReference value put IfStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference name getProperty getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference value setNewProperty getProject StatementExpression MethodInvocation addedAttributes MemberReference name MemberReference value put BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal ignored for property " MemberReference name MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference id MemberReference value getProject	1
MethodDeclaration Modifier protected ReferenceType Commandline setupModernJavacCommand LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation MemberReference cmd setupModernJavacCommandlineSwitches StatementExpression MethodInvocation MemberReference cmd logAndAddFilesToCompile ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier final static protected ReferenceType String FormalParameter ReferenceType String fileName FormalParameter ReferenceType String classpath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement ReturnStatement ClassCreator MethodInvocation getName ReferenceType File MemberReference fileName StatementExpression Assignment MemberReference fileName MethodInvocation fileName MemberReference File separatorChar Literal '/' replace = LocalVariableDeclaration ReferenceType TreeMap VariableDeclarator matches ClassCreator ReferenceType TreeMap ClassCreator ReferenceType Comparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference o1 ReferenceType String BinaryOperation instanceof MemberReference o2 ReferenceType String BlockStatement ReturnStatement BinaryOperation - Cast ReferenceType String MemberReference o2 Cast ReferenceType String MemberReference o1 ReturnStatement Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classpath length MemberReference ++ i BlockStatement IfStatement MethodInvocation fileName MemberReference ArraySelector MemberReference i classpath endsWith BlockStatement StatementExpression MethodInvocation matches MemberReference ArraySelector MemberReference i classpath MemberReference ArraySelector MemberReference i classpath put BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator slash MemberReference ArraySelector MemberReference i MethodInvocation Literal "/" indexOf classpath LocalVariableDeclaration ReferenceType String VariableDeclarator candidate MemberReference ArraySelector MemberReference i classpath WhileStatement BinaryOperation > MemberReference slash Literal - 1 BlockStatement StatementExpression Assignment MemberReference candidate MethodInvocation candidate BinaryOperation + MemberReference slash Literal 1 substring = IfStatement MethodInvocation fileName MemberReference candidate endsWith BlockStatement StatementExpression MethodInvocation matches MemberReference candidate MemberReference ArraySelector MemberReference i classpath put BreakStatement StatementExpression Assignment MemberReference slash MethodInvocation candidate Literal "/" indexOf = ReturnStatement TernaryExpression BinaryOperation == MethodInvocation matches size Literal 0 Literal null Cast ReferenceType String MethodInvocation matches MethodInvocation matches get	1
MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation MemberReference length getCommandline	0
MethodDeclaration Modifier public maybeConfigure FormalParameter ReferenceType Project p BuildException StatementExpression MethodInvocation MemberReference p Literal true maybeConfigure	1
MethodDeclaration Modifier public ReferenceType String getUsername ReturnStatement MemberReference username	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! MethodInvocation getName MethodInvocation MethodInvocation obj MethodInvocation getName getClass equals getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator other Cast ReferenceType UnknownElement MemberReference obj IfStatement MethodInvocation ! MemberReference elementName MemberReference other elementName equalsString BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! namespace MemberReference other namespace equals BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! qname MemberReference other qname equals BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! MethodInvocation getAttributeMap MethodInvocation MethodInvocation other MethodInvocation getAttributeMap getWrapper equals getWrapper BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! MethodInvocation getText MethodInvocation toString MethodInvocation MethodInvocation other MethodInvocation getText MethodInvocation toString getWrapper equals getWrapper BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference children Literal null BinaryOperation == MethodInvocation children size Literal 0 BlockStatement ReturnStatement BinaryOperation || BinaryOperation == MemberReference other children Literal null BinaryOperation == MethodInvocation other.children size Literal 0 IfStatement BinaryOperation == MemberReference other children Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation children size MethodInvocation other.children size BlockStatement ReturnStatement Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation children size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator child Cast ReferenceType UnknownElement MethodInvocation children MemberReference i get IfStatement MethodInvocation ! child MethodInvocation other.children MemberReference i get BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter BasicType boolean staticParser StatementExpression MethodInvocation optionalAttrs MemberReference STATIC TernaryExpression MemberReference staticParser MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType String getProperty FormalParameter ReferenceType String property ReturnStatement MethodInvocation project MemberReference property getProperty	0
MethodDeclaration Modifier public applyExtraArgs FormalParameter ReferenceType NetCommand command LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation getExtraArgs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation command MemberReference ArraySelector MemberReference i args addArgument	1
MethodDeclaration Modifier public setDeleteOnExit FormalParameter BasicType boolean deleteOnExit StatementExpression Assignment This MemberReference deleteOnExit MemberReference deleteOnExit =	0
MethodDeclaration Modifier private ReferenceType String toURLString FormalParameter ReferenceType File file MalformedURLException ReturnStatement MethodInvocation JAXPUtils MemberReference file getSystemId	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator expectedCounts ArrayInitializer Literal 1 Literal 0 Literal 1 Literal 0 Literal 0 Literal 1 Literal 0 StatementExpression MethodInvocation Literal MemberReference expectedCounts performConfigTest	0
MethodDeclaration Modifier protected checkConfiguration BuildException IfStatement BinaryOperation == MethodInvocation cmdl getExecutable Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "no executable specified" MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference dir Literal null MethodInvocation ! dir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The directory " MemberReference dir Literal " does not exist" IfStatement BinaryOperation && BinaryOperation != MemberReference dir Literal null MethodInvocation ! dir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference dir Literal " is not a directory" IfStatement BinaryOperation && MemberReference spawn MemberReference incompatibleWithSpawn BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "spawn does not attributes related to input, " Literal "output, error, result" MemberReference Project MSG_ERR log getProject StatementExpression MethodInvocation MethodInvocation Literal "spawn also does not MemberReference Project MSG_ERR log getProject StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "finally, spawn is not compatible " Literal "with a I/O <redirector>" MemberReference Project MSG_ERR log getProject ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "You have used an attribute " Literal "or element which is not compatible with spawn" StatementExpression MethodInvocation setupRedirector	1
MethodDeclaration Modifier public addDepend FormalParameter ReferenceType selector StatementExpression MethodInvocation fileset MemberReference selector addDepend	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file2 StatementExpression Assignment This MemberReference file2 MemberReference file2 =	0
MethodDeclaration Modifier public setVerbose FormalParameter BasicType int i StatementExpression Assignment MemberReference verbose MemberReference i =	0
MethodDeclaration Modifier private setColors LocalVariableDeclaration ReferenceType String VariableDeclarator userColorFile MethodInvocation System Literal "ant.logger.defaults" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator systemColorFile Literal "/org/apache/tools/ant/listener/defaults.properties" LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator prop ClassCreator ReferenceType Properties IfStatement BinaryOperation != MemberReference userColorFile Literal null BlockStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference userColorFile = BlockStatement StatementExpression Assignment MemberReference in MethodInvocation MethodInvocation MemberReference systemColorFile getResourceAsStream getClass = IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation prop MemberReference in load LocalVariableDeclaration ReferenceType String VariableDeclarator errC MethodInvocation prop Literal "AnsiColorLogger.ERROR_COLOR" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator warn MethodInvocation prop Literal "AnsiColorLogger.WARNING_COLOR" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator info MethodInvocation prop Literal "AnsiColorLogger.INFO_COLOR" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator verbose MethodInvocation prop Literal "AnsiColorLogger.VERBOSE_COLOR" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator debug MethodInvocation prop Literal "AnsiColorLogger.DEBUG_COLOR" getProperty IfStatement BinaryOperation != MemberReference errC Literal null BlockStatement StatementExpression Assignment MemberReference errColor BinaryOperation + BinaryOperation + MemberReference PREFIX MemberReference errC MemberReference SUFFIX = IfStatement BinaryOperation != MemberReference warn Literal null BlockStatement StatementExpression Assignment MemberReference warnColor BinaryOperation + BinaryOperation + MemberReference PREFIX MemberReference warn MemberReference SUFFIX = IfStatement BinaryOperation != MemberReference info Literal null BlockStatement StatementExpression Assignment MemberReference infoColor BinaryOperation + BinaryOperation + MemberReference PREFIX MemberReference info MemberReference SUFFIX = IfStatement BinaryOperation != MemberReference verbose Literal null BlockStatement StatementExpression Assignment MemberReference verboseColor BinaryOperation + BinaryOperation + MemberReference PREFIX MemberReference verbose MemberReference SUFFIX = IfStatement BinaryOperation != MemberReference debug Literal null BlockStatement StatementExpression Assignment MemberReference debugColor BinaryOperation + BinaryOperation + MemberReference PREFIX MemberReference debug MemberReference SUFFIX = CatchClause CatchClauseParameter IOException ioe IfStatement BinaryOperation != MemberReference in Literal null BlockStatement TryStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier private BasicType long ReturnStatement TernaryExpression BinaryOperation < MemberReference millis Literal 0 MethodInvocation System currentTimeMillis MemberReference millis	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference revision	0
MethodDeclaration Modifier public setNext FormalParameter ReferenceType PropertyHelper next StatementExpression Assignment This MemberReference next MemberReference next =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public setVersion FormalParameter ReferenceType String version StatementExpression Assignment This MemberReference version MemberReference version =	0
MethodDeclaration Modifier public setBasedir FormalParameter ReferenceType String baseD BuildException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference baseD setBaseDir	1
MethodDeclaration Modifier public FormalParameter ReferenceType Unit unit StatementExpression Assignment MemberReference field MethodInvocation unit =	0
MethodDeclaration Modifier private synchronized dieIfClosed IOException IfStatement MemberReference closed BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "The OutputStream has been closed."	0
MethodDeclaration Modifier public static ReferenceType String format FormalParameter ReferenceType Date date FormalParameter ReferenceType String pattern LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator df MethodInvocation MemberReference pattern createDateFormat ReturnStatement MethodInvocation df MemberReference date format	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "should fail" Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public setKeepCopy FormalParameter BasicType boolean keep StatementExpression Assignment MemberReference mKeep MemberReference keep =	0
MethodDeclaration Modifier public setOverwrite FormalParameter BasicType boolean overwrite StatementExpression Assignment This MemberReference overwrite MemberReference overwrite =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "testSemanticInclude" Literal false Literal false Literal true Literal false Literal true doTest	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference time ClassCreator ReferenceType Date = LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar getInstance StatementExpression MethodInvocation cal MemberReference time setTime LocalVariableDeclaration BasicType int VariableDeclarator year MethodInvocation cal MemberReference Calendar YEAR get LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation cal MemberReference Calendar MONTH get Literal 1 LocalVariableDeclaration BasicType long VariableDeclarator value BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation << BinaryOperation - MemberReference year Literal 1980 Literal 25 BinaryOperation << MemberReference Literal 21 BinaryOperation << MethodInvocation cal MemberReference Calendar DAY_OF_MONTH get Literal 16 BinaryOperation << MethodInvocation cal MemberReference Calendar HOUR_OF_DAY get Literal 11 BinaryOperation << MethodInvocation cal MemberReference Calendar MINUTE get Literal 5 BinaryOperation >> MethodInvocation cal MemberReference Calendar SECOND get Literal 1 LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte Literal 4 StatementExpression Assignment MemberReference ArraySelector Literal 0 result Cast BasicType byte BinaryOperation & MemberReference value Literal 0xFF = StatementExpression Assignment MemberReference ArraySelector Literal 1 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal 0xFF00 Literal 8 = StatementExpression Assignment MemberReference ArraySelector Literal 2 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal 0xFF0000 Literal 16 = StatementExpression Assignment MemberReference ArraySelector Literal 3 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal 0xFF000000L Literal 24 = StatementExpression Assignment MemberReference zl ClassCreator ReferenceType ZipLong MemberReference result =	0
MethodDeclaration Modifier public FormalParameter ReferenceType test StatementExpression MethodInvocation conditions MemberReference test addElement	0
MethodDeclaration Modifier public testTabInLiteralInComment StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean hasPatterns FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p hasPatterns MemberReference p getRef BlockStatement ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation > MethodInvocation includesFileList size Literal 0 BinaryOperation > MethodInvocation excludesFileList size Literal 0 BinaryOperation > MethodInvocation includeList size Literal 0 BinaryOperation > MethodInvocation excludeList size Literal 0	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required attribute missing" expectBuildException	0
MethodDeclaration Modifier private FormalParameter ReferenceType e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Expected null, found <" MethodInvocation e getName Literal ">" BinaryOperation == MethodInvocation e getName Literal null assertTrue StatementExpression MethodInvocation Literal "address" MethodInvocation e getAddress assertEquals	1
MethodDeclaration Modifier public stop StatementExpression SuperMethodInvocation stop TryStatement StatementExpression MethodInvocation MethodInvocation close getErr StatementExpression MethodInvocation MethodInvocation close getOut CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal assertDebuglogContaining	0
MethodDeclaration Modifier public printStackTrace StatementExpression MethodInvocation MemberReference System err printStackTrace	0
MethodDeclaration Modifier public setDocFile FormalParameter ReferenceType File f StatementExpression Assignment MemberReference docFile MemberReference f =	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal "I am a	0
MethodDeclaration Modifier protected ReferenceType ExecTask LocalVariableDeclaration Modifier final ReferenceType ExecTask VariableDeclarator cmd ClassCreator ReferenceType ExecTask This StatementExpression MethodInvocation cmd MethodInvocation JavaEnvUtils MemberReference JARSIGNER_COMMAND getJdkExecutable setExecutable StatementExpression MethodInvocation cmd MemberReference JARSIGNER_COMMAND setTaskType StatementExpression MethodInvocation cmd Literal true StatementExpression MethodInvocation cmd MemberReference redirector addConfiguredRedirector ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal throws a BinaryOperation + BinaryOperation + BinaryOperation + Literal "specify the " Literal "stylesheet either as a filename in style " Literal or as a resource but not " Literal "as expectSpecificBuildException	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference maxParentLevels MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "six" Literal ClassReference ReferenceType String Literal null assertElemMethod StatementExpression MethodInvocation Literal "thirteen" Literal Literal null ClassReference ReferenceType StringBuffer assertElemMethod StatementExpression MethodInvocation Literal "fourteen" Literal Literal null ClassReference ReferenceType StringBuffer assertElemMethod StatementExpression MethodInvocation Literal "fifteen" Literal ClassReference ReferenceType StringBuffer Literal null assertElemMethod	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ONE_NESTED_MESSAGE IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "resource count = " MethodInvocation rc size log BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference property MethodInvocation Integer MethodInvocation rc size toString setNewProperty getProject	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Hashtable getProperties LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator propertiesCopy ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation properties keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator name MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation properties MemberReference name get StatementExpression MethodInvocation propertiesCopy MemberReference name MemberReference value put ReturnStatement MemberReference propertiesCopy	1
MethodDeclaration Modifier public testAssertRaised TryStatement AssertStatement BinaryOperation == Literal true Literal false StatementExpression MethodInvocation Literal "expected an assertion" fail CatchClause CatchClauseParameter AssertionError asserto	1
MethodDeclaration Modifier public onEndElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType AntXMLContext context StatementExpression MethodInvocation context popWrapper	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MemberReference r setRefid createClasspath	0
MethodDeclaration Modifier public testMyOwnName StatementExpression MethodInvocation Literal "testMyOwnName" MethodInvocation JUnitVersionHelper This getTestCaseName assertEquals	0
MethodDeclaration Modifier public close IOException TryStatement StatementExpression MethodInvocation left close StatementExpression MethodInvocation right close	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference TASKDEFS_DIR Literal configureProject StatementExpression MethodInvocation project Literal "test.property" MemberReference setProperty	0
MethodDeclaration Modifier public ReferenceType String getVendorDDPrefix FormalParameter ReferenceType String baseName FormalParameter ReferenceType String descriptorFileName LocalVariableDeclaration ReferenceType String VariableDeclarator ddPrefix Literal null IfStatement MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme DESCRIPTOR equals getValue BlockStatement StatementExpression Assignment MemberReference ddPrefix BinaryOperation + MemberReference baseName MemberReference config baseNameTerminator = IfStatement BinaryOperation || BinaryOperation || MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme equals getValue MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme EJB_NAME equals getValue MethodInvocation config.namingScheme MethodInvocation MemberReference EjbJar.NamingScheme DIRECTORY equals getValue BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator canonicalDescriptor MethodInvocation descriptorFileName Literal '\\' Literal '/' replace LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation canonicalDescriptor Literal '/' lastIndexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement StatementExpression Assignment MemberReference ddPrefix Literal "" = BlockStatement StatementExpression Assignment MemberReference ddPrefix MethodInvocation descriptorFileName Literal 0 BinaryOperation + MemberReference index Literal 1 substring = ReturnStatement MemberReference ddPrefix	0
MethodDeclaration Modifier public synchronized static ReferenceType SAXParserFactory getNSParserFactory BuildException IfStatement BinaryOperation == MemberReference nsParserFactory Literal null BlockStatement StatementExpression Assignment MemberReference nsParserFactory MethodInvocation newParserFactory = StatementExpression MethodInvocation nsParserFactory Literal true setNamespaceAware ReturnStatement MemberReference nsParserFactory	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation && BinaryOperation != MemberReference includes Literal null BinaryOperation > MethodInvocation includes length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference includes Literal ", " Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation tok nextToken setName createInclude	0
MethodDeclaration Modifier public addVariable FormalParameter ReferenceType Variable var StatementExpression MethodInvocation variables MemberReference var addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "Depend did not leave correct number of files" Literal 0 MethodInvocation MethodInvocation size getResultFiles assertEquals	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation u MemberReference rc add	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal turned into error Literal "Java returned:" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal "I am a	0
MethodDeclaration Modifier public ReferenceType URL getFileURL FormalParameter ReferenceType File file MalformedURLException ReturnStatement ClassCreator ReferenceType URL MethodInvocation MethodInvocation file getAbsolutePath toURI	0
MethodDeclaration Modifier static parsePropertyStringDefault FormalParameter ReferenceType String value FormalParameter ReferenceType Vector fragments FormalParameter ReferenceType Vector propertyRefs BuildException LocalVariableDeclaration BasicType int VariableDeclarator prev Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator pos WhileStatement BinaryOperation >= Assignment MemberReference pos MethodInvocation value Literal "$" MemberReference prev indexOf = Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference pos Literal 0 BlockStatement StatementExpression MethodInvocation fragments MethodInvocation value MemberReference prev MemberReference pos substring addElement IfStatement BinaryOperation == MemberReference pos BinaryOperation - MethodInvocation value length Literal 1 BlockStatement StatementExpression MethodInvocation fragments Literal "$" addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference pos Literal 1 = IfStatement BinaryOperation != MethodInvocation value BinaryOperation + MemberReference pos Literal 1 charAt Literal '{' BlockStatement IfStatement BinaryOperation == MethodInvocation value BinaryOperation + MemberReference pos Literal 1 charAt Literal '$' BlockStatement StatementExpression MethodInvocation fragments Literal "$" addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference pos Literal 2 = BlockStatement StatementExpression MethodInvocation fragments MethodInvocation value MemberReference pos BinaryOperation + MemberReference pos Literal 2 substring addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference pos Literal 2 = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endName MethodInvocation value Literal '}' MemberReference pos indexOf IfStatement BinaryOperation < MemberReference endName Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Syntax error in property: " MemberReference value LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName MethodInvocation value BinaryOperation + MemberReference pos Literal 2 MemberReference endName substring StatementExpression MethodInvocation fragments Literal null addElement StatementExpression MethodInvocation propertyRefs MemberReference propertyName addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference endName Literal 1 = IfStatement BinaryOperation < MemberReference prev MethodInvocation value length BlockStatement StatementExpression MethodInvocation fragments MethodInvocation value MemberReference prev substring addElement	1
MethodDeclaration Modifier public SAXException LocalVariableDeclaration ReferenceType XMLReader VariableDeclarator xerces StatementExpression Assignment MemberReference xerces MethodInvocation XMLReaderFactory Literal "org.apache.xerces.parsers.SAXParser" createXMLReader = StatementExpression MethodInvocation xerces Literal "http://apache.org/xml/features/validation/schema" Literal true	0
MethodDeclaration Modifier protected ReferenceType Map ReturnStatement MemberReference beans	0
MethodDeclaration Modifier final public static ReferenceType String readFully FormalParameter ReferenceType Reader rdr FormalParameter BasicType int bufferSize IOException IfStatement BinaryOperation <= MemberReference bufferSize Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Buffer size must be greater " Literal "than 0" LocalVariableDeclaration Modifier final BasicType char VariableDeclarator buffer ArrayCreator BasicType char MemberReference bufferSize LocalVariableDeclaration BasicType int VariableDeclarator bufferLength Literal 0 LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator textBuffer Literal null WhileStatement BinaryOperation != MemberReference bufferLength Literal - 1 BlockStatement StatementExpression Assignment MemberReference bufferLength MethodInvocation rdr MemberReference buffer read = IfStatement BinaryOperation > MemberReference bufferLength Literal 0 BlockStatement StatementExpression Assignment MemberReference textBuffer TernaryExpression BinaryOperation == MemberReference textBuffer Literal null ClassCreator ReferenceType StringBuffer MemberReference textBuffer = StatementExpression MethodInvocation textBuffer ClassCreator ReferenceType String MemberReference buffer Literal 0 MemberReference bufferLength append ReturnStatement TernaryExpression BinaryOperation == MemberReference textBuffer Literal null Literal null MethodInvocation textBuffer toString	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator timeZone MethodInvocation TimeZone Literal "GMT" getTimeZone LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar MemberReference timeZone getInstance StatementExpression MethodInvocation cal Literal 2002 Literal 2 Literal 27 set StatementExpression MethodInvocation Literal 4 MethodInvocation MemberReference cal assertEquals StatementExpression MethodInvocation cal Literal 2002 Literal 2 Literal 12 set StatementExpression MethodInvocation Literal 0 MethodInvocation MemberReference cal assertEquals	0
MethodDeclaration Modifier public setSkip FormalParameter Modifier final BasicType long skip StatementExpression Assignment This MemberReference skip MemberReference skip =	0
MethodDeclaration Modifier public addFooter FormalParameter ReferenceType Html text StatementExpression Assignment MemberReference footer MemberReference text =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "it is required to fail Literal "Only one condition is expectSpecificBuildException	0
MethodDeclaration Modifier public BasicType boolean hasFilesets ReturnStatement BinaryOperation > MethodInvocation fileSets size Literal 0	1
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType PresentSelector	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ServerThread VariableDeclarator testMailServer ClassCreator ReferenceType ServerThread LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType ClientThread VariableDeclarator testMailClient ClassCreator ReferenceType ClientThread StatementExpression MethodInvocation testMailClient Literal "Mail Message <EmailTaskTest@ant.apache.org>" from StatementExpression MethodInvocation testMailClient Literal Gülcü to StatementExpression MethodInvocation testMailClient Literal "Test subject" setSubject StatementExpression MethodInvocation testMailClient Literal "" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal "InterruptedException: " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator expectedResult BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "220 test EmailTaskTest\r\n" Literal "HELO " MemberReference local Literal "\r\n" Literal "250 " MemberReference local Literal " Hello " MemberReference local Literal " [127.0.0.1], pleased to you\r\n" Literal "MAIL FROM: <EmailTaskTest@ant.apache.org>\r\n" Literal "250\r\n" Literal "RCPT TO: <abuse@mail-abuse.org>\r\n" Literal "250\r\n" Literal "DATA\r\n" Literal "354\r\n" Literal "Subject: Test subject\r\n" Literal Message <EmailTaskTest@ant.apache.org>\r\n" Literal "To: Gülcü <abuse@mail-abuse.org>\r\n" Literal "X-Mailer: org.apache.tools.mail.MailMessage (ant.apache.org)\r\n" Literal "\r\n" Literal "\r\n" Literal "\r\n" Literal ".\r\n" Literal "250\r\n" Literal "QUIT\r\n" Literal "221\r\n" LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos1 ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos2 ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator bos1 ClassCreator ReferenceType PrintStream MemberReference baos1 Literal true LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator bos2 ClassCreator ReferenceType PrintStream MemberReference baos2 Literal true StatementExpression MethodInvocation bos1 MemberReference expectedResult print StatementExpression MethodInvocation bos2 MemberReference result print StatementExpression MethodInvocation BinaryOperation + Literal "expected message length != actual message length " Literal "in testAsciiCharset()" MethodInvocation expectedResult length MethodInvocation result length assertEquals StatementExpression MethodInvocation Literal and baos2 should be the same in testAsciiCharset()" MethodInvocation baos1 toString MethodInvocation baos2 toString assertEquals IfStatement MethodInvocation testMailClient isFailed BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient getFailMessage fail	0
MethodDeclaration Modifier public executeScript FormalParameter ReferenceType String execName BuildException StatementExpression MethodInvocation MemberReference execName evaluateScript	1
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String line StatementExpression MethodInvocation IfStatement MethodInvocation ! regexp MemberReference line MemberReference options matches BlockStatement ReturnStatement MemberReference line ReturnStatement MethodInvocation regexp MemberReference line MethodInvocation MethodInvocation getProject getExpression MemberReference options substitute	1
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference resources Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "You must specify one or more resource collections" IfStatement BinaryOperation > MethodInvocation resources size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation resources iterator LocalVariableDeclaration ReferenceType Resource VariableDeclarator r1 Cast ReferenceType Resource MethodInvocation i next LocalVariableDeclaration ReferenceType Resource VariableDeclarator r2 Literal null WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference r2 Cast ReferenceType Resource MethodInvocation i next = TryStatement IfStatement MethodInvocation ! ResourceUtils MemberReference r1 MemberReference r2 MemberReference asText contentEquals BlockStatement ReturnStatement Literal false CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal comparing resources " MethodInvocation r1 toString Literal " and " MethodInvocation r2 toString MemberReference ioe StatementExpression Assignment MemberReference r1 MemberReference r2 = ReturnStatement Literal true	1
MethodDeclaration Modifier public setPattern FormalParameter ReferenceType String from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal addArgIf	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation project Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project MethodInvocation System Literal "root" getProperty setBasedir	0
MethodDeclaration Modifier public ReferenceType File getDestdir ReturnStatement This MemberReference destDir	0
