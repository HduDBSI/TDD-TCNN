MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation project Literal "basedir" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation project Literal getProperty IfStatement MethodInvocation ! MemberReference expected equals BlockStatement StatementExpression MethodInvocation Literal failed" fail	0
MethodDeclaration Modifier protected ReferenceType createHandler BuildException ReturnStatement TernaryExpression BinaryOperation == MemberReference redirectorElement Literal null SuperMethodInvocation createHandler ClassCreator ReferenceType PumpStreamHandler	1
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation nestedTasks MemberReference nestedTask addElement	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public ReferenceType String StatementExpression MethodInvocation facade MethodInvocation MethodInvocation Literal getProperty getProject ReturnStatement MethodInvocation facade	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Transaction LocalVariableDeclaration ReferenceType Transaction VariableDeclarator t ClassCreator ReferenceType Transaction StatementExpression MethodInvocation transactions MemberReference t addElement ReturnStatement MemberReference t	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal Literal "Unable to process image stream" expectLogContaining CatchClause CatchClauseParameter RuntimeException re StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal time exception should " Literal to process image :" MethodInvocation re toString BinaryOperation > MethodInvocation re MethodInvocation Literal "Unable to process image stream" indexOf toString Literal - 1 assertTrue	1
MethodDeclaration Modifier protected ReferenceType Exception ReturnStatement ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier public BuildException TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "one" Literal "test" setAttribute StatementExpression MethodInvocation Literal doesn't exist" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "two" Literal "test" setAttribute StatementExpression MethodInvocation Literal returns non void" fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "three" Literal "test" setAttribute StatementExpression MethodInvocation Literal takes no fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "four" Literal "test" setAttribute StatementExpression MethodInvocation Literal takes two fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "five" Literal "test" setAttribute StatementExpression MethodInvocation Literal takes array fail CatchClause CatchClauseParameter BuildException be TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "six" Literal "test" setAttribute StatementExpression MethodInvocation Literal "Project doesn't have a String fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation ih MemberReference p This Literal "seven" Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "seven" Literal "3" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to three" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal "eight" Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "eight" Literal "3" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to - as fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal "nine" Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "nine" Literal "3" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to - as fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal "ten" Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "ten" Literal "3" setAttribute StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal shouldn't be equals to " MemberReference Literal "3" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal "eleven" Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal "eleven" Literal "on" setAttribute StatementExpression MethodInvocation Literal shouldn't be fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "on" setAttribute StatementExpression MethodInvocation Literal shouldn't be fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute StatementExpression MethodInvocation Literal shouldn't be equal to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute StatementExpression MethodInvocation Literal doesn't exist" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType ClassNotFoundException assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "on" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to - as fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal "abcd" setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "on" setAttribute StatementExpression MethodInvocation Literal shouldn't be equal to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal "abcd" setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "on" setAttribute StatementExpression MethodInvocation Literal shouldn't be equal to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "3" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to three" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "3" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to three" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue StatementExpression MethodInvocation ih MemberReference p This Literal Literal setAttribute TryStatement StatementExpression MethodInvocation ih MemberReference p This Literal Literal "3" setAttribute StatementExpression MethodInvocation Literal shouldn't be equals to three" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation instanceof MethodInvocation be getException ReferenceType AssertionFailedError assertTrue	1
MethodDeclaration Modifier final static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal "" setValue ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c ClassCreator ReferenceType CommandlineJava StatementExpression MethodInvocation c MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation c Literal setClassname StatementExpression MethodInvocation c MethodInvocation Literal setValue LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation c getCommandline StatementExpression MethodInvocation Literal "no classpath" Literal 4 MemberReference s length assertEquals StatementExpression MethodInvocation Literal "no classpath" Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression MethodInvocation Literal "no classpath" Literal MemberReference ArraySelector Literal 2 s assertEquals StatementExpression MethodInvocation Literal "no classpath" Literal MemberReference ArraySelector Literal 3 s assertEquals TryStatement LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c2 Cast ReferenceType CommandlineJava MethodInvocation c clone CatchClause CatchClauseParameter NullPointerException ex StatementExpression MethodInvocation Literal should work without classpath specified" fail StatementExpression MethodInvocation c MethodInvocation MethodInvocation project Literal setLocation MemberReference project createClasspath StatementExpression MethodInvocation c MethodInvocation MethodInvocation project BinaryOperation + MethodInvocation System MemberReference MagicNames ANT_HOME getProperty Literal setLocation MemberReference project createClasspath StatementExpression Assignment MemberReference s MethodInvocation c getCommandline = StatementExpression MethodInvocation Literal "with classpath" Literal 6 MemberReference s length assertEquals StatementExpression MethodInvocation Literal "with classpath" Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression MethodInvocation Literal "with classpath" Literal "-classpath" MemberReference ArraySelector Literal 2 s assertEquals StatementExpression MethodInvocation Literal BinaryOperation >= MemberReference ArraySelector Literal 3 MethodInvocation BinaryOperation + Literal MemberReference pathSeparator indexOf s Literal 0 assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 3 MethodInvocation Literal endsWith s assertTrue StatementExpression MethodInvocation Literal "with classpath" Literal MemberReference ArraySelector Literal 4 s assertEquals StatementExpression MethodInvocation Literal "with classpath" Literal MemberReference ArraySelector Literal 5 s assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType String component StatementExpression Assignment This MemberReference component MemberReference component =	0
MethodDeclaration Modifier public static ReferenceType CompilerAdapter FormalParameter ReferenceType String compilerType FormalParameter ReferenceType Task task BuildException LocalVariableDeclaration BasicType boolean VariableDeclarator isClassicCompilerSupported Literal true IfStatement BinaryOperation && MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BlockStatement StatementExpression Assignment MemberReference isClassicCompilerSupported Literal false = IfStatement MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement BinaryOperation || BinaryOperation || MethodInvocation compilerType Literal "classic" equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement IfStatement MemberReference isClassicCompilerSupported BlockStatement ReturnStatement ClassCreator ReferenceType BlockStatement StatementExpression MethodInvocation task BinaryOperation + BinaryOperation + Literal "This version of java does " Literal "not support the " Literal to MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference compilerType Literal "modern" = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation compilerType Literal "modern" equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement IfStatement MethodInvocation BlockStatement ReturnStatement ClassCreator ReferenceType BlockStatement IfStatement MemberReference isClassicCompilerSupported BlockStatement StatementExpression MethodInvocation task BinaryOperation + Literal compiler not found - looking for " Literal compiler" MemberReference Project MSG_WARN log ReturnStatement ClassCreator ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to find a " Literal MemberReference Literal " is not on the " Literal Literal does Literal " point to the Literal "It is set to \"" MethodInvocation JavaEnvUtils Literal "\"" IfStatement BinaryOperation || MethodInvocation compilerType Literal equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement BinaryOperation || MethodInvocation compilerType Literal equalsIgnoreCase MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement MethodInvocation MemberReference compilerType resolveClassName	1
MethodDeclaration Modifier private static ReferenceType DocumentBuilder TryStatement ReturnStatement MethodInvocation DocumentBuilderFactory MethodInvocation newDocumentBuilder newInstance CatchClause CatchClauseParameter Exception exc ThrowStatement ClassCreator ReferenceType MemberReference exc	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected runCommand FormalParameter ReferenceType Commandline toExecute BuildException LocalVariableDeclaration ReferenceType Environment VariableDeclarator env ClassCreator ReferenceType Environment IfStatement BinaryOperation > MemberReference port Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal setKey StatementExpression MethodInvocation var MethodInvocation String MemberReference port valueOf setValue StatementExpression MethodInvocation env MemberReference var addVariable IfStatement BinaryOperation == MemberReference passFile Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator defaultPassFile ClassCreator ReferenceType File BinaryOperation + BinaryOperation + MethodInvocation System Literal MethodInvocation System Literal "user.home" getProperty getProperty MemberReference File separatorChar Literal IfStatement MethodInvocation defaultPassFile exists BlockStatement StatementExpression This MethodInvocation MemberReference defaultPassFile IfStatement BinaryOperation != MemberReference passFile Literal null BlockStatement IfStatement BinaryOperation && MethodInvocation passFile isFile MethodInvocation passFile canRead BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal setKey StatementExpression MethodInvocation var MethodInvocation String MemberReference passFile valueOf setValue StatementExpression MethodInvocation env MemberReference var addVariable StatementExpression MethodInvocation BinaryOperation + Literal "Using cvs passfile: " MethodInvocation String MemberReference passFile valueOf MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation ! passFile canRead BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "cvs passfile: " MethodInvocation String MemberReference passFile valueOf Literal " ignored as it is not MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "cvs passfile: " MethodInvocation String MemberReference passFile valueOf Literal " ignored as it is not a file" MemberReference Project MSG_WARN log IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal setKey StatementExpression MethodInvocation var MethodInvocation String MemberReference valueOf setValue StatementExpression MethodInvocation env MemberReference var addVariable LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MethodInvocation Literal null StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement StatementExpression Assignment MemberReference dest MethodInvocation MethodInvocation getProject = IfStatement MethodInvocation ! dest exists BlockStatement StatementExpression MethodInvocation dest mkdirs StatementExpression MethodInvocation exe MemberReference dest setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation toExecute getCommandline setCommandline StatementExpression MethodInvocation exe MethodInvocation env getVariables TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference exe StatementExpression MethodInvocation MemberReference MemberReference Project MSG_VERBOSE log LocalVariableDeclaration BasicType int VariableDeclarator retCode MethodInvocation exe execute StatementExpression MethodInvocation BinaryOperation + Literal MemberReference retCode MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && MemberReference MethodInvocation Execute MemberReference retCode isFailure BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "cvs with error code " MemberReference retCode MemberReference StringUtils LINE_SEP Literal "Command line was [" MemberReference Literal "]" MethodInvocation getLocation CatchClause CatchClauseParameter IOException e IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation BinaryOperation + Literal "Caught exception: " MethodInvocation e getMessage MemberReference Project MSG_WARN log CatchClause CatchClauseParameter BuildException e IfStatement MemberReference BlockStatement ThrowStatement MemberReference e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getException IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference t MemberReference e = StatementExpression MethodInvocation BinaryOperation + Literal "Caught exception: " MethodInvocation t getMessage MemberReference Project MSG_WARN log CatchClause CatchClauseParameter Exception e IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation BinaryOperation + Literal "Caught exception: " MethodInvocation e getMessage MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String target FormalParameter ReferenceType String substring StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference substring	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Class StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType component StatementExpression Assignment MemberReference project MethodInvocation component getProject = StatementExpression MethodInvocation MethodInvocation project getProperties StatementExpression MethodInvocation MethodInvocation project StatementExpression MethodInvocation MethodInvocation project getTargets StatementExpression MethodInvocation MethodInvocation project StatementExpression MethodInvocation Literal MemberReference project StatementExpression MethodInvocation Literal MemberReference component	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal - 1 MethodInvocation MethodInvocation Literal file." indexOf assertEquals StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal - 1 MethodInvocation MethodInvocation Literal file." indexOf assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation MemberReference test Cast ReferenceType Throwable MemberReference t	0
MethodDeclaration Modifier public FormalParameter ReferenceType String securityPolicy StatementExpression Assignment This MemberReference securityPolicy MemberReference securityPolicy =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MethodInvocation getHost Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is required." IfStatement BinaryOperation == MethodInvocation MethodInvocation getName getUserInfo Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is required." IfStatement BinaryOperation && BinaryOperation == MethodInvocation MethodInvocation getUserInfo Literal null BinaryOperation == MethodInvocation MethodInvocation getPassword getUserInfo Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Password or is required." IfStatement BinaryOperation == MemberReference command Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Command is required." LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator out ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType TeeOutputStream VariableDeclarator tee ClassCreator ReferenceType TeeOutputStream MemberReference out ClassCreator ReferenceType MemberReference System out LocalVariableDeclaration ReferenceType Session VariableDeclarator session Literal null TryStatement StatementExpression Assignment MemberReference session MethodInvocation openSession = StatementExpression MethodInvocation session Cast BasicType int MemberReference LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator channel Cast ReferenceType MethodInvocation session Literal StatementExpression MethodInvocation channel MemberReference command StatementExpression MethodInvocation channel MemberReference tee StatementExpression MethodInvocation channel MemberReference tee StatementExpression MethodInvocation channel connect StatementExpression Assignment MemberReference thread ClassCreator ReferenceType Thread MethodDeclaration Modifier public run WhileStatement MethodInvocation ! channel BlockStatement IfStatement BinaryOperation == MemberReference thread Literal null BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation Literal 500 sleep CatchClause CatchClauseParameter Exception e = StatementExpression MethodInvocation thread start StatementExpression MethodInvocation thread MemberReference join IfStatement MethodInvocation thread isAlive BlockStatement StatementExpression Assignment MemberReference thread Literal null = IfStatement MethodInvocation getFailonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference TIMEOUT_MESSAGE BlockStatement StatementExpression MethodInvocation MemberReference TIMEOUT_MESSAGE MemberReference Project MSG_ERR log BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation out toString setProperty getProject IfStatement BinaryOperation != MemberReference outputFile Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation out toString MemberReference append MemberReference outputFile LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation channel IfStatement BinaryOperation != MemberReference Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Remote command failed with exit status " MemberReference IfStatement MethodInvocation getFailonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_ERR log CatchClause CatchClauseParameter BuildException e ThrowStatement MemberReference e CatchClause CatchClauseParameter JSchException e IfStatement BinaryOperation >= MethodInvocation e MethodInvocation Literal is indexOf getMessage Literal 0 BlockStatement IfStatement MethodInvocation getFailonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference TIMEOUT_MESSAGE MemberReference e BlockStatement StatementExpression MethodInvocation MemberReference TIMEOUT_MESSAGE MemberReference Project MSG_ERR log BlockStatement IfStatement MethodInvocation getFailonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Caught exception: " MethodInvocation e getMessage MemberReference Project MSG_ERR log CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation getFailonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Caught exception: " MethodInvocation e getMessage MemberReference Project MSG_ERR log IfStatement BinaryOperation && BinaryOperation != MemberReference session Literal null MethodInvocation session BlockStatement StatementExpression MethodInvocation session disconnect	1
MethodDeclaration Modifier protected ReferenceType InputStream wrapStream FormalParameter ReferenceType InputStream in IOException ReturnStatement ClassCreator ReferenceType GZIPInputStream MemberReference in	1
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType Class testClass IfStatement ClassReference MethodInvocation MemberReference testClass isAssignableFrom ReferenceType Remote BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator interfaces MethodInvocation testClass getInterfaces IfStatement BinaryOperation != MemberReference interfaces Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference interfaces length MemberReference ++ i BlockStatement IfStatement ClassReference MethodInvocation MemberReference ArraySelector MemberReference i interfaces isAssignableFrom ReferenceType Remote BlockStatement ReturnStatement MemberReference ArraySelector MemberReference i interfaces ReturnStatement Literal null	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean format StatementExpression Assignment This MemberReference format MemberReference format =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dirName StatementExpression Assignment MemberReference MemberReference dirName =	0
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String desc StatementExpression Assignment MemberReference MemberReference desc =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference Literal "+" Literal "-"	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "File not found" Literal " doesn't exist" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType Enumeration getAttributes ReturnStatement MethodInvocation attributes elements	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "basedir" executeTarget	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String source LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation reg MemberReference source MemberReference getGroups StatementExpression MethodInvocation result Literal 0 setLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference to length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i to Literal '\\' BlockStatement IfStatement BinaryOperation < MemberReference ++ i MemberReference to length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation Character MemberReference ArraySelector MemberReference i to Literal 10 digit IfStatement BinaryOperation > MemberReference value Literal - 1 BlockStatement StatementExpression MethodInvocation result Cast ReferenceType String MethodInvocation v MemberReference value elementAt append BlockStatement StatementExpression MethodInvocation result MemberReference ArraySelector MemberReference i to append BlockStatement StatementExpression MethodInvocation result Literal '\\' append BlockStatement StatementExpression MethodInvocation result MemberReference ArraySelector MemberReference i to append ReturnStatement MethodInvocation result Literal 0 substring	1
MethodDeclaration Modifier public FormalParameter ReferenceType String toChange BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference toChange Literal null MethodInvocation toChange Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal cannot be null or empty" StatementExpression Assignment This MemberReference toChange MemberReference toChange =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File iashome StatementExpression Assignment This MemberReference iashome MemberReference iashome =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation getVersion Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType StringBuffer name FormalParameter BasicType byte buf FormalParameter BasicType int offset FormalParameter BasicType int length LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation && BinaryOperation < MemberReference i MemberReference length BinaryOperation < MemberReference i MethodInvocation name length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference i buf Cast BasicType byte MethodInvocation name MemberReference i charAt = ForStatement ForControl BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference i buf Literal 0 = ReturnStatement BinaryOperation + MemberReference offset MemberReference length	1
MethodDeclaration Modifier public ReferenceType ReferenceType ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier private static ReferenceType DateFormat FormalParameter ReferenceType String pattern LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference pattern LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator MethodInvocation TimeZone Literal StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal true ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getValue IfStatement BinaryOperation == MethodInvocation values size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation e nextElement StatementExpression Assignment MemberReference BinaryOperation + MemberReference value Literal " " += ReturnStatement MethodInvocation trim	1
MethodDeclaration Modifier public FormalParameter ReferenceType Directory directory IfStatement MethodInvocation ! MemberReference directory contains BlockStatement StatementExpression MethodInvocation MemberReference directory add	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier private throwBuildException FormalParameter ReferenceType BSFException be LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MemberReference be LocalVariableDeclaration ReferenceType Throwable VariableDeclarator te MethodInvocation be getTargetException IfStatement BinaryOperation != MemberReference te Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference te ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference te BlockStatement StatementExpression Assignment MemberReference t MemberReference te = ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	0
MethodDeclaration Modifier public FormalParameter BasicType int offset StatementExpression Assignment This MemberReference offset MemberReference offset =	0
MethodDeclaration Modifier protected setUp StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier public FormalParameter BasicType boolean version StatementExpression Assignment MemberReference MemberReference version =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String args StatementExpression Assignment This MemberReference MemberReference args =	0
MethodDeclaration Modifier private synchronized IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference includePatterns MethodInvocation MemberReference MemberReference includes = StatementExpression Assignment MemberReference excludePatterns MethodInvocation MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal doesn't support expectBuildExceptionContaining	0
MethodDeclaration Modifier public static ReferenceType String getPath FormalParameter Modifier final ReferenceType List FormalParameter Modifier final BasicType char separatorChar LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator IfStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation buffer MethodInvocation iter next append WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation buffer MemberReference separatorChar append StatementExpression MethodInvocation buffer MethodInvocation iter next append ReturnStatement MethodInvocation buffer toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType InputStream getInputStream ReturnStatement MemberReference System in	0
MethodDeclaration Modifier public static initializeClass FormalParameter ReferenceType Class theClass LocalVariableDeclaration Modifier final ReferenceType Constructor VariableDeclarator cons MethodInvocation theClass getDeclaredConstructors IfStatement BinaryOperation != MemberReference cons Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation > MemberReference cons length Literal 0 BinaryOperation != MemberReference ArraySelector Literal 0 cons Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator strs ArrayCreator ReferenceType String MemberReference TryStatement StatementExpression MemberReference ArraySelector Literal 0 MethodInvocation Cast ReferenceType Object MemberReference strs newInstance cons CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference line	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setDefault FormalParameter ReferenceType String defaultValue StatementExpression Assignment This MemberReference defaultValue MemberReference defaultValue =	0
MethodDeclaration ReferenceType Map getStack ReturnStatement Cast ReferenceType Map MethodInvocation get	0
MethodDeclaration Modifier final protected ReferenceType String getClearToolCommand LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference IfStatement BinaryOperation && MethodInvocation ! Literal "" equals MethodInvocation ! Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference Literal "/" += StatementExpression Assignment MemberReference MemberReference += ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal Literal Literal Literal MemberReference Literal MemberReference Literal MemberReference Literal MemberReference Literal MemberReference Literal MemberReference DS_VSS_PROJECT_PATH Literal Literal Literal Literal BinaryOperation + BinaryOperation + MethodInvocation project MethodInvocation getAbsolutePath MemberReference File separator MemberReference Literal MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator sosCheckin ClassCreator ReferenceType StatementExpression MethodInvocation sosCheckin MemberReference project setProject StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin MemberReference StatementExpression MethodInvocation sosCheckin ClassCreator ReferenceType MemberReference project MemberReference StatementExpression MethodInvocation sosCheckin Literal true StatementExpression MethodInvocation sosCheckin Literal true StatementExpression MethodInvocation sosCheckin Literal true StatementExpression MethodInvocation sosCheckin Literal true StatementExpression Assignment MemberReference commandline MethodInvocation sosCheckin = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH MemberReference MSVSS BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference DATE MemberReference MSVSS MemberReference MemberReference MSVSS BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME Literal "," MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator vssHistory ClassCreator ReferenceType StatementExpression MethodInvocation vssHistory MemberReference project setProject StatementExpression MethodInvocation vssHistory BinaryOperation + BinaryOperation + MemberReference VSS_USERNAME Literal "," MemberReference StatementExpression MethodInvocation vssHistory MemberReference StatementExpression MethodInvocation vssHistory MemberReference DATE StatementExpression MethodInvocation vssHistory MemberReference StatementExpression MethodInvocation vssHistory Literal true StatementExpression Assignment MemberReference commandline MethodInvocation vssHistory = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter Modifier final ReferenceType String file StatementExpression MethodInvocation IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal must not be LocalVariableDeclaration BasicType boolean VariableDeclarator retValue Literal false LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference file IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference retValue MethodInvocation f isFile = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference retValue MethodInvocation f isDirectory = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference retValue MemberReference ! retValue = ReturnStatement MemberReference retValue	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType ClassCreator ReferenceType Integer Literal 99 MemberReference StatementExpression MethodInvocation dispatcher MemberReference evt StatementExpression MethodInvocation MemberReference evt MethodInvocation Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation != MemberReference dir Literal null BinaryOperation != MethodInvocation size Literal 0 BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String expression StatementExpression Assignment This MemberReference expression MemberReference expression =	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes StatementExpression SuperMethodInvocation MemberReference includes setIncludes StatementExpression MethodInvocation This MemberReference includes normalize	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean logError StatementExpression MethodInvocation redirector MemberReference logError StatementExpression Assignment MemberReference MemberReference logError |=	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String packages LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference packages Literal "," WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation tok nextToken LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference p setName StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference release MemberReference v =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class ThrowStatement ClassCreator ReferenceType BuildException Literal "Not supported"	1
MethodDeclaration Modifier public FormalParameter ReferenceType ea StatementExpression Assignment MemberReference format MethodInvocation ea getValue =	0
MethodDeclaration Modifier public executeTargets FormalParameter ReferenceType Project project FormalParameter ReferenceType String targetNames BuildException StatementExpression MethodInvocation project MethodInvocation project MemberReference targetNames MethodInvocation project getTargets Literal false topoSort	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "empty namespace MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType VariableDeclarator e Cast ReferenceType MethodInvocation MethodInvocation Literal getReference getProject StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation BinaryOperation + Literal " BinaryOperation + MethodInvocation e MethodInvocation getLineNumber getLocation Literal 1 indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal MemberReference Project MSG_INFO log IfStatement BinaryOperation && BinaryOperation != MemberReference P4View Literal null BinaryOperation >= MethodInvocation P4View length Literal 1 BlockStatement StatementExpression Assignment MemberReference P4View MethodInvocation StringUtils MemberReference P4View Literal ":" Literal "\n\t" replace = StatementExpression Assignment MemberReference P4View MethodInvocation StringUtils MemberReference P4View Literal ";" Literal "\n\t" replace = IfStatement BinaryOperation == MemberReference P4View Literal null BlockStatement StatementExpression Assignment MemberReference P4View Literal "" = IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation < MethodInvocation name length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "name attribute is for IfStatement This MethodInvocation BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " -n" = IfStatement This MethodInvocation BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " = IfStatement This MethodInvocation BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + MemberReference P4CmdOpts Literal " = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s " MemberReference name Literal " " MemberReference P4CmdOpts Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal 3 failed" MethodInvocation Literal Literal compareFiles assertTrue	0
MethodDeclaration Modifier private BasicType long FormalParameter ReferenceType File buildDir LocalVariableDeclaration BasicType long VariableDeclarator latestModified LocalVariableDeclaration BasicType long VariableDeclarator modified LocalVariableDeclaration ReferenceType File VariableDeclarator remoteFile LocalVariableDeclaration ReferenceType File VariableDeclarator homeFile LocalVariableDeclaration ReferenceType File VariableDeclarator implFile LocalVariableDeclaration ReferenceType File VariableDeclarator pkFile StatementExpression Assignment MemberReference remoteFile MethodInvocation remote MemberReference buildDir getClassFile = StatementExpression Assignment MemberReference modified MethodInvocation remoteFile lastModified = IfStatement BinaryOperation == MemberReference modified Literal - 1 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "The class " MethodInvocation remote getQualifiedClassName Literal " couldn't " Literal "be found on the classpath" println ReturnStatement Literal - 1 StatementExpression Assignment MemberReference latestModified MemberReference modified = StatementExpression Assignment MemberReference homeFile MethodInvocation home MemberReference buildDir getClassFile = StatementExpression Assignment MemberReference modified MethodInvocation homeFile lastModified = IfStatement BinaryOperation == MemberReference modified Literal - 1 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "The class " MethodInvocation home getQualifiedClassName Literal " couldn't be " Literal "found on the classpath" println ReturnStatement Literal - 1 StatementExpression Assignment MemberReference latestModified MethodInvocation Math MemberReference latestModified MemberReference modified max = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference pkFile MethodInvocation MemberReference buildDir getClassFile = StatementExpression Assignment MemberReference modified MethodInvocation pkFile lastModified = IfStatement BinaryOperation == MemberReference modified Literal - 1 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "The class " MethodInvocation getQualifiedClassName Literal be " Literal "found on the classpath" println ReturnStatement Literal - 1 StatementExpression Assignment MemberReference latestModified MethodInvocation Math MemberReference latestModified MemberReference modified max = BlockStatement StatementExpression Assignment MemberReference pkFile Literal null = StatementExpression Assignment MemberReference implFile MethodInvocation implementation MemberReference buildDir getClassFile = StatementExpression Assignment MemberReference modified MethodInvocation implFile lastModified = IfStatement BinaryOperation == MemberReference modified Literal - 1 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "The class " MethodInvocation implementation getQualifiedClassName Literal " couldn't be found on the classpath" println ReturnStatement Literal - 1 LocalVariableDeclaration ReferenceType String VariableDeclarator pathToFile MethodInvocation remote getQualifiedClassName StatementExpression Assignment MemberReference pathToFile BinaryOperation + MethodInvocation pathToFile Literal '.' MemberReference File separatorChar replace Literal ".class" = StatementExpression MethodInvocation ejbFiles MemberReference pathToFile MemberReference remoteFile put StatementExpression Assignment MemberReference pathToFile MethodInvocation home getQualifiedClassName = StatementExpression Assignment MemberReference pathToFile BinaryOperation + MethodInvocation pathToFile Literal '.' MemberReference File separatorChar replace Literal ".class" = StatementExpression MethodInvocation ejbFiles MemberReference pathToFile MemberReference homeFile put StatementExpression Assignment MemberReference pathToFile MethodInvocation implementation getQualifiedClassName = StatementExpression Assignment MemberReference pathToFile BinaryOperation + MethodInvocation pathToFile Literal '.' MemberReference File separatorChar replace Literal ".class" = StatementExpression MethodInvocation ejbFiles MemberReference pathToFile MemberReference implFile put IfStatement BinaryOperation != MemberReference pkFile Literal null BlockStatement StatementExpression Assignment MemberReference pathToFile MethodInvocation getQualifiedClassName = StatementExpression Assignment MemberReference pathToFile BinaryOperation + MethodInvocation pathToFile Literal '.' MemberReference File separatorChar replace Literal ".class" = StatementExpression MethodInvocation ejbFiles MemberReference pathToFile MemberReference pkFile put ReturnStatement MemberReference latestModified	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "set" expectPropertySet	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "A" MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Hashtable ejbFiles LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation task getProject ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator Cast ReferenceType FileSet MethodInvocation i next LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation MemberReference project getDir LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator supportScanner MethodInvocation MemberReference project getDirectoryScanner StatementExpression MethodInvocation supportScanner LocalVariableDeclaration ReferenceType String VariableDeclarator supportFiles MethodInvocation supportScanner getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference supportFiles length MemberReference ++ j BlockStatement StatementExpression MethodInvocation ejbFiles MemberReference ArraySelector MemberReference j supportFiles ClassCreator ReferenceType File MemberReference MemberReference ArraySelector MemberReference j supportFiles put	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb Literal append IfStatement BinaryOperation != MemberReference discoveredTasks Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference discoveredTasks length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 StatementExpression MethodInvocation sb Literal ", " append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i discoveredTasks append StatementExpression MethodInvocation sb Literal "]" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType ea StatementExpression Assignment MemberReference format MethodInvocation ea getValue =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType File file FormalParameter BasicType long BuildException StatementExpression MethodInvocation MethodInvocation MemberReference file MemberReference setFileLastModified getProject	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier private test FormalParameter ReferenceType String target StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation Literal BinaryOperation + Literal MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "Current java version is not at least the current java MethodInvocation JavaEnvUtils MethodInvocation JavaEnvUtils assertTrue StatementExpression MethodInvocation Literal "In the current java version is than a new will be MethodInvocation JavaEnvUtils Literal assertFalse	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference preserveLastModified	0
MethodDeclaration Modifier public addPath FormalParameter ReferenceType path StatementExpression MethodInvocation paths MemberReference path add	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Project project FormalParameter ReferenceType Class c TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference c MemberReference project innerCreateAndSet ReturnStatement MemberReference o CatchClause CatchClauseParameter InvocationTargetException ex LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ex getTargetException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create type " MemberReference name Literal " due to " MemberReference t MemberReference t CatchClause CatchClauseParameter NoClassDefFoundError ncdfe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Type " MemberReference name Literal ": A class needed by class " MemberReference c Literal " cannot be found: " MethodInvocation ncdfe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ncdfe CatchClause CatchClauseParameter NoSuchMethodException nsme ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create type " MemberReference name Literal " as the class " MemberReference c Literal " has no compatible CatchClause CatchClauseParameter InstantiationException nsme ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create type " MemberReference name Literal " as the class " MemberReference c Literal " is CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create type " MemberReference name Literal " as the constructor " MemberReference c Literal " is not CatchClause CatchClauseParameter Throwable t ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create type " MemberReference name Literal " due to " MemberReference t MemberReference t	1
MethodDeclaration Modifier public handleErrorOutput FormalParameter ReferenceType String errorOutputToHandle IfStatement BinaryOperation != MemberReference newProject Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference errorOutputToHandle Literal true BlockStatement StatementExpression SuperMethodInvocation MemberReference errorOutputToHandle handleErrorOutput	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference test StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference Literal ")"	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType File jspFile LocalVariableDeclaration ReferenceType String VariableDeclarator className LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation jspFile getName IfStatement MethodInvocation filename Literal endsWith BlockStatement StatementExpression Assignment MemberReference className MethodInvocation filename Literal 0 BinaryOperation - MethodInvocation filename length Literal 4 substring = BlockStatement StatementExpression Assignment MemberReference className MemberReference filename = ReturnStatement MemberReference className	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier private setupRandPartA IOException IfStatement BinaryOperation <= This MemberReference su_i2 This MemberReference last BlockStatement StatementExpression Assignment This MemberReference su_chPrev This MemberReference su_ch2 = LocalVariableDeclaration BasicType int VariableDeclarator su_ch2Shadow BinaryOperation & This MemberReference data MemberReference ll8 ArraySelector This MemberReference su_tPos Literal 0xff StatementExpression Assignment This MemberReference su_tPos This MemberReference data MemberReference ArraySelector This MemberReference su_tPos = IfStatement BinaryOperation == This MemberReference su_rNToGo Literal 0 BlockStatement StatementExpression Assignment This MemberReference su_rNToGo BinaryOperation - MemberReference BZip2Constants ArraySelector This MemberReference su_rTPos rNums Literal 1 = IfStatement BinaryOperation == This ++ MemberReference su_rTPos Literal 512 BlockStatement StatementExpression Assignment This MemberReference su_rTPos Literal 0 = BlockStatement StatementExpression This -- MemberReference su_rNToGo StatementExpression Assignment This MemberReference su_ch2 Assignment MemberReference su_ch2Shadow TernaryExpression BinaryOperation == This MemberReference su_rNToGo Literal 1 Literal 1 Literal 0 ^= = StatementExpression This ++ MemberReference su_i2 StatementExpression Assignment This MemberReference currentChar MemberReference su_ch2Shadow = StatementExpression Assignment This MemberReference MemberReference = StatementExpression This MemberReference crc MethodInvocation MemberReference su_ch2Shadow BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	1
MethodDeclaration Modifier public ReferenceType getCatalogPath ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType String oper IfStatement Literal MethodInvocation MemberReference oper equals "+" BlockStatement ReturnStatement MemberReference IfStatement Literal MethodInvocation MemberReference oper equals "-" BlockStatement ReturnStatement MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MemberReference name TernaryExpression MemberReference optional Literal 1 Literal 0 TernaryExpression MemberReference Literal 1 Literal 0	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "one" Literal "two" Literal "three"	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation extensions MemberReference add	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference append MemberReference value =	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference MemberReference Literal ""	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType boolean VariableDeclarator noExcThrown Literal false TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Literal StatementExpression Assignment MemberReference noExcThrown Literal true = CatchClause CatchClauseParameter Exception e IfStatement MemberReference noExcThrown BlockStatement StatementExpression MethodInvocation Literal fail StatementExpression MethodInvocation BinaryOperation + Literal "Wrong exception type: " MethodInvocation e MethodInvocation getName getClass BinaryOperation instanceof MemberReference e ReferenceType BuildException assertTrue StatementExpression MethodInvocation Literal "Wrong exception Literal "Specified class not found." MethodInvocation e getMessage assertEquals	1
MethodDeclaration Modifier static protected BasicType long FormalParameter BasicType int i IfStatement BinaryOperation < MemberReference i Literal 0 BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation * Literal 2 Cast BasicType long MemberReference Integer MAX_VALUE Literal 2 MemberReference i BlockStatement ReturnStatement MemberReference i	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal not - " BinaryOperation != MethodInvocation e MethodInvocation Literal "was indexOf getMessage Literal - 1 assertTrue ReturnStatement StatementExpression MethodInvocation Literal not throw exception on exception" fail	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "reference Literal must not expectBuildExceptionContaining	0
MethodDeclaration Modifier public addLogMessageToSearch FormalParameter ReferenceType String message StatementExpression MethodInvocation MemberReference message ClassCreator ReferenceType Integer Literal 0 put	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public writeProperties FormalParameter ReferenceType String line IfStatement MemberReference ! StatementExpression MethodInvocation setUp LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation MethodInvocation getProject LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference TryStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType FileWriter VariableDeclarator out ClassCreator ReferenceType java ReferenceType io ReferenceType FileWriter MethodInvocation file getAbsolutePath Literal true StatementExpression MethodInvocation out MemberReference line write StatementExpression MethodInvocation out MethodInvocation System Literal "line.separator" getProperty write StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier final protected ReferenceType Enumeration ReturnStatement MethodInvocation elements	0
MethodDeclaration Modifier protected ReferenceType String BuildException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation elements LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator define Cast ReferenceType MethodInvocation nextElement IfStatement MethodInvocation define This BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation MethodInvocation append StatementExpression MethodInvocation MethodInvocation define This getValue append StatementExpression Assignment MemberReference Literal false = IfStatement BinaryOperation == MethodInvocation length Literal 0 BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement BinaryOperation + Literal MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public addExisting FormalParameter ReferenceType source FormalParameter BasicType boolean tryUserDir LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation source list LocalVariableDeclaration ReferenceType File VariableDeclarator userDir TernaryExpression MemberReference tryUserDir ClassCreator ReferenceType File MethodInvocation System Literal "user.dir" getProperty Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation getProject MemberReference ArraySelector MemberReference i list IfStatement BinaryOperation && MemberReference tryUserDir MethodInvocation ! f exists BlockStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType File MemberReference userDir MemberReference ArraySelector MemberReference i list = IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation MemberReference f setLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference f Literal " from path as it doesn't exist" MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "" MethodInvocation Commandline ArrayCreator ReferenceType String Literal 0 toString assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation Commandline Literal null toString assertEquals StatementExpression MethodInvocation Literal 2 3" MethodInvocation Commandline ArrayCreator ReferenceType String ArrayInitializer Literal "1" Literal Literal "3" toString assertEquals StatementExpression MethodInvocation Literal MethodInvocation Commandline ArrayCreator ReferenceType String ArrayInitializer Literal "1" Literal 3" toString assertEquals StatementExpression MethodInvocation Literal MethodInvocation Commandline ArrayCreator ReferenceType String ArrayInitializer Literal "1" Literal toString assertEquals StatementExpression MethodInvocation Literal MethodInvocation Commandline ArrayCreator ReferenceType String ArrayInitializer Literal "1" Literal toString assertEquals	0
MethodDeclaration Modifier private FormalParameter ReferenceType String property FormalParameter ReferenceType String ending LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation MemberReference property getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator substring MethodInvocation result BinaryOperation - MethodInvocation result length MethodInvocation ending length substring StatementExpression MethodInvocation MemberReference ending MemberReference substring assertEquals	0
MethodDeclaration Modifier public from FormalParameter ReferenceType String from IOException StatementExpression MethodInvocation MemberReference from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public execute IOException JSchException IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference localFile Literal null BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier public FormalParameter ReferenceType String inputEncoding IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference inputEncoding MemberReference inputEncoding =	0
MethodDeclaration Modifier public setBase FormalParameter ReferenceType File base StatementExpression Assignment This MemberReference baseDir MemberReference base =	0
MethodDeclaration Modifier protected initZipOutputStream FormalParameter ReferenceType ZipOutputStream zOut IOException BuildException StatementExpression SuperMethodInvocation MemberReference zOut initZipOutputStream	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Resource getResource FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation MemberReference name getResource IfStatement MethodInvocation name Literal "" equals BlockStatement ReturnStatement ClassCreator ReferenceType Resource Literal "" Literal true MemberReference Long MAX_VALUE Literal true StatementExpression MethodInvocation IfStatement MethodInvocation fileEntries MemberReference name containsKey BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation fileEntries MemberReference name get StatementExpression Assignment MemberReference name MethodInvocation MemberReference name = IfStatement MethodInvocation dirEntries MemberReference name containsKey BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation dirEntries MemberReference name get ReturnStatement ClassCreator ReferenceType Resource MemberReference name	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference MemberReference	1
MethodDeclaration Modifier public synchronized ReferenceType Iterator iterator ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference prefix	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef ClassCreator ReferenceType FileInputStream MethodInvocation getNotNullFile	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType XClass clazz XDocletException LocalVariableDeclaration ReferenceType String VariableDeclarator dir MethodInvocation MemberReference clazz LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference clazz getTaskName ReturnStatement ClassCreator MethodInvocation toString ReferenceType File MemberReference dir BinaryOperation + MemberReference Literal ".xml"	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String version ReturnStatement MethodInvocation Literal null Literal null Literal null MemberReference version	0
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference variables	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier protected ReferenceType String IOException LocalVariableDeclaration ReferenceType String VariableDeclarator Literal IfStatement MethodInvocation MemberReference format equals BlockStatement StatementExpression Assignment MemberReference Literal = IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation BinaryOperation + Literal MemberReference getResource getClass IfStatement BinaryOperation == MemberReference url Literal null BlockStatement ThrowStatement ClassCreator ReferenceType FileNotFoundException BinaryOperation + Literal "Could not find jar resource " MemberReference ReturnStatement MethodInvocation url toExternalForm LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference MemberReference IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType FileNotFoundException BinaryOperation + BinaryOperation + Literal "Could not find file '" MemberReference file Literal "'" ReturnStatement MethodInvocation MemberReference file getSystemId	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal type: " StatementExpression MethodInvocation buf MemberReference type append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public ReferenceType File getFileList ReturnStatement MemberReference compileList	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier public FormalParameter BasicType boolean closure StatementExpression Assignment This MemberReference closure MemberReference closure =	0
MethodDeclaration Modifier protected ReferenceType CommandlineJava getCommandline IfStatement BinaryOperation == MemberReference commandline Literal null BlockStatement StatementExpression Assignment MemberReference commandline ClassCreator ReferenceType CommandlineJava = ReturnStatement MemberReference commandline	0
MethodDeclaration Modifier public BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation MethodInvocation toLowerCase getValue LocalVariableDeclaration ReferenceType Integer VariableDeclarator i Cast ReferenceType Integer MethodInvocation MemberReference key get ReturnStatement MethodInvocation i intValue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String executable IfStatement BinaryOperation || BinaryOperation == MemberReference executable Literal null BinaryOperation == MethodInvocation executable length Literal 0 BlockStatement ReturnStatement StatementExpression Assignment This MemberReference executable MethodInvocation executable MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace =	0
MethodDeclaration Modifier public FormalParameter BasicType int uid StatementExpression Assignment This MemberReference uid MemberReference uid =	0
MethodDeclaration Modifier private FormalParameter ReferenceType FormatterElement feArray FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType String message FormalParameter ReferenceType String testCase TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Using System properties " MethodInvocation System getProperties MemberReference Project MSG_VERBOSE log IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference classLoader Cast ReferenceType AntClassLoader MethodInvocation MethodInvocation getClassLoader getClass = BlockStatement StatementExpression MethodInvocation createClassLoader IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement StatementExpression MethodInvocation classLoader StatementExpression MethodInvocation test Literal 1 Literal 0 Literal 1 StatementExpression MethodInvocation test MethodInvocation MethodInvocation getProperties getProject setProperties ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference feArray length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator fe MemberReference ArraySelector MemberReference i feArray LocalVariableDeclaration ReferenceType File VariableDeclarator outFile MethodInvocation MemberReference fe MemberReference test getOutput LocalVariableDeclaration ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror VariableDeclarator formatter MethodInvocation fe MemberReference classLoader createFormatter IfStatement BinaryOperation && BinaryOperation != MemberReference outFile Literal null BinaryOperation != MemberReference formatter Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out ClassCreator ReferenceType FileOutputStream MemberReference outFile StatementExpression MethodInvocation MemberReference test MemberReference formatter MemberReference out MemberReference message MemberReference testCase CatchClause CatchClauseParameter IOException e IfStatement MemberReference summary BlockStatement LocalVariableDeclaration ReferenceType JUnitTaskMirror ReferenceType VariableDeclarator f MethodInvocation StatementExpression MethodInvocation f Literal MethodInvocation MemberReference equalsIgnoreCase "withoutanderr" StatementExpression MethodInvocation MemberReference test MemberReference f MethodInvocation MemberReference message MemberReference testCase IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement StatementExpression MethodInvocation classLoader	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Target target FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable FormalParameter BasicType int priority LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference target StatementExpression MethodInvocation event MemberReference StatementExpression MethodInvocation MemberReference event MemberReference message MemberReference priority	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator classpath ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation classpath MethodInvocation destDir getAbsolutePath append IfStatement BinaryOperation != This MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation MemberReference classpath This MemberReference classpath ReturnStatement MethodInvocation classpath toString	1
MethodDeclaration Modifier protected ReferenceType BuildException IfStatement BinaryOperation == MemberReference timeout Literal null BlockStatement ReturnStatement Literal null ReturnStatement ClassCreator ReferenceType MethodInvocation timeout longValue	0
MethodDeclaration Modifier private getDir FormalParameter ReferenceType ChannelSftp channel FormalParameter ReferenceType String remoteFile FormalParameter ReferenceType File localFile IOException SftpException LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference remoteFile IfStatement BinaryOperation != MethodInvocation remoteFile Literal '/' lastIndexOf Literal - 1 BlockStatement IfStatement BinaryOperation > MethodInvocation remoteFile length Literal 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation remoteFile Literal 0 MethodInvocation remoteFile Literal '/' lastIndexOf substring = StatementExpression MethodInvocation channel MemberReference cd IfStatement MethodInvocation ! localFile exists BlockStatement StatementExpression MethodInvocation localFile mkdirs LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Vector VariableDeclarator files MethodInvocation channel MemberReference remoteFile ls ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation files size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ChannelSftp ReferenceType LsEntry VariableDeclarator Cast ReferenceType ChannelSftp ReferenceType LsEntry MethodInvocation files MemberReference i elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getFilename IfStatement MethodInvocation MethodInvocation isDir BlockStatement IfStatement BinaryOperation || MethodInvocation name Literal "." equals MethodInvocation name Literal ".." equals BlockStatement ContinueStatement StatementExpression MethodInvocation MemberReference channel BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation channel Literal "/" MemberReference name Literal "/" ClassCreator ReferenceType File MemberReference localFile MethodInvocation getFilename getDir BlockStatement StatementExpression MethodInvocation MemberReference channel MemberReference MemberReference localFile getFile StatementExpression MethodInvocation channel Literal ".." cd	1
MethodDeclaration Modifier public BasicType boolean isExists ReturnStatement BinaryOperation != MethodInvocation getValue Literal null	1
MethodDeclaration Modifier protected ReferenceType URL getResourceURL FormalParameter ReferenceType File file FormalParameter ReferenceType String resourceName TryStatement IfStatement MethodInvocation ! file exists BlockStatement ReturnStatement Literal null IfStatement MethodInvocation file isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator resource ClassCreator ReferenceType File MemberReference file MemberReference resourceName IfStatement MethodInvocation resource exists BlockStatement TryStatement ReturnStatement MethodInvocation FILE_UTILS MemberReference resource getFileURL CatchClause CatchClauseParameter MalformedURLException ex ReturnStatement Literal null BlockStatement LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile Cast ReferenceType ZipFile MethodInvocation MemberReference file get IfStatement BinaryOperation == MemberReference zipFile Literal null BlockStatement StatementExpression Assignment MemberReference zipFile ClassCreator ReferenceType ZipFile MemberReference file = StatementExpression MethodInvocation MemberReference file MemberReference zipFile put LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zipFile MemberReference resourceName getEntry IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement TryStatement ReturnStatement ClassCreator ReferenceType URL BinaryOperation + BinaryOperation + BinaryOperation + Literal MethodInvocation FILE_UTILS MemberReference file getFileURL Literal "!/" MemberReference entry CatchClause CatchClauseParameter MalformedURLException ex ReturnStatement Literal null CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ReturnStatement Literal null	1
MethodDeclaration Modifier public IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation parser Literal file: StatementExpression MethodInvocation parser Literal StatementExpression MethodInvocation parser Literal StatementExpression MethodInvocation parser Literal "I have done I StatementExpression MethodInvocation parser Literal LocalVariableDeclaration ReferenceType VariableDeclarator entries MethodInvocation parser StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation getAuthor entries assertEquals LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar MethodInvocation TimeZone Literal MemberReference getInstance StatementExpression MethodInvocation cal MemberReference Calendar Literal 0 set StatementExpression MethodInvocation cal Literal MemberReference Calendar Literal 5 Literal 16 Literal 10 Literal 32 set LocalVariableDeclaration ReferenceType Date VariableDeclarator date MethodInvocation cal StatementExpression MethodInvocation MemberReference date MemberReference ArraySelector Literal 0 MethodInvocation getDate entries assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation test toString LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType MemberReference id MemberReference MemberReference IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal true assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setDirectory FormalParameter BasicType boolean directory BuildException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal can't change the directory state of a " Literal " compressed resource"	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation formatter MemberReference evt	0
MethodDeclaration Modifier public validate StatementExpression MethodInvocation verifySettings LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getError IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation e nextElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BaseSelector BlockStatement StatementExpression Cast ReferenceType BaseSelector MemberReference o	1
MethodDeclaration Modifier public FormalParameter ReferenceType String args StatementExpression Assignment This MemberReference MemberReference args =	0
MethodDeclaration Modifier public IfStatement BinaryOperation != MemberReference wrapper Literal null BlockStatement StatementExpression MethodInvocation wrapper MethodInvocation getProject	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference cached	0
MethodDeclaration Modifier public final flush IOException IfStatement BinaryOperation > MethodInvocation buffer size Literal 0 BlockStatement StatementExpression MethodInvocation processBuffer	1
MethodDeclaration Modifier public BasicType int read ReturnStatement Literal - 1	0
MethodDeclaration Modifier public FormalParameter ReferenceType list StatementExpression MethodInvocation MemberReference list add	0
MethodDeclaration Modifier public setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression MethodInvocation helper MemberReference file	0
MethodDeclaration Modifier private ReferenceType String IfStatement MethodInvocation paths isEmpty BlockStatement ReturnStatement Literal "" LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator urls ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator list MethodInvocation paths listIterator WhileStatement MethodInvocation list hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator path Cast ReferenceType MethodInvocation list next LocalVariableDeclaration ReferenceType String VariableDeclarator elements MethodInvocation path list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i elements StatementExpression MethodInvocation MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator asUrl MethodInvocation MemberReference f toURL StatementExpression MethodInvocation urls MemberReference asUrl append StatementExpression MethodInvocation MemberReference asUrl MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation urls MemberReference separator append StatementExpression MemberReference ++ count ReturnStatement MethodInvocation MemberReference urls MemberReference count stripTrailingSeparator	1
MethodDeclaration Modifier public FormalParameter ReferenceType File s StatementExpression Assignment This MemberReference source MemberReference s =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType String getValue FormalParameter ReferenceType Hashtable properties FormalParameter ReferenceType String name FormalParameter ReferenceType String defaultValue Exception LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName BinaryOperation + Literal MemberReference name LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation properties MemberReference propertyName get IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference value MemberReference defaultValue = IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType Exception BinaryOperation + Literal "Missing required parameter: " MemberReference propertyName ReturnStatement MemberReference value	1
MethodDeclaration Modifier protected ReferenceType Commandline setupRmicCommand ReturnStatement MethodInvocation Literal null setupRmicCommand	0
MethodDeclaration Modifier private ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator ret ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation System MethodInvocation propertyNames getProperties MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation ret MemberReference name MethodInvocation System MethodInvocation MemberReference name getProperty getProperties put ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation This StatementExpression MethodInvocation Literal null MemberReference name MemberReference value	0
MethodDeclaration Modifier public setLocale FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference Literal " TryStatement StatementExpression Assignment MemberReference language MethodInvocation st nextToken = IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression Assignment MemberReference MethodInvocation st nextToken = IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression Assignment MemberReference variant MethodInvocation st nextToken = IfStatement MethodInvocation st hasMoreElements BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "bad MethodInvocation getLocation BlockStatement StatementExpression Assignment MemberReference Literal "" = CatchClause CatchClauseParameter NoSuchElementException e ThrowStatement ClassCreator ReferenceType BuildException Literal "bad MemberReference e MethodInvocation getLocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference = IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier private FormalParameter ReferenceType BufferedReader reader IOException StatementExpression MethodInvocation MemberReference reader	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference StatementExpression MethodInvocation This MemberReference normalize	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Logger VariableDeclarator log MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Project getLogger StatementExpression MethodInvocation log Literal "Build info	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal 1 failed" MethodInvocation Literal Literal compareFiles assertTrue	0
MethodDeclaration Modifier public BasicType boolean execute BuildException LocalVariableDeclaration ReferenceType VariableDeclarator owner MethodInvocation getRmic LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation setupRmicCommand LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation owner getProject StatementExpression MethodInvocation cmd MethodInvocation JavaEnvUtils MethodInvocation setExecutable LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation cmd getCommandline TryStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler MemberReference owner MemberReference Project MSG_INFO MemberReference Project MSG_WARN StatementExpression MethodInvocation exe MemberReference project setAntRun StatementExpression MethodInvocation exe MethodInvocation project setWorkingDirectory StatementExpression MethodInvocation exe MemberReference args setCommandline StatementExpression MethodInvocation exe execute ReturnStatement MethodInvocation ! exe isFailure CatchClause CatchClauseParameter IOException exception ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Error running " MethodInvocation Literal " it is not on the path" MemberReference exception	1
MethodDeclaration BasicType boolean ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation > MethodInvocation includesFileList size Literal 0 BinaryOperation > MethodInvocation excludesFileList size Literal 0 BinaryOperation > MethodInvocation includeList size Literal 0 BinaryOperation > MethodInvocation excludeList size Literal 0	1
MethodDeclaration Modifier public BasicType boolean retry ReturnStatement Literal false	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference ds Literal null =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator s Cast ReferenceType MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for required fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation BinaryOperation + Literal must set at least one of the min or the " Literal MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 5 StatementExpression MethodInvocation s Literal 2 TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation BinaryOperation + Literal did not check for maximum " Literal "than fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "The maximum depth is lower than the MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayCreator ReferenceType Parameter Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for valid parameter fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid parameter MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression Assignment MemberReference param ClassCreator ReferenceType Parameter = StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal minimum as parameter" fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid minimum value MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression Assignment MemberReference param ClassCreator ReferenceType Parameter = StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal maximum as parameter" fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid maximum value MethodInvocation getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public ReferenceType getEntry FormalParameter BasicType int index ReturnStatement Cast ReferenceType MethodInvocation entries MemberReference index elementAt	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ignore StatementExpression Assignment This MemberReference MemberReference ignore =	0
MethodDeclaration Modifier private static ReferenceType ProjectHelper FormalParameter ReferenceType String helperClass BuildException LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classLoader MethodInvocation getContextClassLoader TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz Literal null IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference clazz MethodInvocation classLoader MemberReference helperClass loadClass = CatchClause CatchClauseParameter ClassNotFoundException ex IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference helperClass forName = ReturnStatement Cast ReferenceType ProjectHelper MethodInvocation clazz newInstance CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType String VariableDeclarator commands MethodInvocation commandLine getCommandline IfStatement BinaryOperation && BinaryOperation > MemberReference Literal 0 BinaryOperation > MemberReference commands length MemberReference BlockStatement StatementExpression Assignment MemberReference Literal true = IfStatement BinaryOperation || MemberReference ! BinaryOperation <= MemberReference commands length Literal 1 BlockStatement StatementExpression MethodInvocation executable MemberReference commands setCommandline BlockStatement LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos Literal null StatementExpression Assignment MemberReference temporaryCommandFile MethodInvocation FILE_UTILS Literal "cmd" Literal ".txt" Literal null createTempFile = StatementExpression MethodInvocation owner BinaryOperation + Literal "Using response file " MemberReference temporaryCommandFile MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference fos ClassCreator ReferenceType FileOutputStream MemberReference temporaryCommandFile = LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedOutputStream MemberReference fos ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference commands length MemberReference ++ i BlockStatement StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i commands println StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal command stream to " MemberReference temporaryCommandFile MemberReference ex LocalVariableDeclaration ReferenceType String VariableDeclarator newCommandLine ArrayCreator ReferenceType String Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 newCommandLine MemberReference ArraySelector Literal 0 commands = StatementExpression Assignment MemberReference ArraySelector Literal 1 newCommandLine BinaryOperation + Literal "@" MethodInvocation temporaryCommandFile getAbsolutePath = StatementExpression MethodInvocation MethodInvocation Commandline MemberReference newCommandLine describeCommand StatementExpression MethodInvocation executable MemberReference newCommandLine setCommandline	1
MethodDeclaration * this method that all the params are * the base implementation checks for remote url validity and if * destination is not null, write access to what be a * call the base class as as check * @return true if is false if we have * problems but allowed to fail on an * BuildException only throw this when the * is */ Modifier protected verifyArguments BuildException LocalVariableDeclaration ReferenceType BuildException VariableDeclarator Literal null IfStatement BinaryOperation == MethodInvocation getURL Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal URL IfStatement BinaryOperation && BinaryOperation != MemberReference dest Literal null MethodInvocation dest exists BlockStatement IfStatement MethodInvocation dest isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The specified destination is a directory" IfStatement MethodInvocation ! dest canWrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Can't write to " MethodInvocation dest getAbsolutePath IfStatement BinaryOperation && BinaryOperation != MemberReference MemberReference BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "no defined to use with	1
MethodDeclaration Modifier public ReferenceType Vector getFiles ReturnStatement MemberReference files	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == This MemberReference filepath Literal null BlockStatement StatementExpression Assignment This MemberReference filepath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference filepath MethodInvocation createPath	0
MethodDeclaration Modifier public addCustom FormalParameter ReferenceType ExtendSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public addNot FormalParameter ReferenceType Not n StatementExpression MethodInvocation MemberReference n addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal "not a top level Literal "import only allowed as a expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType File getBuildFile ReturnStatement MemberReference buildFile	0
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix StatementExpression Assignment This MemberReference prefix MethodInvocation prefix trim =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String property StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MemberReference property Literal null Literal "" MemberReference property =	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation project Literal log	0
MethodDeclaration Modifier protected ReferenceType BuildException IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement Literal null ReturnStatement ClassCreator ReferenceType MethodInvocation MethodInvocation longValue	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference P4View Literal null BlockStatement StatementExpression Assignment MemberReference syncCmd MemberReference P4View = IfStatement BinaryOperation && BinaryOperation != MemberReference label Literal null MethodInvocation ! label Literal "" equals BlockStatement StatementExpression Assignment MemberReference syncCmd BinaryOperation + BinaryOperation + MemberReference syncCmd Literal "@" MemberReference label = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Execing sync " MemberReference P4CmdOpts Literal " " MemberReference syncCmd MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s sync " MemberReference P4CmdOpts Literal " " MemberReference syncCmd ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int options LocalVariableDeclaration BasicType int VariableDeclarator MemberReference IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference feature Literal null BinaryOperation != MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation && BinaryOperation == MemberReference feature Literal null BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation != MemberReference feature Literal null BlockStatement ReturnStatement MethodInvocation IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ReturnStatement MethodInvocation	1
MethodDeclaration Modifier public ReferenceType List ReturnStatement TernaryExpression BinaryOperation < MethodInvocation addTypeMethods size Literal 1 MemberReference Collections EMPTY_LIST MethodInvocation Collections MemberReference addTypeMethods	1
MethodDeclaration Modifier protected deleteDir FormalParameter ReferenceType File d FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation d list IfStatement BinaryOperation == MemberReference list Literal null BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference ArraySelector MemberReference i list LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference d MemberReference s IfStatement MethodInvocation f isDirectory BlockStatement StatementExpression MethodInvocation MemberReference f deleteDir IfStatement BinaryOperation && MemberReference MethodInvocation ! f delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to delete file " MethodInvocation f getAbsolutePath BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal ERROR - The file " MethodInvocation f getAbsolutePath Literal " should not exist!" StatementExpression MethodInvocation BinaryOperation + Literal "Deleting directory " MethodInvocation d getAbsolutePath MemberReference verbosity log IfStatement MethodInvocation ! d delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to delete directory " MethodInvocation d getAbsolutePath	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public parseFromLocalFileData FormalParameter BasicType byte data FormalParameter BasicType int offset FormalParameter BasicType int length ZipException IfStatement BinaryOperation != MemberReference length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType ZipException Literal doesn't any	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType Thread VariableDeclarator current MethodInvocation Thread currentThread LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation buffers MemberReference current get IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression Assignment MemberReference buffer ClassCreator ReferenceType ByteArrayOutputStream MemberReference = StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation buffers MemberReference current MemberReference put ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String outputFile StatementExpression Assignment This MemberReference outputFile MemberReference outputFile =	0
MethodDeclaration Modifier private assertEquals FormalParameter ReferenceType String message FormalParameter ReferenceType String expected FormalParameter ReferenceType String StatementExpression MethodInvocation BinaryOperation + MemberReference message Literal " : string array length MemberReference expected length MemberReference length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference expected length MemberReference ++ counter BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference message Literal " : " MemberReference counter Literal element in array MemberReference ArraySelector MemberReference counter expected MemberReference ArraySelector MemberReference counter assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration ReferenceType ReturnStatement MemberReference formatter	0
MethodDeclaration Modifier public ReferenceType String read FormalParameter ReferenceType BufferedReader reader IOException LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute Literal null WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation reader readLine IfStatement BinaryOperation || BinaryOperation == MemberReference line Literal null BinaryOperation == MethodInvocation line length Literal 0 BlockStatement ReturnStatement Literal null IfStatement BinaryOperation == MethodInvocation line Literal 0 charAt Literal ' ' BlockStatement IfStatement BinaryOperation == MemberReference attribute Literal null BlockStatement IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation line Literal 1 substring += BlockStatement ThrowStatement ClassCreator ReferenceType BinaryOperation + BinaryOperation + Literal "Can't start an " Literal with a line " MemberReference line BlockStatement StatementExpression MethodInvocation attribute MemberReference line BlockStatement StatementExpression Assignment MemberReference attribute ClassCreator ReferenceType Attribute MemberReference line = LocalVariableDeclaration ReferenceType String VariableDeclarator nameReadAhead MethodInvocation MemberReference attribute StatementExpression Assignment MemberReference attribute MethodInvocation MethodInvocation attribute getKey getAttribute = IfStatement BinaryOperation != MemberReference nameReadAhead Literal null BlockStatement ReturnStatement MemberReference nameReadAhead	1
MethodDeclaration Modifier private IOException LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator inUse This MemberReference data MemberReference inUse LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator inUse16 This MemberReference data MemberReference ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 16 BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i inUse16 Literal false = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator i16 BinaryOperation * MemberReference i Literal 16 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 16 BinaryOperation >= MemberReference -- j Literal 0 BlockStatement IfStatement MemberReference ArraySelector BinaryOperation + MemberReference i16 MemberReference j inUse BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i inUse16 Literal true = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 16 MemberReference ++ i BlockStatement StatementExpression MethodInvocation Literal 1 TernaryExpression MemberReference ArraySelector MemberReference i inUse16 Literal 1 Literal 0 bsW LocalVariableDeclaration Modifier final ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 16 MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i inUse16 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator i16 BinaryOperation * MemberReference i Literal 16 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j Literal 16 MemberReference ++ j BlockStatement WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= IfStatement MemberReference ArraySelector BinaryOperation + MemberReference i16 MemberReference j inUse BlockStatement StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation << Literal 1 BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow Literal 1 |= StatementExpression MemberReference ++ bsLiveShadow StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = StatementExpression Assignment This MemberReference bsLive MemberReference bsLiveShadow =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File d StatementExpression Assignment This MemberReference MemberReference d =	0
MethodDeclaration Modifier public StatementExpression This MethodInvocation Literal Literal "the requested resource does not exist" Literal "Could not load definitions from resource " expectBuildExceptionContaining	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference optional	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes StatementExpression MethodInvocation fileset MemberReference includes setIncludes	0
MethodDeclaration Modifier private processExceptions FormalParameter ReferenceType TaskRunnable runnables IfStatement BinaryOperation == MemberReference runnables Literal null BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference runnables length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MemberReference ArraySelector MemberReference i MethodInvocation getException runnables IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression MemberReference ++ numExceptions IfStatement BinaryOperation == MemberReference firstException Literal null BlockStatement StatementExpression Assignment MemberReference firstException MemberReference t = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference t ReferenceType BuildException BinaryOperation == MemberReference firstLocation MemberReference Location UNKNOWN_LOCATION BlockStatement StatementExpression Assignment MemberReference firstLocation Cast ReferenceType BuildException MemberReference t = StatementExpression MethodInvocation exceptionMessage MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation exceptionMessage MethodInvocation t getMessage append	1
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar LocalVariableDeclaration ReferenceType File VariableDeclarator foofile Cast ReferenceType FileResource MemberReference foo LocalVariableDeclaration ReferenceType File VariableDeclarator barfile Cast ReferenceType FileResource MemberReference bar ReturnStatement TernaryExpression MethodInvocation foofile MemberReference barfile equals Literal 0 TernaryExpression MethodInvocation FILE_UTILS MemberReference foofile MemberReference barfile Literal - 1 MethodInvocation FILE_UTILS MethodInvocation MethodInvocation FILE_UTILS MethodInvocation barfile getAbsolutePath normalize compareTo MethodInvocation foofile getAbsolutePath normalize	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference Literal Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal is not Literal StatementExpression MethodInvocation Literal "foo is Literal	0
MethodDeclaration Modifier public ReferenceType String encode FormalParameter Modifier final ReferenceType String string LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation string Literal ',' indexOf IfStatement BinaryOperation == Literal - 1 MemberReference end BlockStatement ReturnStatement MemberReference string LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 WhileStatement BinaryOperation != Literal - 1 MemberReference end BlockStatement StatementExpression MethodInvocation sb MethodInvocation string MemberReference start MemberReference end substring append StatementExpression MethodInvocation sb Literal append StatementExpression Assignment MemberReference start BinaryOperation + MemberReference end Literal 1 = StatementExpression Assignment MemberReference end MethodInvocation string Literal ',' MemberReference start indexOf = StatementExpression MethodInvocation sb MethodInvocation string MemberReference start substring append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration * test is because it * on the file, and */ Modifier protected FormalParameter ReferenceType String target FormalParameter ReferenceType String Exception StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType String StatementExpression MethodInvocation Literal "test4" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator jarFile ClassCreator ReferenceType File MethodInvocation MemberReference LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation jarFile lastModified TryStatement StatementExpression MethodInvocation Thread Literal sleep CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation MemberReference executeTarget StatementExpression MethodInvocation BinaryOperation + Literal has not been in " MemberReference MemberReference MethodInvocation jarFile lastModified assertEquals	0
MethodDeclaration Modifier public ReferenceType DirectoryScanner getDirectoryScanner FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getDirectoryScanner MemberReference p LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds Literal null SynchronizedStatement This IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference p MethodInvocation getProject BlockStatement StatementExpression Assignment MemberReference ds MemberReference = BlockStatement IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "No directory specified for " MethodInvocation getDataTypeName Literal "." IfStatement MethodInvocation ! dir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation dir getAbsolutePath Literal " not found." IfStatement MethodInvocation ! dir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation dir getAbsolutePath Literal " is not a directory." StatementExpression Assignment MemberReference ds ClassCreator ReferenceType DirectoryScanner = StatementExpression MethodInvocation MemberReference ds MemberReference p StatementExpression MethodInvocation ds MemberReference StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MemberReference p MethodInvocation getProject MemberReference ds MemberReference = StatementExpression MethodInvocation ds ReturnStatement MemberReference ds	1
MethodDeclaration Modifier private static ReferenceType String TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator reader MethodInvocation ReturnStatement MethodInvocation reader MethodInvocation getName getClass CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String server StatementExpression Assignment This MemberReference server MemberReference server =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference BinaryOperation + Literal MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File src LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MemberReference src StatementExpression MethodInvocation MemberReference fs	0
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement BinaryOperation > MethodInvocation MethodInvocation size getFilters Literal 0	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No specified" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement StatementExpression Assignment MemberReference dest ClassCreator ReferenceType File MethodInvocation source getParent = IfStatement MethodInvocation dest isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args AssertStatement BinaryOperation == Literal true Literal false Literal exist no that are both true and StatementExpression MethodInvocation System.out Literal are println	0
MethodDeclaration Modifier public FormalParameter ReferenceType String totalproperty StatementExpression Assignment This MemberReference totalproperty MemberReference totalproperty =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType path IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath MemberReference path = BlockStatement StatementExpression MethodInvocation classpath MemberReference path append	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + Literal MemberReference location Literal "]"	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer value StatementExpression MethodInvocation MethodInvocation value intValue	1
MethodDeclaration Modifier protected ReferenceType String getJarBaseName FormalParameter ReferenceType String descriptorFileName LocalVariableDeclaration ReferenceType String VariableDeclarator baseName Literal null IfStatement MethodInvocation MemberReference MethodInvocation getValue MethodInvocation MemberReference equals getConfig BlockStatement IfStatement BinaryOperation == MethodInvocation descriptorFileName MethodInvocation MemberReference getConfig indexOf Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation descriptorFileName Literal '\\' Literal '/' replace LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Literal '/' lastIndexOf LocalVariableDeclaration BasicType int VariableDeclarator IfStatement BinaryOperation != MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation descriptorFileName Literal ".xml" MemberReference indexOf = BlockStatement StatementExpression Assignment MemberReference MethodInvocation descriptorFileName Literal ".xml" indexOf = IfStatement BinaryOperation != MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference baseName MethodInvocation descriptorFileName Literal 0 MemberReference substring = IfStatement BinaryOperation == MemberReference baseName Literal null BlockStatement StatementExpression Assignment MemberReference baseName SuperMethodInvocation MemberReference descriptorFileName getJarBaseName = StatementExpression MethodInvocation BinaryOperation + Literal base name: " MemberReference baseName MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference baseName	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertFalse StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "3" MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal "1" MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal "-->" MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal "." MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public static BasicType boolean isFamily FormalParameter ReferenceType String family ReturnStatement MethodInvocation MemberReference family Literal null Literal null Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType File file StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference file add	0
MethodDeclaration Modifier public IOException IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator linkFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal StatementExpression MethodInvocation System.err BinaryOperation + Literal "link exists " MethodInvocation linkFile exists println TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator command ArrayCreator ReferenceType String ArrayInitializer Literal "ln" Literal "-s" Literal MethodInvocation linkFile getAbsolutePath TryStatement StatementExpression MethodInvocation Runtime MethodInvocation MemberReference command exec getRuntime StatementExpression MethodInvocation Thread Literal 1000 sleep CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + Literal "IOException link " MemberReference ioe fail CatchClause CatchClauseParameter InterruptedException ie LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal StatementExpression MethodInvocation System.err BinaryOperation + Literal "link exists after " MethodInvocation linkFile exists println StatementExpression MethodInvocation System.err BinaryOperation + Literal "Ant it is a " MethodInvocation FileUtils MethodInvocation MemberReference dir Literal isSymbolicLink getFileUtils println LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds Literal true StatementExpression MethodInvocation ds MemberReference dir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds LocalVariableDeclaration BasicType boolean VariableDeclarator haveZipPackage Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator haveTaskdefsPackage Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator included MethodInvocation ds getIncludedDirectories ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference included length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal equals included BlockStatement StatementExpression Assignment MemberReference haveZipPackage Literal true = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference File separator Literal "taskdefs" equals included BlockStatement StatementExpression Assignment MemberReference haveTaskdefsPackage Literal true = StatementExpression MethodInvocation Literal package MemberReference haveZipPackage assertTrue StatementExpression MethodInvocation Literal taskdefs package MemberReference haveTaskdefsPackage assertTrue StatementExpression Assignment MemberReference ds ClassCreator ReferenceType DirectoryScanner = StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds MemberReference dir StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds StatementExpression Assignment MemberReference haveZipPackage Literal false = StatementExpression Assignment MemberReference haveTaskdefsPackage Literal false = StatementExpression Assignment MemberReference included MethodInvocation ds getIncludedDirectories = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference included length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal equals included BlockStatement StatementExpression Assignment MemberReference haveZipPackage Literal true = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference File separator Literal "taskdefs" equals included BlockStatement StatementExpression Assignment MemberReference haveTaskdefsPackage Literal true = StatementExpression MethodInvocation Literal package MemberReference haveZipPackage assertTrue StatementExpression MethodInvocation Literal taskdefs package not MemberReference ! haveTaskdefsPackage assertTrue StatementExpression MethodInvocation System.err BinaryOperation + Literal "link exists " MethodInvocation linkFile exists println IfStatement MethodInvocation ! linkFile delete BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Failed to delete " MemberReference linkFile StatementExpression MethodInvocation System.err BinaryOperation + Literal "link exists " MethodInvocation linkFile exists println	1
MethodDeclaration Modifier public IfStatement MemberReference ! BlockStatement ReturnStatement IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator Cast ReferenceType FileSet MethodInvocation MethodInvocation Literal getReference getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator MethodInvocation MethodInvocation getProject getDirectoryScanner StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public FormalParameter ReferenceType String projectName StatementExpression Assignment This MemberReference projectName MemberReference projectName =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ih MethodInvocation p StatementExpression MethodInvocation MemberReference ih assertNotNull StatementExpression MethodInvocation BinaryOperation instanceof MemberReference ih ReferenceType assertTrue LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation p MemberReference StatementExpression MethodInvocation MemberReference MethodInvocation p assertSame	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setLocalFileDataData FormalParameter BasicType byte data StatementExpression Assignment MemberReference MemberReference data =	0
MethodDeclaration Modifier private FormalParameter ReferenceType List FormalParameter ReferenceType String IOException JSchException LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation MemberReference LocalVariableDeclaration ReferenceType Session VariableDeclarator session Literal null TryStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList MethodInvocation size ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator set Cast ReferenceType FileSet MethodInvocation i next LocalVariableDeclaration ReferenceType Directory VariableDeclarator d MethodInvocation MemberReference set IfStatement BinaryOperation != MemberReference d Literal null BlockStatement StatementExpression MethodInvocation list MemberReference d add IfStatement MethodInvocation ! list isEmpty BlockStatement StatementExpression Assignment MemberReference session MethodInvocation openSession = LocalVariableDeclaration ReferenceType VariableDeclarator message Literal null IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType MethodInvocation MemberReference session MemberReference list MemberReference file = BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType MethodInvocation MemberReference session MemberReference list MemberReference file = StatementExpression MethodInvocation message This StatementExpression MethodInvocation message execute IfStatement BinaryOperation != MemberReference session Literal null BlockStatement StatementExpression MethodInvocation session disconnect	1
MethodDeclaration Modifier public synchronized static ReferenceType Vector getProcEnvironment IfStatement BinaryOperation != MemberReference procEnvironment Literal null BlockStatement ReturnStatement MemberReference procEnvironment StatementExpression Assignment MemberReference procEnvironment ClassCreator ReferenceType Vector = TryStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator out ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType PumpStreamHandler MemberReference out StatementExpression MethodInvocation exe MethodInvocation setCommandline StatementExpression MethodInvocation exe Literal true LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation exe execute IfStatement BinaryOperation != MemberReference retval Literal 0 BlockStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType StringReader MethodInvocation MemberReference out toString IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement StatementExpression Assignment MemberReference procEnvironment MethodInvocation MemberReference procEnvironment MemberReference in = ReturnStatement MemberReference procEnvironment LocalVariableDeclaration ReferenceType String VariableDeclarator var Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator line VariableDeclarator lineSep MemberReference StringUtils LINE_SEP WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation line Literal '=' indexOf Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference var Literal null BlockStatement StatementExpression Assignment MemberReference var BinaryOperation + MemberReference lineSep MemberReference line = BlockStatement StatementExpression Assignment MemberReference var BinaryOperation + MemberReference lineSep MemberReference line += BlockStatement IfStatement BinaryOperation != MemberReference var Literal null BlockStatement StatementExpression MethodInvocation procEnvironment MemberReference var addElement StatementExpression Assignment MemberReference var MemberReference line = IfStatement BinaryOperation != MemberReference var Literal null BlockStatement StatementExpression MethodInvocation procEnvironment MemberReference var addElement CatchClause CatchClauseParameter java.io.IOException exc StatementExpression MethodInvocation exc printStackTrace ReturnStatement MemberReference procEnvironment	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MemberReference evt addElement	0
MethodDeclaration Modifier public ReferenceType Enumeration getDependencies ReturnStatement TernaryExpression BinaryOperation != MemberReference dependencies Literal null MethodInvocation Collections MemberReference dependencies enumeration ClassCreator ReferenceType CollectionUtils ReferenceType	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal doesn't exist" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation == MethodInvocation event getProject MethodInvocation getProject BlockStatement StatementExpression MethodInvocation cleanup	1
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference index MethodInvocation cpStream readUnsignedShort = StatementExpression Assignment MemberReference className Literal =	1
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation p waitFor CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation FileUtils MemberReference f delete	1
MethodDeclaration Modifier private IOException StatementExpression MethodInvocation close StatementExpression Assignment MemberReference reader Literal null =	0
MethodDeclaration Modifier public addOr FormalParameter ReferenceType OrSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier protected ReferenceType InputStream getInputStream ReturnStatement MemberReference in	0
MethodDeclaration Modifier public static ReferenceType URL FormalParameter ReferenceType File location FormalParameter Modifier final ReferenceType String extensions MalformedURLException LocalVariableDeclaration ReferenceType URL VariableDeclarator urls ArrayCreator ReferenceType URL Literal 0 IfStatement MethodInvocation ! location exists BlockStatement ReturnStatement MemberReference urls IfStatement MethodInvocation ! location isDirectory BlockStatement StatementExpression Assignment MemberReference urls ArrayCreator ReferenceType URL Literal 1 = LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation location getPath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement IfStatement MethodInvocation path MethodInvocation MemberReference ArraySelector MemberReference i extensions endsWith toLowerCase BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 urls MethodInvocation MemberReference location fileToURL = BreakStatement ReturnStatement MemberReference urls LocalVariableDeclaration ReferenceType File VariableDeclarator matches MethodInvocation location ClassCreator ReferenceType FilenameFilter MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement IfStatement MethodInvocation name MethodInvocation MemberReference ArraySelector MemberReference i extensions endsWith toLowerCase BlockStatement ReturnStatement Literal true ReturnStatement Literal false listFiles StatementExpression Assignment MemberReference urls ArrayCreator ReferenceType URL MemberReference matches length = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference matches length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i urls MethodInvocation MemberReference ArraySelector MemberReference i matches fileToURL = ReturnStatement MemberReference urls	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ga ClassCreator ReferenceType StatementExpression MethodInvocation classes MemberReference ga addElement ReturnStatement MemberReference ga	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference extdirs	0
MethodDeclaration Modifier public expectSpecificBuildException FormalParameter ReferenceType String target FormalParameter ReferenceType String cause FormalParameter ReferenceType String msg TryStatement StatementExpression MethodInvocation MemberReference target executeTarget CatchClause CatchClauseParameter org.apache.tools.ant.BuildException ex StatementExpression Assignment MemberReference buildException MemberReference ex = IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference msg MethodInvocation ex getMessage BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Should throw BuildException because '" MemberReference cause Literal "' with message '" MemberReference msg Literal "' message '" MethodInvocation ex getMessage Literal "' fail ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "Should throw BuildException " MemberReference cause fail	1
MethodDeclaration Modifier private IfStatement MemberReference ! BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation ftp listFiles MethodInvocation ftp CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation	0
MethodDeclaration Modifier private FormalParameter ReferenceType String filename FormalParameter ReferenceType String contains IOException LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation MemberReference filename StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal file " MemberReference filename Literal " to contain " MemberReference contains Literal " but got " MemberReference content BinaryOperation > MethodInvocation content MemberReference contains indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType File excl BuildException StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference excl StatementExpression Assignment MemberReference ds Literal null =	1
MethodDeclaration Modifier public ReferenceType String getName IfStatement BinaryOperation == MemberReference name Literal null BlockStatement IfStatement BinaryOperation == MemberReference implementation Literal null BlockStatement ReturnStatement Literal BlockStatement ReturnStatement MethodInvocation implementation getClassName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType VariableDeclarator LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation project Literal getReference StatementExpression Assignment MemberReference MethodInvocation = LocalVariableDeclaration ReferenceType Object VariableDeclarator value Literal null IfStatement BinaryOperation != MemberReference Literal null StatementExpression Assignment MemberReference value MethodInvocation project MemberReference getReference = IfStatement BinaryOperation == MemberReference value Literal null StatementExpression Assignment MemberReference value MemberReference = StatementExpression MethodInvocation MemberReference path MemberReference value setValue	1
MethodDeclaration Modifier public FormalParameter BasicType int height StatementExpression Assignment This MemberReference height MemberReference height =	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression MethodInvocation server StatementExpression MethodInvocation runner stop	0
MethodDeclaration Modifier public ReferenceType String getPassword ReturnStatement MemberReference password	0
MethodDeclaration Modifier public add FormalParameter ReferenceType IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one mapper StatementExpression Assignment MemberReference mapper MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType CommandlineJava command LocalVariableDeclaration ReferenceType VariableDeclarator clause MethodInvocation IfStatement MethodInvocation Boolean.TRUE MemberReference clause equals BlockStatement StatementExpression MethodInvocation MemberReference command Literal IfStatement MethodInvocation MemberReference clause equals BlockStatement StatementExpression MethodInvocation MemberReference command Literal LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation StatementExpression MethodInvocation MemberReference command MemberReference arg	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType int changelist BuildException IfStatement BinaryOperation <= MemberReference changelist Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal should be a positive number" StatementExpression Assignment This MemberReference changelist MemberReference changelist =	1
MethodDeclaration Modifier public FormalParameter ReferenceType address StatementExpression This MemberReference replyToList MethodInvocation MemberReference address add	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MemberReference user Literal null BinaryOperation + MemberReference MemberReference user Literal ""	0
MethodDeclaration Modifier private FormalParameter ReferenceType String filename ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator filter Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal in " MemberReference filename Literal ": " MethodInvocation filter getToken Literal " " MethodInvocation filter MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public addModified FormalParameter ReferenceType ModifiedSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test t StatementExpression MethodInvocation MemberReference t ClassCreator ReferenceType Long MethodInvocation System currentTimeMillis put	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference srcDir MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference server Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No server specified in socket " Literal "condition" IfStatement BinaryOperation == MemberReference port Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No port specified in socket StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Checking for listener at " MemberReference server Literal ":" MemberReference port MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType java ReferenceType net ReferenceType Socket VariableDeclarator s Literal null TryStatement StatementExpression Assignment MemberReference s ClassCreator ReferenceType java ReferenceType net ReferenceType Socket MemberReference server MemberReference port = CatchClause CatchClauseParameter IOException e ReturnStatement Literal false IfStatement BinaryOperation != MemberReference s Literal null BlockStatement TryStatement StatementExpression MethodInvocation s close CatchClause CatchClauseParameter IOException ioe ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter BasicType int minutes StatementExpression Assignment This MemberReference minutes MemberReference minutes =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier protected handleChildren FormalParameter ReferenceType Object parent FormalParameter ReferenceType RuntimeConfigurable parentWrapper BuildException IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TypeAdapter BlockStatement StatementExpression Assignment MemberReference parent Cast ReferenceType TypeAdapter MemberReference parent = LocalVariableDeclaration ReferenceType String VariableDeclarator parentUri MethodInvocation getNamespace LocalVariableDeclaration ReferenceType Class VariableDeclarator parentClass MethodInvocation parent getClass LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MethodInvocation getProject MemberReference parentClass getHelper IfStatement BinaryOperation != MemberReference children Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation children iterator ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation it hasNext MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator MethodInvocation parentWrapper MemberReference i getChild LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator child Cast ReferenceType UnknownElement MethodInvocation it next TryStatement IfStatement MethodInvocation ! MemberReference parentUri MemberReference ih MemberReference parent MemberReference child MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TaskContainer BlockStatement StatementExpression MethodInvocation ih MethodInvocation getProject MemberReference parent MethodInvocation child getTag BlockStatement LocalVariableDeclaration ReferenceType TaskContainer VariableDeclarator container Cast ReferenceType TaskContainer MemberReference parent StatementExpression MethodInvocation container MemberReference child CatchClause CatchClauseParameter UnsupportedElementException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation parentWrapper Literal " doesn't support the \"" MethodInvocation ex getElement Literal "\" MemberReference ex	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier final protected IOException LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation def MemberReference buf Literal 0 MemberReference buf length IfStatement BinaryOperation > MemberReference len Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference buf Literal 0 MemberReference len writeOut	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal is not Literal StatementExpression MethodInvocation Literal is Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "0" MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference MemberReference s =	0
MethodDeclaration Modifier public ReferenceType DateFormat ReturnStatement MethodInvocation DateFormat MemberReference DateFormat SHORT MemberReference DateFormat MEDIUM MemberReference	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " MethodInvocation MethodInvocation Literal getProperty getProject Literal " expectLog	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType FileSet VariableDeclarator resultFileSet Cast ReferenceType FileSet MethodInvocation p MemberReference RESULT_FILESET getReference LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation resultFileSet MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator scannedFiles MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference scannedFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i scannedFiles MemberReference ArraySelector MemberReference i scannedFiles put StatementExpression MethodInvocation BinaryOperation + Literal "Classfileset did not pick up expected number of " Literal "class files" Literal 4 MethodInvocation files size assertEquals StatementExpression MethodInvocation Literal "Result did not contain MethodInvocation files Literal containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain B.class" MethodInvocation files Literal "B.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain C.class" MethodInvocation files Literal "C.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain MethodInvocation files Literal containsKey assertTrue	1
MethodDeclaration Modifier public FormalParameter BasicType int size StatementExpression Assignment MemberReference MemberReference size =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation getProject Literal null BlockStatement ReturnStatement SuperMethodInvocation toString IfStatement BinaryOperation != MemberReference src Literal null BlockStatement ReturnStatement MethodInvocation src getName BlockStatement ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference includesFileList	0
MethodDeclaration Modifier protected ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator classpath ClassCreator ReferenceType MethodInvocation attributes getProject StatementExpression MethodInvocation classpath MethodInvocation attributes getBase setLocation LocalVariableDeclaration ReferenceType VariableDeclarator cp MethodInvocation attributes IfStatement BinaryOperation == MemberReference cp Literal null BlockStatement StatementExpression Assignment MemberReference cp ClassCreator ReferenceType MethodInvocation attributes getProject = IfStatement MethodInvocation attributes BlockStatement StatementExpression MethodInvocation classpath MethodInvocation cp Literal concatSystemClasspath addExisting BlockStatement StatementExpression MethodInvocation classpath MethodInvocation cp Literal "ignore" concatSystemClasspath addExisting IfStatement MethodInvocation attributes BlockStatement StatementExpression MethodInvocation classpath ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator task Cast ReferenceType ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference task addElement ReturnStatement MemberReference task	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal expectBuildExceptionContaining	1
MethodDeclaration Modifier public FormalParameter ReferenceType String proxy StatementExpression Assignment This MemberReference proxy MemberReference proxy =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int getCode ReturnStatement MemberReference code	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator ClassReference MethodInvocation getClassLoader ReferenceType LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator path ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation path MemberReference antRuntimeClasses add StatementExpression MethodInvocation path MethodInvocation MethodInvocation getCommandline add StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference MemberReference path = BlockStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference MethodInvocation This MemberReference = LocalVariableDeclaration ReferenceType List VariableDeclarator ClassCreator ReferenceType ArrayList LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation MethodInvocation MemberReference equals getValue IfStatement BinaryOperation || MemberReference MethodInvocation MethodInvocation MemberReference equals getValue BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference addAll BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation MethodInvocation MethodInvocation elements Literal false addAll StatementExpression MethodInvocation MethodInvocation MethodInvocation tests elements MemberReference addAll TryStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator l Cast ReferenceType List MethodInvocation iter next IfStatement BinaryOperation == MethodInvocation l size Literal 1 BlockStatement StatementExpression MethodInvocation Cast ReferenceType JUnitTest MethodInvocation l Literal 0 get execute BlockStatement StatementExpression MethodInvocation MemberReference l execute StatementExpression MethodInvocation IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public FormalParameter ReferenceType path IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal be set only StatementExpression Assignment MemberReference classpath MemberReference path =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment MemberReference proxyPort MemberReference port =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Attribute attribute IfStatement BinaryOperation || BinaryOperation == MethodInvocation attribute getName Literal null BinaryOperation == MethodInvocation attribute getValue Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must have name and value" IfStatement MethodInvocation attribute MethodInvocation MemberReference equalsIgnoreCase getKey BlockStatement StatementExpression MethodInvocation warnings BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "\"" MemberReference Literal "\" attributes " Literal "should not occur in the main section and must be the " Literal element in all other \"" MethodInvocation attribute getName Literal ": " MethodInvocation attribute getValue Literal "\"" addElement ReturnStatement MethodInvocation attribute getValue IfStatement MethodInvocation attribute MethodInvocation MethodInvocation toLowerCase startsWith getKey BlockStatement StatementExpression MethodInvocation warnings BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MethodInvocation attribute getName Literal ": " MethodInvocation attribute getValue Literal "\"" addElement BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation attribute getKey IfStatement MethodInvocation MemberReference ATTRIBUTE_CLASSPATH equalsIgnoreCase BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator classpathAttribute Cast ReferenceType Attribute MethodInvocation attributes MemberReference get IfStatement BinaryOperation == MemberReference classpathAttribute Literal null BlockStatement StatementExpression MethodInvocation MemberReference attribute storeAttribute BlockStatement StatementExpression MethodInvocation warnings BinaryOperation + BinaryOperation + BinaryOperation + Literal attributes " Literal "are supported but the Jar " Literal and may not be " Literal in all addElement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation attribute WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation classpathAttribute MemberReference value addValue IfStatement MethodInvocation attributes MemberReference containsKey BlockStatement ThrowStatement ClassCreator ReferenceType BinaryOperation + BinaryOperation + BinaryOperation + Literal "The attribute \"" MethodInvocation attribute getName Literal "\" may not occur more " Literal "than once in the same BlockStatement StatementExpression MethodInvocation MemberReference attribute storeAttribute ReturnStatement Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator bos ClassCreator ReferenceType ByteArrayOutputStream StatementExpression This MethodInvocation MemberReference bos LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator ClassCreator ReferenceType ByteArrayOutputStream StatementExpression This MethodInvocation MemberReference StatementExpression MethodInvocation Literal "version" StatementExpression SuperMethodInvocation execute LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation bos toString LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference output LocalVariableDeclaration BasicType boolean VariableDeclarator client Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator server Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator cvs Literal false WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentToken MethodInvocation st nextToken IfStatement MethodInvocation currentToken Literal equals BlockStatement StatementExpression Assignment MemberReference client Literal true = IfStatement MethodInvocation currentToken Literal equals BlockStatement StatementExpression Assignment MemberReference server Literal true = IfStatement MethodInvocation currentToken Literal equals BlockStatement StatementExpression Assignment MemberReference cvs Literal true = IfStatement BinaryOperation && MemberReference client MemberReference cvs BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference MethodInvocation st nextToken = StatementExpression Assignment MemberReference client Literal false = StatementExpression Assignment MemberReference cvs Literal false = IfStatement BinaryOperation && MemberReference server MemberReference cvs BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference MethodInvocation st nextToken = StatementExpression Assignment MemberReference server Literal false = StatementExpression Assignment MemberReference cvs Literal false = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference setNewProperty getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference setNewProperty getProject	1
MethodDeclaration Modifier public ReferenceType String elementName XDocletException LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation MethodInvocation getName LocalVariableDeclaration ReferenceType String VariableDeclarator elementName Literal a valid IfStatement MethodInvocation methodName Literal "addConfigured" startsWith BlockStatement StatementExpression Assignment MemberReference elementName MethodInvocation methodName Literal 13 MethodInvocation methodName length substring = IfStatement MethodInvocation methodName Literal startsWith BlockStatement StatementExpression Assignment MemberReference elementName MethodInvocation methodName Literal 3 MethodInvocation methodName length substring = IfStatement MethodInvocation methodName Literal "create" startsWith BlockStatement StatementExpression Assignment MemberReference elementName MethodInvocation methodName Literal 6 MethodInvocation methodName length substring = ReturnStatement MethodInvocation elementName toLowerCase	1
MethodDeclaration Modifier public test1 LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" compareFiles	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation project Literal getProperty StatementExpression MethodInvocation Literal "" MemberReference assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String vpath ReturnStatement MethodInvocation ! MemberReference vpath add	0
MethodDeclaration Modifier public appendSelector FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation fileset MemberReference selector appendSelector	1
MethodDeclaration Modifier protected ReferenceType Execute FormalParameter ReferenceType Commandline toExecute FormalParameter ReferenceType LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference Literal null StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getProject = StatementExpression MethodInvocation exe MemberReference setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation toExecute getCommandline setCommandline ReturnStatement MemberReference exe	0
MethodDeclaration Modifier private ReferenceType FormalParameter Modifier final ReferenceType entrySet LocalVariableDeclaration Modifier final ReferenceType Vector VariableDeclarator results ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference entrySet length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator cvsEntry MemberReference ArraySelector MemberReference i entrySet LocalVariableDeclaration Modifier final ReferenceType Date VariableDeclarator date MethodInvocation cvsEntry getDate IfStatement BinaryOperation == Literal null MemberReference date BlockStatement ContinueStatement IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation MemberReference date after BlockStatement ContinueStatement IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation MemberReference date before BlockStatement ContinueStatement StatementExpression MethodInvocation results MemberReference cvsEntry addElement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ArrayCreator ReferenceType MethodInvocation results size StatementExpression MethodInvocation results MemberReference copyInto ReturnStatement MemberReference	1
MethodDeclaration Modifier protected ReferenceType BuildException ReturnStatement TernaryExpression BinaryOperation == MemberReference timeout Literal null Literal null ClassCreator ReferenceType MethodInvocation timeout longValue	0
MethodDeclaration Modifier public FormalParameter ReferenceType IfStatement BinaryOperation == This MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference MemberReference = BlockStatement StatementExpression This MemberReference MethodInvocation MemberReference append	0
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int alphaSize FormalParameter Modifier final BasicType int nGroups LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType char VariableDeclarator len MemberReference dataShadow LocalVariableDeclaration Modifier final BasicType int VariableDeclarator minLens MemberReference dataShadow minLens LocalVariableDeclaration Modifier final BasicType int VariableDeclarator limit MemberReference dataShadow limit LocalVariableDeclaration Modifier final BasicType int VariableDeclarator base MemberReference dataShadow base LocalVariableDeclaration Modifier final BasicType int VariableDeclarator perm MemberReference dataShadow perm ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference nGroups MemberReference ++ t BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator minLen Literal 32 LocalVariableDeclaration BasicType int VariableDeclarator maxLen Literal 0 LocalVariableDeclaration Modifier final BasicType char VariableDeclarator len_t MemberReference ArraySelector MemberReference t len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference alphaSize BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType char VariableDeclarator lent MemberReference ArraySelector MemberReference i len_t IfStatement BinaryOperation > MemberReference lent MemberReference maxLen BlockStatement StatementExpression Assignment MemberReference maxLen MemberReference lent = IfStatement BinaryOperation < MemberReference lent MemberReference minLen BlockStatement StatementExpression Assignment MemberReference minLen MemberReference lent = StatementExpression MethodInvocation MemberReference ArraySelector MemberReference t limit MemberReference ArraySelector MemberReference t base MemberReference ArraySelector MemberReference t perm MemberReference ArraySelector MemberReference t len MemberReference minLen MemberReference maxLen MemberReference alphaSize hbCreateDecodeTables StatementExpression Assignment MemberReference ArraySelector MemberReference t minLens MemberReference minLen =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier protected ReferenceType Hashtable FormalParameter ReferenceType String descriptorFileName FormalParameter ReferenceType SAXParser saxParser IOException SAXException LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator descriptorStream Literal null LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator ejbFiles Literal null TryStatement StatementExpression Assignment MemberReference descriptorStream ClassCreator ReferenceType FileInputStream ClassCreator ReferenceType File MemberReference config descriptorDir MemberReference descriptorFileName = StatementExpression MethodInvocation saxParser ClassCreator ReferenceType InputSource MemberReference descriptorStream MemberReference handler parse StatementExpression Assignment MemberReference ejbFiles MethodInvocation handler getFiles = IfStatement BinaryOperation != MemberReference descriptorStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation descriptorStream close CatchClause CatchClauseParameter IOException closeException ReturnStatement MemberReference ejbFiles	1
MethodDeclaration Modifier public FormalParameter ReferenceType String impl StatementExpression SuperMethodInvocation MemberReference impl	0
MethodDeclaration Modifier public parsePropertyString FormalParameter ReferenceType String value FormalParameter ReferenceType Vector fragments FormalParameter ReferenceType Vector propertyRefs BuildException StatementExpression MethodInvocation MemberReference value MemberReference fragments MemberReference propertyRefs parsePropertyStringDefault	1
MethodDeclaration Modifier private BasicType boolean FormalParameter Modifier final ReferenceType first FormalParameter Modifier final ReferenceType second ReturnStatement MethodInvocation first MemberReference second	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet fs BuildException IfStatement BinaryOperation == MethodInvocation fs getProject Literal null BlockStatement StatementExpression MethodInvocation fs MethodInvocation getProject setProject StatementExpression MethodInvocation MemberReference fs add	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType File output StatementExpression Assignment This MemberReference output MemberReference output =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier protected ReferenceType Map FormalParameter ReferenceType Resource FormalParameter Modifier final ReferenceType File toDir FormalParameter ReferenceType mapper LocalVariableDeclaration ReferenceType HashMap VariableDeclarator map ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType Resource VariableDeclarator toCopy Literal null IfStatement MemberReference forceOverwrite BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation mapper MemberReference ArraySelector MemberReference i MethodInvocation getName mapFileName Literal null BlockStatement StatementExpression MethodInvocation v MemberReference ArraySelector MemberReference i addElement StatementExpression Assignment MemberReference toCopy ArrayCreator ReferenceType Resource MethodInvocation v size = StatementExpression MethodInvocation v MemberReference toCopy copyInto BlockStatement StatementExpression Assignment MemberReference toCopy MethodInvocation ResourceUtils This MemberReference MemberReference mapper ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType Resource getResource FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType FileResource MemberReference toDir MemberReference name MemberReference granularity = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toCopy length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mappedFiles MethodInvocation mapper MemberReference ArraySelector MemberReference i MethodInvocation getName toCopy mapFileName IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation map MemberReference ArraySelector MemberReference i toCopy ArrayCreator ReferenceType String ArrayInitializer ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference toDir MemberReference ArraySelector Literal 0 mappedFiles put BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 0 BinaryOperation < MemberReference k MemberReference mappedFiles length MemberReference ++ k BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference k mappedFiles ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference toDir MemberReference ArraySelector MemberReference k mappedFiles = StatementExpression MethodInvocation map MemberReference ArraySelector MemberReference i toCopy MemberReference mappedFiles put ReturnStatement MemberReference map	1
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public addCustom FormalParameter ReferenceType ExtendSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public synchronized clear BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression MethodInvocation rc clear StatementExpression MethodInvocation This StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation Literal false setChecked	0
MethodDeclaration Modifier public BasicType boolean isExists LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef BinaryOperation != Assignment MemberReference is MethodInvocation getInputStream = Literal null CatchClause CatchClauseParameter IOException ex ReturnStatement Literal false StatementExpression MethodInvocation FileUtils MemberReference is close	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType String template FormalParameter ReferenceType Properties attributes XDocletException LocalVariableDeclaration ReferenceType XClass VariableDeclarator cur_class MethodInvocation LocalVariableDeclaration ReferenceType XMethod VariableDeclarator methods MethodInvocation MemberReference cur_class getAttributeMethods IfStatement BinaryOperation > MemberReference methods length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference template generate	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType DateFormat ReturnStatement MethodInvocation DateFormat MemberReference DateFormat SHORT MemberReference DateFormat SHORT MemberReference	0
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String message StatementExpression Assignment This MemberReference message MemberReference message =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier protected ReferenceType ArchiveState getNonFileSetResourcesToAdd FormalParameter ReferenceType ResourceCollection rcs FormalParameter ReferenceType File zipFile FormalParameter BasicType boolean needsUpdate BuildException LocalVariableDeclaration ReferenceType Resource VariableDeclarator initialResources MethodInvocation MemberReference rcs IfStatement MethodInvocation MemberReference initialResources isEmpty BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState MemberReference needsUpdate MemberReference initialResources IfStatement MethodInvocation ! zipFile exists BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources IfStatement BinaryOperation && MemberReference needsUpdate MemberReference ! doUpdate BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources LocalVariableDeclaration ReferenceType Resource VariableDeclarator newerResources ArrayCreator ReferenceType Resource MemberReference rcs length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference rcs length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i MemberReference length initialResources Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newerResources ArrayCreator ReferenceType Resource ArrayInitializer = ContinueStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference ArraySelector MemberReference i MemberReference length initialResources MemberReference ++ j BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ArraySelector MemberReference i ArraySelector MemberReference j initialResources ReferenceType FileResource MethodInvocation zipFile Cast ReferenceType FileResource MemberReference ArraySelector MemberReference i ArraySelector MemberReference j initialResources equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "A file cannot " Literal "itself" MethodInvocation getLocation LocalVariableDeclaration ReferenceType Resource VariableDeclarator rs MemberReference ArraySelector MemberReference i initialResources IfStatement MemberReference doFilesonly BlockStatement StatementExpression Assignment MemberReference rs MethodInvocation MemberReference rs = StatementExpression Assignment MemberReference ArraySelector MemberReference i newerResources MethodInvocation ResourceUtils This MemberReference rs ClassCreator ReferenceType IdentityMapper MethodInvocation = StatementExpression Assignment MemberReference needsUpdate BinaryOperation || MemberReference needsUpdate BinaryOperation > MemberReference ArraySelector MemberReference i MemberReference length newerResources Literal 0 = IfStatement BinaryOperation && MemberReference needsUpdate MemberReference ! doUpdate BlockStatement BreakStatement IfStatement BinaryOperation && MemberReference needsUpdate MemberReference ! doUpdate BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources ReturnStatement ClassCreator ReferenceType ArchiveState MemberReference needsUpdate MemberReference newerResources	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal MemberReference	0
MethodDeclaration Modifier protected ReferenceType Connection getConnection BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation IfStatement BinaryOperation == MemberReference password Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Password attribute must be MethodInvocation getLocation IfStatement BinaryOperation == MemberReference url Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation TryStatement StatementExpression MethodInvocation BinaryOperation + Literal to " MethodInvocation MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Properties VariableDeclarator info ClassCreator ReferenceType Properties StatementExpression MethodInvocation info Literal "user" MethodInvocation put StatementExpression MethodInvocation info Literal "password" MethodInvocation getPassword put LocalVariableDeclaration ReferenceType Connection VariableDeclarator conn MethodInvocation MethodInvocation MethodInvocation MemberReference info connect IfStatement BinaryOperation == MemberReference conn Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BinaryOperation + Literal "No suitable Driver for " MemberReference url StatementExpression MethodInvocation conn MemberReference autocommit setAutoCommit ReturnStatement MemberReference conn CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public static ReferenceType NodeList FormalParameter ReferenceType Node parent FormalParameter ReferenceType filter FormalParameter BasicType boolean recurse LocalVariableDeclaration ReferenceType VariableDeclarator matches ClassCreator ReferenceType LocalVariableDeclaration ReferenceType NodeList VariableDeclarator children MethodInvocation parent getChildNodes IfStatement BinaryOperation != MemberReference children Literal null BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator len MethodInvocation children getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation children MemberReference i item IfStatement MethodInvocation filter MemberReference child BlockStatement StatementExpression MethodInvocation matches MemberReference child addElement IfStatement MemberReference recurse BlockStatement LocalVariableDeclaration ReferenceType NodeList VariableDeclarator MethodInvocation MemberReference child MemberReference filter MemberReference recurse LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation matches MethodInvocation MemberReference i item addElement ReturnStatement MemberReference matches	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File f1 FormalParameter ReferenceType File f2 IOException ReturnStatement MethodInvocation MemberReference f1 MemberReference f2 Literal false	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public FormalParameter ReferenceType String className StatementExpression Assignment This MemberReference className MemberReference className =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public write FormalParameter BasicType byte b IOException SynchronizedStatement This OutputStreamFunneler StatementExpression MethodInvocation StatementExpression MethodInvocation out MemberReference b write	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference testCase	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType against IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference against MemberReference against =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String name FormalParameter ReferenceType File file StatementExpression MethodInvocation MemberReference name MemberReference file MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected element \"" MemberReference qname Literal " \"" MethodInvocation context getLocator	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference lineStart	0
MethodDeclaration * set the output * @param the delim string returned by * if */ Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MethodInvocation MemberReference =	0
MethodDeclaration Modifier public BasicType boolean killedProcess ReturnStatement BinaryOperation && BinaryOperation != MemberReference watchdog Literal null MethodInvocation watchdog killedProcess	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType catalog StatementExpression MethodInvocation MemberReference catalog	0
MethodDeclaration Modifier protected IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation helper This StatementExpression Assignment MemberReference runner MethodInvocation helper =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal MemberReference MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier private stringReplace FormalParameter ReferenceType StringBuffer str FormalParameter ReferenceType String str1 FormalParameter ReferenceType String str2 LocalVariableDeclaration BasicType int VariableDeclarator found MethodInvocation str MethodInvocation MemberReference str1 indexOf toString WhileStatement BinaryOperation >= MemberReference found Literal 0 BlockStatement StatementExpression MethodInvocation str MemberReference found BinaryOperation + MemberReference found MethodInvocation str1 length MemberReference str2 replace StatementExpression Assignment MemberReference found MethodInvocation str MethodInvocation MemberReference str1 BinaryOperation + MemberReference found MethodInvocation str2 length indexOf toString =	1
MethodDeclaration Modifier public setString FormalParameter ReferenceType String s StatementExpression Assignment MemberReference MemberReference s +=	0
MethodDeclaration Modifier public FormalParameter ReferenceType File output StatementExpression Assignment This MemberReference output MemberReference output =	0
MethodDeclaration Modifier public addDate FormalParameter ReferenceType DateSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError error StatementExpression MemberReference ++ failureCount	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator d ClassCreator ReferenceType StatementExpression MethodInvocation d MemberReference project setProject StatementExpression MethodInvocation d MethodInvocation project Literal "." StatementExpression MethodInvocation d Literal setIncludes StatementExpression MethodInvocation p MemberReference d LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation MethodInvocation project MethodInvocation getAbsolutePath Literal MemberReference ArraySelector Literal 0 l assertEquals	0
MethodDeclaration Modifier public init FormalParameter ReferenceType Properties props BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation props MemberReference getProperty LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null IfStatement BinaryOperation != MemberReference file Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType FileOutputStream MemberReference file = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e BlockStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType MemberReference System out = StatementExpression MethodInvocation MemberReference os	1
MethodDeclaration Modifier public ReferenceType String XDocletException LocalVariableDeclaration ReferenceType VariableDeclarator tag MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation tag Literal "name" getAttributeValue ReturnStatement TernaryExpression BinaryOperation != MemberReference name Literal null MemberReference name MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String algorithm StatementExpression Assignment This MemberReference algorithm MemberReference algorithm =	0
MethodDeclaration Modifier public static ReferenceType EnumeratedAttribute getInstance FormalParameter ReferenceType Class clazz FormalParameter ReferenceType String value BuildException IfStatement ClassReference ! MethodInvocation MemberReference clazz isAssignableFrom ReferenceType EnumeratedAttribute BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal have to a subclass from as LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator ea Literal null TryStatement StatementExpression Assignment MemberReference ea Cast ReferenceType EnumeratedAttribute MethodInvocation clazz newInstance = CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation ea MemberReference value setValue ReturnStatement MemberReference ea	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String protocol StatementExpression Assignment This MemberReference protocol MemberReference protocol =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String prefix StatementExpression Assignment This MemberReference prefix MemberReference prefix =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType String getFiles FormalParameter ReferenceType File baseDir FormalParameter ReferenceType DirectoryScanner ds ReturnStatement MethodInvocation MethodInvocation ds getIncludedFiles MemberReference baseDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType String language StatementExpression MethodInvocation helper MemberReference language	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements WhileStatement BinaryOperation < MemberReference index MemberReference length BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector MemberReference index Literal null MemberReference ArraySelector MemberReference index MethodInvocation hasMoreElements BlockStatement ReturnStatement Literal true StatementExpression MemberReference ++ index ReturnStatement Literal false	0
MethodDeclaration Modifier synchronized protected ReferenceType Class loadClass FormalParameter ReferenceType String classname FormalParameter BasicType boolean resolve ClassNotFoundException LocalVariableDeclaration ReferenceType Class VariableDeclarator theClass MethodInvocation MemberReference classname IfStatement BinaryOperation != MemberReference theClass Literal null BlockStatement ReturnStatement MemberReference theClass IfStatement MethodInvocation MemberReference classname isParentFirst BlockStatement TryStatement StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MemberReference classname Literal " loaded from parent loader " Literal MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter ClassNotFoundException cnfe StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname findClass = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MemberReference classname Literal " loaded from ant loader " Literal MemberReference Project MSG_DEBUG log BlockStatement TryStatement StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname findClass = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Class " MemberReference classname Literal " loaded from ant loader" MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter ClassNotFoundException cnfe IfStatement MemberReference BlockStatement ThrowStatement MemberReference cnfe StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Class " MemberReference classname Literal " loaded from parent loader" MemberReference Project MSG_DEBUG log IfStatement MemberReference resolve BlockStatement StatementExpression MethodInvocation MemberReference theClass resolveClass ReturnStatement MemberReference theClass	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal "foo" getProperty assertEquals	0
MethodDeclaration Modifier public ReferenceType createClasspath FormalParameter ReferenceType Project p IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MemberReference p = ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public clear IfStatement BinaryOperation != MemberReference buffer Literal null BlockStatement StatementExpression MethodInvocation buffer clear	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public ReferenceType Object nextElement ReturnStatement MethodInvocation iter next	0
MethodDeclaration Modifier final static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator g ClassCreator ReferenceType StatementExpression MethodInvocation g Literal "" setValue ReturnStatement MemberReference g	0
MethodDeclaration Modifier public BasicType boolean matches FormalParameter ReferenceType String argument BuildException ReturnStatement MethodInvocation MemberReference argument MemberReference MATCH_DEFAULT matches	1
MethodDeclaration FormalParameter ReferenceType String classname StatementExpression MethodInvocation dependencies MemberReference classname MemberReference classname put	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public flush IOException LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation IfStatement BinaryOperation > MethodInvocation bufferInfo.buffer size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference buffer	1
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType File BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal MethodInvocation getAbsolutePath LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res LocalVariableDeclaration ReferenceType Vector VariableDeclarator groups MethodInvocation Literal MethodInvocation res matches IfStatement BinaryOperation == MemberReference groups Literal null BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator path Cast ReferenceType String MethodInvocation groups Literal 2 elementAt StatementExpression Assignment MemberReference path MethodInvocation path trim = LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference path IfStatement MethodInvocation ! isAbsolute BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType File MethodInvocation getParent MemberReference path = ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType ResourceCollection validate StatementExpression MethodInvocation IfStatement MemberReference binary BlockStatement IfStatement BinaryOperation == MemberReference destinationFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is required for binary concatenation" IfStatement BinaryOperation != MemberReference textBuffer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal text is incompatible with binary concatenation" IfStatement BinaryOperation || BinaryOperation != MemberReference encoding Literal null BinaryOperation != MemberReference outputEncoding Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal input or output encoding is incompatible with Literal " concatenation" IfStatement BinaryOperation != MemberReference filterChains Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Setting filters is incompatible with binary concatenation" IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Setting is incompatible with binary concatenation" IfStatement BinaryOperation || BinaryOperation != MemberReference header Literal null BinaryOperation != MemberReference footer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal header or footer is incompatible with binary concatenation" IfStatement BinaryOperation && BinaryOperation != MemberReference destinationFile Literal null BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot both a destination file and an output IfStatement BinaryOperation && BinaryOperation == MemberReference rc Literal null BinaryOperation == MemberReference textBuffer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "At least one resource must be or some IfStatement BinaryOperation != MemberReference rc Literal null BlockStatement IfStatement BinaryOperation != MemberReference textBuffer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot inline text when using LocalVariableDeclaration ReferenceType Restrict VariableDeclarator noexistRc ClassCreator ReferenceType Restrict StatementExpression MethodInvocation noexistRc MemberReference add StatementExpression MethodInvocation noexistRc MemberReference rc add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation noexistRc iterator MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation BinaryOperation + MethodInvocation i next Literal " does not exist." MemberReference Project MSG_ERR log IfStatement BinaryOperation != MemberReference destinationFile Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation rc iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FileResource BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType FileResource MemberReference o IfStatement MethodInvocation FILE_UTILS MemberReference f MemberReference destinationFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal file \"" MemberReference f Literal "\" is the same as the output file." LocalVariableDeclaration ReferenceType Restrict VariableDeclarator existRc ClassCreator ReferenceType Restrict StatementExpression MethodInvocation existRc MemberReference add StatementExpression MethodInvocation existRc MemberReference rc add LocalVariableDeclaration BasicType boolean VariableDeclarator outofdate BinaryOperation || BinaryOperation == MemberReference destinationFile Literal null MemberReference forceOverwrite IfStatement MemberReference ! outofdate BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation existRc iterator BinaryOperation && MemberReference ! outofdate MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation i next StatementExpression Assignment MemberReference outofdate BinaryOperation || BinaryOperation == MethodInvocation r getLastModified Literal 0L BinaryOperation > MethodInvocation r getLastModified MethodInvocation destinationFile lastModified = IfStatement MemberReference ! outofdate BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference destinationFile Literal " is MemberReference Project MSG_VERBOSE log ReturnStatement Literal null ReturnStatement MemberReference existRc BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator s ClassCreator ReferenceType StatementExpression MethodInvocation s MethodInvocation getProject setProject StatementExpression MethodInvocation s MethodInvocation textBuffer toString setValue ReturnStatement MemberReference s	1
MethodDeclaration Modifier public FormalParameter ReferenceType level StatementExpression Assignment MemberReference loglevel MethodInvocation level getLevel =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public link Exception LocalVariableDeclaration ReferenceType ZipOutputStream VariableDeclarator output ClassCreator ReferenceType ZipOutputStream ClassCreator ReferenceType FileOutputStream MemberReference IfStatement MemberReference BlockStatement StatementExpression MethodInvocation output MemberReference ZipOutputStream DEFLATED setMethod StatementExpression MethodInvocation output MemberReference setLevel BlockStatement StatementExpression MethodInvocation output MemberReference ZipOutputStream STORED setMethod LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation elements WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path Cast ReferenceType String MethodInvocation nextElement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference path IfStatement BinaryOperation || MethodInvocation f MethodInvocation Literal ".jar" endsWith getName MethodInvocation f MethodInvocation Literal ".zip" endsWith getName BlockStatement StatementExpression MethodInvocation MemberReference output MemberReference f BlockStatement StatementExpression MethodInvocation MemberReference path LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator adds MethodInvocation elements WhileStatement MethodInvocation adds hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation adds nextElement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference name IfStatement MethodInvocation f isDirectory BlockStatement StatementExpression MethodInvocation MemberReference output MemberReference f BinaryOperation + MethodInvocation f getName Literal '/' MemberReference addDirContents BlockStatement StatementExpression MethodInvocation MemberReference output MemberReference f Literal "" MemberReference addFile IfStatement BinaryOperation != MemberReference output Literal null BlockStatement TryStatement StatementExpression MethodInvocation output close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal Literal MethodInvocation getAbsolutePath LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation res StatementExpression Assignment MemberReference BinaryOperation == MethodInvocation Literal private object" indexOf Literal - 1 = StatementExpression Assignment MemberReference BinaryOperation != MethodInvocation Literal indexOf Literal - 1 = StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public final FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private static FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference out Literal MemberReference MemberReference StatementExpression MethodInvocation MemberReference out Literal MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType at StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + Literal "-" MethodInvocation at getValue setValue createArgument	0
MethodDeclaration Modifier public synchronized ReferenceType FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p LocalVariableDeclaration ReferenceType VariableDeclarator ps Cast ReferenceType MethodInvocation clone LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation ps Cast ReferenceType MemberReference o MemberReference p append ReturnStatement MemberReference ps	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType c StatementExpression Assignment MemberReference when MemberReference c =	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator basedir ClassCreator MethodInvocation getParentFile ReferenceType File MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference basedir Literal StatementExpression MethodInvocation delete	0
MethodDeclaration Modifier public endTestSuite FormalParameter ReferenceType JUnitTest suite BuildException StatementExpression MethodInvocation rootElement MemberReference BinaryOperation + Literal "" MethodInvocation suite setAttribute StatementExpression MethodInvocation rootElement MemberReference BinaryOperation + Literal "" MethodInvocation suite failureCount setAttribute StatementExpression MethodInvocation rootElement MemberReference BinaryOperation + Literal "" MethodInvocation suite setAttribute StatementExpression MethodInvocation rootElement MemberReference BinaryOperation + Literal "" BinaryOperation / MethodInvocation suite Literal setAttribute IfStatement BinaryOperation != MemberReference out Literal null BlockStatement LocalVariableDeclaration ReferenceType Writer VariableDeclarator wri Literal null TryStatement StatementExpression Assignment MemberReference wri ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference out Literal "UTF8" = StatementExpression MethodInvocation wri Literal "<?xml write StatementExpression ClassCreator MethodInvocation MemberReference rootElement MemberReference wri Literal 0 Literal " " write ReferenceType StatementExpression MethodInvocation wri flush CatchClause CatchClauseParameter IOException exc ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write log file" MemberReference exc IfStatement BinaryOperation && BinaryOperation != MemberReference out MemberReference System out BinaryOperation != MemberReference out MemberReference System err BlockStatement StatementExpression MethodInvocation FileUtils MemberReference wri close	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File f1 FormalParameter ReferenceType File f2 FormalParameter BasicType boolean IOException ReturnStatement MethodInvocation ResourceUtils ClassCreator ReferenceType FileResource MemberReference f1 ClassCreator ReferenceType FileResource MemberReference f2 MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Could not load definitions from resource " expectLogContaining	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference change Literal null BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + Literal "-c " MemberReference change = IfStatement BinaryOperation == MemberReference P4View Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No view specified to StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s delete " MemberReference P4CmdOpts Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator f MethodInvocation getInstance StatementExpression MethodInvocation project Literal MemberReference f StatementExpression MethodInvocation f ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation f MemberReference project getDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal make " MethodInvocation f getDataTypeName Literal " a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f MemberReference project getDirectoryScanner StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal make " MethodInvocation f getDataTypeName Literal " a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator f1 MethodInvocation getInstance StatementExpression MethodInvocation project Literal MemberReference f1 StatementExpression MethodInvocation f1 ClassCreator ReferenceType Literal "dummy2" LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator f2 MethodInvocation getInstance StatementExpression MethodInvocation project Literal "dummy2" MemberReference f2 StatementExpression MethodInvocation f2 ClassCreator ReferenceType Literal LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator f3 MethodInvocation getInstance StatementExpression MethodInvocation project Literal MemberReference f3 StatementExpression MethodInvocation f3 ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation f1 MemberReference project getDir StatementExpression MethodInvocation Literal make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation f1 MemberReference project getDirectoryScanner StatementExpression MethodInvocation Literal make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference f1 MethodInvocation getInstance = StatementExpression MethodInvocation project Literal MemberReference f1 StatementExpression MethodInvocation f1 ClassCreator ReferenceType Literal "dummy2" StatementExpression Assignment MemberReference f2 MethodInvocation getInstance = StatementExpression MethodInvocation project Literal "dummy2" MemberReference f2 StatementExpression MethodInvocation f2 ClassCreator ReferenceType Literal StatementExpression Assignment MemberReference f3 MethodInvocation getInstance = StatementExpression MethodInvocation project Literal MemberReference f3 StatementExpression MethodInvocation f3 MethodInvocation project Literal "." LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation f1 MemberReference project getDir StatementExpression MethodInvocation Literal is basedir" MemberReference dir MethodInvocation project assertEquals	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference sourceFileName	1
MethodDeclaration Modifier public FormalParameter ReferenceType Map StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal Literal endsWith assertFalse	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal Literal 3 MemberReference l length assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 2 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 2 l assertEquals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator base ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference File separator StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 2 l assertEquals	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation exists assertTrue LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation exists assertTrue LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation exists assertTrue LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation exists assertTrue IfStatement BinaryOperation == MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation Literal "could not overwrite an file" fail IfStatement BinaryOperation != MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation Literal "could not overwrite an file" fail IfStatement BinaryOperation == MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation Literal an file" fail StatementExpression MethodInvocation BinaryOperation == MethodInvocation lastModified MethodInvocation lastModified assertTrue StatementExpression MethodInvocation BinaryOperation < MethodInvocation lastModified MethodInvocation lastModified assertTrue	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public addOr FormalParameter ReferenceType o StatementExpression MethodInvocation MemberReference o addElement	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results TryStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 20 StatementExpression MethodInvocation s Literal 25 StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 0 StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 1 StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 0 StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s Literal 1 StatementExpression MethodInvocation s Literal 1 StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter BasicType boolean logError StatementExpression MethodInvocation redirector MemberReference logError StatementExpression Assignment MemberReference MemberReference logError |=	0
MethodDeclaration Modifier public FormalParameter ReferenceType File cabFile StatementExpression Assignment This MemberReference cabFile MemberReference cabFile =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String s ReturnStatement Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal ArrayCreator ReferenceType String ArrayInitializer Literal "" Literal compareFiles StatementExpression Assignment MemberReference ds ClassCreator ReferenceType DirectoryScanner = StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" Literal ArrayCreator ReferenceType String ArrayInitializer Literal "" Literal Literal "alpha/beta/gamma" Literal compareFiles	0
MethodDeclaration Modifier public addPresent FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType Object create FormalParameter ReferenceType Project project ReturnStatement MethodInvocation MemberReference project	0
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType VariableDeclarator that Cast ReferenceType MemberReference o ReturnStatement MethodInvocation key MemberReference that key compareTo	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List getAttributes ReturnStatement MemberReference attributes	0
MethodDeclaration Modifier public tearDown IfStatement BinaryOperation != MemberReference r1 Literal null BlockStatement TryStatement StatementExpression MethodInvocation r1 close CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference r2 Literal null BlockStatement TryStatement StatementExpression MethodInvocation r2 close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Literal "cleanup" executeTarget	1
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean trim StatementExpression Assignment This MemberReference trim TernaryExpression MemberReference trim MemberReference Boolean TRUE MemberReference Boolean FALSE =	0
MethodDeclaration Modifier public BasicType boolean hasSelectors ReturnStatement MethodInvocation ! isEmpty	0
MethodDeclaration Modifier protected FormalParameter ReferenceType OutputStream outputStream StatementExpression Assignment This MemberReference outputStream MemberReference outputStream =	0
MethodDeclaration Modifier private ReferenceType ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation Literal getProject StatementExpression MethodInvocation Literal "starting empty" MethodInvocation ! f exists assertTrue StatementExpression MethodInvocation Literal Literal expectLogContaining StatementExpression MethodInvocation Literal it is MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response	0
MethodDeclaration Modifier public synchronized ReferenceType ResourceCollection IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive ReturnStatement MethodInvocation MemberReference pattern Literal null MemberReference str MemberReference isCaseSensitive	0
MethodDeclaration Modifier private ReferenceType BuildLogger createLogger LocalVariableDeclaration ReferenceType BuildLogger VariableDeclarator logger Literal null IfStatement BinaryOperation != MemberReference loggerClassname Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference logger Cast ReferenceType BuildLogger MethodInvocation ClasspathUtils MemberReference loggerClassname ClassReference MethodInvocation getClassLoader ReferenceType Main ClassReference ReferenceType BuildLogger newInstance = CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal "The specified logger class " MemberReference loggerClassname Literal " could not be used because " MethodInvocation e getMessage println ThrowStatement ClassCreator ReferenceType RuntimeException BlockStatement StatementExpression Assignment MemberReference logger ClassCreator ReferenceType = StatementExpression MethodInvocation logger MemberReference msgOutputLevel setMessageOutputLevel StatementExpression MethodInvocation logger MemberReference out StatementExpression MethodInvocation logger MemberReference err StatementExpression MethodInvocation logger MemberReference emacsMode ReturnStatement MemberReference logger	1
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int nSelectors IOException LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len MemberReference dataShadow sendMTFValues_len LocalVariableDeclaration Modifier final BasicType int VariableDeclarator code MemberReference dataShadow LocalVariableDeclaration Modifier final ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator selector MemberReference dataShadow selector LocalVariableDeclaration Modifier final BasicType char VariableDeclarator sfmap MemberReference dataShadow sfmap LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nMTFShadow This MemberReference nMTF LocalVariableDeclaration BasicType int VariableDeclarator selCtr Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator gs Literal 0 BinaryOperation < MemberReference gs MemberReference nMTFShadow BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ge MethodInvocation Math BinaryOperation - BinaryOperation + MemberReference gs MemberReference G_SIZE Literal 1 BinaryOperation - MemberReference nMTFShadow Literal 1 min LocalVariableDeclaration Modifier final BasicType int VariableDeclarator selector_selCtr BinaryOperation & MemberReference ArraySelector MemberReference selCtr selector Literal 0xff LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MemberReference ArraySelector MemberReference selector_selCtr code LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator MemberReference ArraySelector MemberReference selector_selCtr len WhileStatement BinaryOperation <= MemberReference gs MemberReference ge BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator sfmap_i MemberReference ArraySelector MemberReference gs sfmap WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= LocalVariableDeclaration Modifier final BasicType int VariableDeclarator n BinaryOperation & MemberReference ArraySelector MemberReference sfmap_i Literal 0xFF StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation << MemberReference ArraySelector MemberReference sfmap_i BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow MemberReference n |= StatementExpression Assignment MemberReference bsLiveShadow MemberReference n += StatementExpression MemberReference ++ gs StatementExpression Assignment MemberReference gs BinaryOperation + MemberReference ge Literal 1 = StatementExpression MemberReference ++ selCtr StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = StatementExpression Assignment This MemberReference bsLive MemberReference bsLiveShadow =	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MemberReference name IfStatement BinaryOperation || BinaryOperation != MemberReference ifCond Literal null BinaryOperation != MemberReference unlessCond Literal null BlockStatement StatementExpression MethodInvocation buf Literal ":" append LocalVariableDeclaration ReferenceType String VariableDeclarator connector Literal "" IfStatement BinaryOperation != MemberReference ifCond Literal null BlockStatement StatementExpression MethodInvocation buf Literal append StatementExpression MethodInvocation buf MemberReference ifCond append StatementExpression Assignment MemberReference connector Literal ";" = IfStatement BinaryOperation != MemberReference unlessCond Literal null BlockStatement StatementExpression MethodInvocation buf MemberReference connector append StatementExpression MethodInvocation buf Literal append StatementExpression MethodInvocation buf MemberReference unlessCond append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public init StatementExpression Assignment MemberReference antRuntimeClasses ClassCreator ReferenceType MethodInvocation getProject = StatementExpression Assignment MemberReference MethodInvocation ! Literal = StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal	1
MethodDeclaration Modifier public validate BuildException IfStatement BinaryOperation == Literal null MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal attribute must be set." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation == Literal null MemberReference displayName BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal attribute must be set for " MemberReference ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public init StatementExpression Assignment MemberReference util ClassCreator ReferenceType = LocalVariableDeclaration ReferenceType String VariableDeclarator tmpprop IfStatement BinaryOperation != Assignment MemberReference tmpprop MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression MethodInvocation MemberReference tmpprop IfStatement BinaryOperation != Assignment MemberReference tmpprop MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression MethodInvocation MemberReference tmpprop IfStatement BinaryOperation != Assignment MemberReference tmpprop MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression MethodInvocation MemberReference tmpprop	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference cachefile	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal " MemberReference MemberReference Project MSG_VERBOSE log getProject LocalVariableDeclaration ReferenceType String VariableDeclarator candidate MethodInvocation MethodInvocation MemberReference propertyName getProperty getProject IfStatement BinaryOperation != Literal null MemberReference candidate BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Property set to: " MemberReference candidate IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference Project MSG_ERR log getProject ReturnStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation resolvers size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator resolver Cast ReferenceType MethodInvocation resolvers MemberReference i get StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Searching for extension using MemberReference resolver MemberReference Project MSG_VERBOSE log getProject TryStatement LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator file MethodInvocation resolver MemberReference MethodInvocation getProject resolve TryStatement StatementExpression MethodInvocation MemberReference file ReturnStatement CatchClause CatchClauseParameter BuildException be LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " returned by " Literal failed to extension due to: " MethodInvocation be getMessage StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference Project MSG_WARN log getProject CatchClause CatchClauseParameter BuildException be LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to resolve extension to file " Literal "using resolver " MemberReference resolver Literal " due to: " MemberReference be StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference Project MSG_WARN log getProject StatementExpression MethodInvocation	1
MethodDeclaration Modifier public BasicType boolean getDebug ReturnStatement MemberReference debug	0
MethodDeclaration Modifier public FormalParameter ReferenceType Attribute attribute IfStatement BinaryOperation || BinaryOperation == MethodInvocation attribute getKey Literal null BinaryOperation == MethodInvocation attribute getValue Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must have name and value" IfStatement MethodInvocation attribute MethodInvocation MemberReference equalsIgnoreCase getKey BlockStatement StatementExpression Assignment MemberReference manifestVersion MethodInvocation attribute getValue = BlockStatement StatementExpression MethodInvocation mainSection MemberReference attribute	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType File ReturnStatement This MemberReference	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object newValue StatementExpression Assignment MemberReference value MemberReference newValue =	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String message FormalParameter BasicType int loglevel IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference loglevel log BlockStatement StatementExpression TernaryExpression BinaryOperation > MemberReference loglevel MemberReference Project MSG_WARN MemberReference System out MemberReference System err	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator eq ClassCreator ReferenceType StatementExpression MethodInvocation eq Literal StatementExpression MethodInvocation eq Literal "A" StatementExpression MethodInvocation MethodInvocation ! eq eval assertTrue StatementExpression MethodInvocation eq Literal false StatementExpression MethodInvocation MethodInvocation eq eval assertTrue	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the command attribute" MethodInvocation getLocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal property not expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String version StatementExpression Assignment MemberReference MemberReference version =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String footer LocalVariableDeclaration ReferenceType VariableDeclarator h ClassCreator ReferenceType StatementExpression MethodInvocation h MemberReference footer StatementExpression MethodInvocation MemberReference h	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType ref IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MemberReference ref createClasspath	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation patterns	0
MethodDeclaration Modifier public synchronized ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args TryStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator hash ClassCreator ReferenceType Hashtable StatementExpression MethodInvocation hash Literal "VERSION" Literal put StatementExpression MethodInvocation hash Literal Literal put StatementExpression MethodInvocation System.out MethodInvocation Literal f MemberReference hash replace println CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public ReferenceType StatementExpression Assignment MemberReference perm TernaryExpression BinaryOperation == MemberReference perm Literal null ClassCreator ReferenceType MemberReference perm = ReturnStatement MemberReference perm	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement MethodInvocation ! isEmpty BlockStatement ThrowStatement MethodInvocation tooManyAttributes LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation r MethodInvocation getProject getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator fc Cast ReferenceType MemberReference o StatementExpression Assignment MemberReference MethodInvocation fc = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + MethodInvocation r getRefId Literal " doesn\'t refer to a ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public ReferenceType String getCommandline ReturnStatement MemberReference cmdl	0
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation Integer MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters parseInt CatchClause CatchClauseParameter NumberFormatException StatementExpression MethodInvocation BinaryOperation + Literal "Invalid minimum value " MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setError IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation Integer MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters parseInt CatchClause CatchClauseParameter NumberFormatException StatementExpression MethodInvocation BinaryOperation + Literal "Invalid maximum value " MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setError BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType BuildException IfStatement BinaryOperation != Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal only be " Literal IfStatement BinaryOperation != Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "It is not to " Literal " both as attribute and StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation TernaryExpression MemberReference MemberReference Literal 0	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference string Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal string is required in IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing pattern in LocalVariableDeclaration BasicType int VariableDeclarator options MemberReference RegexpMatcher MATCH_DEFAULT IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference options BinaryOperation | MemberReference options MemberReference RegexpMatcher = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference options BinaryOperation | MemberReference options MemberReference RegexpMatcher = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference options BinaryOperation | MemberReference options MemberReference RegexpMatcher = LocalVariableDeclaration ReferenceType VariableDeclarator regexp MethodInvocation MethodInvocation getProject ReturnStatement MethodInvocation regexp MemberReference string MemberReference options matches	1
MethodDeclaration Modifier public FormalParameter ReferenceType String filter StatementExpression Assignment MemberReference filtering MethodInvocation Project MemberReference filter toBoolean =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference implementationVendor	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression MethodInvocation helper MemberReference classpath	0
MethodDeclaration Modifier public ReferenceType File getDirectory ReturnStatement MemberReference directory	0
MethodDeclaration Modifier public FormalParameter ReferenceType listener StatementExpression MethodInvocation listeners MemberReference listener add	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference classpath = BlockStatement StatementExpression MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable var StatementExpression MethodInvocation env MemberReference var addVariable	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String input FormalParameter ReferenceType String argument FormalParameter BasicType int options BuildException LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation MemberReference input MemberReference options getGroups LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation argument length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation argument MemberReference i charAt IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement IfStatement BinaryOperation < MemberReference ++ i MethodInvocation argument length BlockStatement StatementExpression Assignment MemberReference c MethodInvocation argument MemberReference i charAt = LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation Character MemberReference c Literal 10 digit IfStatement BinaryOperation > MemberReference value Literal - 1 BlockStatement StatementExpression MethodInvocation result Cast ReferenceType String MethodInvocation v MemberReference value elementAt append BlockStatement StatementExpression MethodInvocation result MemberReference c append BlockStatement StatementExpression MethodInvocation result Literal '\\' append BlockStatement StatementExpression MethodInvocation result MemberReference c append StatementExpression Assignment MemberReference argument MethodInvocation result toString = LocalVariableDeclaration ReferenceType RE VariableDeclarator reg MethodInvocation MemberReference options getCompiledPattern LocalVariableDeclaration BasicType int VariableDeclarator sOptions MethodInvocation MemberReference options ReturnStatement MethodInvocation reg MemberReference input MemberReference argument MemberReference sOptions subst	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType BuildException IfStatement BinaryOperation != Literal null MemberReference extension BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal not have multiple extensions defined in one ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression Assignment MemberReference extension MethodInvocation =	0
MethodDeclaration Modifier public synchronized write FormalParameter BasicType byte b FormalParameter BasicType int offset FormalParameter BasicType int len IOException StatementExpression MethodInvocation StatementExpression MethodInvocation fos MemberReference b MemberReference offset MemberReference len write	1
MethodDeclaration ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName IfStatement BinaryOperation && BinaryOperation == MethodInvocation getDestDir Literal null BinaryOperation == MethodInvocation MethodInvocation getParent Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal not specified" IfStatement BinaryOperation == MethodInvocation getDestDir Literal null BlockStatement ReturnStatement ClassCreator ReferenceType File MethodInvocation MethodInvocation getParent BinaryOperation + MemberReference baseName MemberReference BlockStatement ReturnStatement ClassCreator ReferenceType File MethodInvocation getDestDir BinaryOperation + MemberReference baseName MemberReference	1
MethodDeclaration Modifier private ReferenceType URL MalformedURLException LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation System MemberReference getProperty MemberReference ReturnStatement MethodInvocation Locator MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType List VariableDeclarator extensions MethodInvocation ih LocalVariableDeclaration Modifier final BasicType int VariableDeclarator adders Literal 2 StatementExpression MethodInvocation Literal count" MemberReference adders MethodInvocation extensions size assertEquals StatementExpression MethodInvocation MethodInvocation extensions BinaryOperation - MemberReference adders Literal 2 get Literal "addConfigured" ClassReference ReferenceType Hashtable MethodInvocation Literal Literal "value" makeTable MethodInvocation Literal "1" Literal makeTable StatementExpression MethodInvocation MethodInvocation extensions BinaryOperation - MemberReference adders Literal 1 get Literal "addConfigured" ClassReference ReferenceType Map ClassCreator ReferenceType HashMap MethodInvocation Literal "1" Literal makeTable	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected processBuffer FormalParameter ReferenceType ByteArrayOutputStream buffer LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation buffer toString StatementExpression MethodInvocation project MemberReference output MemberReference StatementExpression MethodInvocation	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "no exception fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal must not be used at the top MethodInvocation e getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression MethodInvocation MethodInvocation MemberReference classpath	0
MethodDeclaration Modifier public setSelected FormalParameter BasicType boolean selected StatementExpression Assignment This MemberReference selected MemberReference selected =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType String target IOException StatementExpression MethodInvocation MemberReference target executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected Literal "3" MethodInvocation MethodInvocation trim Literal assertEquals StatementExpression MethodInvocation Literal "property Literal "3" MethodInvocation MethodInvocation Literal getProperty MethodInvocation trim getProject assertEquals StatementExpression MethodInvocation Literal "unexpected error MethodInvocation Literal StatementExpression MethodInvocation Literal Literal ""	0
MethodDeclaration Modifier public FormalParameter ReferenceType instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String classname StatementExpression MethodInvocation testClassNames MemberReference classname add	0
MethodDeclaration Modifier public ReferenceType String IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarFileSet MethodInvocation getCheckedRef ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier private StatementExpression MethodInvocation FileUtils MemberReference close StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String toProcess ReturnStatement MethodInvocation FileUtils MemberReference toProcess	1
MethodDeclaration * a new using the passed * Reader for * @param rdr A Reader object the * not be * @return a new filter on this but * the specified */ Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr ReturnStatement MemberReference newFilter	1
MethodDeclaration Modifier public FormalParameter ReferenceType String p StatementExpression Assignment MemberReference MemberReference p =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String address StatementExpression This MemberReference replyToList MethodInvocation ClassCreator ReferenceType MemberReference address add	0
MethodDeclaration Modifier private FormalParameter ReferenceType Execute exe FormalParameter ReferenceType String command StatementExpression MethodInvocation ExecuteJava MemberReference exe MemberReference command	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String manager StatementExpression MethodInvocation helper MemberReference manager	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType List FormalParameter ReferenceType Enumeration e LocalVariableDeclaration ReferenceType List VariableDeclarator l ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation l MethodInvocation e nextElement add ReturnStatement MemberReference l	0
MethodDeclaration Modifier public ReferenceType File resolve FormalParameter Modifier final ReferenceType Extension extension FormalParameter Modifier final ReferenceType Project project BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator file MethodInvocation LocalVariableDeclaration Modifier final ReferenceType Get VariableDeclarator get ClassCreator ReferenceType Get StatementExpression MethodInvocation get MemberReference project setProject StatementExpression MethodInvocation get MemberReference file StatementExpression MethodInvocation get MemberReference url StatementExpression MethodInvocation get execute ReturnStatement MemberReference file	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference p ClassCreator ReferenceType Project = StatementExpression MethodInvocation p init	0
MethodDeclaration Modifier private ReferenceType Commandline getCommandline FormalParameter BasicType int Exception LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation cmd ClassReference MethodInvocation getName ReferenceType setExecutable StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation String MemberReference valueOf setValue createArgument ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier private static IOException StatementExpression MethodInvocation System.err Literal error" println	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + BinaryOperation + SuperMethodInvocation MemberReference MethodInvocation	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier public save StatementExpression MethodInvocation Literal log StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier final protected BasicType boolean ReturnStatement MemberReference invalid	0
MethodDeclaration Modifier public Exception TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal "A path contain " MemberReference e fail	0
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Use the tar task for tar output."	1
MethodDeclaration Modifier public FormalParameter ReferenceType attr StatementExpression MethodInvocation filter MethodInvocation MethodInvocation attr getValue newInstance	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration * a value for a file content with the specified digest * @param file File object for which the value should be * @return The value for that */ Modifier public ReferenceType String getValue FormalParameter ReferenceType File file StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator checksum Literal null TryStatement IfStatement MethodInvocation ! file canRead BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte MemberReference TryStatement StatementExpression MethodInvocation messageDigest reset StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference file = LocalVariableDeclaration ReferenceType DigestInputStream VariableDeclarator dis ClassCreator ReferenceType DigestInputStream MemberReference fis MemberReference messageDigest WhileStatement BinaryOperation != MethodInvocation dis MemberReference buf Literal 0 MemberReference read Literal - 1 BlockStatement StatementExpression MethodInvocation dis close StatementExpression MethodInvocation fis close StatementExpression Assignment MemberReference fis Literal null = LocalVariableDeclaration BasicType byte VariableDeclarator fileDigest MethodInvocation messageDigest digest LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator checksumSb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fileDigest length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator hexStr MethodInvocation Integer BinaryOperation & Literal MemberReference ArraySelector MemberReference i fileDigest toHexString IfStatement BinaryOperation < MethodInvocation hexStr length Literal 2 BlockStatement StatementExpression MethodInvocation checksumSb Literal "0" append StatementExpression MethodInvocation checksumSb MemberReference hexStr append StatementExpression Assignment MemberReference checksum MethodInvocation checksumSb toString = CatchClause CatchClauseParameter Exception e ReturnStatement Literal null CatchClause CatchClauseParameter Exception e ReturnStatement Literal null ReturnStatement MemberReference checksum	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator tmp ClassCreator ReferenceType File MethodInvocation Literal LocalVariableDeclaration ReferenceType File VariableDeclarator check ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation tmp exists assertTrue StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference tmp MemberReference check assertTrue	0
MethodDeclaration Modifier private synchronized ReferenceType Collection IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! BlockStatement StatementExpression Assignment MemberReference MethodInvocation getCollection = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr ReturnStatement ClassCreator ReferenceType MemberReference rdr MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation in read IfStatement BinaryOperation == MemberReference c MemberReference replace ReturnStatement MemberReference with ReturnStatement MemberReference c	0
MethodDeclaration Modifier public addFilename FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference blockSize MemberReference blockSize =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal false assertTrue	0
MethodDeclaration Modifier public BasicType int read ReturnStatement Literal - 1	0
MethodDeclaration Modifier public BasicType boolean count FormalParameter BasicType long len StatementExpression Assignment MemberReference MemberReference len += StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference MemberReference trackProgress = ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation helper MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal Literal 2 MemberReference l length assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator base ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference File separator StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "no on Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal on Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal on Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "no on Literal 4 MemberReference l length assertEquals StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 3 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal on Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal on Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "no on Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal on Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal on Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project Literal = StatementExpression Assignment MemberReference l MethodInvocation p list = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "no on Literal 4 MemberReference l length assertEquals StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals StatementExpression MethodInvocation Literal to project\'s basedir" MemberReference ArraySelector Literal 2 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 3 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal on Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toLowerCase l assertEquals BlockStatement StatementExpression MethodInvocation Literal on Literal 2 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation MemberReference toLowerCase l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toLowerCase l assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object lists FormalParameter ReferenceType Object o ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lists length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference o equals lists BlockStatement ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "Should contain " MemberReference o fail	1
MethodDeclaration Modifier public test2 LocalVariableDeclaration ReferenceType Timer VariableDeclarator timer ClassCreator ReferenceType Timer StatementExpression MethodInvocation Literal "test2" executeTarget StatementExpression MethodInvocation timer stop IfStatement MemberReference TRACE StatementExpression MethodInvocation System.out BinaryOperation + Literal " test2 time=" MethodInvocation timer time println StatementExpression MethodInvocation BinaryOperation >= MethodInvocation timer time Literal 0 assertTrue	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal property not MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MethodInvocation Project MemberReference toBoolean	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String message LocalVariableDeclaration ReferenceType Integer VariableDeclarator Cast ReferenceType Integer MethodInvocation MemberReference message get IfStatement BinaryOperation != Literal null MemberReference BlockStatement ReturnStatement MethodInvocation intValue ReturnStatement Literal 0	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator m ClassCreator ReferenceType StatementExpression MethodInvocation m Literal StatementExpression MethodInvocation m Literal "baz" StatementExpression MethodInvocation Literal match MethodInvocation m Literal mapFileName LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation m Literal mapFileName StatementExpression MethodInvocation Literal "Should match MemberReference result assertNotNull StatementExpression MethodInvocation Literal one result for Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal "baz" MemberReference ArraySelector Literal 0 result assertEquals	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public FormalParameter ReferenceType ListIterator list IfStatement BinaryOperation != MemberReference executable Literal null BlockStatement StatementExpression MethodInvocation list MemberReference executable add StatementExpression MethodInvocation MemberReference list	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation hasSelectors BlockStatement StatementExpression MethodInvocation buf Literal " append StatementExpression MethodInvocation buf SuperMethodInvocation toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object another IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Comparable MethodInvocation getCheckedRef IfStatement This MethodInvocation MemberReference another equals BlockStatement ReturnStatement Literal 0 IfStatement MethodInvocation another MethodInvocation MethodInvocation getClass equals getClass BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator otherfr Cast ReferenceType FileResource MemberReference another LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation getFile IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement Literal - 1 LocalVariableDeclaration ReferenceType File VariableDeclarator of MethodInvocation otherfr getFile IfStatement BinaryOperation == MemberReference of Literal null BlockStatement ReturnStatement Literal 1 ReturnStatement MethodInvocation f MemberReference of compareTo ReturnStatement SuperMethodInvocation MemberReference another compareTo	1
MethodDeclaration Modifier public run StatementExpression Assignment MemberReference res ClassCreator ReferenceType TestResult = StatementExpression MethodInvocation res MethodInvocation This ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement StatementExpression MethodInvocation res MethodInvocation Cast ReferenceType MethodInvocation MemberReference i elementAt LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator ClassCreator ReferenceType ByteArrayOutputStream StatementExpression Assignment MemberReference systemError ClassCreator ReferenceType PrintStream MemberReference = LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator outStrm ClassCreator ReferenceType ByteArrayOutputStream StatementExpression Assignment MemberReference systemOut ClassCreator ReferenceType PrintStream MemberReference outStrm = LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator savedErr Literal null IfStatement MemberReference forked BlockStatement IfStatement MemberReference ! BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference savedOut MemberReference System out = StatementExpression Assignment MemberReference savedErr MemberReference System err = StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType OutputStream MethodDeclaration Modifier public write FormalParameter BasicType int b setOut StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType OutputStream MethodDeclaration Modifier public write FormalParameter BasicType int b setErr BlockStatement StatementExpression Assignment MemberReference savedOut MemberReference System out = StatementExpression Assignment MemberReference savedErr MemberReference System err = IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation System MemberReference systemOut setOut StatementExpression MethodInvocation System MemberReference systemError setErr BlockStatement StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType TeeOutputStream MemberReference savedOut MemberReference systemOut setOut StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType TeeOutputStream MemberReference savedErr MemberReference systemError setErr StatementExpression Assignment MemberReference perm Literal null = BlockStatement IfStatement BinaryOperation != MemberReference perm Literal null BlockStatement StatementExpression MethodInvocation perm LocalVariableDeclaration ReferenceType Test VariableDeclarator suite Literal null LocalVariableDeclaration ReferenceType Throwable VariableDeclarator exception Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator startTestSuiteSuccess Literal false TryStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator testClass Literal null IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference testClass MethodInvocation Class MethodInvocation junitTest getName forName = BlockStatement StatementExpression Assignment MemberReference testClass MethodInvocation Class MethodInvocation junitTest getName Literal true MemberReference loader forName = LocalVariableDeclaration ReferenceType Method VariableDeclarator suiteMethod Literal null TryStatement StatementExpression Assignment MemberReference suiteMethod MethodInvocation testClass Literal ArrayCreator ReferenceType Class Literal 0 getMethod = CatchClause CatchClauseParameter NoSuchMethodException e IfStatement BinaryOperation != MemberReference suiteMethod Literal null BlockStatement StatementExpression Assignment MemberReference suite Cast ReferenceType Test MethodInvocation suiteMethod Literal null ArrayCreator ReferenceType Class Literal 0 invoke = BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator junit4TestAdapterClass Literal null TryStatement StatementExpression MethodInvocation Class Literal forName IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference junit4TestAdapterClass MethodInvocation Class Literal forName = BlockStatement StatementExpression Assignment MemberReference junit4TestAdapterClass MethodInvocation Class Literal Literal true MemberReference loader forName = CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression Assignment MemberReference BinaryOperation != MemberReference junit4TestAdapterClass Literal null = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference suite Cast ReferenceType Test MethodInvocation junit4TestAdapterClass MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference testClass newInstance ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Class getConstructor = BlockStatement StatementExpression Assignment MemberReference suite ClassCreator ReferenceType MemberReference testClass = CatchClause CatchClauseParameter Throwable e StatementExpression Assignment MemberReference retCode MemberReference ERRORS = StatementExpression Assignment MemberReference exception MemberReference e = LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis StatementExpression MethodInvocation StatementExpression Assignment MemberReference startTestSuiteSuccess Literal true = IfStatement BinaryOperation != MemberReference exception Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation junitTest Literal 1 Literal 0 Literal 1 StatementExpression MethodInvocation junitTest Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation BinaryOperation + Literal to run: " MethodInvocation suite StatementExpression MethodInvocation suite MemberReference res run IfStatement MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cnts MethodInvocation MemberReference res StatementExpression MethodInvocation junitTest MethodInvocation res MemberReference ArraySelector Literal 0 cnts MemberReference ArraySelector Literal 1 cnts BlockStatement StatementExpression MethodInvocation junitTest MethodInvocation res MethodInvocation res failureCount MethodInvocation res StatementExpression MethodInvocation junitTest BinaryOperation - MethodInvocation System currentTimeMillis MemberReference start IfStatement BinaryOperation != MemberReference perm Literal null BlockStatement StatementExpression MethodInvocation perm IfStatement BinaryOperation != MemberReference savedOut Literal null BlockStatement StatementExpression MethodInvocation System MemberReference savedOut setOut IfStatement BinaryOperation != MemberReference savedErr Literal null BlockStatement StatementExpression MethodInvocation System MemberReference savedErr setErr StatementExpression MethodInvocation systemError close StatementExpression Assignment MemberReference systemError Literal null = StatementExpression MethodInvocation systemOut close StatementExpression Assignment MemberReference systemOut Literal null = IfStatement MemberReference startTestSuiteSuccess BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType String MethodInvocation outStrm toByteArray ClassCreator ReferenceType String MethodInvocation toByteArray StatementExpression MethodInvocation IfStatement BinaryOperation || BinaryOperation != MemberReference retCode MemberReference BinaryOperation != MethodInvocation res Literal 0 BlockStatement StatementExpression Assignment MemberReference retCode MemberReference ERRORS = IfStatement BinaryOperation != MethodInvocation res failureCount Literal 0 BlockStatement StatementExpression Assignment MemberReference retCode MemberReference =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal change cannot be null or empty" StatementExpression Assignment This MemberReference MemberReference =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference output MemberReference s =	0
MethodDeclaration Modifier protected IfStatement BinaryOperation || MemberReference inEJBRef BinaryOperation && BinaryOperation && BinaryOperation != MemberReference parseState MemberReference STATE_IN_ENTITY BinaryOperation != MemberReference parseState MemberReference BinaryOperation != MemberReference parseState MemberReference BlockStatement ReturnStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation currentElement MemberReference equals MethodInvocation currentElement MemberReference equals MethodInvocation currentElement MemberReference equals MethodInvocation currentElement MemberReference equals MethodInvocation currentElement MemberReference equals MethodInvocation currentElement MemberReference equals BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator classFile Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation currentText trim IfStatement BinaryOperation && MethodInvocation ! className Literal "java." startsWith MethodInvocation ! className Literal startsWith BlockStatement StatementExpression Assignment MemberReference className MethodInvocation className Literal '.' MemberReference File separatorChar replace = StatementExpression Assignment MemberReference className Literal ".class" += StatementExpression Assignment MemberReference classFile ClassCreator ReferenceType File MemberReference srcDir MemberReference className = StatementExpression MethodInvocation ejbFiles MemberReference className MemberReference classFile put IfStatement MethodInvocation currentElement MemberReference equals BlockStatement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation currentText trim =	1
MethodDeclaration Modifier protected logFlush IfStatement BinaryOperation != MemberReference fos Literal null BlockStatement StatementExpression MethodInvocation fos close	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference StatementExpression Assignment This MemberReference MethodInvocation This MemberReference =	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType ClassCreator ReferenceType Integer Literal 99 MemberReference Literal "xxxx" StatementExpression MethodInvocation dispatcher MemberReference evt StatementExpression MethodInvocation MemberReference evt MethodInvocation Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal "file:" StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MethodInvocation MethodInvocation getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String version StatementExpression Assignment MemberReference MemberReference version =	0
MethodDeclaration Modifier protected tearDown Exception LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator tearDown Literal IfStatement MethodInvocation project MethodInvocation MemberReference tearDown containsKey getTargets BlockStatement StatementExpression MethodInvocation project MemberReference tearDown executeTarget	0
MethodDeclaration Modifier public info FormalParameter Modifier final ReferenceType String message StatementExpression MethodInvocation task MemberReference message MemberReference Project MSG_INFO log	0
MethodDeclaration Modifier public synchronized setIncludes FormalParameter ReferenceType String includes StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference includes setIncludes StatementExpression Assignment MemberReference ds Literal null =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal "DEPRECATED - The task is deprecated. Use copy src == expectLog	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String token FormalParameter ReferenceType String value IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression MethodInvocation ClassCreator ReferenceType Filter MemberReference token MemberReference value	0
MethodDeclaration Modifier public IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator proxies MethodInvocation owner MemberReference getProperty IfStatement BinaryOperation || BinaryOperation == MemberReference proxies Literal null MethodInvocation Project MemberReference proxies toBoolean BlockStatement StatementExpression Assignment MemberReference proxies Literal "true" = LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + Literal "setting " MemberReference Literal " to " MemberReference proxies TryStatement StatementExpression MethodInvocation owner MemberReference message MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation System MemberReference MemberReference proxies setProperty CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation owner BinaryOperation + Literal Exception when " MemberReference message log	1
MethodDeclaration Modifier public ReferenceType Object getReferencedObject FormalParameter ReferenceType Project BuildException IfStatement BinaryOperation == MemberReference refid Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No reference specified" LocalVariableDeclaration ReferenceType Object VariableDeclarator o TernaryExpression BinaryOperation == MemberReference project Literal null MethodInvocation MemberReference refid getReference MethodInvocation project MemberReference refid getReference IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference refid Literal " not found." ReturnStatement MemberReference o	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation obj getClass MethodInvocation getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Text VariableDeclarator other Cast ReferenceType Text MemberReference obj IfStatement BinaryOperation == MemberReference name Literal null BlockStatement IfStatement BinaryOperation != MemberReference other name Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! name MemberReference other name equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MemberReference optional MemberReference other optional BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MemberReference trim MemberReference other trim BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType FileSelector selectors StatementExpression Assignment This MemberReference selectors MemberReference selectors =	1
MethodDeclaration Modifier public ReferenceType Location getLocation ReturnStatement MemberReference location	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType StringBuffer getConstants FormalParameter BasicType byte bytes IOException LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration Modifier final ReferenceType ByteArrayInputStream VariableDeclarator bis ClassCreator ReferenceType ByteArrayInputStream MemberReference bytes LocalVariableDeclaration Modifier final ReferenceType ClassParser VariableDeclarator parser ClassCreator ReferenceType ClassParser MemberReference bis Literal "" LocalVariableDeclaration Modifier final ReferenceType JavaClass VariableDeclarator javaClass MethodInvocation parser parse LocalVariableDeclaration Modifier final ReferenceType Field VariableDeclarator fields MethodInvocation javaClass ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fields length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Field VariableDeclarator field MemberReference ArraySelector MemberReference i fields IfStatement BinaryOperation != MemberReference field Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator cv MethodInvocation field IfStatement BinaryOperation != MemberReference cv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cvs MethodInvocation cv toString IfStatement BinaryOperation && MethodInvocation cvs Literal "\"" startsWith MethodInvocation cvs Literal "\"" endsWith BlockStatement StatementExpression Assignment MemberReference cvs MethodInvocation cvs Literal 1 BinaryOperation - MethodInvocation cvs length Literal 1 substring = StatementExpression MethodInvocation sb MethodInvocation field getName append StatementExpression MethodInvocation sb Literal '=' append StatementExpression MethodInvocation sb MemberReference cvs append StatementExpression MethodInvocation sb MemberReference append ReturnStatement MemberReference sb	1
MethodDeclaration Modifier public FormalParameter ReferenceType String manager StatementExpression MethodInvocation helper MemberReference manager	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "error" Literal Literal "warning" Literal Literal Literal "debug"	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test IfStatement MethodInvocation ! MemberReference test containsKey BlockStatement StatementExpression MethodInvocation MemberReference test LocalVariableDeclaration ReferenceType Element VariableDeclarator Literal null IfStatement MethodInvocation ! MemberReference test containsKey BlockStatement StatementExpression Assignment MemberReference MethodInvocation doc MemberReference createElement = LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation MemberReference test StatementExpression MethodInvocation MemberReference TernaryExpression BinaryOperation == MemberReference n Literal null MemberReference UNKNOWN MemberReference n setAttribute StatementExpression MethodInvocation MemberReference MethodInvocation MemberReference test setAttribute StatementExpression MethodInvocation rootElement MemberReference StatementExpression MethodInvocation MemberReference test MemberReference put BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType Element MethodInvocation MemberReference test get = LocalVariableDeclaration ReferenceType Long VariableDeclarator l Cast ReferenceType Long MethodInvocation MemberReference test get StatementExpression MethodInvocation MemberReference BinaryOperation + Literal "" BinaryOperation / BinaryOperation - MethodInvocation System currentTimeMillis MethodInvocation l longValue Literal setAttribute	0
MethodDeclaration Modifier public handleOutput FormalParameter ReferenceType String outputToHandle IfStatement BinaryOperation != MemberReference newProject Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference outputToHandle Literal false BlockStatement StatementExpression SuperMethodInvocation MemberReference outputToHandle handleOutput	1
MethodDeclaration Modifier public ReferenceType Object next IfStatement MethodInvocation ! hasNext BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException ReturnStatement MethodInvocation next	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public clear StatementExpression SuperMethodInvocation clear StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation Literal setExecutable	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintWriter out FormalParameter ReferenceType Project p FormalParameter ReferenceType Hashtable tasks FormalParameter ReferenceType Hashtable types StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MethodInvocation Assert Literal 0 MemberReference assertEquals StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation buffer toString	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier final protected ReferenceType RegexpMatcher ReturnStatement MemberReference reg	0
MethodDeclaration Modifier public ReferenceType Parameter LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayCreator ReferenceType Parameter MethodInvocation parameters size StatementExpression MethodInvocation parameters MemberReference params copyInto ReturnStatement MemberReference params	0
MethodDeclaration Modifier public FormalParameter ReferenceType mode StatementExpression Assignment This MemberReference MemberReference mode =	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration ReferenceType resolve IllegalStateException IfStatement This MethodInvocation MemberReference equals BlockStatement ReturnStatement MemberReference IfStatement This MethodInvocation MemberReference equals BlockStatement ReturnStatement MemberReference IfStatement This MethodInvocation MemberReference REMOVE equals BlockStatement ReturnStatement MemberReference REMOVE ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "No replacement for " This	1
MethodDeclaration Modifier public execute StatementExpression MethodInvocation BinaryOperation + Literal value is " MemberReference value log	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType FileSelector getSelectors FormalParameter ReferenceType Project p LocalVariableDeclaration ReferenceType FileSelector VariableDeclarator result ArrayCreator ReferenceType FileSelector MethodInvocation size StatementExpression MethodInvocation MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String SecurityException UnknownHostException ReturnStatement MethodInvocation MethodInvocation getHostName	0
MethodDeclaration Modifier public FormalParameter ReferenceType String user StatementExpression Assignment This MemberReference user MemberReference user =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected doit FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os Exception StatementExpression ClassCreator MethodInvocation MemberReference is MemberReference os ReferenceType	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference forceOverwrite MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator timeZone MethodInvocation TimeZone Literal LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar MemberReference timeZone getInstance StatementExpression MethodInvocation cal Literal 2002 Literal 1 Literal 23 set LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation MethodInvocation cal MemberReference format StatementExpression MethodInvocation Literal MemberReference text assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference blockSize	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore InvocationTargetException IllegalAccessException IfStatement MethodInvocation ! MethodInvocation getName MethodInvocation Literal "Configured" endsWith getMethod BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference realObject invoke getMethod ReturnStatement MemberReference nestedObject	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public ReferenceType String XDocletException ReturnStatement MethodInvocation MethodInvocation getTaskName	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal MethodInvocation hashCode	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject TryStatement StatementExpression MethodInvocation Literal "test" executeTarget StatementExpression MethodInvocation Literal "should have cause a build fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + MethodInvocation e getMessage Literal " should start with Could not find" MethodInvocation e MethodInvocation Literal "Warning: Could not find file " startsWith getMessage assertTrue StatementExpression MethodInvocation BinaryOperation + MethodInvocation e MethodInvocation toString getLocation Literal " should end with " MethodInvocation e MethodInvocation toString MethodInvocation Literal " endsWith getLocation assertTrue	0
MethodDeclaration Modifier public setValue FormalParameter BasicType boolean value StatementExpression Assignment MemberReference attributeValue MemberReference value =	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference src Literal "," WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation tok nextToken LocalVariableDeclaration ReferenceType VariableDeclarator sf ClassCreator ReferenceType StatementExpression MethodInvocation sf MethodInvocation MethodInvocation MethodInvocation f trim getProject StatementExpression MethodInvocation MemberReference sf	0
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int options LocalVariableDeclaration BasicType int VariableDeclarator MemberReference Pattern IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference Pattern |= IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference Pattern |= IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference Pattern |= ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Line 3" expectLog	0
MethodDeclaration Modifier protected ReferenceType File getFile IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement ReturnStatement Cast ReferenceType FileResource MemberReference src BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration BasicType boolean VariableDeclarator isFiltersFromFile BinaryOperation && BinaryOperation && BinaryOperation != MemberReference filtersFile Literal null BinaryOperation == MemberReference token Literal null BinaryOperation == MemberReference value Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation && BinaryOperation && BinaryOperation == MemberReference filtersFile Literal null BinaryOperation != MemberReference token Literal null BinaryOperation != MemberReference value Literal null IfStatement BinaryOperation && MemberReference ! isFiltersFromFile MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal token and value or " Literal a filtersFile parameter is " Literal MethodInvocation getLocation IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference token MemberReference value getProject IfStatement MemberReference isFiltersFromFile BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator commandline ClassCreator ReferenceType CommandlineJava IfStatement Literal MethodInvocation MemberReference format equals "text" BlockStatement StatementExpression MethodInvocation commandline Literal setClassname IfStatement Literal MethodInvocation MemberReference format equals "xml" BlockStatement StatementExpression MethodInvocation commandline Literal setClassname IfStatement BinaryOperation != MemberReference jvm Literal null BlockStatement StatementExpression MethodInvocation commandline MemberReference jvm IfStatement BinaryOperation && BinaryOperation == MethodInvocation getSourcespath Literal null BinaryOperation == MethodInvocation getClassespath Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing required argument" IfStatement BinaryOperation == MethodInvocation getClassespath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal is in JDepend >= " Literal "- please convert to StatementExpression MethodInvocation MemberReference msg log LocalVariableDeclaration BasicType int VariableDeclarator exitValue MemberReference ERRORS LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false IfStatement MethodInvocation ! BlockStatement StatementExpression Assignment MemberReference exitValue MethodInvocation MemberReference commandline executeInVM = BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator watchdog MethodInvocation StatementExpression Assignment MemberReference exitValue MethodInvocation MemberReference commandline MemberReference watchdog executeAsForked = IfStatement BinaryOperation != MemberReference watchdog Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation watchdog killedProcess = LocalVariableDeclaration BasicType boolean VariableDeclarator errorOccurred BinaryOperation || BinaryOperation == MemberReference exitValue MemberReference ERRORS MemberReference IfStatement MemberReference errorOccurred BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator errorMessage BinaryOperation + Literal TernaryExpression MemberReference Literal " - Literal "" IfStatement MethodInvocation BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference errorMessage MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference errorMessage MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator value IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal : Class = " MemberReference Literal ", name = " MemberReference Literal ", type = " MemberReference = BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + BinaryOperation + Literal : Class index = " MemberReference Literal ", name and type index = " MemberReference = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference added	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType FileSet VariableDeclarator resultFileSet Cast ReferenceType FileSet MethodInvocation p MemberReference RESULT_FILESET getReference LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation resultFileSet MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator scannedFiles MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference scannedFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i scannedFiles MemberReference ArraySelector MemberReference i scannedFiles put StatementExpression MethodInvocation BinaryOperation + Literal "Classfileset did not pick up expected number of " Literal "class files" Literal 4 MethodInvocation files size assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Result did not contain test" MemberReference File separator Literal MethodInvocation files BinaryOperation + BinaryOperation + Literal "test" MemberReference File separator Literal containsKey assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Result did not contain test" MemberReference File separator Literal MethodInvocation files BinaryOperation + BinaryOperation + Literal "test" MemberReference File separator Literal containsKey assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Result did not contain test" MemberReference File separator Literal MethodInvocation files BinaryOperation + BinaryOperation + Literal "test" MemberReference File separator Literal containsKey assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Result did not contain test" MemberReference File separator Literal MethodInvocation files BinaryOperation + BinaryOperation + Literal "test" MemberReference File separator Literal containsKey assertTrue	1
MethodDeclaration Modifier protected BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal "DEPRECATED - The task is deprecated. Use copy src == expectLog	0
MethodDeclaration Modifier protected BasicType boolean scanDir FormalParameter ReferenceType File srcDir FormalParameter ReferenceType String files LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator sfs ClassCreator ReferenceType SourceFileScanner This LocalVariableDeclaration ReferenceType VariableDeclarator mapper MethodInvocation LocalVariableDeclaration ReferenceType File VariableDeclarator dir MemberReference srcDir IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference dir Literal null = ReturnStatement BinaryOperation == MethodInvocation sfs MemberReference length MemberReference files MemberReference srcDir MemberReference dir MemberReference mapper Literal 0	0
MethodDeclaration Modifier private ReferenceType String IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement ReturnStatement MemberReference env LocalVariableDeclaration ReferenceType Vector VariableDeclarator osEnv Cast ReferenceType Vector MethodInvocation MethodInvocation clone getProcEnvironment ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference env length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference i env LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation Literal 0 BinaryOperation + MethodInvocation Literal '=' indexOf Literal 1 substring IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference key MethodInvocation key toLowerCase = LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation osEnv size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference size MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator osEnvItem Cast ReferenceType String MethodInvocation osEnv MemberReference j elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression MemberReference MethodInvocation osEnvItem toLowerCase MemberReference osEnvItem IfStatement MethodInvocation MemberReference key startsWith BlockStatement StatementExpression MethodInvocation osEnv MemberReference j removeElementAt IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MethodInvocation osEnvItem Literal 0 MethodInvocation key length substring MethodInvocation MethodInvocation key length substring = BreakStatement StatementExpression MethodInvocation osEnv MemberReference addElement ReturnStatement Cast ReferenceType String MethodInvocation osEnv ArrayCreator ReferenceType String MethodInvocation osEnv size toArray	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MethodInvocation MemberReference StatementExpression MethodInvocation Literal "The attribute is It will be removed" MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public tearDown IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation exists BlockStatement StatementExpression MethodInvocation delete	0
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType DirectoryScanner getDirectoryScanner FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getDirectoryScanner MemberReference p LocalVariableDeclaration ReferenceType Vector VariableDeclarator allRootClasses Cast ReferenceType Vector MethodInvocation clone ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator Cast ReferenceType FileSet MethodInvocation e nextElement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator MethodInvocation MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal ".class" endsWith files BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference i MethodInvocation Literal 0 BinaryOperation - MemberReference ArraySelector MemberReference i MethodInvocation length files Literal 6 substring files LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation MethodInvocation Literal '\\' Literal '.' replace Literal '/' Literal '.' replace StatementExpression MethodInvocation allRootClasses MemberReference className addElement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator SuperMethodInvocation MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType VariableDeclarator scanner ClassCreator ReferenceType MemberReference StatementExpression MethodInvocation scanner MethodInvocation MemberReference p getDir StatementExpression MethodInvocation scanner MemberReference allRootClasses StatementExpression MethodInvocation scanner ReturnStatement MemberReference scanner	1
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug = StatementExpression This MemberReference buffer MethodInvocation MemberReference debug	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String verboseScope BuildException StatementExpression Assignment MemberReference verboseScope MethodInvocation verboseScope MemberReference toLowerCase = LocalVariableDeclaration BasicType boolean VariableDeclarator elements ArrayCreator BasicType boolean MemberReference SCOPE_ELEMENTS length LocalVariableDeclaration BasicType boolean VariableDeclarator gotAll Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator gotNotAll Literal false LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference verboseScope Literal "," WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator next MethodInvocation tok MethodInvocation trim nextToken IfStatement MethodInvocation next Literal equals BlockStatement IfStatement MemberReference gotAll BlockStatement StatementExpression MethodInvocation MethodInvocation Literal tag scope MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference gotAll Literal true = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference SCOPE_ELEMENTS length MemberReference ++ i BlockStatement IfStatement MethodInvocation next MemberReference ArraySelector MemberReference i SCOPE_ELEMENTS equals BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference i MemberReference SCOPE_ELEMENTS length BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unrecognised scope " MemberReference next BlockStatement IfStatement MemberReference ArraySelector MemberReference i elements BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal tag scope " MemberReference next MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference ArraySelector MemberReference i elements Literal true = StatementExpression Assignment MemberReference gotNotAll Literal true = IfStatement BinaryOperation && MemberReference gotNotAll MemberReference gotAll BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal of and other scope " Literal in tag IfStatement BinaryOperation && MemberReference ! gotNotAll MemberReference ! gotAll BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No scope elements specified in tag " Literal IfStatement MemberReference gotAll BlockStatement StatementExpression Assignment This MemberReference scope Literal = BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buff ClassCreator ReferenceType StringBuffer MemberReference elements length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i elements BlockStatement StatementExpression MethodInvocation buff MemberReference ArraySelector MemberReference i MethodInvocation Literal 0 charAt SCOPE_ELEMENTS append StatementExpression Assignment This MemberReference scope MethodInvocation buff toString =	1
MethodDeclaration Modifier public write FormalParameter BasicType int IOException LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator c Cast BasicType byte MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression MethodInvocation bufferInfo.buffer MemberReference write StatementExpression MethodInvocation MemberReference buffer processBuffer BlockStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference buffer processBuffer StatementExpression MethodInvocation bufferInfo.buffer MemberReference write StatementExpression Assignment MemberReference BinaryOperation == MemberReference c Literal '\r' = IfStatement BinaryOperation && MemberReference ! BinaryOperation > MethodInvocation bufferInfo.buffer size MemberReference BlockStatement StatementExpression MethodInvocation MemberReference buffer processBuffer	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference algorithm	0
MethodDeclaration Modifier public FormalParameter ReferenceType String FormalParameter ReferenceType Class taskClass BuildException StatementExpression MethodInvocation ComponentHelper MethodInvocation MemberReference MemberReference taskClass This getComponentHelper	1
MethodDeclaration Modifier public static ReferenceType String replace FormalParameter ReferenceType String data FormalParameter ReferenceType String from FormalParameter ReferenceType String to LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MethodInvocation data length LocalVariableDeclaration BasicType int VariableDeclarator pos Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement BinaryOperation != Assignment MemberReference pos MethodInvocation data MemberReference from MemberReference i indexOf = Literal - 1 BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference to append MethodInvocation data MemberReference i MemberReference pos substring append StatementExpression Assignment MemberReference i BinaryOperation + MemberReference pos MethodInvocation from length = StatementExpression MethodInvocation buf MethodInvocation data MemberReference i substring append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal "" Literal CatchClause CatchClauseParameter BuildException ex StatementExpression MethodInvocation Literal Literal "Duplicate target MethodInvocation ex getMessage assertEquals ReturnStatement StatementExpression MethodInvocation Literal "Should throw BuildException about duplicate fail	1
MethodDeclaration Modifier public FormalParameter ReferenceType next StatementExpression Assignment This MemberReference next MemberReference next =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Vector getGroups FormalParameter ReferenceType String argument BuildException ReturnStatement MethodInvocation MemberReference argument MemberReference MATCH_DEFAULT getGroups	1
MethodDeclaration Modifier protected BasicType int run FormalParameter ReferenceType Commandline cmd TryStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN StatementExpression MethodInvocation exe MemberReference aProj setAntRun StatementExpression MethodInvocation exe MethodInvocation aProj setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation cmd getCommandline setCommandline ReturnStatement MethodInvocation exe execute CatchClause CatchClauseParameter java.io.IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter Modifier final ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference BinaryOperation + MemberReference Literal	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MethodInvocation getValue equalsIgnoreCase	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference fork MemberReference value =	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "classic" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "modern" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir BuildException StatementExpression MethodInvocation StatementExpression Assignment This MemberReference dir MemberReference dir =	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected ReferenceType FormalParameter Modifier final ReferenceType File srcDir LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType MethodInvocation getTask MemberReference srcDir MethodDeclaration Modifier protected IfStatement MethodInvocation currentElement Literal equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference currentText LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation MethodInvocation META_DIR length MethodInvocation length substring LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference srcDir MemberReference fileName StatementExpression MethodInvocation ejbFiles MemberReference MemberReference descriptorFile put StatementExpression MethodInvocation handler MemberReference TernaryExpression BinaryOperation == MemberReference Literal null MemberReference MemberReference registerDTD ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MemberReference MethodInvocation iterator getConfig MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator Cast ReferenceType ReferenceType MethodInvocation i next StatementExpression MethodInvocation handler MethodInvocation getPublicId MethodInvocation getLocation registerDTD ReturnStatement MemberReference handler	0
MethodDeclaration Modifier public BasicType int getCount IfStatement BinaryOperation == This MemberReference Literal null BlockStatement ReturnStatement Literal - 1 ReturnStatement MethodInvocation Integer Cast ReferenceType String This MemberReference MethodInvocation Literal 1 get parseInt	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation stream close StatementExpression MethodInvocation stream StatementExpression Assignment MemberReference stream Literal null =	0
MethodDeclaration Modifier public FormalParameter ReferenceType mode StatementExpression Assignment This MemberReference MemberReference mode =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private copyFile FormalParameter ReferenceType File fromFile FormalParameter ReferenceType File toFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MemberReference fromFile Literal " to " MemberReference toFile MemberReference verbosity log LocalVariableDeclaration ReferenceType FilterSetCollection VariableDeclarator executionFilters ClassCreator ReferenceType FilterSetCollection IfStatement MemberReference filtering BlockStatement StatementExpression MethodInvocation executionFilters MethodInvocation MethodInvocation getProject addFilterSet ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator filterEnum MethodInvocation MethodInvocation elements MethodInvocation filterEnum hasMoreElements BlockStatement StatementExpression MethodInvocation executionFilters Cast ReferenceType MethodInvocation filterEnum nextElement addFilterSet StatementExpression MethodInvocation MethodInvocation MemberReference fromFile MemberReference toFile MemberReference executionFilters MethodInvocation MemberReference forceOverwrite MethodInvocation MethodInvocation getEncoding MethodInvocation MethodInvocation getProject copyFile getFileUtils CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference fromFile Literal " to " MemberReference toFile Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation	1
MethodDeclaration Modifier public close IOException IfStatement BinaryOperation && MemberReference ! closed BinaryOperation && MemberReference append MemberReference BlockStatement StatementExpression MethodInvocation This MemberReference property StatementExpression Assignment MemberReference closed Literal true =	1
MethodDeclaration Modifier public FormalParameter ReferenceType files StatementExpression SuperMethodInvocation MemberReference files	0
MethodDeclaration Modifier public ReferenceType Object clone CloneNotSupportedException LocalVariableDeclaration ReferenceType VariableDeclarator that Cast ReferenceType SuperMethodInvocation clone StatementExpression Assignment MemberReference that Cast ReferenceType ArrayList MethodInvocation clone = ReturnStatement MemberReference that	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Property p StatementExpression MethodInvocation properties MemberReference p addElement	0
MethodDeclaration Modifier protected processLine FormalParameter ReferenceType String line FormalParameter BasicType int IfStatement BinaryOperation && BinaryOperation == MemberReference MemberReference Project MSG_INFO MethodInvocation line Literal "Generating " startsWith BlockStatement IfStatement BinaryOperation != MemberReference queuedLine Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference queuedLine MemberReference Project MSG_VERBOSE processLine StatementExpression Assignment MemberReference queuedLine MemberReference line = BlockStatement IfStatement BinaryOperation != MemberReference queuedLine Literal null BlockStatement IfStatement MethodInvocation line Literal " startsWith BlockStatement StatementExpression SuperMethodInvocation MemberReference queuedLine MemberReference Project MSG_VERBOSE processLine BlockStatement StatementExpression SuperMethodInvocation MemberReference queuedLine MemberReference Project MSG_INFO processLine StatementExpression Assignment MemberReference queuedLine Literal null = StatementExpression SuperMethodInvocation MemberReference line MemberReference processLine	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String getCompilerVersion StatementExpression MethodInvocation facade MethodInvocation MethodInvocation Literal getProperty getProject ReturnStatement MethodInvocation facade	0
MethodDeclaration Modifier private FormalParameter ReferenceType FormatterElement feArray FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType String testCase StatementExpression MethodInvocation MemberReference feArray MemberReference test BinaryOperation + Literal Java the time in the Literal " does not reflect the time until the MemberReference testCase	0
MethodDeclaration Modifier protected ReferenceType OutputStream getErrorStream IfStatement BinaryOperation == This MemberReference errorStream Literal null BlockStatement IfStatement BinaryOperation != MemberReference error Literal null BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MethodInvocation error getPath MemberReference append CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_WARN ReturnStatement This MemberReference errorStream	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Invalid value specified for attribute." expectBuildException	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public test3 IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier protected setUp Exception StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected TryStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close StatementExpression Assignment MemberReference Literal null = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MemberReference e log TryStatement IfStatement BinaryOperation != MemberReference clientSocket Literal null BlockStatement StatementExpression MethodInvocation clientSocket close StatementExpression Assignment MemberReference clientSocket Literal null = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MemberReference e log	0
MethodDeclaration Modifier public static throwBuildException FormalParameter ReferenceType Exception t BuildException IfStatement BinaryOperation instanceof MemberReference t ReferenceType InvocationTargetException BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t2 Cast ReferenceType InvocationTargetException MemberReference t IfStatement BinaryOperation instanceof MemberReference t2 ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t2 ThrowStatement ClassCreator ReferenceType BuildException MemberReference t2 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier private processFile FormalParameter Modifier final ReferenceType String line IfStatement MethodInvocation line Literal startsWith BlockStatement StatementExpression Assignment MemberReference file MethodInvocation line Literal 14 MethodInvocation line length substring = StatementExpression Assignment MemberReference status MemberReference =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String XDocletException ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType File FormalParameter ReferenceType Vector files IOException LocalVariableDeclaration ReferenceType File VariableDeclarator listFile MethodInvocation FILE_UTILS Literal Literal "" Literal null createTempFile StatementExpression MethodInvocation listFile deleteOnExit LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileOutputStream MemberReference listFile LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation files size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + Literal '\"' MethodInvocation files MethodInvocation toString MemberReference i elementAt Literal '\"' println StatementExpression MethodInvocation writer close ReturnStatement MemberReference listFile	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType File dir FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType int mode FormalParameter ReferenceType IOException IfStatement MemberReference doFilesonly BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal directory " MemberReference vPath Literal " for MemberReference Project MSG_VERBOSE log ReturnStatement IfStatement BinaryOperation != MethodInvocation MemberReference vPath get Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal "adding directory " MemberReference vPath MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference vPath MemberReference vPath put IfStatement MemberReference ! skipWriting BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze ClassCreator ReferenceType ZipEntry MemberReference vPath IfStatement BinaryOperation && BinaryOperation != MemberReference dir Literal null MethodInvocation dir exists BlockStatement StatementExpression MethodInvocation ze BinaryOperation + MethodInvocation dir lastModified TernaryExpression MemberReference Literal 1999 Literal 0 BlockStatement StatementExpression MethodInvocation ze BinaryOperation + MethodInvocation System currentTimeMillis TernaryExpression MemberReference Literal 1999 Literal 0 StatementExpression MethodInvocation ze Literal 0 setSize StatementExpression MethodInvocation ze MemberReference ZipEntry STORED setMethod StatementExpression MethodInvocation ze MemberReference StatementExpression MethodInvocation ze MemberReference mode setUnixMode IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation ze MemberReference StatementExpression MethodInvocation zOut MemberReference ze putNextEntry	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation file getPath Literal " not found." LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference file = StatementExpression Assignment MemberReference script MethodInvocation FileUtils MemberReference in readFully += CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression MethodInvocation FileUtils MemberReference in close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject	0
MethodDeclaration Modifier private static FormalParameter ReferenceType Project project IfStatement BinaryOperation != MethodInvocation project Literal null BlockStatement StatementExpression MethodInvocation project MethodInvocation project log	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter ReferenceType text StatementExpression Assignment MemberReference title MemberReference text =	0
MethodDeclaration Modifier public ReferenceType String getClassname ReturnStatement MemberReference classname	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType equals getClass	1
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference input Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing attribute IfStatement BinaryOperation == MemberReference output Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing attribute IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing a file name mapper type LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation MemberReference input mapFileName LocalVariableDeclaration ReferenceType String VariableDeclarator IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference result length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation b Literal "|" append StatementExpression MethodInvocation b MemberReference ArraySelector MemberReference i result append StatementExpression Assignment MemberReference MethodInvocation b toString = IfStatement MethodInvocation ! MemberReference output equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal " " Literal " MemberReference Literal " " Literal "expected " MemberReference output	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true IfStatement BinaryOperation != MemberReference replaceIndex Literal - 1 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ch MethodInvocation replaceData MemberReference ++ replaceIndex charAt IfStatement BinaryOperation >= MemberReference replaceIndex MethodInvocation replaceData length BlockStatement StatementExpression Assignment MemberReference replaceIndex Literal - 1 = ReturnStatement MemberReference ch LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation IfStatement BinaryOperation == MemberReference ch MemberReference beginToken BlockStatement LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator key ClassCreator ReferenceType StringBuffer Literal "" DoStatement BinaryOperation != MemberReference ch MemberReference endToken BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation = IfStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement StatementExpression MethodInvocation key Cast BasicType char MemberReference ch append BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference queuedData Literal null BinaryOperation == MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference queuedData MethodInvocation key toString = BlockStatement StatementExpression Assignment MemberReference queuedData BinaryOperation + MethodInvocation key toString MethodInvocation queuedData MemberReference substring = StatementExpression Assignment MemberReference Literal 0 = ReturnStatement MemberReference beginToken BlockStatement StatementExpression MethodInvocation key BinaryOperation - MethodInvocation key length Literal 1 setLength LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator replaceWith Cast ReferenceType String MethodInvocation hash MethodInvocation key toString get IfStatement BinaryOperation != MemberReference replaceWith Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation replaceWith length Literal 0 BlockStatement StatementExpression Assignment MemberReference replaceData MemberReference replaceWith = StatementExpression Assignment MemberReference replaceIndex Literal 0 = ReturnStatement MethodInvocation read BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newData BinaryOperation + MethodInvocation key toString MemberReference endToken IfStatement BinaryOperation || BinaryOperation == MemberReference queuedData Literal null BinaryOperation == MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference queuedData MemberReference newData = BlockStatement StatementExpression Assignment MemberReference queuedData BinaryOperation + MemberReference newData MethodInvocation queuedData MemberReference substring = StatementExpression Assignment MemberReference Literal 0 = ReturnStatement MemberReference beginToken ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public addDate FormalParameter ReferenceType DateSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType srcDir IfStatement BinaryOperation == MemberReference src Literal null BlockStatement StatementExpression Assignment MemberReference src MemberReference srcDir = BlockStatement StatementExpression MethodInvocation src MemberReference srcDir append	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "" expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal A expectLogContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String add StatementExpression MethodInvocation cmd MethodInvocation MemberReference add setLine createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "no MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType Attribute getAttribute FormalParameter ReferenceType String attributeName ReturnStatement Cast ReferenceType Attribute MethodInvocation attributes MethodInvocation attributeName toLowerCase get	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String path LocalVariableDeclaration BasicType char VariableDeclarator sep MemberReference File separatorChar StatementExpression Assignment MemberReference path MethodInvocation path MethodInvocation Literal '\\' MemberReference sep replace Literal '/' MemberReference sep replace = IfStatement MethodInvocation ! MemberReference path isAbsolutePath BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference path Literal " is not an absolute path" LocalVariableDeclaration ReferenceType String VariableDeclarator root Literal null LocalVariableDeclaration BasicType int VariableDeclarator colon MethodInvocation path Literal ':' indexOf IfStatement BinaryOperation && BinaryOperation > MemberReference colon Literal 0 BinaryOperation || MemberReference MemberReference onNetWare BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator next BinaryOperation + MemberReference colon Literal 1 StatementExpression Assignment MemberReference root MethodInvocation path Literal 0 MemberReference next substring = LocalVariableDeclaration BasicType char VariableDeclarator ca MethodInvocation path toCharArray StatementExpression Assignment MemberReference root MemberReference sep += StatementExpression Assignment MemberReference next TernaryExpression BinaryOperation == MemberReference ArraySelector MemberReference next ca MemberReference sep BinaryOperation + MemberReference next Literal 1 MemberReference next = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbPath ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference next BinaryOperation < MemberReference i MemberReference ca length MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation != MemberReference ArraySelector MemberReference i ca MemberReference sep BinaryOperation != MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 ca MemberReference sep BlockStatement StatementExpression MethodInvocation sbPath MemberReference ArraySelector MemberReference i ca append StatementExpression Assignment MemberReference path MethodInvocation sbPath toString = IfStatement BinaryOperation && BinaryOperation > MethodInvocation path length Literal 1 BinaryOperation == MethodInvocation path Literal 1 charAt MemberReference sep BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nextsep MethodInvocation path MemberReference sep Literal 2 indexOf StatementExpression Assignment MemberReference nextsep MethodInvocation path MemberReference sep BinaryOperation + MemberReference nextsep Literal 1 indexOf = StatementExpression Assignment MemberReference root TernaryExpression BinaryOperation > MemberReference nextsep Literal 2 MethodInvocation path Literal 0 BinaryOperation + MemberReference nextsep Literal 1 substring MemberReference path = StatementExpression Assignment MemberReference path MethodInvocation path MethodInvocation root length substring = BlockStatement StatementExpression Assignment MemberReference root MemberReference File separator = StatementExpression Assignment MemberReference path MethodInvocation path Literal 1 substring = ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference root MemberReference path	1
MethodDeclaration Modifier private execP4Fstat FormalParameter ReferenceType StringBuffer list LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation list Literal 0 substring IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Executing " MemberReference P4CmdOpts Literal " " MemberReference addCmd MemberReference l Literal "\n" MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference P4CmdOpts Literal " " MemberReference addCmd MemberReference l MemberReference handler execP4Command	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation manifest LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation Literal section name Literal MemberReference assertEquals StatementExpression MethodInvocation Literal section name Literal MemberReference assertEquals LocalVariableDeclaration ReferenceType Manifest ReferenceType Section VariableDeclarator section MethodInvocation manifest Literal StatementExpression Assignment MemberReference e MethodInvocation section = LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation section MethodInvocation getName MemberReference getAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation section MethodInvocation getName MemberReference getAttribute StatementExpression MethodInvocation Literal attribute name Literal MemberReference assertEquals StatementExpression MethodInvocation Literal attribute name Literal MemberReference assertEquals	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation getIndex	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException IfStatement BinaryOperation && MethodInvocation name Literal "target" equals BinaryOperation || MethodInvocation uri Literal "" equals MethodInvocation uri MemberReference ANT_CORE_URI equals BlockStatement ReturnStatement MemberReference ProjectHelper2 BlockStatement ReturnStatement MemberReference ProjectHelper2	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType URL url StatementExpression Assignment This MemberReference url MemberReference url =	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init StatementExpression MethodInvocation Literal false	1
MethodDeclaration Modifier public ReferenceType Thread ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression SuperMethodInvocation MethodInvocation toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType String sep StatementExpression Assignment MemberReference MemberReference sep =	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String StatementExpression Assignment This MemberReference className MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getContentType ReturnStatement MemberReference contentType	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference basedir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "No set" IfStatement MethodInvocation ! basedir exists BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal " MemberReference basedir Literal " does not exist" IfStatement MethodInvocation basedir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal " MemberReference basedir Literal " is not a file" IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment MemberReference includes ArrayCreator ReferenceType String Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 includes Literal "**" = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArrayCreator ReferenceType String Literal 0 = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = IfStatement MethodInvocation Literal "" isIncluded BlockStatement IfStatement MethodInvocation ! Literal "" BlockStatement StatementExpression MethodInvocation Literal "" addElement BlockStatement StatementExpression MethodInvocation Literal "" addElement BlockStatement StatementExpression MethodInvocation Literal "" addElement StatementExpression MethodInvocation MemberReference basedir Literal "" Literal true scandir	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal	0
MethodDeclaration Modifier public FormalParameter BasicType byte outbuf LocalVariableDeclaration BasicType int VariableDeclarator offset Literal 0 StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference name MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference mode MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference size MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference modTime MemberReference outbuf MemberReference offset MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator MemberReference offset ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator c Literal 0 BinaryOperation < MemberReference c MemberReference MemberReference ++ c BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ offset outbuf Cast BasicType byte Literal ' ' = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ offset outbuf This MemberReference linkFlag = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference magic MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = StatementExpression Assignment MemberReference offset MethodInvocation TarUtils This MemberReference MemberReference outbuf MemberReference offset MemberReference = WhileStatement BinaryOperation < MemberReference offset MemberReference outbuf length BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ offset outbuf Literal 0 = LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation TarUtils MemberReference outbuf StatementExpression MethodInvocation TarUtils MemberReference MemberReference outbuf MemberReference MemberReference	0
MethodDeclaration Modifier public endPrefixMapping FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType List VariableDeclarator list Cast ReferenceType List MethodInvocation prefixMapping MemberReference prefix get IfStatement BinaryOperation || BinaryOperation == MemberReference list Literal null BinaryOperation == MethodInvocation list size Literal 0 BlockStatement ReturnStatement StatementExpression MethodInvocation list BinaryOperation - MethodInvocation list size Literal 1 remove	1
MethodDeclaration Modifier public BasicType boolean hasNext LocalVariableDeclaration BasicType boolean VariableDeclarator result BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation hasNext WhileStatement BinaryOperation && MemberReference ! result MethodInvocation hasNext BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType ResourceCollection MethodInvocation next = StatementExpression Assignment MemberReference result MethodInvocation hasNext = ReturnStatement MemberReference result	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType Message m StatementExpression Assignment This MemberReference message MemberReference m =	0
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType Message VariableDeclarator MemberReference message TryStatement LocalVariableDeclaration ReferenceType Mailer VariableDeclarator mailer Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator autoFound Literal false IfStatement BinaryOperation || MethodInvocation encoding MemberReference equals BinaryOperation && MethodInvocation encoding MemberReference equals MemberReference ! autoFound BlockStatement TryStatement StatementExpression Assignment MemberReference mailer Cast ReferenceType Mailer MethodInvocation ClasspathUtils Literal ClassReference MethodInvocation getClassLoader ReferenceType ClassReference ReferenceType Mailer newInstance = StatementExpression Assignment MemberReference autoFound Literal true = StatementExpression MethodInvocation Literal "Using mail" MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter BuildException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t TernaryExpression BinaryOperation == MethodInvocation e getCause Literal null MemberReference e MethodInvocation e getCause StatementExpression MethodInvocation BinaryOperation + Literal "Failed to mail: " MethodInvocation t getMessage MemberReference Project MSG_WARN log ReturnStatement IfStatement BinaryOperation && BinaryOperation && MemberReference ! autoFound BinaryOperation || BinaryOperation != MemberReference user Literal null BinaryOperation != MemberReference password Literal null BinaryOperation || MethodInvocation encoding MemberReference UU equals MethodInvocation encoding MemberReference PLAIN equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal auth only with mail" IfStatement BinaryOperation && BinaryOperation && MemberReference ! autoFound MemberReference BinaryOperation || MethodInvocation encoding MemberReference UU equals MethodInvocation encoding MemberReference PLAIN equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal only with mail" IfStatement BinaryOperation || MethodInvocation encoding MemberReference UU equals BinaryOperation && MethodInvocation encoding MemberReference equals MemberReference ! autoFound BlockStatement TryStatement StatementExpression Assignment MemberReference mailer Cast ReferenceType Mailer MethodInvocation ClasspathUtils Literal ClassReference MethodInvocation getClassLoader ReferenceType ClassReference ReferenceType Mailer newInstance = StatementExpression Assignment MemberReference autoFound Literal true = StatementExpression MethodInvocation Literal "Using UU mail" MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter BuildException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t TernaryExpression BinaryOperation == MethodInvocation e getCause Literal null MemberReference e MethodInvocation e getCause StatementExpression MethodInvocation BinaryOperation + Literal "Failed to UU mail: " MethodInvocation t getMessage MemberReference Project MSG_WARN log ReturnStatement IfStatement BinaryOperation || MethodInvocation encoding MemberReference PLAIN equals BinaryOperation && MethodInvocation encoding MemberReference equals MemberReference ! autoFound BlockStatement StatementExpression Assignment MemberReference mailer ClassCreator ReferenceType = StatementExpression Assignment MemberReference autoFound Literal true = StatementExpression MethodInvocation Literal "Using plain mail" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation == MemberReference mailer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to " MemberReference encoding IfStatement BinaryOperation == MemberReference message Literal null BlockStatement StatementExpression Assignment MemberReference message ClassCreator ReferenceType Message = StatementExpression MethodInvocation message MethodInvocation getProject setProject IfStatement BinaryOperation || BinaryOperation == MemberReference from Literal null BinaryOperation == MethodInvocation from getAddress Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "A from element is required" IfStatement BinaryOperation && BinaryOperation && MethodInvocation toList isEmpty MethodInvocation isEmpty MethodInvocation isEmpty BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "At least one of or must " Literal "be supplied" IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation message BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The type only be " Literal in one StatementExpression MethodInvocation message MemberReference IfStatement BinaryOperation != MemberReference charset Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation message Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The charset only be " Literal in one StatementExpression MethodInvocation message MemberReference charset LocalVariableDeclaration ReferenceType Vector VariableDeclarator files ClassCreator ReferenceType Vector IfStatement BinaryOperation != MemberReference attachments Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation attachments iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr Cast ReferenceType FileResource MethodInvocation iter next StatementExpression MethodInvocation files MethodInvocation fr getFile addElement StatementExpression MethodInvocation BinaryOperation + Literal email: " MemberReference subject MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + Literal "From " MemberReference from MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference replyToList MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference toList MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation mailer MemberReference host setHost StatementExpression MethodInvocation mailer MemberReference port StatementExpression MethodInvocation mailer MemberReference user StatementExpression MethodInvocation mailer MemberReference password StatementExpression MethodInvocation mailer MemberReference StatementExpression MethodInvocation mailer MemberReference message setMessage StatementExpression MethodInvocation mailer MemberReference from StatementExpression MethodInvocation mailer MemberReference replyToList setReplyToList StatementExpression MethodInvocation mailer MemberReference toList StatementExpression MethodInvocation mailer MemberReference StatementExpression MethodInvocation mailer MemberReference StatementExpression MethodInvocation mailer MemberReference files StatementExpression MethodInvocation mailer MemberReference subject StatementExpression MethodInvocation mailer This StatementExpression MethodInvocation mailer MemberReference StatementExpression MethodInvocation mailer MemberReference headers setHeaders StatementExpression MethodInvocation mailer send LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation files size StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal email with " MemberReference count Literal " attachment" TernaryExpression BinaryOperation == MemberReference count Literal 1 Literal "" Literal "s" MemberReference Project MSG_INFO log CatchClause CatchClauseParameter BuildException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t TernaryExpression BinaryOperation == MethodInvocation e getCause Literal null MemberReference e MethodInvocation e getCause StatementExpression MethodInvocation BinaryOperation + Literal "Failed to send email: " MethodInvocation t getMessage MemberReference Project MSG_WARN log IfStatement MemberReference BlockStatement ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "Failed to send email: " MethodInvocation e getMessage MemberReference Project MSG_WARN log IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression Assignment MemberReference message MemberReference =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference MemberReference debug =	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public final BasicType int compare FormalParameter ReferenceType Object foo FormalParameter ReferenceType Object bar StatementExpression MethodInvocation dieOnCircularReference LocalVariableDeclaration ReferenceType VariableDeclarator c TernaryExpression MethodInvocation isReference Cast ReferenceType MethodInvocation getCheckedRef This ReturnStatement MethodInvocation c Cast ReferenceType Resource MemberReference foo Cast ReferenceType Resource MemberReference bar resourceCompare	1
MethodDeclaration Modifier public setLocale FormalParameter ReferenceType String StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue Literal true createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal setValue Literal true createArgument	0
MethodDeclaration Modifier public ReferenceType File IfStatement BinaryOperation == MemberReference toFile Literal null BlockStatement StatementExpression Assignment MemberReference toFile MemberReference = IfStatement BinaryOperation == MemberReference toDir Literal null BlockStatement StatementExpression Assignment MemberReference toDir MethodInvocation MethodInvocation MemberReference getProject = ReturnStatement ClassCreator ReferenceType File MemberReference toDir MemberReference toFile	0
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType File file FormalParameter ReferenceType String filename IfStatement MethodInvocation ! MemberReference filename isAbsolutePath BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator sep MemberReference File separatorChar StatementExpression Assignment MemberReference filename MethodInvocation filename MethodInvocation Literal '\\' MemberReference sep replace Literal '/' MemberReference sep replace = IfStatement MethodInvocation MemberReference filename BlockStatement StatementExpression Assignment MemberReference file Literal null = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal "user.dir" getProperty IfStatement BinaryOperation && BinaryOperation == MethodInvocation filename Literal 0 charAt MemberReference sep BinaryOperation == MethodInvocation Literal 0 charAt MemberReference sep BlockStatement StatementExpression Assignment MemberReference filename BinaryOperation + MethodInvocation ArraySelector Literal 0 MemberReference MethodInvocation filename Literal 1 substring = StatementExpression Assignment MemberReference filename ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference file MemberReference filename = ReturnStatement MethodInvocation MemberReference filename normalize	0
MethodDeclaration Modifier private FormalParameter ReferenceType ClassLoader BuildException IfStatement MemberReference ! BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator project ClassCreator ReferenceType Project StatementExpression MethodInvocation project MemberReference LocalVariableDeclaration ReferenceType Throwable VariableDeclarator error Literal null TryStatement StatementExpression MethodInvocation MemberReference project StatementExpression MethodInvocation MemberReference project LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator savedErr MemberReference System err LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator savedOut MemberReference System out LocalVariableDeclaration ReferenceType InputStream VariableDeclarator MemberReference System in LocalVariableDeclaration ReferenceType VariableDeclarator oldsm Literal null StatementExpression Assignment MemberReference oldsm MethodInvocation System = TryStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation project MemberReference System in StatementExpression MethodInvocation System ClassCreator ReferenceType MemberReference project StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MemberReference project Literal false setOut StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MemberReference project Literal true setErr IfStatement MemberReference ! projectHelp BlockStatement StatementExpression MethodInvocation project IfStatement BinaryOperation != MemberReference threadPriority Literal null BlockStatement TryStatement StatementExpression MethodInvocation project BinaryOperation + Literal "Setting Ant's thread priority to " MemberReference threadPriority MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation Thread MethodInvocation MethodInvocation threadPriority intValue currentThread CatchClause CatchClauseParameter SecurityException swallowed StatementExpression MethodInvocation project Literal "A security manager to set the -nice value" log StatementExpression MethodInvocation project init LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation definedProps keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation definedProps MemberReference arg get StatementExpression MethodInvocation project MemberReference arg MemberReference value StatementExpression MethodInvocation project MemberReference MagicNames ANT_FILE MethodInvocation buildFile getAbsolutePath StatementExpression MethodInvocation project MemberReference IfStatement MemberReference proxy BlockStatement LocalVariableDeclaration ReferenceType ProxySetup VariableDeclarator ClassCreator ReferenceType ProxySetup MemberReference project StatementExpression MethodInvocation StatementExpression MethodInvocation ProjectHelper MemberReference project MemberReference buildFile configureProject IfStatement MemberReference projectHelp BlockStatement StatementExpression MethodInvocation MemberReference project StatementExpression MethodInvocation MemberReference project BinaryOperation > MemberReference msgOutputLevel MemberReference Project MSG_INFO printTargets ReturnStatement IfStatement BinaryOperation == MethodInvocation targets size Literal 0 BlockStatement IfStatement BinaryOperation != MethodInvocation project Literal null BlockStatement StatementExpression MethodInvocation targets MethodInvocation project addElement StatementExpression MethodInvocation project MemberReference targets executeTargets IfStatement BinaryOperation != MemberReference oldsm Literal null BlockStatement StatementExpression MethodInvocation System MemberReference oldsm StatementExpression MethodInvocation System MemberReference savedOut setOut StatementExpression MethodInvocation System MemberReference savedErr setErr StatementExpression MethodInvocation System MemberReference CatchClause CatchClauseParameter RuntimeException exc StatementExpression Assignment MemberReference error MemberReference exc = ThrowStatement MemberReference exc CatchClause CatchClauseParameter Error e StatementExpression Assignment MemberReference error MemberReference e = ThrowStatement MemberReference e IfStatement MemberReference ! projectHelp BlockStatement StatementExpression MethodInvocation project MemberReference error IfStatement BinaryOperation != MemberReference error Literal null BlockStatement StatementExpression MethodInvocation project MethodInvocation error toString MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public setDirectory FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference mode MethodInvocation MemberReference mode getMode =	0
MethodDeclaration Modifier public ReferenceType PlanarImage executeDrawOperation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "\tCreating Rectangle MemberReference width Literal " MemberReference height Literal " MemberReference arcwidth Literal " MemberReference archeight log LocalVariableDeclaration ReferenceType VariableDeclarator bi ClassCreator ReferenceType MemberReference width MemberReference height MemberReference TYPE_4BYTE_ABGR_PRE LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics Cast ReferenceType Graphics2D MethodInvocation bi IfStatement MethodInvocation ! Literal "transparent" equals BlockStatement LocalVariableDeclaration ReferenceType BasicStroke VariableDeclarator bStroke ClassCreator ReferenceType BasicStroke MemberReference stroke_width StatementExpression MethodInvocation graphics MethodInvocation ColorMapper MemberReference getColorByName setColor StatementExpression MethodInvocation graphics MemberReference bStroke setStroke IfStatement BinaryOperation || BinaryOperation != MemberReference arcwidth Literal 0 BinaryOperation != MemberReference archeight Literal 0 BlockStatement StatementExpression MethodInvocation graphics Literal 0 Literal 0 MemberReference width MemberReference height MemberReference arcwidth MemberReference archeight BlockStatement StatementExpression MethodInvocation graphics Literal 0 Literal 0 MemberReference width MemberReference height IfStatement MethodInvocation ! fill Literal "transparent" equals BlockStatement StatementExpression MethodInvocation graphics MethodInvocation ColorMapper MemberReference fill getColorByName setColor IfStatement BinaryOperation || BinaryOperation != MemberReference arcwidth Literal 0 BinaryOperation != MemberReference archeight Literal 0 BlockStatement StatementExpression MethodInvocation graphics MemberReference stroke_width MemberReference stroke_width BinaryOperation - MemberReference width BinaryOperation * MemberReference stroke_width Literal 2 BinaryOperation - MemberReference height BinaryOperation * MemberReference stroke_width Literal 2 MemberReference arcwidth MemberReference archeight BlockStatement StatementExpression MethodInvocation graphics MemberReference stroke_width MemberReference stroke_width BinaryOperation - MemberReference width BinaryOperation * MemberReference stroke_width Literal 2 BinaryOperation - MemberReference height BinaryOperation * MemberReference stroke_width Literal 2 fillRect ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator img Cast ReferenceType DrawOperation MemberReference instr StatementExpression MethodInvocation graphics MethodInvocation img getAsBufferedImage Literal null Literal 0 Literal 0 IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement StatementExpression Assignment MemberReference graphics Cast ReferenceType Graphics2D MethodInvocation bi = LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator image Cast ReferenceType TransformOperation MemberReference instr StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = ReturnStatement MethodInvocation PlanarImage MemberReference bi wrapRenderedImage	1
MethodDeclaration * Set the maximum * of the commandline when calling to add the * to values mean * but also * @param len maximum length of command line default is * @throws BuildException if trying to set the command line length to 0 or */ Modifier public FormalParameter BasicType int len BuildException IfStatement BinaryOperation <= MemberReference len Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal should be a positive number" StatementExpression Assignment This MemberReference cmdLength MemberReference len =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String env StatementExpression Assignment This MemberReference env MemberReference env =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression MethodInvocation MemberReference ClassCreator ReferenceType Integer MemberReference put	1
MethodDeclaration BasicType long getLength ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private FormalParameter ReferenceType e IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression MethodInvocation Literal false ReturnStatement StatementExpression MethodInvocation MethodInvocation e getName setName StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MethodInvocation e MethodInvocation setLastModified StatementExpression MethodInvocation MethodInvocation e isDirectory setDirectory StatementExpression MethodInvocation MethodInvocation e getSize setSize StatementExpression MethodInvocation MethodInvocation e getMode setMode StatementExpression Assignment MemberReference MethodInvocation e = StatementExpression Assignment MemberReference MethodInvocation e = StatementExpression Assignment MemberReference uid MethodInvocation e = StatementExpression Assignment MemberReference gid MethodInvocation e =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal ClassReference ReferenceType getProject TryStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject CatchClause CatchClauseParameter BuildException bx StatementExpression MethodInvocation Literal failed after fail	0
MethodDeclaration Modifier public addValue FormalParameter ReferenceType String value StatementExpression MemberReference ++ currentIndex StatementExpression MethodInvocation MemberReference value setValue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal "file:" StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public FormalParameter ReferenceType value StatementExpression MethodInvocation BinaryOperation + Literal is " MemberReference value log StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createJvmarg ReturnStatement MethodInvocation java createJvmarg	0
MethodDeclaration Modifier public FormalParameter ReferenceType permissions StatementExpression Assignment MemberReference perm MemberReference permissions =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator runner MethodInvocation ClassReference ReferenceType StatementExpression MethodInvocation runner run LocalVariableDeclaration BasicType int VariableDeclarator ret MethodInvocation runner IfStatement BinaryOperation && BinaryOperation != MemberReference ret MemberReference BinaryOperation != MemberReference ret MemberReference ERRORS BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unexpected result " MemberReference ret Literal " from fail	0
MethodDeclaration * @see */ Modifier public targetStarted FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation BinaryOperation + Literal ">> -- " MethodInvocation event MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference StringUtils LINE_SEP MethodInvocation event MethodInvocation getName Literal ":" MemberReference Project MSG_INFO log StatementExpression Assignment MemberReference MethodInvocation System currentTimeMillis =	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation fileset	0
MethodDeclaration Modifier private ReferenceType getReader StatementExpression MethodInvocation ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal home must be set" IfStatement MethodInvocation ! isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal home directory " MethodInvocation getPath Literal " is not valid" IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Project p StatementExpression MethodInvocation MemberReference p init IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p StatementExpression MethodInvocation ReturnStatement This MemberReference regexp	0
MethodDeclaration Modifier public FormalParameter ReferenceType targetType StatementExpression Assignment This MemberReference targetType MethodInvocation targetType getValue =	0
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId StatementExpression MethodInvocation context MethodInvocation BinaryOperation + Literal " MemberReference systemId MemberReference Project MSG_VERBOSE log getProject IfStatement MethodInvocation systemId Literal "file:" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MemberReference systemId fromURI LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference path IfStatement MethodInvocation ! file isAbsolute BlockStatement StatementExpression Assignment MemberReference file MethodInvocation MemberReference context MemberReference path = TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference file StatementExpression MethodInvocation inputSource MethodInvocation MethodInvocation file getAbsolutePath toURI setSystemId ReturnStatement MemberReference inputSource CatchClause CatchClauseParameter FileNotFoundException StatementExpression MethodInvocation BinaryOperation + MethodInvocation file getAbsolutePath Literal " could not be found" MemberReference Project MSG_WARN log ReturnStatement Literal null	0
MethodDeclaration Modifier private ReferenceType InputStream FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation MemberReference name getSystemResourceAsStream BlockStatement ReturnStatement MethodInvocation parent MemberReference name getResourceAsStream	0
MethodDeclaration Modifier public setProcessOutputStream FormalParameter ReferenceType InputStream is IOException StatementExpression Assignment MemberReference br ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference is =	1
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public synchronized BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement TernaryExpression BinaryOperation == MemberReference union Literal null Literal 0 MethodInvocation MethodInvocation size MemberReference union	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t StatementExpression MethodInvocation Literal an MemberReference test MemberReference t	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation event MethodInvocation getName MethodInvocation Literal "" equals BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference error Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Call " MemberReference calls Literal " MemberReference ArraySelector MemberReference calls keys Literal "\'" IfStatement BinaryOperation == MemberReference value Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation event MethodInvocation MemberReference ArraySelector MemberReference calls keys getReference getProject IfStatement MemberReference ArraySelector MemberReference ++ calls BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference o BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference o assertNotNull BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference value LocalVariableDeclaration ReferenceType VariableDeclarator received Cast ReferenceType MethodInvocation event MethodInvocation MemberReference ArraySelector MemberReference calls keys getReference getProject LocalVariableDeclaration BasicType boolean VariableDeclarator shouldBeEqual MemberReference ArraySelector MemberReference ++ calls IfStatement BinaryOperation == MemberReference received Literal null BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference ! shouldBeEqual assertTrue BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator l1 MethodInvocation list LocalVariableDeclaration ReferenceType String VariableDeclarator l2 MethodInvocation received list IfStatement BinaryOperation == MemberReference l1 length MemberReference l2 length BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference l1 length MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i l2 equals l1 BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference ! shouldBeEqual assertTrue StatementExpression MethodInvocation MemberReference msg MemberReference shouldBeEqual assertTrue BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference ! shouldBeEqual assertTrue CatchClause CatchClauseParameter AssertionFailedError e StatementExpression Assignment MemberReference error MemberReference e =	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator other Cast ReferenceType MemberReference o ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference type MemberReference other type BinaryOperation == MemberReference MemberReference other TernaryExpression BinaryOperation == MemberReference name Literal null BinaryOperation == MemberReference other name Literal null MethodInvocation name MemberReference other name equals TernaryExpression BinaryOperation == MemberReference error Literal null BinaryOperation == MemberReference other error Literal null MethodInvocation error MemberReference other error equals TernaryExpression BinaryOperation == MemberReference props Literal null BinaryOperation == MemberReference other props Literal null MethodInvocation props MemberReference other props equals TernaryExpression BinaryOperation == MemberReference result Literal null BinaryOperation == MemberReference other result Literal null MethodInvocation result MemberReference other result equals ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType String suffix StatementExpression Assignment This MemberReference suffix MemberReference suffix =	0
MethodDeclaration Modifier public ReferenceType MessageFormat ReturnStatement Cast ReferenceType MessageFormat MethodInvocation MethodInvocation getValue get	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project p StatementExpression Assignment This MemberReference project MemberReference p =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference MemberReference Literal ""	0
MethodDeclaration BasicType boolean eval FormalParameter BasicType int t FormalParameter BasicType int f ReturnStatement BinaryOperation > MemberReference t Literal 0	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference add	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference addElement ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public setBold FormalParameter BasicType boolean state StatementExpression Assignment MemberReference MemberReference state =	1
MethodDeclaration Modifier private StatementExpression Assignment This MemberReference workLimit BinaryOperation * MemberReference This MemberReference last = StatementExpression Assignment This MemberReference workDone Literal 0 = StatementExpression Assignment This MemberReference Literal false = StatementExpression Assignment This MemberReference firstAttempt Literal true = StatementExpression MethodInvocation mainSort IfStatement BinaryOperation && This MemberReference firstAttempt BinaryOperation > This MemberReference workDone This MemberReference workLimit BlockStatement StatementExpression MethodInvocation randomiseBlock StatementExpression Assignment This MemberReference workLimit Assignment This MemberReference workDone Literal 0 = = StatementExpression Assignment This MemberReference firstAttempt Literal false = StatementExpression MethodInvocation mainSort LocalVariableDeclaration BasicType int VariableDeclarator fmap This MemberReference data MemberReference fmap StatementExpression Assignment This MemberReference origPtr Literal - 1 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator lastShadow This MemberReference last BinaryOperation <= MemberReference i MemberReference lastShadow MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i fmap Literal 0 BlockStatement StatementExpression Assignment This MemberReference origPtr MemberReference i = BreakStatement	1
MethodDeclaration Modifier public ReferenceType String getExtension ReturnStatement MemberReference extension	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier private synchronized static remove FormalParameter ReferenceType f LocalVariableDeclaration ReferenceType Set VariableDeclarator s Cast ReferenceType Set MethodInvocation MAP MemberReference f parent get IfStatement BinaryOperation != MemberReference s Literal null BlockStatement StatementExpression MethodInvocation s MemberReference f remove	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public synchronized BasicType int getIncludedFilesCount IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal call ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier public ReferenceType File createTempFile FormalParameter ReferenceType String prefix FormalParameter ReferenceType String suffix FormalParameter ReferenceType File ReturnStatement MethodInvocation MemberReference prefix MemberReference suffix MemberReference Literal false createTempFile	0
MethodDeclaration Modifier public execute IOException SwitchStatement MemberReference action SwitchStatementCase StatementExpression MethodInvocation MemberReference ftp MemberReference MemberReference dsfile BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference ftp MemberReference MemberReference dsfile getFile BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference ftp MemberReference dsfile BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference ftp MemberReference MemberReference dsfile listFile BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference ftp BinaryOperation + BinaryOperation + BinaryOperation + Literal "chmod " MemberReference chmod Literal " " MethodInvocation MemberReference dsfile StatementExpression MemberReference ++ transferred BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "unknown ftp action " MemberReference action	0
MethodDeclaration Modifier public static ReferenceType String replaceProperties FormalParameter ReferenceType Project project FormalParameter ReferenceType String value FormalParameter ReferenceType Hashtable keys BuildException LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference project ReturnStatement MethodInvocation Literal null MemberReference value MemberReference keys replaceProperties	1
MethodDeclaration Modifier public FormalParameter BasicType boolean trim StatementExpression Assignment This MemberReference trim MemberReference trim =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Element VariableDeclarator e2 Literal null IfStatement MethodInvocation uri Literal "" equals BlockStatement StatementExpression Assignment MemberReference e2 MethodInvocation doc MemberReference name createElement = BlockStatement StatementExpression Assignment MemberReference e2 MethodInvocation doc MemberReference uri MemberReference = StatementExpression MethodInvocation e MemberReference e2 ReturnStatement ClassCreator ReferenceType MemberReference e2	1
MethodDeclaration Modifier public FormalParameter ReferenceType String pattern StatementExpression Assignment This MemberReference pattern MemberReference pattern =	0
MethodDeclaration Modifier private ReferenceType Properties FormalParameter ReferenceType String fileName LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in Literal null LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference fileName = StatementExpression MethodInvocation props MemberReference in load CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation ioe printStackTrace StatementExpression MethodInvocation FileUtils MemberReference in close ReturnStatement MemberReference props	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "Invalid output directory" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String width StatementExpression Assignment MemberReference MemberReference width =	0
MethodDeclaration Modifier protected validate BuildException IfStatement BinaryOperation == MemberReference destFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement MethodInvocation destFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation validate	0
MethodDeclaration Modifier public IfStatement BinaryOperation > MethodInvocation wStack size Literal 0 StatementExpression MethodInvocation wStack BinaryOperation - MethodInvocation wStack size Literal 1 removeElementAt	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference needed	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression Assignment MemberReference tmpDir MethodInvocation MethodInvocation Literal getProperty getProject = StatementExpression Assignment MemberReference ftp ClassCreator ReferenceType FTPClient = StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Literal getProperty getProject = StatementExpression MethodInvocation myFTPTask MemberReference StatementExpression MethodInvocation myFTPTask MethodInvocation getProject setProject StatementExpression Assignment MemberReference remoteTmpDir MethodInvocation myFTPTask MemberReference tmpDir = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation Literal getProperty getProject LocalVariableDeclaration BasicType int VariableDeclarator port MethodInvocation Integer MethodInvocation MethodInvocation Literal getProperty getProject parseInt LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation Literal getProperty getProject LocalVariableDeclaration ReferenceType String VariableDeclarator password MethodInvocation MethodInvocation Literal getProperty getProject TryStatement StatementExpression MethodInvocation ftp MemberReference MemberReference port connect CatchClause CatchClauseParameter Exception ex StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference loginSuceeded Literal false = StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not connect to host " MemberReference Literal " on port " MemberReference port println IfStatement MemberReference BlockStatement TryStatement StatementExpression MethodInvocation ftp MemberReference MemberReference password CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference loginSuceeded Literal false = StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not log on to " MemberReference Literal " as user " MemberReference println	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression MethodInvocation ClassCreator ReferenceType Long MethodInvocation cpStream readLong setValue	1
MethodDeclaration Modifier public ReferenceType PlanarImage executeDrawOperation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "\tCreating Text \"" MemberReference Literal "\"" log LocalVariableDeclaration ReferenceType Color VariableDeclarator MethodInvocation ColorMapper MemberReference color getColorByName LocalVariableDeclaration BasicType int VariableDeclarator width Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator height Literal 1 LocalVariableDeclaration ReferenceType VariableDeclarator bi ClassCreator ReferenceType MemberReference width MemberReference height MemberReference TYPE_4BYTE_ABGR_PRE LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics Cast ReferenceType Graphics2D MethodInvocation bi StatementExpression MethodInvocation graphics MemberReference RenderingHints MemberReference RenderingHints StatementExpression MethodInvocation graphics MemberReference RenderingHints MemberReference RenderingHints LocalVariableDeclaration ReferenceType Font VariableDeclarator f ClassCreator ReferenceType Font MemberReference font MemberReference Font PLAIN MemberReference point LocalVariableDeclaration ReferenceType FontMetrics VariableDeclarator fmetrics MethodInvocation graphics MemberReference f getFontMetrics StatementExpression Assignment MemberReference height BinaryOperation + MethodInvocation fmetrics MethodInvocation fmetrics = StatementExpression Assignment MemberReference width MethodInvocation fmetrics MemberReference stringWidth = StatementExpression Assignment MemberReference bi ClassCreator ReferenceType MemberReference width MemberReference height MemberReference TYPE_4BYTE_ABGR_PRE = StatementExpression Assignment MemberReference graphics Cast ReferenceType Graphics2D MethodInvocation bi = StatementExpression MethodInvocation graphics MemberReference RenderingHints MemberReference RenderingHints StatementExpression MethodInvocation graphics MemberReference RenderingHints MemberReference RenderingHints StatementExpression MethodInvocation graphics MemberReference f setFont StatementExpression MethodInvocation graphics MemberReference setColor StatementExpression MethodInvocation graphics MemberReference Literal 0 BinaryOperation - MemberReference height MethodInvocation fmetrics drawString LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator image MethodInvocation PlanarImage MemberReference bi wrapRenderedImage ReturnStatement MemberReference image	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator reg Cast ReferenceType MethodInvocation StatementExpression MethodInvocation reg MemberReference pattern StatementExpression MethodInvocation MethodInvocation reg MemberReference test matches assertTrue StatementExpression MethodInvocation Literal MethodInvocation reg MemberReference test Literal MemberReference assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is expectLog	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal	0
MethodDeclaration Modifier private FormalParameter ReferenceType String key FormalParameter ReferenceType String value IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation != MethodInvocation value length Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference key setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference value setValue createArgument BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Warning: out empty argument '" MemberReference key Literal "'" MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public ReferenceType File getClassFile FormalParameter ReferenceType File directory LocalVariableDeclaration ReferenceType String VariableDeclarator pathToFile BinaryOperation + MethodInvocation qualifiedName Literal '.' MemberReference File separatorChar replace Literal ".class" ReturnStatement ClassCreator ReferenceType File MemberReference directory MemberReference pathToFile	0
MethodDeclaration Modifier public FormalParameter BasicType boolean append IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference append TernaryExpression MemberReference append MemberReference Boolean TRUE MemberReference Boolean FALSE =	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r	0
MethodDeclaration * this method opens the It a 401 error * and in digest auth will then open a new connection with * supplied is it return a * connection * handle digest * @param connection where to connect * BuildException build * IOException * @return a new This may be than the old */ Modifier protected ReferenceType URLConnection FormalParameter ReferenceType URLConnection connection BuildException IOException StatementExpression MethodInvocation BinaryOperation + Literal to " MethodInvocation connection toString MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation connection connect LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator MemberReference connection StatementExpression MethodInvocation Literal MemberReference Project MSG_DEBUG log IfStatement BinaryOperation instanceof MemberReference connection ReferenceType HttpURLConnection BlockStatement LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator httpConnection Cast ReferenceType HttpURLConnection MemberReference connection IfStatement BinaryOperation && BinaryOperation == MethodInvocation MemberReference httpConnection getResponseCode MemberReference HttpURLConnection BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Literal authentication needed but not supported" MemberReference Project MSG_DEBUG log ReturnStatement MemberReference	1
MethodDeclaration Modifier protected FormalParameter ReferenceType URL url BuildException LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation BinaryOperation + Literal "Loading " MemberReference url MemberReference Project MSG_VERBOSE log TryStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation url openStream TryStatement StatementExpression MethodInvocation props MemberReference is load IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression MethodInvocation is close StatementExpression MethodInvocation MemberReference props CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex MethodInvocation getLocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Hashtable filesToBuild FormalParameter ReferenceType command LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation filesToBuild size StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "compiling " MemberReference count Literal " file" TernaryExpression BinaryOperation == MemberReference count Literal 1 Literal "" Literal "s" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator files MethodInvocation filesToBuild elements WhileStatement MethodInvocation files hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Cast ReferenceType File MethodInvocation files nextElement StatementExpression MethodInvocation command MethodInvocation file toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test t LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference t StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference Literal ")"	0
MethodDeclaration Modifier public FormalParameter ReferenceType type StatementExpression Assignment This MemberReference MethodInvocation type =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator t ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation t setUp StatementExpression MethodInvocation t test1 StatementExpression MethodInvocation t tearDown	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration * a for a file * It reads the content of a file, convert that to String and use * * @param file The file for which the value should be * @return the or if the file couldn't be */ Modifier public ReferenceType String getValue FormalParameter ReferenceType File file TryStatement IfStatement MethodInvocation ! file canRead BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType java ReferenceType io ReferenceType FileInputStream MemberReference file LocalVariableDeclaration BasicType byte VariableDeclarator content ArrayCreator BasicType byte MethodInvocation fis available StatementExpression MethodInvocation fis MemberReference content read StatementExpression MethodInvocation fis close LocalVariableDeclaration ReferenceType String VariableDeclarator s ClassCreator ReferenceType String MemberReference content LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation s hashCode ReturnStatement MethodInvocation Integer MemberReference hash toString CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference charset	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args IfStatement BinaryOperation < MemberReference args length Literal 2 BlockStatement StatementExpression MethodInvocation System.out Literal "usage: jlink output println StatementExpression MethodInvocation System Literal 1 exit LocalVariableDeclaration ReferenceType jlink VariableDeclarator linker ClassCreator ReferenceType jlink StatementExpression MethodInvocation linker MemberReference ArraySelector Literal 0 args ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation linker MemberReference ArraySelector MemberReference i args TryStatement StatementExpression MethodInvocation linker link CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation System.err MethodInvocation ex getMessage print	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation entries size BinaryOperation == MemberReference index Literal - 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation entries MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element IfStatement MethodInvocation MethodInvocation MemberReference equals getValue BlockStatement StatementExpression Assignment MemberReference index MemberReference i = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment MemberReference ArrayCreator ReferenceType String ArrayInitializer MemberReference to =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType CommandlineJava ReferenceType s StatementExpression Assignment MemberReference sysProperties MemberReference s =	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType Project project LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation project Literal getReference IfStatement BinaryOperation != MemberReference Literal null ReturnStatement MemberReference StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation project Literal MemberReference ReturnStatement MemberReference	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation init StatementExpression MethodInvocation Literal true setSelected StatementExpression Assignment This MemberReference file MemberReference file = StatementExpression Assignment This MemberReference basedir MemberReference basedir = StatementExpression Assignment This MemberReference filename MemberReference filename = StatementExpression MethodInvocation runner Literal "basedir" MemberReference basedir StatementExpression MethodInvocation runner Literal MemberReference filename StatementExpression MethodInvocation runner Literal "file" MemberReference file StatementExpression MethodInvocation runner Literal ReturnStatement MethodInvocation isSelected	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation cleanup	1
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MethodInvocation hasMoreElements BlockStatement ReturnStatement MemberReference ArraySelector MemberReference index MethodInvocation nextElement ThrowStatement ClassCreator ReferenceType NoSuchElementException	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "."	0
MethodDeclaration Modifier public IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String msg FormalParameter BasicType int IfStatement BinaryOperation != MethodInvocation getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference msg MemberReference log getProject BlockStatement IfStatement BinaryOperation <= MemberReference MemberReference Project MSG_INFO BlockStatement StatementExpression MethodInvocation System.err MemberReference msg println	1
MethodDeclaration Modifier public synchronized setNewProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value IfStatement BinaryOperation != Literal null MethodInvocation properties MemberReference name get BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal ignored for property " MemberReference name MemberReference Project MSG_VERBOSE log ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator done This MethodInvocation MemberReference ns MemberReference name MemberReference value Literal false Literal true Literal false IfStatement MemberReference done BlockStatement ReturnStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation properties MemberReference name MemberReference value put	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public ReferenceType CrLf ReturnStatement MethodInvocation eol newInstance	0
MethodDeclaration Modifier public BasicType int getMode ReturnStatement This MemberReference mode	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is expectLog	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required attribute expectBuildException	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Java VariableDeclarator java ClassCreator ReferenceType Java MethodInvocation getTask StatementExpression MethodInvocation java Literal true StatementExpression MethodInvocation java Literal true StatementExpression MethodInvocation java MethodInvocation StatementExpression MethodInvocation java MemberReference setClassname StatementExpression MethodInvocation java MethodInvocation MethodInvocation setLine createArg StatementExpression MethodInvocation java execute	0
MethodDeclaration Modifier public BasicType boolean isReference ReturnStatement BinaryOperation != MemberReference refid Literal null	0
MethodDeclaration Modifier public FormalParameter BasicType int lookahead StatementExpression MethodInvocation MemberReference ClassCreator ReferenceType Integer MemberReference lookahead put	1
MethodDeclaration * method returns whole URL at * * as a single */ Modifier public final ReferenceType String getURL ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + This MemberReference Literal ":" This MemberReference Literal "/" This MemberReference Literal "/" TernaryExpression BinaryOperation == Literal null This MemberReference Literal "" This MemberReference	0
MethodDeclaration Modifier protected determineDependencies FormalParameter ReferenceType Vector files FormalParameter ReferenceType Vector classes LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencies ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator containers ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator toAnalyze ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator nextAnalyze ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation toAnalyze MemberReference classname MemberReference classname put LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator maxCount TernaryExpression MethodInvocation MemberReference Literal 2 WhileStatement BinaryOperation && BinaryOperation != MethodInvocation toAnalyze size Literal 0 BinaryOperation < MemberReference ++ count MemberReference maxCount BlockStatement StatementExpression MethodInvocation nextAnalyze clear ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation toAnalyze keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation dependencies MemberReference classname MemberReference classname put TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator container MethodInvocation MemberReference classname getClassContainer IfStatement BinaryOperation == MemberReference container Literal null BlockStatement ContinueStatement StatementExpression MethodInvocation containers MemberReference container MemberReference container put LocalVariableDeclaration ReferenceType ClassParser VariableDeclarator parser Literal null IfStatement MethodInvocation container MethodInvocation Literal ".class" endsWith getName BlockStatement StatementExpression Assignment MemberReference parser ClassCreator ReferenceType ClassParser MethodInvocation container getPath = BlockStatement StatementExpression Assignment MemberReference parser ClassCreator ReferenceType ClassParser MethodInvocation container getPath BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".class" = LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator javaClass MethodInvocation parser parse LocalVariableDeclaration ReferenceType String VariableDeclarator interfaces MethodInvocation javaClass ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference interfaces length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator interfaceName MemberReference ArraySelector MemberReference i interfaces IfStatement MethodInvocation ! dependencies MemberReference interfaceName containsKey BlockStatement StatementExpression MethodInvocation nextAnalyze MemberReference interfaceName MemberReference interfaceName put IfStatement MethodInvocation javaClass isClass BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator superClass MethodInvocation javaClass IfStatement MethodInvocation ! dependencies MemberReference superClass containsKey BlockStatement StatementExpression MethodInvocation nextAnalyze MemberReference superClass MemberReference superClass put CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator temp MemberReference toAnalyze StatementExpression Assignment MemberReference toAnalyze MemberReference nextAnalyze = StatementExpression Assignment MemberReference nextAnalyze MemberReference temp = StatementExpression MethodInvocation files removeAllElements ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation containers keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation files Cast ReferenceType File MethodInvocation e nextElement addElement StatementExpression MethodInvocation classes removeAllElements ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dependencies keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation classes Cast ReferenceType String MethodInvocation e nextElement addElement	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "invalid characters in file" expectBuildException	0
MethodDeclaration Modifier static protected ReferenceType DocumentBuilderFactory ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix IfStatement BinaryOperation && BinaryOperation != MemberReference prefix Literal null BinaryOperation != MethodInvocation prefix length Literal 0 BlockStatement StatementExpression Assignment This MemberReference prefix MemberReference prefix = LocalVariableDeclaration ReferenceType VariableDeclarator ps ClassCreator ReferenceType StatementExpression MethodInvocation ps MethodInvocation getProject setProject StatementExpression MethodInvocation ps MemberReference prefix StatementExpression MethodInvocation MemberReference ps	0
MethodDeclaration Modifier public final BasicType int FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType String VariableDeclarator values MethodInvocation IfStatement BinaryOperation || BinaryOperation == MemberReference values Literal null BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement IfStatement MethodInvocation value MemberReference ArraySelector MemberReference i values equals BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	0
MethodDeclaration Modifier public FormalParameter ReferenceType value StatementExpression MethodInvocation BinaryOperation + Literal is " MemberReference value log StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public BasicType int size StatementExpression MethodInvocation initAll ReturnStatement SuperMethodInvocation size	1
MethodDeclaration Modifier public FormalParameter ReferenceType File d StatementExpression Assignment This MemberReference dest MemberReference d =	0
MethodDeclaration Modifier private BasicType boolean IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null Literal MethodInvocation MemberReference equals "" BlockStatement ReturnStatement Literal true ReturnStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public synchronized setAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType String value IfStatement MethodInvocation name MemberReference ProjectHelper ANT_TYPE equalsIgnoreCase BlockStatement StatementExpression Assignment This MemberReference polyType MemberReference value = BlockStatement IfStatement BinaryOperation == MemberReference attributeNames Literal null BlockStatement StatementExpression Assignment MemberReference attributeNames ClassCreator ReferenceType ArrayList = StatementExpression Assignment MemberReference attributeMap ClassCreator ReferenceType HashMap = IfStatement MethodInvocation name MethodInvocation Literal equals MemberReference toLowerCase BlockStatement StatementExpression MethodInvocation attributeNames Literal 0 MemberReference name add BlockStatement StatementExpression MethodInvocation attributeNames MemberReference name add StatementExpression MethodInvocation attributeMap MemberReference name MemberReference value put IfStatement MethodInvocation name Literal "id" equals BlockStatement StatementExpression Assignment This MemberReference id MemberReference value =	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation JavaEnvUtils Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation test3 LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation MemberReference tempFile LocalVariableDeclaration Modifier final BasicType long VariableDeclarator MethodInvocation file length StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation MemberReference LocalVariableDeclaration Modifier final BasicType long VariableDeclarator MethodInvocation file2 length StatementExpression MethodInvocation BinaryOperation * MemberReference Literal 2 MemberReference assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String packageName StatementExpression Assignment This MemberReference packageName MemberReference packageName =	0
MethodDeclaration Modifier private ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation MethodInvocation ! FILE_UTILS MethodInvocation exists MethodInvocation MethodInvocation getProject Literal assertTrue StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation stream Literal '\r' write StatementExpression MethodInvocation stream	0
MethodDeclaration Modifier protected ReferenceType BuildException IfStatement BinaryOperation == MemberReference timeout Literal null BlockStatement ReturnStatement Literal null ReturnStatement ClassCreator ReferenceType Cast BasicType long MethodInvocation timeout intValue	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference debug Literal Literal null	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType File input IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The and " Literal cannot both be specified" StatementExpression Assignment This MemberReference input MemberReference input = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" BinaryOperation + Literal must not more than one " Literal when using refid" expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Warning: Could not find file " expectLogContaining	0
MethodDeclaration Modifier public BasicType boolean eval BuildException StatementExpression MethodInvocation validate TryStatement IfStatement MethodInvocation JavaEnvUtils Literal BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator fs ClassCreator ReferenceType File MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType MemberReference fs LocalVariableDeclaration BasicType long VariableDeclarator Cast ReferenceType Long MethodInvocation w Literal invoke ReturnStatement BinaryOperation >= MemberReference MethodInvocation StringUtils MemberReference needed parseHumanSizes BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal condition not supported on or CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal "testIndexTests" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator archive MethodInvocation MethodInvocation MemberReference MethodInvocation getAbsolutePath getProject LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator dirs ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator files ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType String VariableDeclarator expectedDirs ArrayCreator ReferenceType String ArrayInitializer Literal LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String ArrayInitializer Literal "foo" StatementExpression MethodInvocation Jar MemberReference archive MemberReference dirs MemberReference files grabFilesAndDirs StatementExpression MethodInvocation MemberReference expectedDirs length MethodInvocation dirs size assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference expectedDirs length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found " MemberReference ArraySelector MemberReference i expectedDirs MethodInvocation dirs MemberReference ArraySelector MemberReference i expectedDirs contains assertTrue StatementExpression MethodInvocation MemberReference length MethodInvocation files size assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found " MemberReference ArraySelector MemberReference i MethodInvocation files MemberReference ArraySelector MemberReference i contains assertTrue	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fileset Cast ReferenceType FileSet MethodInvocation p Literal getReference LocalVariableDeclaration ReferenceType File VariableDeclarator baseDir MethodInvocation fileset MemberReference p getDir LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal attribute value to be BinaryOperation != MethodInvocation log Literal = test" indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal element value to be BinaryOperation != MethodInvocation log BinaryOperation + Literal basedir = " MethodInvocation baseDir getAbsolutePath indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public ReferenceType File getBasedir ReturnStatement MemberReference basedir	0
MethodDeclaration Modifier public FormalParameter ReferenceType Rectangle instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public static ReferenceType ClassLoader FormalParameter ReferenceType Project p FormalParameter ReferenceType path FormalParameter ReferenceType String FormalParameter BasicType boolean FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MemberReference BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation p MemberReference getReference IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation instanceof MemberReference ReferenceType ClassLoader BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The specified loader id " MemberReference Literal " does not reference a class loader" StatementExpression Assignment MemberReference cl Cast ReferenceType ClassLoader MemberReference = IfStatement BinaryOperation == MemberReference cl Literal null BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation MemberReference p MemberReference path MemberReference = IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MemberReference BlockStatement StatementExpression MethodInvocation p MemberReference MemberReference cl ReturnStatement MemberReference cl	0
MethodDeclaration FormalParameter ReferenceType org ReferenceType w3c ReferenceType ReferenceType Node node FormalParameter ReferenceType String prefix StatementExpression MethodInvocation MemberReference node MemberReference prefix Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType StatementExpression MethodInvocation p Literal setIncludes TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType Literal StatementExpression MethodInvocation Literal add reference to with elements from fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType = StatementExpression MethodInvocation p ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation p Literal setIncludes StatementExpression MethodInvocation Literal set includes in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType = StatementExpression MethodInvocation p ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType File Literal StatementExpression MethodInvocation Literal set in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p Literal StatementExpression MethodInvocation Literal set in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType File Literal StatementExpression MethodInvocation Literal set in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p StatementExpression MethodInvocation Literal add in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p StatementExpression MethodInvocation Literal add in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p StatementExpression MethodInvocation Literal add in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p StatementExpression MethodInvocation Literal add in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer IfStatement BinaryOperation == MemberReference timeout Literal null BlockStatement StatementExpression Assignment MemberReference timeout MemberReference =	0
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference src Literal null BlockStatement StatementExpression Assignment MemberReference src ClassCreator ReferenceType = StatementExpression MethodInvocation src MethodInvocation getProject setProject IfStatement BinaryOperation instanceof MemberReference src ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "expected a java resource as source"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "foo" Literal expectLog	0
MethodDeclaration * Set data should be through to the output * @param if push through if it be * */ FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String message FormalParameter ReferenceType String filename StatementExpression MethodInvocation MemberReference message MethodInvocation MethodInvocation MemberReference filename MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier private FormalParameter ReferenceType Iterator ithomes LocalVariableDeclaration ReferenceType Execute VariableDeclarator Literal null StatementExpression Assignment MemberReference ClassCreator ReferenceType Execute This = LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation MethodInvocation getProject getTask StatementExpression MethodInvocation MemberReference project setAntRun StatementExpression MethodInvocation MethodInvocation project setWorkingDirectory LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandline ClassCreator ReferenceType Commandline StatementExpression MethodInvocation commandline MemberReference setExecutable IfStatement MemberReference BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation setPath createArgument StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference Literal " to java2iiop " Literal 0 log StatementExpression MethodInvocation commandline MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation MemberReference srcDir MethodInvocation getAbsolutePath getConfig setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument WhileStatement MethodInvocation ithomes hasNext BlockStatement StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation ithomes MethodInvocation toString next setValue createArgument TryStatement StatementExpression MethodInvocation Literal "Calling MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation commandline describeCommand MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MethodInvocation commandline getCommandline setCommandline LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation execute IfStatement MethodInvocation Execute MemberReference result isFailure BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "Failed executing java2iiop code is " MemberReference result Literal ")" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation MethodInvocation getLocation getTask CatchClause CatchClauseParameter java.io.IOException e StatementExpression MethodInvocation BinaryOperation + Literal exception :" MethodInvocation e getMessage MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation MethodInvocation getLocation getTask	1
MethodDeclaration Modifier public FormalParameter BasicType boolean preserveLastModified StatementExpression Assignment This MemberReference preserveLastModified MemberReference preserveLastModified =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation && MethodInvocation MethodInvocation !	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one StatementExpression Assignment MemberReference ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "empty schema MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier static protected ReferenceType String pad FormalParameter ReferenceType String s FormalParameter BasicType int ReturnStatement BinaryOperation + MemberReference s MemberReference	0
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal Literal Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType File src StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference src	0
MethodDeclaration Modifier public StatementExpression SuperMethodInvocation Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType String regex LocalVariableDeclaration ReferenceType VariableDeclarator r ClassCreator ReferenceType StatementExpression MethodInvocation r MemberReference regex StatementExpression MethodInvocation MemberReference r	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String list LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference list Literal "," WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation tokens nextToken addElement	0
MethodDeclaration Modifier private write0 FormalParameter BasicType int b IOException IfStatement BinaryOperation != This MemberReference currentChar Literal - 1 BlockStatement StatementExpression Assignment MemberReference b Literal 0xff &= IfStatement BinaryOperation == This MemberReference currentChar MemberReference b BlockStatement IfStatement BinaryOperation > This ++ MemberReference runLength Literal 254 BlockStatement StatementExpression MethodInvocation StatementExpression Assignment This MemberReference currentChar Literal - 1 = StatementExpression Assignment This MemberReference runLength Literal 0 = BlockStatement StatementExpression MethodInvocation StatementExpression Assignment This MemberReference runLength Literal 1 = StatementExpression Assignment This MemberReference currentChar MemberReference b = BlockStatement StatementExpression Assignment This MemberReference currentChar BinaryOperation & MemberReference b Literal 0xff = StatementExpression This ++ MemberReference runLength	1
MethodDeclaration Modifier public synchronized ReferenceType IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator patterns ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference patterns addElement StatementExpression Assignment MemberReference Literal null = ReturnStatement MemberReference patterns	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter Literal true ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public ReferenceType Hashtable ReturnStatement MemberReference antTypeTable	1
MethodDeclaration Modifier private static BasicType byte med3 FormalParameter BasicType byte a FormalParameter BasicType byte b FormalParameter BasicType byte c ReturnStatement TernaryExpression BinaryOperation < MemberReference a MemberReference b TernaryExpression BinaryOperation < MemberReference b MemberReference c MemberReference b TernaryExpression BinaryOperation < MemberReference a MemberReference c MemberReference c MemberReference a TernaryExpression BinaryOperation > MemberReference b MemberReference c MemberReference b TernaryExpression BinaryOperation > MemberReference a MemberReference c MemberReference c MemberReference a	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public addAnd FormalParameter ReferenceType AndSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType Object newInstance ReturnStatement MethodInvocation ClasspathUtils This MemberReference className MethodInvocation getClassLoader newInstance	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType File VariableDeclarator antlib MethodInvocation ClassReference ReferenceType Project IfStatement BinaryOperation != MemberReference antlib Literal null BlockStatement StatementExpression MethodInvocation MemberReference MagicNames MethodInvocation antlib getAbsolutePath	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p MemberReference StatementExpression MethodInvocation p MemberReference project setProject StatementExpression MethodInvocation project Literal MemberReference p StatementExpression MethodInvocation project Literal MemberReference p StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal true Literal false MemberReference p StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal false Literal true Literal null StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal true Literal false MemberReference p StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal false Literal false Literal null	0
MethodDeclaration Modifier public addFilename FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter BasicType boolean log ReturnStatement BinaryOperation > MethodInvocation MethodInvocation size MemberReference log Literal 0	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name IfStatement MethodInvocation ! MemberReference name BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal name [" MemberReference name Literal "] for StatementExpression Assignment This MemberReference name MethodInvocation name MemberReference toLowerCase =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType File container FormalParameter ReferenceType String className IOException LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation className Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference Literal - 1 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation className Literal 0 MemberReference substring IfStatement BinaryOperation != MethodInvocation MemberReference packageName getPackage Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference container IfStatement BinaryOperation == MemberReference manifest Literal null BlockStatement StatementExpression MethodInvocation MemberReference packageName Literal null Literal null Literal null Literal null Literal null Literal null Literal null BlockStatement StatementExpression MethodInvocation MemberReference container MemberReference packageName MemberReference manifest	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType File srcDir LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType MethodInvocation getTask MemberReference srcDir StatementExpression MethodInvocation handler MemberReference PUBLICID_EJB11 MemberReference registerDTD ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MemberReference MethodInvocation iterator getConfig MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator Cast ReferenceType ReferenceType MethodInvocation i next StatementExpression MethodInvocation handler MethodInvocation getPublicId MethodInvocation getLocation registerDTD ReturnStatement MemberReference handler	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public BasicType int size LocalVariableDeclaration BasicType int VariableDeclarator size BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation size MethodInvocation size MethodInvocation sysProperties size IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference size MethodInvocation System MethodInvocation size getProperties += IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference size Literal 2 += IfStatement BinaryOperation > MethodInvocation MethodInvocation size Literal true Literal 0 BlockStatement StatementExpression MemberReference ++ size IfStatement MemberReference BlockStatement StatementExpression MemberReference ++ size IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression Assignment MemberReference size MethodInvocation MethodInvocation size += ReturnStatement MemberReference size	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation MemberReference fs add IfStatement BinaryOperation == MethodInvocation fs getProject Literal null BlockStatement StatementExpression MethodInvocation fs MemberReference project setProject	0
MethodDeclaration Modifier public final ReferenceType String getPassword ReturnStatement This MemberReference password	0
MethodDeclaration Modifier public final BasicType int getIndex ReturnStatement MemberReference index	0
MethodDeclaration Modifier public addChild FormalParameter ReferenceType UnknownElement child StatementExpression MethodInvocation children MemberReference child addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType File filtersFile BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MemberReference filtersFile add	1
MethodDeclaration Modifier public FormalParameter ReferenceType String compiler StatementExpression MethodInvocation MemberReference MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files MethodInvocation StatementExpression MethodInvocation Literal did not correct number of files" Literal 3 MethodInvocation files size assertEquals StatementExpression MethodInvocation Literal "Result did not contain MethodInvocation files Literal containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain MethodInvocation files Literal containsKey assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + Literal "The attribute must Literal " a URL and a file location by Literal " IfStatement BinaryOperation == MethodInvocation src MethodInvocation length trim Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference src Literal " " Literal false StatementExpression MethodInvocation MethodInvocation tok nextToken IfStatement MethodInvocation ! tok hasMoreTokens BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation tok nextToken getProject	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference tofile	0
MethodDeclaration Modifier public addNot FormalParameter ReferenceType NotSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addNot	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation redirector MemberReference StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public testLineSeparatorCharacter IOException StatementExpression MethodInvocation reg Literal "end of text$" StatementExpression MethodInvocation Literal character" MethodInvocation ! reg Literal "end of matches assertTrue	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference specificationVersion	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf MethodInvocation BinaryOperation * Literal 1024 Literal 300 Literal 'a' ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 1000 MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation buf MethodInvocation Literal endsWith toString assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType File f StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference f createArgument	0
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType View v BuildException IfStatement BinaryOperation != Literal null This MemberReference label BlockStatement StatementExpression MethodInvocation MemberReference v ReturnStatement This MemberReference MethodInvocation getID ReturnStatement Literal - 1	1
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MemberReference ArraySelector MemberReference pos array StatementExpression MemberReference ++ pos ReturnStatement MemberReference o ThrowStatement ClassCreator ReferenceType NoSuchElementException	0
MethodDeclaration Modifier protected initZipOutputStream FormalParameter ReferenceType ZipOutputStream zOut IOException BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is required" MethodInvocation getLocation StatementExpression SuperMethodInvocation MemberReference zOut initZipOutputStream	1
MethodDeclaration Modifier public setText FormalParameter ReferenceType String StatementExpression MethodInvocation text MemberReference setText	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath StatementExpression MethodInvocation Literal false setChecked	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation p MethodInvocation Literal containsKey assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal false Literal false Literal false Literal true Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType equals getClass	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType File rootDir StatementExpression Assignment This MemberReference rootDir MemberReference rootDir =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String property StatementExpression MethodInvocation MemberReference property Literal "true"	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation buffer toString	0
MethodDeclaration Modifier public FormalParameter BasicType int lookahead StatementExpression Assignment This MemberReference lookahead MemberReference lookahead =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File src StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference src	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType int days LocalVariableDeclaration Modifier final BasicType long VariableDeclarator time BinaryOperation - MethodInvocation System currentTimeMillis BinaryOperation * BinaryOperation * BinaryOperation * BinaryOperation * Cast BasicType long MemberReference days Literal 24 Literal 60 Literal 60 Literal 1000 StatementExpression MethodInvocation ClassCreator ReferenceType Date MemberReference time	0
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType listener FormalParameter ReferenceType evt StatementExpression MethodInvocation listener MemberReference evt	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File output StatementExpression Assignment This MemberReference output MemberReference output =	0
MethodDeclaration Modifier public static checkTaskClass FormalParameter Modifier final ReferenceType Class taskClass FormalParameter Modifier final ReferenceType Project project IfStatement ClassReference ! MethodInvocation MemberReference taskClass isAssignableFrom ReferenceType Dispatchable BlockStatement TryStatement LocalVariableDeclaration Modifier final ReferenceType Method VariableDeclarator executeM MethodInvocation taskClass Literal Cast ReferenceType Class Literal null getMethod IfStatement MethodInvocation ! MethodInvocation executeM getReturnType equals BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "return type of should be " Literal "void but was \"" MethodInvocation executeM getReturnType Literal "\" in " MemberReference taskClass StatementExpression MethodInvocation project MemberReference message MemberReference Project MSG_WARN log CatchClause CatchClauseParameter NoSuchMethodException e LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "No public in " MemberReference taskClass StatementExpression MethodInvocation project MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message CatchClause CatchClauseParameter LinkageError e LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load " MemberReference taskClass Literal ": " MemberReference e StatementExpression MethodInvocation project MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference e	1
MethodDeclaration Modifier public synchronized BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation size StatementExpression MethodInvocation StatementExpression MethodInvocation ds ReturnStatement BinaryOperation + MethodInvocation ds getIncludedFilesCount MethodInvocation ds	0
MethodDeclaration Modifier public FormalParameter ReferenceType Writer StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static BasicType int getValue FormalParameter BasicType byte bytes ReturnStatement MethodInvocation MemberReference bytes Literal 0 getValue	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "The target must fail with prefix and regex attributes set" Literal "Please either prefix or but not expectSpecificBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType path IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference path = BlockStatement StatementExpression MethodInvocation MemberReference path append	0
MethodDeclaration Modifier private LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal "Unable to resolve extension to a file" IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference Project MSG_ERR log getProject	0
MethodDeclaration Modifier private FormalParameter ReferenceType String classname StatementExpression MethodInvocation MethodInvocation classname Literal '/' Literal '.' replace	0
MethodDeclaration Modifier public FormalParameter BasicType boolean compress StatementExpression Assignment This MemberReference MemberReference compress =	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive LocalVariableDeclaration ReferenceType String VariableDeclarator patDirs MethodInvocation MemberReference pattern tokenizePathAsArray LocalVariableDeclaration ReferenceType String VariableDeclarator strDirs MethodInvocation MemberReference str tokenizePathAsArray LocalVariableDeclaration BasicType int VariableDeclarator patIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator patIdxEnd BinaryOperation - MemberReference patDirs length Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator strIdxEnd BinaryOperation - MemberReference strDirs length Literal 1 WhileStatement BinaryOperation && BinaryOperation <= MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference patIdxStart patDirs IfStatement MethodInvocation Literal "**" equals BlockStatement BreakStatement IfStatement MethodInvocation ! MemberReference MemberReference ArraySelector MemberReference strIdxStart strDirs MemberReference isCaseSensitive match BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false StatementExpression MemberReference ++ patIdxStart StatementExpression MemberReference ++ strIdxStart IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation Literal "**" equals patDirs BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false ReturnStatement Literal true BlockStatement IfStatement BinaryOperation > MemberReference patIdxStart MemberReference patIdxEnd BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false WhileStatement BinaryOperation && BinaryOperation <= MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference patIdxEnd patDirs IfStatement MethodInvocation Literal "**" equals BlockStatement BreakStatement IfStatement MethodInvocation ! MemberReference MemberReference ArraySelector MemberReference strIdxEnd strDirs MemberReference isCaseSensitive match BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false StatementExpression MemberReference -- patIdxEnd StatementExpression MemberReference -- strIdxEnd IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation Literal "**" equals patDirs BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false ReturnStatement Literal true WhileStatement BinaryOperation && BinaryOperation != MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference patIdxStart Literal 1 BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "**" equals patDirs BlockStatement StatementExpression Assignment MemberReference MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference BinaryOperation + MemberReference patIdxStart Literal 1 BlockStatement StatementExpression MemberReference ++ patIdxStart ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - BinaryOperation - MemberReference MemberReference patIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strLength BinaryOperation + BinaryOperation - MemberReference strIdxEnd MemberReference strIdxStart Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i BinaryOperation - MemberReference strLength MemberReference MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference patIdxStart MemberReference j Literal 1 patDirs LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference strIdxStart MemberReference i MemberReference j strDirs IfStatement MethodInvocation ! MemberReference MemberReference MemberReference isCaseSensitive match BlockStatement ContinueStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference strIdxStart MemberReference i = BreakStatement IfStatement BinaryOperation == MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false StatementExpression Assignment MemberReference patIdxStart MemberReference = StatementExpression Assignment MemberReference strIdxStart BinaryOperation + MemberReference MemberReference = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference patIdxStart BinaryOperation <= MemberReference i MemberReference patIdxEnd MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation Literal "**" equals patDirs BlockStatement StatementExpression Assignment MemberReference patDirs Literal null = StatementExpression Assignment MemberReference strDirs Literal null = ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Literal StatementExpression MethodInvocation BinaryOperation + Literal "Wrong algorithm " MemberReference MethodInvocation Literal startsWith assertTrue	0
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation MethodInvocation getProject MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType String value BuildException StatementExpression MethodInvocation MemberReference name MemberReference value setAttribute	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference ! b =	1
MethodDeclaration Modifier public addEntry FormalParameter ReferenceType entry LocalVariableDeclaration BasicType int VariableDeclarator type MethodInvocation entry IfStatement BinaryOperation == MemberReference type MemberReference PUBLIC BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation entry Literal 0 normalize LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation entry Literal 1 IfStatement BinaryOperation == MemberReference resolver Literal null BlockStatement StatementExpression MethodInvocation Literal 1 Literal "Internal Error: null message BlockStatement StatementExpression MethodInvocation resolver MemberReference MemberReference MemberReference base IfStatement BinaryOperation == MemberReference type MemberReference URI BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation MethodInvocation entry Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation entry Literal 1 IfStatement BinaryOperation == MemberReference resolver Literal null BlockStatement StatementExpression MethodInvocation Literal 1 Literal "Internal Error: null message BlockStatement StatementExpression MethodInvocation resolver MemberReference uri MemberReference MemberReference base StatementExpression SuperMethodInvocation MemberReference entry addEntry	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getProject = IfStatement BinaryOperation == Literal null MemberReference destFile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal must be set." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MethodInvocation ! exists BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Cannot find base dir " MethodInvocation getAbsolutePath ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation ! exists BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Cannot find user lookup list " MethodInvocation getAbsolutePath ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier private IfStatement BinaryOperation || BinaryOperation == MethodInvocation getProject Literal null BinaryOperation && MethodInvocation isReference BinaryOperation instanceof MethodInvocation MethodInvocation MethodInvocation getProject getReferencedObject ReferenceType ArchiveFileSet BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public addTarget FormalParameter ReferenceType Target target BuildException StatementExpression MethodInvocation MethodInvocation target getName MemberReference target addTarget	1
MethodDeclaration Modifier public static ReferenceType String toString FormalParameter ReferenceType String line IfStatement BinaryOperation || BinaryOperation == MemberReference line Literal null BinaryOperation == MemberReference line length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference line length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation result Literal ' ' append StatementExpression MethodInvocation result MethodInvocation MemberReference ArraySelector MemberReference i line append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException TryStatement IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal " MethodInvocation Commandline MemberReference cmd describeCommand MemberReference Project MSG_DEBUG log ReturnStatement Cast ReferenceType Process MethodInvocation MethodInvocation Runtime getRuntime ArrayCreator ReferenceType Object ArrayInitializer MemberReference cmd MemberReference env MemberReference workingDir invoke CatchClause CatchClauseParameter InvocationTargetException exc LocalVariableDeclaration ReferenceType Throwable VariableDeclarator realexc MethodInvocation exc getTargetException IfStatement BinaryOperation instanceof MemberReference realexc ReferenceType ThreadDeath BlockStatement ThrowStatement Cast ReferenceType ThreadDeath MemberReference realexc IfStatement BinaryOperation instanceof MemberReference realexc ReferenceType IOException BlockStatement ThrowStatement Cast ReferenceType IOException MemberReference realexc BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to execute command" MemberReference realexc CatchClause CatchClauseParameter Exception exc ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to execute command" MemberReference exc	1
MethodDeclaration Modifier public FormalParameter BasicType int level StatementExpression Assignment This MemberReference MemberReference level =	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dir FormalParameter ReferenceType FTPFile file IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal false IfStatement MethodInvocation file isFile BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation ! MemberReference ftp MemberReference dir MemberReference file	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" Literal expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal is not Literal StatementExpression MethodInvocation Literal is Literal	0
MethodDeclaration Modifier private ReferenceType Class loadClass FormalParameter ReferenceType String classname TryStatement IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = StatementExpression MethodInvocation loader Literal false StatementExpression MethodInvocation loader IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement TryStatement ReturnStatement MethodInvocation loader MemberReference classname findClass CatchClause CatchClauseParameter SecurityException se ReturnStatement Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement ReturnStatement MethodInvocation loader MemberReference classname loadClass BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator l This MethodInvocation getClass MethodInvocation getClassLoader IfStatement BinaryOperation != MemberReference l Literal null BlockStatement ReturnStatement MethodInvocation Class MemberReference classname Literal true MemberReference l forName BlockStatement ReturnStatement MethodInvocation Class MemberReference classname forName CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "class \"" MemberReference classname Literal "\" was not found" CatchClause CatchClauseParameter NoClassDefFoundError e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load class \"" MethodInvocation e getMessage Literal "\" for class \"" MemberReference classname Literal "\""	1
MethodDeclaration Modifier public ReferenceType String getToken FormalParameter ReferenceType Reader in IOException LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference pushed Literal - 2 BlockStatement StatementExpression Assignment MemberReference ch MemberReference pushed = StatementExpression Assignment MemberReference pushed Literal - 2 = BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference lineEnd Literal "" = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator line ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator state Literal 0 WhileStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference state Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference ch Literal '\r' BlockStatement StatementExpression Assignment MemberReference state Literal 1 = IfStatement BinaryOperation == MemberReference ch Literal '\n' BlockStatement StatementExpression Assignment MemberReference lineEnd Literal "\n" = BreakStatement BlockStatement StatementExpression MethodInvocation line Cast BasicType char MemberReference ch append BlockStatement StatementExpression Assignment MemberReference state Literal 0 = IfStatement BinaryOperation == MemberReference ch Literal '\n' BlockStatement StatementExpression Assignment MemberReference lineEnd Literal = BlockStatement StatementExpression Assignment MemberReference pushed MemberReference ch = StatementExpression Assignment MemberReference lineEnd Literal "\r" = BreakStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation && BinaryOperation == MemberReference ch Literal - 1 BinaryOperation == MemberReference state Literal 1 BlockStatement StatementExpression Assignment MemberReference lineEnd Literal "\r" = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation line MemberReference lineEnd append ReturnStatement MethodInvocation line toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public validateAttributes BuildException StatementExpression SuperMethodInvocation validateAttributes IfStatement BinaryOperation == MemberReference className Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The classname attribute must be set"	1
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId StatementExpression MethodInvocation context MethodInvocation BinaryOperation + Literal " MemberReference systemId MemberReference Project MSG_VERBOSE log getProject IfStatement MethodInvocation systemId Literal "file:" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation FILE_UTILS MemberReference systemId fromURI LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference path IfStatement MethodInvocation ! file isAbsolute BlockStatement StatementExpression Assignment MemberReference file MethodInvocation FILE_UTILS MethodInvocation context MemberReference path = StatementExpression MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: '" MemberReference systemId Literal "' in " MethodInvocation context getBuildFile Literal " should be simply as '" MethodInvocation path Literal '\\' Literal '/' replace Literal "' for with other XML MemberReference Project MSG_WARN log getProject StatementExpression MethodInvocation context MethodInvocation BinaryOperation + Literal MemberReference file MemberReference Project MSG_DEBUG log getProject TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference file StatementExpression MethodInvocation inputSource MethodInvocation FILE_UTILS MethodInvocation file getAbsolutePath toURI setSystemId ReturnStatement MemberReference inputSource CatchClause CatchClauseParameter FileNotFoundException StatementExpression MethodInvocation context MethodInvocation BinaryOperation + MethodInvocation file getAbsolutePath Literal " could not be found" MemberReference Project MSG_WARN log getProject StatementExpression MethodInvocation context MethodInvocation Literal "could not resolve MemberReference Project MSG_DEBUG log getProject ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s FormalParameter BasicType boolean echoString LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os This MethodInvocation getOutputStream TryStatement StatementExpression MethodInvocation os BinaryOperation + MemberReference s Literal "\n" write IfStatement MemberReference echoString BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference Project MSG_INFO log StatementExpression MethodInvocation os flush CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int nGroups FormalParameter Modifier final BasicType int nSelectors IOException StatementExpression MethodInvocation Literal 3 MemberReference nGroups bsW StatementExpression MethodInvocation Literal 15 MemberReference nSelectors bsW LocalVariableDeclaration Modifier final ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator selectorMtf This MemberReference data MemberReference selectorMtf LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nSelectors MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 VariableDeclarator hj BinaryOperation & MemberReference ArraySelector MemberReference i selectorMtf Literal 0xff BinaryOperation < MemberReference j MemberReference hj MemberReference ++ j BlockStatement WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation << Literal 1 BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow Literal 1 |= StatementExpression MemberReference ++ bsLiveShadow WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression MemberReference ++ bsLiveShadow StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = StatementExpression Assignment This MemberReference bsLive MemberReference bsLiveShadow =	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType getScript LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getTaskType LocalVariableDeclaration ReferenceType Map VariableDeclarator Cast ReferenceType Map MethodInvocation MethodInvocation MemberReference MagicNames getReference getProject IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal not found for " MemberReference name LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation MethodInvocation getTaskType get IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal not found for " MemberReference name ReturnStatement MemberReference	0
MethodDeclaration StatementExpression MethodInvocation System.out ClassReference Outer ReferenceType Inner println	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression MethodInvocation helper MemberReference file	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation event MethodInvocation getName MethodInvocation Literal "" equals BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference error Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference ++ calls MethodInvocation event MethodInvocation MethodInvocation getAbsolutePath getProject assertEquals CatchClause CatchClauseParameter AssertionFailedError e StatementExpression Assignment MemberReference error MemberReference e =	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier private ForStatement ForControl VariableDeclaration Modifier final ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation params keys MethodInvocation enumeration hasMoreElements BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation enumeration nextElement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation params MemberReference name get StatementExpression MethodInvocation transformer MemberReference name MemberReference value setParameter	0
MethodDeclaration Modifier public FormalParameter ReferenceType String id FormalParameter ReferenceType Object value StatementExpression MethodInvocation MemberReference id MemberReference value put	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference debug Literal "+" Literal "-"	0
MethodDeclaration Modifier public ReferenceType Enumeration getWarnings ReturnStatement MethodInvocation warnings elements	0
MethodDeclaration Modifier private touch FormalParameter ReferenceType File file FormalParameter BasicType long modTime IfStatement MethodInvocation ! file exists BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating " MemberReference file TernaryExpression MemberReference MemberReference Project MSG_INFO MemberReference Project MSG_VERBOSE log TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference file MemberReference mkdirs createNewFile CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not create " MemberReference file MemberReference ioe MethodInvocation getLocation IfStatement MethodInvocation ! file canWrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal not change date of " Literal file " MemberReference file StatementExpression MethodInvocation FILE_UTILS MemberReference file MemberReference modTime setFileLastModified	1
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference excludesFileList	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType FileUtils getFileUtils ReturnStatement MemberReference fileUtils	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ReturnStatement MethodInvocation name Literal ".jar" endsWith	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement BinaryOperation != MemberReference resource Literal null BlockStatement ThrowStatement MethodInvocation StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression BinaryOperation || MemberReference MemberReference Literal "" MemberReference	0
MethodDeclaration Modifier public write FormalParameter BasicType int b IOException StatementExpression Assignment This MemberReference oneBuf ArraySelector Literal 0 Cast BasicType byte MemberReference b = StatementExpression This MethodInvocation This MemberReference oneBuf Literal 0 Literal 1 write	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MemberReference p ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String encode FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation value length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation value MemberReference i charAt SwitchStatement MemberReference c SwitchStatementCase Literal '<' StatementExpression MethodInvocation sb Literal "&lt;" append BreakStatement SwitchStatementCase Literal '>' StatementExpression MethodInvocation sb Literal "&gt;" append BreakStatement SwitchStatementCase Literal '\'' StatementExpression MethodInvocation sb Literal append BreakStatement SwitchStatementCase Literal '\"' StatementExpression MethodInvocation sb Literal "&quot;" append BreakStatement SwitchStatementCase Literal '&' LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation value Literal ";" MemberReference i indexOf IfStatement BinaryOperation || BinaryOperation < MemberReference Literal 0 MethodInvocation ! MethodInvocation value MemberReference i BinaryOperation + MemberReference Literal 1 substring isReference BlockStatement StatementExpression MethodInvocation sb Literal "&amp;" append BlockStatement StatementExpression MethodInvocation sb Literal '&' append BreakStatement SwitchStatementCase IfStatement MethodInvocation MemberReference c BlockStatement StatementExpression MethodInvocation sb MemberReference c append BreakStatement ReturnStatement MethodInvocation sb Literal 0 substring	1
MethodDeclaration Modifier public FormalParameter ReferenceType unit StatementExpression Assignment MemberReference MethodInvocation unit =	0
MethodDeclaration Modifier private BasicType boolean sameDefinition FormalParameter ReferenceType AntTypeDefinition def FormalParameter ReferenceType AntTypeDefinition old LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation MemberReference def LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation == MemberReference MethodInvocation MemberReference old ReturnStatement BinaryOperation && MemberReference BinaryOperation || MemberReference ! MethodInvocation def MemberReference old MemberReference project sameDefinition	1
MethodDeclaration Modifier public static ReferenceType Enumeration FormalParameter ReferenceType Enumeration enums ReturnStatement ClassCreator ReferenceType MemberReference enums	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project ClassCreator MethodInvocation getAbsolutePath ReferenceType File MethodInvocation System Literal "root" getProperty Literal LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal Literal 2 MemberReference l length assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal to MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal to MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal to MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal to MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue BlockStatement StatementExpression MethodInvocation Literal to MemberReference ArraySelector Literal 0 MethodInvocation Literal endsWith l assertTrue StatementExpression MethodInvocation Literal to MemberReference ArraySelector Literal 1 MethodInvocation Literal endsWith l assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType int version StatementExpression Assignment This MemberReference version MemberReference version =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal in indexOf getOutput Literal - 1 assertTrue	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	1
MethodDeclaration Modifier private ReferenceType String TryStatement ReturnStatement MethodInvocation InetAddress MethodInvocation getHostName CatchClause CatchClauseParameter UnknownHostException e ReturnStatement Literal "localhost"	0
MethodDeclaration Modifier public synchronized reset IOException IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal StatementExpression Assignment MemberReference slack Literal null = StatementExpression MethodInvocation in reset	0
MethodDeclaration Modifier private IOException IfStatement BinaryOperation != This MemberReference su_ch2 This MemberReference su_chPrev BlockStatement StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment This MemberReference su_count Literal 1 = StatementExpression MethodInvocation setupRandPartA IfStatement BinaryOperation >= This ++ MemberReference su_count Literal 4 BlockStatement StatementExpression Assignment This MemberReference Cast BasicType char BinaryOperation & This MemberReference data MemberReference ll8 ArraySelector This MemberReference su_tPos Literal 0xff = StatementExpression Assignment This MemberReference su_tPos This MemberReference data MemberReference ArraySelector This MemberReference su_tPos = IfStatement BinaryOperation == This MemberReference su_rNToGo Literal 0 BlockStatement StatementExpression Assignment This MemberReference su_rNToGo BinaryOperation - MemberReference BZip2Constants ArraySelector This MemberReference su_rTPos rNums Literal 1 = IfStatement BinaryOperation == This ++ MemberReference su_rTPos Literal 512 BlockStatement StatementExpression Assignment This MemberReference su_rTPos Literal 0 = BlockStatement StatementExpression This -- MemberReference su_rNToGo StatementExpression Assignment This MemberReference Literal 0 = StatementExpression Assignment This MemberReference MemberReference = IfStatement BinaryOperation == This MemberReference su_rNToGo Literal 1 BlockStatement StatementExpression Assignment This MemberReference Literal 1 ^= StatementExpression MethodInvocation BlockStatement StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation setupRandPartA	1
MethodDeclaration Modifier public executeTargets FormalParameter ReferenceType Project project FormalParameter ReferenceType String targetNames BuildException LocalVariableDeclaration ReferenceType BuildException VariableDeclarator thrownException Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference targetNames length MemberReference ++ i BlockStatement TryStatement StatementExpression MethodInvocation project MemberReference ArraySelector MemberReference i targetNames executeTarget CatchClause CatchClauseParameter BuildException ex IfStatement MethodInvocation project BlockStatement StatementExpression Assignment MemberReference thrownException MemberReference ex = BlockStatement ThrowStatement MemberReference ex IfStatement BinaryOperation != MemberReference thrownException Literal null BlockStatement ThrowStatement MemberReference thrownException	1
MethodDeclaration Modifier public FormalParameter ReferenceType File baseDir StatementExpression Assignment This MemberReference baseDir MemberReference baseDir =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String text StatementExpression MethodInvocation reg Literal StatementExpression MethodInvocation Literal in default mode" MethodInvocation reg MemberReference text matches assertTrue StatementExpression MethodInvocation Literal in single line mode" MethodInvocation reg MemberReference text MemberReference RegexpMatcher matches assertTrue StatementExpression MethodInvocation Literal in multi line mode" MethodInvocation reg MemberReference text MemberReference RegexpMatcher matches assertTrue	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String line ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filters length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MethodInvocation line MemberReference ArraySelector MemberReference i filters indexOf Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference preserveLastModified MemberReference =	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier private static assertTrue FormalParameter BasicType boolean value FormalParameter ReferenceType String msg BuildException IfStatement MemberReference ! value BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Project project FormalParameter ReferenceType Object source BuildException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal must be implemented " Literal "in a helper plugin " This MethodInvocation getClass MethodInvocation getName	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public final init FormalParameter ReferenceType Properties props BuildException StatementExpression MethodInvocation formatter MemberReference props init	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean reverse StatementExpression Assignment This MemberReference reverse MemberReference reverse =	0
MethodDeclaration Modifier public ReferenceType Iterator ReturnStatement MethodInvocation files iterator	0
MethodDeclaration Modifier public addDefinitionsToList FormalParameter ReferenceType ListIterator listIt LocalVariableDeclaration ReferenceType String VariableDeclarator props SuperMethodInvocation getVariables IfStatement BinaryOperation != MemberReference props Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference props length MemberReference ++ i BlockStatement StatementExpression MethodInvocation listIt BinaryOperation + Literal MemberReference ArraySelector MemberReference i props add LocalVariableDeclaration ReferenceType Properties VariableDeclarator MethodInvocation ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MemberReference key getProperty StatementExpression MethodInvocation listIt BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference key Literal "=" MemberReference value add	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String specificationVersion StatementExpression MethodInvocation StatementExpression Assignment This MemberReference specificationVersion ClassCreator ReferenceType MemberReference specificationVersion =	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType String version StatementExpression Assignment This MemberReference version MemberReference version =	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation != MemberReference file Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation MemberReference url IfStatement BinaryOperation && MemberReference ! MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference namespace IfStatement BinaryOperation && MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference namespace LocalVariableDeclaration ReferenceType String VariableDeclarator schema MemberReference url IfStatement MemberReference BlockStatement IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference file TryStatement StatementExpression Assignment MemberReference schema MethodInvocation FileUtils MethodInvocation MemberReference file getFileURL MethodInvocation toString getFileUtils = CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference file MemberReference e ReturnStatement MemberReference schema	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType OutputStream getOutputStream IfStatement BinaryOperation == This MemberReference outputStream Literal null BlockStatement IfStatement BinaryOperation != MemberReference output Literal null BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MethodInvocation output getPath MemberReference append CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO ReturnStatement This MemberReference outputStream	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MemberReference fileName Literal null BlockStatement StatementExpression MethodInvocation buf MemberReference fileName append IfStatement BinaryOperation != MemberReference lineNumber Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ":" append StatementExpression MethodInvocation buf MemberReference lineNumber append StatementExpression MethodInvocation buf Literal ": " append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private bsW FormalParameter Modifier final BasicType int n FormalParameter Modifier final BasicType int v IOException LocalVariableDeclaration Modifier final ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff WhileStatement BinaryOperation >= MemberReference bsLiveShadow Literal 8 BlockStatement StatementExpression MethodInvocation outShadow BinaryOperation >> MemberReference bsBuffShadow Literal 24 write StatementExpression Assignment MemberReference bsBuffShadow Literal 8 <<= StatementExpression Assignment MemberReference bsLiveShadow Literal 8 -= StatementExpression Assignment This MemberReference bsBuff BinaryOperation | MemberReference bsBuffShadow BinaryOperation << MemberReference v BinaryOperation - BinaryOperation - Literal 32 MemberReference bsLiveShadow MemberReference n = StatementExpression Assignment This MemberReference bsLive BinaryOperation + MemberReference bsLiveShadow MemberReference n =	1
MethodDeclaration Modifier public final ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Task names are Literal failed to create task or type expectBuildExceptionContaining	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType Literal StatementExpression MethodInvocation Literal add reference to with elements from fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project = StatementExpression MethodInvocation p ClassCreator ReferenceType File Literal setLocation TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType Literal StatementExpression MethodInvocation Literal add reference to with elements from fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType VariableDeclarator another ClassCreator ReferenceType MemberReference project Literal StatementExpression MethodInvocation project Literal MemberReference another StatementExpression Assignment MemberReference p ClassCreator ReferenceType MemberReference project = StatementExpression MethodInvocation p ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType File Literal setLocation StatementExpression MethodInvocation Literal set location in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p Literal setPath StatementExpression MethodInvocation Literal set path in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not more than one attribute when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p createPath StatementExpression MethodInvocation Literal create in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p StatementExpression MethodInvocation Literal create in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType FileSet StatementExpression MethodInvocation Literal add FileSet in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType StatementExpression MethodInvocation Literal add in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType StatementExpression MethodInvocation Literal add in that is a reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String target FormalParameter ReferenceType String keys FormalParameter BasicType boolean FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType VariableDeclarator rc ClassCreator ReferenceType MemberReference keys MemberReference MemberReference value StatementExpression MethodInvocation project MemberReference rc StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator ae MethodInvocation rc getError IfStatement BinaryOperation != MemberReference ae Literal null BlockStatement ThrowStatement MemberReference ae StatementExpression MethodInvocation project MemberReference rc	0
MethodDeclaration Modifier public ReferenceType List ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String line IfStatement BinaryOperation == MemberReference from Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing from in LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ret ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator found MethodInvocation line MemberReference from indexOf WhileStatement BinaryOperation >= MemberReference found Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference found MemberReference start BlockStatement StatementExpression MethodInvocation ret MethodInvocation line MemberReference start MemberReference found substring append IfStatement BinaryOperation != MemberReference to Literal null BlockStatement StatementExpression MethodInvocation ret MemberReference to append StatementExpression Assignment MemberReference start BinaryOperation + MemberReference found MethodInvocation from length = StatementExpression Assignment MemberReference found MethodInvocation line MemberReference from MemberReference start indexOf = IfStatement BinaryOperation > MethodInvocation line length MemberReference start BlockStatement StatementExpression MethodInvocation ret MethodInvocation line MemberReference start MethodInvocation line length substring append ReturnStatement MethodInvocation ret toString	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal "test" Literal getProject StatementExpression MethodInvocation Literal Literal "The value of test is expectLogContaining	0
MethodDeclaration Modifier protected testAvailability FormalParameter ReferenceType String className BuildException TryStatement StatementExpression MethodInvocation Class MemberReference className forName CatchClause CatchClauseParameter Throwable t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier protected ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName ReturnStatement ClassCreator ReferenceType File MethodInvocation getDestDir BinaryOperation + MemberReference baseName MemberReference suffix	1
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i parameters add	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String origin LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator icounter Literal 0 BinaryOperation < MemberReference icounter MethodInvocation origin length MemberReference ++ icounter BlockStatement IfStatement MethodInvocation Character MethodInvocation origin MemberReference icounter charAt isLowerCase BlockStatement StatementExpression MethodInvocation result MethodInvocation Character MethodInvocation origin MemberReference icounter charAt toUpperCase append IfStatement MethodInvocation Character MethodInvocation origin MemberReference icounter charAt isUpperCase BlockStatement StatementExpression MethodInvocation result MethodInvocation Character MethodInvocation origin MemberReference icounter charAt toLowerCase append BlockStatement StatementExpression MethodInvocation result MethodInvocation origin MemberReference icounter charAt append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public ReferenceType String getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 result MethodInvocation srcFile getAbsolutePath = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public FormalParameter ReferenceType String pattern StatementExpression Assignment This MemberReference pattern MemberReference pattern =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean isSeekable ReturnStatement BinaryOperation != MemberReference raf Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Long StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute EjbcException IOException SAXException StatementExpression MethodInvocation checkConfiguration LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation Literal log StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation toString log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ejb MemberReference ArraySelector MemberReference i StatementExpression MethodInvocation ejb MemberReference checkConfiguration IfStatement MethodInvocation ejb MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + MethodInvocation ejb getName Literal " must be using log LocalVariableDeclaration ReferenceType String VariableDeclarator arguments MethodInvocation MemberReference ejb StatementExpression MethodInvocation MemberReference arguments BlockStatement StatementExpression MethodInvocation BinaryOperation + MethodInvocation ejb getName Literal " is up to log	0
MethodDeclaration Modifier private BasicType int FormalParameter Modifier final BasicType int groupNo IOException LocalVariableDeclaration Modifier final ReferenceType InputStream VariableDeclarator inShadow This MemberReference in LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType int VariableDeclarator zt BinaryOperation & MemberReference dataShadow ArraySelector MemberReference groupNo selector Literal 0xff LocalVariableDeclaration Modifier final BasicType int VariableDeclarator limit_zt MemberReference dataShadow ArraySelector MemberReference zt limit LocalVariableDeclaration BasicType int VariableDeclarator zn MemberReference dataShadow ArraySelector MemberReference zt minLens LocalVariableDeclaration BasicType int VariableDeclarator zvec MethodInvocation MemberReference zn LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff WhileStatement BinaryOperation > MemberReference zvec MemberReference ArraySelector MemberReference zn limit_zt BlockStatement StatementExpression MemberReference ++ zn WhileStatement BinaryOperation < MemberReference bsLiveShadow Literal 1 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator thech MethodInvocation inShadow read IfStatement BinaryOperation >= MemberReference thech Literal 0 BlockStatement StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += ContinueStatement BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" StatementExpression MemberReference -- bsLiveShadow StatementExpression Assignment MemberReference zvec BinaryOperation | BinaryOperation << MemberReference zvec Literal 1 BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow MemberReference bsLiveShadow Literal 1 = StatementExpression Assignment This MemberReference bsLive MemberReference bsLiveShadow = StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = ReturnStatement MemberReference dataShadow ArraySelector MemberReference zt ArraySelector BinaryOperation - MemberReference zvec MemberReference dataShadow ArraySelector MemberReference zt ArraySelector MemberReference zn base perm	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation IfStatement MethodInvocation ! destDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory \"" MemberReference destDir Literal "\" does not exist or is not a directory" MethodInvocation getLocation LocalVariableDeclaration ReferenceType File VariableDeclarator dest MethodInvocation LocalVariableDeclaration ReferenceType JspCompilerAdapter VariableDeclarator compiler MethodInvocation MemberReference This MethodInvocation MethodInvocation MemberReference createClassLoader getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference compiler doCompilation ReturnStatement IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation src list IfStatement BinaryOperation == MemberReference list length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation IfStatement MethodInvocation compiler BlockStatement StatementExpression MethodInvocation MemberReference compiler doCompilation ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation compiler StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator filecount Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcDir MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i list getProject IfStatement MethodInvocation ! srcDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal \"" MethodInvocation srcDir getPath Literal "\" does not exist!" MethodInvocation getLocation LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds This MethodInvocation MemberReference srcDir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression Assignment MemberReference filecount MemberReference files length = StatementExpression MethodInvocation MemberReference srcDir MemberReference dest MemberReference MemberReference files scanDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "compiling " MethodInvocation compileList size Literal " files" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation > MethodInvocation compileList size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MethodInvocation compileList size Literal " source file" TernaryExpression BinaryOperation == MethodInvocation compileList size Literal 1 Literal "" Literal "s" Literal " to " MemberReference dest log StatementExpression MethodInvocation MemberReference compiler doCompilation BlockStatement IfStatement BinaryOperation == MemberReference filecount Literal 0 BlockStatement StatementExpression MethodInvocation Literal were no files to compile" MemberReference Project MSG_INFO log BlockStatement StatementExpression MethodInvocation Literal files are up to date" MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier protected addValue FormalParameter Modifier final ReferenceType cmd FormalParameter ReferenceType String value StatementExpression MethodInvocation cmd MethodInvocation MemberReference value setValue createArg	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef ReturnStatement MethodInvocation String MethodInvocation getContent valueOf	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment MemberReference originalFile MemberReference file =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean binary StatementExpression Assignment This MemberReference binary MemberReference binary =	0
MethodDeclaration ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier private ReferenceType Manifest getManifest FormalParameter ReferenceType File manifestFile LocalVariableDeclaration ReferenceType Manifest VariableDeclarator Literal null LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference manifestFile = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference fis = BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference fis MemberReference = StatementExpression Assignment MemberReference MethodInvocation MemberReference isr getManifest = CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unsupported encoding while reading manifest: " MethodInvocation e getMessage MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to read manifest file: " MemberReference manifestFile Literal " (" MethodInvocation e getMessage Literal ")" MemberReference e IfStatement BinaryOperation != MemberReference isr Literal null BlockStatement TryStatement StatementExpression MethodInvocation isr close CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType listener IfStatement MethodInvocation listeners MemberReference listener contains BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator newListeners MethodInvocation StatementExpression MethodInvocation newListeners MemberReference listener addElement StatementExpression Assignment MemberReference listeners MemberReference newListeners =	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType String tn StatementExpression Assignment MemberReference MemberReference tn =	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator c SuperMethodInvocation read SwitchStatement MemberReference c SwitchStatementCase Literal '\r' Literal '\n' StatementExpression Assignment MemberReference columnNumber Literal 0 = BreakStatement SwitchStatementCase Literal ' ' StatementExpression MemberReference ++ columnNumber IfStatement MethodInvocation ! editsBlocked BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator colNextTab BinaryOperation * BinaryOperation / BinaryOperation - BinaryOperation + MemberReference columnNumber MemberReference tabLength Literal 1 MemberReference tabLength MemberReference tabLength LocalVariableDeclaration BasicType int VariableDeclarator countSpaces Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 WhileStatement BinaryOperation != Assignment MemberReference c SuperMethodInvocation read = Literal - 1 BlockStatement SwitchStatement MemberReference c SwitchStatementCase Literal ' ' IfStatement BinaryOperation == MemberReference ++ columnNumber MemberReference colNextTab BlockStatement StatementExpression MemberReference ++ StatementExpression Assignment MemberReference countSpaces Literal 0 = StatementExpression Assignment MemberReference colNextTab MemberReference tabLength += BlockStatement StatementExpression MemberReference ++ countSpaces BreakStatement SwitchStatementCase Literal '\t' StatementExpression Assignment MemberReference columnNumber MemberReference colNextTab = StatementExpression MemberReference ++ StatementExpression Assignment MemberReference countSpaces Literal 0 = StatementExpression Assignment MemberReference colNextTab MemberReference tabLength += BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference c push BreakStatement WhileStatement BinaryOperation > MemberReference -- countSpaces Literal 0 BlockStatement StatementExpression MethodInvocation Literal ' ' push StatementExpression MemberReference -- columnNumber WhileStatement BinaryOperation > MemberReference -- Literal 0 BlockStatement StatementExpression MethodInvocation Literal '\t' push StatementExpression Assignment MemberReference columnNumber MemberReference tabLength -= StatementExpression Assignment MemberReference c SuperMethodInvocation read = SwitchStatement MemberReference c SwitchStatementCase Literal ' ' StatementExpression MemberReference ++ columnNumber BreakStatement SwitchStatementCase Literal '\t' StatementExpression Assignment MemberReference columnNumber MemberReference tabLength += BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase Literal '\t' StatementExpression Assignment MemberReference columnNumber BinaryOperation * BinaryOperation / BinaryOperation - BinaryOperation + MemberReference columnNumber MemberReference tabLength Literal 1 MemberReference tabLength MemberReference tabLength = BreakStatement SwitchStatementCase StatementExpression MemberReference ++ columnNumber ReturnStatement MemberReference c	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event StatementExpression SuperMethodInvocation MemberReference event buildFinished LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation event getProject LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator properties MethodInvocation project getProperties LocalVariableDeclaration ReferenceType Properties VariableDeclarator fileProperties ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType String VariableDeclarator filename Cast ReferenceType String MethodInvocation properties Literal get IfStatement BinaryOperation != MemberReference filename Literal null BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement StatementExpression Assignment MemberReference is ClassCreator ReferenceType FileInputStream MemberReference filename = StatementExpression MethodInvocation fileProperties MemberReference is load CatchClause CatchClauseParameter IOException ioe IfStatement BinaryOperation != MemberReference is Literal null BlockStatement TryStatement StatementExpression MethodInvocation is close CatchClause CatchClauseParameter IOException e ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation fileProperties keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation fileProperties MemberReference key getProperty StatementExpression MethodInvocation properties MemberReference key MethodInvocation project MemberReference value replaceProperties put LocalVariableDeclaration BasicType boolean VariableDeclarator success BinaryOperation == MethodInvocation event getException Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator prefix TernaryExpression MemberReference success Literal Literal TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation Project MethodInvocation MemberReference properties BinaryOperation + MemberReference prefix Literal Literal "on" getValue toBoolean IfStatement MemberReference ! BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mailhost MethodInvocation MemberReference properties Literal Literal "localhost" getValue LocalVariableDeclaration BasicType int VariableDeclarator port MethodInvocation Integer MethodInvocation MemberReference properties Literal "port" MethodInvocation String MemberReference DEFAULT_PORT valueOf getValue parseInt LocalVariableDeclaration ReferenceType String VariableDeclarator user MethodInvocation MemberReference properties Literal "user" Literal "" getValue LocalVariableDeclaration ReferenceType String VariableDeclarator password MethodInvocation MemberReference properties Literal "password" Literal "" getValue LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation Project MethodInvocation MemberReference properties Literal Literal getValue toBoolean LocalVariableDeclaration ReferenceType String VariableDeclarator from MethodInvocation MemberReference properties Literal "from" Literal null getValue LocalVariableDeclaration ReferenceType String VariableDeclarator replytoList MethodInvocation MemberReference properties Literal Literal "" getValue LocalVariableDeclaration ReferenceType String VariableDeclarator toList MethodInvocation MemberReference properties BinaryOperation + MemberReference prefix Literal Literal null getValue LocalVariableDeclaration ReferenceType String VariableDeclarator subject MethodInvocation MemberReference properties BinaryOperation + MemberReference prefix Literal TernaryExpression MemberReference success Literal "Build Literal "Build getValue IfStatement BinaryOperation && BinaryOperation && MethodInvocation user Literal "" equals MethodInvocation password Literal "" equals MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference mailhost MemberReference port MemberReference from MemberReference replytoList MemberReference toList MemberReference subject MethodInvocation buffer Literal 0 substring sendMail BlockStatement StatementExpression MethodInvocation MethodInvocation event getProject MemberReference mailhost MemberReference port MemberReference user MemberReference password MemberReference MemberReference from MemberReference replytoList MemberReference toList MemberReference subject MethodInvocation buffer Literal 0 substring CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation System.out Literal failed to send println StatementExpression MethodInvocation e MemberReference System err printStackTrace	1
MethodDeclaration Modifier static ReferenceType Throwable orCause FormalParameter ReferenceType Throwable FormalParameter ReferenceType BuildException be FormalParameter BasicType boolean IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation be getException ReturnStatement TernaryExpression BinaryOperation && MemberReference BinaryOperation instanceof MemberReference t ReferenceType ClassNotFoundException Literal null MemberReference t	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other IfStatement BinaryOperation || BinaryOperation == MemberReference other Literal null BinaryOperation != MethodInvocation other getClass ClassReference ReferenceType ForkedTestConfiguration BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ForkedTestConfiguration VariableDeclarator o Cast ReferenceType ForkedTestConfiguration MemberReference other ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference MemberReference o BinaryOperation == MemberReference MemberReference o BinaryOperation == MemberReference MemberReference o BinaryOperation || BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference o Literal null BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation MemberReference o equals BinaryOperation || BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference o Literal null BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation MemberReference o equals	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference srcDir MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getIncludedDirectories LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i Cast ReferenceType String MethodInvocation MemberReference i elementAt = ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation p Literal ClassReference ReferenceType LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out MemberReference System out LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator err MemberReference System err StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MemberReference p Literal false setOut StatementExpression MethodInvocation System ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MemberReference p Literal true setErr TryStatement StatementExpression MethodInvocation p Literal executeTarget StatementExpression MethodInvocation System MemberReference out setOut StatementExpression MethodInvocation System MemberReference err setErr	0
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String outputEncoding IfStatement BinaryOperation == MemberReference outputEncoding Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must not be null" BlockStatement StatementExpression Assignment This MemberReference outputEncoding MemberReference outputEncoding =	0
MethodDeclaration Modifier private check FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation == MemberReference error Literal null BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation event MethodInvocation getProject assertNotNull StatementExpression MethodInvocation MemberReference ih MethodInvocation event MethodInvocation getProject assertSame CatchClause CatchClauseParameter AssertionFailedError e StatementExpression Assignment MemberReference error MemberReference e =	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier public setFileLastModified FormalParameter ReferenceType File file FormalParameter BasicType long time StatementExpression MethodInvocation ResourceUtils ClassCreator ReferenceType FileResource MemberReference file MemberReference time setLastModified	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference prefix Literal null BinaryOperation != MemberReference regex Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Please either Literal " or but not MethodInvocation getLocation LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator allProps ClassCreator ReferenceType Hashtable IfStatement BinaryOperation && BinaryOperation == MemberReference inFile Literal null BinaryOperation == MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation allProps MethodInvocation MethodInvocation getProperties getProject putAll IfStatement BinaryOperation != MemberReference inFile Literal null BlockStatement IfStatement BinaryOperation && MethodInvocation inFile exists MethodInvocation inFile isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal is a IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ReturnStatement IfStatement BinaryOperation && MethodInvocation inFile exists MethodInvocation ! inFile canRead BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal not read from the specified IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ReturnStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference inFile = LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props MemberReference in load StatementExpression MethodInvocation allProps MemberReference props putAll CatchClause CatchClauseParameter FileNotFoundException fnfe LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + Literal "Could not find file " MethodInvocation inFile getAbsolutePath IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference fnfe MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_WARN log ReturnStatement CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + Literal "Could not read file " MethodInvocation inFile getAbsolutePath IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference ioe MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_WARN log ReturnStatement StatementExpression MethodInvocation FileUtils MemberReference in close LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps Cast ReferenceType MethodInvocation e nextElement StatementExpression MethodInvocation allProps MethodInvocation ps getProperties putAll LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null TryStatement IfStatement BinaryOperation == MemberReference destfile Literal null BlockStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType ByteArrayOutputStream = StatementExpression MethodInvocation MemberReference allProps MemberReference os saveProperties StatementExpression MethodInvocation MethodInvocation os toString MemberReference Project MSG_INFO log BlockStatement IfStatement BinaryOperation && MethodInvocation destfile exists MethodInvocation destfile isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal is a IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ReturnStatement IfStatement BinaryOperation && MethodInvocation destfile exists MethodInvocation ! destfile canWrite BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal not write to the specified IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ReturnStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType FileOutputStream This MemberReference destfile = StatementExpression MethodInvocation MemberReference allProps MemberReference os saveProperties CatchClause CatchClauseParameter IOException ioe IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MethodInvocation ioe getMessage MemberReference Project MSG_INFO log IfStatement BinaryOperation != MemberReference os Literal null BlockStatement TryStatement StatementExpression MethodInvocation os close CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier public BasicType boolean IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation project MemberReference getProperty Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation project MemberReference getProperty Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier private FormalParameter ReferenceType ArrayList ar FormalParameter ReferenceType String header StatementExpression MethodInvocation MemberReference header MemberReference Project MSG_INFO log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation ar size MemberReference ++ i BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MethodInvocation ar MemberReference i get MemberReference Project MSG_INFO log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal specified doesn't exist" expectBuildException	0
MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException StatementExpression MethodInvocation left MemberReference b MemberReference off MemberReference len write StatementExpression MethodInvocation right MemberReference b MemberReference off MemberReference len write	1
MethodDeclaration Modifier public setTargetos FormalParameter ReferenceType String target LocalVariableDeclaration ReferenceType TargetOs VariableDeclarator to ClassCreator ReferenceType TargetOs StatementExpression MethodInvocation to MemberReference target setValue StatementExpression MethodInvocation MemberReference to setTargetos	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private static ReferenceType DocumentBuilder TryStatement ReturnStatement MethodInvocation DocumentBuilderFactory MethodInvocation newDocumentBuilder newInstance CatchClause CatchClauseParameter Exception exc ThrowStatement ClassCreator ReferenceType MemberReference exc	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation sysProperties MemberReference addVariable	0
MethodDeclaration * make a call to * this is only needed for java reflection is used to stop the * and in have the * @return of the Returned * */ Modifier protected BasicType boolean TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class Literal forName LocalVariableDeclaration ReferenceType Method VariableDeclarator reset MethodInvocation c Literal Literal null getMethod StatementExpression MethodInvocation reset Literal null Literal null invoke ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException cnfe ReturnStatement Literal false CatchClause CatchClauseParameter NoSuchMethodException e ReturnStatement Literal false CatchClause CatchClauseParameter IllegalAccessException e ReturnStatement Literal false CatchClause CatchClauseParameter InvocationTargetException e ReturnStatement Literal false	1
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType VariableDeclarator wrapper MethodInvocation context StatementExpression MethodInvocation wrapper MemberReference buf MemberReference start MemberReference count	0
MethodDeclaration Modifier public ReferenceType concatSystemClasspath ReturnStatement MethodInvocation Literal concatSystemClasspath	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation != MemberReference file Literal null BlockStatement IfStatement BinaryOperation != MemberReference srcDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation fileset MemberReference file StatementExpression Assignment MemberReference srcDir MethodInvocation file getParentFile = IfStatement BinaryOperation == MemberReference srcDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be IfStatement MethodInvocation ! srcDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal does not exist!" IfStatement MethodInvocation ! srcDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is not a IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement IfStatement MethodInvocation ! destDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal does not exist!" IfStatement MethodInvocation ! destDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is not a	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator brace Literal ": " LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MethodInvocation toString StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference specificationVersion BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference specificationVersion append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference specificationVendor BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference specificationVendor append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference implementationVersion BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference implementationVersion append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference implementationVendor BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference implementationVendor append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal executeTarget StatementExpression Assignment MemberReference p MethodInvocation getProject = StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to create MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Couldn't record links in MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Couldn't record links in MethodInvocation p Literal getProperty assertNotNull LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail	0
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar ReturnStatement Cast BasicType int BinaryOperation - MethodInvocation foo getSize MethodInvocation bar getSize	1
MethodDeclaration Modifier public ReferenceType StatementExpression Assignment MemberReference usedMatchingTask Literal true = ReturnStatement SuperMethodInvocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier protected processLine FormalParameter ReferenceType String line FormalParameter BasicType int level StatementExpression MethodInvocation pc MemberReference line MemberReference level log	0
MethodDeclaration Modifier public BasicType boolean exists ReturnStatement BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public synchronized ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference ds Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference	1
MethodDeclaration Modifier protected ReferenceType ClassLoader IfStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MethodInvocation IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getClassLoader = StatementExpression Cast ReferenceType AntClassLoader MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator dir1 MethodInvocation LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal LocalVariableDeclaration ReferenceType String VariableDeclarator basedir MethodInvocation MethodInvocation getAbsolutePath StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer MethodInvocation dir1 getAbsolutePath MethodInvocation getAbsolutePath	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setError FormalParameter ReferenceType File error StatementExpression MethodInvocation TernaryExpression BinaryOperation == MemberReference error Literal null Literal null ArrayCreator ReferenceType File ArrayInitializer MemberReference error setError	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation MethodInvocation MemberReference proxy setProjectReference getProject LocalVariableDeclaration ReferenceType Method VariableDeclarator executeMethod MethodInvocation MethodInvocation proxy getClass TryStatement StatementExpression MethodInvocation executeMethod MemberReference proxy Literal null invoke CatchClause CatchClauseParameter java.lang.reflect.InvocationTargetException ie StatementExpression MethodInvocation BinaryOperation + Literal "Error in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ie getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference t CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Error in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Cache cache StatementExpression MethodInvocation Literal "Cache not proper MethodInvocation cache isValid assertTrue LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "value1" LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation cache iterator StatementExpression MethodInvocation Literal "Cache is not empty" MethodInvocation hasNext assertFalse StatementExpression MethodInvocation cache MemberReference MemberReference put StatementExpression MethodInvocation cache MemberReference MemberReference put StatementExpression MethodInvocation Literal returned wrong value" MemberReference MethodInvocation cache MemberReference get assertEquals StatementExpression MethodInvocation Literal returned wrong value" MemberReference MethodInvocation cache MemberReference get assertEquals LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation cache iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator returned MethodInvocation it2 next LocalVariableDeclaration BasicType boolean VariableDeclarator ok BinaryOperation || MethodInvocation MemberReference returned equals MethodInvocation MemberReference returned equals LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal returned unexpected Literal " MethodInvocation MemberReference returned equals Literal " MethodInvocation MemberReference returned equals Literal " MemberReference returned Literal " MemberReference ok StatementExpression MethodInvocation MemberReference msg MemberReference ok assertTrue StatementExpression MethodInvocation cache delete LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it3 MethodInvocation cache iterator StatementExpression MethodInvocation Literal "Cache is not empty" MethodInvocation hasNext assertFalse	1
MethodDeclaration Modifier protected BasicType boolean LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator action MethodInvocation MethodInvocation getAction getTask ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement MethodInvocation action MemberReference ArraySelector MemberReference i equals BlockStatement StatementExpression Assignment MemberReference valid Literal true = BreakStatement ReturnStatement MemberReference valid	0
MethodDeclaration Modifier public ReferenceType File LocalVariableDeclaration ReferenceType FileResource VariableDeclarator r Cast ReferenceType FileResource MethodInvocation getArchive ReturnStatement MethodInvocation r getFile	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal true Literal false Literal false Literal false Literal false	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public endTestSuite FormalParameter ReferenceType JUnitTest suite LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Tests run: " StatementExpression MethodInvocation sb MethodInvocation suite append StatementExpression MethodInvocation sb Literal ", Failures: " append StatementExpression MethodInvocation sb MethodInvocation suite failureCount append StatementExpression MethodInvocation sb Literal ", Errors: " append StatementExpression MethodInvocation sb MethodInvocation suite append StatementExpression MethodInvocation sb Literal ", Time " append StatementExpression MethodInvocation sb MethodInvocation numberFormat BinaryOperation / MethodInvocation suite Literal format append StatementExpression MethodInvocation sb Literal " append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation && BinaryOperation != MemberReference systemOutput Literal null BinaryOperation > MethodInvocation systemOutput length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference StringUtils LINE_SEP append MethodInvocation MemberReference systemOutput append MethodInvocation Literal "------------- ---------------- ---------------" append MethodInvocation MemberReference StringUtils LINE_SEP append Literal "------------- Standard Output ---------------" append IfStatement BinaryOperation && BinaryOperation != MemberReference systemError Literal null BinaryOperation > MethodInvocation systemError length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference StringUtils LINE_SEP append MethodInvocation MemberReference systemError append MethodInvocation Literal "------------- ---------------- ---------------" append MethodInvocation MemberReference StringUtils LINE_SEP append Literal "------------- Standard Error -----------------" append IfStatement BinaryOperation != MemberReference output Literal null BlockStatement TryStatement StatementExpression MethodInvocation output MethodInvocation sb toString write StatementExpression MethodInvocation close StatementExpression MethodInvocation output MethodInvocation results toString write StatementExpression MethodInvocation output flush IfStatement BinaryOperation && BinaryOperation != MemberReference out MemberReference System out BinaryOperation != MemberReference out MemberReference System err BlockStatement StatementExpression MethodInvocation FileUtils MemberReference out close	1
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation patterns	0
MethodDeclaration Modifier private concatenate FormalParameter BasicType char buffer FormalParameter ReferenceType Writer writer FormalParameter ReferenceType Reader in IOException IfStatement BinaryOperation != MemberReference filterChains Literal null BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator helper ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation helper MemberReference BUFFER_SIZE StatementExpression MethodInvocation helper MemberReference in setPrimaryReader StatementExpression MethodInvocation helper MemberReference filterChains setFilterChains StatementExpression MethodInvocation helper MethodInvocation getProject setProject StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader MethodInvocation helper getAssembledReader = WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nRead MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read IfStatement BinaryOperation == MemberReference nRead Literal - 1 BlockStatement BreakStatement StatementExpression MethodInvocation writer MemberReference buffer Literal 0 MemberReference nRead write StatementExpression MethodInvocation writer flush	0
MethodDeclaration Modifier private ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal one of the attributes file and resource" Literal " be set" MethodInvocation getLocation	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v IfStatement MemberReference v BlockStatement StatementExpression Assignment This MemberReference lockStatus MemberReference = BlockStatement StatementExpression Assignment This MemberReference lockStatus MemberReference =	0
MethodDeclaration Modifier protected BasicType boolean LocalVariableDeclaration ReferenceType VariableDeclarator TernaryExpression BinaryOperation != MemberReference classpath Literal null MethodInvocation classpath Literal "ignore" concatSystemClasspath Literal null ReturnStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation MethodInvocation trim MethodInvocation length toString Literal 0	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference perm Literal null BlockStatement StatementExpression Assignment MemberReference perm ClassCreator ReferenceType = ReturnStatement MemberReference perm	0
MethodDeclaration Modifier public FormalParameter ReferenceType String charset StatementExpression Assignment This MemberReference charset MemberReference charset =	0
MethodDeclaration Modifier public warning FormalParameter Modifier final ReferenceType String message StatementExpression MethodInvocation task MemberReference message MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "must Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public synchronized BasicType boolean add FormalParameter ReferenceType Object o IfStatement BinaryOperation < MemberReference size MemberReference Integer MAX_VALUE BlockStatement StatementExpression MemberReference ++ size LocalVariableDeclaration ReferenceType VariableDeclarator m Cast ReferenceType MethodInvocation t MemberReference o get IfStatement BinaryOperation == MemberReference m Literal null BlockStatement StatementExpression Assignment MemberReference m ClassCreator ReferenceType = StatementExpression MethodInvocation t MemberReference o MemberReference m put StatementExpression MemberReference ++ m value ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType Os o StatementExpression MethodInvocation MemberReference o addElement	0
MethodDeclaration Modifier private FormalParameter ReferenceType Project project TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class Literal forName StatementExpression MethodInvocation project Literal MemberReference c StatementExpression MethodInvocation project Literal MemberReference c StatementExpression Assignment MemberReference c MethodInvocation Class Literal forName = StatementExpression MethodInvocation project Literal "description" MemberReference c StatementExpression Assignment MemberReference c MethodInvocation Class Literal forName = StatementExpression MethodInvocation project Literal "import" MemberReference c StatementExpression Assignment MemberReference c MethodInvocation Class Literal forName = StatementExpression MethodInvocation project Literal MemberReference c CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace	0
MethodDeclaration Modifier public FormalParameter ReferenceType sf StatementExpression MethodInvocation sourceFiles MemberReference sf addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType output StatementExpression Assignment This MemberReference out MethodInvocation output getOutputStream =	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType File param ReturnStatement BinaryOperation == MemberReference param Literal null	1
MethodDeclaration Modifier private static FormalParameter BasicType int id FormalParameter ReferenceType action StatementExpression MethodInvocation ClassCreator ReferenceType Integer MemberReference id MemberReference action put	1
MethodDeclaration Modifier public check IfStatement BinaryOperation == MemberReference type Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be set for provider MethodInvocation getLocation IfStatement BinaryOperation == MethodInvocation type length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid empty MethodInvocation getLocation	0
MethodDeclaration Modifier public FormalParameter BasicType boolean glob StatementExpression Assignment MemberReference MemberReference glob =	0
MethodDeclaration Modifier public synchronized BasicType int lastIndexOf FormalParameter ReferenceType Object o FormalParameter BasicType int pos ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference pos BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference i get MemberReference o BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference outputFile	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public run ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i Literal 5 MemberReference run MemberReference ++ i BlockStatement StatementExpression MethodInvocation System.out MethodInvocation Thread MethodInvocation getName currentThread println TryStatement StatementExpression MethodInvocation Thread Literal sleep CatchClause CatchClauseParameter InterruptedException ie SynchronizedStatement This StatementExpression Assignment MemberReference done Literal true = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public final BasicType int read FormalParameter Modifier final BasicType char FormalParameter Modifier final BasicType int off FormalParameter Modifier final BasicType int len IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ch MethodInvocation read IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement ReturnStatement Literal - 1 BlockStatement ReturnStatement MemberReference i StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference off MemberReference i Cast BasicType char MemberReference ch = ReturnStatement MemberReference len	1
MethodDeclaration Modifier private setDefaults StatementExpression Assignment MemberReference resource Literal null = StatementExpression Assignment MemberReference link Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference failonerror Literal true = StatementExpression Assignment MemberReference overwrite Literal false = StatementExpression MethodInvocation Literal StatementExpression MethodInvocation fileSets clear	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator filter ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference filter addElement ReturnStatement MemberReference filter	0
MethodDeclaration Modifier public FormalParameter ReferenceType String sql StatementExpression Assignment This MemberReference sqlCommand MemberReference sql +=	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation in read IfStatement BinaryOperation == MemberReference c MemberReference replace ReturnStatement MemberReference with ReturnStatement MemberReference c	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal LocalVariableDeclaration ReferenceType VariableDeclarator fs ClassCreator ReferenceType StatementExpression MethodInvocation fs Literal "test" Literal StatementExpression MethodInvocation fs Literal Literal StatementExpression MethodInvocation fs Literal "test2" Literal StatementExpression MethodInvocation fs Literal "@" StatementExpression MethodInvocation fs Literal "@" StatementExpression MethodInvocation MemberReference result MethodInvocation fs MemberReference line assertEquals	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter BasicType boolean filtering IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile TernaryExpression MemberReference filtering MemberReference globalFilters Literal null copyFile	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "-s IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference Literal " += IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + Literal " " MemberReference += StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier protected IfStatement BinaryOperation != MemberReference This MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " " This MemberReference log	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement BinaryOperation != MemberReference config Literal null	0
MethodDeclaration Modifier protected ReferenceType OutputStream wrapStream FormalParameter ReferenceType OutputStream out IOException ReturnStatement ClassCreator ReferenceType MemberReference out	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference redirector	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter BasicType boolean overwrite IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile MemberReference filters MemberReference overwrite Literal false copyFile	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType File zipFile BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal creating empty " MemberReference archiveType Literal " archive " MemberReference zipFile MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null TryStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType FileOutputStream MemberReference zipFile = LocalVariableDeclaration BasicType byte VariableDeclarator empty ArrayCreator BasicType byte Literal 22 StatementExpression Assignment MemberReference ArraySelector Literal 0 empty Literal 80 = StatementExpression Assignment MemberReference ArraySelector Literal 1 empty Literal 75 = StatementExpression Assignment MemberReference ArraySelector Literal 2 empty Literal 5 = StatementExpression Assignment MemberReference ArraySelector Literal 3 empty Literal 6 = StatementExpression MethodInvocation os MemberReference empty write CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not create empty ZIP archive " Literal "(" MethodInvocation ioe getMessage Literal ")" MemberReference ioe MethodInvocation getLocation IfStatement BinaryOperation != MemberReference os Literal null BlockStatement TryStatement StatementExpression MethodInvocation os close CatchClause CatchClauseParameter IOException e ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation == MethodInvocation project Literal "test" getProperty Literal null assertTrue	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation element Literal ":" MethodInvocation element Literal "name" getAttribute	0
MethodDeclaration Modifier protected validateAttributes BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference srcDir Literal null BinaryOperation == MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Specify at least one source" Literal srcDir or a IfStatement BinaryOperation && BinaryOperation == MemberReference srcDir Literal null BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Specify the or the	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference FILE MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String manager StatementExpression MethodInvocation helper MemberReference manager	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Object clone CloneNotSupportedException LocalVariableDeclaration ReferenceType DataType VariableDeclarator dt Cast ReferenceType DataType SuperMethodInvocation clone StatementExpression MethodInvocation dt MethodInvocation setDescription IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation dt MethodInvocation StatementExpression MethodInvocation dt MethodInvocation isChecked setChecked ReturnStatement MemberReference dt	1
MethodDeclaration Modifier public IfStatement MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils BlockStatement StatementExpression MethodInvocation System.out Literal "Test with characters skipped pre println ReturnStatement IfStatement MethodInvocation ! Os Literal "windows" isFamily BlockStatement StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal expectLogContaining BlockStatement StatementExpression MethodInvocation System.out Literal "Test with path not println	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression SuperMethodInvocation tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "ignore" Literal "width" Literal Literal Literal	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference Literal Literal null	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator mapper ClassCreator ReferenceType StatementExpression MethodInvocation mapper Literal StatementExpression MethodInvocation mapper Literal LocalVariableDeclaration ReferenceType String VariableDeclarator file Literal LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation mapper ArraySelector Literal 0 MemberReference file mapFileName LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation Literal StatementExpression MethodInvocation MemberReference expected MemberReference result assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType String files FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File destDir FormalParameter ReferenceType mapper ReturnStatement MethodInvocation MemberReference files MemberReference srcDir MemberReference destDir MemberReference mapper MethodInvocation FILE_UTILS	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String executable StatementExpression Assignment This MemberReference executable MemberReference executable =	0
MethodDeclaration Modifier public BasicType boolean isValid ReturnStatement BinaryOperation || Literal MethodInvocation MemberReference algorithm equalsIgnoreCase Literal MethodInvocation MemberReference algorithm equalsIgnoreCase	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4"	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String name IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation ! name Literal ".class" endsWith MethodInvocation name BinaryOperation + MethodInvocation getStubClassSuffix Literal ".class" endsWith MethodInvocation name BinaryOperation + MethodInvocation Literal ".class" endsWith MethodInvocation name BinaryOperation + MethodInvocation Literal ".class" endsWith BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation name Literal 0 BinaryOperation - MethodInvocation name length Literal 6 substring LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation base MemberReference File separatorChar Literal '.' replace IfStatement BinaryOperation && MethodInvocation attributes MethodInvocation ! attributes MemberReference classname BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator target ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + BinaryOperation + MemberReference name Literal MethodInvocation nextLong IfStatement BinaryOperation && MethodInvocation ! attributes MethodInvocation ! attributes BlockStatement IfStatement Literal MethodInvocation MethodInvocation attributes equals "1.2" BlockStatement StatementExpression Assignment MemberReference target ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + BinaryOperation + MemberReference base MethodInvocation getStubClassSuffix Literal ".class" = BlockStatement StatementExpression Assignment MemberReference target ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + BinaryOperation + MemberReference base MethodInvocation getStubClassSuffix Literal ".class" BinaryOperation + BinaryOperation + MemberReference base MethodInvocation Literal ".class" = IfStatement MethodInvocation ! attributes BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lastSlash MethodInvocation base MemberReference File separatorChar lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator dirname Literal "" LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 IfStatement BinaryOperation == MemberReference lastSlash Literal - 1 BlockStatement StatementExpression Assignment MemberReference index Literal 0 = BlockStatement StatementExpression Assignment MemberReference index BinaryOperation + MemberReference lastSlash Literal 1 = StatementExpression Assignment MemberReference dirname MethodInvocation base Literal 0 MemberReference index substring = LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation base MemberReference index substring TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation attributes MethodInvocation MemberReference classname loadClass getLoader IfStatement MethodInvocation c isInterface BlockStatement StatementExpression Assignment MemberReference target ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference dirname Literal "_" MemberReference filename MethodInvocation getStubClassSuffix Literal ".class" = BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator interf MethodInvocation attributes MemberReference c LocalVariableDeclaration ReferenceType String VariableDeclarator iName MethodInvocation interf getName LocalVariableDeclaration ReferenceType String VariableDeclarator iDir Literal "" LocalVariableDeclaration BasicType int VariableDeclarator iIndex Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation iName Literal "." lastIndexOf IfStatement BinaryOperation == MemberReference lastDot Literal - 1 BlockStatement StatementExpression Assignment MemberReference iIndex Literal 0 = BlockStatement StatementExpression Assignment MemberReference iIndex BinaryOperation + MemberReference lastDot Literal 1 = StatementExpression Assignment MemberReference iDir MethodInvocation iName Literal 0 MemberReference iIndex substring = StatementExpression Assignment MemberReference iDir MethodInvocation iDir Literal '.' MemberReference File separatorChar replace = StatementExpression Assignment MemberReference target ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference dirname Literal "_" MemberReference filename MethodInvocation Literal ".class" BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference iDir Literal "_" MethodInvocation iName MemberReference iIndex substring MethodInvocation getStubClassSuffix Literal ".class" = CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation attributes BinaryOperation + BinaryOperation + Literal "Unable to class " MemberReference classname Literal ". It could not be found." MemberReference Project MSG_WARN log CatchClause CatchClauseParameter NoClassDefFoundError e StatementExpression MethodInvocation attributes BinaryOperation + BinaryOperation + Literal "Unable to class " MemberReference classname Literal ". It is not MemberReference Project MSG_WARN log CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation attributes BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to class " MemberReference classname Literal ". Exception: " MethodInvocation t getMessage MemberReference Project MSG_WARN log ReturnStatement MemberReference target	1
MethodDeclaration Modifier public FormalParameter ReferenceType String hostname StatementExpression Assignment MemberReference proxyHost MemberReference hostname =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression MethodInvocation helper MemberReference text	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Nothing to test for ReturnStatement MethodInvocation value booleanValue	1
MethodDeclaration Modifier protected setChecked FormalParameter Modifier final BasicType boolean checked StatementExpression Assignment This MemberReference checked MemberReference checked =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal "foo" Literal "bar" expectPropertySet StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "baz" getReference getProject assertNotNull	0
MethodDeclaration Modifier private FormalParameter ReferenceType Node node FormalParameter ReferenceType String prefix FormalParameter ReferenceType Object container LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference prefix IfStatement BinaryOperation != MethodInvocation node MemberReference Node BlockStatement IfStatement BinaryOperation > MethodInvocation prefix MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal "." += StatementExpression Assignment MemberReference MethodInvocation node getNodeName += LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference node MemberReference MemberReference container IfStatement MethodInvocation node BlockStatement LocalVariableDeclaration ReferenceType NodeList VariableDeclarator MethodInvocation node getChildNodes LocalVariableDeclaration BasicType int VariableDeclarator numChildren MethodInvocation getLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference numChildren MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference i item MemberReference MemberReference	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal BinaryOperation + Literal must not elements " Literal using refid" expectBuildException	0
MethodDeclaration Modifier private BasicType char ReturnStatement MemberReference endToken	0
MethodDeclaration Modifier public ReferenceType Hashtable getProperties ReturnStatement ClassCreator ReferenceType Hashtable MemberReference properties	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement This MemberReference dest	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation in read WhileStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference ch indexOf Literal - 1 BlockStatement BreakStatement BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public ReferenceType Resource IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType Collection VariableDeclarator result MethodInvocation getCollection ReturnStatement Cast ReferenceType Resource MethodInvocation result ArrayCreator ReferenceType Resource MethodInvocation result size toArray	0
MethodDeclaration Modifier protected ReferenceType ArchiveState getResourcesToAdd FormalParameter ReferenceType ResourceCollection rcs FormalParameter ReferenceType File zipFile FormalParameter BasicType boolean needsUpdate BuildException LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator filesets ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator rest ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference rcs length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i rcs ReferenceType FileSet BlockStatement StatementExpression MethodInvocation filesets MemberReference ArraySelector MemberReference i rcs add BlockStatement StatementExpression MethodInvocation rest MemberReference ArraySelector MemberReference i rcs add LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc Cast ReferenceType ResourceCollection MethodInvocation rest ArrayCreator ReferenceType ResourceCollection MethodInvocation rest size toArray LocalVariableDeclaration ReferenceType ArchiveState VariableDeclarator as MethodInvocation MemberReference rc MemberReference zipFile MemberReference needsUpdate getNonFileSetResourcesToAdd LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets ArrayCreator ReferenceType FileSet MethodInvocation filesets size toArray LocalVariableDeclaration ReferenceType ArchiveState VariableDeclarator as2 MethodInvocation MemberReference fs MemberReference zipFile MethodInvocation as getResourcesToAdd IfStatement BinaryOperation && MethodInvocation ! as MethodInvocation as2 BlockStatement StatementExpression Assignment MemberReference as MethodInvocation MemberReference rc MemberReference zipFile Literal true getNonFileSetResourcesToAdd = LocalVariableDeclaration ReferenceType Resource VariableDeclarator toAdd ArrayCreator ReferenceType Resource MemberReference rcs length LocalVariableDeclaration BasicType int VariableDeclarator fsIndex Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference rcs length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i rcs ReferenceType FileSet BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i toAdd MethodInvocation as2 ArraySelector MemberReference ++ fsIndex getResourcesToAdd = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i toAdd MethodInvocation as ArraySelector MemberReference ++ getResourcesToAdd = ReturnStatement ClassCreator ReferenceType ArchiveState MethodInvocation as2 MemberReference toAdd	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String desc StatementExpression Assignment This MemberReference desc MemberReference desc =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String implementationVersion StatementExpression MethodInvocation StatementExpression Assignment This MemberReference implementationVersion ClassCreator ReferenceType MemberReference implementationVersion =	0
MethodDeclaration Modifier private FormalParameter ReferenceType File sourceJar FormalParameter ReferenceType File TryStatement IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Java VariableDeclarator javaTask ClassCreator ReferenceType Java MethodInvocation getTask StatementExpression MethodInvocation javaTask MethodInvocation Literal setValue createJvmarg StatementExpression MethodInvocation javaTask MethodInvocation Literal setValue createJvmarg LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal setKey LocalVariableDeclaration ReferenceType File VariableDeclarator libdir ClassCreator ReferenceType File MemberReference Literal "lib" StatementExpression MethodInvocation var MethodInvocation libdir getAbsolutePath setValue StatementExpression MethodInvocation javaTask MemberReference var StatementExpression MethodInvocation javaTask MemberReference StatementExpression MethodInvocation javaTask Literal setTaskName StatementExpression MethodInvocation javaTask Literal setClassname StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation sourceJar getPath setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation MemberReference setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation getPath setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation setLine createArg IfStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null BinaryOperation > MethodInvocation MethodInvocation toString MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation javaTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation javaTask MethodInvocation MethodInvocation MethodInvocation toString setValue createArg LocalVariableDeclaration ReferenceType VariableDeclarator classpath MemberReference IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath MethodInvocation = IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation javaTask MemberReference classpath StatementExpression MethodInvocation javaTask Literal true BlockStatement StatementExpression MethodInvocation javaTask Literal true StatementExpression MethodInvocation BinaryOperation + Literal "Calling for " MethodInvocation sourceJar toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation javaTask execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while calling Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Vector list FormalParameter ReferenceType Project p IfStatement BinaryOperation == MethodInvocation list size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator tmpNames ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation list elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation && BinaryOperation != MemberReference pattern Literal null BinaryOperation > MethodInvocation pattern length Literal 0 BlockStatement StatementExpression MethodInvocation tmpNames MemberReference pattern addElement LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MethodInvocation tmpNames size StatementExpression MethodInvocation tmpNames MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String vpath ReturnStatement MethodInvocation ! MemberReference vpath add	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType FileSet VariableDeclarator resultFileSet Cast ReferenceType FileSet MethodInvocation p MemberReference RESULT_FILESET getReference LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation resultFileSet MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator scannedFiles MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference scannedFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i scannedFiles MemberReference ArraySelector MemberReference i scannedFiles put StatementExpression MethodInvocation BinaryOperation + Literal "Classfileset did not pick up expected number of " Literal "class files" Literal 2 MethodInvocation files size assertEquals StatementExpression MethodInvocation Literal "Result did not contain B.class" MethodInvocation files Literal "B.class" containsKey assertTrue StatementExpression MethodInvocation Literal "Result did not contain C.class" MethodInvocation files Literal "C.class" containsKey assertTrue	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public final BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean createNewFile FormalParameter ReferenceType File f FormalParameter BasicType boolean mkdirs IOException LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation f getParentFile IfStatement BinaryOperation && MemberReference mkdirs MethodInvocation ! parent exists BlockStatement StatementExpression MethodInvocation parent mkdirs ReturnStatement MethodInvocation f createNewFile	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier protected FormalParameter BasicType boolean recurse StatementExpression Assignment MemberReference MemberReference recurse =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference project Literal null BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference obj ReturnStatement StatementExpression MethodInvocation project MemberReference obj setProjectReference	0
MethodDeclaration Modifier public final setProperty FormalParameter Modifier final ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference P4CmdOpts MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression Assignment This MemberReference append MemberReference append =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Node node FormalParameter ReferenceType String name IfStatement BinaryOperation instanceof MemberReference node ReferenceType Element BlockStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator element Cast ReferenceType Element MemberReference node ReturnStatement MethodInvocation element MemberReference name getAttribute ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType PlanarImage executeDrawOperation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator op Cast ReferenceType DrawOperation MemberReference instr StatementExpression Assignment MemberReference op MethodInvocation MemberReference op = ReturnStatement MemberReference op ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getURI ReturnStatement MemberReference uri	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry StatementExpression Assignment MemberReference usedMatchingTask Literal true = ReturnStatement SuperMethodInvocation	1
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public stop TryStatement StatementExpression MethodInvocation join CatchClause CatchClauseParameter InterruptedException e TryStatement StatementExpression MethodInvocation join CatchClause CatchClauseParameter InterruptedException e IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation stop TryStatement StatementExpression MethodInvocation err flush CatchClause CatchClauseParameter IOException e TryStatement StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier protected IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "no IfStatement BinaryOperation == MethodInvocation owner getProject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Owner has no project" LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation owner MethodInvocation getProject IfStatement BinaryOperation != MemberReference directory Literal null BlockStatement StatementExpression Assignment MemberReference dir MemberReference directory = LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType LogStreamHandler MemberReference owner MemberReference Project MSG_INFO MemberReference Project MSG_WARN StatementExpression Assignment MemberReference executable ClassCreator ReferenceType Execute MemberReference handler Literal null = StatementExpression MethodInvocation executable MethodInvocation owner getProject setAntRun StatementExpression MethodInvocation executable MemberReference dir setWorkingDirectory	0
MethodDeclaration Modifier public addResource FormalParameter ReferenceType resource StatementExpression MethodInvocation resources MemberReference resource add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MethodInvocation getProject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal has not been set" IfStatement BinaryOperation != MemberReference name Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference value Literal null BinaryOperation == MemberReference ref Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must location or " Literal with the name attribute" MethodInvocation getLocation BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference url Literal null BinaryOperation == MemberReference file Literal null BinaryOperation == MemberReference resource Literal null BinaryOperation == MemberReference env Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal must file, resource or " Literal when not using the " Literal "name attribute" MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference url Literal null BinaryOperation == MemberReference file Literal null BinaryOperation == MemberReference resource Literal null BinaryOperation != MemberReference prefix Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal is only valid when loading from " Literal "a file or resource" MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference value IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation MemberReference file loadFile IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression MethodInvocation MemberReference url IfStatement BinaryOperation != MemberReference resource Literal null BlockStatement StatementExpression MethodInvocation MemberReference resource loadResource IfStatement BinaryOperation != MemberReference env Literal null BlockStatement StatementExpression MethodInvocation MemberReference env IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference ref Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference name MethodInvocation ref MethodInvocation toString MethodInvocation getProject getReferencedObject CatchClause CatchClauseParameter BuildException be IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference name MethodInvocation ref MethodInvocation toString MemberReference getReferencedObject BlockStatement ThrowStatement MemberReference be	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object element FormalParameter ReferenceType Attributes attr LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation attr Literal "id" getValue IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation project MemberReference id MemberReference element	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init	1
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier protected handleOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MethodInvocation redirector getOutputStream Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference output handleOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleOutput	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation redirector MemberReference StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier protected ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attribute must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	0
MethodDeclaration Modifier public ReferenceType ZipShort ReturnStatement MemberReference ID	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation BinaryOperation + Literal value is " MemberReference value log	0
MethodDeclaration ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attribute must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getStyle setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getOutput setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validateAttributes TryStatement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator files Literal null LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator filesList ClassCreator ReferenceType ArrayList IfStatement BinaryOperation != MemberReference srcDir Literal null BlockStatement StatementExpression Assignment MemberReference ds SuperMethodInvocation MemberReference srcDir getDirectoryScanner = StatementExpression Assignment MemberReference files MethodInvocation ds getIncludedFiles = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression MethodInvocation filesList ClassCreator ReferenceType File MemberReference srcDir MemberReference ArraySelector MemberReference i files add ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt StatementExpression Assignment MemberReference ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner = StatementExpression Assignment MemberReference files MethodInvocation ds getIncludedFiles = LocalVariableDeclaration ReferenceType File VariableDeclarator fromDir MethodInvocation fs MethodInvocation getProject getDir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement StatementExpression MethodInvocation filesList ClassCreator ReferenceType File MemberReference fromDir MemberReference ArraySelector MemberReference j files add IfStatement MemberReference ! overwrite BlockStatement LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator filesToRemove ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation filesList iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType File MethodInvocation i next LocalVariableDeclaration ReferenceType File VariableDeclarator newFile ClassCreator ReferenceType File MemberReference destDir MethodInvocation f getName IfStatement MethodInvocation newFile exists BlockStatement StatementExpression MethodInvocation filesToRemove MemberReference f add StatementExpression MethodInvocation filesList MemberReference filesToRemove removeAll ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation filesList iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Cast ReferenceType File MethodInvocation i next StatementExpression MethodInvocation MemberReference file processFile IfStatement MemberReference BlockStatement StatementExpression MethodInvocation System gc CatchClause CatchClauseParameter Exception err StatementExpression MethodInvocation err printStackTrace ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation err getMessage	1
MethodDeclaration Modifier public BasicType int getColumn ReturnStatement MemberReference column	0
MethodDeclaration Modifier public BasicType int selectorCount IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation v size	0
MethodDeclaration Modifier public FormalParameter ReferenceType redirector StatementExpression MethodInvocation MemberReference redirector Literal null	0
MethodDeclaration Modifier private StatementExpression This MemberReference crc MethodInvocation StatementExpression Assignment This MemberReference last Literal - 1 = LocalVariableDeclaration BasicType boolean VariableDeclarator inUse This MemberReference data MemberReference inUse ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 256 BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i inUse Literal false = StatementExpression Assignment This MemberReference BinaryOperation - BinaryOperation * This MemberReference MemberReference BZip2Constants Literal 20 =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal test	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter ReferenceType t IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal target is incompatible with the target attribute" LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation t getName IfStatement MethodInvocation name Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal name must not be empty" StatementExpression MethodInvocation targets MemberReference name add	1
MethodDeclaration Modifier public ReferenceType FileSet LocalVariableDeclaration ReferenceType FileSet VariableDeclarator ClassCreator ReferenceType FileSet StatementExpression MethodInvocation MemberReference add ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Method m FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class FormalParameter ReferenceType Object arg FormalParameter ReferenceType Object StatementExpression MethodInvocation Literal name" MemberReference methodName MethodInvocation m getName assertEquals StatementExpression MethodInvocation Literal type" MemberReference Void TYPE MethodInvocation m getReturnType assertEquals LocalVariableDeclaration ReferenceType Class VariableDeclarator args MethodInvocation m getParameterTypes StatementExpression MethodInvocation Literal Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation Literal MemberReference MemberReference ArraySelector Literal 0 args assertEquals TryStatement StatementExpression MethodInvocation m This ArrayCreator ReferenceType Object ArrayInitializer MemberReference arg invoke CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e CatchClause CatchClauseParameter InvocationTargetException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e TryStatement StatementExpression MethodInvocation m This ArrayCreator ReferenceType Object ArrayInitializer MemberReference invoke StatementExpression MethodInvocation Literal "Should have an exception" fail CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getTargetException StatementExpression MethodInvocation BinaryOperation instanceof MemberReference t ReferenceType ReferenceType ReferenceType AssertionFailedError assertTrue	1
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType rexec BuildException StatementExpression MethodInvocation rexec MemberReference MemberReference echoString	1
MethodDeclaration Modifier private IfStatement BinaryOperation || BinaryOperation == MethodInvocation getProject Literal null BinaryOperation && MethodInvocation isReference BinaryOperation instanceof MethodInvocation MethodInvocation MethodInvocation getProject getReferencedObject ReferenceType ZipFileSet BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType home StatementExpression Assignment This MemberReference home MemberReference home =	0
MethodDeclaration Modifier public BasicType int addEntry FormalParameter ReferenceType entry LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation entries size StatementExpression MethodInvocation entries MemberReference entry addElement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation entry ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j BinaryOperation - MemberReference Literal 1 MemberReference ++ j BlockStatement StatementExpression MethodInvocation entries Literal null addElement IfStatement BinaryOperation instanceof MemberReference entry ReferenceType Utf8CPInfo BlockStatement LocalVariableDeclaration ReferenceType Utf8CPInfo VariableDeclarator Cast ReferenceType Utf8CPInfo MemberReference entry StatementExpression MethodInvocation MethodInvocation getValue ClassCreator ReferenceType Integer MemberReference index put ReturnStatement MemberReference index	1
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String uri StatementExpression Assignment This MemberReference uri MemberReference uri =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference macroDef	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType String elementName LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation project MemberReference parent Literal " doesn't support the \"" MemberReference elementName Literal "\" ThrowStatement ClassCreator ReferenceType UnsupportedElementException MemberReference msg MemberReference elementName	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation Literal "The attribute is It will be removed" MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean isCaseSensitive StatementExpression Assignment This MemberReference isCaseSensitive MemberReference isCaseSensitive =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal name"	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference dynselector Literal null BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation || BinaryOperation == MemberReference classname Literal null BinaryOperation < MethodInvocation classname length Literal 1 BlockStatement StatementExpression MethodInvocation Literal "The classname attribute is required" setError IfStatement BinaryOperation == MemberReference dynselector Literal null BlockStatement StatementExpression MethodInvocation Literal "Internal Error: The custom selector was not created" setError IfStatement BinaryOperation && BinaryOperation instanceof MemberReference dynselector ReferenceType BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Cannot set parameters on custom selector that does not " Literal setError	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType Manifest ReferenceType Section VariableDeclarator mainSection MethodInvocation manifest LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation mainSection Literal getAttributeValue StatementExpression MethodInvocation Literal attribute was not set - " Literal MemberReference classpath assertEquals	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MethodInvocation	0
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar LocalVariableDeclaration BasicType boolean VariableDeclarator f MethodInvocation foo isDirectory IfStatement BinaryOperation == MemberReference f MethodInvocation bar isDirectory BlockStatement ReturnStatement Literal 0 ReturnStatement TernaryExpression MemberReference f Literal 1 Literal - 1	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public final run Exception IfStatement BinaryOperation == MethodInvocation testClassNames size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "No TestCase specified" StatementExpression MethodInvocation connect StatementExpression Assignment MemberReference testResult ClassCreator ReferenceType TestResult = StatementExpression MethodInvocation testResult This StatementExpression MethodInvocation StatementExpression MethodInvocation testResult This IfStatement BinaryOperation != MemberReference testResult Literal null BlockStatement StatementExpression MethodInvocation testResult stop StatementExpression Assignment MemberReference testResult Literal null =	1
MethodDeclaration Modifier public setAddress FormalParameter BasicType boolean address StatementExpression Assignment This MemberReference address MemberReference address =	0
MethodDeclaration Modifier public expectBuildException FormalParameter ReferenceType String target FormalParameter ReferenceType String cause StatementExpression MethodInvocation MemberReference target MemberReference cause Literal null expectSpecificBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType long StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration ReferenceType String FormalParameter ReferenceType classpath StatementExpression MethodInvocation BinaryOperation + Literal "Looking for GenIC class in classpath: " MethodInvocation classpath toString MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator cl MethodInvocation classpath MethodInvocation MemberReference classpath createClassLoader getProject TryStatement StatementExpression MethodInvocation cl MemberReference JonasDeploymentTool GENIC_CLASS loadClass StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Found GenIC class '" MemberReference JonasDeploymentTool GENIC_CLASS Literal "' in classpath." MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference JonasDeploymentTool GENIC_CLASS CatchClause CatchClauseParameter ClassNotFoundException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "GenIC class '" MemberReference JonasDeploymentTool GENIC_CLASS Literal "' not found in classpath." MemberReference Project MSG_VERBOSE log TryStatement StatementExpression MethodInvocation cl MemberReference JonasDeploymentTool OLD_GENIC_CLASS_1 loadClass StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Found GenIC class '" MemberReference JonasDeploymentTool OLD_GENIC_CLASS_1 Literal "' in classpath." MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference JonasDeploymentTool OLD_GENIC_CLASS_1 CatchClause CatchClauseParameter ClassNotFoundException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "GenIC class '" MemberReference JonasDeploymentTool OLD_GENIC_CLASS_1 Literal "' not found in classpath." MemberReference Project MSG_VERBOSE log TryStatement StatementExpression MethodInvocation cl MemberReference JonasDeploymentTool OLD_GENIC_CLASS_2 loadClass StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Found GenIC class '" MemberReference JonasDeploymentTool OLD_GENIC_CLASS_2 Literal "' in classpath." MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference JonasDeploymentTool OLD_GENIC_CLASS_2 CatchClause CatchClauseParameter ClassNotFoundException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "GenIC class '" MemberReference JonasDeploymentTool OLD_GENIC_CLASS_2 Literal "' not found in classpath." MemberReference Project MSG_VERBOSE log ReturnStatement Literal null	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || MemberReference BinaryOperation == MethodInvocation MethodInvocation getProject getDir Literal null BlockStatement TryStatement StatementExpression SuperMethodInvocation execute IfStatement BinaryOperation && MemberReference BinaryOperation != MethodInvocation MethodInvocation getProject getDir Literal null BlockStatement StatementExpression MethodInvocation filesets MemberReference removeElement IfStatement MethodInvocation isValidOs BlockStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator execute MethodInvocation LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cloned Cast ReferenceType Commandline MethodInvocation cmdl clone StatementExpression MethodInvocation cloned MethodInvocation MethodInvocation MethodInvocation getPath MethodInvocation getProject getDir setValue createArgument TryStatement StatementExpression MethodInvocation execute MethodInvocation cloned getCommandline setCommandline StatementExpression MethodInvocation MemberReference execute runExecute CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Execute failed: " MemberReference e MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation logFlush	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String version StatementExpression SuperMethodInvocation MemberReference version	0
MethodDeclaration Modifier public final ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference includesFileList	0
MethodDeclaration Modifier public setDirectory FormalParameter BasicType boolean directory StatementExpression MethodInvocation StatementExpression Assignment This MemberReference directory TernaryExpression MemberReference directory MemberReference Boolean TRUE MemberReference Boolean FALSE =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response	0
MethodDeclaration Modifier protected BasicType boolean LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator action MethodInvocation MethodInvocation getAction getTask ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement MethodInvocation action MemberReference ArraySelector MemberReference i equals BlockStatement StatementExpression Assignment MemberReference valid Literal true = BreakStatement ReturnStatement MemberReference valid	1
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException LocalVariableDeclaration ReferenceType File VariableDeclarator cmdFile MethodInvocation MemberReference cmd MemberReference env createCommandFile LocalVariableDeclaration ReferenceType Process VariableDeclarator p SuperMethodInvocation MemberReference project ArrayCreator ReferenceType String ArrayInitializer MethodInvocation cmdFile getPath MemberReference env MemberReference workingDir exec StatementExpression MethodInvocation MemberReference cmdFile MemberReference p ReturnStatement MemberReference p	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getQName ReturnStatement MemberReference qname	0
MethodDeclaration Modifier public FormalParameter ReferenceType File baseDir StatementExpression Assignment This MemberReference baseDir MemberReference baseDir =	0
MethodDeclaration Modifier public load IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cachefile Literal null MethodInvocation cachefile isFile MethodInvocation cachefile canRead BlockStatement TryStatement LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator bis ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference cachefile StatementExpression MethodInvocation cache MemberReference bis load StatementExpression MethodInvocation bis close CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference cacheDirty Literal false =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing IfStatement BinaryOperation != MethodInvocation MethodInvocation MemberReference name getProperty getProject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Property '" MemberReference name Literal "' already IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing LocalVariableDeclaration Modifier final ReferenceType FileUtils VariableDeclarator fileUtils MethodInvocation FileUtils getFileUtils StatementExpression Assignment MemberReference dir MethodInvocation fileUtils MethodInvocation dir getAbsolutePath normalize = LocalVariableDeclaration ReferenceType File VariableDeclarator currDir MemberReference dir LocalVariableDeclaration ReferenceType String VariableDeclarator dirs ArrayCreator ReferenceType String BinaryOperation + MemberReference Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation + MemberReference Literal 1 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i dirs BinaryOperation + MethodInvocation currDir getAbsolutePath MemberReference File separatorChar = StatementExpression Assignment MemberReference currDir MethodInvocation currDir getParentFile = IfStatement BinaryOperation == MemberReference currDir Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference i Literal 1 = BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator elements MethodInvocation path list LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator element ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pathEntry ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i elements StatementExpression Assignment MemberReference pathEntry MethodInvocation fileUtils MethodInvocation pathEntry getAbsolutePath normalize = LocalVariableDeclaration ReferenceType String VariableDeclarator fullPath MethodInvocation pathEntry getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator relPath Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation <= MemberReference j MemberReference MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dir MemberReference ArraySelector MemberReference j dirs IfStatement MethodInvocation ! fullPath MemberReference dir startsWith BlockStatement ContinueStatement StatementExpression MethodInvocation element Literal 0 setLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 0 BinaryOperation < MemberReference k MemberReference j MemberReference ++ k BlockStatement StatementExpression MethodInvocation element Literal ".." append StatementExpression MethodInvocation element MemberReference File separatorChar append StatementExpression MethodInvocation element MethodInvocation fullPath MethodInvocation dir length substring append StatementExpression Assignment MemberReference relPath MethodInvocation element toString = BreakStatement IfStatement BinaryOperation == MemberReference relPath Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "No suitable path from " MemberReference dir Literal " to " MemberReference fullPath IfStatement BinaryOperation != MemberReference File separatorChar Literal '/' BlockStatement StatementExpression Assignment MemberReference relPath MethodInvocation relPath MemberReference File separatorChar Literal '/' replace = IfStatement MethodInvocation pathEntry isDirectory BlockStatement StatementExpression Assignment MemberReference relPath BinaryOperation + MemberReference relPath Literal '/' = TryStatement StatementExpression Assignment MemberReference relPath MethodInvocation Locator MemberReference relPath encodeURI = CatchClause CatchClauseParameter UnsupportedEncodingException exc ThrowStatement ClassCreator ReferenceType BuildException MemberReference exc StatementExpression MethodInvocation buffer MemberReference relPath append StatementExpression MethodInvocation buffer Literal ' ' append StatementExpression MethodInvocation MethodInvocation MemberReference name MethodInvocation buffer MethodInvocation trim toString setNewProperty getProject	1
MethodDeclaration Modifier public FormalParameter BasicType boolean filtering StatementExpression Assignment This MemberReference filtering MemberReference filtering =	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException IfStatement BinaryOperation == MethodInvocation value length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The value is not a " Literal value for attribute \"" MemberReference Literal "\"" StatementExpression MethodInvocation m MemberReference parent Cast ReferenceType Object ArrayCreator ReferenceType Character ArrayInitializer ClassCreator ReferenceType Character MethodInvocation value Literal 0 charAt invoke	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public synchronized stop StatementExpression Assignment MemberReference stopped Literal true = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String output FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation MethodInvocation Thread currentThread IfStatement BinaryOperation == MemberReference task Literal null BlockStatement StatementExpression MethodInvocation MemberReference output TernaryExpression MemberReference MemberReference MSG_WARN MemberReference MSG_INFO log BlockStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation task MemberReference output handleErrorOutput BlockStatement StatementExpression MethodInvocation task MemberReference output handleOutput	0
MethodDeclaration Modifier public setTaskName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference MemberReference name =	0
MethodDeclaration Modifier protected runExec FormalParameter ReferenceType Execute exe BuildException StatementExpression MethodInvocation MethodInvocation cmdl describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MethodInvocation cmdl getCommandline setCommandline TryStatement StatementExpression MethodInvocation MemberReference exe runExecute CatchClause CatchClauseParameter IOException e IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Execute failed: " MethodInvocation e toString MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Execute failed: " MethodInvocation e toString MemberReference Project MSG_ERR log StatementExpression MethodInvocation logFlush	1
MethodDeclaration Modifier protected FormalParameter ReferenceType TestResultHolder result FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType String name LocalVariableDeclaration BasicType boolean VariableDeclarator fatal BinaryOperation || MemberReference result timedOut MemberReference result crashed LocalVariableDeclaration BasicType boolean VariableDeclarator errorOccurredHere BinaryOperation || BinaryOperation == MemberReference result exitCode MemberReference ERRORS MemberReference fatal LocalVariableDeclaration BasicType boolean VariableDeclarator failureOccurredHere BinaryOperation || BinaryOperation != MemberReference result exitCode MemberReference MemberReference fatal IfStatement BinaryOperation || MemberReference errorOccurredHere MemberReference failureOccurredHere BlockStatement IfStatement BinaryOperation || BinaryOperation && MemberReference errorOccurredHere MethodInvocation test BinaryOperation && MemberReference failureOccurredHere MethodInvocation test BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + MemberReference name Literal " failed" TernaryExpression MemberReference result timedOut Literal " Literal "" TernaryExpression MemberReference result crashed Literal " Literal "" MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference name Literal " TernaryExpression MemberReference result timedOut Literal " Literal "" TernaryExpression MemberReference result crashed Literal " Literal "" MemberReference Project MSG_ERR log IfStatement BinaryOperation && MemberReference errorOccurredHere BinaryOperation != MethodInvocation test Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation test Literal "true" setNewProperty getProject IfStatement BinaryOperation && MemberReference failureOccurredHere BinaryOperation != MethodInvocation test Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation test Literal "true" setNewProperty getProject	1
MethodDeclaration Modifier public ReferenceType ClassFile LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator jarEntry LocalVariableDeclaration ReferenceType ClassFile VariableDeclarator nextElement Literal null TryStatement StatementExpression Assignment MemberReference jarEntry MethodInvocation jarStream getNextEntry = WhileStatement BinaryOperation && BinaryOperation == MemberReference nextElement Literal null BinaryOperation != MemberReference jarEntry Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entryName MethodInvocation jarEntry getName IfStatement BinaryOperation && MethodInvocation ! jarEntry isDirectory MethodInvocation entryName Literal ".class" endsWith BlockStatement LocalVariableDeclaration ReferenceType ClassFile VariableDeclarator javaClass ClassCreator ReferenceType ClassFile StatementExpression MethodInvocation javaClass MemberReference jarStream read StatementExpression Assignment MemberReference nextElement MemberReference javaClass = BlockStatement StatementExpression Assignment MemberReference jarEntry MethodInvocation jarStream getNextEntry = CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation e getMessage LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation e MethodInvocation getName getClass IfStatement BinaryOperation != MemberReference message Literal null BlockStatement StatementExpression Assignment MemberReference text BinaryOperation + Literal ": " MemberReference message += ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Problem reading JAR file: " MemberReference text ReturnStatement MemberReference nextElement	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType File out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier public BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ResourceCollection MethodInvocation MethodInvocation getProject IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation size LocalVariableDeclaration ReferenceType ArchiveScanner VariableDeclarator as Cast ReferenceType ArchiveScanner MethodInvocation MethodInvocation getProject getDirectoryScanner ReturnStatement MethodInvocation as getIncludedFilesCount	1
MethodDeclaration Modifier public FormalParameter BasicType boolean filter StatementExpression Assignment MemberReference filtering MemberReference filter =	0
MethodDeclaration Modifier public FormalParameter ReferenceType RuntimeConfigurable r StatementExpression MethodInvocation children MemberReference r add	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType r StatementExpression MethodInvocation references MemberReference r addElement	0
MethodDeclaration Modifier public ReferenceType String getProperty ReturnStatement MemberReference property	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference classpath MethodInvocation FileUtils MemberReference s =	0
MethodDeclaration Modifier public ReferenceType File createTempFile FormalParameter ReferenceType String prefix FormalParameter ReferenceType String suffix FormalParameter ReferenceType File FormalParameter BasicType boolean deleteOnExit LocalVariableDeclaration ReferenceType File VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator parent TernaryExpression BinaryOperation == MemberReference Literal null MethodInvocation System Literal "java.io.tmpdir" getProperty MethodInvocation getPath LocalVariableDeclaration ReferenceType VariableDeclarator fmt ClassCreator ReferenceType Literal SynchronizedStatement MemberReference rand DoStatement MethodInvocation result exists BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType File MemberReference parent BinaryOperation + BinaryOperation + MemberReference prefix MethodInvocation fmt MethodInvocation Math MethodInvocation rand nextInt abs format MemberReference suffix = IfStatement MemberReference deleteOnExit BlockStatement StatementExpression MethodInvocation result deleteOnExit ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public final execute BuildException IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "A source resource is required." IfStatement MethodInvocation ! src isExists BlockStatement IfStatement BinaryOperation instanceof MemberReference src ReferenceType BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to find resource " MemberReference src MemberReference Project MSG_WARN log ReturnStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Source resource does not " MemberReference src LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator bis Literal null LocalVariableDeclaration ReferenceType Reader VariableDeclarator instream Literal null LocalVariableDeclaration ReferenceType ByteArrayInputStream VariableDeclarator tis Literal null TryStatement StatementExpression Assignment MemberReference bis ClassCreator ReferenceType BufferedInputStream MethodInvocation src getInputStream = IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference instream ClassCreator ReferenceType InputStreamReader MemberReference bis = BlockStatement StatementExpression Assignment MemberReference instream ClassCreator ReferenceType InputStreamReader MemberReference bis MemberReference encoding = LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator crh ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation crh MemberReference instream setPrimaryReader StatementExpression MethodInvocation crh MemberReference filterChains setFilterChains StatementExpression MethodInvocation crh MethodInvocation getProject setProject StatementExpression Assignment MemberReference instream MethodInvocation crh getAssembledReader = LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation crh MemberReference instream readFully IfStatement BinaryOperation != MemberReference text Literal null BlockStatement IfStatement MethodInvocation ! text Literal "\n" endsWith BlockStatement StatementExpression Assignment MemberReference text BinaryOperation + MemberReference text Literal "\n" = IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference tis ClassCreator ReferenceType ByteArrayInputStream MethodInvocation text getBytes = BlockStatement StatementExpression Assignment MemberReference tis ClassCreator ReferenceType ByteArrayInputStream MethodInvocation text MemberReference encoding getBytes = LocalVariableDeclaration Modifier final ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props MemberReference tis load LocalVariableDeclaration ReferenceType Property VariableDeclarator propertyTask ClassCreator ReferenceType Property StatementExpression MethodInvocation propertyTask This bindToOwner StatementExpression MethodInvocation propertyTask MemberReference props CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Unable to load file: " MethodInvocation ioe toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference bis close StatementExpression MethodInvocation FileUtils MemberReference tis close	1
MethodDeclaration Modifier protected BasicType boolean ReturnStatement This MemberReference validate	0
MethodDeclaration Modifier private processFile FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File eachFile FormalParameter ReferenceType File targetFolder IOException LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation eachFile getName LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator localFile ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MemberReference filename IfStatement MethodInvocation ! MemberReference filename shouldProcess BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation MemberReference eachFile getFullRepositoryPath MemberReference Project MSG_INFO log ReturnStatement IfStatement This MethodInvocation BlockStatement IfStatement MethodInvocation ! targetFolder exists BlockStatement IfStatement MethodInvocation targetFolder mkdirs BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating folder: " MemberReference targetFolder log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to create local folder " MemberReference targetFolder LocalVariableDeclaration BasicType boolean VariableDeclarator success MethodInvocation eachFile MemberReference localFile MethodInvocation This MemberReference lockStatus This ! MemberReference Literal true Literal false IfStatement MemberReference success BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal out " MethodInvocation MemberReference eachFile MemberReference localFile log BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator checkout Literal true LocalVariableDeclaration BasicType int VariableDeclarator fileStatus MethodInvocation eachFile getStatus IfStatement BinaryOperation || BinaryOperation == MemberReference fileStatus MemberReference Status BinaryOperation == MemberReference fileStatus MemberReference Status UNKNOWN BlockStatement StatementExpression MethodInvocation eachFile Literal true Literal true updateStatus StatementExpression Assignment MemberReference fileStatus MethodInvocation eachFile getStatus = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MethodInvocation eachFile toString Literal " has status of " MethodInvocation Status MemberReference fileStatus name MemberReference Project MSG_DEBUG log SwitchStatement MemberReference fileStatus SwitchStatementCase MemberReference Status MemberReference Status StatementExpression MethodInvocation BinaryOperation + Literal "Checking " MethodInvocation MemberReference eachFile log BreakStatement SwitchStatementCase IfStatement BinaryOperation && MethodInvocation BinaryOperation != MemberReference fileStatus MemberReference Status BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Forced checkout of " MethodInvocation MemberReference eachFile Literal " over status " MethodInvocation Status MemberReference fileStatus name log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation MemberReference eachFile getFullRepositoryPath Literal " - " MethodInvocation Status MemberReference fileStatus name log StatementExpression Assignment MemberReference checkout Literal false = IfStatement MemberReference checkout BlockStatement IfStatement MethodInvocation ! targetFolder exists BlockStatement IfStatement MethodInvocation targetFolder mkdirs BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating folder: " MemberReference targetFolder log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to create local folder " MemberReference targetFolder StatementExpression MethodInvocation eachFile This MemberReference lockStatus This ! MemberReference This MemberReference Literal false checkout	1
MethodDeclaration Modifier public BasicType boolean containsKey FormalParameter ReferenceType Object value StatementExpression MethodInvocation initAll ReturnStatement SuperMethodInvocation MemberReference value containsKey	1
MethodDeclaration Modifier public FormalParameter ReferenceType File srcDir StatementExpression Assignment This MemberReference srcDir MemberReference srcDir =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType File fromFile FormalParameter ReferenceType File toFile Exception LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation fromFile getCanonicalPath LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation toFile getCanonicalPath LocalVariableDeclaration ReferenceType String VariableDeclarator fromPathStack MethodInvocation MemberReference getPathStack LocalVariableDeclaration ReferenceType String VariableDeclarator toPathStack MethodInvocation MemberReference getPathStack IfStatement BinaryOperation && BinaryOperation < Literal 0 MemberReference toPathStack length BinaryOperation < Literal 0 MemberReference fromPathStack length BlockStatement IfStatement MemberReference ! ArraySelector Literal 0 MethodInvocation MemberReference ArraySelector Literal 0 toPathStack equals fromPathStack BlockStatement ReturnStatement MethodInvocation MethodInvocation Arrays MemberReference toPathStack asList getPath BlockStatement ReturnStatement MethodInvocation MethodInvocation Arrays MemberReference toPathStack asList getPath LocalVariableDeclaration BasicType int VariableDeclarator minLength MethodInvocation Math MemberReference fromPathStack length MemberReference toPathStack length min LocalVariableDeclaration BasicType int VariableDeclarator same Literal 1 ForStatement ForControl BinaryOperation < MemberReference same MemberReference minLength MemberReference ++ same BlockStatement IfStatement MemberReference ! ArraySelector MemberReference same MethodInvocation MemberReference ArraySelector MemberReference same toPathStack equals fromPathStack BlockStatement BreakStatement LocalVariableDeclaration ReferenceType List VariableDeclarator relativePathStack ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference same BinaryOperation < MemberReference i MemberReference fromPathStack length MemberReference ++ i BlockStatement StatementExpression MethodInvocation relativePathStack Literal ".." add ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference same BinaryOperation < MemberReference i MemberReference toPathStack length MemberReference ++ i BlockStatement StatementExpression MethodInvocation relativePathStack MemberReference ArraySelector MemberReference i toPathStack add ReturnStatement MethodInvocation MemberReference relativePathStack getPath	1
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createArgument ReturnStatement MethodInvocation createArgument	0
MethodDeclaration Modifier public ReferenceType String replaceProperties FormalParameter ReferenceType String value BuildException LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation This ReturnStatement MethodInvocation Literal null MemberReference value Literal null replaceProperties	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is a expectLog	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public write FormalParameter BasicType byte b IOException StatementExpression MethodInvocation MemberReference b Literal 0 MemberReference b length write	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference fork	0
MethodDeclaration Modifier protected ReferenceType String getRecursive ReturnStatement TernaryExpression MemberReference MemberReference Literal ""	0
MethodDeclaration Modifier private BasicType boolean FormalParameter BasicType char c ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator d Literal 0 BinaryOperation < MemberReference d MethodInvocation length MemberReference ++ d BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference d charAt MemberReference c BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation StatementExpression MethodInvocation cmd Literal setExecutable LocalVariableDeclaration ReferenceType ExecuteJava VariableDeclarator ej ClassCreator ReferenceType ExecuteJava StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand ReturnStatement BinaryOperation == MethodInvocation ej MethodInvocation fork Literal 0	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String pattern IfStatement BinaryOperation == MemberReference regexp Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference pattern = StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression MethodInvocation regexp MemberReference pattern	0
MethodDeclaration Modifier public ReferenceType String getOperation ReturnStatement MemberReference operation	0
MethodDeclaration Modifier public mkdir FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression Literal MethodInvocation MemberReference equals "" Literal null MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference reset MemberReference b =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean full StatementExpression Assignment MemberReference MemberReference full =	0
MethodDeclaration Modifier private ReferenceType Folder BuildException LocalVariableDeclaration ReferenceType Folder VariableDeclarator Literal null TryStatement LocalVariableDeclaration ReferenceType View VariableDeclarator MethodInvocation StatementExpression Assignment MemberReference MethodInvocation MethodInvocation This MemberReference = IfStatement This MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation getServer LocalVariableDeclaration ReferenceType String VariableDeclarator props ArrayCreator ReferenceType String ArrayInitializer MemberReference FILE_NAME MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference LocalVariableDeclaration BasicType int VariableDeclarator depth TernaryExpression This MethodInvocation isRecursive Literal - 1 Literal 0 StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference FILE getServer MemberReference props MemberReference depth CatchClause CatchClauseParameter BuildException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator MethodInvocation This MemberReference append MethodInvocation Literal " in at " append MethodInvocation MethodInvocation getURL append ReferenceType StringBuffer Literal "Unable to find root folder " IfStatement BinaryOperation != This MemberReference label Literal null BlockStatement StatementExpression MethodInvocation msg MethodInvocation This MemberReference label append Literal " using specified label " append IfStatement BinaryOperation != This MemberReference asOfDate Literal null BlockStatement StatementExpression MethodInvocation msg MethodInvocation This MemberReference asOfDate append Literal " as of specified date " append ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation msg toString MemberReference e IfStatement BinaryOperation == Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to find root folder " This MemberReference Literal " in at " MethodInvocation getURL ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType String getMessage ReturnStatement MemberReference message	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier private synchronized ReferenceType String FormalParameter ReferenceType String line LocalVariableDeclaration ReferenceType String VariableDeclarator beginToken MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator endToken MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation line MemberReference beginToken indexOf IfStatement BinaryOperation > MemberReference index Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator tokens MethodInvocation TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator token Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator value Literal null WhileStatement BinaryOperation > MemberReference index Literal - 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endIndex MethodInvocation line MemberReference endToken BinaryOperation + BinaryOperation + MemberReference index MethodInvocation beginToken length Literal 1 indexOf IfStatement BinaryOperation == MemberReference endIndex Literal - 1 BlockStatement BreakStatement StatementExpression Assignment MemberReference token MethodInvocation line BinaryOperation + MemberReference index MethodInvocation beginToken length MemberReference endIndex substring = StatementExpression MethodInvocation b MethodInvocation line MemberReference i MemberReference index substring append IfStatement MethodInvocation tokens MemberReference token containsKey BlockStatement StatementExpression Assignment MemberReference value Cast ReferenceType String MethodInvocation tokens MemberReference token get = IfStatement BinaryOperation && MemberReference recurse MethodInvocation ! value MemberReference token equals BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference value MemberReference token = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference beginToken MemberReference token MemberReference endToken Literal " -> " MemberReference value MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation b MemberReference value append StatementExpression Assignment MemberReference i BinaryOperation + BinaryOperation + BinaryOperation + MemberReference index MethodInvocation beginToken length MethodInvocation token length MethodInvocation endToken length = BlockStatement StatementExpression MethodInvocation b MemberReference beginToken append StatementExpression Assignment MemberReference i BinaryOperation + MemberReference index MethodInvocation beginToken length = StatementExpression Assignment MemberReference index MethodInvocation line MemberReference beginToken MemberReference i indexOf = StatementExpression MethodInvocation b MethodInvocation line MemberReference i substring append ReturnStatement MethodInvocation b toString CatchClause CatchClauseParameter e ReturnStatement MemberReference line BlockStatement ReturnStatement MemberReference line	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean isExists ReturnStatement MethodInvocation MethodInvocation isExists getResource	0
MethodDeclaration Modifier public BasicType int ReturnStatement Literal 0	0
MethodDeclaration Modifier private FormalParameter ReferenceType Node n FormalParameter ReferenceType String s StatementExpression Assignment MemberReference s MethodInvocation MethodInvocation MemberReference s replaceProperties getProject = IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null MethodInvocation ! s MethodInvocation Literal "" equals trim BlockStatement LocalVariableDeclaration ReferenceType Text VariableDeclarator t MethodInvocation doc MethodInvocation s trim StatementExpression MethodInvocation n MemberReference t	0
MethodDeclaration Modifier public BasicType boolean add FormalParameter ReferenceType Process process SynchronizedStatement MemberReference processes IfStatement BinaryOperation == MethodInvocation processes size Literal 0 BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation processes MemberReference process addElement ReturnStatement MethodInvocation processes MemberReference process contains	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public synchronized ReferenceType Object clone BuildException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator fs Cast ReferenceType SuperMethodInvocation clone StatementExpression Assignment MemberReference fs filters Cast ReferenceType Vector MethodInvocation MethodInvocation clone getFilters = StatementExpression MethodInvocation fs MethodInvocation getProject setProject ReturnStatement MemberReference fs CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType Throwable VariableDeclarator error MethodInvocation event getException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator message ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation == MemberReference error Literal null BlockStatement StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation message MethodInvocation append BlockStatement StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation message MethodInvocation append StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation || BinaryOperation <= MemberReference Project MSG_VERBOSE MemberReference msgOutputLevel BinaryOperation instanceof MemberReference error ReferenceType BuildException BlockStatement StatementExpression MethodInvocation message MethodInvocation StringUtils MemberReference error append BlockStatement StatementExpression MethodInvocation message MethodInvocation MemberReference lSep append MethodInvocation error toString append StatementExpression MethodInvocation message MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation message Literal "Total time: " append StatementExpression MethodInvocation message MethodInvocation BinaryOperation - MethodInvocation System currentTimeMillis MemberReference startTime append LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation message toString IfStatement BinaryOperation == MemberReference error Literal null BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference out MemberReference Project MSG_VERBOSE printMessage BlockStatement StatementExpression MethodInvocation MemberReference msg MemberReference err MemberReference Project MSG_ERR printMessage StatementExpression MethodInvocation MemberReference msg log	1
MethodDeclaration Modifier public IOException TryStatement StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "Should trigger once this bug is fixed. {@since fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier protected scanDir FormalParameter ReferenceType File srcDir FormalParameter ReferenceType String files ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File MemberReference srcDir MemberReference ArraySelector MemberReference i files IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal ".java" endsWith files BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filePath MethodInvocation srcFile getPath LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation filePath BinaryOperation + MethodInvocation srcDir MethodInvocation length getPath Literal 1 BinaryOperation - MethodInvocation filePath length Literal MethodInvocation length ".java" substring StatementExpression Assignment MemberReference className MethodInvocation MemberReference className = LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator info Cast ReferenceType ClassFileInfo MethodInvocation classFileInfoMap MemberReference className get IfStatement BinaryOperation == MemberReference info Literal null BlockStatement StatementExpression MethodInvocation outOfDateClasses MemberReference className MemberReference className put BlockStatement IfStatement BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation lastModified BlockStatement StatementExpression MethodInvocation outOfDateClasses MemberReference className MemberReference className put	1
MethodDeclaration Modifier public ReferenceType Hashtable SynchronizedStatement MemberReference taskClassDefinitions SynchronizedStatement MemberReference antTypeTable IfStatement MemberReference rebuildTaskClassDefinitions BlockStatement StatementExpression MethodInvocation taskClassDefinitions clear ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation antTypeTable MethodInvocation iterator keySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation i next LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation antTypeTable MemberReference name IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ContinueStatement IfStatement ClassReference MethodInvocation MemberReference clazz isAssignableFrom ReferenceType Task BlockStatement StatementExpression MethodInvocation taskClassDefinitions MemberReference name MethodInvocation antTypeTable MemberReference name put StatementExpression Assignment MemberReference rebuildTaskClassDefinitions Literal false = ReturnStatement MemberReference taskClassDefinitions	1
MethodDeclaration Modifier private FormalParameter ReferenceType SAXParser saxParser BuildException LocalVariableDeclaration ReferenceType IPlanetEjbc VariableDeclarator ejbc ClassCreator ReferenceType IPlanetEjbc MemberReference MemberReference MemberReference dest MethodInvocation MethodInvocation toString MemberReference saxParser StatementExpression MethodInvocation ejbc MemberReference StatementExpression MethodInvocation ejbc MemberReference debug IfStatement BinaryOperation != MemberReference iashome Literal null BlockStatement StatementExpression MethodInvocation ejbc MemberReference iashome TryStatement StatementExpression MethodInvocation ejbc execute CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "An IOException occurred while trying to read the XML " Literal file: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter SAXException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "A SAXException occurred while trying to read the XML " Literal file: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "An exception occurred while trying to run the ejbc " Literal " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public synchronized ReferenceType IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator patterns ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference patterns addElement StatementExpression Assignment MemberReference ds Literal null = ReturnStatement MemberReference patterns	0
MethodDeclaration Modifier protected connect IOException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal to " MemberReference host Literal " on port " MemberReference port Literal log StatementExpression Assignment MemberReference clientSocket ClassCreator ReferenceType Socket MemberReference host MemberReference port = StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation clientSocket getInputStream MethodInvocation clientSocket getOutputStream = StatementExpression ClassCreator MethodInvocation start ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String remote StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference remote	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression MethodInvocation MemberReference	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal IfStatement MethodInvocation ! f exists BlockStatement StatementExpression MethodInvocation Literal a directory failed" fail	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation System.out Literal "foo" println	0
MethodDeclaration Modifier public FormalParameter ReferenceType f StatementExpression MethodInvocation MemberReference f addElement	0
MethodDeclaration Modifier public IOException StatementExpression Assignment MemberReference ClassCreator ReferenceType File Literal = StatementExpression MethodInvocation MethodInvocation ! exists assertTrue StatementExpression MethodInvocation FILE_UTILS MemberReference createNewFile StatementExpression MethodInvocation MethodInvocation exists assertTrue	0
MethodDeclaration Modifier public tearDown TryStatement StatementExpression SuperMethodInvocation tearDown CatchClause CatchClauseParameter Exception e	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Task LocalVariableDeclaration ReferenceType List VariableDeclarator tasks ClassCreator ReferenceType ArrayList MethodInvocation children size LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation children iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Task BlockStatement StatementExpression MethodInvocation tasks MemberReference o add ReturnStatement Cast ReferenceType Task MethodInvocation tasks ArrayCreator ReferenceType Task MethodInvocation tasks size toArray	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MemberReference evt addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType File getFile FormalParameter ReferenceType String name FileNotFoundException LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation MemberReference name getResource getClass IfStatement BinaryOperation == MemberReference url Literal null BlockStatement ThrowStatement ClassCreator ReferenceType FileNotFoundException BinaryOperation + BinaryOperation + Literal "Unable to load '" MemberReference name Literal "' from classpath" ReturnStatement ClassCreator ReferenceType File MethodInvocation FILE_UTILS MethodInvocation url toExternalForm fromURI	0
MethodDeclaration Modifier public FormalParameter BasicType long StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Locator locator StatementExpression Assignment This MemberReference locator MemberReference locator =	0
MethodDeclaration Modifier protected ReferenceType Hashtable ReturnStatement MemberReference properties	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference formats	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ArchiveFileSet zfs StatementExpression SuperMethodInvocation MemberReference zfs IfStatement BinaryOperation instanceof MemberReference zfs ReferenceType TarFileSet BlockStatement LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator tfs Cast ReferenceType TarFileSet MemberReference zfs StatementExpression MethodInvocation tfs MemberReference StatementExpression MethodInvocation tfs MemberReference StatementExpression MethodInvocation tfs MemberReference uid StatementExpression MethodInvocation tfs MemberReference gid	1
MethodDeclaration Modifier private StatementExpression Assignment MemberReference outOfDateClasses ClassCreator ReferenceType Hashtable = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference srcPathList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator srcDir MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i srcPathList getProject IfStatement MethodInvocation srcDir exists BlockStatement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds This MethodInvocation MemberReference srcDir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression MethodInvocation MemberReference srcDir MemberReference files scanDir IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator classpathDepsEnum MethodInvocation keys WhileStatement MethodInvocation classpathDepsEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation classpathDepsEnum nextElement IfStatement MethodInvocation outOfDateClasses MemberReference className containsKey BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator info Cast ReferenceType ClassFileInfo MethodInvocation classFileInfoMap MemberReference className get IfStatement BinaryOperation != MemberReference info Literal null BlockStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencies Cast ReferenceType Hashtable MethodInvocation MemberReference className get ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e2 MethodInvocation dependencies elements MethodInvocation e2 hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator Cast ReferenceType File MethodInvocation e2 nextElement IfStatement BinaryOperation > MethodInvocation lastModified MethodInvocation lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MemberReference className Literal " is out of date with to " MemberReference MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation outOfDateClasses MemberReference className MemberReference className put BreakStatement	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType Pattern includes IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment This MemberReference includes Literal null = BlockStatement StatementExpression Assignment This MemberReference includes ArrayCreator ReferenceType Pattern MemberReference includes length = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern StatementExpression Assignment MemberReference pattern MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation Literal '/' MemberReference File separatorChar replace MethodInvocation Literal '\\' MemberReference File separatorChar replace includes = IfStatement MethodInvocation pattern MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference pattern Literal "**" += StatementExpression Assignment This MemberReference includes ArraySelector MemberReference i ClassCreator ReferenceType Pattern = StatementExpression This MemberReference includes ArraySelector MemberReference i MethodInvocation MemberReference pattern StatementExpression This MemberReference includes ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation includes	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement BinaryOperation != MemberReference input Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The and " Literal cannot both be specified" StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null Literal MethodInvocation MemberReference equals "" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must not be empty" StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement MemberReference BlockStatement StatementExpression Assignment This MemberReference verbosity MemberReference Project MSG_INFO = BlockStatement StatementExpression Assignment This MemberReference verbosity MemberReference Project MSG_VERBOSE =	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String className LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation entries size BinaryOperation == MemberReference index Literal - 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation entries MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element IfStatement MethodInvocation MethodInvocation MemberReference className equals getClassName BlockStatement StatementExpression Assignment MemberReference index MemberReference i = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference helper	0
MethodDeclaration Modifier public setState FormalParameter BasicType int state StatementExpression Assignment This MemberReference state MemberReference state =	0
MethodDeclaration Modifier public FormalParameter ReferenceType RuntimeConfigurable r IfStatement BinaryOperation != MemberReference r attributeMap Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator keySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation i next IfStatement BinaryOperation || BinaryOperation == MemberReference attributeMap Literal null BinaryOperation == MethodInvocation attributeMap MemberReference name get Literal null BlockStatement StatementExpression MethodInvocation MemberReference name Cast ReferenceType String MethodInvocation MemberReference name get setAttribute StatementExpression Assignment MemberReference polyType TernaryExpression BinaryOperation == MemberReference polyType Literal null MemberReference r polyType MemberReference polyType = IfStatement BinaryOperation != MemberReference r children Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator newChildren ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation newChildren MemberReference r children addAll IfStatement BinaryOperation != MemberReference children Literal null BlockStatement StatementExpression MethodInvocation newChildren MemberReference children addAll StatementExpression Assignment MemberReference children MemberReference newChildren = IfStatement BinaryOperation != MemberReference r characters Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference characters Literal null BinaryOperation == MethodInvocation characters MethodInvocation trim MethodInvocation length toString Literal 0 BlockStatement StatementExpression Assignment MemberReference characters ClassCreator ReferenceType StringBuffer MethodInvocation toString =	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment MemberReference orb MemberReference =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir FormalParameter ReferenceType String filename IfStatement BinaryOperation || BinaryOperation != MethodInvocation filename Literal "." lastIndexOf MethodInvocation filename Literal ".class" lastIndexOf BinaryOperation != MethodInvocation filename BinaryOperation + MemberReference Literal "$" indexOf Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType String substring LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal debug log to contain \"" MemberReference substring Literal "\" log was \"" MemberReference Literal "\"" BinaryOperation >= MethodInvocation MemberReference substring indexOf Literal 0 assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String val StatementExpression MethodInvocation buf MemberReference val append	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public setHtml FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference html MemberReference enable =	0
MethodDeclaration Modifier public ReferenceType JUnitTaskMirror ReferenceType FormalParameter ReferenceType JUnitTest test FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean logTestListenerEvents FormalParameter ReferenceType AntClassLoader classLoader ReturnStatement ClassCreator ReferenceType MemberReference test MemberReference MemberReference MemberReference MemberReference MemberReference logTestListenerEvents MemberReference classLoader	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf MethodInvocation Literal getManifest StatementExpression MethodInvocation MemberReference mf assertNotNull StatementExpression MethodInvocation MethodInvocation Manifest MemberReference mf assertEquals	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private ReferenceType BuildException FormalParameter ReferenceType String attrs ReturnStatement MethodInvocation MemberReference attrs Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation project Literal MemberReference setProperty	0
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public ReferenceType String getMethodName ReturnStatement MemberReference methodName	0
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attributes must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg	0
MethodDeclaration FormalParameter Modifier final ReferenceType File file FormalParameter Modifier final ReferenceType Manifest manifest BuildException LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator available MethodInvocation Extension MemberReference manifest LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator required MethodInvocation Extension MemberReference manifest LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator options MethodInvocation Extension MemberReference manifest LocalVariableDeclaration Modifier final ReferenceType Specification VariableDeclarator MethodInvocation MemberReference manifest IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == Literal 0 MemberReference available length BinaryOperation == Literal 0 MemberReference required length BinaryOperation == Literal 0 MemberReference options length BinaryOperation == Literal 0 MemberReference length BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "File: " MemberReference file LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation message length StatementExpression MethodInvocation MemberReference size StatementExpression MethodInvocation System.out MemberReference message println StatementExpression MethodInvocation MemberReference size IfStatement BinaryOperation != Literal 0 MemberReference available length BlockStatement StatementExpression MethodInvocation System.out Literal By Library:" println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference available length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i available StatementExpression MethodInvocation System.out MethodInvocation extension toString println IfStatement BinaryOperation != Literal 0 MemberReference required length BlockStatement StatementExpression MethodInvocation System.out Literal By Library:" println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference required length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i required StatementExpression MethodInvocation System.out MethodInvocation extension toString println IfStatement BinaryOperation != Literal 0 MemberReference options length BlockStatement StatementExpression MethodInvocation System.out Literal that will be used by Library if println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference options length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i options StatementExpression MethodInvocation System.out MethodInvocation extension toString println IfStatement BinaryOperation != Literal 0 MemberReference length BlockStatement StatementExpression MethodInvocation System.out Literal By Library:" println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Specification VariableDeclarator specification MemberReference ArraySelector MemberReference i StatementExpression MethodInvocation MemberReference specification	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType Resource Literal "foo" StatementExpression MethodInvocation Literal "should have caught UnsupportedOperationException" fail CatchClause CatchClauseParameter UnsupportedOperationException e	1
MethodDeclaration Modifier public static ReferenceType Extension FormalParameter Modifier final ReferenceType Manifest manifest ReturnStatement MethodInvocation MemberReference manifest MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression MethodInvocation buf Literal append BlockStatement StatementExpression MethodInvocation buf MemberReference name append IfStatement BinaryOperation || BinaryOperation != MemberReference ifCond Literal null BinaryOperation != MemberReference unlessCond Literal null BlockStatement StatementExpression MethodInvocation buf Literal ":" append LocalVariableDeclaration ReferenceType String VariableDeclarator connector Literal "" IfStatement BinaryOperation != MemberReference ifCond Literal null BlockStatement StatementExpression MethodInvocation buf Literal append StatementExpression MethodInvocation buf MemberReference ifCond append StatementExpression Assignment MemberReference connector Literal ";" = IfStatement BinaryOperation != MemberReference unlessCond Literal null BlockStatement StatementExpression MethodInvocation buf MemberReference connector append StatementExpression MethodInvocation buf Literal append StatementExpression MethodInvocation buf MemberReference unlessCond append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public log FormalParameter ReferenceType String message FormalParameter BasicType int loglevel IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference loglevel log BlockStatement IfStatement BinaryOperation > MemberReference loglevel MemberReference Project MSG_WARN BlockStatement StatementExpression MethodInvocation System.out MemberReference message println BlockStatement StatementExpression MethodInvocation System.err MemberReference message println	1
MethodDeclaration Modifier protected ReferenceType File FormalParameter ReferenceType String subpath ReturnStatement ClassCreator ReferenceType File MemberReference MemberReference subpath	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType File descriptorFile IOException LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference descriptorFile = LocalVariableDeclaration ReferenceType ObjectInputStream VariableDeclarator ois ClassCreator ReferenceType ObjectInputStream MemberReference fis LocalVariableDeclaration ReferenceType DeploymentDescriptor VariableDeclarator dd Cast ReferenceType DeploymentDescriptor MethodInvocation ois StatementExpression MethodInvocation fis close LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation dd MethodInvocation Literal '.' Literal '/' replace Literal ".java" LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation dd MethodInvocation Literal '.' Literal '/' replace Literal ".java" LocalVariableDeclaration ReferenceType String VariableDeclarator primaryKeyClassPath Literal null IfStatement BinaryOperation instanceof MemberReference dd ReferenceType BlockStatement StatementExpression Assignment MemberReference primaryKeyClassPath Cast ReferenceType MemberReference dd = StatementExpression Assignment MemberReference primaryKeyClassPath BinaryOperation + MethodInvocation primaryKeyClassPath Literal '.' Literal '/' replace Literal ".java" = LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference sourceDirectory MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference sourceDirectory MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator primaryKeyClassSource Literal null IfStatement BinaryOperation != MemberReference primaryKeyClassPath Literal null BlockStatement StatementExpression Assignment MemberReference primaryKeyClassSource ClassCreator ReferenceType File MemberReference sourceDirectory MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator beanClassBase MethodInvocation dd MethodInvocation Literal '.' Literal '/' replace LocalVariableDeclaration ReferenceType File VariableDeclarator ejbImplentationClass ClassCreator ReferenceType File MemberReference generatedFilesDirectory BinaryOperation + MemberReference beanClassBase Literal LocalVariableDeclaration ReferenceType File VariableDeclarator homeImplementationClass ClassCreator ReferenceType File MemberReference generatedFilesDirectory BinaryOperation + MemberReference beanClassBase Literal LocalVariableDeclaration ReferenceType File VariableDeclarator beanStubClass ClassCreator ReferenceType File MemberReference generatedFilesDirectory BinaryOperation + MemberReference beanClassBase Literal IfStatement BinaryOperation || BinaryOperation || MethodInvocation ! ejbImplentationClass exists MethodInvocation ! homeImplementationClass exists MethodInvocation ! beanStubClass exists BlockStatement ReturnStatement Literal true LocalVariableDeclaration BasicType long VariableDeclarator classModificationTime MethodInvocation ejbImplentationClass lastModified IfStatement BinaryOperation < MethodInvocation homeImplementationClass lastModified MemberReference classModificationTime BlockStatement StatementExpression Assignment MemberReference classModificationTime MethodInvocation homeImplementationClass lastModified = IfStatement BinaryOperation < MethodInvocation beanStubClass lastModified MemberReference classModificationTime BlockStatement StatementExpression Assignment MemberReference classModificationTime MethodInvocation beanStubClass lastModified = IfStatement BinaryOperation || BinaryOperation || BinaryOperation > MethodInvocation descriptorFile lastModified MemberReference classModificationTime BinaryOperation > MethodInvocation lastModified MemberReference classModificationTime BinaryOperation > MethodInvocation lastModified MemberReference classModificationTime BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation != MemberReference primaryKeyClassSource Literal null BinaryOperation > MethodInvocation primaryKeyClassSource lastModified MemberReference classModificationTime BlockStatement ReturnStatement Literal true CatchClause CatchClauseParameter Throwable StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "Exception occurred reading " MethodInvocation descriptorFile getName Literal " - println ReturnStatement Literal true IfStatement BinaryOperation != MemberReference fis Literal null BlockStatement StatementExpression MethodInvocation fis close ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator classnames TernaryExpression MemberReference ArrayCreator ReferenceType String MemberReference ArrayCreator ReferenceType String MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator remotePkg BinaryOperation + MethodInvocation remote getPackageName Literal "." LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator remoteClass MethodInvocation remote getClassName LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator homePkg BinaryOperation + MethodInvocation home getPackageName Literal "." LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator homeClass MethodInvocation home getClassName LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator implPkg BinaryOperation + MethodInvocation implementation getPackageName Literal "." LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator implFullClass MethodInvocation implementation LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference implPkg Literal MemberReference implFullClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference implPkg Literal MemberReference implFullClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference implPkg Literal MemberReference implFullClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference remotePkg Literal MemberReference remoteClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference homePkg Literal MemberReference homeClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference remotePkg Literal MemberReference remoteClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference homePkg Literal MemberReference homeClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference remotePkg Literal MemberReference remoteClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference homePkg Literal MemberReference homeClass = IfStatement MemberReference ! BlockStatement ReturnStatement MemberReference classnames StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "org.omg.stub." MemberReference remotePkg Literal "_" MemberReference remoteClass Literal = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "org.omg.stub." MemberReference homePkg Literal "_" MemberReference homeClass Literal = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "org.omg.stub." MemberReference remotePkg Literal MemberReference remoteClass Literal = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "org.omg.stub." MemberReference homePkg Literal MemberReference homeClass Literal = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference remotePkg Literal MemberReference remoteClass = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ index classnames BinaryOperation + BinaryOperation + MemberReference homePkg Literal MemberReference homeClass = ReturnStatement MemberReference classnames	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal "foo" StatementExpression MethodInvocation Literal "nothing set" MethodInvocation ! hasBeenSet assertTrue StatementExpression MethodInvocation Literal null StatementExpression MethodInvocation Literal has not been set" MethodInvocation ! hasBeenSet assertTrue StatementExpression MethodInvocation Literal "foo" StatementExpression MethodInvocation Literal has been set" MethodInvocation hasBeenSet assertTrue StatementExpression MethodInvocation Literal null StatementExpression MethodInvocation MethodInvocation ! hasBeenSet assertTrue StatementExpression MethodInvocation Literal "baz" StatementExpression MethodInvocation Literal "set MethodInvocation hasBeenSet assertTrue	1
MethodDeclaration Modifier public ReferenceType String getValue FormalParameter ReferenceType Task owner BuildException IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No name for the define MethodInvocation owner getLocation IfStatement MethodInvocation ! MemberReference owner BlockStatement ReturnStatement Literal null ReturnStatement MemberReference name	1
MethodDeclaration Modifier synchronized protected ReferenceType Class loadClass FormalParameter ReferenceType String classname FormalParameter BasicType boolean resolve ClassNotFoundException LocalVariableDeclaration ReferenceType Class VariableDeclarator theClass MethodInvocation MemberReference classname IfStatement BinaryOperation != MemberReference theClass Literal null BlockStatement ReturnStatement MemberReference theClass IfStatement MethodInvocation MemberReference classname BlockStatement StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname findClass = IfStatement MemberReference resolve BlockStatement StatementExpression MethodInvocation MemberReference theClass resolveClass ReturnStatement MemberReference theClass BlockStatement ReturnStatement SuperMethodInvocation MemberReference classname MemberReference resolve loadClass	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference includes	0
MethodDeclaration Modifier public FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference ClassCreator ReferenceType =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal instance failed" Literal Project MethodInvocation project assertEquals	0
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId SAXException IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference publicId MemberReference systemId resolveEntity StatementExpression MethodInvocation dieOnCircularReference StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal '" MemberReference publicId Literal "': '" MemberReference systemId Literal "'" MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource MethodInvocation MethodInvocation MemberReference publicId MemberReference systemId resolveEntity getCatalogResolver IfStatement BinaryOperation == MemberReference inputSource Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "No matching catalog entry found, parser will use: '" MemberReference systemId Literal "'" MemberReference Project MSG_DEBUG log ReturnStatement MemberReference inputSource	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String getValue FormalParameter ReferenceType File file ReturnStatement Literal	0
MethodDeclaration * a line of input and if an error */ Modifier private processLine LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation line toString StatementExpression MethodInvocation task MemberReference s MemberReference msgOutputLevel log StatementExpression Assignment MemberReference line ClassCreator ReferenceType StringBuffer =	0
MethodDeclaration Modifier public static ReferenceType File FormalParameter ReferenceType String resource LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassReference MethodInvocation MemberReference resource getResource ReferenceType IfStatement BinaryOperation == MemberReference url Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator u MethodInvocation url toString IfStatement MethodInvocation u Literal "jar:file:" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation u Literal "!" indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator jarName MethodInvocation u Literal 9 MemberReference substring ReturnStatement ClassCreator ReferenceType File ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference jarName IfStatement MethodInvocation u Literal "file:" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator tail MethodInvocation u MemberReference resource indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator dirName MethodInvocation u Literal 5 MemberReference tail substring ReturnStatement ClassCreator ReferenceType File ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference dirName ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte Literal 1 IfStatement BinaryOperation == MethodInvocation project MemberReference buffer Literal 0 Literal 1 Literal - 1 BlockStatement ReturnStatement Literal - 1 ReturnStatement MemberReference ArraySelector Literal 0 buffer	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String FormalParameter ReferenceType String fieldName FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation entries size BinaryOperation == MemberReference index Literal - 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation entries MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element IfStatement BinaryOperation && BinaryOperation && MethodInvocation MethodInvocation MemberReference equals MethodInvocation MethodInvocation MemberReference fieldName equals MethodInvocation MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference index MemberReference i = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public FormalParameter ReferenceType Map dictionary ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation dictionary MethodInvocation iterator keySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation i next TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator val MethodInvocation dictionary MemberReference key get StatementExpression MethodInvocation MemberReference key MemberReference val CatchClause CatchClauseParameter BuildException ex	1
MethodDeclaration Modifier public FormalParameter ReferenceType String dateFormat StatementExpression SuperMethodInvocation ClassCreator ReferenceType MemberReference dateFormat	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType long skip StatementExpression Assignment This MemberReference skip MemberReference skip =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference f Literal " not created" MethodInvocation f exists assertTrue StatementExpression MethodInvocation BinaryOperation + MemberReference MemberReference MethodInvocation MemberReference f assertEquals	0
MethodDeclaration Modifier public ReferenceType FileResource IfStatement MethodInvocation ! hasNext BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException ReturnStatement ClassCreator ReferenceType FileResource MemberReference basedir MemberReference ArraySelector MemberReference ++ pos files	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal is invalid - no colon on header Literal "Invalid expectBuildExceptionContaining	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html" StatementExpression MethodInvocation Literal "No index.html Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation helper MemberReference r setClasspathRef	0
MethodDeclaration Modifier public FormalParameter ReferenceType String cond StatementExpression Assignment MemberReference unlessCond MemberReference cond =	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal not specified" StatementExpression Assignment MemberReference name MethodInvocation ProjectHelper MethodInvocation getURI MemberReference name genComponentName = LocalVariableDeclaration ReferenceType MyAntTypeDefinition VariableDeclarator def ClassCreator ReferenceType MyAntTypeDefinition This StatementExpression MethodInvocation def MemberReference name setName StatementExpression MethodInvocation def ClassReference ReferenceType LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MethodInvocation getProject getComponentHelper StatementExpression MethodInvocation helper MemberReference def StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference name MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier private FormalParameter ReferenceType String target StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f1 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal IfStatement BinaryOperation && MethodInvocation f1 exists MethodInvocation f1 isDirectory BlockStatement StatementExpression MethodInvocation Literal "The prefix attribute is not fail LocalVariableDeclaration ReferenceType File VariableDeclarator f2 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal IfStatement BinaryOperation && MethodInvocation f2 exists MethodInvocation f2 isDirectory BlockStatement StatementExpression MethodInvocation Literal "The prefix attribute is not fail	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation StatementExpression Assignment MemberReference eof Literal true =	1
MethodDeclaration Modifier private FormalParameter ReferenceType String target FormalParameter BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator messages ArrayCreator ReferenceType String ArrayInitializer Literal configuration" Literal system key = default Literal system key = BinaryOperation + Literal server time ID = " MethodInvocation MethodInvocation Literal getProperty getProject Literal system key = Literal default date format = Literal server language code = LocalVariableDeclaration ReferenceType LogCounter VariableDeclarator counter ClassCreator ReferenceType LogCounter ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference messages length MemberReference ++ i BlockStatement StatementExpression MethodInvocation counter MemberReference ArraySelector MemberReference i messages addLogMessageToSearch StatementExpression MethodInvocation MethodInvocation MemberReference counter getProject StatementExpression MethodInvocation MethodInvocation MemberReference target executeTarget getProject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference messages length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference target Literal " MemberReference i MemberReference ArraySelector MemberReference i MethodInvocation counter MemberReference ArraySelector MemberReference i messages assertEquals	1
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private BuildException LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator thisReferences Cast ReferenceType Hashtable MethodInvocation MethodInvocation MethodInvocation clone getProject LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator MethodInvocation newProject LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e IfStatement BinaryOperation > MethodInvocation references size Literal 0 BlockStatement ForStatement ForControl Assignment MemberReference e MethodInvocation references elements = MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ref Cast ReferenceType MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator refid MethodInvocation ref getRefId IfStatement BinaryOperation == MemberReference refid Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "the refid attribute is required" Literal " for reference IfStatement MethodInvocation ! thisReferences MemberReference refid containsKey BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal project doesn't contain any reference '" MemberReference refid Literal "'" MemberReference Project MSG_WARN log ContinueStatement StatementExpression MethodInvocation thisReferences MemberReference refid remove LocalVariableDeclaration ReferenceType String VariableDeclarator toRefid MethodInvocation ref IfStatement BinaryOperation == MemberReference toRefid Literal null BlockStatement StatementExpression Assignment MemberReference toRefid MemberReference refid = StatementExpression MethodInvocation MemberReference refid MemberReference toRefid IfStatement MemberReference BlockStatement ForStatement ForControl Assignment MemberReference e MethodInvocation thisReferences keys = MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation MemberReference key containsKey BlockStatement ContinueStatement StatementExpression MethodInvocation MemberReference key MemberReference key StatementExpression MethodInvocation newProject MethodInvocation getProject	1
MethodDeclaration Modifier public synchronized setIncludes FormalParameter ReferenceType String includes IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MemberReference includes setIncludes StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ReferenceType ZipFile VariableDeclarator zf Literal null TryStatement StatementExpression Assignment MemberReference zf ClassCreator ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ReferenceType ZipFile MethodInvocation MethodInvocation Literal getProject = LocalVariableDeclaration ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ReferenceType ZipEntry VariableDeclarator ze MethodInvocation zf Literal getEntry StatementExpression MethodInvocation BinaryOperation | MemberReference Literal MethodInvocation ze assertEquals IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement StatementExpression MethodInvocation zf close	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public test2 LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v StatementExpression Assignment MemberReference MemberReference v =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String arguments LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator args ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference arguments length MemberReference ++ i BlockStatement StatementExpression MethodInvocation args MethodInvocation Literal " " append MemberReference ArraySelector MemberReference i arguments append LocalVariableDeclaration ReferenceType String VariableDeclarator command IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference command Literal "" = BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation toString MemberReference File separator Literal "bin" MemberReference File separator = StatementExpression Assignment MemberReference command Literal " += StatementExpression MethodInvocation BinaryOperation + MemberReference command MemberReference args log TryStatement LocalVariableDeclaration ReferenceType Process VariableDeclarator p MethodInvocation Runtime MethodInvocation BinaryOperation + MemberReference command MemberReference args exec getRuntime LocalVariableDeclaration ReferenceType RedirectOutput VariableDeclarator output ClassCreator ReferenceType RedirectOutput MethodInvocation p getInputStream LocalVariableDeclaration ReferenceType RedirectOutput VariableDeclarator error ClassCreator ReferenceType RedirectOutput MethodInvocation p getErrorStream StatementExpression MethodInvocation output start StatementExpression MethodInvocation error start StatementExpression MethodInvocation p waitFor StatementExpression MethodInvocation p CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Literal "An IOException has occurred while trying to execute log StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter InterruptedException e	1
MethodDeclaration Modifier public setValue FormalParameter Modifier final ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public BasicType int selectorCount ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal "address"	0
MethodDeclaration * The pattern to in the in * of the * if no is * @param replace the replace */ Modifier public FormalParameter ReferenceType String replace IfStatement BinaryOperation != MemberReference subs Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal one expression is " Literal StatementExpression Assignment MemberReference subs ClassCreator ReferenceType = StatementExpression MethodInvocation subs MemberReference replace	0
MethodDeclaration Modifier public FormalParameter BasicType int height StatementExpression Assignment This MemberReference height MemberReference height =	0
MethodDeclaration Modifier protected ReferenceType Map FormalParameter ReferenceType Resource FormalParameter ReferenceType File toDir ReturnStatement MethodInvocation MemberReference MemberReference toDir MethodInvocation	0
MethodDeclaration Modifier protected BasicType boolean shouldProcess FormalParameter ReferenceType String pName LocalVariableDeclaration BasicType boolean VariableDeclarator includeIt MethodInvocation MethodInvocation MemberReference pName LocalVariableDeclaration BasicType boolean VariableDeclarator excludeIt MethodInvocation MethodInvocation MemberReference pName ReturnStatement BinaryOperation && MemberReference includeIt MemberReference ! excludeIt	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference resolvemode	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier private FormalParameter ReferenceType e StatementExpression MethodInvocation Literal MethodInvocation e getName assertEquals StatementExpression MethodInvocation Literal "address" MethodInvocation e getAddress assertEquals	0
MethodDeclaration Modifier private synchronized ReferenceType String FormalParameter ReferenceType String line FormalParameter ReferenceType String parent BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator beginToken MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator endToken MethodInvocation IfStatement BinaryOperation == MemberReference recurseDepth Literal 0 BlockStatement StatementExpression Assignment MemberReference passedTokens ClassCreator ReferenceType Vector = StatementExpression MemberReference ++ recurseDepth IfStatement BinaryOperation && MethodInvocation passedTokens MemberReference parent contains MemberReference ! duplicateToken BlockStatement StatementExpression Assignment MemberReference duplicateToken Literal true = StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal loop in tokens : " MethodInvocation passedTokens toString Literal token : " MemberReference beginToken MemberReference parent MemberReference endToken Literal " from " MemberReference beginToken MethodInvocation passedTokens MethodInvocation toString MemberReference endToken println StatementExpression MemberReference -- recurseDepth ReturnStatement MemberReference parent StatementExpression MethodInvocation passedTokens MemberReference parent addElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MemberReference line IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation value MemberReference beginToken indexOf Literal - 1 MemberReference ! duplicateToken BinaryOperation == MemberReference recurseDepth Literal 1 BlockStatement StatementExpression Assignment MemberReference passedTokens Literal null = IfStatement MemberReference duplicateToken BlockStatement IfStatement BinaryOperation > MethodInvocation passedTokens size Literal 0 BlockStatement StatementExpression Assignment MemberReference value Cast ReferenceType String MethodInvocation passedTokens BinaryOperation - MethodInvocation passedTokens size Literal 1 remove = IfStatement BinaryOperation == MethodInvocation passedTokens size Literal 0 BlockStatement StatementExpression Assignment MemberReference value BinaryOperation + BinaryOperation + MemberReference beginToken MemberReference value MemberReference endToken = StatementExpression Assignment MemberReference duplicateToken Literal false = StatementExpression MemberReference -- recurseDepth ReturnStatement MemberReference value	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment This MemberReference MemberReference c =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String resource StatementExpression Assignment This MemberReference resource MemberReference resource =	0
MethodDeclaration Modifier public static ReferenceType String getPath FormalParameter ReferenceType List ReturnStatement MethodInvocation MemberReference Literal '/' getPath	0
MethodDeclaration Modifier private FormalParameter ReferenceType String type FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t SynchronizedStatement MemberReference wri IfStatement BinaryOperation != MemberReference test Literal null BlockStatement StatementExpression MethodInvocation MemberReference test StatementExpression MethodInvocation failed MemberReference test MemberReference Boolean TRUE put StatementExpression MethodInvocation wri MemberReference type println StatementExpression MethodInvocation wri MethodInvocation t getMessage println LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference t StatementExpression MethodInvocation wri MemberReference print StatementExpression MethodInvocation wri Literal "" println	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException LocalVariableDeclaration ReferenceType File VariableDeclarator commandDir MemberReference workingDir IfStatement BinaryOperation == MemberReference workingDir Literal null BlockStatement IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression Assignment MemberReference commandDir MethodInvocation project = BlockStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec LocalVariableDeclaration Modifier final BasicType int VariableDeclarator preCmdLength Literal 7 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation commandDir getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator newcmd ArrayCreator ReferenceType String BinaryOperation + MemberReference cmd length MemberReference preCmdLength StatementExpression Assignment MemberReference ArraySelector Literal 0 newcmd Literal "cmd" = StatementExpression Assignment MemberReference ArraySelector Literal 1 newcmd Literal = StatementExpression Assignment MemberReference ArraySelector Literal 2 newcmd MethodInvocation Literal 0 Literal 2 substring = StatementExpression Assignment MemberReference ArraySelector Literal 3 newcmd Literal "&&" = StatementExpression Assignment MemberReference ArraySelector Literal 4 newcmd Literal = StatementExpression Assignment MemberReference ArraySelector Literal 5 newcmd MethodInvocation Literal 2 substring = StatementExpression Assignment MemberReference ArraySelector Literal 6 newcmd Literal "&&" = StatementExpression MethodInvocation System MemberReference cmd Literal 0 MemberReference newcmd MemberReference preCmdLength MemberReference cmd length arraycopy ReturnStatement MethodInvocation MemberReference project MemberReference newcmd MemberReference env exec	1
MethodDeclaration Modifier public BasicType boolean eval IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation == MemberReference count Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ReturnStatement MethodInvocation when ClassCreator MethodInvocation MemberReference count compareTo ReferenceType Integer MethodInvocation rc size evaluate	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File remotefile FormalParameter ReferenceType java ReferenceType io ReferenceType File localFile LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MethodInvocation Literal " " append MethodInvocation MemberReference remotefile getFullRepositoryPath append IfStatement BinaryOperation == Literal null MemberReference localFile BlockStatement StatementExpression MethodInvocation sb MethodInvocation remotefile getFullName append BlockStatement StatementExpression MethodInvocation sb MemberReference localFile append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration processUncontrolledItems BuildException IfStatement This MethodInvocation isActive BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e This MethodInvocation keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator local Cast ReferenceType java ReferenceType io ReferenceType File MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Item VariableDeclarator Cast ReferenceType Item This MethodInvocation MemberReference local get IfStatement MethodInvocation local isFile BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File VariableDeclarator remoteFile Cast ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File MemberReference TryStatement StatementExpression MethodInvocation MemberReference remoteFile MemberReference local list CatchClause CatchClauseParameter IOException ie ThrowStatement ClassCreator ReferenceType BuildException Literal in MemberReference ie StatementExpression Assignment MemberReference e This MethodInvocation keys = WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator local Cast ReferenceType java ReferenceType io ReferenceType File MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Item VariableDeclarator Cast ReferenceType Item This MethodInvocation MemberReference local get IfStatement MethodInvocation local isDirectory BlockStatement LocalVariableDeclaration ReferenceType Folder VariableDeclarator folder Cast ReferenceType Folder MemberReference IfStatement MethodInvocation isRecursive BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal folder " MethodInvocation folder Literal " from " MethodInvocation local getAbsoluteFile log LocalVariableDeclaration ReferenceType UnmatchedFileMap VariableDeclarator ClassCreator MethodInvocation MemberReference local MemberReference folder init ReferenceType StatementExpression MethodInvocation processUncontrolledItems	1
MethodDeclaration Modifier public setDefault FormalParameter ReferenceType String defaultTarget StatementExpression Assignment This MemberReference defaultTarget MemberReference defaultTarget =	1
MethodDeclaration Modifier public FormalParameter ReferenceType ps StatementExpression MethodInvocation MemberReference ps addElement	0
MethodDeclaration Modifier private static add FormalParameter ReferenceType File baseDir FormalParameter ReferenceType String name FormalParameter ReferenceType Map m IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation MemberReference baseDir ArrayCreator ReferenceType String ArrayInitializer MemberReference name MemberReference m add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation Literal Literal assertEquals	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "should have a parser exception" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + MethodInvocation e MethodInvocation toString getLocation Literal " should refer to BinaryOperation > MethodInvocation e MethodInvocation toString MethodInvocation Literal indexOf getLocation Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType location StatementExpression MethodInvocation BinaryOperation + Literal "adding schema " MemberReference location MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation location LocalVariableDeclaration ReferenceType VariableDeclarator old Cast ReferenceType MethodInvocation MethodInvocation location getNamespace get IfStatement BinaryOperation && BinaryOperation != MemberReference old Literal null MethodInvocation ! old MemberReference location equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference location StatementExpression MethodInvocation MethodInvocation location getNamespace MemberReference location put	0
MethodDeclaration Modifier public BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getName ReturnStatement BinaryOperation * MemberReference MAGIC TernaryExpression BinaryOperation == MemberReference name Literal null MemberReference MethodInvocation name hashCode	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object obj FormalParameter BasicType boolean same IfStatement BinaryOperation == MemberReference obj This BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! obj MethodInvocation MethodInvocation getClass equals getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType VariableDeclarator other Cast ReferenceType MemberReference obj IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement BinaryOperation == MemberReference other name Literal null IfStatement MethodInvocation ! name MemberReference other name equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MethodInvocation other getLocation Literal null MethodInvocation other MethodInvocation MethodInvocation getLocation equals getLocation MemberReference ! same BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference text Literal null BlockStatement IfStatement BinaryOperation != MemberReference other text Literal null BlockStatement ReturnStatement Literal false BlockStatement IfStatement MethodInvocation ! text MemberReference other text equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation getURI Literal null MethodInvocation MethodInvocation Literal "" equals getURI MethodInvocation MethodInvocation MemberReference ProjectHelper ANT_CORE_URI equals getURI BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation other getURI Literal null MethodInvocation other MethodInvocation Literal "" equals getURI MethodInvocation other MethodInvocation MemberReference ProjectHelper ANT_CORE_URI equals getURI BlockStatement ReturnStatement Literal false BlockStatement IfStatement MethodInvocation ! MethodInvocation MethodInvocation other getURI equals getURI BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! MemberReference other BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! attributes MemberReference other attributes equals BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! elements MemberReference other elements equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType File manifestFile IfStatement MethodInvocation ! manifestFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal file: " MemberReference manifestFile Literal " does not exist." MethodInvocation getLocation StatementExpression Assignment This MemberReference manifestFile MemberReference manifestFile =	0
MethodDeclaration Modifier private FormalParameter ReferenceType File file FormalParameter ReferenceType String attributeName IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Required attribute " MemberReference attributeName Literal " not set"	0
MethodDeclaration * Execute the task by a new The command will block * it To if the process was or use * method of the watchdog * @param commandline the commandline for forked * @param watchdog the watchdog in of the test if * exceeds a amount of be * @return the result of running the * @throws BuildException in of */ Modifier public BasicType int executeAsForked FormalParameter ReferenceType CommandlineJava commandline FormalParameter ReferenceType watchdog BuildException StatementExpression Assignment MemberReference runtimeClasses ClassCreator ReferenceType MethodInvocation getProject = StatementExpression MethodInvocation Literal StatementExpression MethodInvocation createClasspath IfStatement BinaryOperation > MethodInvocation MethodInvocation toString MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "-classpath" setValue MemberReference commandline createJvmarg StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation toString setValue MemberReference commandline createJvmarg IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation Execute getProcEnvironment LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation v elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation s Literal startsWith BlockStatement StatementExpression MethodInvocation commandline MethodInvocation createPath MethodInvocation ClassCreator ReferenceType MethodInvocation getProject MethodInvocation s Literal MethodInvocation length substring append MethodInvocation getProject createClasspath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Implicitly adding " MemberReference runtimeClasses Literal " to CLASSPATH" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation commandline MethodInvocation createPath MethodInvocation MemberReference runtimeClasses append MethodInvocation getProject createClasspath IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation outputFile getPath setValue createArgument IfStatement BinaryOperation != MethodInvocation getSourcespath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sP MethodInvocation MethodInvocation list getSourcespath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference sP length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i sP IfStatement BinaryOperation || MethodInvocation ! f exists MethodInvocation ! f isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation f getPath Literal "\" does not represent a valid" Literal " directory. JDepend Literal " fail." StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation f getPath setValue createArgument IfStatement BinaryOperation != MethodInvocation getClassespath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cP MethodInvocation MethodInvocation list getClassespath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cP length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i cP IfStatement MethodInvocation ! f exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation f getPath Literal "\" does not represent a valid" Literal " file or directory. JDepend Literal " fail." StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation f getPath setValue createArgument LocalVariableDeclaration ReferenceType Execute VariableDeclarator execute ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN MemberReference watchdog StatementExpression MethodInvocation execute MethodInvocation commandline getCommandline setCommandline IfStatement BinaryOperation != MethodInvocation getDir Literal null BlockStatement StatementExpression MethodInvocation execute MethodInvocation getDir setWorkingDirectory StatementExpression MethodInvocation execute MethodInvocation getProject setAntRun IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Output to be stored in " MethodInvocation MethodInvocation getPath log StatementExpression MethodInvocation MethodInvocation commandline describeCommand MemberReference Project MSG_VERBOSE log TryStatement ReturnStatement MethodInvocation execute execute CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal fork failed." MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier protected setUp StatementExpression Assignment MemberReference dispatcher ClassCreator ReferenceType = StatementExpression Assignment MemberReference recorder ClassCreator ReferenceType = StatementExpression MethodInvocation dispatcher MemberReference recorder	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference evt LocalVariableDeclaration BasicType float VariableDeclarator time BinaryOperation / BinaryOperation - MethodInvocation evt MethodInvocation Literal StatementExpression MethodInvocation MemberReference MethodInvocation Float MemberReference time toString setAttribute StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier protected saveProperties FormalParameter ReferenceType Hashtable allProps FormalParameter ReferenceType OutputStream os IOException BuildException LocalVariableDeclaration Modifier final ReferenceType List VariableDeclarator keyList ClassCreator ReferenceType ArrayList MethodInvocation allProps keySet StatementExpression MethodInvocation Collections MemberReference keyList sort LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties MethodDeclaration Modifier public ReferenceType Enumeration keys ReturnStatement MethodInvocation CollectionUtils MethodInvocation keyList iterator MethodDeclaration Modifier public ReferenceType Set entrySet LocalVariableDeclaration ReferenceType Set VariableDeclarator result SuperMethodInvocation entrySet IfStatement MethodInvocation JavaEnvUtils BlockStatement LocalVariableDeclaration ReferenceType TreeSet VariableDeclarator t ClassCreator ReferenceType TreeSet ClassCreator ReferenceType Comparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String Cast ReferenceType Map ReferenceType Entry MemberReference o1 LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String Cast ReferenceType Map ReferenceType Entry MemberReference o2 ReturnStatement MethodInvocation MemberReference compareTo StatementExpression MethodInvocation t MemberReference result addAll StatementExpression Assignment MemberReference result MemberReference t = ReturnStatement MemberReference result ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation keyList size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation keyList MethodInvocation toString MemberReference i get LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation allProps MethodInvocation toString MemberReference name get StatementExpression MethodInvocation props MemberReference name MemberReference value setProperty IfStatement Literal MethodInvocation MemberReference format equals "text" BlockStatement StatementExpression MethodInvocation MemberReference props MemberReference os Literal "Ant properties" IfStatement Literal MethodInvocation MemberReference format equals "xml" BlockStatement StatementExpression MethodInvocation MemberReference props MemberReference os	1
MethodDeclaration Modifier static ReferenceType FTPClient FormalParameter ReferenceType FTPClient client FormalParameter ReferenceType task StatementExpression MethodInvocation task Literal configuration" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator config LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation task IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null Literal ! MethodInvocation MemberReference equals "" BlockStatement StatementExpression Assignment MemberReference config ClassCreator ReferenceType MemberReference = StatementExpression MethodInvocation task BinaryOperation + Literal system key = " MemberReference MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression Assignment MemberReference config ClassCreator ReferenceType = StatementExpression MethodInvocation task Literal system key = default MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation task IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation config MemberReference StatementExpression MethodInvocation task BinaryOperation + Literal default date format = " MemberReference MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation task IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation config MemberReference StatementExpression MethodInvocation task BinaryOperation + Literal recent date format = " MemberReference MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation task IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation config MemberReference StatementExpression MethodInvocation task BinaryOperation + Literal server language code = " MemberReference MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation task IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation config MemberReference StatementExpression MethodInvocation task BinaryOperation + Literal server time ID = " MemberReference MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation task IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation config MemberReference StatementExpression MethodInvocation task BinaryOperation + Literal short names = " MemberReference MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation client MemberReference config ReturnStatement MemberReference client	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference echoString MemberReference b =	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference server Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Specified" IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation != MemberReference password Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Specified" IfStatement BinaryOperation && BinaryOperation == MemberReference password Literal null BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Specified" LocalVariableDeclaration ReferenceType VariableDeclarator rexec Literal null TryStatement StatementExpression Assignment MemberReference rexec ClassCreator ReferenceType = TryStatement StatementExpression MethodInvocation rexec MemberReference server MemberReference port connect CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Can't connect to " MemberReference server IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference password Literal null BinaryOperation != MemberReference command Literal null BinaryOperation == MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation rexec MemberReference MemberReference password MemberReference command rexec BlockStatement StatementExpression MethodInvocation MemberReference rexec StatementExpression MethodInvocation rexec MemberReference CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Error command" MemberReference e IfStatement BinaryOperation && BinaryOperation != MemberReference rexec Literal null MethodInvocation rexec BlockStatement TryStatement StatementExpression MethodInvocation rexec disconnect CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error from " MemberReference server	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType AntFilterReader StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public final execute BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is required" IfStatement BinaryOperation == MemberReference password Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is required" StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference password MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference passFile MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer Literal null TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation passFile exists BlockStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference passFile = LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation reader readLine = Literal null BlockStatement IfStatement MethodInvocation ! line MemberReference startsWith BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference StringUtils LINE_SEP append MemberReference line append LocalVariableDeclaration ReferenceType String VariableDeclarator pwdfile BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation buf toString MemberReference Literal " A" MethodInvocation MemberReference password StatementExpression MethodInvocation BinaryOperation + Literal "Writing -> " MemberReference pwdfile MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference passFile = StatementExpression MethodInvocation writer MemberReference pwdfile println CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement TryStatement StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference writer Literal null BlockStatement StatementExpression MethodInvocation writer close	1
MethodDeclaration Modifier public IfStatement BinaryOperation && MethodInvocation MemberReference BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public IfStatement MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils BlockStatement StatementExpression MethodInvocation System.out Literal "Test with characters skipped pre println ReturnStatement StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Project project FormalParameter ReferenceType String parentUri FormalParameter ReferenceType Object parent FormalParameter ReferenceType String elementName FormalParameter ReferenceType UnknownElement ue LocalVariableDeclaration ReferenceType NestedCreator VariableDeclarator nc MethodInvocation MemberReference project MemberReference parentUri MemberReference parent MemberReference elementName MemberReference ue ReturnStatement ClassCreator ReferenceType MemberReference project MemberReference parent MemberReference nc	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration * Set the class name of the adapter * An adapter class is used to proxy * It is used if * class is not assignable * the class, or if the * class is not * @param adapter the name of the adapter */ Modifier public FormalParameter ReferenceType String adapter StatementExpression Assignment This MemberReference adapter MemberReference adapter =	0
MethodDeclaration Modifier public ReferenceType Task getTask IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement ReturnStatement Cast ReferenceType Task MemberReference realThing ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType src IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath MemberReference src = BlockStatement StatementExpression MethodInvocation classpath MemberReference src append	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType ClassCreator ReferenceType Integer Literal 99 MemberReference StatementExpression MethodInvocation dispatcher MemberReference evt StatementExpression MethodInvocation MemberReference evt MethodInvocation Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String outputEncoding StatementExpression Assignment This MemberReference outputEncoding MemberReference outputEncoding =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Commandline FormalParameter ReferenceType javah LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation javah createArgument IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation javah createArgument IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation javah setPath createArgument IfStatement MethodInvocation javah BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MethodInvocation javah BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MethodInvocation javah BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement BinaryOperation && MethodInvocation javah MethodInvocation ! javah BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal only available in old mode." MethodInvocation javah getLocation IfStatement MethodInvocation javah BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation javah getProject IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation javah append StatementExpression Assignment MemberReference MethodInvocation Literal "ignore" = IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference setPath createArgument StatementExpression MethodInvocation cmd MethodInvocation javah StatementExpression MethodInvocation javah MemberReference cmd ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Map VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation ih getAttributes WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Class VariableDeclarator Cast ReferenceType Class MethodInvocation MemberReference name get StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal for " MemberReference name Literal " in MemberReference assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "Type of " MemberReference name MemberReference MethodInvocation ih MemberReference name assertEquals StatementExpression MethodInvocation MemberReference name remove StatementExpression MethodInvocation Literal "name" remove StatementExpression MethodInvocation Literal "Found MethodInvocation isEmpty assertTrue	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference uid	0
MethodDeclaration flush IOException StatementExpression MethodInvocation process StatementExpression MethodInvocation writer flush	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object value ReturnStatement MethodInvocation MemberReference value contains	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "Missing expectBuildExceptionContaining StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression MethodInvocation ClassCreator ReferenceType Float MethodInvocation cpStream readFloat setValue	1
MethodDeclaration Modifier public ReferenceType createArgument ReturnStatement This MethodInvocation Literal false createArgument	0
MethodDeclaration Modifier private checkConfiguration BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "The standard EJB descriptor must be specified using " Literal "the attribute." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation || MethodInvocation exists MethodInvocation isFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "The standard EJB descriptor (" MemberReference Literal ") was not found or isn't a file." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "The XML descriptor must be specified Literal " the attribute." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation || MethodInvocation exists MethodInvocation isFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "The XML descriptor (" MemberReference Literal ") was not found or isn't a file." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "The destination directory must be specified using " Literal "the attribute." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation || MethodInvocation dest exists MethodInvocation dest isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "The destination directory (" MemberReference dest Literal ") was not " Literal "found or isn't a directory." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference iashome Literal null MethodInvocation iashome isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "If is specified, it must be a valid " Literal (it was set to " MemberReference iashome Literal ")." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier private static FormalParameter ReferenceType CommandlineJava command FormalParameter ReferenceType String arg LocalVariableDeclaration ReferenceType Commandline ReferenceType VariableDeclarator argument StatementExpression Assignment MemberReference argument MethodInvocation command = StatementExpression MethodInvocation argument MemberReference arg setValue	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation MethodInvocation Literal "Using MemberReference Project MSG_VERBOSE log getRmic LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation setupRmicCommand LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer BinaryOperation + BinaryOperation + Literal "Cannot use as it" Literal " is not available. Literal " of " ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ", " append StatementExpression MethodInvocation buf MemberReference ArraySelector MemberReference i append StatementExpression MethodInvocation buf BinaryOperation + Literal " have been found. A common is to set Literal " environment variable or append ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation buf toString MethodInvocation MethodInvocation getLocation getRmic StatementExpression MethodInvocation cmd MethodInvocation c getName setExecutable IfStatement MethodInvocation ! c MethodInvocation MemberReference ArraySelector BinaryOperation - MemberReference length Literal 1 equals getName BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation MethodInvocation MethodInvocation Commandline MemberReference cmd describeCommand log getRmic LocalVariableDeclaration ReferenceType ExecuteJava VariableDeclarator ej ClassCreator ReferenceType ExecuteJava StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand ReturnStatement BinaryOperation == MethodInvocation ej MethodInvocation getRmic fork Literal 0	1
MethodDeclaration Modifier public FormalParameter ReferenceType List commandList StatementExpression MethodInvocation MethodInvocation Literal "Applying MemberReference Project MSG_DEBUG log getProject LocalVariableDeclaration ReferenceType VariableDeclarator clause MethodInvocation IfStatement MethodInvocation Boolean.TRUE MemberReference clause equals BlockStatement StatementExpression MethodInvocation MethodInvocation Literal system MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation commandList Literal add IfStatement MethodInvocation MemberReference clause equals BlockStatement StatementExpression MethodInvocation MethodInvocation Literal system MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation commandList Literal add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "adding " MemberReference arg MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation commandList MemberReference arg add	1
MethodDeclaration Modifier public BasicType int read java.io.IOException ReturnStatement TernaryExpression BinaryOperation > MemberReference Literal 0 MemberReference ArraySelector MemberReference -- MethodInvocation in read	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement This MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType AsiExtraField VariableDeclarator a ClassCreator ReferenceType AsiExtraField StatementExpression MethodInvocation a Literal 0123 setMode StatementExpression MethodInvocation Literal file" Literal MethodInvocation a getMode assertEquals StatementExpression MethodInvocation a Literal true setDirectory StatementExpression MethodInvocation Literal "directory" Literal MethodInvocation a getMode assertEquals StatementExpression MethodInvocation a Literal "test" StatementExpression MethodInvocation Literal link" Literal MethodInvocation a getMode assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType String user StatementExpression Assignment This MemberReference user MemberReference user =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Text text IfStatement BinaryOperation != This MemberReference text Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one text element IfStatement BinaryOperation == MethodInvocation text getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the text element needed a attribute" ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation attributes iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute Cast ReferenceType Attribute MethodInvocation i next IfStatement MethodInvocation text MethodInvocation MethodInvocation attribute getName equals getName BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "the name \"" MethodInvocation text getName Literal "\" is already used as an attribute" StatementExpression Assignment This MemberReference text MemberReference text = StatementExpression Assignment This MemberReference textName MethodInvocation text getName =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType AntXMLContext context StatementExpression MethodInvocation context MethodInvocation context getImplicitTarget	1
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType String namespace IfStatement BinaryOperation == MemberReference namespace Literal null BlockStatement StatementExpression Assignment This MemberReference namespace Literal null = BlockStatement StatementExpression Assignment This MemberReference namespace TernaryExpression BinaryOperation || BinaryOperation == MethodInvocation namespace length Literal 0 MethodInvocation namespace Literal "." endsWith MemberReference namespace BinaryOperation + MemberReference namespace Literal '.' =	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator s Cast ReferenceType MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for required fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "The name attribute is required" MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayInitializer MemberReference param StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for valid parameter fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid parameter MethodInvocation getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation evt getName LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation Literal '.' lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression BinaryOperation == MemberReference pos Literal - 1 Literal "" MethodInvocation Literal 0 MemberReference pos substring LocalVariableDeclaration ReferenceType String VariableDeclarator classname TernaryExpression BinaryOperation == MemberReference pos Literal - 1 MemberReference MethodInvocation BinaryOperation + MemberReference pos Literal 1 substring LocalVariableDeclaration ReferenceType Element VariableDeclarator suite MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation suite MemberReference MemberReference classname setAttribute StatementExpression MethodInvocation suite MemberReference MemberReference setAttribute StatementExpression MethodInvocation rootElement MemberReference suite StatementExpression Assignment MemberReference MemberReference suite =	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public synchronized BasicType int read IOException IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal LocalVariableDeclaration BasicType byte VariableDeclarator result IfStatement BinaryOperation && BinaryOperation != MemberReference slack Literal null BinaryOperation < MemberReference begin MemberReference slack length BlockStatement StatementExpression Assignment MemberReference result MemberReference ArraySelector MemberReference begin slack = IfStatement BinaryOperation == MemberReference ++ begin MemberReference slack length BlockStatement StatementExpression Assignment MemberReference slack Literal null = BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 1 IfStatement BinaryOperation <= MethodInvocation MemberReference buf Literal 0 Literal 1 read Literal 0 BlockStatement ReturnStatement Literal - 1 BlockStatement StatementExpression Assignment MemberReference result MemberReference ArraySelector Literal 0 buf = ReturnStatement BinaryOperation & MemberReference result Literal 0xFF	1
MethodDeclaration Modifier public BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation MethodInvocation toLowerCase getValue LocalVariableDeclaration ReferenceType Integer VariableDeclarator i Cast ReferenceType Integer MethodInvocation MemberReference key get ReturnStatement MethodInvocation i intValue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType String localize FormalParameter ReferenceType String path StatementExpression Assignment MemberReference path BinaryOperation + MemberReference root MethodInvocation path Literal 1 substring = ReturnStatement MethodInvocation path MethodInvocation Literal '/' MemberReference File separatorChar replace Literal '\\' MemberReference File separatorChar replace	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference LocalVariableDeclaration ReferenceType FileReader VariableDeclarator fr ClassCreator ReferenceType FileReader MemberReference f TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator br ClassCreator ReferenceType BufferedReader MemberReference fr LocalVariableDeclaration ReferenceType String VariableDeclarator read Literal null WhileStatement BinaryOperation != Assignment MemberReference read MethodInvocation br readLine = Literal null BlockStatement IfStatement BinaryOperation >= MethodInvocation read BinaryOperation + BinaryOperation + Literal MemberReference Literal "\" indexOf Literal 0 BlockStatement ReturnStatement StatementExpression MethodInvocation Literal not set property in generated file." fail TryStatement StatementExpression MethodInvocation fr close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter BasicType boolean user IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MethodInvocation MemberReference ns MemberReference name MemberReference user IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement MemberReference o IfStatement MethodInvocation name Literal startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name Literal MethodInvocation length substring = LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation project MemberReference name getReference ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null Literal null MethodInvocation v toString ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter BasicType int h StatementExpression Assignment MemberReference archeight MemberReference h =	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference config IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = IfStatement MethodInvocation MemberReference equals BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null IfStatement MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference MemberReference = IfStatement MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference MemberReference = BlockStatement StatementExpression Assignment MemberReference MemberReference = TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator MethodInvocation Class MemberReference forName StatementExpression Assignment MemberReference Cast ReferenceType MethodInvocation newInstance = StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation task getProject MethodInvocation getPath StatementExpression MethodInvocation MemberReference config classpath CatchClause CatchClauseParameter NoClassDefFoundError e StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation task BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to load dependency " MemberReference Literal " - class not found: " MethodInvocation e getMessage MemberReference Project MSG_WARN log CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation task BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to load dependency " MemberReference Literal " - exception: " MethodInvocation e getMessage MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public FormalParameter BasicType int width StatementExpression Assignment This MemberReference width MemberReference width =	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation && BinaryOperation != MethodInvocation getPackageName Literal null BinaryOperation != MethodInvocation getClassName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Both package and class have been set" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator command ClassCreator ReferenceType StringBuffer MethodInvocation IfStatement BinaryOperation != MethodInvocation getPackageName Literal null BlockStatement StatementExpression MethodInvocation command Literal ':' append StatementExpression MethodInvocation command MethodInvocation getPackageName append IfStatement MethodInvocation ! command MethodInvocation Literal endsWith toString BlockStatement StatementExpression MethodInvocation command Literal append IfStatement BinaryOperation != MethodInvocation getClassName Literal null BlockStatement StatementExpression MethodInvocation command Literal ':' append StatementExpression MethodInvocation command MethodInvocation getClassName append ReturnStatement MethodInvocation command toString	1
MethodDeclaration Modifier public ReferenceType Object getObject ReturnStatement MemberReference obj	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference toDir MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public static copyResource FormalParameter ReferenceType Resource source FormalParameter ReferenceType Resource dest FormalParameter ReferenceType Project project IOException StatementExpression MethodInvocation MemberReference source MemberReference dest Literal null Literal null Literal false Literal false Literal null Literal null MemberReference project copyResource	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MethodInvocation project	0
MethodDeclaration Modifier public ReferenceType ArrayList ReturnStatement MemberReference existing	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation instanceof MemberReference o ReferenceType ZipShort BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation == MemberReference value Cast ReferenceType ZipShort MemberReference o	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType ClassLoader LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation Thread MethodInvocation getContextClassLoader currentThread IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getClassLoader getClass StatementExpression MethodInvocation Thread MethodInvocation MethodInvocation currentThread ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean gc StatementExpression Assignment MemberReference MemberReference gc =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public synchronized BasicType boolean isSelected FormalParameter ReferenceType Resource r IfStatement BinaryOperation && BinaryOperation == MemberReference dateTime Literal null BinaryOperation == MemberReference millis Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation == MemberReference millis Literal null BlockStatement LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator df TernaryExpression BinaryOperation == MemberReference pattern Literal null MethodInvocation DateFormat MemberReference DateFormat SHORT MemberReference DateFormat SHORT MemberReference ClassCreator ReferenceType MemberReference pattern TryStatement LocalVariableDeclaration BasicType long VariableDeclarator m MethodInvocation df MethodInvocation MemberReference dateTime parse IfStatement BinaryOperation < MemberReference m Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal of " MemberReference dateTime Literal " results in negative milliseconds value" Literal " to 1970, StatementExpression MethodInvocation MemberReference m setMillis CatchClause CatchClauseParameter ParseException pe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal of " MemberReference dateTime Literal " Cannot be It should be TernaryExpression BinaryOperation == MemberReference pattern Literal null Literal " MemberReference pattern Literal " ReturnStatement MethodInvocation when MethodInvocation r getLastModified MethodInvocation millis longValue MemberReference granularity evaluate	1
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Vector BuildException LocalVariableDeclaration ReferenceType Set VariableDeclarator succeededTargets ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType BuildException VariableDeclarator buildException Literal null ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator iter MethodInvocation elements MethodInvocation iter hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Target VariableDeclarator curtarget Cast ReferenceType Target MethodInvocation iter nextElement LocalVariableDeclaration BasicType boolean VariableDeclarator canExecute Literal true ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator depIter MethodInvocation curtarget getDependencies MethodInvocation depIter hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dependencyName Cast ReferenceType String MethodInvocation depIter nextElement IfStatement MethodInvocation ! succeededTargets MemberReference dependencyName contains BlockStatement StatementExpression Assignment MemberReference canExecute Literal false = StatementExpression MethodInvocation MemberReference curtarget BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot execute '" MethodInvocation curtarget getName Literal "' - '" MemberReference dependencyName Literal "' failed or was not MemberReference MSG_ERR log BreakStatement IfStatement MemberReference canExecute BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator thrownException Literal null TryStatement StatementExpression MethodInvocation curtarget StatementExpression MethodInvocation succeededTargets MethodInvocation curtarget getName add CatchClause CatchClauseParameter RuntimeException ex IfStatement MemberReference ! BlockStatement ThrowStatement MemberReference ex StatementExpression Assignment MemberReference thrownException MemberReference ex = CatchClause CatchClauseParameter Throwable ex IfStatement MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression Assignment MemberReference thrownException MemberReference ex = IfStatement BinaryOperation != MemberReference thrownException Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference thrownException ReferenceType BuildException BlockStatement StatementExpression MethodInvocation MemberReference curtarget BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Target '" MethodInvocation curtarget getName Literal "' failed with message '" MethodInvocation thrownException getMessage Literal "'." MemberReference MSG_ERR log IfStatement BinaryOperation == MemberReference buildException Literal null BlockStatement StatementExpression Assignment MemberReference buildException Cast ReferenceType BuildException MemberReference thrownException = BlockStatement StatementExpression MethodInvocation MemberReference curtarget BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Target '" MethodInvocation curtarget getName Literal "' failed with message '" MethodInvocation thrownException getMessage Literal "'." MemberReference MSG_ERR log StatementExpression MethodInvocation thrownException MemberReference System err printStackTrace IfStatement BinaryOperation == MemberReference buildException Literal null BlockStatement StatementExpression Assignment MemberReference buildException ClassCreator ReferenceType BuildException MemberReference thrownException = IfStatement BinaryOperation != MemberReference buildException Literal null BlockStatement ThrowStatement MemberReference buildException	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation Literal ':' lastIndexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement MemberReference ReturnStatement MethodInvocation BinaryOperation + MemberReference index Literal 1 substring	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p MemberReference StatementExpression MethodInvocation p MemberReference project setProject StatementExpression MethodInvocation project Literal MemberReference p StatementExpression MethodInvocation project Literal MemberReference p StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal true Literal true MemberReference p StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal true Literal false MemberReference p StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal ArrayCreator BasicType boolean ArrayInitializer Literal false Literal false Literal null	0
MethodDeclaration Modifier public final ReferenceType createClasspath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String ReturnStatement BinaryOperation >= MethodInvocation MethodInvocation MemberReference indexOf Literal 0	0
MethodDeclaration Modifier private ReferenceType CrLf newInstance ReturnStatement MethodInvocation MethodInvocation getValue newInstance	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator taskElement ClassCreator ReferenceType TimedElement StatementExpression Assignment MemberReference taskElement startTime MethodInvocation System currentTimeMillis = StatementExpression Assignment MemberReference taskElement element MethodInvocation doc MemberReference createElement = LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation event MethodInvocation getTaskName getTask IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = StatementExpression MethodInvocation taskElement.element MemberReference MemberReference name setAttribute StatementExpression MethodInvocation taskElement.element MemberReference MethodInvocation event MethodInvocation getLocation MethodInvocation toString getTask setAttribute StatementExpression MethodInvocation tasks MemberReference task MemberReference taskElement put StatementExpression MethodInvocation MethodInvocation MemberReference taskElement push getStack	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation myCopy MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public FormalParameter BasicType int timeout StatementExpression Assignment This MemberReference timeout MemberReference timeout =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Method VariableDeclarator setProjectM Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation proxy getClass StatementExpression Assignment MemberReference setProjectM MethodInvocation c Literal "setProject" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Project getMethod = IfStatement BinaryOperation != MemberReference setProjectM Literal null BlockStatement StatementExpression MethodInvocation setProjectM MemberReference proxy ArrayCreator ReferenceType Object ArrayInitializer MemberReference project invoke CatchClause CatchClauseParameter NoSuchMethodException e CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Error setting project in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex LocalVariableDeclaration ReferenceType Method VariableDeclarator executeM Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation proxy getClass StatementExpression Assignment MemberReference executeM MethodInvocation c MemberReference methodName ArrayCreator ReferenceType Class Literal 0 getMethod = IfStatement BinaryOperation == MemberReference executeM Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "No public " MemberReference methodName Literal "() in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "No public " MemberReference methodName Literal "() in " MethodInvocation proxy getClass StatementExpression MethodInvocation executeM MemberReference proxy Literal null invoke ReturnStatement CatchClause CatchClauseParameter java.lang.reflect.InvocationTargetException ie StatementExpression MethodInvocation BinaryOperation + Literal "Error in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ie getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference t CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Error in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference = IfStatement MemberReference BlockStatement StatementExpression Assignment This MemberReference Literal false =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute BuildException IfStatement MethodInvocation ! isValidOs BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType File VariableDeclarator savedDir MemberReference dir StatementExpression MethodInvocation cmdl MethodInvocation MemberReference executable MemberReference setExecutable StatementExpression MethodInvocation checkConfiguration TryStatement StatementExpression MethodInvocation MethodInvocation runExec StatementExpression Assignment MemberReference dir MemberReference savedDir =	1
MethodDeclaration Modifier private ReferenceType String stripTrailingSeparator FormalParameter ReferenceType StringBuffer urls FormalParameter BasicType int count IfStatement BinaryOperation > MemberReference count Literal 0 BlockStatement StatementExpression MethodInvocation urls BinaryOperation - MethodInvocation urls length MethodInvocation separator length MethodInvocation urls length delete ReturnStatement ClassCreator ReferenceType String MemberReference urls BlockStatement ReturnStatement Literal ""	1
MethodDeclaration Modifier public ReferenceType getClassespath ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType long StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Resource resource IfStatement BinaryOperation instanceof MemberReference resource ReferenceType FileResource BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType FileResource MemberReference resource ReturnStatement MethodInvocation FILE_UTILS MethodInvocation f getAbsolutePath toURI IfStatement BinaryOperation instanceof MemberReference resource ReferenceType BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator u Cast ReferenceType MemberReference resource ReturnStatement MethodInvocation String MemberReference u valueOf BlockStatement ReturnStatement MethodInvocation resource getName	0
MethodDeclaration Modifier protected handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MethodInvocation redirector getErrorStream Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference output handleErrorFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference displayName	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private IOException LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false LocalVariableDeclaration BasicType long VariableDeclarator off BinaryOperation - MethodInvocation archive length MemberReference IfStatement BinaryOperation >= MemberReference off Literal 0 BlockStatement StatementExpression MethodInvocation archive MemberReference off seek LocalVariableDeclaration BasicType byte VariableDeclarator sig MemberReference ZipOutputStream LocalVariableDeclaration BasicType int VariableDeclarator curr MethodInvocation archive read WhileStatement BinaryOperation != MemberReference curr Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference curr MemberReference ArraySelector Literal 0 sig BlockStatement StatementExpression Assignment MemberReference curr MethodInvocation archive read = IfStatement BinaryOperation == MemberReference curr MemberReference ArraySelector Literal 1 sig BlockStatement StatementExpression Assignment MemberReference curr MethodInvocation archive read = IfStatement BinaryOperation == MemberReference curr MemberReference ArraySelector Literal 2 sig BlockStatement StatementExpression Assignment MemberReference curr MethodInvocation archive read = IfStatement BinaryOperation == MemberReference curr MemberReference ArraySelector Literal 3 sig BlockStatement StatementExpression Assignment MemberReference found Literal true = BreakStatement StatementExpression MethodInvocation archive MemberReference -- off seek StatementExpression Assignment MemberReference curr MethodInvocation archive read = IfStatement MemberReference ! found BlockStatement ThrowStatement ClassCreator ReferenceType ZipException Literal is not a ZIP StatementExpression MethodInvocation archive BinaryOperation + MemberReference off MemberReference seek LocalVariableDeclaration BasicType byte VariableDeclarator ArrayCreator BasicType byte Literal 4 StatementExpression MethodInvocation archive MemberReference readFully StatementExpression MethodInvocation archive MethodInvocation ZipLong MemberReference getValue seek	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public write FormalParameter BasicType int b StatementExpression MethodInvocation buffer Cast BasicType char MemberReference b append	0
MethodDeclaration Modifier protected FormalParameter ReferenceType CommandlineJava cmd FormalParameter ReferenceType String argument FormalParameter ReferenceType String value IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference argument setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference value setValue createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private FormalParameter BasicType boolean b FormalParameter ReferenceType String arg IfStatement MemberReference b BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference arg setValue createArgument	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference ant Literal null BlockStatement StatementExpression MethodInvocation ant MemberReference output handleFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleFlush	1
MethodDeclaration Modifier public FormalParameter ReferenceType String sf IfStatement BinaryOperation || BinaryOperation == MemberReference sf Literal null MethodInvocation sf trim BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must a spec file" MethodInvocation getLocation StatementExpression Assignment This MemberReference MemberReference sf =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter Modifier final ReferenceType other LocalVariableDeclaration Modifier final BasicType int VariableDeclarator max MethodInvocation Math MemberReference other.components length MemberReference components length max ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference max MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator component1 TernaryExpression BinaryOperation < MemberReference i MemberReference components length MemberReference ArraySelector MemberReference i components Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator component2 TernaryExpression BinaryOperation < MemberReference i MemberReference other.components length MemberReference other ArraySelector MemberReference i components Literal 0 IfStatement BinaryOperation > MemberReference component2 MemberReference component1 BlockStatement ReturnStatement Literal false IfStatement BinaryOperation < MemberReference component2 MemberReference component1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is expectLog	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean newValue StatementExpression Assignment This MemberReference MemberReference newValue =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType path BuildException IfStatement BinaryOperation == MemberReference path This BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == MethodInvocation path getProject Literal null BlockStatement StatementExpression MethodInvocation path MethodInvocation getProject setProject StatementExpression MethodInvocation Cast ReferenceType ResourceCollection MemberReference path add	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference BinaryOperation + Literal MemberReference =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType s FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType Project p LocalVariableDeclaration ReferenceType View VariableDeclarator views MethodInvocation p ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference views length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType View VariableDeclarator v MemberReference ArraySelector MemberReference i views IfStatement MethodInvocation v MethodInvocation MethodInvocation equals getName BlockStatement IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Found " MethodInvocation getProjectName MemberReference delim MethodInvocation MemberReference delim log StatementExpression MethodInvocation MemberReference s MemberReference p MemberReference v MethodInvocation s MethodInvocation s MemberReference FILE BreakStatement	1
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation Literal "no ws at MethodInvocation contents Literal "This is startsWith assertTrue StatementExpression MethodInvocation Literal "no ws at end" MethodInvocation contents Literal endsWith assertTrue StatementExpression MethodInvocation MemberReference contents Literal " This is the assertStringContains	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName IfStatement MemberReference BlockStatement IfStatement BinaryOperation != MethodInvocation sourceFileName Literal "\\" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference sourceFileName MethodInvocation sourceFileName Literal '\\' Literal '/' replace = IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference reg Literal null BinaryOperation == MemberReference to Literal null MethodInvocation ! reg MemberReference sourceFileName MemberReference matches BlockStatement ReturnStatement Literal null ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MethodInvocation MemberReference sourceFileName	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference ClassCreator ReferenceType File MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameters StatementExpression Assignment This MemberReference parameters MemberReference parameters =	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setMode FormalParameter ReferenceType Mode m StatementExpression Assignment MemberReference mode MemberReference m =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "no Literal must nest a condition into expectSpecificBuildException	0
MethodDeclaration Modifier public setMethod FormalParameter BasicType int method StatementExpression Assignment This MemberReference method MemberReference method =	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation < MethodInvocation project MethodInvocation Literal indexOf Literal getProperty Literal 0 BlockStatement StatementExpression MethodInvocation Literal "property eval fail	0
MethodDeclaration Modifier public ReferenceType Reader getAssembledReader BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must not be LocalVariableDeclaration ReferenceType Reader VariableDeclarator instream MemberReference LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation filterChains size LocalVariableDeclaration Modifier final ReferenceType Vector VariableDeclarator finalFilters ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation filterChains MemberReference i elementAt LocalVariableDeclaration Modifier final ReferenceType Vector VariableDeclarator MethodInvocation LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation finalFilters MethodInvocation MemberReference j elementAt addElement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation finalFilters size IfStatement BinaryOperation > MemberReference Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation finalFilters MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference o ReferenceType AntFilterReader BlockStatement LocalVariableDeclaration Modifier final ReferenceType AntFilterReader VariableDeclarator filter Cast ReferenceType AntFilterReader MethodInvocation finalFilters MemberReference i elementAt LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator className MethodInvocation filter getClassName LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator classpath MethodInvocation filter LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator MethodInvocation filter getProject IfStatement BinaryOperation != MemberReference className Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz Literal null IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference className forName = BlockStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator al MethodInvocation MemberReference classpath createClassLoader StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference className Literal true MemberReference al forName = IfStatement BinaryOperation != MemberReference clazz Literal null BlockStatement IfStatement ClassReference ! MethodInvocation MemberReference clazz isAssignableFrom ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference className Literal " does not extend LocalVariableDeclaration Modifier final ReferenceType Constructor VariableDeclarator constructors MethodInvocation clazz getConstructors LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false ForStatement ForControl BinaryOperation < MemberReference j MemberReference constructors length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator types MemberReference ArraySelector MemberReference j MethodInvocation getParameterTypes constructors IfStatement BinaryOperation && BinaryOperation == MemberReference types length Literal 1 MemberReference ArraySelector Literal 0 MethodInvocation ClassReference ReferenceType Reader isAssignableFrom types BlockStatement StatementExpression Assignment MemberReference Literal true = BreakStatement IfStatement MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + MemberReference className Literal " does not define a public Literal " that takes in a Reader as its " Literal LocalVariableDeclaration Modifier final ReferenceType Reader VariableDeclarator rdr ArrayInitializer MemberReference instream StatementExpression Assignment MemberReference instream Cast ReferenceType Reader MemberReference ArraySelector MemberReference j MethodInvocation Cast ReferenceType Object MemberReference rdr newInstance constructors = StatementExpression MethodInvocation MemberReference instream IfStatement ClassReference MethodInvocation MemberReference clazz isAssignableFrom ReferenceType BlockStatement LocalVariableDeclaration Modifier final ReferenceType Parameter VariableDeclarator params MethodInvocation filter StatementExpression Cast ReferenceType MemberReference instream CatchClause CatchClauseParameter ClassNotFoundException cnfe ThrowStatement ClassCreator ReferenceType BuildException MemberReference cnfe CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement ClassCreator ReferenceType BuildException MemberReference iae CatchClause CatchClauseParameter InvocationTargetException ite ThrowStatement ClassCreator ReferenceType BuildException MemberReference ite IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation MemberReference o StatementExpression Assignment MemberReference instream Cast ReferenceType MemberReference o = StatementExpression MethodInvocation MemberReference instream ReturnStatement MemberReference instream	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public setMessageOutputLevel FormalParameter BasicType int level StatementExpression Assignment This MemberReference msgOutputLevel MemberReference level =	1
MethodDeclaration Modifier private ReferenceType Iterator ReturnStatement MethodInvocation MethodInvocation MethodInvocation iterator getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType StatementExpression Assignment MemberReference fail ClassCreator ReferenceType = ReturnStatement MemberReference fail	0
MethodDeclaration Modifier public ReferenceType Target getOwningTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression Assignment This MemberReference classpath MemberReference classpath =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType String value LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator pair ArrayCreator ReferenceType String ArrayInitializer MemberReference name MemberReference value StatementExpression MethodInvocation MemberReference pair addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression Assignment This MemberReference append MemberReference append =	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression MethodInvocation StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList attrs SAXParseException IfStatement MethodInvocation name Literal "target" equals BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference attrs BlockStatement StatementExpression MethodInvocation MemberReference helperImpl This MemberReference helperImpl MemberReference name MemberReference attrs handleElement	1
MethodDeclaration Modifier public FormalParameter ReferenceType String sep StatementExpression Assignment MemberReference pathSep MemberReference sep =	0
MethodDeclaration Modifier public ReferenceType String getScript ReturnStatement MemberReference script	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier public synchronized ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference copyInto ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType pc StatementExpression Assignment This MemberReference MemberReference pc =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment MemberReference str_encoding MemberReference encoding =	0
MethodDeclaration * the */ Modifier public init StatementExpression SuperMethodInvocation init StatementExpression MethodInvocation MethodInvocation getProject setProject	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public BasicType boolean similarDefinition FormalParameter ReferenceType AntTypeDefinition other FormalParameter ReferenceType Project project IfStatement SuperMethodInvocation ! MemberReference other MemberReference project similarDefinition BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType MyAntTypeDefinition VariableDeclarator otherDef Cast ReferenceType MyAntTypeDefinition MemberReference other ReturnStatement MethodInvocation macroDef MemberReference otherDef macroDef	1
MethodDeclaration Modifier public ReferenceType BuildException IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference type Literal null BinaryOperation == MemberReference classname Literal null BinaryOperation == MemberReference container Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal mapper or " Literal "one of the attributes type or classname is required" IfStatement BinaryOperation != MemberReference container Literal null BlockStatement ReturnStatement MemberReference container IfStatement BinaryOperation && BinaryOperation != MemberReference type Literal null BinaryOperation != MemberReference classname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "must not both type and classname attribute" TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator m Cast ReferenceType MethodInvocation getImplementationClass LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation p MemberReference m setProjectReference StatementExpression MethodInvocation m MemberReference from StatementExpression MethodInvocation m MemberReference to ReturnStatement MemberReference m CatchClause CatchClauseParameter BuildException be ThrowStatement MemberReference be CatchClause CatchClauseParameter Throwable t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator Literal null LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator s Literal null TryStatement StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator results Literal null StatementExpression Assignment MemberReference s Cast ReferenceType ModifiedSelector MethodInvocation = StatementExpression MethodInvocation MemberReference s Literal performTests StatementExpression MethodInvocation MemberReference s Literal performTests LocalVariableDeclaration ReferenceType String VariableDeclarator f2name Literal LocalVariableDeclaration ReferenceType String VariableDeclarator f3name Literal LocalVariableDeclaration ReferenceType String VariableDeclarator f4name Literal StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation BinaryOperation + Literal MemberReference f2name writeProperties StatementExpression MethodInvocation BinaryOperation + Literal MemberReference f3name writeProperties StatementExpression MethodInvocation BinaryOperation + Literal MemberReference f4name writeProperties StatementExpression MethodInvocation Literal StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator expected ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ch Literal "F" IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isDirectory files StatementExpression Assignment MemberReference ch Literal "T" = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference f3name equalsIgnoreCase StatementExpression Assignment MemberReference ch Literal "T" = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference f4name equalsIgnoreCase StatementExpression Assignment MemberReference ch Literal "T" = StatementExpression MethodInvocation expected MemberReference ch append StatementExpression MethodInvocation BinaryOperation + Literal "Wrong files files: " MethodInvocation MethodInvocation MethodInvocation expected toString MemberReference results diff resolve MethodInvocation expected toString MemberReference results assertEquals StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference s Literal null StatementExpression MethodInvocation s MethodInvocation delete getCache IfStatement BinaryOperation != MemberReference Literal null StatementExpression MethodInvocation	1
MethodDeclaration Modifier public static ReferenceType Specification FormalParameter Modifier final ReferenceType Manifest manifest ParseException IfStatement BinaryOperation == Literal null MemberReference manifest BlockStatement ReturnStatement ArrayCreator ReferenceType Specification Literal 0 LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator results ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final ReferenceType Map VariableDeclarator entries MethodInvocation manifest getEntries LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator keys MethodInvocation entries MethodInvocation iterator keySet WhileStatement MethodInvocation keys hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation keys next LocalVariableDeclaration Modifier final ReferenceType Attributes VariableDeclarator attributes Cast ReferenceType Attributes MethodInvocation entries MemberReference key get LocalVariableDeclaration Modifier final ReferenceType Specification VariableDeclarator specification MethodInvocation MemberReference key MemberReference attributes IfStatement BinaryOperation != Literal null MemberReference specification BlockStatement StatementExpression MethodInvocation results MemberReference specification add LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator trimmedResults MethodInvocation MemberReference results ReturnStatement Cast ReferenceType Specification MethodInvocation trimmedResults ArrayCreator ReferenceType Specification MethodInvocation trimmedResults size toArray	1
MethodDeclaration Modifier public FormalParameter ReferenceType evt LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation Literal MethodInvocation evt getName MethodInvocation evt MethodInvocation getError getString StatementExpression MethodInvocation MethodInvocation MemberReference msg println StatementExpression SuperMethodInvocation MemberReference evt	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference debug MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File f StatementExpression Assignment MemberReference MemberReference f =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project StatementExpression MethodInvocation p ClassCreator ReferenceType File BinaryOperation + MemberReference File separatorChar Literal setLocation LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals BlockStatement StatementExpression MethodInvocation Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation Literal 1 substring l assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String enc StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference enc setValue createArgument	0
MethodDeclaration Modifier public ReferenceType PlanarImage executeTransformOperation FormalParameter ReferenceType PlanarImage image LocalVariableDeclaration ReferenceType VariableDeclarator bi Literal null LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement StatementExpression MethodInvocation System.out Literal "Execing println LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator op Cast ReferenceType DrawOperation MemberReference instr StatementExpression Assignment MemberReference image MethodInvocation MemberReference op = ReturnStatement MemberReference image IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = StatementExpression Assignment MemberReference graphics Cast ReferenceType Graphics2D MethodInvocation bi = StatementExpression MethodInvocation System.out Literal "Execing println StatementExpression Assignment MemberReference image Cast ReferenceType TransformOperation MemberReference instr = StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = StatementExpression MethodInvocation System.out Literal "Execing as println StatementExpression Assignment MemberReference image MethodInvocation MemberReference image = StatementExpression MethodInvocation System.out MemberReference image println ReturnStatement MemberReference image	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ExtendSelector VariableDeclarator s ClassCreator ReferenceType ExtendSelector LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration ReferenceType String VariableDeclarator cachefile BinaryOperation + MethodInvocation System Literal "java.io.tmpdir" getProperty Literal TryStatement StatementExpression MethodInvocation StatementExpression MethodInvocation s Literal setClassname StatementExpression MethodInvocation s MethodInvocation Literal "cache.cachefile" MemberReference cachefile createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal "cache" Literal createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal "update" Literal "true" createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal "comparator" Literal createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal Literal createParam addParam StatementExpression MethodInvocation s MethodInvocation Literal Literal createParam addParam StatementExpression MethodInvocation MemberReference s Literal performTests StatementExpression MethodInvocation MemberReference s Literal performTests LocalVariableDeclaration ReferenceType String VariableDeclarator f2name Literal LocalVariableDeclaration ReferenceType String VariableDeclarator f3name Literal LocalVariableDeclaration ReferenceType String VariableDeclarator f4name Literal StatementExpression MethodInvocation BinaryOperation + Literal MemberReference f2name writeProperties StatementExpression MethodInvocation BinaryOperation + Literal MemberReference f3name writeProperties StatementExpression MethodInvocation BinaryOperation + Literal MemberReference f4name writeProperties StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType String VariableDeclarator results MethodInvocation MemberReference s LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator expected ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ch Literal "F" IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isDirectory files StatementExpression Assignment MemberReference ch Literal "T" = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference f3name equalsIgnoreCase StatementExpression Assignment MemberReference ch Literal "T" = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference f4name equalsIgnoreCase StatementExpression Assignment MemberReference ch Literal "T" = StatementExpression MethodInvocation expected MemberReference ch append StatementExpression MethodInvocation BinaryOperation + Literal "Wrong files files: " MethodInvocation MethodInvocation MethodInvocation expected toString MemberReference results diff resolve MethodInvocation expected toString MemberReference results assertEquals StatementExpression MethodInvocation StatementExpression ClassCreator MethodInvocation delete ReferenceType java ReferenceType io ReferenceType File MemberReference cachefile IfStatement BinaryOperation != MemberReference Literal null StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setLastModified FormalParameter BasicType long BuildException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal can't change the of a " Literal " compressed resource"	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier final protected ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation MemberReference caller format equals BlockStatement ReturnStatement ClassCreator ReferenceType ByteArrayOutputStream BlockStatement ReturnStatement ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream ClassCreator ReferenceType File MemberReference caller toDir Literal	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference nestedTask Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Missing IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal not specified" StatementExpression Assignment MemberReference name MethodInvocation ProjectHelper MethodInvocation getURI MemberReference name genComponentName = LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MethodInvocation getProject getComponentHelper LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ProjectHelper MethodInvocation nestedTask getNamespace MethodInvocation nestedTask getTag genComponentName LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation helper MemberReference IfStatement BinaryOperation == MemberReference def Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to find typedef " MemberReference LocalVariableDeclaration ReferenceType PreSetDefinition VariableDeclarator newDef ClassCreator ReferenceType PreSetDefinition MemberReference def MemberReference nestedTask StatementExpression MethodInvocation newDef MemberReference name setName StatementExpression MethodInvocation helper MemberReference newDef StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference name MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int size ReturnStatement Literal 0	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String value LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 LocalVariableDeclaration ReferenceType Integer VariableDeclarator Cast ReferenceType Integer MethodInvocation MemberReference value get IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference index MethodInvocation intValue = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator testMailServer ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType VariableDeclarator testMailClient ClassCreator ReferenceType StatementExpression MethodInvocation testMailClient Literal Message from StatementExpression MethodInvocation testMailClient Literal to StatementExpression MethodInvocation testMailClient Literal "Test StatementExpression MethodInvocation testMailClient Literal "" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal test Literal " MemberReference local Literal Literal " MemberReference local Literal " " MemberReference local Literal " to Literal Literal Literal Literal Literal Literal Literal Test Literal Message Literal Literal Literal Literal Literal Literal Literal Literal Literal StatementExpression MethodInvocation MethodInvocation length MethodInvocation result length assertEquals StatementExpression MethodInvocation MemberReference MemberReference result assertEquals IfStatement MethodInvocation testMailClient BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient fail	0
MethodDeclaration StatementExpression Assignment MemberReference Literal =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference index MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public reset StatementExpression Assignment This MemberReference file Literal null = StatementExpression Assignment This MemberReference date Literal null = StatementExpression Assignment This MemberReference Literal null = StatementExpression Assignment This MemberReference Literal null = StatementExpression Assignment This MemberReference Literal null = StatementExpression Assignment This MemberReference Literal null =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator MemberReference length LocalVariableDeclaration BasicType int VariableDeclarator MemberReference length LocalVariableDeclaration BasicType int VariableDeclarator genIndex Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator testIndex Literal 0 WhileStatement BinaryOperation < MemberReference testIndex MemberReference BlockStatement TryStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference genIndex Literal "" BlockStatement StatementExpression MemberReference ++ genIndex ContinueStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference testIndex MemberReference ArraySelector MemberReference testIndex MemberReference ArraySelector MemberReference genIndex assertEquals StatementExpression MemberReference ++ testIndex StatementExpression MemberReference ++ genIndex CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException StatementExpression MethodInvocation BinaryOperation + Literal arg " MemberReference ArraySelector MemberReference testIndex fail LocalVariableDeclaration BasicType int VariableDeclarator cnt Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i Literal "" BlockStatement StatementExpression MemberReference ++ cnt IfStatement BinaryOperation > BinaryOperation - MemberReference MemberReference cnt MemberReference length BlockStatement StatementExpression MethodInvocation Literal fail	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Project p FormalParameter ReferenceType Object o FormalParameter BasicType boolean IfStatement BinaryOperation == MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference p MethodInvocation MemberReference o getProject = ReturnStatement TernaryExpression BinaryOperation == MemberReference p Literal null MethodInvocation MethodInvocation o getClass MemberReference MethodInvocation MethodInvocation MemberReference o MemberReference MemberReference p getComponentHelper	0
MethodDeclaration Modifier public addAnd FormalParameter ReferenceType And a StatementExpression MethodInvocation MemberReference a addElement	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f1 MethodInvocation MethodInvocation Literal getProject LocalVariableDeclaration ReferenceType File VariableDeclarator f2 MethodInvocation MethodInvocation Literal getProject StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference f1 MemberReference f2 assertTrue	0
MethodDeclaration Modifier public setTaskName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference MemberReference name =	0
MethodDeclaration Modifier public IOException IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation crc getValue StatementExpression MethodInvocation crc reset IfStatement BinaryOperation == MethodInvocation entry getMethod MemberReference DEFLATED BlockStatement StatementExpression MethodInvocation def finish WhileStatement MethodInvocation ! def finished BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation entry MethodInvocation MethodInvocation def setSize StatementExpression MethodInvocation entry MethodInvocation MethodInvocation def StatementExpression MethodInvocation entry MemberReference StatementExpression MethodInvocation def reset StatementExpression Assignment MemberReference MethodInvocation entry += IfStatement BinaryOperation == MemberReference raf Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation entry MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "bad checksum for entry " MethodInvocation entry getName Literal ": " MethodInvocation Long MethodInvocation entry toHexString Literal " of " MethodInvocation Long MemberReference toHexString IfStatement BinaryOperation != MethodInvocation entry getSize BinaryOperation - MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "bad size for entry " MethodInvocation entry getName Literal ": " MethodInvocation entry getSize Literal " of " BinaryOperation - MemberReference MemberReference BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator size BinaryOperation - MemberReference MemberReference StatementExpression MethodInvocation entry MemberReference size setSize StatementExpression MethodInvocation entry MemberReference size StatementExpression MethodInvocation entry MemberReference IfStatement BinaryOperation != MemberReference raf Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator save MethodInvocation raf StatementExpression MethodInvocation raf MemberReference seek StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation entry getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation entry getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation entry getSize getBytes writeOut StatementExpression MethodInvocation raf MemberReference save seek StatementExpression MethodInvocation MemberReference entry StatementExpression Assignment MemberReference entry Literal null =	0
MethodDeclaration Modifier public synchronized BasicType long getMillis ReturnStatement TernaryExpression BinaryOperation == MemberReference millis Literal null Literal - 1L MethodInvocation millis longValue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean exists ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal can't change the exists state of a " Literal " compressed resource"	1
MethodDeclaration Modifier private static ReferenceType ArrayList FormalParameter Modifier final ReferenceType ArrayList list LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator results ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator sections ClassCreator ReferenceType ArrayList WhileStatement BinaryOperation > MethodInvocation list size Literal 0 BlockStatement LocalVariableDeclaration Modifier final ReferenceType Specification VariableDeclarator specification Cast ReferenceType Specification MethodInvocation list Literal 0 remove LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator iterator MethodInvocation list iterator WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType Specification VariableDeclarator other Cast ReferenceType Specification MethodInvocation iterator next IfStatement MethodInvocation MemberReference specification MemberReference other isEqual BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation other IfStatement BinaryOperation != Literal null MemberReference sections BlockStatement StatementExpression MethodInvocation sections MethodInvocation Arrays MemberReference asList addAll StatementExpression MethodInvocation iterator remove LocalVariableDeclaration Modifier final ReferenceType Specification VariableDeclarator merged MethodInvocation MemberReference specification MemberReference sections StatementExpression MethodInvocation results MemberReference merged add StatementExpression MethodInvocation sections clear ReturnStatement MemberReference results	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object v FormalParameter BasicType boolean FormalParameter BasicType boolean user FormalParameter BasicType boolean IfStatement MethodInvocation ! name MemberReference PREFIX startsWith BlockStatement ReturnStatement SuperMethodInvocation MemberReference ns MemberReference name MemberReference v MemberReference MemberReference user MemberReference StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation PREFIX length substring = StatementExpression MethodInvocation MemberReference name MemberReference v setValue ReturnStatement Literal true	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object object LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator map Cast ReferenceType Hashtable MemberReference object LocalVariableDeclaration ReferenceType String VariableDeclarator names ArrayCreator ReferenceType String MethodInvocation map size LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator it MethodInvocation map keys ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference names length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i names MethodInvocation String MethodInvocation it nextElement valueOf = ReturnStatement MemberReference names	0
MethodDeclaration Modifier public synchronized execute BuildException IfStatement MemberReference executing BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal in TryStatement StatementExpression Assignment MemberReference executing Literal true = StatementExpression MethodInvocation This execute StatementExpression Assignment MemberReference executing Literal false =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init StatementExpression Assignment This MemberReference Literal null = StatementExpression Assignment This MemberReference Literal null = StatementExpression Assignment This MemberReference fileSets Literal null =	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference extdirs Literal null BlockStatement StatementExpression Assignment MemberReference extdirs ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation extdirs createPath	0
MethodDeclaration Modifier public FormalParameter ReferenceType String language StatementExpression MethodInvocation helper MemberReference language	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Project p ReturnStatement Cast ReferenceType MethodInvocation MemberReference p getCheckedRef	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference Literal "file" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String IfStatement MemberReference BlockStatement ReturnStatement Literal "" ReturnStatement MemberReference lineEnd	0
MethodDeclaration Modifier protected ReferenceType Project IfStatement BinaryOperation == MemberReference newProject Literal null BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference newProject	0
MethodDeclaration Modifier private setError FormalParameter BasicType boolean err StatementExpression Assignment MemberReference error MemberReference err = IfStatement MemberReference error BlockStatement StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String execName BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator m MethodInvocation StatementExpression MethodInvocation MemberReference m IfStatement BinaryOperation == MemberReference engine Literal null BlockStatement StatementExpression MethodInvocation m MethodInvocation getLanguage MemberReference execName Literal 0 Literal 0 MethodInvocation getScript exec BlockStatement StatementExpression MethodInvocation engine MemberReference execName Literal 0 Literal 0 MethodInvocation getScript exec CatchClause CatchClauseParameter BSFException be StatementExpression MethodInvocation MemberReference be throwBuildException StatementExpression MethodInvocation MemberReference	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation Commandline MethodInvocation getCommandline toString	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal expectBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference recurse MemberReference value =	0
MethodDeclaration Modifier public BuildException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator element Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation element validate	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType File jspFile ReturnStatement BinaryOperation + MethodInvocation MemberReference jspFile Literal ".java"	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "error on two MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal B expectLogContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private static FormalParameter Modifier final BasicType int code FormalParameter Modifier final BasicType byte length FormalParameter Modifier final BasicType int minLen FormalParameter Modifier final BasicType int maxLen FormalParameter Modifier final BasicType int alphaSize LocalVariableDeclaration BasicType int VariableDeclarator vec Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator n MemberReference minLen BinaryOperation <= MemberReference n MemberReference maxLen MemberReference ++ n BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement IfStatement BinaryOperation == BinaryOperation & MemberReference ArraySelector MemberReference i length Literal 0xff MemberReference n BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i code MemberReference vec = StatementExpression MemberReference ++ vec StatementExpression Assignment MemberReference vec Literal 1 <<=	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression Assignment MemberReference buildElement ClassCreator ReferenceType TimedElement = StatementExpression Assignment MemberReference buildElement startTime MethodInvocation System currentTimeMillis = StatementExpression Assignment MemberReference buildElement element MethodInvocation doc MemberReference createElement =	1
MethodDeclaration Modifier public ReferenceType String getProjectName ReturnStatement MemberReference projectName	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement TernaryExpression MethodInvocation MethodInvocation fs iterator MemberReference	0
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType String LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar getInstance LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator tz MethodInvocation cal LocalVariableDeclaration BasicType int VariableDeclarator offset MethodInvocation tz MethodInvocation cal MemberReference Calendar get MethodInvocation cal MemberReference Calendar get MethodInvocation cal MemberReference Calendar get MethodInvocation cal MemberReference Calendar DAY_OF_MONTH get MethodInvocation cal MemberReference Calendar get MethodInvocation cal MemberReference Calendar get getOffset LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator tzMarker ClassCreator ReferenceType StringBuffer TernaryExpression BinaryOperation < MemberReference offset Literal 0 Literal "-" Literal "+" StatementExpression Assignment MemberReference offset MethodInvocation Math MemberReference offset abs = LocalVariableDeclaration BasicType int VariableDeclarator hours BinaryOperation / MemberReference offset BinaryOperation * BinaryOperation * Literal 60 Literal 60 Literal 1000 LocalVariableDeclaration BasicType int VariableDeclarator minutes BinaryOperation - BinaryOperation / MemberReference offset BinaryOperation * Literal 60 Literal 1000 BinaryOperation * Literal 60 MemberReference hours IfStatement BinaryOperation < MemberReference hours Literal 10 BlockStatement StatementExpression MethodInvocation tzMarker Literal "0" append StatementExpression MethodInvocation tzMarker MemberReference hours append IfStatement BinaryOperation < MemberReference minutes Literal 10 BlockStatement StatementExpression MethodInvocation tzMarker Literal "0" append StatementExpression MethodInvocation tzMarker MemberReference minutes append ReturnStatement BinaryOperation + MethodInvocation MethodInvocation cal format MethodInvocation tzMarker toString	1
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation MethodInvocation toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public tearDown StatementExpression Assignment MemberReference project Literal null = StatementExpression Assignment MemberReference catalog Literal null =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ModifiedSelector VariableDeclarator s Cast ReferenceType ModifiedSelector MethodInvocation TryStatement StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbTrue ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbFalse ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isDirectory files BlockStatement StatementExpression MethodInvocation sbTrue Literal "T" append StatementExpression MethodInvocation sbFalse Literal "F" append BlockStatement StatementExpression MethodInvocation sbTrue Literal "T" append StatementExpression MethodInvocation sbFalse Literal "T" append StatementExpression MethodInvocation s Literal true StatementExpression MethodInvocation MemberReference s MethodInvocation sbTrue toString performTests StatementExpression MethodInvocation s MethodInvocation delete getCache StatementExpression MethodInvocation s Literal false StatementExpression MethodInvocation MemberReference s MethodInvocation sbFalse toString performTests StatementExpression MethodInvocation s MethodInvocation delete getCache StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference s Literal null StatementExpression MethodInvocation s MethodInvocation delete getCache	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType File srcFile StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference srcFile	0
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal executeTarget StatementExpression Assignment MemberReference p MethodInvocation getProject = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail StatementExpression MethodInvocation Literal "Failed to MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to MethodInvocation p Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "Failed to MethodInvocation p Literal getProperty assertNotNull LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail StatementExpression MethodInvocation Literal "Failed to alter MethodInvocation p Literal getProperty assertNotNull	0
MethodDeclaration Modifier private execute FormalParameter ReferenceType File file FormalParameter ReferenceType File directory BuildException IfStatement BinaryOperation || BinaryOperation || MethodInvocation ! file exists MethodInvocation file isDirectory MethodInvocation ! file canRead BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Invalid file: " MemberReference file IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_WARN log ReturnStatement StatementExpression Assignment MemberReference ant MethodInvocation MemberReference directory = LocalVariableDeclaration ReferenceType String VariableDeclarator antfilename MethodInvocation file getAbsolutePath StatementExpression MethodInvocation ant MemberReference antfilename ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation targets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator targetElement Cast ReferenceType MethodInvocation targets MemberReference i get StatementExpression MethodInvocation ant MemberReference targetElement TryStatement StatementExpression MethodInvocation ant execute CatchClause CatchClauseParameter BuildException e IfStatement MemberReference BlockStatement ThrowStatement MemberReference e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failure for target '" MemberReference Literal "' of: " MemberReference antfilename Literal "\n" MethodInvocation e getMessage MemberReference Project MSG_WARN log CatchClause CatchClauseParameter Throwable e IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failure for target '" MemberReference Literal "' of: " MemberReference antfilename Literal "\n" MethodInvocation e toString MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference ant Literal null =	1
MethodDeclaration Modifier public ReferenceType String getClassname ReturnStatement MemberReference classname	0
MethodDeclaration Modifier protected tearDown Exception LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation project MemberReference IfStatement MethodInvocation file exists BlockStatement StatementExpression MethodInvocation file delete	0
MethodDeclaration Modifier public ReferenceType PlanarImage performScale FormalParameter ReferenceType PlanarImage image LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference image LocalVariableDeclaration BasicType float VariableDeclarator xFl MethodInvocation getWidth LocalVariableDeclaration BasicType float VariableDeclarator yFl MethodInvocation getHeight IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference xFl BinaryOperation / MemberReference xFl MethodInvocation image getWidth = IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference yFl BinaryOperation / MemberReference yFl MethodInvocation image getHeight = IfStatement Literal MethodInvocation MemberReference equals "width" BlockStatement StatementExpression Assignment MemberReference yFl MemberReference xFl = IfStatement Literal MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference xFl MemberReference yFl = IfStatement Literal MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference yFl MethodInvocation Math MemberReference xFl MemberReference yFl min = StatementExpression Assignment MemberReference xFl MemberReference yFl = IfStatement Literal MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference yFl MethodInvocation Math MemberReference xFl MemberReference yFl max = StatementExpression Assignment MemberReference xFl MemberReference yFl = StatementExpression MethodInvocation ClassCreator ReferenceType Float MemberReference xFl add StatementExpression MethodInvocation ClassCreator ReferenceType Float MemberReference yFl add StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal to " BinaryOperation * MemberReference xFl MemberReference Literal "% x " BinaryOperation * MemberReference yFl MemberReference Literal "%" log ReturnStatement MethodInvocation Literal MemberReference create	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public tearDown LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File Literal IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation f delete	0
MethodDeclaration * @see */ Modifier public buildFinished FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Logger VariableDeclarator log MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Project getLogger IfStatement BinaryOperation == MethodInvocation event getException Literal null BlockStatement StatementExpression MethodInvocation log Literal "Build info BlockStatement StatementExpression MethodInvocation log Literal "Build finished with error." MethodInvocation event getException error	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference header MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference Literal null = BlockStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p ArrayCreator ReferenceType Pattern MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i p ClassCreator ReferenceType Pattern = StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i p StatementExpression MethodInvocation MemberReference p	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar TryStatement ReturnStatement MethodInvocation ResourceUtils MemberReference foo MemberReference bar MemberReference ! binary CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration ReferenceType Method getMethod ReturnStatement MemberReference method	0
MethodDeclaration Modifier public ReferenceType String getToken ReturnStatement MemberReference token	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " Literal " Literal " Literal " Literal " Literal	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String message FormalParameter Modifier final BasicType int priority LocalVariableDeclaration Modifier final ReferenceType BuildEvent VariableDeclarator be ClassCreator ReferenceType BuildEvent MemberReference project StatementExpression MethodInvocation be MemberReference message MemberReference priority setMessage StatementExpression MethodInvocation buffer MemberReference be addElement	0
MethodDeclaration Modifier protected FormalParameter ReferenceType PrintWriter out LocalVariableDeclaration ReferenceType VariableDeclarator param LocalVariableDeclaration ReferenceType Vector VariableDeclarator params MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation params size MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation out Literal '&' print StatementExpression Assignment MemberReference param Cast ReferenceType MethodInvocation params MemberReference i get = StatementExpression MethodInvocation out MethodInvocation param toString print StatementExpression MethodInvocation BinaryOperation + Literal : " MethodInvocation param toString MemberReference Project MSG_DEBUG log	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType XMethod VariableDeclarator m1 Cast ReferenceType XMethod MemberReference o1 LocalVariableDeclaration ReferenceType XMethod VariableDeclarator m2 Cast ReferenceType XMethod MemberReference o2 ReturnStatement MethodInvocation m1 MethodInvocation MethodInvocation m2 getName compareTo getName	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count FormalParameter ReferenceType AntXMLContext context SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator s ClassCreator MethodInvocation trim ReferenceType String MemberReference buf MemberReference start MemberReference count IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected text \"" MemberReference s Literal "\"" MethodInvocation context getLocator	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Date time StatementExpression Assignment This MemberReference modTime BinaryOperation / MethodInvocation time MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal Literal Literal Literal Literal Literal	0
MethodDeclaration Modifier private FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator sourceName MethodInvocation source getName LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation sourceName length IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MemberReference len MethodInvocation length MethodInvocation MethodInvocation sourceName BinaryOperation - MemberReference len MethodInvocation length substring equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference dest ClassCreator ReferenceType File MemberReference dest MethodInvocation sourceName Literal 0 BinaryOperation - MemberReference len MethodInvocation length substring = BlockStatement StatementExpression Assignment MemberReference dest ClassCreator ReferenceType File MemberReference dest MemberReference sourceName =	0
MethodDeclaration Modifier protected setUp ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MemberReference needAddSeparator BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ret MethodInvocation eolString MemberReference ++ lastPos charAt IfStatement BinaryOperation >= MemberReference lastPos MethodInvocation eolString length BlockStatement StatementExpression Assignment MemberReference lastPos Literal 0 = StatementExpression Assignment MemberReference needAddSeparator Literal false = ReturnStatement MemberReference ret WhileStatement BinaryOperation != MethodInvocation getReader Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation MethodInvocation read getReader IfStatement BinaryOperation == MemberReference ch Literal - 1 BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation && MemberReference MethodInvocation isMissingEndOfLine BlockStatement StatementExpression Assignment MemberReference needAddSeparator Literal true = StatementExpression Assignment MemberReference lastPos Literal 0 = BlockStatement StatementExpression MethodInvocation Cast BasicType char MemberReference ch addLastChar ReturnStatement MemberReference ch ReturnStatement Literal - 1	1
MethodDeclaration Modifier final protected BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private log FormalParameter ReferenceType String mesg FormalParameter BasicType int level IfStatement BinaryOperation && BinaryOperation && MemberReference record BinaryOperation <= MemberReference level MemberReference loglevel BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out MemberReference mesg println	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal "bar" Literal "bar" setNewProperty getProject LocalVariableDeclaration ReferenceType VariableDeclarator r ClassCreator ReferenceType MethodInvocation getProject Literal "bar" TryStatement StatementExpression MethodInvocation MemberReference r StatementExpression MethodInvocation Literal "should have caught fail CatchClause CatchClauseParameter ImmutableResourceException e CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation BinaryOperation + Literal "caught some other IOException: " MemberReference e fail StatementExpression MethodInvocation Literal "bar" Literal "bar"	1
MethodDeclaration Modifier public static ReferenceType ClassLoader FormalParameter ReferenceType Project p FormalParameter ReferenceType path FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator acl MethodInvocation p MemberReference path createClassLoader IfStatement MemberReference BlockStatement StatementExpression MethodInvocation acl Literal false StatementExpression MethodInvocation acl ReturnStatement MemberReference acl	0
MethodDeclaration Modifier protected checkConfiguration BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference baseDir Literal null BinaryOperation == MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "basedir attribute or one " Literal fileset is MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference baseDir Literal null MethodInvocation ! baseDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "basedir does not exist!" MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference baseDir Literal null BinaryOperation > MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Both basedir attribute and a fileset is not IfStatement BinaryOperation == MemberReference cabFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation checkParameters StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation writeFile	1
MethodDeclaration Modifier public FormalParameter ReferenceType File input IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The and " Literal cannot both be specified" StatementExpression Assignment This MemberReference input MemberReference input = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Throwable getException ReturnStatement MemberReference exception	0
MethodDeclaration Modifier public handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation callee MemberReference output handleErrorFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorFlush	1
MethodDeclaration Modifier public ReferenceType Marker ReturnStatement ClassCreator ReferenceType Marker MethodInvocation arguments size	0
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException StatementExpression Assignment MemberReference out TernaryExpression BinaryOperation == MemberReference out Literal null ClassCreator ReferenceType ByteArrayOutputStream MemberReference out = ReturnStatement MemberReference out	0
MethodDeclaration Modifier public BasicType char getChar FormalParameter BasicType int i ReturnStatement MethodInvocation line MemberReference i charAt	0
MethodDeclaration Modifier protected cleanUp IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference addedWebXmlFile Literal null BinaryOperation == MemberReference Literal null MemberReference MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No file was Literal "If this is your set " StatementExpression Assignment MemberReference addedWebXmlFile Literal null = StatementExpression SuperMethodInvocation cleanUp	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference url	0
MethodDeclaration Modifier public error FormalParameter ReferenceType SAXParseException exception StatementExpression Assignment MemberReference failed Literal true = StatementExpression MethodInvocation MemberReference exception MemberReference Project MSG_ERR doLog	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String u StatementExpression Assignment This MemberReference MemberReference u =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression MethodInvocation helper MemberReference file	0
MethodDeclaration Modifier public FormalParameter ReferenceType File zipFile StatementExpression Assignment This MemberReference zipFile MemberReference zipFile =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation MethodInvocation Literal getProperty getProject assertEquals	0
MethodDeclaration Modifier public BasicType boolean isDirectory ReturnStatement BinaryOperation && MemberReference MethodInvocation ! isLink	0
MethodDeclaration Modifier private ReferenceType Vector FormalParameter ReferenceType LocalVariableDeclaration ReferenceType String VariableDeclarator classLocationsList MethodInvocation list LocalVariableDeclaration ReferenceType Vector VariableDeclarator classFileList ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classLocationsList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i classLocationsList IfStatement MethodInvocation dir isDirectory BlockStatement StatementExpression MethodInvocation MemberReference classFileList MemberReference dir MemberReference dir addClassFiles ReturnStatement MemberReference classFileList	1
MethodDeclaration Modifier public BasicType boolean similarDefinition FormalParameter ReferenceType AntTypeDefinition other FormalParameter ReferenceType Project project IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference other Literal null BinaryOperation != MethodInvocation getClass MethodInvocation other getClass MethodInvocation ! MethodInvocation MethodInvocation other getClassName equals getClassName MethodInvocation ! MethodInvocation MethodInvocation MemberReference other equals MemberReference MethodInvocation ! MethodInvocation MethodInvocation MemberReference other equals MemberReference BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator oldLoader MethodInvocation other getClassLoader LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation getClassLoader ReturnStatement BinaryOperation || BinaryOperation == MemberReference oldLoader MemberReference BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference oldLoader ReferenceType AntClassLoader BinaryOperation instanceof MemberReference ReferenceType AntClassLoader Cast ReferenceType AntClassLoader MemberReference oldLoader	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected init FormalParameter ReferenceType Properties props IfStatement BinaryOperation != MethodInvocation props Literal "debug" getProperty Literal null BlockStatement StatementExpression MethodInvocation Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator port MethodInvocation props Literal "port" getProperty IfStatement BinaryOperation != MemberReference port Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Integer MemberReference port parseInt LocalVariableDeclaration ReferenceType String VariableDeclarator host MethodInvocation props Literal "host" getProperty IfStatement BinaryOperation != MemberReference host Literal null BlockStatement StatementExpression MethodInvocation MemberReference host setHost LocalVariableDeclaration ReferenceType String VariableDeclarator classnames MethodInvocation props Literal getProperty IfStatement BinaryOperation != MemberReference classnames Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference classnames WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation st nextToken	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration store FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child InvocationTargetException IllegalAccessException InstantiationException IfStatement BinaryOperation == MemberReference behavior MemberReference BlockStatement StatementExpression MethodInvocation MemberReference parent MemberReference child	1
MethodDeclaration Modifier public FormalParameter BasicType int numThreads StatementExpression Assignment This MemberReference numThreads MemberReference numThreads =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer value StatementExpression MethodInvocation Cast ReferenceType Long TernaryExpression BinaryOperation == MemberReference value Literal null Literal null ClassCreator ReferenceType Long MethodInvocation value intValue	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType String publicId LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation elements getElements LocalVariableDeclaration ReferenceType VariableDeclarator element Literal null WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation e nextElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression Assignment MemberReference element Cast ReferenceType MemberReference o = IfStatement MethodInvocation element MethodInvocation MemberReference publicId equals getPublicId BlockStatement ReturnStatement MemberReference element ReturnStatement Literal null	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType String args FormalParameter ReferenceType file BuildException LocalVariableDeclaration ReferenceType VariableDeclarator parent ClassCreator ReferenceType MethodInvocation file getParent IfStatement MethodInvocation parent BlockStatement StatementExpression MethodInvocation MemberReference parent checkout StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args MethodInvocation file getAbsolutePath = LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference parent ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res BlockStatement StatementExpression MethodInvocation MemberReference parent	0
MethodDeclaration Modifier public FormalParameter ReferenceType String pattern StatementExpression Assignment This MemberReference pattern MemberReference pattern =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference StatementExpression Assignment This MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Properties getProperties ReturnStatement MemberReference props	0
MethodDeclaration Modifier public BasicType boolean FormalParameter Modifier final ReferenceType other ReturnStatement MethodInvocation ! MemberReference other	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator shareclassloader MethodInvocation MethodInvocation Literal getProperty getProject IfStatement BinaryOperation || BinaryOperation == MemberReference shareclassloader Literal null BinaryOperation && BinaryOperation != MemberReference shareclassloader Literal null BinaryOperation == MethodInvocation shareclassloader Literal "${" indexOf Literal 0 BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal "cannot execute when tests are " Literal "package private method println ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds LocalVariableDeclaration ReferenceType Set VariableDeclarator set MethodInvocation ds StatementExpression MethodInvocation Literal "empty set" MethodInvocation set isEmpty assertFalse LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal MethodInvocation Literal '/' MemberReference File separatorChar replace StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference s MethodInvocation set MemberReference s contains assertFalse	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MethodInvocation e hasMoreElements	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation flush StatementExpression MethodInvocation	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Resource src FormalParameter ReferenceType String encoding FormalParameter ReferenceType Map fileEntries FormalParameter ReferenceType Map FormalParameter ReferenceType Map dirEntries FormalParameter ReferenceType Map LocalVariableDeclaration ReferenceType VariableDeclarator entry Literal null LocalVariableDeclaration ReferenceType TarInputStream VariableDeclarator ti Literal null TryStatement TryStatement StatementExpression Assignment MemberReference ti ClassCreator ReferenceType TarInputStream MethodInvocation src getInputStream = CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "problem opening " MemberReference srcFile MemberReference ex WhileStatement BinaryOperation != Assignment MemberReference entry MethodInvocation ti getNextEntry = Literal null BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r ClassCreator ReferenceType MemberReference src MemberReference entry LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation entry getName IfStatement MethodInvocation entry isDirectory BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference name = StatementExpression MethodInvocation dirEntries MemberReference name MemberReference r put IfStatement MethodInvocation MemberReference name match BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference r put BlockStatement StatementExpression MethodInvocation fileEntries MemberReference name MemberReference r put IfStatement MethodInvocation MemberReference name match BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference r put CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "problem reading " MemberReference srcFile MemberReference ex IfStatement BinaryOperation != MemberReference ti Literal null BlockStatement TryStatement StatementExpression MethodInvocation ti close CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one be specified"	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier protected printMessage FormalParameter Modifier final ReferenceType String message FormalParameter Modifier final ReferenceType PrintStream stream FormalParameter Modifier final BasicType int priority StatementExpression MethodInvocation stream MemberReference message println	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MethodInvocation MemberReference includeList MemberReference p	0
MethodDeclaration Modifier public FormalParameter ReferenceType File outFile StatementExpression Assignment This MemberReference outFile MemberReference outFile =	0
MethodDeclaration Modifier public synchronized appendSelector FormalParameter ReferenceType FileSelector selector IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression SuperMethodInvocation MemberReference selector appendSelector StatementExpression Assignment MemberReference ds Literal null =	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType MethodInvocation MemberReference i elementAt	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project p StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference p maybeConfigure	0
MethodDeclaration Modifier public BasicType long FormalParameter BasicType int action LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation MemberReference toUpperCase getValue IfStatement Literal MethodInvocation MemberReference equals "" BlockStatement IfStatement BinaryOperation == MemberReference action MemberReference BlockStatement ReturnStatement MemberReference IfStatement Literal MethodInvocation MemberReference equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal 0L	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference destDir MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean validate StatementExpression Assignment This MemberReference validate MemberReference validate =	0
MethodDeclaration Modifier public addCustom FormalParameter ReferenceType ExtendSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean f StatementExpression Assignment MemberReference debug MemberReference f =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Vector list StatementExpression Assignment This MemberReference MemberReference list =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType File jspFile LocalVariableDeclaration ReferenceType String VariableDeclarator className StatementExpression Assignment MemberReference className MethodInvocation MemberReference jspFile = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference keywords length MemberReference ++ i BlockStatement IfStatement MethodInvocation className MemberReference ArraySelector MemberReference i keywords equals BlockStatement StatementExpression Assignment MemberReference className Literal "%" += BreakStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator modifiedClassName ClassCreator ReferenceType StringBuffer MethodInvocation className length LocalVariableDeclaration BasicType char VariableDeclarator firstChar MethodInvocation className Literal 0 charAt IfStatement MethodInvocation Character MemberReference firstChar isJavaIdentifierStart BlockStatement StatementExpression MethodInvocation modifiedClassName MemberReference firstChar append BlockStatement StatementExpression MethodInvocation modifiedClassName MethodInvocation MemberReference firstChar append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation className length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator subChar MethodInvocation className MemberReference i charAt IfStatement MethodInvocation Character MemberReference subChar BlockStatement StatementExpression MethodInvocation modifiedClassName MemberReference subChar append BlockStatement StatementExpression MethodInvocation modifiedClassName MethodInvocation MemberReference subChar append ReturnStatement MethodInvocation modifiedClassName toString	1
MethodDeclaration Modifier final protected ReferenceType String ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Literal ":" MethodInvocation getPassword Literal "@" MethodInvocation getURL	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Locator locator StatementExpression Assignment MemberReference helperImpl locator MemberReference locator =	1
MethodDeclaration ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation getLabel IfStatement MethodInvocation label Literal "" equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attribute must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference label setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getVersion setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public ReferenceType String getTag ReturnStatement MemberReference elementName	0
MethodDeclaration Modifier public FormalParameter BasicType long timeout StatementExpression Assignment MemberReference MemberReference timeout =	0
MethodDeclaration * @see */ Modifier public messageLogged FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator categoryObject MethodInvocation event getTask IfStatement BinaryOperation == MemberReference categoryObject Literal null BlockStatement StatementExpression Assignment MemberReference categoryObject MethodInvocation event = IfStatement BinaryOperation == MemberReference categoryObject Literal null BlockStatement StatementExpression Assignment MemberReference categoryObject MethodInvocation event getProject = LocalVariableDeclaration ReferenceType Logger VariableDeclarator log MethodInvocation Logger MethodInvocation categoryObject MethodInvocation getName getClass getLogger SwitchStatement MethodInvocation event getPriority SwitchStatementCase MemberReference Project MSG_ERR StatementExpression MethodInvocation log MethodInvocation event getMessage error BreakStatement SwitchStatementCase MemberReference Project MSG_WARN StatementExpression MethodInvocation log MethodInvocation event getMessage warn BreakStatement SwitchStatementCase MemberReference Project MSG_INFO StatementExpression MethodInvocation log MethodInvocation event getMessage info BreakStatement SwitchStatementCase MemberReference Project MSG_VERBOSE StatementExpression MethodInvocation log MethodInvocation event getMessage debug BreakStatement SwitchStatementCase MemberReference Project MSG_DEBUG StatementExpression MethodInvocation log MethodInvocation event getMessage debug BreakStatement SwitchStatementCase StatementExpression MethodInvocation log MethodInvocation event getMessage error BreakStatement	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MethodInvocation getValue =	0
MethodDeclaration * if the user a success this is of * is only if * @return of the Returned */ Modifier public IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference Literal "true" setProperty getProject	0
MethodDeclaration Modifier public addFile FormalParameter Modifier final ReferenceType String file FormalParameter Modifier final ReferenceType String StatementExpression MethodInvocation files ClassCreator ReferenceType MemberReference file MemberReference addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "No suitable path from " expectBuildExceptionContaining StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public setMode FormalParameter BasicType int mode StatementExpression Assignment This MemberReference mode MethodInvocation MemberReference mode getMode =	0
MethodDeclaration Modifier private ReferenceType Stack getStack LocalVariableDeclaration ReferenceType Stack VariableDeclarator Cast ReferenceType Stack MethodInvocation MethodInvocation Thread currentThread get IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType Stack = StatementExpression MethodInvocation MethodInvocation Thread currentThread MemberReference put ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Execute FormalParameter ReferenceType Commandline toExecute FormalParameter ReferenceType ReturnStatement ClassCreator ReferenceType Execute MethodDeclaration Modifier public BasicType int execute ReturnStatement Literal 2	0
MethodDeclaration Modifier public IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier private static ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation System Literal getProperty IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation System.err Literal "WARNING: property is not available println StatementExpression Assignment MemberReference classpath MethodInvocation System Literal "java.class.path" getProperty = ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation parser Literal file: StatementExpression MethodInvocation parser Literal StatementExpression MethodInvocation parser Literal StatementExpression MethodInvocation parser Literal "I have done I StatementExpression MethodInvocation parser Literal LocalVariableDeclaration ReferenceType VariableDeclarator entries MethodInvocation parser StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 MethodInvocation getAuthor entries assertEquals LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar MethodInvocation TimeZone Literal MemberReference getInstance StatementExpression MethodInvocation cal MemberReference Calendar Literal 0 set StatementExpression MethodInvocation cal Literal MemberReference Calendar Literal 5 Literal 16 Literal 10 Literal 32 set LocalVariableDeclaration ReferenceType Date VariableDeclarator date MethodInvocation cal StatementExpression MethodInvocation MemberReference date MemberReference ArraySelector Literal 0 MethodInvocation getDate entries assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference MemberReference = IfStatement MethodInvocation ! exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference Literal " does not exist." LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator fs ClassCreator ReferenceType ZipFileSet StatementExpression MethodInvocation fs MemberReference StatementExpression MethodInvocation fs Literal StatementExpression SuperMethodInvocation MemberReference fs	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator ClassCreator ReferenceType ZipLong ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte Literal 0xFF Cast BasicType byte Literal 0xFF Cast BasicType byte Literal 0xFF Cast BasicType byte Literal 0xFF StatementExpression MethodInvocation Literal MethodInvocation getValue assertEquals	0
MethodDeclaration Modifier public ReferenceType Hashtable ReturnStatement MethodInvocation ComponentHelper MethodInvocation This getComponentHelper	1
MethodDeclaration Modifier public FormalParameter BasicType boolean filter StatementExpression Assignment This MemberReference filtering MemberReference filter =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceSelector s IfStatement BinaryOperation == MemberReference s Literal null BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference s add StatementExpression MethodInvocation This	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool StatementExpression MethodInvocation Cast ReferenceType Utf8CPInfo MethodInvocation constantPool MemberReference index getEntry setValue StatementExpression SuperMethodInvocation MemberReference constantPool resolve	1
MethodDeclaration Modifier private FormalParameter ReferenceType Project project FormalParameter ReferenceType String host FormalParameter BasicType int port FormalParameter ReferenceType String user FormalParameter ReferenceType String password FormalParameter BasicType boolean FormalParameter ReferenceType String from FormalParameter ReferenceType String FormalParameter ReferenceType String toString FormalParameter ReferenceType String subject FormalParameter ReferenceType String message LocalVariableDeclaration ReferenceType Mailer VariableDeclarator mailer Literal null TryStatement StatementExpression Assignment MemberReference mailer Cast ReferenceType Mailer MethodInvocation ClasspathUtils Literal ClassReference MethodInvocation getClassLoader ReferenceType ClassReference ReferenceType Mailer newInstance = CatchClause CatchClauseParameter BuildException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t TernaryExpression BinaryOperation == MethodInvocation e getCause Literal null MemberReference e MethodInvocation e getCause StatementExpression MethodInvocation BinaryOperation + Literal "Failed to mail: " MethodInvocation t getMessage log ReturnStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator replyToList MethodInvocation MemberReference StatementExpression MethodInvocation mailer MemberReference host setHost StatementExpression MethodInvocation mailer MemberReference port StatementExpression MethodInvocation mailer MemberReference user StatementExpression MethodInvocation mailer MemberReference password StatementExpression MethodInvocation mailer MemberReference LocalVariableDeclaration ReferenceType Message VariableDeclarator ClassCreator ReferenceType Message MemberReference message StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation mailer MemberReference setMessage StatementExpression MethodInvocation mailer ClassCreator ReferenceType MemberReference from StatementExpression MethodInvocation mailer MemberReference replyToList setReplyToList LocalVariableDeclaration ReferenceType Vector VariableDeclarator toList MethodInvocation MemberReference toString StatementExpression MethodInvocation mailer MemberReference toList StatementExpression MethodInvocation mailer ClassCreator ReferenceType Vector StatementExpression MethodInvocation mailer ClassCreator ReferenceType Vector StatementExpression MethodInvocation mailer ClassCreator ReferenceType Vector StatementExpression MethodInvocation mailer MemberReference subject StatementExpression MethodInvocation mailer send	1
MethodDeclaration Modifier public ReferenceType String list IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef ReturnStatement TernaryExpression BinaryOperation == MethodInvocation MemberReference union Literal null ArrayCreator ReferenceType String Literal 0 MethodInvocation union list	0
MethodDeclaration Modifier protected ReferenceType Commandline StatementExpression Assignment MemberReference commandLine ClassCreator ReferenceType Commandline = IfStatement BinaryOperation != MethodInvocation getFilename Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_FILE setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getFilename setValue createArgument BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation StatementExpression MethodInvocation IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Resource getResource FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType FileResource MemberReference destDir MemberReference name	1
MethodDeclaration Modifier public log FormalParameter ReferenceType Throwable t FormalParameter BasicType int IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation t getMessage MemberReference t MemberReference log	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference parts	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator test MethodInvocation IfStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator iterator MethodInvocation iterator WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType ExtensionSet VariableDeclarator Cast ReferenceType ExtensionSet MethodInvocation iterator next LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extensions MethodInvocation MethodInvocation getProject toExtensions ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i extensions IfStatement MethodInvocation extension MemberReference test isCompatibleWith BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference propertyName Literal "true" setNewProperty getProject BlockStatement LocalVariableDeclaration Modifier final ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extensions MethodInvocation Extension MemberReference manifest ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i extensions IfStatement MethodInvocation extension MemberReference test isCompatibleWith BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference propertyName Literal "true" setNewProperty getProject	1
MethodDeclaration Modifier public FormalParameter ReferenceType File sourceFile StatementExpression Assignment This MemberReference sourceFile MemberReference sourceFile =	0
MethodDeclaration Modifier public addDate FormalParameter ReferenceType DateSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String source IfStatement BinaryOperation == MemberReference source Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer MemberReference source ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation result length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference result MemberReference i ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier private static FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType Project VariableDeclarator p ClassCreator ReferenceType Project StatementExpression MethodInvocation p StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference MagicNames Literal ": " MethodInvocation p MemberReference MagicNames getProperty println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference MagicNames Literal ": " MethodInvocation p MemberReference MagicNames getProperty println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference MagicNames Literal ": " MethodInvocation p MemberReference MagicNames getProperty println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference MagicNames ANT_HOME Literal ": " MethodInvocation p MemberReference MagicNames ANT_HOME getProperty println	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType int options FormalParameter BasicType int ReturnStatement BinaryOperation & MemberReference options BinaryOperation - Literal MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference SSL MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType char beginToken StatementExpression Assignment This MemberReference beginToken MemberReference beginToken =	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName TryStatement LocalVariableDeclaration ReferenceType Reader VariableDeclarator ClassCreator ReferenceType StringReader MemberReference sourceFileName LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator helper ClassCreator ReferenceType ChainReaderHelper StatementExpression MethodInvocation helper Literal 8192 StatementExpression MethodInvocation helper MemberReference setPrimaryReader StatementExpression MethodInvocation helper MethodInvocation getProject setProject LocalVariableDeclaration ReferenceType Vector VariableDeclarator filterChains ClassCreator ReferenceType Vector StatementExpression MethodInvocation filterChains This add StatementExpression MethodInvocation helper MemberReference filterChains setFilterChains LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation FileUtils MethodInvocation helper getAssembledReader readFully IfStatement BinaryOperation == MethodInvocation result length Literal 0 BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference result CatchClause CatchClauseParameter BuildException ex ThrowStatement MemberReference ex CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Property p FormalParameter ReferenceType Object value IfStatement BinaryOperation == MethodInvocation p MemberReference TEXT BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator str MethodInvocation value toString IfStatement BinaryOperation > MethodInvocation str length Literal 35 BlockStatement StatementExpression Assignment MemberReference str BinaryOperation + MethodInvocation str Literal 0 Literal 32 substring Literal = ReturnStatement BinaryOperation + BinaryOperation + Literal "\"" MemberReference str Literal "\"" BlockStatement IfStatement BinaryOperation == MethodInvocation p MemberReference BlockStatement ReturnStatement BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation p Cast ReferenceType Integer MemberReference value Literal "\"" BlockStatement ReturnStatement MethodInvocation value toString	0
MethodDeclaration Modifier public FormalParameter BasicType int uid StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference uid MemberReference uid =	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter Modifier final ReferenceType String value ReturnStatement TernaryExpression BinaryOperation == MemberReference value Literal null Literal null MethodInvocation value trim	0
MethodDeclaration Modifier public handleOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference ant Literal null BlockStatement StatementExpression MethodInvocation ant MemberReference output handleOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleOutput	1
MethodDeclaration Modifier protected ReferenceType String getStubClassSuffix ReturnStatement MemberReference	0
MethodDeclaration Modifier public write FormalParameter BasicType int b IOException SynchronizedStatement This OutputStreamFunneler StatementExpression MethodInvocation StatementExpression MethodInvocation out MemberReference b write	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String fromDate StatementExpression SuperMethodInvocation MemberReference fromDate	0
MethodDeclaration Modifier private BasicType int IOException ReturnStatement TernaryExpression BinaryOperation || MemberReference eof BinaryOperation == MemberReference Literal null MemberReference EOF MethodInvocation read	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public BasicType boolean getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String files FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File destDir FormalParameter ReferenceType mapper FormalParameter BasicType long granularity StatementExpression Assignment This MemberReference destDir MemberReference destDir = LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator src MethodInvocation FILE_UTILS MemberReference srcDir MemberReference ArraySelector MemberReference i files StatementExpression MethodInvocation v ClassCreator ReferenceType Resource MemberReference ArraySelector MemberReference i files MethodInvocation src exists MethodInvocation src lastModified MethodInvocation src isDirectory addElement LocalVariableDeclaration ReferenceType Resource VariableDeclarator ArrayCreator ReferenceType Resource MethodInvocation v size StatementExpression MethodInvocation v MemberReference copyInto LocalVariableDeclaration ReferenceType Resource VariableDeclarator outofdate MethodInvocation ResourceUtils MemberReference task MemberReference MemberReference mapper This MemberReference granularity LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MemberReference outofdate length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference outofdate length MemberReference ++ counter BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference counter result MemberReference ArraySelector MemberReference counter MethodInvocation getName outofdate = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference config MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IOException StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference debug MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object getReference FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType Object VariableDeclarator ret MethodInvocation references MemberReference key get IfStatement BinaryOperation != MemberReference ret Literal null BlockStatement ReturnStatement MemberReference ret StatementExpression Assignment MemberReference ret MethodInvocation MemberReference key This = IfStatement BinaryOperation && BinaryOperation == MemberReference ret Literal null MethodInvocation ! key MemberReference MagicNames equals BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator p ClassCreator ReferenceType Vector StatementExpression MethodInvocation MethodInvocation MemberReference key ClassCreator ReferenceType Vector MemberReference p parsePropertyString This IfStatement BinaryOperation == MethodInvocation p size Literal 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal reference " MemberReference key Literal " be a of property expansion MemberReference MSG_WARN log ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public ReferenceType ReferenceType newScanner FormalParameter ReferenceType FTPClient client ReturnStatement ClassCreator ReferenceType ReferenceType MemberReference client	0
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference options	1
MethodDeclaration Modifier public synchronized ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference files copyInto ReturnStatement MemberReference files	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression Literal MethodInvocation MemberReference equals "" Literal null MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal MemberReference Project MSG_VERBOSE configureProject	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration * @see */ Modifier protected expandFile FormalParameter ReferenceType FileUtils fileUtils FormalParameter ReferenceType File srcF FormalParameter ReferenceType File dir LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference srcF = StatementExpression MethodInvocation MethodInvocation srcF getPath MemberReference fis MemberReference dir expandStream CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error while expanding " MethodInvocation srcF getPath MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference fis close	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public synchronized ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation iterator StatementExpression MethodInvocation StatementExpression MethodInvocation ds LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ds getIncludedFilesCount LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ds IfStatement BinaryOperation == BinaryOperation + MemberReference MemberReference Literal 0 BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType IfStatement BinaryOperation > MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation result MethodInvocation ds getIncludedFiles IfStatement BinaryOperation > MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation result MethodInvocation ds getIncludedDirectories ReturnStatement MemberReference result	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration BasicType boolean matches FormalParameter ReferenceType java ReferenceType security ReferenceType Permission perm IfStatement MethodInvocation ! className MethodInvocation perm MethodInvocation getName getClass equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MemberReference name Literal null BlockStatement IfStatement MethodInvocation name Literal "*" endsWith BlockStatement IfStatement MethodInvocation ! perm MethodInvocation MethodInvocation name Literal 0 BinaryOperation - MethodInvocation name length Literal 1 substring startsWith getName BlockStatement ReturnStatement Literal false BlockStatement IfStatement MethodInvocation ! name MethodInvocation perm getName equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MemberReference actions Literal null BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator as MethodInvocation MethodInvocation perm LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation as size StatementExpression MethodInvocation as MemberReference actions removeAll IfStatement BinaryOperation == MethodInvocation as size MemberReference size BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType String getValue ReturnStatement TernaryExpression BinaryOperation != MemberReference value Literal null MemberReference value Literal "true"	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier protected ReferenceType StringBuffer LocalVariableDeclaration ReferenceType VariableDeclarator task MethodInvocation getTask ReturnStatement ClassCreator MethodInvocation TernaryExpression BinaryOperation != MethodInvocation getServer Literal null BinaryOperation + Literal " MethodInvocation getServer Literal "" append MethodInvocation Literal " " append MethodInvocation TernaryExpression MemberReference debug Literal " Literal "" append MethodInvocation TernaryExpression BinaryOperation != MethodInvocation Literal null BinaryOperation + Literal " MethodInvocation Literal "" append MethodInvocation Literal " " append MethodInvocation MethodInvocation task getAction append MethodInvocation Literal " " append MethodInvocation MethodInvocation getPassword append MethodInvocation Literal " " append ReferenceType StringBuffer Literal 1024	1
MethodDeclaration Modifier protected ReferenceType Commandline FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation MemberReference cmd MemberReference StatementExpression MethodInvocation MemberReference cmd ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType Location location StatementExpression Assignment This MemberReference location MemberReference location =	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType File file IfStatement MethodInvocation ! file exists BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " does not exist" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MethodInvocation ! file isFile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " is not a file" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MemberReference ! BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Setting property to " MemberReference file Literal " without library StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference Project MSG_VERBOSE log getProject StatementExpression MethodInvocation MemberReference file BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "Checking file " MemberReference file Literal " to see if it MemberReference Project MSG_VERBOSE log getProject LocalVariableDeclaration Modifier final ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference file getManifest LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extensions MethodInvocation Extension MemberReference manifest ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference extensions length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MemberReference ArraySelector MemberReference i extensions IfStatement MethodInvocation extension MemberReference isCompatibleWith BlockStatement StatementExpression MethodInvocation MemberReference file ReturnStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " skipped as it " Literal not MemberReference Project MSG_VERBOSE log getProject LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " does not ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int options LocalVariableDeclaration BasicType boolean VariableDeclarator replaceAll MethodInvocation MemberReference options MemberReference LocalVariableDeclaration BasicType int VariableDeclarator Literal 1 IfStatement MemberReference replaceAll BlockStatement StatementExpression Assignment MemberReference MemberReference Util = ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType ClassLoader classLoader FormalParameter ReferenceType URL url TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator antlib MethodInvocation MethodInvocation getProject MemberReference url MethodInvocation getURI StatementExpression MethodInvocation antlib MemberReference classLoader StatementExpression MethodInvocation antlib MethodInvocation getURI StatementExpression MethodInvocation antlib execute CatchClause CatchClauseParameter BuildException ex ThrowStatement MethodInvocation ProjectHelper MemberReference ex MethodInvocation getLocation	0
MethodDeclaration Modifier public ReferenceType Commandline ReturnStatement MemberReference	0
MethodDeclaration Modifier public append FormalParameter ReferenceType other FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot append to a reference" LocalVariableDeclaration ReferenceType String VariableDeclarator incl MethodInvocation other MemberReference p IfStatement BinaryOperation != MemberReference incl Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference incl length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i incl setName LocalVariableDeclaration ReferenceType String VariableDeclarator excl MethodInvocation other MemberReference p IfStatement BinaryOperation != MemberReference excl Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference excl length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i excl setName	1
MethodDeclaration ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal attribute must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement Literal null	1
MethodDeclaration Modifier public final FormalParameter ReferenceType String filename StatementExpression SuperMethodInvocation MemberReference filename	0
MethodDeclaration Modifier public static ReferenceType Test FormalParameter ReferenceType Class clazz TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation clazz newInstance IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference obj CatchClause CatchClauseParameter Exception e TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator suiteMethod MethodInvocation clazz MemberReference ArrayCreator ReferenceType Class Literal 0 getMethod ReturnStatement Cast ReferenceType Test MethodInvocation suiteMethod Literal null ArrayCreator ReferenceType Class Literal 0 invoke CatchClause CatchClauseParameter Exception e LocalVariableDeclaration BasicType int VariableDeclarator modifiers MethodInvocation clazz getModifiers IfStatement BinaryOperation || BinaryOperation || MethodInvocation ! Modifier MemberReference modifiers isPublic MethodInvocation Modifier MemberReference modifiers isAbstract ClassReference ! MethodInvocation MemberReference clazz isAssignableFrom ReferenceType TestCase BlockStatement ReturnStatement Literal null TryStatement ReturnStatement ClassCreator ReferenceType MemberReference clazz CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	1
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference str	0
MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression SuperMethodInvocation MemberReference line process StatementExpression MethodInvocation MethodInvocation Literal Literal "0" setProperty getProject IfStatement MethodInvocation util Literal MemberReference line match BlockStatement TryStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator myarray ClassCreator ReferenceType Vector StatementExpression MethodInvocation util MemberReference myarray MemberReference line split LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MethodInvocation myarray size MemberReference ++ counter BlockStatement IfStatement MemberReference found BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation myarray BinaryOperation + MemberReference counter Literal 1 elementAt LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Integer MemberReference parseInt StatementExpression MethodInvocation BinaryOperation + Literal change renamed " MemberReference MemberReference Project MSG_INFO log StatementExpression MethodInvocation MethodInvocation Literal BinaryOperation + Literal "" MemberReference setProperty getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference setNewProperty getProject StatementExpression Assignment MemberReference found Literal false = IfStatement MethodInvocation myarray MethodInvocation Literal equals MemberReference counter elementAt BlockStatement StatementExpression Assignment MemberReference found Literal true = CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to parse " MemberReference line Literal "\n" Literal " due to " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e MethodInvocation getLocation IfStatement MethodInvocation util Literal submit MemberReference line match BlockStatement StatementExpression MethodInvocation MethodInvocation Literal Literal "1" setProperty getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference Literal "true" setNewProperty getProject	1
MethodDeclaration Modifier protected FormalParameter BasicType int fileProcessed StatementExpression MethodInvocation BinaryOperation + MemberReference fileProcessed MemberReference MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier private BasicType boolean FormalParameter Modifier final ReferenceType first FormalParameter Modifier final ReferenceType second ReturnStatement MethodInvocation first MemberReference second	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator iter MethodInvocation keys WhileStatement MethodInvocation iter hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation iter nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference name get StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-" MemberReference name Literal ":" MethodInvocation value toString setValue createArgument IfStatement BinaryOperation || BinaryOperation == MemberReference targetFile Literal null MethodInvocation ! targetFile isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid target: " MemberReference targetFile IfStatement BinaryOperation != MemberReference outputFile Literal null BlockStatement StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-" MemberReference Literal ":" MethodInvocation outputFile Literal '\\' Literal '/' replace setValue createArgument LocalVariableDeclaration ReferenceType File VariableDeclarator javaFile ClassCreator ReferenceType File MethodInvocation MemberReference targetFile MemberReference outputFile MemberReference createOutputFileName IfStatement BinaryOperation && MethodInvocation javaFile exists BinaryOperation < MethodInvocation targetFile lastModified MethodInvocation javaFile lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Target is already built - skipping (" MemberReference targetFile Literal ")" MemberReference Project MSG_VERBOSE log ReturnStatement StatementExpression MethodInvocation cmdl MethodInvocation MethodInvocation targetFile getAbsolutePath setValue createArgument LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator classpath MethodInvocation cmdl MethodInvocation getProject createClasspath LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator javaccJar MethodInvocation JavaCC MemberReference getArchiveFile StatementExpression MethodInvocation classpath MethodInvocation MethodInvocation javaccJar getAbsolutePath setPath StatementExpression MethodInvocation classpath StatementExpression MethodInvocation cmdl MethodInvocation JavaCC MemberReference classpath MemberReference JavaCC getMainClass setClassname LocalVariableDeclaration Modifier final ReferenceType Commandline ReferenceType VariableDeclarator arg MethodInvocation cmdl StatementExpression MethodInvocation arg Literal "-mx140M" setValue StatementExpression MethodInvocation arg BinaryOperation + Literal "-Dinstall.root=" MethodInvocation getAbsolutePath setValue LocalVariableDeclaration Modifier final ReferenceType Execute VariableDeclarator process ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_INFO Literal null StatementExpression MethodInvocation MethodInvocation cmdl describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation process MethodInvocation cmdl getCommandline setCommandline TryStatement IfStatement BinaryOperation != MethodInvocation process execute Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal failed." CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Failed to launch MemberReference e	1
MethodDeclaration Modifier protected checkParameters BuildException IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation IfStatement BinaryOperation == MethodInvocation src size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference destDir Literal null MethodInvocation ! destDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal directory \"" MemberReference destDir Literal "\" does not exist " Literal "or is not a directory" MethodInvocation getLocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType to StatementExpression MethodInvocation observers MemberReference to addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal Literal "" setProperty TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal && must not fail	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v BuildException StatementExpression MethodInvocation MemberReference v MemberReference setLockStatus	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference forced	0
MethodDeclaration Modifier private static BasicType long getLength FormalParameter ReferenceType String s FormalParameter BasicType boolean t ReturnStatement TernaryExpression MemberReference t MethodInvocation s trim MemberReference s	0
MethodDeclaration Modifier private ReferenceType Map LocalVariableDeclaration ReferenceType Map VariableDeclarator ClassCreator ReferenceType Hashtable StatementExpression MethodInvocation Literal "six" ClassReference ReferenceType String put StatementExpression MethodInvocation Literal ClassReference ReferenceType StringBuffer put StatementExpression MethodInvocation Literal ClassReference ReferenceType StringBuffer put StatementExpression MethodInvocation Literal ClassReference ReferenceType StringBuffer put ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String impl StatementExpression Assignment This MemberReference impl MemberReference impl =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String type LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out ClassCreator ReferenceType PrintWriter MemberReference StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + Literal failed to create " MemberReference type Literal " " MemberReference println LocalVariableDeclaration BasicType boolean VariableDeclarator lowlevel Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator jars Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator definitions Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator LocalVariableDeclaration ReferenceType String VariableDeclarator home MethodInvocation System MemberReference getProperty LocalVariableDeclaration ReferenceType File VariableDeclarator libDir ClassCreator ReferenceType File MemberReference home MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator antHomeLib LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator anthome MethodInvocation System MemberReference MagicNames ANT_HOME getProperty IfStatement BinaryOperation != MemberReference anthome Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference anthome Literal "lib" StatementExpression Assignment MemberReference antHomeLib MethodInvocation getAbsolutePath = BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference antHomeLib BinaryOperation + BinaryOperation + Literal MemberReference File separatorChar Literal "lib" = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator dirListingText ClassCreator ReferenceType StringBuffer LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator tab Literal " -" StatementExpression MethodInvocation dirListingText MemberReference tab append StatementExpression MethodInvocation dirListingText MemberReference antHomeLib append StatementExpression MethodInvocation dirListingText Literal '\n' append IfStatement MemberReference BlockStatement StatementExpression MethodInvocation dirListingText MemberReference tab append StatementExpression MethodInvocation dirListingText Literal "the configuration append BlockStatement StatementExpression MethodInvocation dirListingText MemberReference tab append StatementExpression MethodInvocation dirListingText MemberReference libDir append StatementExpression MethodInvocation dirListingText Literal '\n' append StatementExpression MethodInvocation dirListingText MemberReference tab append StatementExpression MethodInvocation dirListingText Literal "a directory added on the command line with the -lib argument" append LocalVariableDeclaration ReferenceType String VariableDeclarator dirListing MethodInvocation dirListingText toString LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation MemberReference IfStatement BinaryOperation == MemberReference def Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation == MethodInvocation MemberReference MagicNames indexOf Literal 0 StatementExpression MethodInvocation out Literal "Cause: The name is println StatementExpression MethodInvocation out Literal "Action: Check the println StatementExpression MethodInvocation out Literal "Action: Check that any custom have been println StatementExpression MethodInvocation out BinaryOperation + Literal "Action: Check that any Literal " have println IfStatement MemberReference BlockStatement StatementExpression MethodInvocation out println StatementExpression MethodInvocation out Literal "This appears to be an antlib " println StatementExpression MethodInvocation out Literal "Action: Check that the implementing library exists in one of:" println StatementExpression MethodInvocation out MemberReference dirListing println StatementExpression Assignment MemberReference definitions Literal true = BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator classname MethodInvocation def getClassName StatementExpression Assignment MemberReference MethodInvocation classname Literal startsWith = LocalVariableDeclaration BasicType boolean VariableDeclarator optional MethodInvocation classname Literal startsWith StatementExpression Assignment MemberReference optional MethodInvocation classname Literal startsWith |= LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz Literal null TryStatement StatementExpression Assignment MemberReference clazz MethodInvocation def = CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "Cause: the class " MemberReference classname Literal " was not found." println StatementExpression Assignment MemberReference jars Literal true = IfStatement MemberReference optional BlockStatement StatementExpression MethodInvocation out Literal " This looks like one of Ant's optional println StatementExpression MethodInvocation out Literal "Action: Check that the appropriate optional JAR exists println StatementExpression MethodInvocation out MemberReference dirListing println BlockStatement StatementExpression MethodInvocation out Literal "Action: Check that the component has been println StatementExpression MethodInvocation out Literal " and that the implementing JAR is in one of:" println StatementExpression MethodInvocation out MemberReference dirListing println StatementExpression Assignment MemberReference definitions Literal true = CatchClause CatchClauseParameter NoClassDefFoundError ncdfe StatementExpression Assignment MemberReference jars Literal true = StatementExpression MethodInvocation out BinaryOperation + Literal "Cause: Could not load a class " MethodInvocation ncdfe getMessage println IfStatement MemberReference optional BlockStatement StatementExpression MethodInvocation out Literal " It is not enough to have Ant's optional println StatementExpression MethodInvocation out BinaryOperation + Literal " you need the JAR files that Literal " optional tasks println StatementExpression MethodInvocation out BinaryOperation + Literal " Ant's optional task dependencies Literal " in the println BlockStatement StatementExpression MethodInvocation out BinaryOperation + Literal " This class may be in a Literal " that is not println StatementExpression MethodInvocation out BinaryOperation + Literal "Action: what JAR files Literal " and in one of:" println StatementExpression MethodInvocation out MemberReference dirListing println IfStatement BinaryOperation != MemberReference clazz Literal null BlockStatement TryStatement StatementExpression MethodInvocation def MemberReference clazz MemberReference project innerCreateAndSet StatementExpression MethodInvocation out Literal "The component could be println CatchClause CatchClauseParameter NoSuchMethodException e StatementExpression Assignment MemberReference lowlevel Literal true = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "Cause: The class " MemberReference classname Literal " has no compatible println CatchClause CatchClauseParameter InstantiationException e StatementExpression Assignment MemberReference lowlevel Literal true = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "Cause: The class " MemberReference classname Literal " is abstract and cannot be println CatchClause CatchClauseParameter IllegalAccessException e StatementExpression Assignment MemberReference lowlevel Literal true = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "Cause: The constructor for " MemberReference classname Literal " is private and cannot be println CatchClause CatchClauseParameter InvocationTargetException ex StatementExpression Assignment MemberReference lowlevel Literal true = LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ex getTargetException StatementExpression MethodInvocation out Literal "Cause: The constructor threw the exception" println StatementExpression MethodInvocation out MethodInvocation t toString println StatementExpression MethodInvocation t MemberReference out printStackTrace CatchClause CatchClauseParameter NoClassDefFoundError ncdfe StatementExpression Assignment MemberReference jars Literal true = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "Cause: A class needed by class " MemberReference classname Literal " cannot be found: " println StatementExpression MethodInvocation out BinaryOperation + Literal " " MethodInvocation ncdfe getMessage println StatementExpression MethodInvocation out BinaryOperation + Literal "Action: what JAR files Literal " and println StatementExpression MethodInvocation out MemberReference dirListing println StatementExpression MethodInvocation out println StatementExpression MethodInvocation out Literal not this is a common println IfStatement MemberReference definitions BlockStatement StatementExpression MethodInvocation out BinaryOperation + Literal "It may be a error in the build file " Literal "or the println IfStatement MemberReference jars BlockStatement StatementExpression MethodInvocation out Literal "The cause is a missing println IfStatement MemberReference lowlevel BlockStatement StatementExpression MethodInvocation out BinaryOperation + Literal "This is a low level which may need " Literal with the of the println IfStatement MemberReference BlockStatement StatementExpression MethodInvocation out BinaryOperation + Literal "This may be the file a " Literal or the println BlockStatement StatementExpression MethodInvocation out Literal "This does not appear to be a task with println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "Please take it up with the of the " MemberReference type Literal "." println StatementExpression MethodInvocation out Literal "If you have it you probably have a bug to println BlockStatement StatementExpression MethodInvocation out println StatementExpression MethodInvocation out Literal "This is not a it is a configuration problem" println StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close ReturnStatement MethodInvocation toString	1
MethodDeclaration Modifier public ReferenceType String getHost ReturnStatement MemberReference host	0
MethodDeclaration Modifier public FormalParameter ReferenceType File src IfStatement BinaryOperation != MemberReference src Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference src	0
MethodDeclaration Modifier private FormalParameter ReferenceType Task helper StatementExpression MethodInvocation helper MethodInvocation getProject setProject StatementExpression MethodInvocation helper MethodInvocation getTaskName setTaskName StatementExpression MethodInvocation helper MethodInvocation getOwningTarget setOwningTarget StatementExpression MethodInvocation helper init	0
MethodDeclaration Modifier public ReferenceType Enumeration LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator project MethodInvocation getProject StatementExpression MethodInvocation MemberReference project setProject ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference s replaceProperties getProject setString	0
MethodDeclaration Modifier public addContainsRegexp FormalParameter ReferenceType ContainsRegexpSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Class ReturnStatement MemberReference clazz	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String feature FormalParameter BasicType boolean value TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference feature MemberReference value CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + Literal "Not " MemberReference feature MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + Literal "Not " MemberReference feature MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer value StatementExpression Assignment MemberReference timeout MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements IfStatement MethodInvocation e hasMoreElements BlockStatement WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation buf MethodInvocation e MethodInvocation toString nextElement append IfStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation buf Literal ", " append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier private FormalParameter ReferenceType Project p IfStatement BinaryOperation > MethodInvocation includesFileList size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation includesFileList elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation != MemberReference fileName Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator inclFile MethodInvocation p MemberReference fileName IfStatement MethodInvocation ! inclFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation inclFile getAbsolutePath Literal " not found." StatementExpression MethodInvocation MemberReference inclFile MemberReference includeList MemberReference p readPatterns StatementExpression MethodInvocation includesFileList removeAllElements IfStatement BinaryOperation > MethodInvocation excludesFileList size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation excludesFileList elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation != MemberReference fileName Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator exclFile MethodInvocation p MemberReference fileName IfStatement MethodInvocation ! exclFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation exclFile getAbsolutePath Literal " not found." StatementExpression MethodInvocation MemberReference exclFile MemberReference excludeList MemberReference p readPatterns StatementExpression MethodInvocation excludesFileList removeAllElements	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable error StatementExpression MethodInvocation Literal an MemberReference test MemberReference error	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType String from BuildException TryStatement StatementExpression MethodInvocation reg MemberReference from CatchClause CatchClauseParameter NoClassDefFoundError e ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot load expression MemberReference e	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier final BasicType int FormalParameter BasicType int length LocalVariableDeclaration BasicType int VariableDeclarator ttShadow This MemberReference IfStatement BinaryOperation || BinaryOperation == MemberReference ttShadow Literal null BinaryOperation < MemberReference ttShadow length MemberReference length BlockStatement StatementExpression Assignment This MemberReference Assignment MemberReference ttShadow ArrayCreator BasicType int MemberReference length = = ReturnStatement MemberReference ttShadow	1
MethodDeclaration Modifier protected IfStatement BinaryOperation > MethodInvocation Literal 1 BlockStatement StatementExpression MethodInvocation cache save StatementExpression MethodInvocation Literal 0	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType ListIterator listIterator StatementExpression MethodInvocation MethodInvocation MemberReference listIterator StatementExpression MethodInvocation sysProperties MemberReference listIterator addDefinitionsToList IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator clonedSysProperties ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ps ClassCreator ReferenceType LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ClassCreator ReferenceType ReferenceType StatementExpression MethodInvocation Literal setValue StatementExpression MethodInvocation ps MemberReference StatementExpression MethodInvocation clonedSysProperties MemberReference ps StatementExpression MethodInvocation clonedSysProperties MemberReference listIterator addDefinitionsToList LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation Literal true IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation listIterator BinaryOperation + Literal MethodInvocation toString add IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation listIterator Literal "-classpath" add StatementExpression MethodInvocation listIterator MethodInvocation classpath MethodInvocation toString Literal "ignore" concatSystemClasspath add IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference listIterator IfStatement MemberReference BlockStatement StatementExpression MethodInvocation listIterator Literal add StatementExpression MethodInvocation MemberReference listIterator	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public ReferenceType String toURI FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType Class VariableDeclarator uriClazz Literal null TryStatement StatementExpression Assignment MemberReference uriClazz MethodInvocation Class Literal "java.net.URI" forName = CatchClause CatchClauseParameter ClassNotFoundException e IfStatement BinaryOperation != MemberReference uriClazz Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator MethodInvocation getAbsoluteFile ReferenceType File MemberReference path LocalVariableDeclaration ReferenceType java ReferenceType lang ReferenceType reflect ReferenceType Method VariableDeclarator ClassReference MethodInvocation Literal ArrayCreator ReferenceType Class Literal 0 getMethod ReferenceType File LocalVariableDeclaration ReferenceType Object VariableDeclarator uriObj MethodInvocation MemberReference f ArrayCreator ReferenceType Object ArrayInitializer invoke LocalVariableDeclaration ReferenceType java ReferenceType lang ReferenceType reflect ReferenceType Method VariableDeclarator MethodInvocation uriClazz Literal ArrayCreator ReferenceType Class Literal 0 getMethod ReturnStatement Cast ReferenceType String MethodInvocation MemberReference uriObj ArrayCreator ReferenceType Object ArrayInitializer invoke CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace LocalVariableDeclaration BasicType boolean VariableDeclarator isDir ClassCreator MethodInvocation isDirectory ReferenceType File MemberReference path LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "file:" StatementExpression Assignment MemberReference path MethodInvocation MethodInvocation getPath Literal null MemberReference path = StatementExpression MethodInvocation sb Literal append IfStatement MethodInvocation ! path MemberReference File separator startsWith BlockStatement StatementExpression MethodInvocation sb Literal "/" append StatementExpression Assignment MemberReference path MethodInvocation path Literal '\\' Literal '/' replace = TryStatement StatementExpression MethodInvocation sb MethodInvocation Locator MemberReference path encodeURI append CatchClause CatchClauseParameter UnsupportedEncodingException exc ThrowStatement ClassCreator ReferenceType BuildException MemberReference exc IfStatement BinaryOperation && MemberReference isDir MethodInvocation ! path Literal "/" endsWith BlockStatement StatementExpression MethodInvocation sb Literal '/' append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public add FormalParameter ReferenceType Filter filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation MethodInvocation MemberReference rc add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Resource src IfStatement MethodInvocation ! src isExists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the archive doesn't exist" IfStatement MethodInvocation src isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the archive can't be a directory" IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType FileResource MemberReference src = IfStatement MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal resources Literal " StatementExpression Assignment MemberReference MemberReference src =	0
MethodDeclaration Modifier public ReferenceType Property LocalVariableDeclaration ReferenceType Property VariableDeclarator p ClassCreator ReferenceType Property Literal true MethodInvocation getProject StatementExpression MethodInvocation p MethodInvocation setProject StatementExpression MethodInvocation p Literal "property" setTaskName StatementExpression MethodInvocation properties MemberReference p addElement ReturnStatement MemberReference p	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected to MemberReference expectBuildExceptionContaining	1
MethodDeclaration Modifier public addDependency FormalParameter ReferenceType String dependency IfStatement BinaryOperation == MemberReference dependencies Literal null BlockStatement StatementExpression Assignment MemberReference dependencies ClassCreator ReferenceType ArrayList Literal 2 = StatementExpression MethodInvocation dependencies MemberReference dependency add	0
MethodDeclaration Modifier protected setUp Exception StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration FormalParameter ReferenceType Vector v LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator tests MethodInvocation StatementExpression MethodInvocation v BinaryOperation + MethodInvocation v size MemberReference tests length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tests length MemberReference ++ i BlockStatement StatementExpression MethodInvocation v MemberReference ArraySelector MemberReference i tests addElement	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference tarFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation IfStatement BinaryOperation && MethodInvocation tarFile exists MethodInvocation tarFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is a MethodInvocation getLocation IfStatement BinaryOperation && MethodInvocation tarFile exists MethodInvocation ! tarFile canWrite BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal not write to the specified MethodInvocation getLocation LocalVariableDeclaration ReferenceType Vector VariableDeclarator Cast ReferenceType Vector MethodInvocation filesets clone TryStatement IfStatement BinaryOperation != MemberReference baseDir Literal null BlockStatement IfStatement MethodInvocation ! baseDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "basedir does not exist!" MethodInvocation getLocation LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator ClassCreator ReferenceType TarFileSet MemberReference fileset StatementExpression MethodInvocation MemberReference baseDir StatementExpression MethodInvocation filesets MemberReference addElement IfStatement BinaryOperation && BinaryOperation == MethodInvocation filesets size Literal 0 BinaryOperation == MethodInvocation size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal must either a basedir " Literal or some resource" Literal " MethodInvocation getLocation LocalVariableDeclaration BasicType boolean VariableDeclarator upToDate Literal true ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filesets elements MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference upToDate MethodInvocation Cast ReferenceType TarFileSet MethodInvocation e nextElement check &= ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference upToDate MethodInvocation Cast ReferenceType ResourceCollection MethodInvocation e nextElement check &= IfStatement MemberReference upToDate BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Nothing to " MethodInvocation tarFile getAbsolutePath Literal " is up to MemberReference Project MSG_INFO log ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation tarFile getAbsolutePath MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType VariableDeclarator tOut Literal null TryStatement StatementExpression Assignment MemberReference tOut ClassCreator ReferenceType MethodInvocation ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference tarFile compress = StatementExpression MethodInvocation tOut Literal true IfStatement MethodInvocation longFileMode BlockStatement StatementExpression MethodInvocation tOut MemberReference IfStatement BinaryOperation || MethodInvocation longFileMode MethodInvocation longFileMode BlockStatement StatementExpression MethodInvocation tOut MemberReference BlockStatement StatementExpression MethodInvocation tOut MemberReference StatementExpression Assignment MemberReference Literal false = ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filesets elements MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation Cast ReferenceType TarFileSet MethodInvocation e nextElement MemberReference tOut tar ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation Cast ReferenceType ResourceCollection MethodInvocation e nextElement MemberReference tOut tar CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Problem creating " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference tOut close StatementExpression Assignment MemberReference filesets MemberReference =	1
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference exactly Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one of or exactly may be set." IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference BinaryOperation == Literal null MemberReference exactly BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "One of or exactly must be set." TryStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression ClassCreator ReferenceType MemberReference BlockStatement StatementExpression ClassCreator ReferenceType MemberReference exactly CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType BuildException Literal "The argument is not a Decimal	1
MethodDeclaration Modifier public add FormalParameter ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference add createMapper	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean eval BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation LocalVariableDeclaration BasicType boolean VariableDeclarator state Literal false WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType MethodInvocation e nextElement StatementExpression Assignment MemberReference state MethodInvocation c eval ^= ReturnStatement MemberReference state	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal "" endsWith assertTrue	0
MethodDeclaration Modifier protected log FormalParameter ReferenceType String message StatementExpression Assignment This MemberReference MemberReference message =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private handleError FormalParameter ReferenceType String msg IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression MethodInvocation MemberReference msg log	0
MethodDeclaration Modifier public synchronized close IOException IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close StatementExpression Assignment MemberReference slack Literal null = StatementExpression Assignment MemberReference in Literal null =	1
MethodDeclaration Modifier public BasicType int size LocalVariableDeclaration ReferenceType Properties VariableDeclarator p MethodInvocation ReturnStatement BinaryOperation + MethodInvocation variables size MethodInvocation p size	0
MethodDeclaration Modifier public synchronized stop StatementExpression MethodInvocation watchdog stop StatementExpression MethodInvocation cleanUp	0
MethodDeclaration Modifier protected handleErrorOutput FormalParameter ReferenceType String output StatementExpression MethodInvocation MemberReference output MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier protected loadProperties FormalParameter ReferenceType ClassLoader al FormalParameter ReferenceType URL url LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement StatementExpression Assignment MemberReference is MethodInvocation url openStream = IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Could not load definitions from " MemberReference url MemberReference Project MSG_WARN log ReturnStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props MemberReference is load LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator keys MethodInvocation props keys WhileStatement MethodInvocation keys hasMoreElements BlockStatement StatementExpression Assignment MemberReference name Cast ReferenceType String MethodInvocation keys nextElement = StatementExpression Assignment MemberReference classname MethodInvocation props MemberReference name getProperty = StatementExpression MethodInvocation MemberReference al MemberReference name MemberReference classname addDefinition CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference is close	1
MethodDeclaration Modifier public FormalParameter ReferenceType String f IfStatement BinaryOperation && BinaryOperation != MemberReference f Literal null MethodInvocation f Literal equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal = BlockStatement StatementExpression Assignment MemberReference Literal =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" executeTarget StatementExpression MethodInvocation BinaryOperation == MethodInvocation project Literal "test" getProperty Literal null assertTrue	0
MethodDeclaration Modifier public ReferenceType UnknownElement FormalParameter ReferenceType Project project FormalParameter ReferenceType URL source BuildException LocalVariableDeclaration ReferenceType Target VariableDeclarator dummyTarget ClassCreator ReferenceType Target StatementExpression MethodInvocation dummyTarget MemberReference project setProject LocalVariableDeclaration ReferenceType AntXMLContext VariableDeclarator context ClassCreator ReferenceType AntXMLContext MemberReference project StatementExpression MethodInvocation context MemberReference dummyTarget addTarget StatementExpression MethodInvocation context MemberReference dummyTarget StatementExpression MethodInvocation MethodInvocation context getProject MemberReference source ClassCreator ReferenceType RootHandler MemberReference context MemberReference parse LocalVariableDeclaration ReferenceType Task VariableDeclarator tasks MethodInvocation dummyTarget IfStatement BinaryOperation != MemberReference tasks length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No tasks ReturnStatement Cast ReferenceType UnknownElement MemberReference ArraySelector Literal 0 tasks	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Vector getFileList ReturnStatement MemberReference compileList	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget StatementExpression MethodInvocation Literal 2 failed" MethodInvocation Literal Literal compareFiles assertTrue	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 StatementExpression MethodInvocation Literal MemberReference	0
MethodDeclaration Modifier public setFont FormalParameter ReferenceType String f StatementExpression Assignment MemberReference font MemberReference f =	0
MethodDeclaration Modifier public ReferenceType Task getTask IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement ReturnStatement Cast ReferenceType Task MemberReference realThing ReturnStatement Literal null	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String resource IfStatement MethodInvocation resource Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference resource MethodInvocation resource Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference resource BinaryOperation + Literal MemberReference resource = LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation MethodInvocation getClassLoader getClass MemberReference resource IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found " MethodInvocation f getAbsolutePath MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation antRuntimeClasses MethodInvocation MemberReference f setLocation createPath ReturnStatement Literal true BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal find " MemberReference resource MemberReference Project MSG_DEBUG log ReturnStatement Literal false	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args Exception LocalVariableDeclaration ReferenceType VariableDeclarator helper ClassCreator ReferenceType MemberReference args StatementExpression MethodInvocation helper process	0
MethodDeclaration Modifier public FormalParameter ReferenceType java ReferenceType security ReferenceType Permission perm IfStatement MemberReference BlockStatement IfStatement BinaryOperation && MemberReference MethodInvocation ! perm MethodInvocation Literal equals getName BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false IfStatement MethodInvocation granted MemberReference perm implies BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MemberReference perm checkRevoked IfStatement BinaryOperation && MemberReference ! BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference perm BlockStatement IfStatement MethodInvocation ! granted MemberReference perm implies BlockStatement ThrowStatement ClassCreator ReferenceType SecurityException BinaryOperation + BinaryOperation + Literal "Permission " MemberReference perm Literal " was not StatementExpression MethodInvocation MemberReference perm checkRevoked	1
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "no in Literal must nest a condition into expectSpecificBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MethodInvocation Boolean MethodInvocation booleanValue MethodInvocation trim valueOf =	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Reader reader FormalParameter ReferenceType PrintStream out IOException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sql ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator line LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader MemberReference reader WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line trim = StatementExpression Assignment MemberReference line MethodInvocation MethodInvocation MemberReference line replaceProperties getProject = IfStatement MemberReference ! BlockStatement IfStatement MethodInvocation line Literal startsWith BlockStatement ContinueStatement IfStatement MethodInvocation line Literal "--" startsWith BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference line IfStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken IfStatement Literal MethodInvocation MemberReference token equalsIgnoreCase BlockStatement ContinueStatement IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation sql Literal " " append StatementExpression MethodInvocation sql MemberReference line append BlockStatement StatementExpression MethodInvocation sql Literal "\n" append StatementExpression MethodInvocation sql MemberReference line append IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation >= MethodInvocation line Literal "--" indexOf Literal 0 BlockStatement StatementExpression MethodInvocation sql Literal "\n" append IfStatement BinaryOperation || BinaryOperation && MethodInvocation MemberReference NORMAL equals MethodInvocation StringUtils MemberReference sql MemberReference delimiter endsWith BinaryOperation && MethodInvocation MemberReference equals MethodInvocation line MemberReference delimiter equals BlockStatement StatementExpression MethodInvocation MethodInvocation sql Literal 0 BinaryOperation - MethodInvocation sql length MethodInvocation delimiter length substring MemberReference out execSQL StatementExpression MethodInvocation sql Literal 0 MethodInvocation sql length Literal "" replace IfStatement BinaryOperation > MethodInvocation sql length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation sql toString MemberReference out execSQL	1
MethodDeclaration Modifier static ReferenceType ArrayList toExtensions FormalParameter Modifier final ReferenceType List BuildException LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator results ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator adapter Cast ReferenceType MethodInvocation MemberReference i get LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MethodInvocation adapter StatementExpression MethodInvocation results MemberReference extension add ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier synchronized protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation DataType MemberReference MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation DataType MemberReference comp MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public Exception IfStatement BinaryOperation || MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c ClassCreator ReferenceType CommandlineJava StatementExpression MethodInvocation c MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation c Literal setClassname StatementExpression MethodInvocation c MethodInvocation Literal setValue LocalVariableDeclaration ReferenceType VariableDeclarator a ClassCreator ReferenceType StatementExpression MethodInvocation a MemberReference project setProject LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ea ClassCreator ReferenceType ReferenceType StatementExpression MethodInvocation ea Literal StatementExpression MethodInvocation a MemberReference ea StatementExpression MethodInvocation c MemberReference a LocalVariableDeclaration ReferenceType String VariableDeclarator expected ArrayCreator ReferenceType String ArrayInitializer Literal null Literal Literal Literal Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 3 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation c getCommandline StatementExpression MethodInvocation MemberReference expected length MemberReference s length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 1 BinaryOperation < MemberReference j MemberReference expected length MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference j expected MemberReference ArraySelector MemberReference j s assertEquals LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c2 Cast ReferenceType CommandlineJava MethodInvocation c clone LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation c2 getCommandline StatementExpression MethodInvocation MemberReference expected length MemberReference s length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 1 BinaryOperation < MemberReference j MemberReference expected length MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference j expected MemberReference ArraySelector MemberReference j s assertEquals	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private BasicType boolean IfStatement MethodInvocation ! destFile exists BlockStatement StatementExpression MethodInvocation Literal file does not a build is required" MemberReference Project MSG_VERBOSE log ReturnStatement Literal true LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation srcFile lastModified LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation destFile lastModified IfStatement BinaryOperation > MemberReference BinaryOperation + MemberReference MethodInvocation FILE_UTILS BlockStatement StatementExpression MethodInvocation Literal "Source file is than the dest file: a rebuild is required" MemberReference Project MSG_VERBOSE log ReturnStatement Literal true BlockStatement StatementExpression MethodInvocation Literal "The output file is up to date" MemberReference Project MSG_VERBOSE log ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean isCaseSensitive StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference isCaseSensitive	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Mapper VariableDeclarator ClassCreator ReferenceType Mapper MemberReference project LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation Literal setValue StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType Mapper VariableDeclarator container ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation container MemberReference StatementExpression MethodInvocation container MemberReference add StatementExpression MethodInvocation container MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation container LocalVariableDeclaration ReferenceType String VariableDeclarator targets MethodInvocation Literal mapFileName StatementExpression MethodInvocation Literal "no MemberReference targets assertNotNull StatementExpression MethodInvocation Literal "wrong number of Literal 3 MemberReference targets length assertEquals LocalVariableDeclaration ReferenceType List VariableDeclarator list MethodInvocation Arrays MemberReference targets asList StatementExpression MethodInvocation Literal "cannot find expected target MethodInvocation list Literal contains assertTrue StatementExpression MethodInvocation Literal "cannot find expected target MethodInvocation list Literal contains assertTrue StatementExpression MethodInvocation Literal "cannot find expected target MethodInvocation list Literal contains assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String params StatementExpression Assignment This MemberReference MemberReference params =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count SAXParseException StatementExpression MethodInvocation currentHandler MemberReference buf MemberReference start MemberReference count MemberReference context characters	0
MethodDeclaration Modifier public static BasicType boolean TryStatement StatementExpression MethodInvocation Class MemberReference forName CatchClause CatchClauseParameter ClassNotFoundException e ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized BasicType boolean isCaseSensitive ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation isCaseSensitive MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference MSVSS MemberReference MSVSS BinaryOperation + BinaryOperation + MethodInvocation project MethodInvocation getAbsolutePath MemberReference File separator MemberReference MemberReference MSVSS MemberReference MSVSS BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME Literal "," MemberReference BinaryOperation + MemberReference MSVSS Literal "-" LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference VSS_USERNAME Literal "," MemberReference StatementExpression MethodInvocation MemberReference DS_VSS_PROJECT_PATH StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference project MemberReference StatementExpression Assignment MemberReference commandline MethodInvocation = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference NORMAL MemberReference	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator lookAhead2 SuperMethodInvocation read IfStatement BinaryOperation && BinaryOperation == MemberReference lookAhead2 Literal - 1 BinaryOperation == MemberReference lookAhead MemberReference CTRLZ BlockStatement ReturnStatement Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference lookAhead StatementExpression Assignment MemberReference lookAhead MemberReference lookAhead2 = ReturnStatement MemberReference i	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String input ReturnStatement MethodInvocation StringUtils MemberReference input	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType CrLf eol IfStatement BinaryOperation == MemberReference eol MemberReference CrLf BlockStatement ReturnStatement MethodInvocation System Literal "line.separator" getProperty IfStatement BinaryOperation || BinaryOperation == MemberReference eol MemberReference CrLf CR BinaryOperation == MemberReference eol MemberReference CrLf BlockStatement ReturnStatement Literal "\r" IfStatement BinaryOperation || BinaryOperation == MemberReference eol MemberReference CrLf CRLF BinaryOperation == MemberReference eol MemberReference CrLf BlockStatement ReturnStatement Literal ReturnStatement Literal "\n"	1
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count StatementExpression MethodInvocation wrapper MemberReference buf MemberReference start MemberReference count	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Map ReturnStatement MemberReference	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public BasicType int read IOException WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation in read IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement ReturnStatement MemberReference c IfStatement MethodInvocation ! Cast BasicType char MemberReference c BlockStatement ReturnStatement MemberReference c	1
MethodDeclaration Modifier public FormalParameter ReferenceType String list LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference list Literal "," WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation tokens nextToken addElement	0
MethodDeclaration Modifier public ReferenceType String getPath ReturnStatement MethodInvocation MethodInvocation directory getAbsolutePath getPath	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference targetType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression SuperMethodInvocation MemberReference label	0
MethodDeclaration Modifier private process Exception ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference descriptors length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference i descriptors LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference descriptorDirectory MemberReference LocalVariableDeclaration BasicType int VariableDeclarator extIndex MethodInvocation Literal "." lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator serName Literal null IfStatement BinaryOperation != MemberReference extIndex Literal - 1 BlockStatement StatementExpression Assignment MemberReference serName BinaryOperation + MethodInvocation Literal 0 MemberReference extIndex substring Literal = BlockStatement StatementExpression Assignment MemberReference serName BinaryOperation + MemberReference Literal = LocalVariableDeclaration ReferenceType File VariableDeclarator serFile ClassCreator ReferenceType File MemberReference generatedFilesDirectory MemberReference serName IfStatement BinaryOperation || BinaryOperation || MethodInvocation ! serFile exists BinaryOperation < MethodInvocation serFile lastModified MethodInvocation descriptorFile lastModified MethodInvocation MemberReference serFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal "-d" MethodInvocation serFile getParent Literal MethodInvocation serFile getName MethodInvocation descriptorFile getPath TryStatement StatementExpression MethodInvocation MemberReference args main CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator newArgs ArrayInitializer Literal "-d" MethodInvocation generatedFilesDirectory getPath Literal MethodInvocation serFile getName MethodInvocation descriptorFile getPath StatementExpression MethodInvocation MemberReference newArgs main	1
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException IfStatement BinaryOperation == MemberReference workingDir Literal null BlockStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec StatementExpression MethodInvocation System MethodInvocation Literal "user.dir" MethodInvocation workingDir getAbsolutePath put getProperties TryStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec StatementExpression MethodInvocation System MethodInvocation Literal "user.dir" MemberReference put getProperties	1
MethodDeclaration Modifier public IOException IfStatement BinaryOperation > This MemberReference assemLen Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i This MemberReference assemLen BinaryOperation < MemberReference i This MemberReference assemBuf MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment This MemberReference assemBuf ArraySelector MemberReference i Literal 0 = StatementExpression This MemberReference buffer MethodInvocation This MemberReference assemBuf writeRecord StatementExpression Assignment This MemberReference currBytes This MemberReference assemLen += StatementExpression Assignment This MemberReference assemLen Literal 0 = IfStatement BinaryOperation < This MemberReference currBytes This MemberReference currSize BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal '" MemberReference Literal "' closed at '" This MemberReference currBytes Literal "' before the '" This MemberReference currSize Literal "' bytes specified in the header were	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test StatementExpression MethodInvocation MemberReference test	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement MethodInvocation MemberReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement MethodInvocation ! isEmpty BlockStatement ThrowStatement MethodInvocation IfStatement MethodInvocation ! selectors isEmpty BlockStatement ThrowStatement MethodInvocation StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "foo" expectPropertyUnset	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public static ReferenceType AttributeList FormalParameter ReferenceType Attributes LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation getLength IfStatement BinaryOperation > MemberReference length Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference i getQName MethodInvocation MemberReference i getType MethodInvocation MemberReference i getValue addAttribute ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType long LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation MethodInvocation toLowerCase getValue LocalVariableDeclaration ReferenceType Long VariableDeclarator l Cast ReferenceType Long MethodInvocation MemberReference key get ReturnStatement MethodInvocation l longValue	0
MethodDeclaration Modifier public addParam FormalParameter Modifier final ReferenceType Parameter param StatementExpression MethodInvocation parameters MemberReference param addElement	0
MethodDeclaration Modifier protected FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType RuntimeConfigurable wrapper StatementExpression Assignment This MemberReference wrapper MemberReference wrapper =	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile TernaryExpression MemberReference filtering MemberReference globalFilters Literal null MemberReference overwrite copyFile	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation MemberReference pattern MemberReference str Literal true	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createJvmarg ReturnStatement MethodInvocation commandline	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Missing elements for element Literal "Missing elements for element expectSpecificBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal StatementExpression MethodInvocation Literal Literal ".xml"	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal Value = " MemberReference value	0
MethodDeclaration Modifier protected ReferenceType ArchiveState getResourcesToAdd FormalParameter ReferenceType FileSet filesets FormalParameter ReferenceType File zipFile FormalParameter BasicType boolean needsUpdate BuildException LocalVariableDeclaration ReferenceType Resource VariableDeclarator initialResources MethodInvocation MemberReference filesets IfStatement MethodInvocation MemberReference initialResources isEmpty BlockStatement IfStatement BinaryOperation && MemberReference needsUpdate MemberReference doUpdate BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources IfStatement MethodInvocation Literal equals BlockStatement IfStatement MemberReference doUpdate BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference archiveType Literal " archive " MemberReference zipFile Literal " not updated because no new files were included." MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: skipping " MemberReference archiveType Literal " archive " MemberReference zipFile Literal " because no files were included." MemberReference Project MSG_WARN log IfStatement MethodInvocation Literal equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot create " MemberReference archiveType Literal " archive " MemberReference zipFile Literal ": no files were included." MethodInvocation getLocation BlockStatement IfStatement MethodInvocation ! zipFile exists BlockStatement StatementExpression Assignment MemberReference needsUpdate Literal true = ReturnStatement ClassCreator ReferenceType ArchiveState MemberReference needsUpdate MemberReference initialResources IfStatement MethodInvocation ! zipFile exists BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources IfStatement BinaryOperation && MemberReference needsUpdate MemberReference ! doUpdate BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources LocalVariableDeclaration ReferenceType Resource VariableDeclarator newerResources ArrayCreator ReferenceType Resource MemberReference filesets length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filesets length MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference fileset ReferenceType ZipFileSet BinaryOperation == Cast ReferenceType ZipFileSet MemberReference fileset Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator base MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation getProject getDir filesets ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference ArraySelector MemberReference i MemberReference length initialResources MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation FILE_UTILS MemberReference base MemberReference ArraySelector MemberReference i ArraySelector MemberReference j MethodInvocation getName initialResources IfStatement MethodInvocation MemberReference zipFile equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "A file cannot " Literal "itself" MethodInvocation getLocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filesets length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i MemberReference length initialResources Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newerResources ArrayCreator ReferenceType Resource ArrayInitializer = ContinueStatement LocalVariableDeclaration ReferenceType VariableDeclarator myMapper ClassCreator ReferenceType IdentityMapper IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i filesets ReferenceType ZipFileSet BlockStatement LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator zfs Cast ReferenceType ZipFileSet MemberReference ArraySelector MemberReference i filesets IfStatement BinaryOperation && BinaryOperation != MethodInvocation zfs MethodInvocation getProject getFullpath Literal null MethodInvocation ! zfs MethodInvocation Literal "" equals MethodInvocation getProject getFullpath BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator fm ClassCreator ReferenceType StatementExpression MethodInvocation fm MethodInvocation zfs MethodInvocation getProject getFullpath StatementExpression Assignment MemberReference myMapper MemberReference fm = IfStatement BinaryOperation && BinaryOperation != MethodInvocation zfs MethodInvocation getProject Literal null MethodInvocation ! zfs MethodInvocation Literal "" equals MethodInvocation getProject BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator gm ClassCreator ReferenceType StatementExpression MethodInvocation gm Literal "*" LocalVariableDeclaration ReferenceType String VariableDeclarator prefix MethodInvocation zfs MethodInvocation getProject IfStatement BinaryOperation && MethodInvocation ! prefix Literal "/" endsWith MethodInvocation ! prefix Literal "\\" endsWith BlockStatement StatementExpression Assignment MemberReference prefix Literal "/" += StatementExpression MethodInvocation gm BinaryOperation + MemberReference prefix Literal "*" StatementExpression Assignment MemberReference myMapper MemberReference gm = LocalVariableDeclaration ReferenceType Resource VariableDeclarator resources MemberReference ArraySelector MemberReference i initialResources IfStatement MemberReference doFilesonly BlockStatement StatementExpression Assignment MemberReference resources MethodInvocation MemberReference resources = StatementExpression Assignment MemberReference ArraySelector MemberReference i newerResources MethodInvocation ResourceUtils This MemberReference resources MemberReference myMapper MethodInvocation = StatementExpression Assignment MemberReference needsUpdate BinaryOperation || MemberReference needsUpdate BinaryOperation > MemberReference ArraySelector MemberReference i MemberReference length newerResources Literal 0 = IfStatement BinaryOperation && MemberReference needsUpdate MemberReference ! doUpdate BlockStatement BreakStatement IfStatement BinaryOperation && MemberReference needsUpdate MemberReference ! doUpdate BlockStatement ReturnStatement ClassCreator ReferenceType ArchiveState Literal true MemberReference initialResources ReturnStatement ClassCreator ReferenceType ArchiveState MemberReference needsUpdate MemberReference newerResources	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public final ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized BasicType boolean isCaseSensitive ReturnStatement MemberReference isCaseSensitive	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "no stylesheet specified" BinaryOperation + BinaryOperation + Literal the " Literal either as a filename in style " Literal or as a resource" expectSpecificBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is required to fail Literal expectSpecificBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference config srcDir MemberReference =	0
MethodDeclaration Modifier final protected writeIndexLikeList FormalParameter ReferenceType List dirs FormalParameter ReferenceType List files FormalParameter ReferenceType PrintWriter writer IOException StatementExpression MethodInvocation Collections MemberReference dirs sort StatementExpression MethodInvocation Collections MemberReference files sort LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation dirs iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dir Cast ReferenceType String MethodInvocation iter next StatementExpression Assignment MemberReference dir MethodInvocation dir Literal '\\' Literal '/' replace = IfStatement MethodInvocation dir Literal "./" startsWith BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation dir Literal 2 substring = WhileStatement MethodInvocation dir Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation dir Literal 1 substring = LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation dir Literal '/' lastIndexOf IfStatement BinaryOperation != MemberReference pos Literal - 1 BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation dir Literal 0 MemberReference pos substring = IfStatement MethodInvocation dir Literal startsWith BlockStatement ContinueStatement StatementExpression MethodInvocation writer MemberReference dir println StatementExpression Assignment MemberReference iter MethodInvocation files iterator = WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation writer MethodInvocation iter next println	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal BinaryOperation > MethodInvocation MethodInvocation Literal it indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation Literal text BinaryOperation > MethodInvocation MethodInvocation Literal it indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public ReferenceType Date getDate ReturnStatement MemberReference date	0
MethodDeclaration Modifier private ReferenceType String ReturnStatement MethodInvocation MethodInvocation MethodInvocation getAbsolutePath MethodInvocation Literal '\\' Literal '/' replace getProject	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration BasicType long VariableDeclarator totalTime BinaryOperation - MethodInvocation System currentTimeMillis MemberReference buildElement startTime StatementExpression MethodInvocation buildElement.element MemberReference TIME_ATTR MethodInvocation MemberReference totalTime setAttribute IfStatement BinaryOperation != MethodInvocation event getException Literal null BlockStatement StatementExpression MethodInvocation buildElement.element MemberReference MethodInvocation event MethodInvocation toString getException setAttribute LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation event getException LocalVariableDeclaration ReferenceType Text VariableDeclarator errText MethodInvocation doc MethodInvocation StringUtils MemberReference t LocalVariableDeclaration ReferenceType Element VariableDeclarator stacktrace MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation stacktrace MemberReference errText StatementExpression MethodInvocation buildElement.element MemberReference stacktrace LocalVariableDeclaration ReferenceType String VariableDeclarator outFilename MethodInvocation event MethodInvocation Literal getProperty getProject IfStatement BinaryOperation == MemberReference outFilename Literal null BlockStatement StatementExpression Assignment MemberReference outFilename Literal = LocalVariableDeclaration ReferenceType String VariableDeclarator xslUri MethodInvocation event MethodInvocation Literal getProperty getProject IfStatement BinaryOperation == MemberReference xslUri Literal null BlockStatement StatementExpression Assignment MemberReference xslUri Literal = LocalVariableDeclaration ReferenceType Writer VariableDeclarator out Literal null TryStatement LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator stream MemberReference outStream IfStatement BinaryOperation == MemberReference stream Literal null BlockStatement StatementExpression Assignment MemberReference stream ClassCreator ReferenceType FileOutputStream MemberReference outFilename = StatementExpression Assignment MemberReference out ClassCreator ReferenceType OutputStreamWriter MemberReference stream Literal "UTF8" = StatementExpression MethodInvocation out Literal "<?xml write IfStatement BinaryOperation > MethodInvocation xslUri length Literal 0 BlockStatement StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal MemberReference xslUri Literal write StatementExpression ClassCreator MethodInvocation MemberReference buildElement element MemberReference out Literal 0 Literal "\t" write ReferenceType StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException exc ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write log file" MemberReference exc IfStatement BinaryOperation != MemberReference out Literal null BlockStatement TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference buildElement Literal null =	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation System.out MethodInvocation toString println	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "xml" Literal	0
MethodDeclaration Modifier public BasicType boolean TryStatement StatementExpression MethodInvocation MemberReference XmlConstants Literal true StatementExpression MethodInvocation MemberReference XmlConstants CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_VERBOSE log ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference o ReferenceType DataType BlockStatement StatementExpression MethodInvocation Cast ReferenceType DataType MemberReference o MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String files ReturnStatement MethodInvocation MemberReference files MemberReference baseDir	1
MethodDeclaration Modifier public ReferenceType ClassLoader ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType Native2AsciiAdapter getAdapter FormalParameter ReferenceType String choice FormalParameter ReferenceType log BuildException IfStatement BinaryOperation || BinaryOperation && MethodInvocation JavaEnvUtils BinaryOperation == MemberReference choice Literal null MethodInvocation MemberReference choice equals BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation MemberReference choice equals BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement BinaryOperation != MemberReference choice Literal null BlockStatement ReturnStatement MethodInvocation MemberReference choice resolveClassName ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier private final ReferenceType String FormalParameter ReferenceType String password LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation password length MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf MemberReference ArraySelector MethodInvocation password MemberReference i charAt shifts append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation getIncludedFiles StatementExpression MethodInvocation Literal 1 MemberReference files length assertEquals StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 files Literal assertEquals	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement BinaryOperation < MemberReference pos MemberReference array length	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp This MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument BlockStatement IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public static ReferenceType CrLf newInstance FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType CrLf VariableDeclarator c ClassCreator ReferenceType CrLf StatementExpression MethodInvocation c MemberReference value setValue ReturnStatement MemberReference c	0
MethodDeclaration Modifier public FormalParameter BasicType boolean autocommit StatementExpression Assignment This MemberReference autocommit MemberReference autocommit =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File fileName StatementExpression Assignment MemberReference MemberReference fileName =	0
MethodDeclaration Modifier public write FormalParameter Modifier final BasicType int b IOException IfStatement BinaryOperation != This MemberReference out Literal null BlockStatement StatementExpression MethodInvocation MemberReference b write0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier static ReferenceType String FormalParameter ReferenceType Test test LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation test MethodInvocation getName getClass IfStatement BinaryOperation instanceof MemberReference test ReferenceType ReferenceType BlockStatement StatementExpression Assignment MemberReference className Cast ReferenceType ReferenceType MemberReference test = IfStatement MethodInvocation className Literal equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation test toString LocalVariableDeclaration BasicType int VariableDeclarator paren MethodInvocation name Literal '(' lastIndexOf IfStatement BinaryOperation && BinaryOperation != MemberReference paren Literal - 1 MethodInvocation name Literal ")" endsWith BlockStatement StatementExpression Assignment MemberReference className MethodInvocation name BinaryOperation + MemberReference paren Literal 1 BinaryOperation - MethodInvocation name length Literal 1 substring = ReturnStatement MemberReference className	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String version StatementExpression SuperMethodInvocation MemberReference version	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public synchronized ReferenceType File getDir FormalParameter ReferenceType Project p ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation MemberReference p getDir MemberReference p MemberReference dir	1
MethodDeclaration Modifier public Exception LocalVariableDeclaration BasicType byte VariableDeclarator data ArrayInitializer Cast BasicType byte Literal Literal 0x02 Literal Cast BasicType byte Literal Literal 0123 Cast BasicType byte Literal 0x80 Literal 0 Literal 0 Literal 0 Literal 0 Literal 5 Literal 0 Literal 6 Literal 0 LocalVariableDeclaration ReferenceType AsiExtraField VariableDeclarator a ClassCreator ReferenceType AsiExtraField StatementExpression MethodInvocation a MemberReference data Literal 0 MemberReference data length parseFromLocalFileData StatementExpression MethodInvocation Literal plain file" MemberReference data length MethodInvocation a MethodInvocation getValue getLocalFileDataLength assertEquals StatementExpression MethodInvocation Literal file, no link" MethodInvocation ! a isLink assertTrue StatementExpression MethodInvocation Literal file, no dir" MethodInvocation ! a isDirectory assertTrue StatementExpression MethodInvocation Literal "mode plain file" BinaryOperation | MemberReference Literal 0123 MethodInvocation a getMode assertEquals StatementExpression MethodInvocation Literal "uid plain file" Literal 5 MethodInvocation a assertEquals StatementExpression MethodInvocation Literal "gid plain file" Literal 6 MethodInvocation a assertEquals StatementExpression Assignment MemberReference data ArrayCreator BasicType byte ArrayInitializer Literal Cast BasicType byte Literal Literal Cast BasicType byte Literal Literal 0123 Cast BasicType byte Literal 0xA0 Literal 4 Literal 0 Literal 0 Literal 0 Literal 5 Literal 0 Literal 6 Literal 0 Cast BasicType byte Literal 't' Cast BasicType byte Literal 'e' Cast BasicType byte Literal 's' Cast BasicType byte Literal 't' = StatementExpression Assignment MemberReference a ClassCreator ReferenceType AsiExtraField = StatementExpression MethodInvocation a MemberReference data Literal 0 MemberReference data length parseFromLocalFileData StatementExpression MethodInvocation Literal link" MemberReference data length MethodInvocation a MethodInvocation getValue getLocalFileDataLength assertEquals StatementExpression MethodInvocation Literal is link" MethodInvocation a isLink assertTrue StatementExpression MethodInvocation Literal no dir" MethodInvocation ! a isDirectory assertTrue StatementExpression MethodInvocation Literal "mode link" BinaryOperation | MemberReference Literal 0123 MethodInvocation a getMode assertEquals StatementExpression MethodInvocation Literal "uid link" Literal 5 MethodInvocation a assertEquals StatementExpression MethodInvocation Literal "gid link" Literal 6 MethodInvocation a assertEquals StatementExpression MethodInvocation Literal "test" MethodInvocation a assertEquals StatementExpression Assignment MemberReference data ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte Literal Literal Cast BasicType byte Literal Cast BasicType byte Literal Literal 0123 Cast BasicType byte Literal 0x40 Literal 0 Literal 0 Literal 0 Literal 0 Literal 5 Literal 0 Literal 6 Literal 0 = StatementExpression Assignment MemberReference a ClassCreator ReferenceType AsiExtraField = StatementExpression MethodInvocation a MemberReference data Literal 0 MemberReference data length parseFromLocalFileData StatementExpression MethodInvocation Literal dir" MemberReference data length MethodInvocation a MethodInvocation getValue getLocalFileDataLength assertEquals StatementExpression MethodInvocation Literal no link" MethodInvocation ! a isLink assertTrue StatementExpression MethodInvocation Literal is dir" MethodInvocation a isDirectory assertTrue StatementExpression MethodInvocation Literal "mode dir" BinaryOperation | MemberReference Literal 0123 MethodInvocation a getMode assertEquals StatementExpression MethodInvocation Literal "uid dir" Literal 5 MethodInvocation a assertEquals StatementExpression MethodInvocation Literal "gid dir" Literal 6 MethodInvocation a assertEquals StatementExpression Assignment MemberReference data ArrayCreator BasicType byte ArrayInitializer Literal 0 Literal 0 Literal 0 Literal 0 Literal 0123 Cast BasicType byte Literal 0x40 Literal 0 Literal 0 Literal 0 Literal 0 Literal 5 Literal 0 Literal 6 Literal 0 = StatementExpression Assignment MemberReference a ClassCreator ReferenceType AsiExtraField = TryStatement StatementExpression MethodInvocation a MemberReference data Literal 0 MemberReference data length parseFromLocalFileData StatementExpression MethodInvocation Literal "should exception" fail CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation Literal "bad checksum 0 of MethodInvocation e getMessage assertEquals	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "No source specified" Literal attribute must be set" expectBuildExceptionContaining	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String list LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference list Literal "," WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement StatementExpression MethodInvocation toList ClassCreator ReferenceType MethodInvocation tokens nextToken addElement	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator var MethodInvocation name MemberReference prefixLength BinaryOperation - MethodInvocation name length MemberReference substring ReturnStatement MethodInvocation var Literal '.' MemberReference File separatorChar replace	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Task owner LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation owner getProject IfStatement BinaryOperation && BinaryOperation != MemberReference ifCond Literal null BinaryOperation == MethodInvocation p MemberReference ifCond getProperty Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference unlessCond Literal null BinaryOperation != MethodInvocation p MemberReference unlessCond getProperty Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType listener FormalParameter ReferenceType evt StatementExpression MethodInvocation listener MemberReference evt	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation commandLine MethodInvocation setExecutable IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getPassword setValue createArgument IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MethodInvocation file1 exists assertTrue StatementExpression MethodInvocation MethodInvocation file2 exists assertTrue StatementExpression MethodInvocation MethodInvocation exists assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String manager StatementExpression MethodInvocation helper MemberReference manager	0
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType String classname LocalVariableDeclaration ReferenceType String VariableDeclarator sourceFilename BinaryOperation + MemberReference classname Literal ".java" LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation classname Literal "$" indexOf IfStatement BinaryOperation != MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference sourceFilename BinaryOperation + MethodInvocation classname Literal 0 MemberReference substring Literal ".java" = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference srcPathList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator sourceFile ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i srcPathList MemberReference sourceFilename IfStatement MethodInvocation sourceFile exists BlockStatement ReturnStatement MemberReference sourceFile ReturnStatement Literal null	1
MethodDeclaration Modifier public setStatus FormalParameter BasicType int i StatementExpression Assignment MemberReference status ClassCreator ReferenceType Integer MemberReference i =	1
MethodDeclaration Modifier protected ReferenceType String getDataTypeName ReturnStatement MethodInvocation ComponentHelper MethodInvocation getProject This Literal true	0
MethodDeclaration Modifier public IfStatement BinaryOperation || MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BlockStatement StatementExpression MethodInvocation Literal BlockStatement StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal true LocalVariableDeclaration ReferenceType CompilerAdapter VariableDeclarator adapter MethodInvocation MethodInvocation MemberReference IfStatement BinaryOperation || MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BlockStatement StatementExpression MethodInvocation BinaryOperation instanceof MemberReference adapter ReferenceType assertTrue BlockStatement StatementExpression MethodInvocation BinaryOperation instanceof MemberReference adapter ReferenceType assertTrue StatementExpression MethodInvocation Literal true StatementExpression Assignment MemberReference adapter MethodInvocation MethodInvocation MemberReference = StatementExpression MethodInvocation BinaryOperation instanceof MemberReference adapter ReferenceType assertTrue	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String path ReturnStatement Literal null	1
MethodDeclaration Modifier protected doExecute BuildException IfStatement MemberReference recurse BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference options length Literal 1 options MethodInvocation viewpath getPath = StatementExpression MethodInvocation MemberReference options BlockStatement StatementExpression SuperMethodInvocation doExecute	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject	0
MethodDeclaration Modifier public synchronized BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Restrict MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation w size	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal "Expected warning about BinaryOperation != MethodInvocation log Literal "The class in file" indexOf Literal - 1 assertTrue StatementExpression MethodInvocation BinaryOperation + Literal has not been deleted because its source file " Literal "could not be BinaryOperation != MethodInvocation log Literal "The class in file" indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String uri LocalVariableDeclaration BasicType int VariableDeclarator indexOfAt MethodInvocation uri Literal '@' lastIndexOf LocalVariableDeclaration BasicType int VariableDeclarator indexOfColon MethodInvocation uri Literal ':' indexOf IfStatement BinaryOperation && BinaryOperation > MemberReference indexOfColon Literal - 1 BinaryOperation < MemberReference indexOfColon MemberReference indexOfAt BlockStatement StatementExpression MethodInvocation MethodInvocation uri Literal 0 MemberReference indexOfColon substring StatementExpression MethodInvocation MethodInvocation uri BinaryOperation + MemberReference indexOfColon Literal 1 MemberReference indexOfAt substring BlockStatement StatementExpression MethodInvocation MethodInvocation uri Literal 0 MemberReference indexOfAt substring IfStatement BinaryOperation && BinaryOperation == MethodInvocation MethodInvocation getPassword getUserInfo Literal null BinaryOperation == MethodInvocation MethodInvocation getUserInfo Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal password nor for user " MethodInvocation MethodInvocation getName getUserInfo Literal " has been " Literal LocalVariableDeclaration BasicType int VariableDeclarator indexOfPath MethodInvocation uri Literal ':' BinaryOperation + MemberReference indexOfAt Literal 1 indexOf IfStatement BinaryOperation == MemberReference indexOfPath Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "no remote path in " MemberReference uri StatementExpression MethodInvocation MethodInvocation uri BinaryOperation + MemberReference indexOfAt Literal 1 MemberReference indexOfPath substring setHost LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation uri BinaryOperation + MemberReference indexOfPath Literal 1 substring IfStatement MethodInvocation Literal "" equals BlockStatement StatementExpression Assignment MemberReference Literal "." = ReturnStatement MemberReference	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType timestampGranularity IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference timestampGranularity Literal MethodInvocation MemberReference timestampGranularity equals "" BlockStatement ReturnStatement StatementExpression Assignment This MemberReference timestampGranularity MemberReference timestampGranularity =	1
MethodDeclaration Modifier public final write FormalParameter BasicType int IOException LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator c Cast BasicType byte MemberReference IfStatement BinaryOperation || BinaryOperation == MemberReference c MemberReference LF BinaryOperation == MemberReference c MemberReference CR BlockStatement IfStatement MemberReference ! skip BlockStatement StatementExpression MethodInvocation processBuffer BlockStatement StatementExpression MethodInvocation buffer MemberReference write StatementExpression Assignment MemberReference skip BinaryOperation == MemberReference c MemberReference CR =	1
MethodDeclaration Modifier private synchronized static ReferenceType DocumentBuilderFactory BuildException IfStatement BinaryOperation == MemberReference builderFactory Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference builderFactory MethodInvocation DocumentBuilderFactory newInstance = CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal builder factory has not " Literal "been configured " MethodInvocation e getMessage MemberReference e ReturnStatement MemberReference builderFactory	1
MethodDeclaration Modifier public FormalParameter ReferenceType Document doc StatementExpression Assignment This MemberReference document MemberReference doc =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper mapper StatementExpression MethodInvocation MethodInvocation mapper add	0
MethodDeclaration Modifier private FormalParameter ReferenceType String elemName FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class returnType FormalParameter ReferenceType Class LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation ih MemberReference elemName StatementExpression MethodInvocation Literal name" MemberReference methodName MethodInvocation m getName assertEquals LocalVariableDeclaration ReferenceType Class VariableDeclarator TernaryExpression BinaryOperation == MemberReference returnType Literal null MemberReference Void TYPE MemberReference returnType StatementExpression MethodInvocation Literal type" MemberReference MethodInvocation m getReturnType assertEquals LocalVariableDeclaration ReferenceType Class VariableDeclarator args MethodInvocation m getParameterTypes IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation Literal MemberReference MemberReference ArraySelector Literal 0 args assertEquals BlockStatement StatementExpression MethodInvocation Literal Literal 0 MemberReference args length assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String m StatementExpression Assignment This MemberReference server MemberReference m =	0
MethodDeclaration Modifier private validate IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference file Literal null MethodInvocation filesets isEmpty MethodInvocation paths isEmpty BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference	0
MethodDeclaration Modifier public setOut FormalParameter ReferenceType String out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File source StatementExpression Assignment This MemberReference source MemberReference source =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public FormalParameter ReferenceType File tarFile StatementExpression Assignment This MemberReference tarFile MemberReference tarFile =	1
MethodDeclaration Modifier protected BasicType boolean isUpToDate FormalParameter ReferenceType Vector files LocalVariableDeclaration BasicType boolean VariableDeclarator upToDate Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation files size MemberReference upToDate MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation files MethodInvocation toString MemberReference i elementAt IfStatement BinaryOperation > MethodInvocation FILE_UTILS MethodInvocation lastModified MemberReference baseDir MemberReference file MethodInvocation cabFile lastModified BlockStatement StatementExpression Assignment MemberReference upToDate Literal false = ReturnStatement MemberReference upToDate	1
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType MethodInvocation getCheckedRef MemberReference encoding	0
MethodDeclaration Modifier public FormalParameter ReferenceType OutputStream out IOException LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte BinaryOperation * Literal 32 Literal 1024 WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator numRead This MethodInvocation MemberReference buf Literal 0 MemberReference buf length read IfStatement BinaryOperation == MemberReference numRead Literal - 1 BlockStatement BreakStatement StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference numRead write	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd Literal ID StatementExpression MethodInvocation dtd Literal setLocation StatementExpression MethodInvocation catalog MemberReference dtd StatementExpression MethodInvocation project Literal "catalog" MemberReference catalog TryStatement StatementExpression MethodInvocation catalog ClassCreator ReferenceType Literal StatementExpression MethodInvocation Literal add reference to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + Literal must not more than one " Literal when using refid" MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation ClassCreator ReferenceType Literal "catalog" TryStatement StatementExpression MethodInvocation MemberReference catalog StatementExpression MethodInvocation Literal add to that is a reference" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal must not elements when using refid" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType File buildFile StatementExpression Assignment This MemberReference buildFile MemberReference buildFile = StatementExpression Assignment This MemberReference ClassCreator ReferenceType File MethodInvocation buildFile getParent = StatementExpression MethodInvocation ClassCreator ReferenceType Location MethodInvocation buildFile getAbsolutePath setLocation	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget	0
MethodDeclaration Modifier public ReferenceType String getPassword ReturnStatement MemberReference password	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef IfStatement MethodInvocation isExists BlockStatement ThrowStatement ClassCreator ReferenceType ImmutableResourceException ReturnStatement ClassCreator ReferenceType PropertyOutputStream MethodInvocation getProject MethodInvocation getName	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MethodInvocation getValue =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference cmp	0
MethodDeclaration Modifier private static ReferenceType String split FormalParameter Modifier final ReferenceType String string FormalParameter Modifier final ReferenceType String LocalVariableDeclaration Modifier final ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference string MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MethodInvocation tokenizer countTokens ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference result length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result MethodInvocation tokenizer nextToken = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference fork MemberReference value =	0
MethodDeclaration Modifier public synchronized BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation MethodInvocation size	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MemberReference title Literal null MethodInvocation title getText Literal null	0
MethodDeclaration Modifier public final perform IfStatement MemberReference ! invalid BlockStatement StatementExpression MethodInvocation MethodInvocation This getProject LocalVariableDeclaration ReferenceType Throwable VariableDeclarator reason Literal null TryStatement StatementExpression MethodInvocation maybeConfigure StatementExpression MethodInvocation This execute CatchClause CatchClauseParameter BuildException ex IfStatement BinaryOperation == MethodInvocation ex getLocation MemberReference Location UNKNOWN_LOCATION BlockStatement StatementExpression MethodInvocation ex MethodInvocation getLocation setLocation StatementExpression Assignment MemberReference reason MemberReference ex = ThrowStatement MemberReference ex CatchClause CatchClauseParameter Exception ex StatementExpression Assignment MemberReference reason MemberReference ex = LocalVariableDeclaration ReferenceType BuildException VariableDeclarator be ClassCreator ReferenceType BuildException MemberReference ex StatementExpression MethodInvocation be MethodInvocation getLocation setLocation ThrowStatement MemberReference be CatchClause CatchClauseParameter Error ex StatementExpression Assignment MemberReference reason MemberReference ex = ThrowStatement MemberReference ex StatementExpression MethodInvocation MethodInvocation This MemberReference reason getProject BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue MethodInvocation LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation ue getTask StatementExpression MethodInvocation task perform	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public IOException IfStatement MethodInvocation ! Literal hasRegex ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal "void assertStringContains	1
MethodDeclaration Modifier public FormalParameter ReferenceType String target FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation setUp LocalVariableDeclaration ReferenceType File VariableDeclarator cachefile ClassCreator ReferenceType File MemberReference basedir MemberReference TryStatement StatementExpression MethodInvocation Literal StatementExpression MethodInvocation MemberReference target LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference basedir Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference basedir Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference basedir Literal StatementExpression MethodInvocation Literal "Cache file not MethodInvocation cachefile exists assertTrue StatementExpression MethodInvocation Literal "Not enough files on first BinaryOperation > MethodInvocation MemberReference length list Literal 5 assertTrue StatementExpression MethodInvocation Literal files on second BinaryOperation == MethodInvocation MemberReference length list Literal 0 assertTrue StatementExpression MethodInvocation Literal files on BinaryOperation == MethodInvocation MemberReference length list Literal 2 assertTrue StatementExpression MethodInvocation Literal StatementExpression MethodInvocation StatementExpression MethodInvocation tearDown StatementExpression MethodInvocation cachefile delete	0
MethodDeclaration Modifier public ReferenceType String getMimeType ReturnStatement MemberReference mimeType	0
MethodDeclaration Modifier public final BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation == MethodInvocation unicodeBuf length Literal 0 BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation != MemberReference ch Literal - 1 BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator achar Cast BasicType char MemberReference ch IfStatement BinaryOperation >= MemberReference achar Literal BlockStatement StatementExpression Assignment MemberReference unicodeBuf ClassCreator ReferenceType StringBuffer Literal = LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Integer MemberReference ch toHexString ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation s length MemberReference ++ i BlockStatement StatementExpression MethodInvocation unicodeBuf BinaryOperation + BinaryOperation - MethodInvocation unicodeBuf length MethodInvocation s length MemberReference i MethodInvocation s MemberReference i charAt StatementExpression Assignment MemberReference ch Literal '\\' = BlockStatement StatementExpression Assignment MemberReference ch Cast BasicType int MethodInvocation unicodeBuf Literal 0 charAt = StatementExpression MethodInvocation unicodeBuf Literal 0 deleteCharAt ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String FormalParameter ReferenceType String methodName FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation entries size BinaryOperation == MemberReference index Literal - 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation entries MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element IfStatement BinaryOperation && BinaryOperation && MethodInvocation MethodInvocation MemberReference equals MethodInvocation MethodInvocation MemberReference methodName equals getMethodName MethodInvocation MethodInvocation MemberReference equals BlockStatement StatementExpression Assignment MemberReference index MemberReference i = ReturnStatement MemberReference index	0
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator IfStatement MethodInvocation Literal startsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 5 substring = BlockStatement StatementExpression Assignment MemberReference MemberReference = IfStatement MethodInvocation MemberReference startsWith BlockStatement StatementExpression Assignment This MemberReference MemberReference = BlockStatement StatementExpression Assignment This MemberReference BinaryOperation + MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation System.err Literal "method print to println StatementExpression MethodInvocation System.out Literal "method print to println	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String v StatementExpression Assignment MemberReference value MemberReference v =	0
MethodDeclaration Modifier private ReferenceType Manifest FormalParameter ReferenceType File jarFile IOException LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zf Literal null TryStatement StatementExpression Assignment MemberReference zf ClassCreator ReferenceType ZipFile MemberReference jarFile = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation zf entries WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze Cast ReferenceType ZipEntry MethodInvocation e nextElement IfStatement MethodInvocation ze MethodInvocation MemberReference equalsIgnoreCase getName BlockStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr ClassCreator ReferenceType InputStreamReader MethodInvocation zf MemberReference ze getInputStream Literal "UTF-8" ReturnStatement MethodInvocation MemberReference isr getManifest ReturnStatement Literal null IfStatement BinaryOperation != MemberReference zf Literal null BlockStatement TryStatement StatementExpression MethodInvocation zf close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public setKey FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference key MemberReference value =	0
MethodDeclaration Modifier public add FormalParameter ReferenceType IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == MemberReference container Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference type Literal null BinaryOperation == MemberReference classname Literal null BlockStatement StatementExpression Assignment MemberReference container ClassCreator ReferenceType = BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator m MethodInvocation IfStatement BinaryOperation instanceof MemberReference m ReferenceType BlockStatement StatementExpression Assignment MemberReference container Cast ReferenceType MemberReference m = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation String MemberReference m valueOf Literal " mapper implementation does not support StatementExpression MethodInvocation container MemberReference add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference MemberReference name =	0
MethodDeclaration Modifier static protected FormalParameter ReferenceType handler StatementExpression Assignment MemberReference MemberReference handler =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String m StatementExpression Assignment This MemberReference server MemberReference m =	0
MethodDeclaration Modifier public synchronized ReferenceType createHandler BuildException StatementExpression MethodInvocation ReturnStatement ClassCreator ReferenceType PumpStreamHandler MemberReference outputStream MemberReference errorStream MemberReference inputStream	0
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment This MemberReference command MemberReference c =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation fileset MemberReference	0
MethodDeclaration Modifier public ReferenceType String getPublicId ReturnStatement MemberReference publicId	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation BinaryOperation + Literal MemberReference StatementExpression MethodInvocation BinaryOperation + Literal not create " MethodInvocation f getAbsolutePath MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier private FormalParameter ReferenceType String type FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t IfStatement BinaryOperation != MemberReference test Literal null BlockStatement StatementExpression MethodInvocation MemberReference test StatementExpression MethodInvocation MemberReference test MemberReference test put LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference type createElement LocalVariableDeclaration ReferenceType Element VariableDeclarator Literal null IfStatement BinaryOperation != MemberReference test Literal null BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType Element MethodInvocation MemberReference test get = BlockStatement StatementExpression Assignment MemberReference MemberReference rootElement = StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation t getMessage IfStatement BinaryOperation && BinaryOperation != MemberReference message Literal null BinaryOperation > MethodInvocation message length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference MethodInvocation t getMessage setAttribute StatementExpression MethodInvocation MemberReference MethodInvocation t MethodInvocation getName getClass setAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference t LocalVariableDeclaration ReferenceType Text VariableDeclarator trace MethodInvocation doc MemberReference StatementExpression MethodInvocation MemberReference trace	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType String IfStatement MethodInvocation JavaEnvUtils BlockStatement ReturnStatement MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal "" IfStatement MethodInvocation MethodInvocation MemberReference equals getValue BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation MethodInvocation MemberReference equals getValue BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference	0
MethodDeclaration Modifier public finish IOException StatementExpression MethodInvocation StatementExpression Assignment MemberReference MemberReference = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator MethodInvocation entries size BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement StatementExpression MethodInvocation Cast ReferenceType ZipEntry MethodInvocation entries MemberReference i elementAt StatementExpression Assignment MemberReference BinaryOperation - MemberReference MemberReference = StatementExpression MethodInvocation StatementExpression MethodInvocation clear StatementExpression MethodInvocation entries removeAllElements	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier protected BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement ReturnStatement Cast ReferenceType Task MemberReference realThing BlockStatement ReturnStatement SuperMethodInvocation MemberReference buffer MemberReference offset MemberReference length handleInput	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassCreator ReferenceType HashMap	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal "from included entity" expectLog	0
MethodDeclaration Modifier public ReferenceType Pattern FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MethodInvocation MemberReference includeList MemberReference p	0
MethodDeclaration Modifier private FormalParameter ReferenceType String msg LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out TernaryExpression BinaryOperation != MemberReference savedOut Literal null MemberReference savedOut MemberReference System out IfStatement MemberReference logTestListenerEvents BlockStatement StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out BinaryOperation + MemberReference MemberReference msg println StatementExpression MethodInvocation out flush	1
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation length Literal 31 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 0 Literal 30 substring = StatementExpression MethodInvocation BinaryOperation + Literal is longer than 31 to: " MemberReference MemberReference Project MSG_WARN log IfStatement BinaryOperation > MethodInvocation length Literal 31 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 0 Literal 30 substring = StatementExpression MethodInvocation BinaryOperation + Literal is longer than 31 to: " MemberReference MemberReference Project MSG_WARN log ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference MemberReference MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation length Literal 31 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 0 Literal 30 substring = StatementExpression MethodInvocation BinaryOperation + Literal is longer than 31 to: " MemberReference MemberReference Project MSG_WARN log ReturnStatement BinaryOperation + BinaryOperation + MemberReference MemberReference MemberReference BlockStatement IfStatement BinaryOperation > MethodInvocation length Literal 31 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 0 Literal 30 substring = StatementExpression MethodInvocation BinaryOperation + Literal is longer than 31 to: " MemberReference MemberReference Project MSG_WARN log ReturnStatement BinaryOperation + MemberReference MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression MethodInvocation MethodInvocation MemberReference classpath append createClasspath	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "the element text has already been specified" expectBuildException	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal bar bar" expectLogContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String ext StatementExpression Assignment This MemberReference extension MemberReference ext =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference config MemberReference = IfStatement BinaryOperation == MemberReference config Literal null BlockStatement StatementExpression Assignment MemberReference config ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference setValue IfStatement MethodInvocation ! MethodInvocation MemberReference equals getValue BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The attribute is not " Literal with the " MethodInvocation getValue Literal "	0
MethodDeclaration Modifier protected ReferenceType Resource FormalParameter ReferenceType FileSet filesets LocalVariableDeclaration ReferenceType Resource VariableDeclarator result ArrayCreator ReferenceType Resource MemberReference filesets length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filesets length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator skipEmptyNames Literal true IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i filesets ReferenceType ZipFileSet BlockStatement LocalVariableDeclaration ReferenceType ZipFileSet VariableDeclarator zfs Cast ReferenceType ZipFileSet MemberReference ArraySelector MemberReference i filesets StatementExpression Assignment MemberReference skipEmptyNames BinaryOperation && MethodInvocation zfs MethodInvocation Literal "" equals MethodInvocation getProject MethodInvocation zfs MethodInvocation Literal "" equals MethodInvocation getProject getFullpath = LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator rs MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation getProject getDirectoryScanner filesets IfStatement BinaryOperation instanceof MemberReference rs ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference rs LocalVariableDeclaration ReferenceType Vector VariableDeclarator resources ClassCreator ReferenceType Vector IfStatement MemberReference ! doFilesonly BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation rs getIncludedDirectories ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference length MemberReference ++ j BlockStatement IfStatement BinaryOperation || Literal ! MethodInvocation MemberReference ArraySelector MemberReference j equals "" MemberReference ! skipEmptyNames BlockStatement StatementExpression MethodInvocation resources MethodInvocation rs MemberReference ArraySelector MemberReference j getResource addElement LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation rs getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement IfStatement BinaryOperation || Literal ! MethodInvocation MemberReference ArraySelector MemberReference j files equals "" MemberReference ! skipEmptyNames BlockStatement StatementExpression MethodInvocation resources MethodInvocation rs MemberReference ArraySelector MemberReference j files getResource addElement StatementExpression Assignment MemberReference ArraySelector MemberReference i result ArrayCreator ReferenceType Resource MethodInvocation resources size = StatementExpression MethodInvocation resources MemberReference ArraySelector MemberReference i result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference change Literal null BlockStatement StatementExpression Assignment MemberReference P4CmdOpts BinaryOperation + Literal "-c " MemberReference change = IfStatement BinaryOperation == MemberReference P4View Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No view specified to StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s edit " MemberReference P4CmdOpts Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier public FormalParameter ReferenceType File f StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference f createArgument	0
MethodDeclaration Modifier private FormalParameter ReferenceType Hashtable props LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation e MethodInvocation toString nextElement IfStatement BinaryOperation || MethodInvocation MemberReference key equals MethodInvocation MemberReference key equals BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation props MethodInvocation toString MemberReference key get IfStatement BinaryOperation == MethodInvocation newProject MemberReference key getProperty Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference key MemberReference value setNewProperty	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation reg Literal StatementExpression MethodInvocation Literal "aaaa doesn't match MethodInvocation ! reg Literal matches assertTrue StatementExpression MethodInvocation Literal "aaaa matches ignoring MethodInvocation reg Literal MemberReference RegexpMatcher matches assertTrue	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference ASCII MemberReference MemberReference UNICODE	0
MethodDeclaration Modifier public FormalParameter ReferenceType File targetdir StatementExpression Assignment This MemberReference targetdir MemberReference targetdir =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier public ReferenceType String getClassname ReturnStatement MemberReference classname	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "doesn't support the expectBuildExceptionContaining	0
MethodDeclaration FormalParameter ReferenceType File out StatementExpression Assignment This MemberReference outFile MemberReference out =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation MethodInvocation toString MemberReference constantPool StatementExpression MethodInvocation MemberReference classname	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation tags MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String target IfStatement BinaryOperation == MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation init StatementExpression MethodInvocation callee MemberReference target StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation fileset	0
MethodDeclaration Modifier protected pack LocalVariableDeclaration ReferenceType VariableDeclarator zOut Literal null TryStatement StatementExpression Assignment MemberReference zOut ClassCreator ReferenceType ClassCreator ReferenceType FileOutputStream MemberReference zipFile = StatementExpression MethodInvocation MethodInvocation MemberReference zOut CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Problem creating " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference zOut close	1
MethodDeclaration Modifier public setValue FormalParameter Modifier final ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value = StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean compile StatementExpression Assignment This MemberReference compile MemberReference compile = IfStatement BinaryOperation && This ! MemberReference compile This ! MemberReference BlockStatement StatementExpression Assignment This MemberReference Literal true =	0
MethodDeclaration Modifier public synchronized ReferenceType String getName ReturnStatement SuperMethodInvocation getName	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal not in keystore" MemberReference expectBuildExceptionContaining	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal BinaryOperation + BinaryOperation + Literal "end of MethodInvocation System Literal "line.separator" getProperty Literal "This	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file BuildException StatementExpression MethodInvocation validate IfStatement BinaryOperation && BinaryOperation > MethodInvocation size Literal 0 BinaryOperation instanceof MemberReference dynselector ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator ArrayCreator ReferenceType Parameter MethodInvocation size StatementExpression MethodInvocation MemberReference copyInto StatementExpression Cast ReferenceType MemberReference dynselector ReturnStatement MethodInvocation dynselector MemberReference basedir MemberReference filename MemberReference file isSelected	1
MethodDeclaration Modifier public FormalParameter ReferenceType arc StatementExpression MethodInvocation instructions MemberReference arc add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected zipFile FormalParameter ReferenceType File file FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType int mode IOException IfStatement MethodInvocation vPath Literal equalsIgnoreCase BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! FILE_UTILS MemberReference MemberReference file MemberReference descriptorAdded BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: selected " MemberReference archiveType Literal " files a which will" Literal " be ignored use attribute to " MemberReference archiveType Literal " MemberReference Project MSG_WARN log BlockStatement StatementExpression SuperMethodInvocation MemberReference file MemberReference zOut MemberReference vPath MemberReference mode zipFile StatementExpression Assignment MemberReference descriptorAdded Literal true = BlockStatement StatementExpression SuperMethodInvocation MemberReference file MemberReference zOut MemberReference vPath MemberReference mode zipFile	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType VariableDeclarator tp ClassCreator ReferenceType StatementExpression ClassCreator MethodInvocation start ReferenceType Thread MemberReference tp Literal thread" StatementExpression MethodInvocation Runtime MethodInvocation MethodInvocation tp getRuntime	0
MethodDeclaration * Set the assignable class for this * @param the assignable */ Modifier public FormalParameter ReferenceType Class StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException LocalVariableDeclaration ReferenceType File VariableDeclarator commandDir MemberReference workingDir IfStatement BinaryOperation == MemberReference workingDir Literal null BlockStatement IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression Assignment MemberReference commandDir MethodInvocation project = BlockStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec LocalVariableDeclaration Modifier final BasicType int VariableDeclarator preCmdLength Literal 6 LocalVariableDeclaration ReferenceType String VariableDeclarator newcmd ArrayCreator ReferenceType String BinaryOperation + MemberReference cmd length MemberReference preCmdLength StatementExpression Assignment MemberReference ArraySelector Literal 0 newcmd Literal "cmd" = StatementExpression Assignment MemberReference ArraySelector Literal 1 newcmd Literal = StatementExpression Assignment MemberReference ArraySelector Literal 2 newcmd Literal = StatementExpression Assignment MemberReference ArraySelector Literal 3 newcmd Literal = StatementExpression Assignment MemberReference ArraySelector Literal 4 newcmd MethodInvocation commandDir getAbsolutePath = StatementExpression Assignment MemberReference ArraySelector Literal 5 newcmd Literal "&&" = StatementExpression MethodInvocation System MemberReference cmd Literal 0 MemberReference newcmd MemberReference preCmdLength MemberReference cmd length arraycopy ReturnStatement MethodInvocation MemberReference project MemberReference newcmd MemberReference env exec	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "no MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation MethodInvocation MemberReference attributes MemberReference nestedElementMap This getScript	1
MethodDeclaration Modifier final protected ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public FormalParameter ReferenceType Boolean StatementExpression Assignment MemberReference isPublic MemberReference =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier synchronized FormalParameter ReferenceType IntrospectionHelper ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getAction ReturnStatement MemberReference action	0
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType String attributeName BuildException LocalVariableDeclaration ReferenceType Class VariableDeclarator at Cast ReferenceType Class MethodInvocation MemberReference attributeName get IfStatement BinaryOperation == MemberReference at Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedAttributeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MethodInvocation bean getName Literal " doesn't support the \"" MemberReference attributeName Literal "\" attribute." MemberReference attributeName ReturnStatement MemberReference at	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator dosRoot Literal null IfStatement BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal isFamily BlockStatement StatementExpression Assignment MemberReference dosRoot MethodInvocation System MethodInvocation Literal 0 Literal 3 substring MethodInvocation MemberReference File separatorChar Literal '/' replace Literal "user.dir" getProperty = LocalVariableDeclaration ReferenceType Class VariableDeclarator uriClazz Literal null TryStatement StatementExpression Assignment MemberReference uriClazz MethodInvocation Class Literal "java.net.URI" forName = CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression Assignment MemberReference dosRoot MethodInvocation dosRoot toUpperCase = BlockStatement StatementExpression Assignment MemberReference dosRoot Literal "" = IfStatement MethodInvocation Os Literal "dos" isFamily BlockStatement StatementExpression MethodInvocation Literal MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals IfStatement MethodInvocation Os Literal isFamily BlockStatement StatementExpression MethodInvocation Literal MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals IfStatement BinaryOperation == MemberReference File pathSeparatorChar Literal '/' BlockStatement StatementExpression MethodInvocation Literal MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals StatementExpression MethodInvocation Literal URIs must name absolute MethodInvocation FILE_UTILS MethodInvocation Literal "file:/" startsWith Literal toURI assertTrue StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation Literal endsWith Literal toURI assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file:/" MemberReference dosRoot Literal MethodInvocation MethodInvocation FILE_UTILS Literal bar" toURI removeExtraneousAuthority assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file:/" MemberReference dosRoot Literal MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals IfStatement BinaryOperation == MemberReference File pathSeparatorChar Literal '\\' BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file:/" MemberReference dosRoot Literal "foo" MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals StatementExpression MethodInvocation Literal URIs must name absolute MethodInvocation FILE_UTILS MethodInvocation Literal "file:/" startsWith Literal toURI assertTrue StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation Literal endsWith Literal toURI assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file:/" MemberReference dosRoot Literal MethodInvocation MethodInvocation FILE_UTILS Literal bar" toURI removeExtraneousAuthority assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file:/" MemberReference dosRoot Literal MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "file:/" MemberReference dosRoot Literal MethodInvocation MethodInvocation FILE_UTILS Literal toURI removeExtraneousAuthority assertEquals	1
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createArg ReturnStatement MethodInvocation java createArg	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType String getPath FormalParameter ReferenceType File file TryStatement ReturnStatement MethodInvocation file getCanonicalPath CatchClause CatchClauseParameter IOException e ReturnStatement MethodInvocation file getAbsolutePath	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal "test"	0
MethodDeclaration Modifier private synchronized ReferenceType getPath IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path ClassCreator ReferenceType = StatementExpression MethodInvocation path MethodInvocation getProject setProject ReturnStatement MemberReference path	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile copyFile	1
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation event MethodInvocation getName MethodInvocation Literal "" equals BlockStatement ReturnStatement IfStatement BinaryOperation >= MemberReference calls MemberReference length BlockStatement StatementExpression Assignment MemberReference error ClassCreator ReferenceType AssertionFailedError BinaryOperation + BinaryOperation + Literal "Unexpected invocation of" Literal " target " MethodInvocation event MethodInvocation getName = IfStatement BinaryOperation == MemberReference error Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference ++ calls MethodInvocation event MethodInvocation MemberReference key getProperty getProject assertEquals CatchClause CatchClauseParameter AssertionFailedError e StatementExpression Assignment MemberReference error MemberReference e =	1
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier protected FormalParameter ReferenceType command FormalParameter BasicType boolean LocalVariableDeclaration BasicType long VariableDeclarator outputTimestamp MethodInvocation LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator filesToBuild ClassCreator ReferenceType Hashtable LocalVariableDeclaration BasicType int VariableDeclarator filesOutOfDate MethodInvocation MemberReference command MemberReference filesToBuild MemberReference outputTimestamp IfStatement BinaryOperation > MemberReference filesOutOfDate Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference filesToBuild MemberReference command StatementExpression MethodInvocation command runCommand BlockStatement StatementExpression MethodInvocation Literal file is up to date" MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression MethodInvocation MemberReference value MemberReference	0
MethodDeclaration Modifier protected ReferenceType String getCommandline FormalParameter ReferenceType String srcFile FormalParameter ReferenceType File baseDir ReturnStatement MethodInvocation ArrayCreator ReferenceType String ArrayInitializer MemberReference srcFile ArrayCreator ReferenceType File ArrayInitializer MemberReference baseDir getCommandline	0
MethodDeclaration Modifier protected ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" IfStatement BinaryOperation != MemberReference version Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference MemberReference version = IfStatement BinaryOperation != MemberReference date Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference MemberReference date = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! Literal "" equals BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference MemberReference = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation > MemberReference spacesRemaining Literal 0 BlockStatement StatementExpression MemberReference -- spacesRemaining StatementExpression Assignment MemberReference ch Literal ' ' = BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation in read = IfStatement BinaryOperation == MemberReference ch Literal '\t' BlockStatement StatementExpression Assignment MemberReference spacesRemaining BinaryOperation - MemberReference tabLength Literal 1 = StatementExpression Assignment MemberReference ch Literal ' ' = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file ReturnStatement MethodInvocation ClassCreator ReferenceType FileResource MemberReference file isSelected	1
MethodDeclaration Modifier public ReferenceType Vector getGroups FormalParameter ReferenceType String input FormalParameter BasicType int options BuildException IfStatement MethodInvocation ! MemberReference input MemberReference options matches BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType MatchResult VariableDeclarator mr MethodInvocation matcher getMatch LocalVariableDeclaration BasicType int VariableDeclarator cnt MethodInvocation mr groups ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cnt MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator match MethodInvocation mr MemberReference i group IfStatement BinaryOperation == MemberReference match Literal null BlockStatement StatementExpression Assignment MemberReference match Literal "" = StatementExpression MethodInvocation v MemberReference match addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType listener FormalParameter ReferenceType evt StatementExpression MethodInvocation listener MemberReference evt	0
MethodDeclaration Modifier protected BasicType boolean isActive ReturnStatement This MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String sep StatementExpression Assignment This MemberReference sep MemberReference sep =	0
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType String value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier private static ReferenceType Vector FormalParameter ReferenceType Vector environment FormalParameter ReferenceType BufferedReader in IOException LocalVariableDeclaration ReferenceType HashMap VariableDeclarator logicals ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType String VariableDeclarator logName Literal null VariableDeclarator logValue Literal null VariableDeclarator newLogName LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement IfStatement MethodInvocation line Literal startsWith BlockStatement IfStatement BinaryOperation != MemberReference logName Literal null BlockStatement StatementExpression Assignment MemberReference logValue BinaryOperation + Literal "," MethodInvocation line Literal 4 BinaryOperation - MethodInvocation line length Literal 1 substring += IfStatement MethodInvocation line Literal " \"" startsWith BlockStatement IfStatement BinaryOperation != MemberReference logName Literal null BlockStatement StatementExpression MethodInvocation logicals MemberReference logName MemberReference logValue put LocalVariableDeclaration BasicType int VariableDeclarator eqIndex MethodInvocation line Literal '=' indexOf StatementExpression Assignment MemberReference newLogName MethodInvocation line Literal 3 BinaryOperation - MemberReference eqIndex Literal 2 substring = IfStatement MethodInvocation logicals MemberReference newLogName containsKey BlockStatement StatementExpression Assignment MemberReference logName Literal null = BlockStatement StatementExpression Assignment MemberReference logName MemberReference newLogName = StatementExpression Assignment MemberReference logValue MethodInvocation line BinaryOperation + MemberReference eqIndex Literal 3 BinaryOperation - MethodInvocation line length Literal 1 substring = IfStatement BinaryOperation != MemberReference logName Literal null BlockStatement StatementExpression MethodInvocation logicals MemberReference logName MemberReference logValue put ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation logicals MethodInvocation iterator keySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator logical Cast ReferenceType String MethodInvocation i next StatementExpression MethodInvocation environment BinaryOperation + BinaryOperation + MemberReference logical Literal "=" MethodInvocation logicals MemberReference logical get add ReturnStatement MemberReference environment	1
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator depends Literal "" LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation context getProject LocalVariableDeclaration ReferenceType Target VariableDeclarator target ClassCreator ReferenceType Target StatementExpression Assignment MemberReference context currentTarget MemberReference target = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attrs MemberReference i getQName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement MethodInvocation key Literal "name" equals BlockStatement StatementExpression Assignment MemberReference name MemberReference value = IfStatement Literal MethodInvocation MemberReference name equals "" ThrowStatement ClassCreator ReferenceType BuildException Literal "name attribute must not be empty" IfStatement MethodInvocation key Literal "depends" equals BlockStatement StatementExpression Assignment MemberReference depends MemberReference value = IfStatement MethodInvocation key Literal equals BlockStatement StatementExpression MethodInvocation target MemberReference value IfStatement MethodInvocation key Literal equals BlockStatement StatementExpression MethodInvocation target MemberReference value IfStatement MethodInvocation key Literal "id" equals BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation ! value Literal "" equals BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference value MemberReference target getProject IfStatement MethodInvocation key Literal "description" equals BlockStatement StatementExpression MethodInvocation target MemberReference value setDescription BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected attribute \"" MemberReference key Literal "\"" MemberReference context locator IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException Literal element appears without a name attribute" MemberReference context locator LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator MethodInvocation project getTargets IfStatement MethodInvocation MemberReference name containsKey BlockStatement IfStatement BinaryOperation != MemberReference context Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newName BinaryOperation + BinaryOperation + MemberReference context Literal "." MemberReference name StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Already defined in main or a previous define " MemberReference name Literal " as " MemberReference newName MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference name MemberReference newName = BlockStatement StatementExpression MethodInvocation project BinaryOperation + Literal "Already defined in main or a previous ignore " MemberReference name MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference name Literal null = IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation target MemberReference name setName StatementExpression MethodInvocation project MemberReference name MemberReference target StatementExpression MethodInvocation project BinaryOperation + Literal are now: " MemberReference MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation > MethodInvocation depends length Literal 0 BlockStatement StatementExpression MethodInvocation target MemberReference depends	1
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference str	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator dir1 MethodInvocation project Literal "." LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer MethodInvocation dir1 getAbsolutePath MethodInvocation getAbsolutePath MethodInvocation getAbsolutePath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean r StatementExpression Assignment MemberReference MemberReference r =	0
MethodDeclaration Modifier public final execute BuildException IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal resource not IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal property not IfStatement BinaryOperation && MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal and failonerror cannot both be " Literal "set to IfStatement MethodInvocation ! src isExists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + MemberReference src Literal " doesn't exist" IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message BlockStatement StatementExpression MethodInvocation MemberReference message TernaryExpression MemberReference MemberReference Project MSG_WARN MemberReference Project MSG_ERR log ReturnStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator bis Literal null LocalVariableDeclaration ReferenceType Reader VariableDeclarator instream Literal null StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference src Literal " into property " MemberReference property MemberReference Project MSG_VERBOSE log TryStatement LocalVariableDeclaration Modifier final BasicType long VariableDeclarator len MethodInvocation src getSize StatementExpression MethodInvocation BinaryOperation + Literal "resource size = " TernaryExpression BinaryOperation != MemberReference len MemberReference Resource UNKNOWN_SIZE MethodInvocation String MemberReference len valueOf Literal "unknown" MemberReference Project MSG_DEBUG log LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size Cast BasicType int MemberReference len StatementExpression Assignment MemberReference is MethodInvocation src getInputStream = StatementExpression Assignment MemberReference bis ClassCreator ReferenceType BufferedInputStream MemberReference is = IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference instream ClassCreator ReferenceType InputStreamReader MemberReference bis = BlockStatement StatementExpression Assignment MemberReference instream ClassCreator ReferenceType InputStreamReader MemberReference bis MemberReference encoding = LocalVariableDeclaration ReferenceType String VariableDeclarator text Literal "" IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ChainReaderHelper VariableDeclarator crh ClassCreator ReferenceType ChainReaderHelper IfStatement BinaryOperation != MemberReference len MemberReference Resource UNKNOWN_SIZE BlockStatement StatementExpression MethodInvocation crh MemberReference size StatementExpression MethodInvocation crh MemberReference instream setPrimaryReader StatementExpression MethodInvocation crh MemberReference filterChains setFilterChains StatementExpression MethodInvocation crh MethodInvocation getProject setProject StatementExpression Assignment MemberReference instream MethodInvocation crh getAssembledReader = StatementExpression Assignment MemberReference text MethodInvocation crh MemberReference instream readFully = IfStatement BinaryOperation != MemberReference text Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation text length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference text setNewProperty getProject StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MethodInvocation text length Literal " MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference property Literal " " MemberReference text MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Unable to load resource: " MethodInvocation ioe toString IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference ioe MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference message TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference Project MSG_ERR log CatchClause CatchClauseParameter BuildException be IfStatement MemberReference BlockStatement ThrowStatement MemberReference be BlockStatement StatementExpression MethodInvocation MethodInvocation be getMessage TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference Project MSG_ERR log StatementExpression MethodInvocation FileUtils MemberReference is close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal false Literal false Literal true Literal false Literal false	0
MethodDeclaration Modifier private ReferenceType CvsTagEntry FormalParameter ReferenceType File tmpFile BuildException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference tmpFile = LocalVariableDeclaration ReferenceType String VariableDeclarator toBeRemoved BinaryOperation + BinaryOperation + MemberReference MemberReference Literal "/" LocalVariableDeclaration BasicType int VariableDeclarator headerLength MethodInvocation toBeRemoved length LocalVariableDeclaration ReferenceType Vector VariableDeclarator entries ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation reader readLine LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration ReferenceType CvsTagEntry VariableDeclarator entry Literal null WhileStatement BinaryOperation != Literal null MemberReference line BlockStatement IfStatement BinaryOperation > MethodInvocation line length MemberReference headerLength BlockStatement IfStatement MethodInvocation line MemberReference toBeRemoved startsWith BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line MemberReference headerLength substring = BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line MethodInvocation length substring = IfStatement BinaryOperation != Assignment MemberReference index MethodInvocation line MemberReference indexOf = Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation line Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration BasicType int VariableDeclarator indexrev Literal - 1 IfStatement BinaryOperation != Assignment MemberReference indexrev MethodInvocation line MemberReference REVISION MemberReference index indexOf = Literal - 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation line BinaryOperation + MemberReference indexrev MethodInvocation REVISION length substring = StatementExpression Assignment MemberReference entry ClassCreator ReferenceType CvsTagEntry MemberReference filename MemberReference = StatementExpression MethodInvocation entries MemberReference entry addElement StatementExpression MethodInvocation MethodInvocation entry toString MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != Assignment MemberReference index MethodInvocation line MemberReference indexOf = Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation line Literal 0 MemberReference index substring LocalVariableDeclaration BasicType int VariableDeclarator revSeparator MethodInvocation line Literal " to " MemberReference index indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator prevRevision MethodInvocation line BinaryOperation + MemberReference index MethodInvocation length MemberReference revSeparator substring LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation line BinaryOperation + MemberReference revSeparator MethodInvocation length substring StatementExpression Assignment MemberReference entry ClassCreator ReferenceType CvsTagEntry MemberReference filename MemberReference MemberReference prevRevision = StatementExpression MethodInvocation entries MemberReference entry addElement StatementExpression MethodInvocation MethodInvocation entry toString MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != Assignment MemberReference index MethodInvocation line MemberReference indexOf = Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation line Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration BasicType int VariableDeclarator indexrev Literal - 1 IfStatement BinaryOperation != Assignment MemberReference indexrev MethodInvocation line MemberReference REVISION MemberReference index indexOf = Literal - 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation line BinaryOperation + MemberReference indexrev MethodInvocation REVISION length substring = StatementExpression Assignment MemberReference entry ClassCreator ReferenceType CvsTagEntry MemberReference filename Literal null MemberReference = StatementExpression MethodInvocation entries MemberReference entry addElement StatementExpression MethodInvocation MethodInvocation entry toString MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference line MethodInvocation reader readLine = LocalVariableDeclaration ReferenceType CvsTagEntry VariableDeclarator array ArrayCreator ReferenceType CvsTagEntry MethodInvocation entries size StatementExpression MethodInvocation entries MemberReference array copyInto ReturnStatement MemberReference array CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Error in MemberReference e IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement TryStatement StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType Project p ReturnStatement BinaryOperation != MethodInvocation p MemberReference getProperty Literal null	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String destination FormalParameter ReferenceType String name FormalParameter ReferenceType String instruction FormalParameter ReferenceType String prompt FormalParameter BasicType boolean IfStatement BinaryOperation || BinaryOperation || BinaryOperation != MemberReference prompt length Literal 1 MemberReference ArraySelector Literal 0 BinaryOperation == This MemberReference password Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator response ArrayCreator ReferenceType String Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 response This MemberReference password = ReturnStatement MemberReference response	1
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression Assignment MemberReference config classpath MemberReference classpath =	0
MethodDeclaration Modifier public addFile FormalParameter Modifier final ReferenceType String file FormalParameter Modifier final ReferenceType String FormalParameter Modifier final ReferenceType String StatementExpression MethodInvocation files ClassCreator ReferenceType MemberReference file MemberReference MemberReference addElement	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r IfStatement BinaryOperation == BinaryOperation == MemberReference clazz Literal null BinaryOperation == MemberReference type Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference LocalVariableDeclaration ReferenceType Class VariableDeclarator c MemberReference clazz IfStatement BinaryOperation != MemberReference type Literal null BlockStatement IfStatement BinaryOperation == MemberReference project Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No project set for " Literal "the type attribute is invalid." LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator d MethodInvocation ComponentHelper MethodInvocation MethodInvocation ProjectHelper MemberReference uri MemberReference type genComponentName MemberReference project getComponentHelper IfStatement BinaryOperation == MemberReference d Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "type " MemberReference type Literal " not found." TryStatement StatementExpression Assignment MemberReference c MethodInvocation d = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e ReturnStatement MethodInvocation c MethodInvocation r getClass isAssignableFrom	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal ArrayCreator BasicType int ArrayInitializer Literal 1 Literal 0	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator f ClassCreator ReferenceType java ReferenceType io ReferenceType File MethodInvocation Literal IfStatement BinaryOperation || MethodInvocation ! f exists MethodInvocation ! f isDirectory BlockStatement StatementExpression MethodInvocation Literal failed" fail	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile TernaryExpression MemberReference filtering MemberReference globalFilters Literal null MemberReference overwrite MemberReference preserveLastModified copyFile	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public load StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier public FormalParameter ReferenceType String options StatementExpression Assignment This MemberReference MemberReference options =	0
MethodDeclaration Modifier public runCommand BuildException StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator err Literal - 1 TryStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation owner BinaryOperation + Literal "In directory " MethodInvocation executable log StatementExpression MethodInvocation owner MethodInvocation commandLine describeCommand log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "In directory " MethodInvocation executable StatementExpression MethodInvocation MethodInvocation commandLine describeCommand StatementExpression MethodInvocation StatementExpression Assignment MemberReference err MethodInvocation executable execute = IfStatement MethodInvocation Execute MemberReference err isFailure BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference title Literal " " MemberReference err MethodInvocation owner getLocation BlockStatement StatementExpression MethodInvocation owner BinaryOperation + BinaryOperation + MemberReference title Literal " Result: " MemberReference err MemberReference Project MSG_ERR log CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference title Literal " failed: " MemberReference e MemberReference e MethodInvocation owner getLocation IfStatement BinaryOperation != MemberReference temporaryCommandFile Literal null BlockStatement StatementExpression MethodInvocation temporaryCommandFile delete	1
MethodDeclaration Modifier public FormalParameter ReferenceType String referenceName FormalParameter ReferenceType Object value SynchronizedStatement MemberReference references LocalVariableDeclaration ReferenceType Object VariableDeclarator old Cast ReferenceType MemberReference references IfStatement BinaryOperation == MemberReference old MemberReference value BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation != MemberReference old Literal null BinaryOperation instanceof MemberReference old ReferenceType UnknownElement BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal previous of reference to " MemberReference referenceName MemberReference MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal "Adding " MemberReference referenceName MemberReference MSG_DEBUG log StatementExpression MethodInvocation references MemberReference referenceName MemberReference value put	1
MethodDeclaration Modifier private static ReferenceType String blanks FormalParameter BasicType int len LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression MethodInvocation b Literal ' ' append ReturnStatement MethodInvocation b toString	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement MethodInvocation type MemberReference equals BlockStatement ReturnStatement MethodInvocation type MemberReference FILE equals	1
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i params Literal null BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression Assignment MemberReference tabLength ClassCreator MethodInvocation intValue ReferenceType Integer MemberReference ArraySelector MemberReference i MethodInvocation getValue params = BreakStatement	1
MethodDeclaration Modifier public FormalParameter ReferenceType Text instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String lnk StatementExpression Assignment This MemberReference link MemberReference lnk =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement This	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal "from included entity in expectLog	0
MethodDeclaration Modifier private recvDecodingTables IOException LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator inUse MemberReference dataShadow inUse LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator pos MemberReference dataShadow LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator selector MemberReference dataShadow selector LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator selectorMtf MemberReference dataShadow selectorMtf LocalVariableDeclaration BasicType int VariableDeclarator inUse16 Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 16 MemberReference ++ i BlockStatement IfStatement MethodInvocation bsGetBit BlockStatement StatementExpression Assignment MemberReference inUse16 BinaryOperation << Literal 1 MemberReference i |= ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 256 BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i inUse Literal false = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 16 MemberReference ++ i BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference inUse16 BinaryOperation << Literal 1 MemberReference i Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator i16 BinaryOperation << MemberReference i Literal 4 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j Literal 16 MemberReference ++ j BlockStatement IfStatement MethodInvocation bsGetBit BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i16 MemberReference j inUse Literal true = StatementExpression MethodInvocation LocalVariableDeclaration Modifier final BasicType int VariableDeclarator alphaSize BinaryOperation + This MemberReference nInUse Literal 2 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nGroups MethodInvocation Literal 3 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator nSelectors MethodInvocation Literal 15 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nSelectors MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 WhileStatement MethodInvocation bsGetBit BlockStatement StatementExpression MemberReference ++ j StatementExpression Assignment MemberReference ArraySelector MemberReference i selectorMtf Cast BasicType byte MemberReference j = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator v MemberReference nGroups BinaryOperation >= MemberReference -- v Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference v pos Cast BasicType byte MemberReference v = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nSelectors MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator v BinaryOperation & MemberReference ArraySelector MemberReference i selectorMtf Literal 0xff LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator tmp MemberReference ArraySelector MemberReference v pos WhileStatement BinaryOperation > MemberReference v Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference v pos MemberReference ArraySelector BinaryOperation - MemberReference v Literal 1 pos = StatementExpression MemberReference -- v StatementExpression Assignment MemberReference ArraySelector Literal 0 pos MemberReference tmp = StatementExpression Assignment MemberReference ArraySelector MemberReference i selector MemberReference tmp = LocalVariableDeclaration Modifier final BasicType char VariableDeclarator len MemberReference dataShadow ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference nGroups MemberReference ++ t BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator curr MethodInvocation Literal 5 LocalVariableDeclaration Modifier final BasicType char VariableDeclarator len_t MemberReference ArraySelector MemberReference t len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement WhileStatement MethodInvocation bsGetBit BlockStatement StatementExpression Assignment MemberReference curr TernaryExpression MethodInvocation bsGetBit Literal - 1 Literal 1 += StatementExpression Assignment MemberReference ArraySelector MemberReference i len_t Cast BasicType char MemberReference curr = StatementExpression MethodInvocation MemberReference alphaSize MemberReference nGroups	1
MethodDeclaration Modifier public FormalParameter ReferenceType String from ThrowStatement ClassCreator ReferenceType UnsupportedAttributeException Literal doesn't support the attribute." Literal "from"	1
MethodDeclaration Modifier public ReferenceType DateFormat ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator classpath ClassCreator ReferenceType MemberReference project IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement StatementExpression MethodInvocation classpath MemberReference destDir setLocation LocalVariableDeclaration ReferenceType VariableDeclarator cp MemberReference IfStatement BinaryOperation == MemberReference cp Literal null BlockStatement StatementExpression Assignment MemberReference cp ClassCreator ReferenceType MemberReference project = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation classpath MethodInvocation cp Literal concatSystemClasspath addExisting BlockStatement StatementExpression MethodInvocation classpath MethodInvocation cp Literal "ignore" concatSystemClasspath addExisting IfStatement MemberReference BlockStatement StatementExpression MethodInvocation classpath ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier private synchronized release FormalParameter ReferenceType funnel IOException IfStatement MemberReference ! funnel closed BlockStatement TryStatement IfStatement BinaryOperation > MemberReference timeoutMillis Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation MemberReference timeoutMillis wait CatchClause CatchClauseParameter InterruptedException IfStatement BinaryOperation == MemberReference -- count Literal 0 BlockStatement StatementExpression MethodInvocation close StatementExpression Assignment MemberReference funnel closed Literal true =	1
MethodDeclaration Modifier public addMajority FormalParameter ReferenceType MajoritySelector selector StatementExpression MethodInvocation fileset MemberReference selector addMajority	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Map VariableDeclarator newroots ClassCreator ReferenceType HashMap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement IfStatement MethodInvocation FileUtils MemberReference ArraySelector MemberReference i includes isAbsolutePath BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference basedir Literal null MethodInvocation ! SelectorUtils MemberReference ArraySelector MemberReference i includes MethodInvocation basedir getAbsolutePath MethodInvocation isCaseSensitive BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference basedir Literal null BlockStatement ContinueStatement StatementExpression MethodInvocation newroots MethodInvocation SelectorUtils MemberReference ArraySelector MemberReference i includes MemberReference ArraySelector MemberReference i includes put IfStatement BinaryOperation && MethodInvocation newroots Literal "" containsKey BinaryOperation != MemberReference basedir Literal null BlockStatement StatementExpression MethodInvocation MemberReference basedir Literal "" Literal true scandir BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation newroots MethodInvocation iterator entrySet LocalVariableDeclaration ReferenceType File VariableDeclarator Literal null IfStatement BinaryOperation != MemberReference basedir Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference MethodInvocation basedir getCanonicalFile = CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator currentelement Cast ReferenceType String MethodInvocation entry getKey IfStatement BinaryOperation && BinaryOperation == MemberReference basedir Literal null MethodInvocation ! FileUtils MemberReference currentelement isAbsolutePath BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator originalpattern Cast ReferenceType String MethodInvocation entry getValue LocalVariableDeclaration ReferenceType File VariableDeclarator myfile ClassCreator ReferenceType File MemberReference basedir MemberReference currentelement IfStatement MethodInvocation myfile exists BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path TernaryExpression BinaryOperation == MemberReference basedir Literal null MethodInvocation myfile getCanonicalPath MethodInvocation FILE_UTILS MemberReference MethodInvocation myfile getCanonicalFile IfStatement BinaryOperation || MethodInvocation ! path MemberReference currentelement equals MemberReference BlockStatement StatementExpression Assignment MemberReference myfile MethodInvocation MemberReference basedir MemberReference currentelement Literal true = IfStatement BinaryOperation && BinaryOperation != MemberReference myfile Literal null BinaryOperation != MemberReference basedir Literal null BlockStatement StatementExpression Assignment MemberReference currentelement MethodInvocation FILE_UTILS MemberReference basedir MemberReference myfile = CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference myfile Literal null MethodInvocation ! myfile exists MethodInvocation ! isCaseSensitive BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference basedir MemberReference currentelement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference f Literal null MethodInvocation f exists BlockStatement StatementExpression Assignment MemberReference currentelement TernaryExpression BinaryOperation == MemberReference basedir Literal null MethodInvocation f getAbsolutePath MethodInvocation FILE_UTILS MemberReference basedir MemberReference f = StatementExpression Assignment MemberReference myfile MemberReference f = IfStatement BinaryOperation && BinaryOperation != MemberReference myfile Literal null MethodInvocation myfile exists BlockStatement IfStatement BinaryOperation && MemberReference ! MethodInvocation MemberReference basedir MemberReference currentelement isSymlink BlockStatement ContinueStatement IfStatement MethodInvocation myfile isDirectory BlockStatement IfStatement BinaryOperation && MethodInvocation MemberReference currentelement isIncluded BinaryOperation > MethodInvocation currentelement length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference currentelement MemberReference myfile Literal true accountForIncludedDir BlockStatement IfStatement BinaryOperation > MethodInvocation currentelement length Literal 0 BlockStatement IfStatement BinaryOperation != MethodInvocation currentelement BinaryOperation - MethodInvocation currentelement length Literal 1 charAt MemberReference File separatorChar BlockStatement StatementExpression Assignment MemberReference currentelement BinaryOperation + MemberReference currentelement MemberReference File separatorChar = StatementExpression MethodInvocation MemberReference myfile MemberReference currentelement Literal true scandir BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator included TernaryExpression MethodInvocation isCaseSensitive MethodInvocation originalpattern MemberReference currentelement equals MethodInvocation originalpattern MemberReference currentelement equalsIgnoreCase IfStatement MemberReference included BlockStatement StatementExpression MethodInvocation MemberReference currentelement MemberReference myfile	1
MethodDeclaration Modifier protected ReferenceType AbstractFileSet FormalParameter ReferenceType Project p ReturnStatement Cast ReferenceType AbstractFileSet MethodInvocation MemberReference p getCheckedRef	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Invalid value for type attribute." expectBuildException	0
MethodDeclaration Modifier protected finalize Throwable TryStatement StatementExpression MethodInvocation close StatementExpression SuperMethodInvocation finalize	1
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType Resource VariableDeclarator archive MethodInvocation getArchive LocalVariableDeclaration Modifier final ReferenceType TarInputStream VariableDeclarator i ClassCreator ReferenceType TarInputStream MethodInvocation archive getInputStream LocalVariableDeclaration ReferenceType VariableDeclarator te Literal null WhileStatement BinaryOperation != Assignment MemberReference te MethodInvocation i getNextEntry = Literal null BlockStatement IfStatement MethodInvocation te MethodInvocation MethodInvocation getName equals getName BlockStatement ReturnStatement MemberReference i StatementExpression MethodInvocation FileUtils MemberReference i close ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "no entry " MethodInvocation getName Literal " in " MethodInvocation getArchive	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MethodInvocation name MemberReference toLowerCase =	0
MethodDeclaration Modifier public setDatetime FormalParameter ReferenceType String dateTime IfStatement BinaryOperation != This MemberReference dateTime Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal datetime attribute to " MemberReference dateTime MemberReference Project MSG_VERBOSE log StatementExpression Assignment This MemberReference dateTime MemberReference dateTime = StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement Cast ReferenceType MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference MemberReference v =	0
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType listener FormalParameter ReferenceType evt StatementExpression MethodInvocation listener MemberReference evt	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier public taskFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier public setAttribute FormalParameter BasicType boolean b IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal set" StatementExpression Assignment MemberReference attribute MemberReference b = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File out IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation == MemberReference out Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal file specified as null" StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference MethodInvocation MemberReference out =	0
MethodDeclaration Modifier private static logFuture FormalParameter ReferenceType logTo FormalParameter ReferenceType ResourceCollection rc FormalParameter BasicType long granularity LocalVariableDeclaration BasicType long VariableDeclarator now BinaryOperation + MethodInvocation System currentTimeMillis MemberReference granularity LocalVariableDeclaration ReferenceType Date VariableDeclarator sel ClassCreator ReferenceType Date StatementExpression MethodInvocation sel MemberReference now setMillis StatementExpression MethodInvocation sel MemberReference LocalVariableDeclaration ReferenceType Restrict VariableDeclarator ClassCreator ReferenceType Restrict StatementExpression MethodInvocation MemberReference sel add StatementExpression MethodInvocation MemberReference rc add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation logTo BinaryOperation + BinaryOperation + Literal "Warning: " Cast ReferenceType Resource MethodInvocation iter next Literal " modified in the MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public ReferenceType String getFiles FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getFiles MemberReference p IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No directory specified for IfStatement BinaryOperation == MethodInvocation size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No files specified for LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType sourcepath IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference sourcepath = BlockStatement StatementExpression MethodInvocation MemberReference sourcepath append	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r ReturnStatement MethodInvocation SelectorUtils MemberReference MemberReference r MemberReference granularity	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MethodInvocation ClassCreator ReferenceType assertEquals	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal " MethodInvocation getValue	0
MethodDeclaration Modifier private ReferenceType Vector ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference MemberReference value =	0
MethodDeclaration ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public addAnd FormalParameter ReferenceType AndSelector selector StatementExpression MethodInvocation fileset MemberReference selector addAnd	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MethodInvocation MemberReference includeList MemberReference p	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression MethodInvocation fileset MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p LocalVariableDeclaration ReferenceType VariableDeclarator ps ClassCreator ReferenceType StatementExpression MethodInvocation ps MemberReference MemberReference p append LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation ps Cast ReferenceType MemberReference o MemberReference p append ReturnStatement MemberReference ps	0
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String message FormalParameter BasicType int priority StatementExpression Assignment This MemberReference message MemberReference message = StatementExpression Assignment This MemberReference priority MemberReference priority =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal I like but println	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference suffix MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType macroDef StatementExpression Assignment This MemberReference macroDef MemberReference macroDef =	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement This MemberReference value	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator savedDir MemberReference dir LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference antFile LocalVariableDeclaration ReferenceType Vector VariableDeclarator locals ClassCreator ReferenceType Vector MemberReference targets TryStatement StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation == MemberReference dir Literal null MemberReference BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation MethodInvocation getProject = StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference dir IfStatement BinaryOperation != MemberReference savedDir Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference MagicNames MethodInvocation dir getAbsolutePath BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation MethodInvocation getProject = StatementExpression MethodInvocation IfStatement BinaryOperation == MemberReference antFile Literal null BlockStatement StatementExpression Assignment MemberReference antFile MemberReference Main DEFAULT_BUILD_FILENAME = LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation FILE_UTILS MemberReference dir MemberReference antFile StatementExpression Assignment MemberReference antFile MethodInvocation file getAbsolutePath = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " TernaryExpression BinaryOperation > MethodInvocation locals size Literal 0 MethodInvocation locals toString Literal Literal " in build file " MemberReference antFile MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation newProject MemberReference MagicNames ANT_FILE MemberReference antFile LocalVariableDeclaration ReferenceType String VariableDeclarator thisAntFile MethodInvocation MethodInvocation MemberReference MagicNames ANT_FILE getProperty getProject IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference thisAntFile Literal null MethodInvocation file MethodInvocation MethodInvocation MemberReference thisAntFile getProject equals BinaryOperation != MethodInvocation getOwningTarget Literal null BlockStatement IfStatement MethodInvocation MethodInvocation getName MethodInvocation Literal "" equals getOwningTarget BlockStatement IfStatement MethodInvocation MethodInvocation Literal equals getTaskName BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must not be used Literal " the top ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " task at Literal " top level must not Literal " its build file." TryStatement StatementExpression MethodInvocation ProjectHelper MemberReference newProject MemberReference file configureProject CatchClause CatchClauseParameter BuildException ex ThrowStatement MethodInvocation ProjectHelper MemberReference ex MethodInvocation getLocation IfStatement BinaryOperation == MethodInvocation locals size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator defaultTarget MethodInvocation newProject IfStatement BinaryOperation != MemberReference defaultTarget Literal null BlockStatement StatementExpression MethodInvocation locals MemberReference defaultTarget add IfStatement BinaryOperation && MethodInvocation newProject MethodInvocation MethodInvocation MethodInvocation MemberReference MagicNames ANT_FILE getProperty getProject equals MemberReference MagicNames ANT_FILE getProperty BinaryOperation != MethodInvocation getOwningTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator owningTargetName MethodInvocation MethodInvocation getName getOwningTarget IfStatement MethodInvocation locals MemberReference owningTargetName contains BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " task calling " Literal parent LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation locals iterator BinaryOperation && MemberReference ! MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Target VariableDeclarator other Cast ReferenceType Target MethodInvocation getProject StatementExpression Assignment MemberReference BinaryOperation && BinaryOperation != MemberReference other Literal null MethodInvocation other MemberReference owningTargetName |= IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " task calling a Literal " that depends Literal " its parent target MemberReference owningTargetName Literal StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation > MethodInvocation locals size Literal 0 BinaryOperation && BinaryOperation == MethodInvocation locals size Literal 1 Literal MethodInvocation MethodInvocation locals Literal 0 get equals "" BlockStatement LocalVariableDeclaration ReferenceType BuildException VariableDeclarator be Literal null TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference antFile Literal MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation newProject StatementExpression MethodInvocation newProject MemberReference locals executeTargets CatchClause CatchClauseParameter BuildException ex StatementExpression Assignment MemberReference be MethodInvocation ProjectHelper MemberReference ex MethodInvocation getLocation = ThrowStatement MemberReference be StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference antFile Literal "." MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation newProject MemberReference be StatementExpression Assignment MemberReference newProject Literal null = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation properties elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Property MethodInvocation e nextElement StatementExpression MethodInvocation p Literal null setProject IfStatement BinaryOperation && BinaryOperation != MemberReference output Literal null BinaryOperation != MemberReference out Literal null BlockStatement TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter Exception ex StatementExpression Assignment MemberReference dir MemberReference savedDir = StatementExpression Assignment MemberReference antFile MemberReference =	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Element parent FormalParameter ReferenceType String content LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation parent LocalVariableDeclaration ReferenceType VariableDeclarator c MethodInvocation doc MemberReference content StatementExpression MethodInvocation parent MemberReference c	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType String files FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File destDir FormalParameter ReferenceType mapper FormalParameter BasicType long granularity LocalVariableDeclaration ReferenceType String VariableDeclarator res MethodInvocation MemberReference files MemberReference srcDir MemberReference destDir MemberReference mapper MemberReference granularity LocalVariableDeclaration ReferenceType File VariableDeclarator result ArrayCreator ReferenceType File MemberReference res length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference res length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result ClassCreator ReferenceType File MemberReference srcDir MemberReference ArraySelector MemberReference i res = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType byte VariableDeclarator val ArrayCreator BasicType byte ArrayInitializer Literal Literal Literal Literal LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator ClassCreator ReferenceType ZipLong MemberReference val StatementExpression MethodInvocation Literal from Literal MethodInvocation getValue assertEquals	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal allowed on load - " BinaryOperation != MethodInvocation e MethodInvocation Literal is only valid" indexOf getMessage Literal - 1 assertTrue ReturnStatement StatementExpression MethodInvocation Literal not throw exception on invalid use of fail	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Vector VariableDeclarator Cast ReferenceType Vector MethodInvocation transactions clone LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference sqlCommand StatementExpression Assignment MemberReference sqlCommand MethodInvocation sqlCommand trim = TryStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference srcFile Literal null BinaryOperation == MethodInvocation sqlCommand length Literal 0 BinaryOperation == MethodInvocation resources size Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation transactions size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Source file or resource " Literal " Literal or sql statement " Literal "must be MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference srcFile Literal null MethodInvocation ! srcFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Source file does not exist!" MethodInvocation getLocation LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next LocalVariableDeclaration ReferenceType Transaction VariableDeclarator t MethodInvocation StatementExpression MethodInvocation t MemberReference r LocalVariableDeclaration ReferenceType Transaction VariableDeclarator t MethodInvocation StatementExpression MethodInvocation t MemberReference srcFile StatementExpression MethodInvocation t MemberReference sqlCommand StatementExpression Assignment MemberReference conn MethodInvocation getConnection = IfStatement MethodInvocation ! MemberReference conn BlockStatement ReturnStatement TryStatement StatementExpression Assignment MemberReference statement MethodInvocation conn createStatement = StatementExpression MethodInvocation statement MemberReference LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out MemberReference System out TryStatement IfStatement BinaryOperation != MemberReference output Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Opening PrintStream to output file " MemberReference output MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintStream ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MethodInvocation output getAbsolutePath MemberReference append = ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation transactions elements MethodInvocation e hasMoreElements BlockStatement StatementExpression Cast ReferenceType Transaction MethodInvocation e nextElement IfStatement MethodInvocation ! BlockStatement StatementExpression MethodInvocation Literal transaction" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation conn commit IfStatement BinaryOperation && BinaryOperation != MemberReference out Literal null BinaryOperation != MemberReference out MemberReference System out BlockStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation closeQuietly ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter e StatementExpression MethodInvocation closeQuietly ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation TryStatement IfStatement BinaryOperation != MemberReference statement Literal null BlockStatement StatementExpression MethodInvocation statement close IfStatement BinaryOperation != MemberReference conn Literal null BlockStatement StatementExpression MethodInvocation conn close CatchClause CatchClauseParameter ex StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal " of " MemberReference Literal " statements executed successfully" log StatementExpression Assignment MemberReference transactions MemberReference = StatementExpression Assignment MemberReference sqlCommand MemberReference =	1
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable getWrapper ReturnStatement SuperMethodInvocation getWrapper	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation nestedTasks iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator nestedTask Cast ReferenceType Task MethodInvocation i next StatementExpression MethodInvocation nestedTask perform	1
MethodDeclaration Modifier public FormalParameter BasicType int width StatementExpression Assignment MemberReference stroke_width MemberReference width =	0
MethodDeclaration Modifier public BasicType boolean isReference ReturnStatement BinaryOperation != MemberReference ref Literal null	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation close StatementExpression MethodInvocation BinaryOperation + MemberReference f Literal " has not been MethodInvocation ! f exists assertTrue	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator filters ClassCreator ReferenceType StatementExpression MethodInvocation filters Literal "<" StatementExpression MethodInvocation filters Literal ">" StatementExpression MethodInvocation filters Literal Literal StatementExpression MethodInvocation filters Literal Literal StatementExpression MethodInvocation filters Literal Literal StatementExpression MethodInvocation filters Literal Literal LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal StatementExpression MethodInvocation MemberReference result MethodInvocation filters MemberReference line assertEquals	0
MethodDeclaration Modifier public ReferenceType String getLanguage ReturnStatement MemberReference language	0
MethodDeclaration Modifier public BasicType int IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation StatementExpression MethodInvocation ReturnStatement MethodInvocation size	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public ReferenceType String getNamespace ReturnStatement MemberReference namespace	0
MethodDeclaration Modifier public FormalParameter BasicType boolean emacsMode StatementExpression Assignment This MemberReference emacsMode MemberReference emacsMode =	1
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "import requires file attribute" IfStatement BinaryOperation || BinaryOperation == MethodInvocation getOwningTarget Literal null Literal ! MethodInvocation MethodInvocation MethodInvocation getName getOwningTarget equals "" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "import only allowed as a LocalVariableDeclaration ReferenceType ProjectHelper VariableDeclarator helper Cast ReferenceType ProjectHelper MethodInvocation MethodInvocation MemberReference ProjectHelper getReference getProject IfStatement BinaryOperation == MemberReference helper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "import requires support in LocalVariableDeclaration ReferenceType Vector VariableDeclarator importStack MethodInvocation helper getImportStack IfStatement BinaryOperation == MethodInvocation importStack size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "import requires support in IfStatement BinaryOperation || BinaryOperation == MethodInvocation getLocation Literal null BinaryOperation == MethodInvocation MethodInvocation getFileName getLocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to get location of LocalVariableDeclaration ReferenceType File VariableDeclarator buildFile ClassCreator MethodInvocation getAbsoluteFile ReferenceType File MethodInvocation MethodInvocation getFileName getLocation LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation buildFile getParent LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation FILE_UTILS MemberReference MemberReference file StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal file " MemberReference Literal " from " MethodInvocation buildFile getAbsolutePath MemberReference Project MSG_VERBOSE log getProject IfStatement MethodInvocation ! exists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot find " MemberReference file Literal " from " MethodInvocation buildFile getAbsolutePath IfStatement MemberReference optional BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference message MemberReference Project MSG_VERBOSE log getProject ReturnStatement BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MethodInvocation importStack MemberReference contains BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal already " MemberReference Literal "\n" MemberReference Project MSG_VERBOSE log getProject ReturnStatement TryStatement StatementExpression MethodInvocation helper MethodInvocation getProject MemberReference parse CatchClause CatchClauseParameter BuildException ex ThrowStatement MethodInvocation ProjectHelper MemberReference ex MethodInvocation getLocation	1
MethodDeclaration Modifier protected finalize Throwable StatementExpression SuperMethodInvocation finalize StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation project Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType String namespace IfStatement MethodInvocation namespace MemberReference ProjectHelper equals BlockStatement LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MethodInvocation getProject getComponentHelper StatementExpression Assignment MemberReference namespace MethodInvocation helper = StatementExpression Assignment This MemberReference namespace TernaryExpression BinaryOperation == MemberReference namespace Literal null Literal "" MemberReference namespace =	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType String path StatementExpression Assignment MemberReference parts MethodInvocation MethodInvocation getProject MemberReference path =	0
MethodDeclaration Modifier public setMode FormalParameter ReferenceType String s StatementExpression Assignment MemberReference mode MemberReference s =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference MemberReference name =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal "catalog" MemberReference catalog StatementExpression MethodInvocation catalog ClassCreator ReferenceType Literal "catalog" TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog Literal ID Literal resolveEntity StatementExpression MethodInvocation Literal make a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation project Literal MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation project Literal MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator catalog3 MethodInvocation StatementExpression MethodInvocation project Literal MemberReference catalog3 StatementExpression MethodInvocation catalog3 ClassCreator ReferenceType Literal StatementExpression MethodInvocation ClassCreator ReferenceType Literal StatementExpression MethodInvocation ClassCreator ReferenceType Literal TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation Literal ID Literal resolveEntity StatementExpression MethodInvocation Literal make reference" fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail	1
MethodDeclaration Modifier public FormalParameter ReferenceType Locator locator StatementExpression MethodInvocation context MemberReference locator	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Resource r ReturnStatement MethodInvocation SelectorUtils ClassCreator ReferenceType FileResource MemberReference tarFile MemberReference r MethodInvocation FileUtils MethodInvocation getFileUtils	0
MethodDeclaration Modifier public FormalParameter ReferenceType catalog IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation LocalVariableDeclaration ReferenceType Vector VariableDeclarator newElements MethodInvocation catalog getElements LocalVariableDeclaration ReferenceType Vector VariableDeclarator MethodInvocation getElements LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation newElements elements WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation MethodInvocation e nextElement addElement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation catalog StatementExpression MethodInvocation MethodInvocation MemberReference append createClasspath LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation catalog getCatalogPath StatementExpression MethodInvocation MethodInvocation MemberReference append StatementExpression MethodInvocation Literal false setChecked	1
MethodDeclaration Modifier public setLastModified FormalParameter BasicType long StatementExpression MethodInvocation StatementExpression Assignment This MemberReference ClassCreator ReferenceType Long MemberReference =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType DateFormat dateFormat StatementExpression Assignment This MemberReference dateFormat MemberReference dateFormat =	0
MethodDeclaration Modifier public BasicType int size ReturnStatement MemberReference dirs length	1
MethodDeclaration Modifier public synchronized ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal file same as expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Warning: " expectLogContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String target FormalParameter ReferenceType String log StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference log MemberReference assertEquals	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator test MethodInvocation ZipOutputStream MemberReference time StatementExpression MethodInvocation MethodInvocation test getValue MethodInvocation getValue assertEquals	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String v StatementExpression Assignment This MemberReference platform MemberReference v =	0
MethodDeclaration Modifier public ReferenceType Object clone TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType SuperMethodInvocation clone StatementExpression Assignment MemberReference c rc ClassCreator ReferenceType ArrayList MemberReference rc = StatementExpression Assignment MemberReference c Literal null = ReturnStatement MemberReference c CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public BasicType long failureCount ReturnStatement MemberReference	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified IOException StatementExpression MethodInvocation MemberReference sourceFile MemberReference destFile MemberReference filters MemberReference overwrite MemberReference preserveLastModified Literal null copyFile	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public write FormalParameter Modifier final BasicType byte buf FormalParameter BasicType int offs FormalParameter Modifier final BasicType int len IOException IfStatement BinaryOperation < MemberReference offs Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + BinaryOperation + Literal "offs(" MemberReference offs Literal ") < 0." IfStatement BinaryOperation < MemberReference len Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + BinaryOperation + Literal MemberReference len Literal ") < 0." IfStatement BinaryOperation > BinaryOperation + MemberReference offs MemberReference len MemberReference buf length BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "offs(" MemberReference offs Literal ") + MemberReference len Literal ") > MemberReference buf length Literal ")." IfStatement BinaryOperation == This MemberReference out Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "stream ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator hi BinaryOperation + MemberReference offs MemberReference len BinaryOperation < MemberReference offs MemberReference hi BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference ++ offs buf write0	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private logError FormalParameter ReferenceType TransformerException e FormalParameter ReferenceType String type IfStatement BinaryOperation == MemberReference logger Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType VariableDeclarator locator MethodInvocation e getLocator IfStatement BinaryOperation != MemberReference locator Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation locator getSystemId IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator url MemberReference IfStatement MethodInvocation url Literal "file:" startsWith BlockStatement StatementExpression Assignment MemberReference url MethodInvocation FileUtils MethodInvocation MemberReference url fromURI getFileUtils = StatementExpression MethodInvocation msg MemberReference url append BlockStatement StatementExpression MethodInvocation msg Literal "Unknown file" append LocalVariableDeclaration BasicType int VariableDeclarator line MethodInvocation locator getLineNumber IfStatement BinaryOperation != MemberReference line Literal - 1 BlockStatement StatementExpression MethodInvocation msg Literal ":" append StatementExpression MethodInvocation msg MemberReference line append LocalVariableDeclaration BasicType int VariableDeclarator column MethodInvocation locator getColumnNumber IfStatement BinaryOperation != MemberReference column Literal - 1 BlockStatement StatementExpression MethodInvocation msg Literal ":" append StatementExpression MethodInvocation msg MemberReference column append StatementExpression MethodInvocation msg Literal ": " append StatementExpression MethodInvocation msg MemberReference type append StatementExpression MethodInvocation msg Literal " append StatementExpression MethodInvocation msg MethodInvocation e getMessage append IfStatement BinaryOperation != MethodInvocation e getCause Literal null BlockStatement StatementExpression MethodInvocation msg Literal " " append StatementExpression MethodInvocation msg MethodInvocation e getCause append StatementExpression MethodInvocation logger MethodInvocation msg toString log	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType BuildException LocalVariableDeclaration ReferenceType VariableDeclarator path Cast ReferenceType MethodInvocation MemberReference project getReferencedObject StatementExpression MethodInvocation MemberReference path	0
MethodDeclaration Modifier synchronized protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation rc iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference o ReferenceType DataType BlockStatement StatementExpression MethodInvocation stk MemberReference o push StatementExpression MethodInvocation Cast ReferenceType DataType MemberReference o MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation stk pop StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MethodInvocation file1 exists assertTrue StatementExpression MethodInvocation MethodInvocation file2 exists assertTrue StatementExpression MethodInvocation MethodInvocation exists assertTrue	1
MethodDeclaration Modifier private FormalParameter ReferenceType PrintStream out IOException IfStatement BinaryOperation != MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Executing MemberReference Project MSG_INFO log StatementExpression MethodInvocation ClassCreator ReferenceType StringReader MemberReference MemberReference out IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Executing resource: " MethodInvocation toString MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null LocalVariableDeclaration ReferenceType Reader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference is MethodInvocation getInputStream = StatementExpression Assignment MemberReference reader TernaryExpression BinaryOperation == MemberReference encoding Literal null ClassCreator ReferenceType InputStreamReader MemberReference is ClassCreator ReferenceType InputStreamReader MemberReference is MemberReference encoding = StatementExpression MethodInvocation MemberReference reader MemberReference out StatementExpression MethodInvocation FileUtils MemberReference is close StatementExpression MethodInvocation FileUtils MemberReference reader close	1
MethodDeclaration Modifier protected handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement StatementExpression MethodInvocation runner MemberReference output handleFlush IfStatement MemberReference BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleFlush	1
MethodDeclaration Modifier public FormalParameter ReferenceType task StatementExpression SuperMethodInvocation MemberReference task StatementExpression Assignment MemberReference java ClassCreator ReferenceType Java MemberReference task =	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference P4View Literal null BlockStatement StatementExpression Assignment MemberReference addCmd MemberReference P4View = StatementExpression Assignment MemberReference P4CmdOpts TernaryExpression BinaryOperation > MemberReference changelist Literal 0 BinaryOperation + Literal "-c " MemberReference changelist Literal "" = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator filelist ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator srcFiles MethodInvocation ds getIncludedFiles IfStatement BinaryOperation != MemberReference srcFiles Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference srcFiles length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation ds getBasedir MemberReference ArraySelector MemberReference j srcFiles StatementExpression MethodInvocation filelist MethodInvocation Literal '"' append MethodInvocation MethodInvocation f getAbsolutePath append MethodInvocation Literal '"' append Literal " " append IfStatement BinaryOperation > MethodInvocation filelist length MemberReference cmdLength BlockStatement StatementExpression MethodInvocation MemberReference filelist StatementExpression Assignment MemberReference filelist ClassCreator ReferenceType StringBuffer = IfStatement BinaryOperation > MethodInvocation filelist length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference filelist BlockStatement StatementExpression MethodInvocation Literal "No files specified to MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public ReferenceType String getCommandline LocalVariableDeclaration ReferenceType List VariableDeclarator commands ClassCreator ReferenceType LinkedList LocalVariableDeclaration Modifier final ReferenceType ListIterator VariableDeclarator listIterator MethodInvocation commands listIterator StatementExpression MethodInvocation MemberReference listIterator ReturnStatement Cast ReferenceType String MethodInvocation commands ArrayCreator ReferenceType String MethodInvocation commands size toArray	0
MethodDeclaration Modifier public FormalParameter BasicType boolean skip StatementExpression Assignment MemberReference MemberReference skip =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression This MethodInvocation MemberReference e MemberReference s	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal false Literal false Literal true Literal true Literal false	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name BuildException ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference specificationVersion	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType BinaryOperation == MethodInvocation getIndex Cast ReferenceType MemberReference other	1
MethodDeclaration Modifier protected execute FormalParameter ReferenceType String args FormalParameter ReferenceType file BuildException StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args MethodInvocation file getPath = LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public merge FormalParameter ReferenceType Section section IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MemberReference name Literal null BinaryOperation != MethodInvocation section getName Literal null BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation ! name MethodInvocation section getName equalsIgnoreCase BlockStatement ThrowStatement ClassCreator ReferenceType BinaryOperation + Literal "Unable to merge sections " Literal "with names" LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation section LocalVariableDeclaration ReferenceType Attribute VariableDeclarator classpathAttribute Literal null WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attributeName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute MethodInvocation section MemberReference attributeName getAttribute IfStatement MethodInvocation attributeName MemberReference ATTRIBUTE_CLASSPATH equalsIgnoreCase BlockStatement IfStatement BinaryOperation == MemberReference classpathAttribute Literal null BlockStatement StatementExpression Assignment MemberReference classpathAttribute ClassCreator ReferenceType Attribute = StatementExpression MethodInvocation classpathAttribute MemberReference ATTRIBUTE_CLASSPATH setName LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator cpe MethodInvocation attribute WhileStatement MethodInvocation cpe hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation cpe nextElement StatementExpression MethodInvocation classpathAttribute MemberReference value addValue BlockStatement StatementExpression MethodInvocation MemberReference attribute storeAttribute IfStatement BinaryOperation != MemberReference classpathAttribute Literal null BlockStatement StatementExpression MethodInvocation MemberReference classpathAttribute storeAttribute LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation elements WhileStatement MethodInvocation hasMoreElements BlockStatement StatementExpression MethodInvocation warnings MethodInvocation nextElement addElement	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean isCaseSensitive StatementExpression Assignment This MemberReference isCaseSensitive MemberReference isCaseSensitive =	0
MethodDeclaration Modifier private static FormalParameter Modifier final ReferenceType List FormalParameter Modifier final ReferenceType Extension FormalParameter Modifier final BasicType boolean FormalParameter Modifier final BasicType boolean LocalVariableDeclaration ReferenceType Extension VariableDeclarator extension MemberReference IfStatement BinaryOperation && MemberReference ! BinaryOperation != Literal null MethodInvocation extension BlockStatement StatementExpression Assignment MemberReference extension ClassCreator ReferenceType Extension MethodInvocation extension MethodInvocation extension MethodInvocation toString MethodInvocation extension MethodInvocation extension MethodInvocation toString MethodInvocation extension MethodInvocation extension Literal null = LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != Literal null MethodInvocation extension BinaryOperation != Literal null MethodInvocation extension BinaryOperation != Literal null MethodInvocation extension BinaryOperation != Literal null MethodInvocation extension IfStatement BinaryOperation && MemberReference ! MemberReference BlockStatement StatementExpression Assignment MemberReference extension ClassCreator ReferenceType Extension MethodInvocation extension MethodInvocation extension MethodInvocation toString MethodInvocation extension Literal null Literal null Literal null MethodInvocation extension = StatementExpression MethodInvocation MemberReference extension add	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH MemberReference MSVSS MemberReference MSVSS BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME BinaryOperation + MemberReference MSVSS MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference VSS_USERNAME StatementExpression MethodInvocation Literal StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal true StatementExpression Assignment MemberReference commandline MethodInvocation = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType AsiExtraField VariableDeclarator a ClassCreator ReferenceType AsiExtraField StatementExpression MethodInvocation a Literal true setDirectory StatementExpression MethodInvocation a Literal 0755 setMode LocalVariableDeclaration ReferenceType UnrecognizedExtraField VariableDeclarator u ClassCreator ReferenceType UnrecognizedExtraField StatementExpression MethodInvocation u ClassCreator ReferenceType ZipShort Literal 1 StatementExpression MethodInvocation u ArrayCreator BasicType byte Literal 0 setLocalFileDataData LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze ClassCreator ReferenceType ZipEntry Literal StatementExpression MethodInvocation ze ArrayCreator ReferenceType ArrayInitializer MemberReference a MemberReference u LocalVariableDeclaration BasicType byte VariableDeclarator data1 MethodInvocation ze LocalVariableDeclaration ReferenceType VariableDeclarator result MethodInvocation ze getExtraFields StatementExpression MethodInvocation Literal pass" Literal 2 MemberReference result length assertEquals StatementExpression MethodInvocation MemberReference a MemberReference ArraySelector Literal 0 result assertSame StatementExpression MethodInvocation MemberReference u MemberReference ArraySelector Literal 1 result assertSame LocalVariableDeclaration ReferenceType UnrecognizedExtraField VariableDeclarator u2 ClassCreator ReferenceType UnrecognizedExtraField StatementExpression MethodInvocation u2 ClassCreator ReferenceType ZipShort Literal 1 StatementExpression MethodInvocation u2 ArrayCreator BasicType byte ArrayInitializer Literal 1 setLocalFileDataData StatementExpression MethodInvocation ze MemberReference u2 LocalVariableDeclaration BasicType byte VariableDeclarator data2 MethodInvocation ze StatementExpression Assignment MemberReference result MethodInvocation ze getExtraFields = StatementExpression MethodInvocation Literal pass" Literal 2 MemberReference result length assertEquals StatementExpression MethodInvocation MemberReference a MemberReference ArraySelector Literal 0 result assertSame StatementExpression MethodInvocation MemberReference u2 MemberReference ArraySelector Literal 1 result assertSame StatementExpression MethodInvocation Literal second pass" BinaryOperation + MemberReference data1 length Literal 1 MemberReference data2 length assertEquals LocalVariableDeclaration ReferenceType UnrecognizedExtraField VariableDeclarator u3 ClassCreator ReferenceType UnrecognizedExtraField StatementExpression MethodInvocation u3 ClassCreator ReferenceType ZipShort Literal 2 StatementExpression MethodInvocation u3 ArrayCreator BasicType byte ArrayInitializer Literal 1 setLocalFileDataData StatementExpression MethodInvocation ze MemberReference u3 StatementExpression Assignment MemberReference result MethodInvocation ze getExtraFields = StatementExpression MethodInvocation Literal pass" Literal 3 MemberReference result length assertEquals StatementExpression MethodInvocation ze ClassCreator ReferenceType ZipShort Literal 1 LocalVariableDeclaration BasicType byte VariableDeclarator MethodInvocation ze StatementExpression Assignment MemberReference result MethodInvocation ze getExtraFields = StatementExpression MethodInvocation Literal pass" Literal 2 MemberReference result length assertEquals StatementExpression MethodInvocation MemberReference a MemberReference ArraySelector Literal 0 result assertSame StatementExpression MethodInvocation MemberReference u3 MemberReference ArraySelector Literal 1 result assertSame StatementExpression MethodInvocation Literal pass" MemberReference data2 length MemberReference length assertEquals TryStatement StatementExpression MethodInvocation ze ClassCreator ReferenceType ZipShort Literal 1 StatementExpression MethodInvocation Literal "should be no such fail CatchClause CatchClauseParameter	1
MethodDeclaration Modifier public FormalParameter ReferenceType ZipFileSet fs StatementExpression MethodInvocation fs Literal StatementExpression SuperMethodInvocation MemberReference fs	0
MethodDeclaration Modifier private ReferenceType Method FormalParameter ReferenceType Class paramClass FormalParameter ReferenceType List methods LocalVariableDeclaration ReferenceType Class VariableDeclarator matchedClass Literal null LocalVariableDeclaration ReferenceType Method VariableDeclarator matchedMethod Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation methods size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method Cast ReferenceType Method MethodInvocation methods MemberReference i get LocalVariableDeclaration ReferenceType Class VariableDeclarator methodClass MethodInvocation method ArraySelector Literal 0 getParameterTypes IfStatement MethodInvocation methodClass MemberReference paramClass isAssignableFrom BlockStatement IfStatement BinaryOperation == MemberReference matchedClass Literal null BlockStatement StatementExpression Assignment MemberReference matchedClass MemberReference methodClass = StatementExpression Assignment MemberReference matchedMethod MemberReference method = BlockStatement IfStatement MethodInvocation ! methodClass MemberReference matchedClass isAssignableFrom BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal types " MethodInvocation matchedClass getName Literal " and " MethodInvocation methodClass getName Literal " match " MethodInvocation paramClass getName ReturnStatement MemberReference matchedMethod	1
MethodDeclaration Modifier private FormalParameter ReferenceType String resource IfStatement MethodInvocation resource Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference resource MethodInvocation resource Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference resource BinaryOperation + Literal MemberReference resource = LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation MethodInvocation getClassLoader getClass MemberReference resource IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found " MethodInvocation f getAbsolutePath MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation runtimeClasses MethodInvocation MemberReference f setLocation createPath BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal find " MemberReference resource MemberReference Project MSG_DEBUG log	1
MethodDeclaration Modifier public FormalParameter ReferenceType String exactly StatementExpression Assignment This MemberReference exactly MemberReference exactly =	0
MethodDeclaration Modifier public ReferenceType JonasDeploymentTool StatementExpression MethodInvocation Literal MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType JonasDeploymentTool VariableDeclarator ClassCreator ReferenceType JonasDeploymentTool StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean doValidate FormalParameter ReferenceType File afile StatementExpression MethodInvocation LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal true TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MethodInvocation afile getName Literal " MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference afile init LocalVariableDeclaration ReferenceType InputSource VariableDeclarator is ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference afile LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation FILE_UTILS MethodInvocation afile getAbsolutePath toURI StatementExpression MethodInvocation is MemberReference uri setSystemId StatementExpression MethodInvocation xmlReader MemberReference is parse CatchClause CatchClauseParameter SAXException ex StatementExpression MethodInvocation BinaryOperation + Literal "Caught when " MethodInvocation ex toString MemberReference Project MSG_DEBUG log IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not validate document " MemberReference afile StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not validate document " MemberReference afile Literal ": " MethodInvocation ex toString log StatementExpression Assignment MemberReference result Literal false = CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not validate document " MemberReference afile MemberReference ex IfStatement MethodInvocation BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference afile Literal " is not a valid XML StatementExpression Assignment MemberReference result Literal false = StatementExpression MethodInvocation BinaryOperation + MemberReference afile Literal " is not a valid XML MemberReference Project MSG_ERR log ReturnStatement MemberReference result	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference tmpDir	0
MethodDeclaration Modifier public ReferenceType getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier private ReferenceType XMethod FormalParameter ReferenceType List methods StatementExpression MethodInvocation Collections MemberReference methods ClassCreator ReferenceType Comparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType XMethod VariableDeclarator m1 Cast ReferenceType XMethod MemberReference o1 LocalVariableDeclaration ReferenceType XMethod VariableDeclarator m2 Cast ReferenceType XMethod MemberReference o2 ReturnStatement MethodInvocation m1 MethodInvocation MethodInvocation m2 getName compareTo getName MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation == MemberReference obj This sort ReturnStatement Cast ReferenceType XMethod MethodInvocation methods ArrayCreator ReferenceType XMethod MethodInvocation methods size toArray	1
MethodDeclaration Modifier public static ReferenceType String removeWhitespace FormalParameter ReferenceType String input LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MemberReference input Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference input WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation result MethodInvocation st nextToken append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference targetNames executeTargets getProject StatementExpression MethodInvocation MemberReference Literal 4 assertEquals	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference cls Literal null BinaryOperation == MethodInvocation classes size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "class attribute must be MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference cls Literal null BinaryOperation > MethodInvocation classes size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "set class attribute or class " Literal "not MethodInvocation getLocation IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement IfStatement MethodInvocation ! destDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory \"" MemberReference destDir Literal "\" does not exist or is not a directory" MethodInvocation getLocation IfStatement BinaryOperation != MemberReference outputFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal and outputFile are " Literal MethodInvocation getLocation IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator MethodInvocation Literal concatSystemClasspath ReferenceType MethodInvocation getProject = BlockStatement StatementExpression Assignment MemberReference classpath MethodInvocation classpath Literal "ignore" concatSystemClasspath = LocalVariableDeclaration ReferenceType JavahAdapter VariableDeclarator MethodInvocation MethodInvocation facade This getAdapter IfStatement MethodInvocation ! This compile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal failed"	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator t ClassCreator ReferenceType StatementExpression MethodInvocation t MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setValue StatementExpression MethodInvocation MemberReference t BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Task task StatementExpression MethodInvocation MethodInvocation Thread currentThread MemberReference task LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference task LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation sysprops MemberReference add	0
MethodDeclaration Modifier public synchronized BasicType int available IOException IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal IfStatement BinaryOperation != MemberReference slack Literal null BlockStatement ReturnStatement BinaryOperation - MemberReference slack length MemberReference begin IfStatement MethodInvocation in ready BlockStatement ReturnStatement Literal 1 BlockStatement ReturnStatement Literal 0	0
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation eolStr length	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd Literal doc LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation dtd MemberReference setLocation StatementExpression MethodInvocation catalog MemberReference dtd LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project MemberReference TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog Literal doc Literal resolveEntity StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail	0
MethodDeclaration Modifier protected processLine FormalParameter ReferenceType String line FormalParameter BasicType int level IfStatement MethodInvocation line MemberReference startsWith BlockStatement StatementExpression MethodInvocation task MemberReference line MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression SuperMethodInvocation MemberReference line MemberReference level processLine	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal - 1 MethodInvocation MethodInvocation Literal indexOf getLog assertEquals	0
MethodDeclaration Modifier public BasicType boolean IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MemberReference ArraySelector MemberReference pos array StatementExpression MemberReference ++ pos ReturnStatement MemberReference o ThrowStatement ClassCreator ReferenceType NoSuchElementException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Manifest ReferenceType Section section StatementExpression MethodInvocation MemberReference section	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation && BinaryOperation != MemberReference queuedData Literal null BinaryOperation == MethodInvocation queuedData length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData Literal null = IfStatement BinaryOperation != MemberReference queuedData Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation queuedData Literal 0 charAt = StatementExpression Assignment MemberReference queuedData MethodInvocation queuedData Literal 1 substring = IfStatement BinaryOperation == MethodInvocation queuedData length Literal 0 BlockStatement StatementExpression Assignment MemberReference queuedData Literal null = BlockStatement StatementExpression Assignment MemberReference queuedData MethodInvocation readFully = IfStatement BinaryOperation == MemberReference queuedData Literal null BlockStatement StatementExpression Assignment MemberReference ch Literal - 1 = BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation getProject StatementExpression Assignment MemberReference queuedData MethodInvocation project MemberReference queuedData replaceProperties = ReturnStatement MethodInvocation read ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType String BuildException ReturnStatement MethodInvocation MethodInvocation getName getClass	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal attribute has been BinaryOperation + Literal "No reference specified for " Literal "condition" expectSpecificBuildException	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation compileList removeAllElements	0
MethodDeclaration Modifier public FormalParameter BasicType int w StatementExpression Assignment MemberReference width MemberReference w =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier public addContainsRegexp FormalParameter ReferenceType ContainsRegexpSelector selector StatementExpression MethodInvocation fileset MemberReference selector addContainsRegexp	1
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference targetdir Literal null BlockStatement StatementExpression MethodInvocation Literal "The targetdir attribute is required." setError IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference map ClassCreator ReferenceType IdentityMapper = BlockStatement StatementExpression Assignment MemberReference map MethodInvocation = IfStatement BinaryOperation == MemberReference map Literal null BlockStatement StatementExpression MethodInvocation Literal "Could not set setError	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration BasicType int VariableDeclarator logLevel MemberReference Project MSG_INFO LocalVariableDeclaration ReferenceType VariableDeclarator progress Literal null IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference progress ClassCreator ReferenceType MemberReference System out = TryStatement StatementExpression MethodInvocation MemberReference logLevel MemberReference progress doGet CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error getting " MemberReference source Literal " to " MemberReference dest log IfStatement MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation	1
MethodDeclaration Modifier public startDocument SAXException StatementExpression Assignment This MemberReference ejbFiles ClassCreator ReferenceType Hashtable MemberReference Literal 1 = StatementExpression Assignment This MemberReference currentElement Literal null = StatementExpression Assignment MemberReference inEJBRef Literal false =	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String family FormalParameter ReferenceType String name FormalParameter ReferenceType String FormalParameter ReferenceType String version LocalVariableDeclaration BasicType boolean VariableDeclarator retValue Literal false IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference family Literal null BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference version Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isFamily Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator isName Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true IfStatement BinaryOperation != MemberReference family Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isWindows BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 LocalVariableDeclaration BasicType boolean VariableDeclarator is9x Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator isNT Literal false IfStatement MemberReference isWindows BlockStatement StatementExpression Assignment MemberReference is9x BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation >= MethodInvocation OS_NAME Literal indexOf Literal 0 BinaryOperation >= MethodInvocation OS_NAME Literal indexOf Literal 0 BinaryOperation >= MethodInvocation OS_NAME Literal indexOf Literal 0 BinaryOperation >= MethodInvocation OS_NAME Literal indexOf Literal 0 = StatementExpression Assignment MemberReference isNT MemberReference ! is9x = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily MemberReference isWindows = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation && MemberReference isWindows MemberReference is9x = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation && MemberReference isWindows MemberReference isNT = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation && MethodInvocation Literal ";" equals MethodInvocation ! MemberReference isFamily = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation > MethodInvocation OS_NAME Literal indexOf Literal - 1 = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation && BinaryOperation && MethodInvocation Literal ":" equals MethodInvocation ! MemberReference isFamily BinaryOperation || MethodInvocation ! MemberReference isFamily MethodInvocation OS_NAME Literal endsWith = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation || BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 BinaryOperation > MethodInvocation OS_NAME Literal indexOf Literal - 1 = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 = IfStatement MethodInvocation family MemberReference equals BlockStatement StatementExpression Assignment MemberReference isFamily BinaryOperation > MethodInvocation OS_NAME MemberReference indexOf Literal - 1 = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal to os family \"" MemberReference family Literal "\"" IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference isName MethodInvocation name MemberReference OS_NAME equals = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference equals = IfStatement BinaryOperation != MemberReference version Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation version MemberReference equals = StatementExpression Assignment MemberReference retValue BinaryOperation && BinaryOperation && BinaryOperation && MemberReference isFamily MemberReference isName MemberReference MemberReference = ReturnStatement MemberReference retValue	1
MethodDeclaration Modifier public ReferenceType String IfStatement MemberReference BlockStatement ReturnStatement MethodInvocation getExecutable ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType long ReturnStatement BinaryOperation - MethodInvocation MethodInvocation MethodInvocation MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType Commandline StatementExpression Assignment MemberReference commandLine ClassCreator ReferenceType Commandline = IfStatement BinaryOperation != MethodInvocation getFilename Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_FILE setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getFilename setValue createArgument BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument StatementExpression MethodInvocation StatementExpression MethodInvocation ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public configureProject FormalParameter ReferenceType String filename FormalParameter BasicType int logLevel BuildException StatementExpression Assignment MemberReference ClassCreator ReferenceType StringBuffer = StatementExpression Assignment MemberReference ClassCreator ReferenceType StringBuffer = StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project init LocalVariableDeclaration ReferenceType File VariableDeclarator antFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference filename StatementExpression MethodInvocation project Literal MethodInvocation antFile getAbsolutePath StatementExpression MethodInvocation project ClassCreator ReferenceType MemberReference logLevel StatementExpression MethodInvocation ProjectHelper MemberReference project MemberReference antFile configureProject	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Document doc FormalParameter ReferenceType PrintWriter writer FormalParameter ReferenceType CvsTagEntry entry IOException LocalVariableDeclaration ReferenceType Element VariableDeclarator ent MethodInvocation doc Literal createElement LocalVariableDeclaration ReferenceType Element VariableDeclarator f MethodInvocation MemberReference ent Literal "file" StatementExpression MethodInvocation MemberReference f Literal "name" MethodInvocation entry getFile IfStatement BinaryOperation != MethodInvocation entry Literal null BlockStatement StatementExpression MethodInvocation MemberReference f Literal MethodInvocation entry IfStatement BinaryOperation != MethodInvocation entry Literal null BlockStatement StatementExpression MethodInvocation MemberReference f Literal MethodInvocation entry StatementExpression MethodInvocation MemberReference ent MemberReference writer Literal 1 Literal "\t" write	0
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar ReturnStatement MethodInvocation foo MethodInvocation MethodInvocation bar getName compareTo getName	1
MethodDeclaration Modifier public ReferenceType Attributes ReturnStatement MemberReference attributes	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public setCount FormalParameter BasicType int c StatementExpression Assignment MemberReference count ClassCreator ReferenceType Integer MemberReference c =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference StatementExpression Assignment This MemberReference Literal true =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType desc ReturnStatement MethodInvocation desc MethodInvocation This MethodInvocation getName startsWith getName	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference fork MemberReference value =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator timeZone MethodInvocation TimeZone Literal LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar MemberReference timeZone getInstance StatementExpression MethodInvocation cal Literal 2002 Literal 1 Literal 23 Literal 21 Literal 11 Literal 12 set LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation MethodInvocation cal MemberReference format StatementExpression MethodInvocation Literal MemberReference text assertEquals	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String line IfStatement BinaryOperation == MethodInvocation line MethodInvocation length trim Literal 0 BlockStatement ReturnStatement Literal null ReturnStatement MemberReference line	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String className ReturnStatement BinaryOperation + MethodInvocation className Literal '.' Literal '/' replace Literal ".class"	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference MemberReference fail = StatementExpression Assignment MemberReference MemberReference fail |=	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration ReferenceType String ReturnStatement MethodInvocation getValue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "No parsing exception Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String outputFile StatementExpression Assignment This MemberReference output MemberReference outputFile =	0
MethodDeclaration Modifier private FormalParameter ReferenceType m BSFException ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation keySet MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation i next LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MethodInvocation MemberReference key get IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation m MemberReference key MemberReference value MethodInvocation value getClass BlockStatement StatementExpression MethodInvocation m MemberReference key	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier synchronized final protected ReferenceType List StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation Collections MemberReference rc	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator arg ClassCreator ReferenceType StatementExpression MethodInvocation facade MemberReference arg ReturnStatement MemberReference arg	0
MethodDeclaration Modifier private FormalParameter ReferenceType String IfStatement BinaryOperation != This MemberReference Literal null BlockStatement ThrowStatement MethodInvocation MemberReference StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getIncludedDirectories IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation getIncludedDirectories StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Set VariableDeclarator s MethodInvocation keySet ReturnStatement Cast ReferenceType String MethodInvocation s ArrayCreator ReferenceType String MethodInvocation s size toArray	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test t StatementExpression MethodInvocation MemberReference t ClassCreator ReferenceType Long MethodInvocation System currentTimeMillis put StatementExpression MethodInvocation failed MemberReference t MemberReference Boolean FALSE put	1
MethodDeclaration Modifier public BasicType float getWidth LocalVariableDeclaration BasicType float VariableDeclarator width Literal LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Literal '%' indexOf IfStatement BinaryOperation > MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference width MethodInvocation Float MethodInvocation Literal 0 MemberReference substring = StatementExpression Assignment MemberReference Literal true = ReturnStatement BinaryOperation / MemberReference width MemberReference BlockStatement StatementExpression Assignment MemberReference Literal false = ReturnStatement MethodInvocation Float MemberReference	0
MethodDeclaration Modifier public setError FormalParameter ReferenceType File error StatementExpression Assignment This MemberReference error MemberReference error =	0
MethodDeclaration Modifier protected setUp Exception StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String line StatementExpression MemberReference ++ IfStatement BinaryOperation > MemberReference skip Literal 0 BlockStatement IfStatement BinaryOperation < BinaryOperation - MemberReference Literal 1 MemberReference skip BlockStatement ReturnStatement Literal null IfStatement BinaryOperation > MemberReference lines Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference BinaryOperation + MemberReference lines MemberReference skip BlockStatement ReturnStatement Literal null ReturnStatement MemberReference line	1
MethodDeclaration Modifier public FormalParameter BasicType boolean q StatementExpression Assignment MemberReference MemberReference q =	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r	1
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int c IOException StatementExpression MethodInvocation Literal 8 MemberReference c bsW	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean isCaseSensitive StatementExpression Assignment This MemberReference isCaseSensitive MemberReference isCaseSensitive =	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation v iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference o ReferenceType DataType BlockStatement StatementExpression MethodInvocation stk MemberReference o push StatementExpression MethodInvocation Cast ReferenceType DataType MemberReference o MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public StatementExpression ClassCreator ReferenceType ClassCreator ReferenceType java ReferenceType io ReferenceType File Literal	0
MethodDeclaration Modifier public FormalParameter BasicType int mode StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference BinaryOperation | MemberReference MemberReference mode =	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String col StatementExpression Assignment MemberReference fill MemberReference col =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "plain" Literal "xml" Literal	0
MethodDeclaration Modifier public BasicType int getStatus ReturnStatement MemberReference code	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType String getClassname ReturnStatement MemberReference value	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classLoader MethodInvocation Literal null getClassLoader LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation Literal false LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props propertyNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation props MemberReference name getProperty LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def ClassCreator ReferenceType AntTypeDefinition StatementExpression MethodInvocation def MemberReference name setName StatementExpression MethodInvocation def MemberReference className StatementExpression MethodInvocation def MemberReference classLoader StatementExpression MethodInvocation def ClassReference ReferenceType Task StatementExpression MethodInvocation def ClassReference ReferenceType StatementExpression MethodInvocation antTypeTable MemberReference name MemberReference def put	0
MethodDeclaration Modifier private FormalParameter ReferenceType BufferedReader reader IOException LocalVariableDeclaration ReferenceType String VariableDeclarator line LocalVariableDeclaration ReferenceType String VariableDeclarator lower WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation reader readLine = Literal null BlockStatement StatementExpression Assignment MemberReference lower MethodInvocation line toLowerCase = IfStatement MethodInvocation line MethodInvocation Literal "" equals trim BlockStatement ContinueStatement IfStatement BinaryOperation != MethodInvocation lower Literal "error" indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation Literal true setError IfStatement BinaryOperation != MethodInvocation lower Literal "warning" indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation Literal false setError BlockStatement IfStatement MemberReference emacsMode BlockStatement StatementExpression MethodInvocation Literal true setError StatementExpression MethodInvocation MemberReference line log	1
MethodDeclaration Modifier public FormalParameter ReferenceType CrLf attr StatementExpression Assignment MemberReference eol MethodInvocation attr resolve =	0
MethodDeclaration Modifier public FormalParameter ReferenceType AntTypeDefinition def StatementExpression MethodInvocation MemberReference def	0
MethodDeclaration Modifier private FormalParameter BasicType boolean append BuildException IfStatement BinaryOperation == MemberReference out Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintStream ClassCreator ReferenceType FileOutputStream MemberReference filename MemberReference append = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal opening file using a " Literal entry" MemberReference ioe	1
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean append StatementExpression Assignment This MemberReference append MemberReference append =	0
MethodDeclaration Modifier private synchronized FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation ProjectHelper MemberReference IfStatement Literal MethodInvocation MemberReference uri equals "" BlockStatement StatementExpression Assignment MemberReference uri MemberReference ProjectHelper ANT_CORE_URI = IfStatement MethodInvocation ! uri MemberReference ProjectHelper startsWith BlockStatement ReturnStatement IfStatement MethodInvocation MemberReference uri contains BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference uri add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation init StatementExpression MethodInvocation MemberReference uri StatementExpression MethodInvocation MemberReference uri setTaskName StatementExpression MethodInvocation MethodInvocation MemberReference uri StatementExpression MethodInvocation ClassCreator ReferenceType ReferenceType MemberReference StatementExpression MethodInvocation execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier protected ReferenceType File getFiles LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation filesets size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner StatementExpression MethodInvocation ds LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference f length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pathname MemberReference ArraySelector MemberReference j f IfStatement MethodInvocation pathname Literal ".xml" endsWith BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation ds getBasedir MemberReference pathname StatementExpression Assignment MemberReference file MethodInvocation MethodInvocation MethodInvocation file getPath getProject = StatementExpression MethodInvocation v MemberReference file addElement LocalVariableDeclaration ReferenceType File VariableDeclarator files ArrayCreator ReferenceType File MethodInvocation v size StatementExpression MethodInvocation v MemberReference files copyInto ReturnStatement MemberReference files	1
MethodDeclaration close IOException StatementExpression MethodInvocation writer close	0
MethodDeclaration Modifier public ReferenceType List ReturnStatement MemberReference cmpDescriptors	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal " "	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement TernaryExpression MethodInvocation isExists ClassCreator ReferenceType ByteArrayInputStream MethodInvocation MethodInvocation getBytes getValue MemberReference	1
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation Literal equalsIgnoreCase BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation Literal equalsIgnoreCase BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier protected ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation MethodInvocation MemberReference getProject IfStatement MethodInvocation ! dir exists BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator done MethodInvocation dir mkdirs IfStatement MemberReference ! done BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Directory " MemberReference Literal " creation was not " Literal for an unknown ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Created dir: " MethodInvocation dir getAbsolutePath log getProject StatementExpression Assignment MemberReference BinaryOperation + MemberReference MemberReference = ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal or is expectLog	0
MethodDeclaration Modifier public FormalParameter ReferenceType File output StatementExpression Assignment MemberReference outputFile MemberReference output =	0
MethodDeclaration Modifier private static ReferenceType String LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator ret ArrayCreator ReferenceType String BinaryOperation + MethodInvocation c size Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i ret Literal "" = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation c iterator MethodInvocation it hasNext MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ret Cast ReferenceType String MethodInvocation it next = ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement MemberReference cache	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f1 ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal IfStatement MethodInvocation ! f1 exists BlockStatement StatementExpression MethodInvocation Literal "The fullpath attribute or the attribute does not work fail	0
MethodDeclaration Modifier public FormalParameter ReferenceType File srcFile StatementExpression Assignment This MemberReference srcFile MemberReference srcFile =	0
MethodDeclaration Modifier private BasicType boolean FormalParameter Modifier final ReferenceType Data dataShadow FormalParameter Modifier final BasicType int lo FormalParameter Modifier final BasicType int hi FormalParameter Modifier final BasicType int d LocalVariableDeclaration Modifier final BasicType int VariableDeclarator bigN BinaryOperation + BinaryOperation - MemberReference hi MemberReference lo Literal 1 IfStatement BinaryOperation < MemberReference bigN Literal 2 BlockStatement ReturnStatement BinaryOperation && This MemberReference firstAttempt BinaryOperation > This MemberReference workDone This MemberReference workLimit LocalVariableDeclaration BasicType int VariableDeclarator hp Literal 0 WhileStatement BinaryOperation < MemberReference ArraySelector MemberReference hp MemberReference bigN BlockStatement StatementExpression MemberReference ++ hp LocalVariableDeclaration Modifier final BasicType int VariableDeclarator fmap MemberReference dataShadow fmap LocalVariableDeclaration Modifier final BasicType char VariableDeclarator quadrant MemberReference dataShadow quadrant LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block MemberReference dataShadow block LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lastShadow This MemberReference last LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lastPlus1 BinaryOperation + MemberReference lastShadow Literal 1 LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator firstAttemptShadow This MemberReference firstAttempt LocalVariableDeclaration Modifier final BasicType int VariableDeclarator workLimitShadow This MemberReference workLimit LocalVariableDeclaration BasicType int VariableDeclarator workDoneShadow This MemberReference workDone WhileStatement BinaryOperation >= MemberReference -- hp Literal 0 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator h MemberReference ArraySelector MemberReference hp LocalVariableDeclaration Modifier final BasicType int VariableDeclarator BinaryOperation - BinaryOperation + MemberReference lo MemberReference h Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference lo MemberReference h BinaryOperation <= MemberReference i MemberReference hi BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator k Literal 3 BinaryOperation && BinaryOperation <= MemberReference i MemberReference hi BinaryOperation >= MemberReference -- k Literal 0 MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator v MemberReference ArraySelector MemberReference i fmap LocalVariableDeclaration Modifier final BasicType int VariableDeclarator BinaryOperation + MemberReference v MemberReference d LocalVariableDeclaration BasicType int VariableDeclarator j MemberReference i LocalVariableDeclaration BasicType boolean VariableDeclarator onceRunned Literal false LocalVariableDeclaration BasicType int VariableDeclarator a Literal 0 WhileStatement HAMMER Literal true BlockStatement IfStatement MemberReference onceRunned BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference j fmap MemberReference a = IfStatement BinaryOperation <= Assignment MemberReference j MemberReference h -= MemberReference BlockStatement BreakStatement HAMMER BlockStatement StatementExpression Assignment MemberReference onceRunned Literal true = StatementExpression Assignment MemberReference a MemberReference ArraySelector BinaryOperation - MemberReference j MemberReference h fmap = LocalVariableDeclaration BasicType int VariableDeclarator i1 BinaryOperation + MemberReference a MemberReference d LocalVariableDeclaration BasicType int VariableDeclarator i2 MemberReference IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 1 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 1 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 2 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 2 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 3 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 3 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 4 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 4 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 5 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 5 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector Assignment MemberReference i1 Literal 6 += block MemberReference ArraySelector Assignment MemberReference i2 Literal 6 += block BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator x MemberReference lastShadow WhileStatement X BinaryOperation > MemberReference x Literal 0 BlockStatement StatementExpression Assignment MemberReference x Literal 4 -= IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 1 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 1 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i1 quadrant MemberReference ArraySelector MemberReference i2 quadrant BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 2 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 2 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 1 quadrant MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 1 quadrant BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 3 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 3 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 2 quadrant MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 2 quadrant BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 4 block MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 4 block BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 3 quadrant MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 3 quadrant BlockStatement IfStatement BinaryOperation >= Assignment MemberReference i1 Literal 4 += MemberReference lastPlus1 BlockStatement StatementExpression Assignment MemberReference i1 MemberReference lastPlus1 -= IfStatement BinaryOperation >= Assignment MemberReference i2 Literal 4 += MemberReference lastPlus1 BlockStatement StatementExpression Assignment MemberReference i2 MemberReference lastPlus1 -= StatementExpression MemberReference ++ workDoneShadow ContinueStatement X IfStatement BinaryOperation > MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 3 quadrant MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 3 quadrant BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 4 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 4 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 2 quadrant MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 2 quadrant BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 3 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 3 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 1 quadrant MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 1 quadrant BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 2 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 2 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > MemberReference ArraySelector MemberReference i1 quadrant MemberReference ArraySelector MemberReference i2 quadrant BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 1 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 1 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER BreakStatement HAMMER BlockStatement IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector MemberReference i1 block Literal 0xff BinaryOperation & MemberReference ArraySelector MemberReference i2 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 5 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 5 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 4 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 4 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 3 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 3 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 2 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 2 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER IfStatement BinaryOperation > BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i1 Literal 1 block Literal 0xff BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i2 Literal 1 block Literal 0xff BlockStatement ContinueStatement HAMMER BlockStatement BreakStatement HAMMER StatementExpression Assignment MemberReference ArraySelector MemberReference j fmap MemberReference v = IfStatement BinaryOperation && BinaryOperation && MemberReference firstAttemptShadow BinaryOperation <= MemberReference i MemberReference hi BinaryOperation > MemberReference workDoneShadow MemberReference workLimitShadow BlockStatement BreakStatement StatementExpression Assignment This MemberReference workDone MemberReference workDoneShadow = ReturnStatement BinaryOperation && MemberReference firstAttemptShadow BinaryOperation > MemberReference workDoneShadow MemberReference workLimitShadow	1
MethodDeclaration Modifier public FormalParameter ReferenceType text StatementExpression Assignment MemberReference header MemberReference text =	0
MethodDeclaration Modifier public ReferenceType Enumeration getEntries ReturnStatement MethodInvocation entries keys	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test arg0 StatementExpression MethodInvocation MethodInvocation MemberReference arg0	0
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix StatementExpression Assignment This MemberReference prefix MemberReference prefix = IfStatement This ! MemberReference prefix MethodInvocation Literal "." endsWith BlockStatement StatementExpression Assignment This MemberReference prefix Literal "." +=	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setIncludes StatementExpression MethodInvocation ds LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String Literal 0 StatementExpression MethodInvocation MemberReference ds MemberReference MemberReference compareFiles	0
MethodDeclaration Modifier public FormalParameter ReferenceType File incl BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MemberReference incl	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation MethodInvocation createClasspath	0
MethodDeclaration Modifier public static ReferenceType Extension FormalParameter Modifier final ReferenceType Manifest manifest ReturnStatement MethodInvocation MemberReference manifest MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation Literal '\r' StatementExpression MethodInvocation stream	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public FormalParameter ReferenceType Action action BuildException StatementExpression Assignment This MemberReference action MethodInvocation action getAction =	1
MethodDeclaration Modifier private FormalParameter ReferenceType ResourceCollection c StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Binary of " MethodInvocation c size Literal " resources to " MemberReference destinationFile log LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator out Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileOutputStream MemberReference destinationFile = CatchClause CatchClauseParameter Exception t ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to open " MemberReference destinationFile Literal " for writing" MemberReference t StatementExpression Assignment MemberReference in ClassCreator ReferenceType ConcatResourceInputStream MemberReference c = StatementExpression Cast ReferenceType ConcatResourceInputStream MemberReference in LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread ClassCreator ReferenceType StreamPumper MemberReference in MemberReference out StatementExpression MethodInvocation t start TryStatement StatementExpression MethodInvocation t join CatchClause CatchClauseParameter InterruptedException e TryStatement StatementExpression MethodInvocation t join CatchClause CatchClauseParameter InterruptedException ee StatementExpression MethodInvocation FileUtils MemberReference in close IfStatement BinaryOperation != MemberReference out Literal null BlockStatement TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to close " MemberReference destinationFile MemberReference ex	1
MethodDeclaration Modifier private FormalParameter ReferenceType ZipOutputStream output FormalParameter ReferenceType InputStream input FormalParameter ReferenceType ZipEntry ze IOException TryStatement StatementExpression MethodInvocation output MemberReference ze putNextEntry CatchClause CatchClauseParameter ZipException StatementExpression MethodInvocation input close ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator numBytes Literal - 1 WhileStatement BinaryOperation > Assignment MemberReference numBytes MethodInvocation input MemberReference buffer read = Literal 0 BlockStatement StatementExpression MethodInvocation output MemberReference buffer Literal 0 MemberReference numBytes write StatementExpression MethodInvocation output StatementExpression MethodInvocation input close	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference destDir	0
MethodDeclaration Modifier public setHost FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference host MemberReference host =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression MethodInvocation MemberReference value MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Commandline cmdl StatementExpression MethodInvocation BinaryOperation + Literal "The command attribute is Literal "Please use the executable attribute and arg MemberReference Project MSG_WARN log StatementExpression Assignment This MemberReference cmdl MemberReference cmdl =	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the executable" Literal " attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier private FormalParameter Modifier final BasicType int nGroups FormalParameter Modifier final BasicType int alphaSize LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len This MemberReference data MemberReference sendMTFValues_len LocalVariableDeclaration Modifier final BasicType int VariableDeclarator mtfFreq This MemberReference data MemberReference mtfFreq LocalVariableDeclaration BasicType int VariableDeclarator remF This MemberReference nMTF LocalVariableDeclaration BasicType int VariableDeclarator gs Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator nPart MemberReference nGroups BinaryOperation > MemberReference nPart Literal 0 MemberReference -- nPart BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator tFreq BinaryOperation / MemberReference remF MemberReference nPart LocalVariableDeclaration BasicType int VariableDeclarator ge BinaryOperation - MemberReference gs Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator aFreq Literal 0 ForStatement ForControl VariableDeclaration Modifier final BasicType int VariableDeclarator a BinaryOperation - MemberReference alphaSize Literal 1 BinaryOperation && BinaryOperation < MemberReference aFreq MemberReference tFreq BinaryOperation < MemberReference ge MemberReference a BlockStatement StatementExpression Assignment MemberReference aFreq MemberReference ArraySelector MemberReference ++ ge mtfFreq += IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation > MemberReference ge MemberReference gs BinaryOperation != MemberReference nPart MemberReference nGroups BinaryOperation != MemberReference nPart Literal 1 BinaryOperation != BinaryOperation & BinaryOperation - MemberReference nGroups MemberReference nPart Literal 1 Literal 0 BlockStatement StatementExpression Assignment MemberReference aFreq MemberReference ArraySelector MemberReference -- ge mtfFreq -= LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator len_np MemberReference ArraySelector BinaryOperation - MemberReference nPart Literal 1 len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator v MemberReference alphaSize BinaryOperation >= MemberReference -- v Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation >= MemberReference v MemberReference gs BinaryOperation <= MemberReference v MemberReference ge BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference v len_np MemberReference = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference v len_np MemberReference GREATER_ICOST = StatementExpression Assignment MemberReference gs BinaryOperation + MemberReference ge Literal 1 = StatementExpression Assignment MemberReference remF MemberReference aFreq -=	1
MethodDeclaration Modifier private static FormalParameter ReferenceType File FormalParameter ReferenceType PrintStream out IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation out Literal "No such directory." println ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation getName Literal " (" MemberReference ArraySelector MemberReference i MethodInvocation length Literal " println	1
MethodDeclaration Modifier private ReferenceType CommandlineJava LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator cmd ClassCreator ReferenceType CommandlineJava LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal "-d" MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal MethodInvocation getPackage IfStatement MethodInvocation ! BlockStatement StatementExpression MethodInvocation MemberReference cmd BinaryOperation + Literal "-v" MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "this task doesn't support " Literal use the task " Literal log getProject StatementExpression MethodInvocation MemberReference cmd Literal MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal MethodInvocation StatementExpression MethodInvocation MemberReference cmd Literal IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation MethodInvocation getDirectory StatementExpression MethodInvocation MemberReference cmd Literal MemberReference dir StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference cmd ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine This run = IfStatement MethodInvocation Execute MemberReference result isFailure BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine2 ClassCreator ReferenceType Commandline StatementExpression MethodInvocation commandLine2 MethodInvocation setExecutable StatementExpression MethodInvocation commandLine2 MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation commandLine2 MethodInvocation MethodInvocation getTask setValue createArgument StatementExpression MethodInvocation MethodInvocation commandLine describeCommand MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine2 run = IfStatement BinaryOperation != MemberReference result Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine2 toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public static ReferenceType FileUtils getFileUtils ReturnStatement MemberReference	0
MethodDeclaration Modifier public processFile FormalParameter ReferenceType File file TryStatement StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation file getAbsolutePath log LocalVariableDeclaration ReferenceType VariableDeclarator input ClassCreator ReferenceType MemberReference file LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator image MethodInvocation Literal MemberReference input create ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator instr MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement StatementExpression Assignment MemberReference image Cast ReferenceType TransformOperation MemberReference instr = BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Not a " MemberReference instr log StatementExpression MethodInvocation input close IfStatement MethodInvocation str_encoding MethodInvocation Literal "jpg" equals toLowerCase BlockStatement StatementExpression Assignment MemberReference str_encoding Literal = IfStatement MethodInvocation str_encoding MethodInvocation Literal equals toLowerCase BlockStatement StatementExpression Assignment MemberReference str_encoding Literal = IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement StatementExpression Assignment MemberReference destDir MemberReference srcDir = LocalVariableDeclaration ReferenceType File VariableDeclarator newFile ClassCreator ReferenceType File MemberReference destDir MethodInvocation file getName IfStatement BinaryOperation && BinaryOperation && MemberReference overwrite MethodInvocation newFile exists MethodInvocation newFile MemberReference file equals BlockStatement StatementExpression MethodInvocation newFile delete LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator stream ClassCreator ReferenceType FileOutputStream MemberReference newFile StatementExpression MethodInvocation Literal MemberReference image MemberReference stream MethodInvocation str_encoding toUpperCase Literal null create StatementExpression MethodInvocation stream flush StatementExpression MethodInvocation stream close CatchClause CatchClauseParameter IOException err IfStatement MemberReference ! failonerror BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Error processing file: " MemberReference err log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference err CatchClause CatchClauseParameter IfStatement MemberReference ! failonerror BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Error processing file: " MemberReference log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference	1
MethodDeclaration Modifier public ReferenceType Directory getChild FormalParameter ReferenceType File dir ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Directory VariableDeclarator current Cast ReferenceType Directory MethodInvocation MemberReference i get IfStatement MethodInvocation current MethodInvocation MemberReference dir equals getDirectory BlockStatement ReturnStatement MemberReference current ReturnStatement Literal null	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + BinaryOperation + SuperMethodInvocation MemberReference MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String regex StatementExpression MethodInvocation Literal MemberReference regex StatementExpression Assignment This MemberReference regex MemberReference regex =	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	1
MethodDeclaration Modifier static protected ReferenceType Hashtable getLoaderMap ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean f StatementExpression Assignment MemberReference MemberReference f =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target IOException StatementExpression MethodInvocation MemberReference target executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " StatementExpression MethodInvocation Literal "unexpected MemberReference MethodInvocation Literal assertEquals StatementExpression MethodInvocation Literal MethodInvocation trim StatementExpression MethodInvocation Literal "unexpected error MemberReference MethodInvocation Literal assertEquals StatementExpression MethodInvocation Literal MethodInvocation trim	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args Exception LocalVariableDeclaration ReferenceType VariableDeclarator helper ClassCreator ReferenceType MemberReference args StatementExpression MethodInvocation helper process	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation String BinaryOperation - MethodInvocation evt MemberReference valueOf StatementExpression MethodInvocation rootElement Literal MemberReference setAttribute LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation rootElement MemberReference LocalVariableDeclaration Modifier final ReferenceType Properties VariableDeclarator props MethodInvocation evt getProperties IfStatement BinaryOperation != MemberReference props Literal null BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props propertyNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation MemberReference MemberReference name setAttribute StatementExpression MethodInvocation MemberReference MethodInvocation props MemberReference name getProperty setAttribute StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation close	0
MethodDeclaration ReferenceType AntTypeDefinition FormalParameter ReferenceType String key ReturnStatement Cast ReferenceType AntTypeDefinition SuperMethodInvocation MemberReference key get	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t IfStatement BinaryOperation && MemberReference BinaryOperation instanceof MemberReference t ReferenceType AssertionFailedError BlockStatement StatementExpression MethodInvocation MemberReference test Cast ReferenceType AssertionFailedError MemberReference t IfStatement BinaryOperation && MemberReference MethodInvocation t MethodInvocation getName MethodInvocation Literal equals getClass BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation t getMessage LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator TernaryExpression BinaryOperation != MemberReference msg Literal null ClassCreator ReferenceType AssertionFailedError MemberReference msg ClassCreator ReferenceType AssertionFailedError LocalVariableDeclaration ReferenceType Method VariableDeclarator initCause ClassReference MethodInvocation Literal ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Throwable getMethod ReferenceType Throwable StatementExpression MethodInvocation initCause MemberReference ArrayCreator ReferenceType Object ArrayInitializer MemberReference t invoke StatementExpression MethodInvocation MemberReference test MemberReference CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace StatementExpression MethodInvocation MemberReference test MemberReference t BlockStatement StatementExpression MethodInvocation MemberReference test MemberReference t	1
MethodDeclaration Modifier public StatementExpression MethodInvocation test3 StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "A expectLog	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator s Cast ReferenceType MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for required field fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "The text attribute is required" MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayInitializer MemberReference param StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for valid parameter fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid parameter MethodInvocation getMessage assertEquals	0
MethodDeclaration Modifier private checkRevoked FormalParameter ReferenceType java ReferenceType security ReferenceType Permission perm ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation listIterator MethodInvocation i hasNext BlockStatement IfStatement Cast ReferenceType ReferenceType Permission MethodInvocation i next BlockStatement ThrowStatement ClassCreator ReferenceType SecurityException BinaryOperation + BinaryOperation + Literal "Permission " MemberReference perm Literal " was	1
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference lookahead	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation event getMessage IfStatement This MemberReference matcher MethodInvocation MemberReference message matches BlockStatement StatementExpression Assignment MemberReference This MemberReference matcher MethodInvocation MemberReference message getGroups = StatementExpression SuperMethodInvocation MemberReference event messageLogged	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r	0
MethodDeclaration Modifier static BasicType int FormalParameter ReferenceType String s FormalParameter BasicType int start LocalVariableDeclaration BasicType int VariableDeclarator firstPipe MethodInvocation s Literal '|' MemberReference start indexOf LocalVariableDeclaration BasicType int VariableDeclarator beginSlash MethodInvocation s Literal '/' MemberReference firstPipe indexOf LocalVariableDeclaration BasicType int VariableDeclarator lastPipe MethodInvocation s Literal '|' MemberReference beginSlash indexOf IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference firstPipe Literal - 1 BinaryOperation == MemberReference beginSlash Literal - 1 BinaryOperation == MemberReference lastPipe Literal - 1 BlockStatement ReturnStatement Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator max MethodInvocation Integer MethodInvocation s BinaryOperation + MemberReference firstPipe Literal 1 MemberReference beginSlash substring parseInt LocalVariableDeclaration BasicType int VariableDeclarator current Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator pos BinaryOperation + MemberReference beginSlash Literal 1 WhileStatement BinaryOperation < MemberReference pos MemberReference lastPipe BlockStatement SwitchStatement MethodInvocation s MemberReference ++ pos charAt SwitchStatementCase Literal '+' StatementExpression MemberReference ++ current BreakStatement SwitchStatementCase Literal '-' StatementExpression MemberReference -- current BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType AssertionFailedError BinaryOperation + BinaryOperation + BinaryOperation + Literal in result found " MethodInvocation s MemberReference -- pos charAt Literal " at position " MemberReference pos IfStatement BinaryOperation > MemberReference current MemberReference max BlockStatement ThrowStatement ClassCreator ReferenceType AssertionFailedError BinaryOperation + BinaryOperation + BinaryOperation + Literal of executing threads number " MemberReference current Literal " > " MemberReference max ReturnStatement MemberReference lastPipe	1
MethodDeclaration Modifier public ReferenceType String substring FormalParameter BasicType int begin FormalParameter BasicType int end ReturnStatement MethodInvocation line MemberReference begin MemberReference end substring	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration setAttribute FormalParameter ReferenceType String name FormalParameter ReferenceType String value BuildException TryStatement StatementExpression MethodInvocation ih MemberReference project MemberReference proxy MemberReference name MemberReference value setAttribute CatchClause CatchClauseParameter BuildException ex IfStatement Literal MethodInvocation MemberReference name equals BlockStatement StatementExpression MethodInvocation MemberReference value BlockStatement ThrowStatement MemberReference ex	1
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation < MethodInvocation project MethodInvocation Literal indexOf Literal getProperty Literal 0 BlockStatement StatementExpression MethodInvocation Literal "property is not all in the file" fail	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference f =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType File fromDir FormalParameter ReferenceType File toDir FormalParameter ReferenceType String files FormalParameter ReferenceType String dirs LocalVariableDeclaration ReferenceType VariableDeclarator mapper MethodInvocation StatementExpression MethodInvocation MemberReference fromDir MemberReference toDir MemberReference files MemberReference mapper MemberReference fileCopyMap IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference fromDir MemberReference toDir MemberReference dirs MemberReference mapper MemberReference dirCopyMap	0
MethodDeclaration Modifier public static ReferenceType String getClassName FormalParameter ReferenceType InputStream input IOException LocalVariableDeclaration ReferenceType DataInputStream VariableDeclarator data ClassCreator ReferenceType DataInputStream MemberReference input LocalVariableDeclaration BasicType int VariableDeclarator cookie MethodInvocation data readInt IfStatement BinaryOperation != MemberReference cookie Literal BlockStatement ReturnStatement Literal null StatementExpression MethodInvocation data readInt LocalVariableDeclaration ReferenceType ConstantPool VariableDeclarator constants ClassCreator ReferenceType ConstantPool MemberReference data LocalVariableDeclaration ReferenceType Object VariableDeclarator values MemberReference constants values StatementExpression MethodInvocation data readUnsignedShort LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation data readUnsignedShort LocalVariableDeclaration ReferenceType Integer VariableDeclarator stringIndex Cast ReferenceType Integer MemberReference ArraySelector MemberReference values LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MemberReference ArraySelector MethodInvocation stringIndex intValue values ReturnStatement MemberReference className	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference getCommandLine	0
MethodDeclaration Modifier public FormalParameter ReferenceType version StatementExpression Assignment This MemberReference MethodInvocation version getValue =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public init BuildException StatementExpression MethodInvocation StatementExpression MethodInvocation ComponentHelper MethodInvocation This getComponentHelper	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation MethodInvocation getLineNumber getLocation MemberReference Project MSG_INFO log	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference P4View MemberReference =	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation MethodInvocation getProject BlockStatement ReturnStatement SuperMethodInvocation clone	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation reg Literal LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation reg Literal getGroups StatementExpression MethodInvocation Literal "No -> no Literal 1 MethodInvocation v size assertEquals StatementExpression MethodInvocation Literal match with no Literal Cast ReferenceType String MethodInvocation v Literal 0 elementAt assertEquals StatementExpression MethodInvocation reg Literal StatementExpression Assignment MemberReference v MethodInvocation reg Literal getGroups = StatementExpression MethodInvocation Literal match with single Literal 2 MethodInvocation v size assertEquals StatementExpression MethodInvocation Literal match with single full Literal Cast ReferenceType String MethodInvocation v Literal 0 elementAt assertEquals StatementExpression MethodInvocation Literal match with single matched Literal Cast ReferenceType String MethodInvocation v Literal 0 elementAt assertEquals StatementExpression MethodInvocation reg Literal StatementExpression Assignment MemberReference v MethodInvocation reg Literal getGroups = StatementExpression MethodInvocation Literal 3 MethodInvocation v size assertEquals StatementExpression MethodInvocation Literal Cast ReferenceType String MethodInvocation v Literal 0 elementAt assertEquals StatementExpression MethodInvocation Literal Cast ReferenceType String MethodInvocation v Literal 1 elementAt assertEquals StatementExpression MethodInvocation Literal Cast ReferenceType String MethodInvocation v Literal 2 elementAt assertEquals	0
MethodDeclaration Modifier private ReferenceType Project getProject FormalParameter ReferenceType String e ReturnStatement MethodInvocation MemberReference e Literal false getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement Literal MethodInvocation MemberReference equalsIgnoreCase "text" BlockStatement StatementExpression Assignment This MemberReference Literal "text" = BlockStatement StatementExpression Assignment This MemberReference Literal =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String propertyName LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation This ReturnStatement Cast ReferenceType String MethodInvocation Literal null MemberReference propertyName	0
MethodDeclaration Modifier protected stop IfStatement BinaryOperation != MemberReference testResult Literal null BlockStatement StatementExpression MethodInvocation testResult stop	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class clazz ThrowStatement ClassCreator ReferenceType BuildException Literal "Not supported"	1
MethodDeclaration Modifier private append FormalParameter ReferenceType String line IfStatement BinaryOperation > MethodInvocation line length Literal 4 BlockStatement StatementExpression MethodInvocation result MethodInvocation line Literal 4 substring append StatementExpression MethodInvocation result Literal " " append	0
MethodDeclaration Modifier private static handleElement FormalParameter ReferenceType helperImpl FormalParameter ReferenceType parent FormalParameter ReferenceType Target target FormalParameter ReferenceType String elementName FormalParameter ReferenceType AttributeList attrs SAXParseException IfStatement MethodInvocation elementName Literal "description" equals BlockStatement StatementExpression ClassCreator ReferenceType MemberReference helperImpl MemberReference parent IfStatement BinaryOperation != MethodInvocation helperImpl.project MethodInvocation MemberReference elementName get getDataTypeDefinitions Literal null BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference elementName MemberReference attrs init ReferenceType MemberReference helperImpl MemberReference parent MemberReference target BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference elementName MemberReference attrs init ReferenceType TaskHandler MemberReference helperImpl MemberReference parent MemberReference target Literal null MemberReference target	1
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable getChild FormalParameter BasicType int index ReturnStatement Cast ReferenceType RuntimeConfigurable MethodInvocation children MemberReference index elementAt	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference MethodInvocation toString	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected printResults FormalParameter ReferenceType ResultSet rs FormalParameter ReferenceType PrintStream out IfStatement BinaryOperation != MemberReference rs Literal null BlockStatement StatementExpression MethodInvocation Literal new result set." MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType ResultSetMetaData VariableDeclarator md MethodInvocation rs getMetaData LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation md LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator line ClassCreator ReferenceType StringBuffer IfStatement MemberReference BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator col Literal 1 BinaryOperation < MemberReference col MemberReference MemberReference ++ col BlockStatement StatementExpression MethodInvocation line MethodInvocation md MemberReference col getColumnName append StatementExpression MethodInvocation line Literal "," append StatementExpression MethodInvocation line MethodInvocation md MemberReference getColumnName append StatementExpression MethodInvocation out MemberReference line println StatementExpression Assignment MemberReference line ClassCreator ReferenceType StringBuffer = WhileStatement MethodInvocation rs next BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator col Literal 1 BinaryOperation <= MemberReference col MemberReference MemberReference ++ col BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation rs MemberReference col getString IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation trim = IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference first Literal false = BlockStatement StatementExpression MethodInvocation line Literal "," append StatementExpression MethodInvocation line MemberReference append StatementExpression MethodInvocation out MemberReference line println StatementExpression Assignment MemberReference line ClassCreator ReferenceType StringBuffer = StatementExpression MethodInvocation out println	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement MethodInvocation Execute MemberReference result isFailure BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation || MemberReference Literal MethodInvocation MethodInvocation System Literal getProperty equals "true"	0
MethodDeclaration Modifier public static ReferenceType FileUtils ReturnStatement ClassCreator ReferenceType FileUtils	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal Literal "root" LocalVariableDeclaration ReferenceType Element VariableDeclarator child MethodInvocation d Literal Literal "child" StatementExpression MethodInvocation root MemberReference child LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType Literal false MemberReference StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier private BasicType long ReturnStatement MemberReference lines	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public FormalParameter ReferenceType String action StatementExpression Assignment This MemberReference action MemberReference action =	0
MethodDeclaration Modifier public addDepth FormalParameter ReferenceType selector StatementExpression MethodInvocation fileset MemberReference selector addDepth	1
MethodDeclaration Modifier protected BuildException TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "mode : fork " MemberReference MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType This StatementExpression MethodInvocation ClassCreator ReferenceType File Literal "." StatementExpression MethodInvocation Literal setExecutable StatementExpression MethodInvocation MethodInvocation Literal setValue createArg IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation getAbsolutePath setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation getAbsolutePath setValue createArg StatementExpression MethodInvocation Literal "Calling MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while calling Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	0
MethodDeclaration Modifier protected ReferenceType Resource FormalParameter ReferenceType ResourceCollection rcs LocalVariableDeclaration ReferenceType Resource VariableDeclarator result ArrayCreator ReferenceType Resource MemberReference rcs length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference rcs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MemberReference ArraySelector MemberReference i MethodInvocation iterator rcs LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator rs ClassCreator ReferenceType ArrayList LocalVariableDeclaration BasicType int VariableDeclarator lastDir Literal 0 WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next IfStatement MethodInvocation r isExists BlockStatement IfStatement MethodInvocation r isDirectory BlockStatement StatementExpression MethodInvocation rs MemberReference ++ lastDir MemberReference r add BlockStatement StatementExpression MethodInvocation rs MemberReference r add StatementExpression Assignment MemberReference ArraySelector MemberReference i result Cast ReferenceType Resource MethodInvocation rs ArrayCreator ReferenceType Resource MethodInvocation rs size toArray = ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType createTask LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Project VariableDeclarator p ClassCreator ReferenceType Project StatementExpression MethodInvocation p init StatementExpression MethodInvocation MemberReference p setProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference BlockStatement StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference port ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env IOException ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec	1
MethodDeclaration Modifier private IfStatement BinaryOperation != MemberReference textBuffer Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation textBuffer MethodInvocation trim MethodInvocation length Literal 0 substring Literal 0 BlockStatement StatementExpression Assignment MemberReference textBuffer Literal null =	0
MethodDeclaration Modifier public validateAttributes BuildException StatementExpression SuperMethodInvocation validateAttributes LocalVariableDeclaration ReferenceType String VariableDeclarator action MethodInvocation MethodInvocation getAction getTask IfStatement BinaryOperation == MethodInvocation getPassword Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The password attribute must be set." IfStatement BinaryOperation && BinaryOperation || MethodInvocation action MemberReference ACTION_DEPLOY equals MethodInvocation action MemberReference ACTION_UPDATE equals BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The attribute must be set " Literal "if action = " MemberReference action IfStatement BinaryOperation && BinaryOperation || MethodInvocation action MemberReference ACTION_DEPLOY equals MethodInvocation action MemberReference ACTION_UPDATE equals BinaryOperation == MethodInvocation MethodInvocation getSource getTask Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The source attribute must be set if " Literal "action = " MemberReference action IfStatement BinaryOperation && BinaryOperation || MethodInvocation action MemberReference ACTION_DELETE equals MethodInvocation action MemberReference ACTION_UNDEPLOY equals BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The attribute must be set if " Literal "action = " MemberReference action	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError afe StatementExpression MethodInvocation MemberReference test Cast ReferenceType Throwable MemberReference afe	0
MethodDeclaration Modifier public synchronized cleanup ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile Cast ReferenceType ZipFile MethodInvocation e nextElement TryStatement StatementExpression MethodInvocation zipFile close CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference ClassCreator ReferenceType Hashtable = IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project This StatementExpression Assignment MemberReference project Literal null =	0
MethodDeclaration Modifier public FormalParameter ReferenceType ClassLoader StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression MethodInvocation isSigned MemberReference name setName	0
MethodDeclaration Modifier public FormalParameter ReferenceType String d StatementExpression Assignment MemberReference defaultValue MemberReference d =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File baseDir StatementExpression Assignment This MemberReference baseDir MemberReference baseDir =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator testMailServer ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType VariableDeclarator testMailClient ClassCreator ReferenceType StatementExpression MethodInvocation testMailClient Literal Message from StatementExpression MethodInvocation testMailClient Literal to StatementExpression MethodInvocation testMailClient Literal "Test StatementExpression MethodInvocation testMailClient BinaryOperation + Literal line Literal line 2" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal test Literal " MemberReference local Literal Literal " MemberReference local Literal " " MemberReference local Literal " to Literal Literal Literal Literal Literal Literal Literal Test Literal Message Literal Literal Literal Literal line Literal line Literal Literal Literal Literal Literal StatementExpression MethodInvocation MethodInvocation length MethodInvocation result length assertEquals StatementExpression MethodInvocation MemberReference MemberReference result assertEquals IfStatement MethodInvocation testMailClient BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient fail	0
MethodDeclaration Modifier synchronized protected FormalParameter ReferenceType String type FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable error IfStatement BinaryOperation != MemberReference test Literal null BlockStatement StatementExpression MethodInvocation MemberReference test StatementExpression MethodInvocation BinaryOperation + MethodInvocation MemberReference test MemberReference type println StatementExpression MethodInvocation MethodInvocation error getMessage println LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference error StatementExpression MethodInvocation MemberReference println StatementExpression MethodInvocation println	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String user StatementExpression Assignment This MemberReference user MemberReference user =	0
MethodDeclaration Modifier public ReferenceType File getDir ReturnStatement MemberReference dir	0
MethodDeclaration Modifier private ReferenceType Hashtable LocalVariableDeclaration ReferenceType FileSet VariableDeclarator resultFileSet Cast ReferenceType FileSet MethodInvocation project MemberReference RESULT_FILESET getReference LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation resultFileSet MemberReference project getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator scannedFiles MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference scannedFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i scannedFiles MemberReference ArraySelector MemberReference i scannedFiles put ReturnStatement MemberReference files	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ZipFileSet MethodInvocation MethodInvocation getProject BlockStatement ReturnStatement SuperMethodInvocation clone	1
MethodDeclaration Modifier protected ReferenceType Files ReturnStatement Cast ReferenceType Files MethodInvocation getCheckedRef	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "type" Literal expectPropertySet StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType byte ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private BasicType boolean isParentFirst FormalParameter ReferenceType String resourceName LocalVariableDeclaration BasicType boolean VariableDeclarator useParentFirst MemberReference ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation resourceName MemberReference packageName startsWith BlockStatement StatementExpression Assignment MemberReference useParentFirst Literal true = BreakStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation resourceName MemberReference packageName startsWith BlockStatement StatementExpression Assignment MemberReference useParentFirst Literal false = BreakStatement ReturnStatement MemberReference useParentFirst	1
MethodDeclaration Modifier public BasicType boolean TryStatement StatementExpression MethodInvocation MemberReference XmlConstants MemberReference XmlConstants setProperty StatementExpression MethodInvocation MemberReference XmlConstants CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_VERBOSE log ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier protected ReferenceType ClassLoader IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getClassLoader getClass = BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getProject MethodInvocation MemberReference createClassLoader getTask = ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation != MemberReference change Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference change Cast ReferenceType P4HandlerAdapter ClassCreator ReferenceType This execP4Command BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No change specified support for default change	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation getTaskName Literal " as property " MemberReference Literal " has already been set." log ReturnStatement LocalVariableDeclaration ReferenceType InputRequest VariableDeclarator request Literal null IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator MethodInvocation StringUtils MemberReference Literal ',' split StatementExpression Assignment MemberReference request ClassCreator ReferenceType MemberReference message MemberReference = BlockStatement StatementExpression Assignment MemberReference request ClassCreator ReferenceType InputRequest MemberReference message = StatementExpression MethodInvocation request MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator h TernaryExpression BinaryOperation == MemberReference handler Literal null MethodInvocation MethodInvocation getProject MethodInvocation handler StatementExpression MethodInvocation h MemberReference request handleInput LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation request getInput IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation == MethodInvocation value MethodInvocation length trim Literal 0 BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference value MemberReference = IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference value setNewProperty getProject	1
MethodDeclaration Modifier public final ReferenceType Vector topoSort FormalParameter ReferenceType String root FormalParameter ReferenceType Hashtable targetTable FormalParameter BasicType boolean returnAll BuildException LocalVariableDeclaration ReferenceType Vector VariableDeclarator ret ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator state ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Stack VariableDeclarator visiting ClassCreator ReferenceType Stack ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference root length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator st Cast ReferenceType String MethodInvocation state MemberReference ArraySelector MemberReference i root get IfStatement BinaryOperation == MemberReference st Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i root MemberReference targetTable MemberReference state MemberReference visiting MemberReference ret tsort IfStatement BinaryOperation == MemberReference st MemberReference VISITING BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Unexpected node in visiting " MemberReference ArraySelector MemberReference i root LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "Build for ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference root length MemberReference ++ j BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference ArraySelector MemberReference j root append MethodInvocation Literal '\'' append TernaryExpression BinaryOperation == MemberReference j Literal 0 Literal " `" Literal ", `" append StatementExpression MethodInvocation buf BinaryOperation + Literal " is " MemberReference ret append StatementExpression MethodInvocation MethodInvocation buf toString MemberReference MSG_VERBOSE log LocalVariableDeclaration ReferenceType Vector VariableDeclarator complete TernaryExpression MemberReference returnAll MemberReference ret ClassCreator ReferenceType Vector MemberReference ret ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator en MethodInvocation targetTable keys MethodInvocation en hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator curTarget Cast ReferenceType String MethodInvocation en nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator st Cast ReferenceType String MethodInvocation state MemberReference curTarget get IfStatement BinaryOperation == MemberReference st Literal null BlockStatement StatementExpression MethodInvocation MemberReference curTarget MemberReference targetTable MemberReference state MemberReference visiting MemberReference complete tsort IfStatement BinaryOperation == MemberReference st MemberReference VISITING BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "Unexpected node in visiting " MemberReference curTarget StatementExpression MethodInvocation BinaryOperation + Literal build is " MemberReference complete MemberReference MSG_VERBOSE log ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private ReferenceType Properties loadProperties BuildException LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator input Literal null TryStatement LocalVariableDeclaration Modifier final ReferenceType Properties VariableDeclarator properties ClassCreator ReferenceType Properties StatementExpression Assignment MemberReference input ClassCreator ReferenceType FileInputStream MemberReference myFile = StatementExpression MethodInvocation properties MemberReference input load ReturnStatement MemberReference properties CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe IfStatement BinaryOperation != Literal null MemberReference input BlockStatement TryStatement StatementExpression MethodInvocation input close CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + Literal "error closing input stream " MemberReference ioe MemberReference Project MSG_ERR log	0
MethodDeclaration Modifier protected BasicType boolean isUpToDate FormalParameter ReferenceType File jarFile FormalParameter ReferenceType File IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference jarFile MethodInvocation ! jarFile exists BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType File VariableDeclarator destFile MemberReference IfStatement BinaryOperation == MemberReference destFile Literal null BlockStatement StatementExpression Assignment MemberReference destFile MemberReference jarFile = IfStatement MethodInvocation jarFile MemberReference destFile equals BlockStatement IfStatement MemberReference BlockStatement ReturnStatement MethodInvocation MemberReference jarFile isSigned ReturnStatement Literal false ReturnStatement MethodInvocation FILE_UTILS MemberReference jarFile MemberReference destFile isUpToDate	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType File VariableDeclarator LocalVariableDeclaration ReferenceType File VariableDeclarator iasDescriptor LocalVariableDeclaration ReferenceType File VariableDeclarator Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator classpath Literal null LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator parser Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator debug Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration ReferenceType IPlanetEjbc VariableDeclarator ejbc IfStatement BinaryOperation || BinaryOperation < MemberReference args length MemberReference BinaryOperation > MemberReference args length MemberReference BlockStatement StatementExpression MethodInvocation usage ReturnStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType File MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 2 args = StatementExpression Assignment MemberReference iasDescriptor ClassCreator ReferenceType File MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MemberReference args length Literal 2 MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "-classpath" equals args BlockStatement StatementExpression Assignment MemberReference classpath MemberReference ArraySelector MemberReference ++ i args = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "-d" equals args BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType File MemberReference ArraySelector MemberReference ++ i args = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal equals args BlockStatement StatementExpression Assignment MemberReference debug Literal true = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal equals args BlockStatement StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression MethodInvocation usage ReturnStatement IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation System getProperties StatementExpression Assignment MemberReference classpath MethodInvocation props Literal "java.class.path" getProperty = IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation System getProperties StatementExpression Assignment MemberReference ClassCreator ReferenceType File MethodInvocation props Literal "user.dir" getProperty = LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator parserFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation parserFactory Literal true setValidating TryStatement StatementExpression Assignment MemberReference parser MethodInvocation parserFactory newSAXParser = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation System.out Literal "An exception was generated while trying to " println StatementExpression MethodInvocation System.out Literal a new println StatementExpression MethodInvocation e printStackTrace ReturnStatement StatementExpression Assignment MemberReference ejbc ClassCreator ReferenceType IPlanetEjbc MemberReference MemberReference iasDescriptor MemberReference MemberReference classpath MemberReference parser = StatementExpression MethodInvocation ejbc MemberReference debug StatementExpression MethodInvocation ejbc MemberReference TryStatement StatementExpression MethodInvocation ejbc execute CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "An IOException has occurred while reading the " Literal descriptors (" MethodInvocation e getMessage Literal ")." println ReturnStatement CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "A SAXException has occurred while reading the " Literal descriptors (" MethodInvocation e getMessage Literal ")." println ReturnStatement CatchClause CatchClauseParameter e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "An error has occurred while executing the ejbc " Literal (" MethodInvocation e getMessage Literal ")." println ReturnStatement	1
MethodDeclaration Modifier public ReferenceType ZipShort ReturnStatement MemberReference NULL	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty	0
MethodDeclaration Modifier public ReferenceType String getTag ReturnStatement MemberReference elementName	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target Exception StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation MemberReference StatementExpression MethodInvocation Literal Literal "true" MethodInvocation props Literal getProperty assertEquals StatementExpression MethodInvocation Literal failed to filter out property MethodInvocation props Literal getProperty	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private IOException StatementExpression MethodInvocation Literal 24 This MemberReference origPtr bsW StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType ZipFileSet fs StatementExpression MethodInvocation fs Literal StatementExpression SuperMethodInvocation MemberReference fs	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator compiler MethodInvocation StatementExpression MethodInvocation MemberReference compiler assertNotNull IfStatement BinaryOperation != MethodInvocation System Literal getProperty Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation System Literal getProperty MemberReference compiler assertEquals BlockStatement StatementExpression MethodInvocation Literal "default value" BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MemberReference compiler equals Literal MethodInvocation MemberReference compiler equals Literal MethodInvocation MemberReference compiler equals Literal MethodInvocation MemberReference compiler equals Literal MethodInvocation MemberReference compiler equals Literal MethodInvocation MemberReference compiler equals "classic" assertTrue StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MethodInvocation assertNotNull StatementExpression MethodInvocation Literal MethodInvocation assertEquals StatementExpression MethodInvocation MemberReference compiler MethodInvocation getCompilerVersion assertEquals StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation project Literal Literal StatementExpression Assignment MemberReference compiler MethodInvocation = StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation Literal MemberReference compiler assertEquals StatementExpression MethodInvocation Literal true StatementExpression Assignment MemberReference compiler MethodInvocation = StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation Literal MemberReference compiler assertEquals StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation Literal StatementExpression Assignment MemberReference compiler MethodInvocation = StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation Literal MemberReference compiler assertEquals StatementExpression MethodInvocation Literal true StatementExpression Assignment MemberReference compiler MethodInvocation = StatementExpression MethodInvocation MemberReference compiler assertNotNull StatementExpression MethodInvocation Literal MemberReference compiler assertEquals	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType attribute StatementExpression MethodInvocation MemberReference attribute add	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference fileset Literal null BinaryOperation == MethodInvocation fileset MethodInvocation getProject getDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal was not ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation nestedTasks elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator nestedTask Cast ReferenceType Task MethodInvocation e nextElement StatementExpression MethodInvocation nestedTask perform StatementExpression MethodInvocation StatementExpression MethodInvocation perform	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate IfStatement BinaryOperation != MethodInvocation MethodInvocation MemberReference property getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator url LocalVariableDeclaration ReferenceType String VariableDeclarator filesetURL MethodInvocation IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation MemberReference file StatementExpression Assignment MemberReference url MethodInvocation MemberReference file toURL = IfStatement BinaryOperation > MethodInvocation filesetURL length Literal 0 BlockStatement StatementExpression Assignment MemberReference url BinaryOperation + BinaryOperation + MemberReference url MemberReference separator MemberReference filesetURL = BlockStatement StatementExpression Assignment MemberReference url MemberReference filesetURL = LocalVariableDeclaration ReferenceType String VariableDeclarator pathURL MethodInvocation IfStatement BinaryOperation > MethodInvocation pathURL length Literal 0 BlockStatement IfStatement BinaryOperation > MethodInvocation url length Literal 0 BlockStatement StatementExpression Assignment MemberReference url BinaryOperation + BinaryOperation + MemberReference url MemberReference separator MemberReference pathURL = BlockStatement StatementExpression Assignment MemberReference url MemberReference pathURL = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting " MemberReference property Literal " to URL " MemberReference url MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference url setNewProperty getProject	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator input ClassCreator MethodInvocation Literal '\n' append ReferenceType StringBuffer MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation input MethodInvocation Literal '\n' append MemberReference append StatementExpression MethodInvocation result MethodInvocation input toString StatementExpression MethodInvocation result Literal false ReturnStatement MemberReference result	0
MethodDeclaration Modifier protected FormalParameter Modifier final BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String viewName StatementExpression Assignment This MemberReference viewName MemberReference viewName =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized setError FormalParameter ReferenceType File error StatementExpression Assignment This MemberReference error MemberReference error =	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier protected processLine FormalParameter ReferenceType String line StatementExpression This MethodInvocation Literal one MemberReference assertFalse StatementExpression This MethodInvocation MemberReference MemberReference line assertEquals StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected log BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " MethodInvocation getLog assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " StatementExpression MethodInvocation Literal "unexpected MemberReference MethodInvocation Literal assertEquals StatementExpression MethodInvocation Literal MethodInvocation trim	0
MethodDeclaration Modifier public synchronized BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null Literal 0 MethodInvocation v hashCode	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Vector list FormalParameter ReferenceType Project p IfStatement BinaryOperation == MethodInvocation list size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator tmpNames ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation list elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation && BinaryOperation != MemberReference pattern Literal null BinaryOperation > MethodInvocation pattern length Literal 0 BlockStatement StatementExpression MethodInvocation tmpNames MemberReference pattern addElement LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MethodInvocation tmpNames size StatementExpression MethodInvocation tmpNames MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String argv ThrowStatement ClassCreator ReferenceType NullPointerException Literal "Exception inside	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Missing contains attribute" Literal string and substring are required in expectSpecificBuildException	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String toProcess IfStatement BinaryOperation || BinaryOperation == MemberReference toProcess Literal null BinaryOperation == MethodInvocation toProcess length Literal 0 BlockStatement ReturnStatement ArrayCreator ReferenceType String Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator normal Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator inQuote Literal 1 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator inDoubleQuote Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator state MemberReference normal LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference toProcess Literal " Literal true LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator current ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType boolean VariableDeclarator lastTokenHasBeenQuoted Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nextTok MethodInvocation tok nextToken SwitchStatement MemberReference state SwitchStatementCase inQuote IfStatement Literal MethodInvocation MemberReference nextTok equals "\'" BlockStatement StatementExpression Assignment MemberReference lastTokenHasBeenQuoted Literal true = StatementExpression Assignment MemberReference state MemberReference normal = BlockStatement StatementExpression MethodInvocation current MemberReference nextTok append BreakStatement SwitchStatementCase inDoubleQuote IfStatement Literal MethodInvocation MemberReference nextTok equals "\"" BlockStatement StatementExpression Assignment MemberReference lastTokenHasBeenQuoted Literal true = StatementExpression Assignment MemberReference state MemberReference normal = BlockStatement StatementExpression MethodInvocation current MemberReference nextTok append BreakStatement SwitchStatementCase IfStatement Literal MethodInvocation MemberReference nextTok equals "\'" BlockStatement StatementExpression Assignment MemberReference state MemberReference inQuote = IfStatement Literal MethodInvocation MemberReference nextTok equals "\"" BlockStatement StatementExpression Assignment MemberReference state MemberReference inDoubleQuote = IfStatement Literal MethodInvocation MemberReference nextTok equals " " BlockStatement IfStatement BinaryOperation || MemberReference lastTokenHasBeenQuoted BinaryOperation != MethodInvocation current length Literal 0 BlockStatement StatementExpression MethodInvocation v MethodInvocation current toString addElement StatementExpression Assignment MemberReference current ClassCreator ReferenceType StringBuffer = BlockStatement StatementExpression MethodInvocation current MemberReference nextTok append StatementExpression Assignment MemberReference lastTokenHasBeenQuoted Literal false = BreakStatement IfStatement BinaryOperation || MemberReference lastTokenHasBeenQuoted BinaryOperation != MethodInvocation current length Literal 0 BlockStatement StatementExpression MethodInvocation v MethodInvocation current toString addElement IfStatement BinaryOperation || BinaryOperation == MemberReference state MemberReference inQuote BinaryOperation == MemberReference state MemberReference inDoubleQuote BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal in " MemberReference toProcess LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayCreator ReferenceType String MethodInvocation v size StatementExpression MethodInvocation v MemberReference args copyInto ReturnStatement MemberReference args	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements LocalVariableDeclaration BasicType boolean VariableDeclarator result WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType FileSelector MethodInvocation e nextElement = IfStatement MemberReference result BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean cached StatementExpression Assignment This MemberReference cached MemberReference cached =	0
MethodDeclaration Modifier private ReferenceType String getCommandLine FormalParameter BasicType boolean debug FormalParameter ReferenceType File descriptorFile LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector IfStatement MemberReference ! debug BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal "-keepgenerated" addElement StatementExpression MethodInvocation v Literal "-d" addElement StatementExpression MethodInvocation v MethodInvocation generatedFilesDirectory getPath addElement StatementExpression MethodInvocation v MethodInvocation descriptorFile getPath addElement LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayCreator ReferenceType String MethodInvocation v size StatementExpression MethodInvocation v MemberReference args copyInto ReturnStatement MemberReference args	1
MethodDeclaration Modifier public testStandaloneCR IOException StatementExpression MethodInvocation reg Literal "end of text$" StatementExpression MethodInvocation Literal MethodInvocation ! reg Literal "end of matches assertTrue	1
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation commandline MethodInvocation createPath MethodInvocation getProject createClasspath	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter BasicType boolean user IfStatement MethodInvocation ! name MemberReference PREFIX startsWith BlockStatement ReturnStatement SuperMethodInvocation MemberReference ns MemberReference name MemberReference user TryStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation PREFIX length substring = LocalVariableDeclaration ReferenceType Expression VariableDeclarator e MethodInvocation MemberReference name LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation e MemberReference jc evaluate ReturnStatement MemberReference o CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType read TryStatement ReturnStatement Cast ReferenceType Cast ReferenceType ObjectInputStream MemberReference in CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression SuperMethodInvocation setUp LocalVariableDeclaration ReferenceType Project VariableDeclarator MethodInvocation getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference MethodInvocation Literal getProperty =	0
MethodDeclaration Modifier public execute BuildException IfStatement Literal MethodInvocation MethodInvocation getTaskType equals BlockStatement StatementExpression MethodInvocation Literal "Warning: the task name is deprecated. Use instead." MemberReference Project MSG_WARN log LocalVariableDeclaration BasicType boolean VariableDeclarator javadoc4 BinaryOperation && MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation && MemberReference javadoc4 MethodInvocation ! JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion LocalVariableDeclaration ReferenceType Vector VariableDeclarator packagesToDoc ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType VariableDeclarator sourceDirs ClassCreator ReferenceType MethodInvocation getProject IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference sourcePath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal attribute must be set when " Literal ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement BinaryOperation != MemberReference sourcePath Literal null BlockStatement StatementExpression MethodInvocation sourceDirs MemberReference sourcePath addExisting StatementExpression MethodInvocation MemberReference packagesToDoc MemberReference sourceDirs IfStatement BinaryOperation && BinaryOperation != MethodInvocation packagesToDoc size Literal 0 BinaryOperation == MethodInvocation sourceDirs size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal attribute must be set when " Literal package ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg LocalVariableDeclaration ReferenceType Vector VariableDeclarator sourceFilesToDoc Cast ReferenceType Vector MethodInvocation sourceFiles clone StatementExpression MethodInvocation MemberReference sourceFilesToDoc IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MethodInvocation packagesToDoc size Literal 0 BinaryOperation == MethodInvocation sourceFilesToDoc size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No source files and no packages have " Literal "been StatementExpression MethodInvocation Literal "Generating MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator toExecute Cast ReferenceType Commandline MethodInvocation cmd clone IfStatement BinaryOperation != MemberReference executable Literal null BlockStatement StatementExpression MethodInvocation toExecute MemberReference executable setExecutable BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation JavaEnvUtils Literal setExecutable IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation MethodInvocation getText expand setValue createArgument IfStatement BinaryOperation != MemberReference header Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation MethodInvocation header getText expand setValue createArgument IfStatement BinaryOperation != MemberReference footer Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation MethodInvocation footer getText expand setValue createArgument IfStatement BinaryOperation != MemberReference bottom Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation MethodInvocation bottom getText expand setValue createArgument IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator MethodInvocation Literal concatSystemClasspath ReferenceType MethodInvocation getProject = BlockStatement StatementExpression Assignment MemberReference classpath MethodInvocation classpath Literal "ignore" concatSystemClasspath = IfStatement BinaryOperation > MethodInvocation classpath size Literal 0 BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "-classpath" setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference classpath setPath createArgument IfStatement BinaryOperation > MethodInvocation sourceDirs size Literal 0 BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "-sourcepath" setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference sourceDirs setPath createArgument IfStatement BinaryOperation && MemberReference version BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "-version" setValue createArgument IfStatement BinaryOperation && MemberReference BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The name must be " Literal MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation getName setValue createArgument IfStatement BinaryOperation != MethodInvocation getPath Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation Literal "ignore" concatSystemClasspath getPath IfStatement BinaryOperation != MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference setPath createArgument ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator param Cast ReferenceType MethodInvocation e nextElement IfStatement BinaryOperation == MethodInvocation param getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal parameters must " Literal "have a name" StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation param getName setValue createArgument IfStatement BinaryOperation != MethodInvocation param getValue Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation param getValue setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference append StatementExpression Assignment MemberReference MethodInvocation Literal "ignore" = IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference setPath createArgument IfStatement BinaryOperation != MethodInvocation links size Literal 0 BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation links elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator la Cast ReferenceType MethodInvocation e nextElement IfStatement BinaryOperation || BinaryOperation == MethodInvocation la getHref Literal null BinaryOperation == MethodInvocation la MethodInvocation length getHref Literal 0 BlockStatement StatementExpression MethodInvocation Literal "No href was given for the link - skipping" MemberReference Project MSG_VERBOSE log ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator link Literal null IfStatement MethodInvocation la BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator hrefAsFile MethodInvocation MethodInvocation MethodInvocation la getHref getProject IfStatement MethodInvocation hrefAsFile exists BlockStatement TryStatement StatementExpression Assignment MemberReference link MethodInvocation FILE_UTILS MethodInvocation toExternalForm MemberReference hrefAsFile getFileURL = CatchClause CatchClauseParameter MalformedURLException ex StatementExpression MethodInvocation BinaryOperation + Literal "Warning: link location was invalid " MemberReference hrefAsFile MemberReference Project MSG_WARN log IfStatement BinaryOperation == MemberReference link Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator base ClassCreator ReferenceType URL Literal StatementExpression ClassCreator ReferenceType URL MemberReference base MethodInvocation la getHref StatementExpression Assignment MemberReference link MethodInvocation la getHref = CatchClause CatchClauseParameter MalformedURLException mue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal href \"" MethodInvocation la getHref Literal "\" is not a valid url - skipping link" MemberReference Project MSG_WARN log ContinueStatement IfStatement MethodInvocation la BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator packageListLocation MethodInvocation la IfStatement BinaryOperation == MemberReference packageListLocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The package Literal " location for link " MethodInvocation la getHref Literal " must be " Literal the link is " Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference packageListLocation Literal IfStatement MethodInvocation exists BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation FILE_UTILS MethodInvocation toExternalForm MemberReference packageListLocation getFileURL StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference link setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference setValue createArgument CatchClause CatchClauseParameter MalformedURLException ex StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Warning: list location was " Literal "invalid " MemberReference packageListLocation MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: No package list was found at " MemberReference packageListLocation MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference link setValue createArgument IfStatement BinaryOperation != MemberReference group Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference group Literal "," Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator grp MethodInvocation tok MethodInvocation trim nextToken LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation grp Literal " " indexOf IfStatement BinaryOperation > MemberReference Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation grp Literal 0 MemberReference substring LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation grp BinaryOperation + MemberReference Literal 1 substring StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference name setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation groups size Literal 0 BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation groups elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ga Cast ReferenceType MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator title MethodInvocation ga LocalVariableDeclaration ReferenceType String VariableDeclarator packages MethodInvocation ga IfStatement BinaryOperation || BinaryOperation == MemberReference title Literal null BinaryOperation == MemberReference packages Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The title and packages must " Literal "be specified for group " Literal StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation MemberReference title expand setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference packages setValue createArgument IfStatement BinaryOperation || MemberReference javadoc4 BinaryOperation != MemberReference executable Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation tags elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation e nextElement IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element LocalVariableDeclaration ReferenceType File VariableDeclarator tagDir MethodInvocation MethodInvocation getProject getDir IfStatement BinaryOperation == MemberReference tagDir Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation getParameter setValue createArgument BlockStatement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator MethodInvocation MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator tagDefFile ClassCreator ReferenceType File MemberReference tagDir MemberReference ArraySelector MemberReference i files TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference tagDefFile LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation in readLine = Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference line setValue createArgument StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Couldn't read " Literal " tag file from " MethodInvocation tagDefFile getAbsolutePath MemberReference ioe BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MethodInvocation getName setValue createArgument IfStatement BinaryOperation != MethodInvocation getPath Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator tagletPath MethodInvocation MethodInvocation Literal "ignore" concatSystemClasspath getPath IfStatement BinaryOperation != MethodInvocation tagletPath size Literal 0 BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference tagletPath setPath createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator sourceArg TernaryExpression BinaryOperation != MemberReference source Literal null MemberReference source MethodInvocation MethodInvocation MemberReference MagicNames getProperty getProject IfStatement BinaryOperation != MemberReference sourceArg Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal "-source" setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference sourceArg setValue createArgument IfStatement BinaryOperation && MemberReference BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument IfStatement BinaryOperation && MemberReference BinaryOperation || BinaryOperation == MemberReference Literal null MemberReference BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation toExecute MethodInvocation MemberReference setValue createArgument BlockStatement IfStatement MethodInvocation ! tags isEmpty BlockStatement StatementExpression MethodInvocation Literal and options not supported on Javadoc < 1.4" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference source Literal null BlockStatement StatementExpression MethodInvocation Literal option not supported on Javadoc < 1.4" MemberReference Project MSG_VERBOSE log IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal option not supported on Javadoc < 1.4" MemberReference Project MSG_VERBOSE log IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal option not supported on Javadoc < 1.4" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal option not supported on Javadoc < 1.4" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation || MemberReference ! javadoc4 BinaryOperation != MemberReference executable Literal null BlockStatement IfStatement MemberReference old BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation Literal setValue createArgument BlockStatement IfStatement MemberReference old BlockStatement StatementExpression MethodInvocation Literal "Javadoc doesn't support the MemberReference Project MSG_WARN log IfStatement BinaryOperation && MemberReference MemberReference javadoc4 BlockStatement StatementExpression MethodInvocation MemberReference toExecute LocalVariableDeclaration ReferenceType File VariableDeclarator tmpList Literal null LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator srcListWriter Literal null TryStatement IfStatement MemberReference BlockStatement IfStatement BinaryOperation == MemberReference tmpList Literal null BlockStatement StatementExpression Assignment MemberReference tmpList MethodInvocation FILE_UTILS Literal Literal "" Literal null createTempFile = StatementExpression MethodInvocation tmpList deleteOnExit StatementExpression MethodInvocation toExecute MethodInvocation BinaryOperation + Literal "@" MethodInvocation tmpList getAbsolutePath setValue createArgument StatementExpression Assignment MemberReference srcListWriter ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MethodInvocation tmpList getAbsolutePath Literal true = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation packagesToDoc elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName Cast ReferenceType String MethodInvocation e nextElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation srcListWriter MemberReference packageName println BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation MemberReference packageName setValue createArgument StatementExpression Assignment MemberReference e MethodInvocation sourceFilesToDoc elements = WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator sf Cast ReferenceType MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator sourceFileName MethodInvocation sf MethodInvocation getAbsolutePath getFile IfStatement MemberReference BlockStatement IfStatement BinaryOperation && MemberReference javadoc4 BinaryOperation > MethodInvocation sourceFileName Literal " " indexOf Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference sourceFileName IfStatement BinaryOperation == MemberReference File separatorChar Literal '\\' BlockStatement StatementExpression Assignment MemberReference name MethodInvocation sourceFileName MemberReference File separatorChar Literal '/' replace = StatementExpression MethodInvocation srcListWriter BinaryOperation + BinaryOperation + Literal "\"" MemberReference name Literal "\"" println BlockStatement StatementExpression MethodInvocation srcListWriter MemberReference sourceFileName println BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation MemberReference sourceFileName setValue createArgument CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation tmpList delete ThrowStatement ClassCreator ReferenceType BuildException Literal "Error creating temporary file" MemberReference e MethodInvocation getLocation IfStatement BinaryOperation != MemberReference srcListWriter Literal null BlockStatement StatementExpression MethodInvocation srcListWriter close IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation BinaryOperation + Literal "@" MemberReference setValue createArgument StatementExpression MethodInvocation MethodInvocation toExecute describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation Literal "Javadoc MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType JavadocOutputStream VariableDeclarator out ClassCreator ReferenceType JavadocOutputStream MemberReference Project MSG_INFO LocalVariableDeclaration ReferenceType JavadocOutputStream VariableDeclarator err ClassCreator ReferenceType JavadocOutputStream MemberReference Project MSG_WARN LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType PumpStreamHandler MemberReference out MemberReference err StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation exe Literal null setWorkingDirectory TryStatement StatementExpression MethodInvocation exe MethodInvocation toExecute getCommandline setCommandline LocalVariableDeclaration BasicType int VariableDeclarator ret MethodInvocation exe execute IfStatement BinaryOperation && BinaryOperation != MemberReference ret Literal 0 MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Javadoc returned " MemberReference ret MethodInvocation getLocation CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Javadoc failed: " MemberReference e MemberReference e MethodInvocation getLocation IfStatement BinaryOperation != MemberReference tmpList Literal null BlockStatement StatementExpression MethodInvocation tmpList delete StatementExpression Assignment MemberReference tmpList Literal null = StatementExpression MethodInvocation out logFlush StatementExpression MethodInvocation err logFlush TryStatement StatementExpression MethodInvocation out close StatementExpression MethodInvocation err close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference StatementExpression Assignment This MemberReference MethodInvocation This MemberReference =	0
MethodDeclaration Modifier public synchronized ReferenceType Resource getResource FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType FileResource MemberReference basedir MemberReference name	1
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType String fileName IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject MemberReference fileName ReturnStatement MethodInvocation FILE_UTILS MemberReference MemberReference fileName	0
MethodDeclaration Modifier public BasicType boolean compile FormalParameter ReferenceType javah BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation MemberReference javah TryStatement StatementExpression MethodInvocation Execute MemberReference javah MethodInvocation cmd getCommandline runCommand ReturnStatement Literal true CatchClause CatchClauseParameter BuildException e IfStatement BinaryOperation == MethodInvocation e MethodInvocation Literal "failed with return indexOf getMessage Literal - 1 BlockStatement ThrowStatement MemberReference e ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference MemberReference host =	0
MethodDeclaration Modifier private ReferenceType BuildException ReturnStatement ClassCreator ReferenceType BuildException BinaryOperation + SuperMethodInvocation toString MemberReference	0
MethodDeclaration Modifier public configureProject FormalParameter ReferenceType String filename BuildException StatementExpression MethodInvocation MemberReference filename MemberReference Project MSG_DEBUG configureProject	0
MethodDeclaration Modifier synchronized protected BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation == MemberReference inputStream Literal null BlockStatement ReturnStatement MethodInvocation managingTask MethodInvocation MemberReference buffer MemberReference offset MemberReference length getProject BlockStatement ReturnStatement MethodInvocation inputStream MemberReference buffer MemberReference offset MemberReference length read	0
MethodDeclaration Modifier public ReferenceType RegexpMatcher ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public StatementExpression MethodInvocation test3 StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference defaultTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean resolve StatementExpression Assignment This MemberReference MemberReference resolve =	0
MethodDeclaration Modifier protected BasicType boolean assumeJava11 ReturnStatement Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals	1
MethodDeclaration Modifier public ReferenceType String getPassword ReturnStatement MemberReference password	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String args ReturnStatement MethodInvocation MemberReference args Literal 0	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement BinaryOperation + MethodInvocation MemberReference defaultValue MethodInvocation MemberReference name	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt SynchronizedStatement This StatementExpression Assignment MemberReference done Literal true = StatementExpression MethodInvocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation getCommandLine	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType attributes StatementExpression Assignment This MemberReference attributes MemberReference attributes = StatementExpression Assignment MemberReference mapper ClassCreator ReferenceType =	1
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public ReferenceType Hashtable getFiles ReturnStatement TernaryExpression BinaryOperation == MemberReference ejbFiles Literal null ClassCreator ReferenceType Hashtable MemberReference ejbFiles	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier protected FormalParameter ReferenceType JarOutputStream FormalParameter ReferenceType File inputFile FormalParameter ReferenceType String logicalFilename BuildException LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator iStream Literal null TryStatement IfStatement MethodInvocation ! addedfiles MemberReference logicalFilename contains BlockStatement StatementExpression Assignment MemberReference iStream ClassCreator ReferenceType FileInputStream MemberReference inputFile = LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator zipEntry ClassCreator ReferenceType ZipEntry MethodInvocation logicalFilename Literal '\\' Literal '/' replace StatementExpression MethodInvocation MemberReference zipEntry putNextEntry LocalVariableDeclaration BasicType byte VariableDeclarator byteBuffer ArrayCreator BasicType byte BinaryOperation * Literal 2 MemberReference DEFAULT_BUFFER_SIZE LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference byteBuffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation iStream MemberReference byteBuffer Literal 0 MemberReference byteBuffer length read = StatementExpression MethodInvocation addedfiles MemberReference logicalFilename add CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "WARNING: IOException while adding entry " MemberReference logicalFilename Literal " to jarfile from " MethodInvocation inputFile getPath Literal " " MethodInvocation ioe MethodInvocation getName getClass Literal "-" MethodInvocation ioe getMessage MemberReference Project MSG_WARN log IfStatement BinaryOperation != MemberReference iStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation iStream close CatchClause CatchClauseParameter IOException closeException	1
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean logError StatementExpression Assignment This MemberReference logError MemberReference logError =	0
MethodDeclaration Modifier public addExisting FormalParameter ReferenceType source StatementExpression MethodInvocation MemberReference source Literal false addExisting	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public addSize FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType InputStream FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType InputStream istream IOException BuildException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator v MethodInvocation getValue IfStatement MethodInvocation MemberReference v equals BlockStatement ReturnStatement ClassCreator ReferenceType GZIPInputStream MemberReference istream BlockStatement IfStatement MethodInvocation MemberReference v equals BlockStatement LocalVariableDeclaration Modifier final BasicType char VariableDeclarator magic ArrayCreator BasicType char ArrayInitializer Literal 'B' Literal 'Z' ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference magic length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation istream read MemberReference ArraySelector MemberReference i magic BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid bz2 file." MemberReference name ReturnStatement ClassCreator ReferenceType CBZip2InputStream MemberReference istream ReturnStatement MemberReference istream	1
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType PrintStream err StatementExpression MethodInvocation MemberReference err	1
MethodDeclaration Modifier protected ReferenceType File getDestDir ReturnStatement MemberReference destDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation fileset MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setString FormalParameter ReferenceType String s StatementExpression Assignment MemberReference MemberReference s +=	0
MethodDeclaration Modifier public FormalParameter ReferenceType Resource stylesheet Exception IfStatement BinaryOperation != This MemberReference stylesheet Literal null BlockStatement StatementExpression Assignment MemberReference transformer Literal null = IfStatement BinaryOperation || This ! MemberReference stylesheet MethodInvocation MemberReference stylesheet equals BinaryOperation != MethodInvocation stylesheet getLastModified MemberReference BlockStatement StatementExpression Assignment MemberReference templates Literal null = StatementExpression Assignment This MemberReference stylesheet MemberReference stylesheet =	1
MethodDeclaration Modifier public addAttribute FormalParameter ReferenceType Attribute attr StatementExpression MethodInvocation attributes MemberReference attr addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression SuperMethodInvocation MethodInvocation toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType File FormalParameter ReferenceType File result AssertionFailedError IOException IfStatement MethodInvocation ! result exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Expected file " MemberReference result Literal " doesn\'t exist" fail LocalVariableDeclaration ReferenceType InputStream VariableDeclarator Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator Literal null TryStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference result = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation read WhileStatement BinaryOperation != MemberReference Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference MethodInvocation read assertEquals StatementExpression Assignment MemberReference MethodInvocation read = StatementExpression MethodInvocation Literal "End of file" Literal - 1 MethodInvocation read assertEquals IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive IfStatement BinaryOperation != MethodInvocation str MemberReference File separator startsWith MethodInvocation pattern MemberReference File separator startsWith BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator patDirs MethodInvocation MemberReference pattern tokenizePathAsArray LocalVariableDeclaration ReferenceType String VariableDeclarator strDirs MethodInvocation MemberReference str tokenizePathAsArray LocalVariableDeclaration BasicType int VariableDeclarator patIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator patIdxEnd BinaryOperation - MemberReference patDirs length Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator strIdxEnd BinaryOperation - MemberReference strDirs length Literal 1 WhileStatement BinaryOperation && BinaryOperation <= MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference patIdxStart patDirs IfStatement MethodInvocation Literal "**" equals BlockStatement BreakStatement IfStatement MethodInvocation ! MemberReference MemberReference ArraySelector MemberReference strIdxStart strDirs MemberReference isCaseSensitive match BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ patIdxStart StatementExpression MemberReference ++ strIdxStart IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ReturnStatement Literal true IfStatement BinaryOperation > MemberReference patIdxStart MemberReference patIdxEnd BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType String template FormalParameter ReferenceType Properties attributes XDocletException LocalVariableDeclaration ReferenceType Collection VariableDeclarator tags MethodInvocation MethodInvocation getDoc MethodInvocation Literal ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator t MethodInvocation tags iterator MethodInvocation t hasNext BlockStatement StatementExpression MethodInvocation Cast ReferenceType MethodInvocation t next StatementExpression MethodInvocation MemberReference template generate	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String IfStatement BinaryOperation != Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "It is not to " Literal " both as attribute and StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public synchronized TryStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close StatementExpression Assignment MemberReference Literal null = CatchClause CatchClauseParameter IOException e TryStatement IfStatement BinaryOperation != MemberReference client Literal null BlockStatement StatementExpression MethodInvocation client StatementExpression MethodInvocation client StatementExpression MethodInvocation client close StatementExpression Assignment MemberReference client Literal null = CatchClause CatchClauseParameter IOException e TryStatement IfStatement BinaryOperation != MemberReference server Literal null BlockStatement StatementExpression MethodInvocation server close StatementExpression Assignment MemberReference server Literal null = CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public add FormalParameter ReferenceType value ThrowStatement ClassCreator ReferenceType BuildException Literal "Should not be	0
MethodDeclaration Modifier private ReferenceType String IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement MethodInvocation BlockStatement ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt LocalVariableDeclaration ReferenceType Element VariableDeclarator test MethodInvocation doc MemberReference createElement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation evt getName StatementExpression MethodInvocation test MemberReference MemberReference name setAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation evt getName LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MethodInvocation MemberReference getAttribute Literal "." MethodInvocation MemberReference getAttribute IfStatement MethodInvocation ! MemberReference equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal from test " MemberReference Literal " and was expecting " MethodInvocation Literal "name" getAttribute StatementExpression MethodInvocation MemberReference test StatementExpression Assignment MemberReference MemberReference test = StatementExpression Assignment MemberReference MemberReference evt =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String id StatementExpression Assignment MemberReference refid MemberReference id =	0
MethodDeclaration * extenders should to the log an entry the * that will be used by this * @param * root folder in for the * @param * root local folder for the operation * by the user or */ Modifier protected FormalParameter ReferenceType Folder FormalParameter ReferenceType java ReferenceType io ReferenceType File StatementExpression MethodInvocation BinaryOperation + BinaryOperation + TernaryExpression This MethodInvocation isRecursive Literal Literal Literal " from: " MethodInvocation log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " Checking out to" TernaryExpression BinaryOperation == Literal null MethodInvocation Literal " Literal ": " MethodInvocation getAbsolutePath log StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation IfStatement BinaryOperation == This MemberReference lockStatus MemberReference BlockStatement StatementExpression MethodInvocation Literal " will be checked out with log IfStatement BinaryOperation == This MemberReference lockStatus MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " will be checked out " Literal if log BlockStatement StatementExpression MethodInvocation Literal " will be checked out with no change in lock log StatementExpression MethodInvocation BinaryOperation + Literal " will be checked out with " TernaryExpression This MemberReference Literal Literal "the current log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " will be checked out " TernaryExpression This MethodInvocation Literal of" Literal "in Literal " log IfStatement This MemberReference BlockStatement StatementExpression MethodInvocation Literal " Local items not found in the will be log StatementExpression MethodInvocation BinaryOperation + Literal " will be checked out " TernaryExpression This MemberReference Literal "using the local Literal the convention used on the server" log StatementExpression MethodInvocation BinaryOperation + Literal " will be created" TernaryExpression This MemberReference Literal " they exist in the even if empty." Literal " only where needed to check out log	1
MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation entries size	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType long timeoutMillis StatementExpression Assignment This MemberReference timeoutMillis MemberReference timeoutMillis =	0
MethodDeclaration Modifier public ReferenceType Properties getProperties IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation getProperties LocalVariableDeclaration ReferenceType Set VariableDeclarator names Literal null LocalVariableDeclaration ReferenceType Project VariableDeclarator MethodInvocation getProject LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator props TernaryExpression BinaryOperation == MemberReference Literal null MethodInvocation MethodInvocation getProperties ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator set Cast ReferenceType MethodInvocation e nextElement StatementExpression MethodInvocation props MethodInvocation set getProperties putAll IfStatement BinaryOperation || MethodInvocation BinaryOperation == MemberReference cachedNames Literal null BlockStatement StatementExpression Assignment MemberReference names ClassCreator ReferenceType HashSet = StatementExpression MethodInvocation MemberReference names MemberReference props ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator set Cast ReferenceType MethodInvocation e nextElement StatementExpression MethodInvocation names MethodInvocation set MethodInvocation keySet getProperties addAll IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType HashSet VariableDeclarator complement ClassCreator ReferenceType HashSet MethodInvocation props keySet StatementExpression MethodInvocation complement MemberReference names removeAll StatementExpression Assignment MemberReference names MemberReference complement = IfStatement MethodInvocation ! BlockStatement StatementExpression Assignment MemberReference cachedNames MemberReference names = BlockStatement StatementExpression Assignment MemberReference names MemberReference cachedNames = LocalVariableDeclaration ReferenceType VariableDeclarator m Literal null LocalVariableDeclaration ReferenceType Mapper VariableDeclarator myMapper MethodInvocation IfStatement BinaryOperation != MemberReference myMapper Literal null BlockStatement StatementExpression Assignment MemberReference m MethodInvocation myMapper = LocalVariableDeclaration ReferenceType Properties VariableDeclarator properties ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation names iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation props MemberReference name get IfStatement BinaryOperation != MemberReference value Literal null BlockStatement IfStatement BinaryOperation != MemberReference m Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation m MemberReference name mapFileName IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference name MemberReference ArraySelector Literal 0 = StatementExpression MethodInvocation properties MemberReference name MemberReference value setProperty ReturnStatement MemberReference properties	1
MethodDeclaration Modifier public FormalParameter ReferenceType Boolean StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public FormalParameter ReferenceType c StatementExpression Assignment MemberReference when MemberReference c =	0
MethodDeclaration Modifier protected BuildException TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "mode : fork " MemberReference MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType This StatementExpression MethodInvocation ClassCreator ReferenceType File Literal "." StatementExpression MethodInvocation Literal setExecutable IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation getAbsolutePath setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation getAbsolutePath setValue createArg StatementExpression MethodInvocation MethodInvocation Literal setValue createArg StatementExpression MethodInvocation MethodInvocation MethodInvocation classpath toString setValue createArg StatementExpression MethodInvocation Literal "Calling MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation execute CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Exception while calling Details: " MethodInvocation e toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal Literal MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res	0
MethodDeclaration Modifier private static getFiles FormalParameter Modifier final ReferenceType File FormalParameter ReferenceType Vector LocalVariableDeclaration ReferenceType FileFilter VariableDeclarator filter ClassCreator ReferenceType FileFilter MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation file MethodInvocation Literal "taskdefs" indexOf getPath Literal 0 MethodInvocation file MethodInvocation toLowerCase MethodInvocation Literal ".xml" endsWith getPath LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation MemberReference filter listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MemberReference ArraySelector MemberReference i files IfStatement MethodInvocation ! f isDirectory BlockStatement StatementExpression MethodInvocation MemberReference f addElement BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference getFiles	1
MethodDeclaration Modifier public ReferenceType String getIncludedFiles LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i files Cast ReferenceType String MethodInvocation MemberReference i elementAt = ReturnStatement MemberReference files	0
MethodDeclaration Modifier public synchronized BasicType long ReturnStatement MemberReference granularity	0
MethodDeclaration Modifier public maybeConfigure FormalParameter ReferenceType Project p BuildException StatementExpression MethodInvocation MemberReference p Literal true maybeConfigure	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation length Literal 0 BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier synchronized protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement IfStatement BinaryOperation instanceof MemberReference tokenizer ReferenceType DataType BlockStatement StatementExpression MethodInvocation stk MemberReference tokenizer push StatementExpression MethodInvocation Cast ReferenceType DataType MemberReference tokenizer MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public BasicType long getMillis IfStatement BinaryOperation != MemberReference dateTime Literal null BlockStatement StatementExpression MethodInvocation validate ReturnStatement MemberReference millis	0
MethodDeclaration Modifier public ReferenceType Iterator iterator LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType java ReferenceType util ReferenceType Vector LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator en MethodInvocation cache propertyNames WhileStatement MethodInvocation en hasMoreElements BlockStatement StatementExpression MethodInvocation v MethodInvocation en nextElement add ReturnStatement MethodInvocation v iterator	1
MethodDeclaration Modifier public addDepth FormalParameter ReferenceType selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addDepth	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "Target does not exist in the project	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference modified	0
MethodDeclaration Modifier private ReferenceType Class FormalParameter ReferenceType String name ClassNotFoundException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator stream Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator classFilename MethodInvocation MemberReference name TryStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pathComponent Cast ReferenceType File MethodInvocation e nextElement TryStatement StatementExpression Assignment MemberReference stream MethodInvocation MemberReference pathComponent MemberReference classFilename getResourceStream = IfStatement BinaryOperation != MemberReference stream Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Loaded from " MemberReference pathComponent Literal " " MemberReference classFilename MemberReference Project MSG_DEBUG log ReturnStatement MethodInvocation MemberReference stream MemberReference name MemberReference pathComponent CatchClause CatchClauseParameter SecurityException se ThrowStatement MemberReference se CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Exception reading component " MemberReference pathComponent Literal " " MethodInvocation ioe getMessage Literal ")" MemberReference Project MSG_VERBOSE log ThrowStatement ClassCreator ReferenceType ClassNotFoundException MemberReference name TryStatement IfStatement BinaryOperation != MemberReference stream Literal null BlockStatement StatementExpression MethodInvocation stream close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Use the task for output."	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference currBlkIdx	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier protected FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier private ReferenceType URL FormalParameter ReferenceType URL FormalParameter ReferenceType URL FormalParameter ReferenceType URL FormalParameter ReferenceType File MalformedURLException LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + BinaryOperation + MemberReference length MemberReference length MemberReference length IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MemberReference ++ LocalVariableDeclaration ReferenceType URL VariableDeclarator jars ArrayCreator ReferenceType URL MemberReference StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference jars Literal 0 MemberReference length arraycopy StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference jars MemberReference length MemberReference length arraycopy StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference jars BinaryOperation + MemberReference length MemberReference length MemberReference length arraycopy IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference jars length Literal 1 jars MethodInvocation Locator MemberReference fileToURL = ReturnStatement MemberReference jars	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator runner MethodInvocation ClassReference ReferenceType StatementExpression MethodInvocation runner run LocalVariableDeclaration BasicType int VariableDeclarator ret MethodInvocation runner IfStatement BinaryOperation && BinaryOperation != MemberReference ret MemberReference BinaryOperation != MemberReference ret MemberReference ERRORS BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unexpected result " MemberReference ret Literal " from fail	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation pop StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MethodInvocation size Literal 0 Literal null Cast ReferenceType String MethodInvocation peek =	0
MethodDeclaration Modifier public test1 LocalVariableDeclaration ReferenceType String VariableDeclarator expected ArrayInitializer Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal StatementExpression MethodInvocation project Literal executeTarget StatementExpression MethodInvocation Literal "current default MemberReference expected MethodInvocation DirectoryScanner assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation || BinaryOperation != MemberReference type Literal null BinaryOperation != MemberReference from Literal null BinaryOperation != MemberReference to Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation Literal getProject StatementExpression MethodInvocation Literal "File has been put into MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getTask = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public static ReferenceType RmicAdapter getRmic FormalParameter ReferenceType String FormalParameter ReferenceType Task task BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator compiler MethodInvocation MemberReference ENGLISH toLowerCase IfStatement BinaryOperation || MethodInvocation MemberReference compiler equals BinaryOperation == MethodInvocation compiler length Literal 0 BlockStatement StatementExpression Assignment MemberReference compiler TernaryExpression MethodInvocation MemberReference MemberReference = IfStatement MethodInvocation MemberReference compiler equals BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation MemberReference compiler equals BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation MemberReference compiler equals BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation MemberReference compiler equals BlockStatement ReturnStatement ClassCreator ReferenceType IfStatement MethodInvocation MemberReference compiler equals BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement MethodInvocation MemberReference resolveClassName	1
MethodDeclaration * get the auth * a null return value * @return current strategy or */ Modifier protected ReferenceType HttpAuthenticationStrategy LocalVariableDeclaration ReferenceType HttpAuthenticationStrategy VariableDeclarator strategy Literal null SwitchStatement MemberReference SwitchStatementCase StatementExpression Assignment MemberReference strategy ClassCreator ReferenceType = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase BreakStatement ReturnStatement MemberReference strategy	1
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType filter StatementExpression MethodInvocation MemberReference filter addElement	0
MethodDeclaration Modifier public synchronized BasicType int IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal call ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "the attribute text has already been specified" expectBuildException	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public synchronized BasicType boolean IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement MethodInvocation MemberReference BlockStatement ReturnStatement Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement IfStatement MethodInvocation Cast ReferenceType MethodInvocation i next BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class c StatementExpression MethodInvocation ClassReference ReferenceType Project MemberReference c assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setMethod FormalParameter ReferenceType String method StatementExpression Assignment This MemberReference method MemberReference method =	0
MethodDeclaration Modifier public ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ResourceCollection MethodInvocation MethodInvocation getProject IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation iterator LocalVariableDeclaration ReferenceType ArchiveScanner VariableDeclarator as Cast ReferenceType ArchiveScanner MethodInvocation MethodInvocation getProject getDirectoryScanner ReturnStatement MethodInvocation as	1
MethodDeclaration Modifier public BasicType int size LocalVariableDeclaration ReferenceType VariableDeclarator clause MethodInvocation ReturnStatement MethodInvocation clause	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ClassLoader StatementExpression MethodInvocation Thread MethodInvocation MemberReference currentThread	0
MethodDeclaration Modifier protected nextLine BuildException LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator eolcount Literal 0 StatementExpression Assignment MemberReference eolStr ClassCreator ReferenceType StringBuffer = StatementExpression Assignment MemberReference line ClassCreator ReferenceType StringBuffer = TryStatement StatementExpression Assignment MemberReference ch MethodInvocation reader read = WhileStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference ch Literal - 1 BinaryOperation != MemberReference ch Literal '\r' BinaryOperation != MemberReference ch Literal '\n' BlockStatement StatementExpression MethodInvocation line Cast BasicType char MemberReference ch append StatementExpression Assignment MemberReference ch MethodInvocation reader read = IfStatement BinaryOperation && BinaryOperation == MemberReference ch Literal - 1 BinaryOperation == MethodInvocation line length Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal true = ReturnStatement SwitchStatement Cast BasicType char MemberReference ch SwitchStatementCase Literal '\r' StatementExpression MemberReference ++ eolcount StatementExpression MethodInvocation eolStr Literal '\r' append StatementExpression MethodInvocation reader Literal 2 mark StatementExpression Assignment MemberReference ch MethodInvocation reader read = SwitchStatement MemberReference ch SwitchStatementCase Literal '\r' StatementExpression Assignment MemberReference ch MethodInvocation reader read = IfStatement BinaryOperation == Cast BasicType char MemberReference ch Literal '\n' BlockStatement StatementExpression Assignment MemberReference eolcount Literal 2 += StatementExpression MethodInvocation eolStr Literal append BlockStatement StatementExpression MethodInvocation reader reset BreakStatement SwitchStatementCase Literal '\n' StatementExpression MemberReference ++ eolcount StatementExpression MethodInvocation eolStr Literal '\n' append BreakStatement SwitchStatementCase Literal - 1 BreakStatement SwitchStatementCase StatementExpression MethodInvocation reader reset BreakStatement BreakStatement SwitchStatementCase Literal '\n' StatementExpression MemberReference ++ eolcount StatementExpression MethodInvocation eolStr Literal '\n' append BreakStatement SwitchStatementCase IfStatement BinaryOperation == MemberReference eolcount Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation line length WhileStatement BinaryOperation && BinaryOperation >= MemberReference -- i Literal 0 BinaryOperation == MethodInvocation line MemberReference i charAt MemberReference CTRLZ BlockStatement IfStatement BinaryOperation < MemberReference i BinaryOperation - MethodInvocation line length Literal 1 BlockStatement StatementExpression MethodInvocation MethodInvocation line MethodInvocation BinaryOperation + MemberReference i Literal 1 substring toString append IfStatement BinaryOperation < MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation line Literal 0 setLength StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression MethodInvocation line BinaryOperation + MemberReference i Literal 1 setLength CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference srcFile Literal ": " MethodInvocation e getMessage MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public run FormalParameter ReferenceType TestResult r ThrowStatement ClassCreator ReferenceType AssertionFailedError MemberReference message	0
MethodDeclaration Modifier public BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unbalanced of TryStatement StatementExpression MethodInvocation System MemberReference setProperties StatementExpression Assignment MemberReference Literal null = CatchClause CatchClauseParameter SecurityException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot modify system properties" MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType String typeName FormalParameter ReferenceType Class typeClass LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def ClassCreator ReferenceType AntTypeDefinition StatementExpression MethodInvocation def MemberReference typeName setName StatementExpression MethodInvocation def MemberReference typeClass StatementExpression MethodInvocation MemberReference def StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MemberReference typeName Literal " " MethodInvocation typeClass getName MemberReference Project MSG_DEBUG log	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Specify at least one source - a file or a IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation file exists MethodInvocation file isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal cannot be generated for directories" IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null BinaryOperation > MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Choose between file and fileset IfStatement BinaryOperation != MethodInvocation getFile Literal null BlockStatement StatementExpression MethodInvocation doit ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation filesets size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator srcFiles MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference srcFiles length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator src ClassCreator ReferenceType File MethodInvocation fs MethodInvocation getProject getDir MemberReference ArraySelector MemberReference j srcFiles StatementExpression MethodInvocation MemberReference src StatementExpression MethodInvocation doit	1
MethodDeclaration Modifier public synchronized ReferenceType String getIncludedFiles IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal call LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference files copyInto StatementExpression MethodInvocation Arrays MemberReference files sort ReturnStatement MemberReference files	1
MethodDeclaration Modifier private readPatterns FormalParameter ReferenceType File patternfile FormalParameter ReferenceType Vector patternlist FormalParameter ReferenceType Project p BuildException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator patternReader Literal null TryStatement StatementExpression Assignment MemberReference patternReader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference patternfile = LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation patternReader readLine WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation line length Literal 0 BlockStatement StatementExpression Assignment MemberReference line MethodInvocation p MemberReference line replaceProperties = StatementExpression MethodInvocation MethodInvocation MemberReference line setName MemberReference patternlist StatementExpression Assignment MemberReference line MethodInvocation patternReader readLine = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "An error occurred while reading from pattern file: " MemberReference patternfile ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe IfStatement BinaryOperation != Literal null MemberReference patternReader BlockStatement TryStatement StatementExpression MethodInvocation patternReader close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType String getExecutable FormalParameter ReferenceType String exe LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator correctedExe ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement IfStatement MethodInvocation MemberReference File separator endsWith BlockStatement StatementExpression MethodInvocation correctedExe MemberReference append BlockStatement StatementExpression MethodInvocation correctedExe MethodInvocation MemberReference File separator append MemberReference append ReturnStatement MethodInvocation correctedExe MethodInvocation toString MemberReference exe append	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir1 FormalParameter ReferenceType String name ReturnStatement BinaryOperation || MethodInvocation name Literal ".java" endsWith BinaryOperation && MemberReference MethodInvocation name Literal equals	1
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null MethodInvocation BlockStatement StatementExpression Assignment MemberReference MethodInvocation = IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! BlockStatement StatementExpression Assignment MemberReference Literal null = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType Marker IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support multiple " Literal MethodInvocation getLocation StatementExpression Assignment MemberReference MethodInvocation cmdl = ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter ReturnStatement MemberReference newFilter CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements LocalVariableDeclaration BasicType boolean VariableDeclarator result WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType FileSelector MethodInvocation e nextElement = IfStatement MemberReference ! result BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier static ReferenceType XalanExecutor newInstance FormalParameter ReferenceType caller BuildException LocalVariableDeclaration ReferenceType XalanExecutor VariableDeclarator Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation Class BinaryOperation + MemberReference PACKAGE Literal forName StatementExpression Assignment MemberReference Cast ReferenceType XalanExecutor MethodInvocation clazz newInstance = CatchClause CatchClauseParameter Exception StatementExpression MethodInvocation MethodInvocation toString log ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Could not find nor " Literal "in the Check " Literal LocalVariableDeclaration ReferenceType String VariableDeclarator classNameImpl MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator version MethodInvocation MemberReference classNameImpl StatementExpression MethodInvocation BinaryOperation + Literal "Using " MemberReference version MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference caller ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public write FormalParameter ReferenceType Element element FormalParameter ReferenceType Writer out FormalParameter BasicType int indent FormalParameter ReferenceType String IOException LocalVariableDeclaration ReferenceType NodeList VariableDeclarator children MethodInvocation element getChildNodes LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation > MethodInvocation children getLength Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator hasChildElements Literal false StatementExpression MethodInvocation MemberReference element MemberReference out MemberReference indent MemberReference MemberReference IfStatement MemberReference BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation children getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation children MemberReference i item SwitchStatement MethodInvocation child SwitchStatementCase MemberReference Node ELEMENT_NODE StatementExpression Assignment MemberReference hasChildElements Literal true = IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation out MemberReference lSep write StatementExpression MethodInvocation Cast ReferenceType Element MemberReference child MemberReference out BinaryOperation + MemberReference indent Literal 1 MemberReference write BreakStatement SwitchStatementCase MemberReference Node StatementExpression MethodInvocation out MethodInvocation MethodInvocation child getNodeValue encode write BreakStatement SwitchStatementCase MemberReference Node StatementExpression MethodInvocation out Literal "<!--" write StatementExpression MethodInvocation out MethodInvocation MethodInvocation child getNodeValue encode write StatementExpression MethodInvocation out Literal "-->" write BreakStatement SwitchStatementCase MemberReference Node StatementExpression MethodInvocation out Literal write StatementExpression MethodInvocation out MethodInvocation Cast ReferenceType Text MemberReference child write StatementExpression MethodInvocation out Literal "]]>" write BreakStatement SwitchStatementCase MemberReference Node StatementExpression MethodInvocation out Literal '&' write StatementExpression MethodInvocation out MethodInvocation child getNodeName write StatementExpression MethodInvocation out Literal ';' write BreakStatement SwitchStatementCase MemberReference Node StatementExpression MethodInvocation out Literal "<?" write StatementExpression MethodInvocation out MethodInvocation child getNodeName write LocalVariableDeclaration ReferenceType String VariableDeclarator data MethodInvocation child getNodeValue IfStatement BinaryOperation && BinaryOperation != MemberReference data Literal null BinaryOperation > MethodInvocation data length Literal 0 BlockStatement StatementExpression MethodInvocation out Literal ' ' write StatementExpression MethodInvocation out MemberReference data write StatementExpression MethodInvocation out Literal "?>" write BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference element MemberReference out MemberReference indent MemberReference MemberReference hasChildElements	1
MethodDeclaration Modifier public BasicType int executeInVM FormalParameter ReferenceType CommandlineJava commandline BuildException LocalVariableDeclaration ReferenceType jdepend ReferenceType ReferenceType JDepend VariableDeclarator jdepend IfStatement Literal MethodInvocation MemberReference format equals "xml" BlockStatement StatementExpression Assignment MemberReference jdepend ClassCreator ReferenceType jdepend ReferenceType ReferenceType JDepend = BlockStatement StatementExpression Assignment MemberReference jdepend ClassCreator ReferenceType jdepend ReferenceType ReferenceType JDepend = LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator fw Literal null IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference fw ClassCreator ReferenceType FileWriter MethodInvocation MethodInvocation getPath = CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal Failed when creating the output file: " MethodInvocation e getMessage StatementExpression MethodInvocation MemberReference msg log ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression MethodInvocation jdepend ClassCreator ReferenceType PrintWriter MemberReference fw StatementExpression MethodInvocation BinaryOperation + Literal "Output to be stored in " MethodInvocation MethodInvocation getPath log TryStatement IfStatement BinaryOperation != MethodInvocation getClassespath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cP MethodInvocation MethodInvocation list getClassespath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cP length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i cP IfStatement MethodInvocation ! f exists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation f getPath Literal "\" does not represent a valid" Literal " file or directory. JDepend would fail." StatementExpression MethodInvocation MemberReference msg log ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg TryStatement StatementExpression MethodInvocation jdepend MethodInvocation f getPath CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal Failed when adding a class directory: " MethodInvocation e getMessage StatementExpression MethodInvocation MemberReference msg log ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement BinaryOperation != MethodInvocation getSourcespath Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sP MethodInvocation MethodInvocation list getSourcespath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference sP length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i sP IfStatement BinaryOperation || MethodInvocation ! f exists MethodInvocation ! f isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "\"" MethodInvocation f getPath Literal "\" does not represent a valid" Literal " directory. JDepend would fail." StatementExpression MethodInvocation MemberReference msg log ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg TryStatement StatementExpression MethodInvocation jdepend MethodInvocation f getPath CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal Failed when adding a source directory: " MethodInvocation e getMessage StatementExpression MethodInvocation MemberReference msg log ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg LocalVariableDeclaration ReferenceType String VariableDeclarator patterns MethodInvocation MethodInvocation getProject IfStatement BinaryOperation && BinaryOperation != MemberReference patterns Literal null BinaryOperation > MemberReference patterns length Literal 0 BlockStatement IfStatement BinaryOperation != MemberReference setFilter Literal null BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference patterns length MemberReference ++ i BlockStatement StatementExpression MethodInvocation v MemberReference ArraySelector MemberReference i patterns addElement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference v newInstance StatementExpression MethodInvocation setFilter MemberReference jdepend ArrayCreator ReferenceType Object ArrayInitializer MemberReference o invoke CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation BinaryOperation + Literal will be ignored as JDepend doesn't like " MethodInvocation e getMessage MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation Literal "Sorry, your version of JDepend doesn't support MemberReference Project MSG_WARN log StatementExpression MethodInvocation jdepend analyze StatementExpression MethodInvocation FileUtils MemberReference fw close ReturnStatement MemberReference	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o ReturnStatement BinaryOperation == This MemberReference o	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal "from included entity" expectLog	0
MethodDeclaration Modifier protected FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dir IOException BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ftp IfStatement MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating directory: " MemberReference dir log IfStatement BinaryOperation == MethodInvocation dir Literal "/" indexOf Literal 0 BlockStatement StatementExpression MethodInvocation ftp Literal "/" changeWorkingDirectory LocalVariableDeclaration ReferenceType String VariableDeclarator ClassCreator ReferenceType String LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference dir Literal "/" WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference MethodInvocation st nextToken = StatementExpression MethodInvocation BinaryOperation + Literal "Checking " MemberReference MemberReference Project MSG_DEBUG log IfStatement MethodInvocation ! ftp MemberReference changeWorkingDirectory BlockStatement IfStatement MethodInvocation ! ftp MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator rc MethodInvocation ftp getReplyCode IfStatement BinaryOperation && MemberReference BinaryOperation || BinaryOperation || BinaryOperation == MemberReference rc MemberReference FTPReply BinaryOperation == MemberReference rc MemberReference FTPReply BinaryOperation == MemberReference rc MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "could not create directory: " MethodInvocation ftp getReplyString IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "Directory already exists" log BlockStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "Directory created OK" log StatementExpression MethodInvocation ftp MemberReference changeWorkingDirectory IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation ftp MemberReference changeWorkingDirectory	1
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference tabLength	0
MethodDeclaration FormalParameter BasicType int FormalParameter BasicType int repeat LocalVariableDeclaration BasicType int VariableDeclarator globalCrcShadow This MemberReference WhileStatement BinaryOperation > MemberReference -- repeat Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator temp BinaryOperation BinaryOperation >> MemberReference globalCrcShadow Literal 24 MemberReference StatementExpression Assignment MemberReference globalCrcShadow BinaryOperation BinaryOperation << MemberReference globalCrcShadow Literal 8 MemberReference ArraySelector TernaryExpression BinaryOperation >= MemberReference temp Literal 0 MemberReference temp BinaryOperation + MemberReference temp Literal 256 = StatementExpression Assignment This MemberReference MemberReference globalCrcShadow =	1
MethodDeclaration Modifier public FormalParameter ReferenceType encoding StatementExpression Assignment This MemberReference encoding MethodInvocation encoding getValue =	0
MethodDeclaration Modifier public init FormalParameter ReferenceType File file StatementExpression Assignment MemberReference currentFile MemberReference file = StatementExpression Assignment MemberReference failed Literal false =	0
MethodDeclaration Modifier public addPresent FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v StatementExpression Assignment This MemberReference recurse MemberReference v =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String label IfStatement BinaryOperation != Literal null MemberReference label BlockStatement StatementExpression Assignment MemberReference label MethodInvocation label trim = IfStatement BinaryOperation > MethodInvocation label length Literal 0 BlockStatement StatementExpression Assignment This MemberReference label MemberReference label =	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference implementationVendor	0
MethodDeclaration Modifier public BasicType long LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "failed to touch file " MemberReference file ReturnStatement MethodInvocation file lastModified	0
MethodDeclaration Modifier public FormalParameter ReferenceType ClassLoader loader StatementExpression Assignment MemberReference MemberReference loader =	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String filename StatementExpression SuperMethodInvocation MemberReference filename	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType byte IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal recIdx = " This MemberReference currRecIdx Literal " blkIdx = " This MemberReference currBlkIdx println IfStatement BinaryOperation == This MemberReference inStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "reading from an output buffer" IfStatement BinaryOperation >= This MemberReference currRecIdx This MemberReference recsPerBlock BlockStatement IfStatement This ! MethodInvocation readBlock BlockStatement ReturnStatement Literal null LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte This MemberReference recordSize StatementExpression MethodInvocation System This MemberReference blockBuffer BinaryOperation * This MemberReference currRecIdx This MemberReference recordSize MemberReference result Literal 0 This MemberReference recordSize arraycopy StatementExpression This ++ MemberReference currRecIdx ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator aClassPath SuperMethodInvocation IfStatement BinaryOperation == MemberReference aClassPath Literal null BlockStatement StatementExpression Assignment MemberReference aClassPath ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getTask = IfStatement BinaryOperation != MemberReference orb Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ClassCreator MethodInvocation toString ReferenceType File MemberReference jonasroot BinaryOperation + BinaryOperation + Literal MemberReference orb Literal LocalVariableDeclaration ReferenceType String VariableDeclarator ClassCreator MethodInvocation toString ReferenceType File MemberReference jonasroot Literal LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation aClassPath getProject BinaryOperation + BinaryOperation + MemberReference MemberReference File pathSeparator MemberReference StatementExpression MethodInvocation aClassPath MemberReference append ReturnStatement MemberReference aClassPath	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement This MemberReference	0
MethodDeclaration FormalParameter Modifier final ReferenceType File file BuildException LocalVariableDeclaration Modifier final ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference file getManifest StatementExpression MethodInvocation MemberReference file MemberReference manifest	0
MethodDeclaration FormalParameter BasicType int LocalVariableDeclaration BasicType int VariableDeclarator temp BinaryOperation BinaryOperation >> MemberReference Literal 24 MemberReference IfStatement BinaryOperation < MemberReference temp Literal 0 BlockStatement StatementExpression Assignment MemberReference temp BinaryOperation + Literal 256 MemberReference temp = StatementExpression Assignment MemberReference BinaryOperation BinaryOperation << MemberReference Literal 8 MemberReference ArraySelector MemberReference temp =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation reg Literal "end of StatementExpression MethodInvocation Literal line MethodInvocation reg Literal "end of matches assertTrue	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference MemberReference	1
MethodDeclaration Modifier public BasicType int failureCount ReturnStatement MemberReference failureCount	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation rcs MemberReference rc add	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean isSelected ReturnStatement MemberReference selected	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir =	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator path LocalVariableDeclaration ReferenceType String VariableDeclarator fileName LocalVariableDeclaration ReferenceType String VariableDeclarator baseName LocalVariableDeclaration ReferenceType String VariableDeclarator LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference File separatorChar lastIndexOf IfStatement BinaryOperation != MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference path MethodInvocation Literal 0 BinaryOperation + MemberReference Literal 1 substring = StatementExpression Assignment MemberReference fileName MethodInvocation BinaryOperation + MemberReference Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference path Literal "" = StatementExpression Assignment MemberReference fileName MemberReference = IfStatement MethodInvocation fileName MemberReference startsWith BlockStatement ReturnStatement BinaryOperation + MemberReference path MemberReference LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MethodInvocation MemberReference getConfig MemberReference indexOf IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MethodInvocation Literal '.' lastIndexOf Literal 1 = IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MethodInvocation length Literal 1 = StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference baseName MethodInvocation BinaryOperation + MemberReference Literal 1 BinaryOperation + MemberReference Literal 1 substring = StatementExpression Assignment MemberReference MethodInvocation BinaryOperation + MemberReference Literal 1 substring = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference path Literal MemberReference baseName Literal ".xml" = BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference path MemberReference baseName Literal MemberReference = StatementExpression MethodInvocation BinaryOperation + Literal EJB descriptor name: " MemberReference MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal descriptor name: " MemberReference MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference	0
MethodDeclaration Modifier private BuildException StatementExpression Assignment MemberReference properties ClassCreator ReferenceType Properties = TryStatement IfStatement MethodInvocation propertyfile exists BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Updating property file: " MethodInvocation propertyfile getAbsolutePath log LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference propertyfile = LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator bis ClassCreator ReferenceType BufferedInputStream MemberReference fis StatementExpression MethodInvocation properties MemberReference bis load IfStatement BinaryOperation != MemberReference fis Literal null BlockStatement StatementExpression MethodInvocation fis close BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating new property file: " MethodInvocation propertyfile getAbsolutePath log LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileOutputStream MethodInvocation propertyfile getAbsolutePath = StatementExpression MethodInvocation out flush IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe toString	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator cond MethodInvocation ComponentHelper MethodInvocation BinaryOperation + MemberReference MemberReference name MethodInvocation getProject getComponentHelper IfStatement BinaryOperation instanceof MemberReference cond ReferenceType BlockStatement ReturnStatement Literal null StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal '" MemberReference name Literal "' " MemberReference cond MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation Cast ReferenceType MemberReference cond add ReturnStatement MemberReference cond	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public ReferenceType ClassLoader getLoader ReturnStatement MemberReference loader	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + Literal MemberReference	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String polyType StatementExpression Assignment This MemberReference polyType MemberReference polyType =	0
MethodDeclaration Modifier protected ReferenceType AbstractFileSet getInstance ReturnStatement ClassCreator ReferenceType FileSet	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public static BasicType byte FormalParameter BasicType char data BuildException LocalVariableDeclaration BasicType int VariableDeclarator l MemberReference data length IfStatement BinaryOperation != BinaryOperation & MemberReference l Literal Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "odd number of LocalVariableDeclaration BasicType byte VariableDeclarator out ArrayCreator BasicType byte BinaryOperation >> MemberReference l Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference l MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator f BinaryOperation << MethodInvocation Character MemberReference ArraySelector MemberReference ++ j data Literal 16 digit Literal 4 StatementExpression Assignment MemberReference f BinaryOperation | MemberReference f MethodInvocation Character MemberReference ArraySelector MemberReference ++ j data Literal 16 digit = StatementExpression Assignment MemberReference ArraySelector MemberReference i out Cast BasicType byte BinaryOperation & MemberReference f Literal 0xFF = ReturnStatement MemberReference out	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier protected initZipOutputStream FormalParameter ReferenceType ZipOutputStream zOut IOException BuildException IfStatement MemberReference ! skipWriting BlockStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference zOut MemberReference writeManifest StatementExpression MethodInvocation MemberReference zOut	1
MethodDeclaration Modifier public FormalParameter BasicType int type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier private ReferenceType Manifest BuildException TryStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator MethodInvocation Manifest IfStatement BinaryOperation == MemberReference manifest Literal null BlockStatement IfStatement BinaryOperation != MemberReference manifestFile Literal null BlockStatement StatementExpression Assignment MemberReference manifest MethodInvocation MemberReference manifestFile getManifest = IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation MemberReference merge StatementExpression MethodInvocation MemberReference filesetManifest merge StatementExpression MethodInvocation MemberReference merge StatementExpression MethodInvocation MemberReference manifest MemberReference ! merge ReturnStatement MemberReference CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + Literal is " MethodInvocation e getMessage MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid MemberReference e MethodInvocation getLocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType int p StatementExpression Assignment This MemberReference port MemberReference p =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties IfStatement MethodInvocation ! prefix Literal "." endsWith BlockStatement StatementExpression Assignment MemberReference prefix Literal "." += StatementExpression MethodInvocation BinaryOperation + Literal "Loading Environment " MemberReference prefix MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Vector VariableDeclarator osEnv MethodInvocation Execute getProcEnvironment ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation osEnv elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entry Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation entry Literal '=' indexOf IfStatement BinaryOperation == MemberReference pos Literal - 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference entry MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation props BinaryOperation + MemberReference prefix MethodInvocation entry Literal 0 MemberReference pos substring MethodInvocation entry BinaryOperation + MemberReference pos Literal 1 substring put StatementExpression MethodInvocation MemberReference props	1
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator dirs MethodInvocation elements WhileStatement MethodInvocation dirs hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir Cast ReferenceType File MethodInvocation dirs nextElement StatementExpression MethodInvocation MemberReference dir StatementExpression SuperMethodInvocation	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference text MethodInvocation MethodInvocation MemberReference text replaceProperties getProject =	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object key ReturnStatement MethodInvocation Cast ReferenceType String MemberReference key	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null BinaryOperation + MemberReference MemberReference Literal ""	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList BinaryOperation * MethodInvocation arguments size Literal 2 StatementExpression MethodInvocation MethodInvocation result listIterator LocalVariableDeclaration ReferenceType String VariableDeclarator res ArrayCreator ReferenceType String MethodInvocation result size ReturnStatement Cast ReferenceType String MethodInvocation result MemberReference res toArray	0
MethodDeclaration Modifier private LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lastShadow This MemberReference last LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator inUse MemberReference dataShadow inUse LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block MemberReference dataShadow block LocalVariableDeclaration Modifier final BasicType int VariableDeclarator fmap MemberReference dataShadow fmap LocalVariableDeclaration Modifier final BasicType char VariableDeclarator sfmap MemberReference dataShadow sfmap LocalVariableDeclaration Modifier final BasicType int VariableDeclarator mtfFreq MemberReference dataShadow mtfFreq LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator unseqToSeq MemberReference dataShadow unseqToSeq LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator yy MemberReference dataShadow LocalVariableDeclaration BasicType int VariableDeclarator nInUseShadow Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 256 MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i inUse BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i unseqToSeq Cast BasicType byte MemberReference nInUseShadow = StatementExpression MemberReference ++ nInUseShadow StatementExpression Assignment This MemberReference nInUse MemberReference nInUseShadow = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator eob BinaryOperation + MemberReference nInUseShadow Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference eob BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i mtfFreq Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference nInUseShadow BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i yy Cast BasicType byte MemberReference i = LocalVariableDeclaration BasicType int VariableDeclarator wr Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator zPend Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i MemberReference lastShadow MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator ll_i MemberReference ArraySelector BinaryOperation & MemberReference ArraySelector MemberReference ArraySelector MemberReference i fmap block Literal 0xff unseqToSeq LocalVariableDeclaration BasicType byte VariableDeclarator tmp MemberReference ArraySelector Literal 0 yy LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 WhileStatement BinaryOperation != MemberReference ll_i MemberReference tmp BlockStatement StatementExpression MemberReference ++ j LocalVariableDeclaration BasicType byte VariableDeclarator tmp2 MemberReference tmp StatementExpression Assignment MemberReference tmp MemberReference ArraySelector MemberReference j yy = StatementExpression Assignment MemberReference ArraySelector MemberReference j yy MemberReference tmp2 = StatementExpression Assignment MemberReference ArraySelector Literal 0 yy MemberReference tmp = IfStatement BinaryOperation == MemberReference j Literal 0 BlockStatement StatementExpression MemberReference ++ zPend BlockStatement IfStatement BinaryOperation > MemberReference zPend Literal 0 BlockStatement StatementExpression MemberReference -- zPend WhileStatement Literal true BlockStatement IfStatement BinaryOperation == BinaryOperation & MemberReference zPend Literal 1 Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference wr sfmap MemberReference RUNA = StatementExpression MemberReference ++ wr StatementExpression MemberReference ++ ArraySelector MemberReference RUNA mtfFreq BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference wr sfmap MemberReference RUNB = StatementExpression MemberReference ++ wr StatementExpression MemberReference ++ ArraySelector MemberReference RUNB mtfFreq IfStatement BinaryOperation >= MemberReference zPend Literal 2 BlockStatement StatementExpression Assignment MemberReference zPend BinaryOperation >> BinaryOperation - MemberReference zPend Literal 2 Literal 1 = BlockStatement BreakStatement StatementExpression Assignment MemberReference zPend Literal 0 = StatementExpression Assignment MemberReference ArraySelector MemberReference wr sfmap Cast BasicType char BinaryOperation + MemberReference j Literal 1 = StatementExpression MemberReference ++ wr StatementExpression MemberReference ++ ArraySelector BinaryOperation + MemberReference j Literal 1 mtfFreq IfStatement BinaryOperation > MemberReference zPend Literal 0 BlockStatement StatementExpression MemberReference -- zPend WhileStatement Literal true BlockStatement IfStatement BinaryOperation == BinaryOperation & MemberReference zPend Literal 1 Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference wr sfmap MemberReference RUNA = StatementExpression MemberReference ++ wr StatementExpression MemberReference ++ ArraySelector MemberReference RUNA mtfFreq BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference wr sfmap MemberReference RUNB = StatementExpression MemberReference ++ wr StatementExpression MemberReference ++ ArraySelector MemberReference RUNB mtfFreq IfStatement BinaryOperation >= MemberReference zPend Literal 2 BlockStatement StatementExpression Assignment MemberReference zPend BinaryOperation >> BinaryOperation - MemberReference zPend Literal 2 Literal 1 = BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference wr sfmap Cast BasicType char MemberReference eob = StatementExpression MemberReference ++ ArraySelector MemberReference eob mtfFreq StatementExpression Assignment This MemberReference nMTF BinaryOperation + MemberReference wr Literal 1 =	1
MethodDeclaration Modifier public ReferenceType Enumeration ReturnStatement MethodInvocation elements	0
MethodDeclaration Modifier public StatementExpression SuperMethodInvocation MemberReference target Literal null	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference value	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getName	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String uri UnsupportedEncodingException IfStatement BinaryOperation == MethodInvocation uri Literal '%' indexOf Literal - 1 BlockStatement ReturnStatement MemberReference uri LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator sb ClassCreator ReferenceType ByteArrayOutputStream MethodInvocation uri length LocalVariableDeclaration ReferenceType VariableDeclarator iter ClassCreator ReferenceType MemberReference uri ForStatement ForControl VariableDeclaration BasicType char VariableDeclarator c MethodInvocation iter first BinaryOperation != MemberReference c MemberReference Assignment MemberReference c MethodInvocation iter next = BlockStatement IfStatement BinaryOperation == MemberReference c Literal '%' BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c1 MethodInvocation iter next IfStatement BinaryOperation != MemberReference c1 MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i1 MethodInvocation Character MemberReference c1 Literal 16 digit LocalVariableDeclaration BasicType char VariableDeclarator c2 MethodInvocation iter next IfStatement BinaryOperation != MemberReference c2 MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i2 MethodInvocation Character MemberReference c2 Literal 16 digit StatementExpression MethodInvocation sb Cast BasicType char BinaryOperation + BinaryOperation << MemberReference i1 Literal 4 MemberReference i2 write BlockStatement StatementExpression MethodInvocation sb MemberReference c write ReturnStatement MethodInvocation sb MemberReference toString	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType String VariableDeclarator buildTestcases MethodInvocation System Literal getProperty StatementExpression MethodInvocation Literal MemberReference buildTestcases assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal "have a dir " MemberReference buildTestcases ClassCreator MethodInvocation isDirectory ReferenceType File MemberReference buildTestcases assertTrue LocalVariableDeclaration ReferenceType VariableDeclarator path ClassCreator ReferenceType MemberReference p BinaryOperation + MemberReference buildTestcases Literal LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator parent ClassCreator ReferenceType LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator acl ClassCreator ReferenceType AntClassLoader MemberReference parent MemberReference p MemberReference path Literal true LocalVariableDeclaration ReferenceType URL VariableDeclarator urlFromPath ClassCreator ReferenceType URL BinaryOperation + BinaryOperation + MethodInvocation FILE_UTILS MemberReference buildTestcases toURI Literal MemberReference TEST_RESOURCE LocalVariableDeclaration ReferenceType URL VariableDeclarator urlFromParent ClassCreator ReferenceType URL BinaryOperation + Literal MemberReference TEST_RESOURCE StatementExpression MethodInvocation Literal resources delegation order)" MethodInvocation Arrays ArrayCreator ReferenceType URL ArrayInitializer MemberReference urlFromParent MemberReference urlFromPath asList MethodInvocation MethodInvocation acl MemberReference TEST_RESOURCE assertEquals StatementExpression Assignment MemberReference acl ClassCreator ReferenceType AntClassLoader MemberReference parent MemberReference p MemberReference path Literal false = StatementExpression MethodInvocation Literal resources delegation order)" MethodInvocation Arrays ArrayCreator ReferenceType URL ArrayInitializer MemberReference urlFromPath MemberReference urlFromParent asList MethodInvocation MethodInvocation acl MemberReference TEST_RESOURCE assertEquals	1
MethodDeclaration Modifier public final FormalParameter ReferenceType filter StatementExpression MethodInvocation filterChains MemberReference filter addElement	0
MethodDeclaration Modifier protected ReferenceType Commandline LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType VariableDeclarator classpath ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation IfStatement BinaryOperation > MethodInvocation p size Literal 0 BlockStatement StatementExpression MethodInvocation classpath MemberReference p append StatementExpression MethodInvocation classpath MemberReference extdirs StatementExpression MethodInvocation classpath MethodInvocation append IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation classpath MemberReference append BlockStatement StatementExpression MethodInvocation classpath MemberReference src append LocalVariableDeclaration ReferenceType String VariableDeclarator exec MethodInvocation MethodInvocation getExecutable StatementExpression MethodInvocation cmd TernaryExpression BinaryOperation == MemberReference exec Literal null Literal MemberReference exec setExecutable IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference destDir createArgument IfStatement BinaryOperation && MethodInvocation ! destDir exists MethodInvocation ! destDir mkdirs BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Can't make output " Literal permission is " StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference classpath setPath createArgument IfStatement BinaryOperation != MemberReference encoding Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + Literal MemberReference encoding setValue createArgument IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MethodInvocation ! BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation MemberReference cmd ReturnStatement MemberReference cmd	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference targetNames executeTargets MemberReference Literal true getProject StatementExpression MethodInvocation Literal "should fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation e MethodInvocation Literal equals getMessage assertTrue StatementExpression MethodInvocation MemberReference Literal 1 assertEquals	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + Literal MemberReference url Literal "]"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal Literal setNewProperty StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal MethodInvocation getSource assertEquals	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Project project LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference project IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference project MemberReference c IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MemberReference o IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation MethodInvocation o getClass isAssignableFrom BlockStatement ReturnStatement MemberReference o LocalVariableDeclaration ReferenceType TypeAdapter VariableDeclarator adapterObject Cast ReferenceType TypeAdapter MethodInvocation MemberReference project MemberReference IfStatement BinaryOperation == MemberReference adapterObject Literal null BlockStatement ReturnStatement Literal null StatementExpression MethodInvocation adapterObject MemberReference o ReturnStatement MemberReference adapterObject	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference footer MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ExtensionSet StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement This MethodInvocation getClass MethodInvocation getName	0
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression Assignment MemberReference toFile MemberReference value =	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator format MethodInvocation StatementExpression MethodInvocation format Literal setProperty StatementExpression MethodInvocation format Literal StatementExpression MethodInvocation format Literal LocalVariableDeclaration ReferenceType Date VariableDeclarator date MethodInvocation Calendar MethodInvocation getInstance StatementExpression MethodInvocation format MemberReference project MemberReference date MemberReference location execute LocalVariableDeclaration ReferenceType String VariableDeclarator today MethodInvocation project Literal getProperty LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal StatementExpression MethodInvocation MethodInvocation TimeZone Literal LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation MemberReference date format StatementExpression MethodInvocation MemberReference expected MemberReference today assertEquals	0
MethodDeclaration Modifier public static ReferenceType String getPathStack FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation path MemberReference File separatorChar Literal '/' replace LocalVariableDeclaration ReferenceType Object VariableDeclarator tokens MethodInvocation StringUtils MethodInvocation toArray MemberReference Literal '/' split LocalVariableDeclaration ReferenceType String VariableDeclarator rv ArrayCreator ReferenceType String MemberReference tokens length StatementExpression MethodInvocation System MemberReference tokens Literal 0 MemberReference rv Literal 0 MemberReference tokens length arraycopy ReturnStatement MemberReference rv	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements LocalVariableDeclaration BasicType boolean VariableDeclarator result WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType FileSelector MethodInvocation e nextElement = IfStatement MemberReference result BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation == MemberReference obj This	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType File out StatementExpression MethodInvocation TernaryExpression BinaryOperation == MemberReference out Literal null Literal null ArrayCreator ReferenceType File ArrayInitializer MemberReference out	0
MethodDeclaration Modifier public SAXException LocalVariableDeclaration ReferenceType VariableDeclarator StatementExpression Assignment MemberReference MethodInvocation Literal = StatementExpression MethodInvocation MemberReference assertNotNull	0
MethodDeclaration Modifier public static ReferenceType File FormalParameter ReferenceType ClassLoader c FormalParameter ReferenceType String resource IfStatement BinaryOperation == MemberReference c Literal null BlockStatement StatementExpression Assignment MemberReference c ClassReference MethodInvocation getClassLoader ReferenceType Locator = LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null IfStatement BinaryOperation == MemberReference c Literal null BlockStatement StatementExpression Assignment MemberReference url MethodInvocation ClassLoader MemberReference resource getSystemResource = BlockStatement StatementExpression Assignment MemberReference url MethodInvocation c MemberReference resource getResource = IfStatement BinaryOperation != MemberReference url Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator u MethodInvocation url toString IfStatement MethodInvocation u Literal "jar:file:" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation u Literal "!" indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator jarName MethodInvocation u Literal 4 MemberReference substring ReturnStatement ClassCreator ReferenceType File MethodInvocation MemberReference jarName fromURI IfStatement MethodInvocation u Literal "file:" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator tail MethodInvocation u MemberReference resource indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator dirName MethodInvocation u Literal 0 MemberReference tail substring ReturnStatement ClassCreator ReferenceType File MethodInvocation MemberReference dirName fromURI ReturnStatement Literal null	1
MethodDeclaration Modifier protected pack LocalVariableDeclaration ReferenceType VariableDeclarator zOut Literal null TryStatement LocalVariableDeclaration ReferenceType BufferedOutputStream VariableDeclarator bos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference zipFile StatementExpression MethodInvocation bos Literal 'B' write StatementExpression MethodInvocation bos Literal 'Z' write StatementExpression Assignment MemberReference zOut ClassCreator ReferenceType MemberReference bos = StatementExpression MethodInvocation MethodInvocation MemberReference zOut CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Problem creating " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference zOut close	1
MethodDeclaration Modifier public synchronized ReferenceType ReturnStatement MemberReference when	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Process p Exception LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator err ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation p getErrorStream LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator line WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation err readLine = Literal null BlockStatement StatementExpression MethodInvocation buf MemberReference line append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier private FormalParameter ReferenceType String msg FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean semantic FormalParameter BasicType boolean FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator iter MethodInvocation ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal getFiles WhileStatement MethodInvocation iter hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator inputFile Cast ReferenceType File MethodInvocation iter nextElement LocalVariableDeclaration ReferenceType File VariableDeclarator workingDir IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference workingDir MethodInvocation inputFile getParentFile = BlockStatement StatementExpression Assignment MemberReference workingDir MethodInvocation FILE_UTILS ClassCreator ReferenceType File Literal "." Literal "." = TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation MemberReference inputFile MemberReference MemberReference MemberReference semantic MemberReference MemberReference IfStatement MethodInvocation ! exists BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p ClassCreator ReferenceType Project LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference p setProject StatementExpression MethodInvocation MemberReference inputFile StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference semantic StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference workingDir StatementExpression MethodInvocation p Literal Literal "foo" setNewProperty StatementExpression MethodInvocation execute LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props ClassCreator ReferenceType FileInputStream MemberReference load StatementExpression MethodInvocation MemberReference msg MemberReference inputFile MemberReference workingDir MemberReference p MemberReference props StatementExpression MethodInvocation MemberReference msg MemberReference inputFile MethodInvocation p CatchClause CatchClauseParameter IOException ex StatementExpression MethodInvocation MethodInvocation ex toString fail	0
MethodDeclaration Modifier private static ReferenceType DocumentBuilder TryStatement ReturnStatement MethodInvocation DocumentBuilderFactory MethodInvocation newDocumentBuilder newInstance CatchClause CatchClauseParameter Exception exc ThrowStatement ClassCreator ReferenceType MemberReference exc	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal TryStatement LocalVariableDeclaration ReferenceType ModifiedSelector ReferenceType VariableDeclarator cacheName ClassCreator ReferenceType ModifiedSelector ReferenceType StatementExpression MethodInvocation cacheName MemberReference name setValue StatementExpression MethodInvocation Literal invalid fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + MemberReference name Literal " is not a value for this attribute" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType arg StatementExpression MethodInvocation args MemberReference arg addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean forceOverwrite StatementExpression Assignment This MemberReference forceOverwrite MemberReference forceOverwrite =	0
MethodDeclaration Modifier public ReferenceType Object next IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! hasNext BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException StatementExpression MethodInvocation This TryStatement ReturnStatement MethodInvocation next IfStatement MethodInvocation ! hasNext BlockStatement StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation This remove	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal false Literal true Literal false Literal false Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation != MemberReference dir Literal null MethodInvocation BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement MethodInvocation ! isEmpty BlockStatement ThrowStatement MethodInvocation StatementExpression SuperMethodInvocation MemberReference r	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected ReferenceType File FormalParameter ReferenceType FormalParameter ReferenceType File srcFile FormalParameter ReferenceType File srcDir FormalParameter ReferenceType File dest IfStatement MethodInvocation ! srcFile MethodInvocation Literal endsWith getName BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference srcFile ReturnStatement ClassCreator ReferenceType File MemberReference dest MemberReference	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType VariableDeclarator parentWrapper MethodInvocation context LocalVariableDeclaration ReferenceType VariableDeclarator wrapper Literal null IfStatement BinaryOperation && Literal false BinaryOperation != MethodInvocation context MethodInvocation getDataTypeDefinitions MethodInvocation MemberReference qname get getProject Literal null BlockStatement BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task Literal null IfStatement BinaryOperation == MemberReference task Literal null BlockStatement StatementExpression Assignment MemberReference task ClassCreator ReferenceType MemberReference qname = StatementExpression MethodInvocation task MethodInvocation context getProject setProject StatementExpression MethodInvocation task MemberReference qname setTaskName LocalVariableDeclaration ReferenceType Location VariableDeclarator location ClassCreator ReferenceType Location MethodInvocation context.locator getSystemId MethodInvocation context.locator getLineNumber MethodInvocation context.locator getColumnNumber StatementExpression MethodInvocation task MemberReference location setLocation StatementExpression MethodInvocation context MemberReference task MemberReference attrs StatementExpression MethodInvocation task MemberReference context currentTarget setOwningTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator parent Literal null IfStatement BinaryOperation != MemberReference parentWrapper Literal null BlockStatement StatementExpression Assignment MemberReference parent MethodInvocation parentWrapper = IfStatement BinaryOperation instanceof MemberReference parent ReferenceType TaskContainer BlockStatement StatementExpression MethodInvocation System.err Literal " println TryStatement ThrowStatement ClassCreator ReferenceType Exception CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace StatementExpression Cast ReferenceType TaskContainer MemberReference parent BlockStatement StatementExpression MethodInvocation MemberReference task StatementExpression MethodInvocation task init StatementExpression Assignment MemberReference wrapper ClassCreator ReferenceType MethodInvocation context getProject MemberReference location MemberReference task MethodInvocation task getTaskName = StatementExpression MethodInvocation wrapper MemberReference attrs IfStatement BinaryOperation != MemberReference parentWrapper Literal null BlockStatement StatementExpression MethodInvocation parentWrapper MemberReference wrapper addChild StatementExpression MethodInvocation context MemberReference wrapper	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration * accessor to proxy * @return the hostname or */ Modifier public ReferenceType String getProxyHost ReturnStatement MemberReference proxyHost	0
MethodDeclaration Modifier public IfStatement BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal isFamily BlockStatement StatementExpression MethodInvocation MemberReference File separator MethodInvocation FILE_UTILS MethodInvocation getPath Literal null Literal "/" assertEquals StatementExpression MethodInvocation MemberReference File separator MethodInvocation FILE_UTILS MethodInvocation getPath Literal null Literal "\\" assertEquals BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference File separator localize MethodInvocation FILE_UTILS MethodInvocation getPath Literal null Literal "/" StatementExpression MethodInvocation MethodInvocation MemberReference File separator localize MethodInvocation FILE_UTILS MethodInvocation getPath Literal null Literal "\\" LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal "/" assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal "\\" assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference Literal "/" assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference Literal "\\" assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal assertEquals IfStatement MethodInvocation Os Literal isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal "/" assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal "\\" assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference Literal "/" assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference Literal "\\" assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal assertEquals IfStatement MethodInvocation ! Os Literal "dos" isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal "user.dir" getProperty StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal "/" assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference driveSpec Literal "\\" assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference Literal "/" assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference MethodInvocation FILE_UTILS MethodInvocation getPath Literal null BinaryOperation + MemberReference Literal "\\" assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals StatementExpression MethodInvocation Literal result but no exception" ClassCreator ReferenceType File MethodInvocation Literal localize MethodInvocation FILE_UTILS ClassCreator ReferenceType File MethodInvocation Literal localize Literal assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType List getChildren ReturnStatement MemberReference children	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier private FormalParameter ReferenceType StringBuffer list StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Execing add " MemberReference P4CmdOpts Literal " " MemberReference addCmd MemberReference list MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s add " MemberReference P4CmdOpts Literal " " MemberReference addCmd MemberReference list ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType String p LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MethodInvocation p MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace IfStatement MethodInvocation pattern MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference pattern Literal "**" += ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 1 Literal 0 Literal 0 Literal 1 Literal 1 Literal 0 Literal 0 StatementExpression MethodInvocation Literal MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType attr StatementExpression Assignment MemberReference MethodInvocation attr resolve =	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = StatementExpression MethodInvocation Literal false setChecked ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier protected setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean useProxy StatementExpression Assignment This MemberReference useProxy MemberReference useProxy =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String varName FormalParameter ReferenceType Object value StatementExpression MethodInvocation project MemberReference varName MethodInvocation value toString setNewProperty	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement BinaryOperation != MethodInvocation project MemberReference Project BlockStatement StatementExpression Assignment This MemberReference MemberReference = BlockStatement StatementExpression MethodInvocation Literal is not supported on java 1.1" MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement BinaryOperation || BinaryOperation != MemberReference loader Literal null BinaryOperation != MemberReference classpath Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public final ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation attributes hashCode	0
MethodDeclaration ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName ReturnStatement ClassCreator ReferenceType File MethodInvocation getDestDir BinaryOperation + MemberReference baseName MemberReference	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "foo" MethodInvocation Jar Literal "foo" Literal null assertEquals StatementExpression MethodInvocation Literal "foo" MethodInvocation Jar BinaryOperation + BinaryOperation + Literal "lib" MemberReference File separatorChar Literal "foo" Literal null assertEquals	0
MethodDeclaration Modifier public BasicType long ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType AttributeList attributes StatementExpression Assignment This MemberReference attributes ClassCreator ReferenceType MemberReference attributes = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attributes getLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation attributes MemberReference i getName MethodInvocation attributes MemberReference i getValue setAttribute	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public test1 LocalVariableDeclaration ReferenceType Timer VariableDeclarator timer ClassCreator ReferenceType Timer StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation timer stop IfStatement MemberReference TRACE StatementExpression MethodInvocation System.out BinaryOperation + Literal " test1 time=" MethodInvocation timer time println StatementExpression MethodInvocation BinaryOperation >= MethodInvocation timer time Literal 0 assertTrue	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier protected ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation MethodInvocation MemberReference append MethodInvocation Literal " " append MethodInvocation MethodInvocation MethodInvocation getSource getTask append MethodInvocation toString IfStatement BinaryOperation != MemberReference component Literal null BlockStatement StatementExpression Assignment MemberReference args BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference component Literal " " MemberReference args = ReturnStatement MemberReference args	0
MethodDeclaration Modifier private setEntityResolver FormalParameter ReferenceType SAXSource source TransformerException LocalVariableDeclaration ReferenceType VariableDeclarator reader MethodInvocation source IfStatement BinaryOperation == MemberReference reader Literal null BlockStatement LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator spFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation spFactory Literal true setNamespaceAware TryStatement StatementExpression Assignment MemberReference reader MethodInvocation spFactory MethodInvocation newSAXParser = CatchClause CatchClauseParameter ParserConfigurationException ex ThrowStatement ClassCreator ReferenceType TransformerException MemberReference ex CatchClause CatchClauseParameter SAXException ex ThrowStatement ClassCreator ReferenceType TransformerException MemberReference ex StatementExpression MethodInvocation reader This setEntityResolver StatementExpression MethodInvocation source MemberReference reader	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference MemberReference s =	0
MethodDeclaration Modifier private tsort FormalParameter ReferenceType String root FormalParameter ReferenceType Hashtable targetTable FormalParameter ReferenceType Hashtable state FormalParameter ReferenceType Stack visiting FormalParameter ReferenceType Vector ret BuildException StatementExpression MethodInvocation state MemberReference root MemberReference VISITING put StatementExpression MethodInvocation visiting MemberReference root push LocalVariableDeclaration ReferenceType Target VariableDeclarator target Cast ReferenceType Target MethodInvocation targetTable MemberReference root get IfStatement BinaryOperation == MemberReference target Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Target \"" StatementExpression MethodInvocation sb MemberReference root append StatementExpression MethodInvocation sb Literal "\" does not exist in the project \"" append StatementExpression MethodInvocation sb MemberReference name append StatementExpression MethodInvocation sb Literal " append StatementExpression MethodInvocation visiting pop IfStatement MethodInvocation ! visiting empty BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator parent Cast ReferenceType String MethodInvocation visiting peek StatementExpression MethodInvocation sb Literal "It is used from target \"" append StatementExpression MethodInvocation sb MemberReference parent append StatementExpression MethodInvocation sb Literal append ThrowStatement ClassCreator ReferenceType BuildException ClassCreator ReferenceType String MemberReference sb ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator en MethodInvocation target getDependencies MethodInvocation en hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cur Cast ReferenceType String MethodInvocation en nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator m Cast ReferenceType String MethodInvocation state MemberReference cur get IfStatement BinaryOperation == MemberReference m Literal null BlockStatement StatementExpression MethodInvocation MemberReference cur MemberReference targetTable MemberReference state MemberReference visiting MemberReference ret tsort IfStatement BinaryOperation == MemberReference m MemberReference VISITING BlockStatement ThrowStatement MethodInvocation MemberReference cur MemberReference visiting LocalVariableDeclaration ReferenceType String VariableDeclarator p Cast ReferenceType String MethodInvocation visiting pop IfStatement BinaryOperation != MemberReference root MemberReference p BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unexpected internal error: expected to " Literal " MemberReference root Literal " but got " MemberReference p StatementExpression MethodInvocation state MemberReference root MemberReference put StatementExpression MethodInvocation ret MemberReference target addElement	1
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Project project FormalParameter ReferenceType String source LocalVariableDeclaration Modifier final ReferenceType Vector VariableDeclarator result ClassCreator ReferenceType Vector IfStatement BinaryOperation == MemberReference source Literal null BlockStatement ReturnStatement ArrayCreator ReferenceType String Literal 0 LocalVariableDeclaration ReferenceType PathTokenizer VariableDeclarator tok ClassCreator ReferenceType PathTokenizer MemberReference source LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator element ClassCreator ReferenceType StringBuffer WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pathElement MethodInvocation tok nextToken TryStatement StatementExpression MethodInvocation element MethodInvocation MethodInvocation getPath MemberReference project MemberReference pathElement append CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal path element " MemberReference pathElement Literal " as it is not valid to the project" MemberReference Project MSG_VERBOSE log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation element length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference element MemberReference i StatementExpression MethodInvocation result MethodInvocation element toString addElement StatementExpression Assignment MemberReference element ClassCreator ReferenceType StringBuffer = LocalVariableDeclaration ReferenceType String VariableDeclarator res ArrayCreator ReferenceType String MethodInvocation result size StatementExpression MethodInvocation result MemberReference res copyInto ReturnStatement MemberReference res	1
MethodDeclaration Modifier public FormalParameter ReferenceType String actions StatementExpression Assignment MemberReference MemberReference actions = IfStatement BinaryOperation > MethodInvocation actions length Literal 0 BlockStatement StatementExpression Assignment This MemberReference actions MethodInvocation MemberReference actions =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference MethodInvocation isEmpty BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal "File attribute not ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation ! exists BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "File '" MemberReference Literal "' does not exist." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation ! isFile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "\'" MemberReference Literal is not a file." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "failure on fail	0
MethodDeclaration Modifier private FormalParameter ReferenceType Properties properties FormalParameter ReferenceType File dir BuildException LocalVariableDeclaration ReferenceType BufferedOutputStream VariableDeclarator bos Literal null TryStatement StatementExpression Assignment MemberReference bos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream ClassCreator ReferenceType File MemberReference dir MemberReference = StatementExpression MethodInvocation properties MemberReference bos BinaryOperation + Literal from " MemberReference dir store CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference bos close	1
MethodDeclaration Modifier public static BasicType byte FormalParameter ReferenceType data LocalVariableDeclaration BasicType int VariableDeclarator sum BinaryOperation * Literal 4 MemberReference data length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference data length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sum MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation getValue data += LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte MemberReference sum LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference data length MemberReference ++ i BlockStatement StatementExpression MethodInvocation System MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation getBytes data Literal 0 MemberReference result MemberReference start Literal 2 arraycopy StatementExpression MethodInvocation System MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation getBytes data Literal 0 MemberReference result BinaryOperation + MemberReference start Literal 2 Literal 2 arraycopy LocalVariableDeclaration BasicType byte VariableDeclarator local MemberReference ArraySelector MemberReference i MethodInvocation data StatementExpression MethodInvocation System MemberReference local Literal 0 MemberReference result BinaryOperation + MemberReference start Literal 4 MemberReference local length arraycopy StatementExpression Assignment MemberReference start BinaryOperation + MemberReference local length Literal 4 += ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror createFormatter FormalParameter ReferenceType ClassLoader loader BuildException IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must type or LocalVariableDeclaration ReferenceType Class VariableDeclarator f Literal null TryStatement IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference f MethodInvocation Class MemberReference classname forName = BlockStatement StatementExpression Assignment MemberReference f MethodInvocation Class MemberReference classname Literal true MemberReference loader forName = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Using loader " MemberReference loader Literal " on class " MemberReference classname Literal ": " MemberReference e MemberReference e CatchClause CatchClauseParameter NoClassDefFoundError e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Using loader " MemberReference loader Literal " on class " MemberReference classname Literal ": " MemberReference e MemberReference e LocalVariableDeclaration ReferenceType Object VariableDeclarator o Literal null TryStatement StatementExpression Assignment MemberReference o MethodInvocation f newInstance = CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation instanceof MemberReference o ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference classname Literal " is not a LocalVariableDeclaration ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror VariableDeclarator r Cast ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror MemberReference o IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference outFile Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference outFile = CatchClause CatchClauseParameter java.io.IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to open file " MemberReference outFile MemberReference e StatementExpression MethodInvocation r MemberReference out ReturnStatement MemberReference r	1
MethodDeclaration Modifier public FormalParameter ReferenceType String cmp StatementExpression MethodInvocation MethodInvocation cmp Literal equals	1
MethodDeclaration Modifier public FormalParameter ReferenceType instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MemberReference more	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public addOr FormalParameter ReferenceType OrSelector selector StatementExpression MethodInvocation fileset MemberReference selector addOr	1
MethodDeclaration Modifier protected ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType SuperMethodInvocation StatementExpression MethodInvocation MemberReference resolver ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType StringBuffer s ThrowStatement ClassCreator ReferenceType NullPointerException	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal "this is a line contains foo" assertStringContains StatementExpression MethodInvocation MemberReference contents Literal "this line does	0
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String tag FormalParameter ReferenceType AttributeList attrs SAXParseException ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected element \"" MemberReference tag Literal "\"" MemberReference helperImpl locator	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference MemberReference s =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier private static BasicType long FormalParameter BasicType long LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar getInstance StatementExpression MethodInvocation cal MemberReference Calendar BinaryOperation + Cast BasicType int BinaryOperation & BinaryOperation >> MemberReference Literal 25 Literal Literal set StatementExpression MethodInvocation cal MemberReference Calendar BinaryOperation - Cast BasicType int BinaryOperation & BinaryOperation >> MemberReference Literal 21 Literal 0x0f Literal 1 set StatementExpression MethodInvocation cal MemberReference Calendar DATE BinaryOperation & Cast BasicType int BinaryOperation >> MemberReference Literal 16 Literal set StatementExpression MethodInvocation cal MemberReference Calendar HOUR_OF_DAY BinaryOperation & Cast BasicType int BinaryOperation >> MemberReference Literal 11 Literal set StatementExpression MethodInvocation cal MemberReference Calendar MINUTE BinaryOperation & Cast BasicType int BinaryOperation >> MemberReference Literal 5 Literal set StatementExpression MethodInvocation cal MemberReference Calendar SECOND BinaryOperation & Cast BasicType int BinaryOperation << MemberReference Literal 1 Literal set ReturnStatement MethodInvocation cal MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType component StatementExpression Assignment MemberReference project MethodInvocation component getProject = StatementExpression MethodInvocation Literal MemberReference project StatementExpression MethodInvocation Literal MemberReference component	0
MethodDeclaration Modifier public FormalParameter ReferenceType String action BuildException StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The method has been deprecated." Literal " Use instead." log LocalVariableDeclaration ReferenceType Action VariableDeclarator a ClassCreator ReferenceType Action StatementExpression MethodInvocation a MemberReference action setValue StatementExpression Assignment This MemberReference action MethodInvocation a getAction =	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project = IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project This	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression MethodInvocation Literal "The type attribute is required" setError	1
MethodDeclaration Modifier public start FormalParameter ReferenceType TestResult result StatementExpression Assignment MemberReference MethodInvocation System currentTimeMillis = StatementExpression MethodInvocation result This	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String bundle StatementExpression Assignment This MemberReference bundle MemberReference bundle =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference next	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType extension IfStatement BinaryOperation != Literal null MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal not extension to " Literal multiple ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression Assignment MemberReference MethodInvocation extension =	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getCompilerVersion IfStatement MemberReference fork BlockStatement IfStatement MethodInvocation MemberReference BlockStatement StatementExpression Assignment MemberReference Literal = BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal compiler setting isn't or Literal "ignoring fork MemberReference Project MSG_WARN log ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Encoding encoding StatementExpression Assignment This MemberReference encoding MethodInvocation encoding getValue =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Project LocalVariableDeclaration ReferenceType Project VariableDeclarator Literal null TryStatement StatementExpression Assignment MemberReference Cast ReferenceType Project MethodInvocation getClass = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference ClassCreator ReferenceType Project = StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public addSelector FormalParameter ReferenceType SelectSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal expectPropertySet	0
MethodDeclaration Modifier public synchronized cancel IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType ClassCreator ReferenceType Integer Literal - 1 MemberReference TryStatement StatementExpression MethodInvocation MemberReference evt CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation ! CollectionUtils Literal null ClassCreator ReferenceType Vector equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils ClassCreator ReferenceType Vector Literal null equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils ClassCreator ReferenceType Vector ClassCreator ReferenceType Vector equals assertTrue LocalVariableDeclaration ReferenceType Vector VariableDeclarator v1 ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Stack VariableDeclarator s2 ClassCreator ReferenceType Stack StatementExpression MethodInvocation v1 Literal "foo" addElement StatementExpression MethodInvocation s2 Literal "foo" push StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference v1 MemberReference s2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference s2 MemberReference v1 equals assertTrue StatementExpression MethodInvocation v1 Literal "bar" addElement StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference v1 MemberReference s2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference s2 MemberReference v1 equals assertTrue StatementExpression MethodInvocation s2 Literal "bar" push StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference v1 MemberReference s2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference s2 MemberReference v1 equals assertTrue StatementExpression MethodInvocation s2 Literal "baz" push StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference v1 MemberReference s2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference s2 MemberReference v1 equals assertTrue StatementExpression MethodInvocation v1 Literal "baz" addElement StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference v1 MemberReference s2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference s2 MemberReference v1 equals assertTrue StatementExpression MethodInvocation v1 Literal addElement StatementExpression MethodInvocation s2 Literal "zyzzy2" push StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference v1 MemberReference s2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference s2 MemberReference v1 equals assertTrue	1
MethodDeclaration Modifier public FormalParameter BasicType boolean alwaysLog IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference alwaysLog TernaryExpression MemberReference alwaysLog MemberReference Boolean TRUE MemberReference Boolean FALSE =	1
MethodDeclaration Modifier public BasicType int size ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef Literal 1	0
MethodDeclaration Modifier public static ReferenceType String format FormalParameter BasicType long date FormalParameter ReferenceType String pattern ReturnStatement MethodInvocation ClassCreator ReferenceType Date MemberReference date MemberReference pattern format	0
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType char buf java.io.IOException ReturnStatement MethodInvocation MemberReference buf Literal 0 MemberReference buf length read	1
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation length Literal 0 BlockStatement ReturnStatement BinaryOperation + Literal MemberReference BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public fail FormalParameter ReferenceType String message ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier private static ReferenceType JUnitTaskMirror FormalParameter ReferenceType task FormalParameter ReferenceType ClassLoader loader TryStatement StatementExpression MethodInvocation loader Literal loadClass CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The for must " Literal "if not in Ant's classpath" MemberReference e MethodInvocation task getLocation TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation loader BinaryOperation + ClassReference MethodInvocation getName ReferenceType JUnitTaskMirror Literal loadClass IfStatement BinaryOperation != MethodInvocation c getClassLoader MemberReference loader BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal loader" MethodInvocation task getLocation LocalVariableDeclaration ReferenceType Constructor VariableDeclarator cons MethodInvocation c ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType getConstructor ReturnStatement Cast ReferenceType JUnitTaskMirror MethodInvocation cons ArrayCreator ReferenceType Object ArrayInitializer MemberReference task newInstance CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation task getLocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String input FormalParameter ReferenceType String argument FormalParameter BasicType int options BuildException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator subst ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation argument length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation argument MemberReference i charAt IfStatement BinaryOperation == MemberReference c Literal '$' BlockStatement StatementExpression MethodInvocation subst Literal '\\' append StatementExpression MethodInvocation subst Literal '$' append IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement IfStatement BinaryOperation < MemberReference ++ i MethodInvocation argument length BlockStatement StatementExpression Assignment MemberReference c MethodInvocation argument MemberReference i charAt = LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation Character MemberReference c Literal 10 digit IfStatement BinaryOperation > MemberReference value Literal - 1 BlockStatement StatementExpression MethodInvocation subst MethodInvocation MemberReference value append Literal "$" append BlockStatement StatementExpression MethodInvocation subst MemberReference c append BlockStatement StatementExpression MethodInvocation subst Literal '\\' append BlockStatement StatementExpression MethodInvocation subst MemberReference c append LocalVariableDeclaration ReferenceType VariableDeclarator s ClassCreator ReferenceType MethodInvocation subst toString MemberReference ReturnStatement MethodInvocation Util MemberReference matcher MethodInvocation MemberReference options getCompiledPattern MemberReference s MemberReference input MethodInvocation MemberReference options	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator savedFile MemberReference file LocalVariableDeclaration ReferenceType File VariableDeclarator MemberReference destFile LocalVariableDeclaration ReferenceType File VariableDeclarator MemberReference destDir LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator savedRc Literal null IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation != MemberReference destFile Literal null BinaryOperation == MethodInvocation rcs size Literal 1 BlockStatement StatementExpression Assignment MemberReference savedRc Cast ReferenceType ResourceCollection MethodInvocation rcs Literal 0 elementAt = StatementExpression MethodInvocation validateAttributes TryStatement IfStatement BinaryOperation != MemberReference file Literal null BlockStatement IfStatement MethodInvocation file exists BlockStatement IfStatement BinaryOperation == MemberReference destFile Literal null BlockStatement StatementExpression Assignment MemberReference destFile ClassCreator ReferenceType File MemberReference destDir MethodInvocation file getName = IfStatement BinaryOperation || BinaryOperation || MemberReference forceOverwrite MethodInvocation ! destFile exists BinaryOperation > BinaryOperation - MethodInvocation file lastModified MemberReference granularity MethodInvocation destFile lastModified BlockStatement StatementExpression MethodInvocation fileCopyMap MethodInvocation file getAbsolutePath ArrayCreator ReferenceType String ArrayInitializer MethodInvocation destFile getAbsolutePath put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference file Literal " as " MemberReference destFile Literal " is up to MemberReference Project MSG_VERBOSE log BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Warning: Could not find file " MethodInvocation file getAbsolutePath Literal " to IfStatement MemberReference ! failonerror BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference message LocalVariableDeclaration ReferenceType HashMap VariableDeclarator filesByBasedir ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType HashMap VariableDeclarator dirsByBasedir ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType HashSet VariableDeclarator baseDirs ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator nonFileResources ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation rcs size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc Cast ReferenceType ResourceCollection MethodInvocation rcs MemberReference i elementAt IfStatement BinaryOperation && BinaryOperation instanceof MemberReference rc ReferenceType FileSet MethodInvocation rc BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MemberReference rc LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds Literal null TryStatement StatementExpression Assignment MemberReference ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner = CatchClause CatchClauseParameter BuildException e IfStatement BinaryOperation || MemberReference failonerror MethodInvocation ! MethodInvocation Literal " not found." endsWith MemberReference e getMessage BlockStatement ThrowStatement MemberReference e BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: " MethodInvocation MemberReference e getMessage MemberReference Project MSG_ERR log ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator fromDir MethodInvocation fs MethodInvocation getProject getDir LocalVariableDeclaration ReferenceType String VariableDeclarator srcFiles MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator srcDirs MethodInvocation ds getIncludedDirectories IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MemberReference ! BinaryOperation == MemberReference Literal null MethodInvocation ds MethodInvocation ! fs BlockStatement StatementExpression MethodInvocation completeDirMap MemberReference fromDir MemberReference destDir put StatementExpression MethodInvocation MemberReference fromDir MemberReference srcFiles MemberReference filesByBasedir add StatementExpression MethodInvocation MemberReference fromDir MemberReference srcDirs MemberReference dirsByBasedir add StatementExpression MethodInvocation baseDirs MemberReference fromDir add BlockStatement IfStatement BinaryOperation && MethodInvocation ! rc MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal resources are LocalVariableDeclaration ReferenceType Iterator VariableDeclarator resources MethodInvocation rc iterator WhileStatement MethodInvocation resources hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation resources next IfStatement MethodInvocation ! r isExists BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator baseDir MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation r getName IfStatement BinaryOperation instanceof MemberReference r ReferenceType FileResource BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr Cast ReferenceType FileResource MemberReference r StatementExpression Assignment MemberReference baseDir MethodInvocation MethodInvocation fr = IfStatement BinaryOperation == MethodInvocation fr Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation fr MethodInvocation getAbsolutePath getFile = IfStatement BinaryOperation || MethodInvocation r isDirectory BinaryOperation instanceof MemberReference r ReferenceType FileResource BlockStatement StatementExpression MethodInvocation MemberReference baseDir MemberReference name TernaryExpression MethodInvocation r isDirectory MemberReference dirsByBasedir MemberReference filesByBasedir add StatementExpression MethodInvocation baseDirs MemberReference baseDir add BlockStatement StatementExpression MethodInvocation nonFileResources MemberReference r add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation baseDirs iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType File MethodInvocation iter next LocalVariableDeclaration ReferenceType List VariableDeclarator files Cast ReferenceType List MethodInvocation filesByBasedir MemberReference f get LocalVariableDeclaration ReferenceType List VariableDeclarator dirs Cast ReferenceType List MethodInvocation dirsByBasedir MemberReference f get LocalVariableDeclaration ReferenceType String VariableDeclarator srcFiles ArrayCreator ReferenceType String Literal 0 IfStatement BinaryOperation != MemberReference files Literal null BlockStatement StatementExpression Assignment MemberReference srcFiles Cast ReferenceType String MethodInvocation files MemberReference srcFiles toArray = LocalVariableDeclaration ReferenceType String VariableDeclarator srcDirs ArrayCreator ReferenceType String Literal 0 IfStatement BinaryOperation != MemberReference dirs Literal null BlockStatement StatementExpression Assignment MemberReference srcDirs Cast ReferenceType String MethodInvocation dirs MemberReference srcDirs toArray = StatementExpression MethodInvocation TernaryExpression BinaryOperation == MemberReference f MemberReference Literal null MemberReference f MemberReference destDir MemberReference srcFiles MemberReference srcDirs TryStatement StatementExpression MethodInvocation CatchClause CatchClauseParameter BuildException e IfStatement MemberReference ! failonerror BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: " MethodInvocation MemberReference e getMessage MemberReference Project MSG_ERR log BlockStatement ThrowStatement MemberReference e IfStatement BinaryOperation > MethodInvocation nonFileResources size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator Cast ReferenceType Resource MethodInvocation nonFileResources ArrayCreator ReferenceType Resource MethodInvocation nonFileResources size toArray LocalVariableDeclaration ReferenceType Map VariableDeclarator map MethodInvocation MemberReference MemberReference destDir TryStatement StatementExpression MethodInvocation MemberReference map CatchClause CatchClauseParameter BuildException e IfStatement MemberReference ! failonerror BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: " MethodInvocation MemberReference e getMessage MemberReference Project MSG_ERR log BlockStatement ThrowStatement MemberReference e StatementExpression Assignment MemberReference file MemberReference savedFile = StatementExpression Assignment MemberReference destFile MemberReference = StatementExpression Assignment MemberReference destDir MemberReference = IfStatement BinaryOperation != MemberReference savedRc Literal null BlockStatement StatementExpression MethodInvocation rcs MemberReference savedRc Literal 0 insertElementAt StatementExpression MethodInvocation fileCopyMap clear StatementExpression MethodInvocation dirCopyMap clear StatementExpression MethodInvocation completeDirMap clear	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name IfStatement MethodInvocation ! MemberReference name BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal name [" MemberReference name Literal "] for attribute" StatementExpression Assignment This MemberReference name MethodInvocation name MemberReference toLowerCase =	0
MethodDeclaration Modifier public BasicType char ReturnStatement MethodInvocation MemberReference next getChar	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project = StatementExpression Assignment MemberReference antTypeTable ClassCreator ReferenceType MemberReference project =	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String branch StatementExpression Assignment MemberReference MemberReference branch =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "no MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator f ClassCreator ReferenceType java ReferenceType io ReferenceType File MethodInvocation Literal IfStatement BinaryOperation || MethodInvocation ! f exists MethodInvocation ! f isDirectory BlockStatement StatementExpression MethodInvocation Literal "mkdir failed" fail BlockStatement StatementExpression MethodInvocation f delete	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal 0 Literal ! MethodInvocation MethodInvocation getExecutable equals BlockStatement ReturnStatement BinaryOperation + Literal MemberReference BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object clone TryStatement ReturnStatement SuperMethodInvocation clone CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + Literal for a Resource " Literal classes must support	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze ClassCreator ReferenceType ZipEntry Literal "foo" StatementExpression MethodInvocation Literal 0 MethodInvocation ze getPlatform assertEquals StatementExpression MethodInvocation ze Literal 0755 setUnixMode StatementExpression MethodInvocation Literal 3 MethodInvocation ze getPlatform assertEquals StatementExpression MethodInvocation Literal 0755 BinaryOperation & BinaryOperation >> MethodInvocation ze getExternalAttributes Literal 16 Literal 0xFFFF assertEquals StatementExpression MethodInvocation Literal 0 BinaryOperation & MethodInvocation ze getExternalAttributes Literal 0xFFFF assertEquals StatementExpression MethodInvocation ze Literal setUnixMode StatementExpression MethodInvocation Literal 3 MethodInvocation ze getPlatform assertEquals StatementExpression MethodInvocation Literal BinaryOperation & BinaryOperation >> MethodInvocation ze getExternalAttributes Literal 16 Literal 0xFFFF assertEquals StatementExpression MethodInvocation Literal 1 BinaryOperation & MethodInvocation ze getExternalAttributes Literal 0xFFFF assertEquals StatementExpression Assignment MemberReference ze ClassCreator ReferenceType ZipEntry Literal = StatementExpression MethodInvocation Literal 0 MethodInvocation ze getPlatform assertEquals StatementExpression MethodInvocation ze Literal setUnixMode StatementExpression MethodInvocation Literal 3 MethodInvocation ze getPlatform assertEquals StatementExpression MethodInvocation Literal BinaryOperation & BinaryOperation >> MethodInvocation ze getExternalAttributes Literal 16 Literal 0xFFFF assertEquals StatementExpression MethodInvocation Literal 0x10 BinaryOperation & MethodInvocation ze getExternalAttributes Literal 0xFFFF assertEquals StatementExpression MethodInvocation ze Literal setUnixMode StatementExpression MethodInvocation Literal 3 MethodInvocation ze getPlatform assertEquals StatementExpression MethodInvocation Literal BinaryOperation & BinaryOperation >> MethodInvocation ze getExternalAttributes Literal 16 Literal 0xFFFF assertEquals StatementExpression MethodInvocation Literal BinaryOperation & MethodInvocation ze getExternalAttributes Literal 0xFFFF assertEquals	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement This MemberReference passFile	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine MethodInvocation StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed executing: " MethodInvocation MemberReference commandLine Literal " With a return code of " MemberReference result ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public setProperty FormalParameter Modifier final ReferenceType String property StatementExpression Assignment This MemberReference propertyName MemberReference property =	0
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out MethodInvocation MethodInvocation getOutputStream getResource IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression Assignment MemberReference out MethodInvocation MemberReference out wrapStream = ReturnStatement MemberReference out	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference charset	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public handleInput FormalParameter ReferenceType InputRequest request BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation props MethodInvocation request getPrompt get IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to find input for MethodInvocation request getPrompt Literal "\'" StatementExpression MethodInvocation request MethodInvocation o toString IfStatement MethodInvocation ! request BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Found invalid input " MemberReference o Literal " for MethodInvocation request getPrompt Literal "\'"	1
MethodDeclaration Modifier public FormalParameter ReferenceType owner StatementExpression Assignment This MemberReference owner MemberReference owner =	1
MethodDeclaration Modifier public setAntRun FormalParameter ReferenceType Project project BuildException StatementExpression Assignment This MemberReference project MemberReference project =	1
MethodDeclaration Modifier private synchronized static ReferenceType Properties FormalParameter BasicType boolean type BuildException LocalVariableDeclaration BasicType int VariableDeclarator idx TernaryExpression MemberReference type Literal 1 Literal 0 IfStatement BinaryOperation == MemberReference ArraySelector MemberReference idx defaultDefinitions Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator resource TernaryExpression MemberReference type MemberReference MagicNames MemberReference MagicNames LocalVariableDeclaration ReferenceType String VariableDeclarator errorString TernaryExpression MemberReference type MemberReference MemberReference LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassReference MethodInvocation MemberReference resource getResourceAsStream ReferenceType ComponentHelper = IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference errorString LocalVariableDeclaration ReferenceType Properties VariableDeclarator p ClassCreator ReferenceType Properties StatementExpression MethodInvocation p MemberReference in load StatementExpression Assignment MemberReference ArraySelector MemberReference idx defaultDefinitions MemberReference p = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference errorString MemberReference e StatementExpression MethodInvocation FileUtils MemberReference in close ReturnStatement MemberReference ArraySelector MemberReference idx defaultDefinitions	1
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType String location StatementExpression Assignment This MemberReference location MemberReference location =	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType When w StatementExpression MethodInvocation Cast ReferenceType MemberReference w	0
MethodDeclaration Modifier private init BuildException IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference runner MethodInvocation helper =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File jarfile BuildException IfStatement BinaryOperation != MethodInvocation MethodInvocation getClassname getCommandLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Cannot use and " Literal in same StatementExpression MethodInvocation MethodInvocation MethodInvocation jarfile getAbsolutePath getCommandLine	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Could not load definitions from resource " expectLogContaining	0
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType MemberReference user MemberReference password	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType long when RemoteException LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar getInstance ReturnStatement MethodInvocation MemberReference cal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation StatementExpression This MemberReference MethodInvocation MemberReference	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation ClassCreator ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType Project setProject StatementExpression MethodInvocation Literal true TryStatement StatementExpression MethodInvocation execute StatementExpression MethodInvocation Literal "should have thrown a build exception" fail CatchClause CatchClauseParameter BuildException ex StatementExpression MethodInvocation BinaryOperation != MethodInvocation ex MethodInvocation Literal "' failed with exit code 2" indexOf getMessage Literal - 1 assertTrue	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration Modifier private ReferenceType Reader getReader IOException IfStatement BinaryOperation && BinaryOperation == MemberReference reader Literal null MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation i next StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation r toLongString MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation r getInputStream StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader TernaryExpression BinaryOperation == MemberReference encoding Literal null ClassCreator ReferenceType InputStreamReader MemberReference is ClassCreator ReferenceType InputStreamReader MemberReference is MemberReference encoding = StatementExpression MethodInvocation Arrays MemberReference lastChars Cast BasicType char Literal 0 fill ReturnStatement MemberReference reader	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal of language attribute not Literal language must be specified" expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation BinaryOperation + Literal "The args attribute is deprecated. " Literal "Please use arg MemberReference Project MSG_WARN log StatementExpression MethodInvocation MethodInvocation createArgument MethodInvocation MemberReference s setLine getCommandLine	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection c StatementExpression Assignment MemberReference rc TernaryExpression BinaryOperation == MemberReference rc Literal null ClassCreator ReferenceType MemberReference rc = StatementExpression MethodInvocation rc MemberReference c add	0
MethodDeclaration Modifier public BasicType boolean FormalParameter Modifier final ReferenceType other LocalVariableDeclaration Modifier final BasicType int VariableDeclarator max MethodInvocation Math MemberReference other.components length MemberReference components length max ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference max MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator component1 TernaryExpression BinaryOperation < MemberReference i MemberReference components length MemberReference ArraySelector MemberReference i components Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator component2 TernaryExpression BinaryOperation < MemberReference i MemberReference other.components length MemberReference other ArraySelector MemberReference i components Literal 0 IfStatement BinaryOperation > MemberReference component2 MemberReference component1 BlockStatement ReturnStatement Literal false IfStatement BinaryOperation < MemberReference component2 MemberReference component1 BlockStatement ReturnStatement Literal true ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String itemString StatementExpression MethodInvocation BinaryOperation + Literal "The items attribute is deprecated. " Literal "Please use the includes attribute." MemberReference Project MSG_WARN log IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference itemString Literal null MethodInvocation itemString Literal "*" equals MethodInvocation itemString Literal "." equals BlockStatement StatementExpression MethodInvocation MethodInvocation Literal "**" setName BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference itemString Literal ", " WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MethodInvocation tok MethodInvocation trim nextToken IfStatement BinaryOperation > MethodInvocation pattern length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference pattern Literal "/**" setName	1
MethodDeclaration Modifier public processDescriptor FormalParameter ReferenceType String FormalParameter ReferenceType SAXParser saxParser StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation BinaryOperation + Literal Tool " MemberReference MemberReference Project MSG_VERBOSE log StatementExpression SuperMethodInvocation MemberReference MemberReference saxParser processDescriptor IfStatement BinaryOperation != MemberReference outputdir Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Deleting temp output directory '" MemberReference outputdir Literal "'." MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference outputdir deleteAllFiles	1
MethodDeclaration Modifier protected scandir FormalParameter ReferenceType File dir FormalParameter ReferenceType String vpath FormalParameter BasicType boolean fast IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "dir must not be IfStatement MethodInvocation ! dir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference dir Literal " doesn't exist." IfStatement MethodInvocation ! dir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference dir Literal " is not a directory." IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference vpath BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newfiles MethodInvocation dir list IfStatement BinaryOperation == MemberReference newfiles Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "IO error scanning directory '" MethodInvocation dir getAbsolutePath Literal "'" IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator noLinks ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference newfiles length MemberReference ++ i BlockStatement TryStatement IfStatement MethodInvocation FILE_UTILS MemberReference dir MemberReference ArraySelector MemberReference i newfiles isSymbolicLink BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MemberReference vpath MemberReference ArraySelector MemberReference i newfiles LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference i newfiles StatementExpression TernaryExpression MethodInvocation file isDirectory MemberReference MemberReference BlockStatement StatementExpression MethodInvocation noLinks MemberReference ArraySelector MemberReference i newfiles addElement CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "IOException caught while checking " Literal "for couldn't get canonical StatementExpression MethodInvocation System.err MemberReference msg println StatementExpression MethodInvocation noLinks MemberReference ArraySelector MemberReference i newfiles addElement StatementExpression Assignment MemberReference newfiles Cast ReferenceType String MethodInvocation noLinks ArrayCreator ReferenceType String MethodInvocation noLinks size toArray = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference newfiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MemberReference vpath MemberReference ArraySelector MemberReference i newfiles LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference i newfiles IfStatement MethodInvocation file isDirectory BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference file MemberReference fast accountForIncludedDir BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference name addElement IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir IfStatement MemberReference ! fast BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir IfStatement MethodInvocation file isFile BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement StatementExpression MethodInvocation MemberReference name MemberReference file BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference name addElement	1
MethodDeclaration Modifier public static ReferenceType ResourceCollection FormalParameter ReferenceType logTo FormalParameter ReferenceType ResourceCollection source FormalParameter ReferenceType mapper FormalParameter ReferenceType targets FormalParameter BasicType long granularity IfStatement BinaryOperation == MethodInvocation source size Literal 0 BlockStatement StatementExpression MethodInvocation logTo Literal "No sources found." MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference NONE StatementExpression Assignment MemberReference source MethodInvocation MemberReference source getInstance = StatementExpression MethodInvocation MemberReference logTo MemberReference source MemberReference granularity logFuture LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation source iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator sr Cast ReferenceType Resource MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator srName MethodInvocation sr getName StatementExpression Assignment MemberReference srName TernaryExpression BinaryOperation == MemberReference srName Literal null MemberReference srName MethodInvocation srName Literal '/' MemberReference File separatorChar replace = LocalVariableDeclaration ReferenceType String VariableDeclarator targetnames Literal null TryStatement StatementExpression Assignment MemberReference targetnames MethodInvocation mapper MemberReference srName mapFileName = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation logTo BinaryOperation + BinaryOperation + BinaryOperation + Literal "Caught " MemberReference e Literal " resource " MemberReference sr MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation || BinaryOperation == MemberReference targetnames Literal null BinaryOperation == MemberReference targetnames length Literal 0 BlockStatement StatementExpression MethodInvocation logTo BinaryOperation + MemberReference sr Literal " skipped - to handle it" MemberReference Project MSG_VERBOSE log ContinueStatement LocalVariableDeclaration ReferenceType VariableDeclarator targetColl ClassCreator ReferenceType ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference targetnames length MemberReference ++ i BlockStatement StatementExpression MethodInvocation targetColl MethodInvocation targets MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separatorChar Literal '/' replace targetnames getResource add LocalVariableDeclaration ReferenceType Restrict VariableDeclarator r ClassCreator ReferenceType Restrict StatementExpression MethodInvocation r ClassCreator ReferenceType And ArrayCreator ReferenceType ResourceSelector ArrayInitializer MemberReference Type FILE ClassCreator ReferenceType ArrayCreator ReferenceType ResourceSelector ArrayInitializer MemberReference ClassCreator ReferenceType MemberReference sr MemberReference granularity add StatementExpression MethodInvocation r MemberReference targetColl add IfStatement BinaryOperation > MethodInvocation r size Literal 0 BlockStatement StatementExpression MethodInvocation result MemberReference sr add LocalVariableDeclaration ReferenceType Resource VariableDeclarator t Cast ReferenceType Resource MethodInvocation r iterator StatementExpression MethodInvocation logTo BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation sr getName Literal " added as " MethodInvocation t getName TernaryExpression MethodInvocation t isExists Literal " is Literal " doesn\'t exist." MemberReference Project MSG_VERBOSE log ContinueStatement StatementExpression MethodInvocation logTo BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation sr getName Literal " as " MethodInvocation targetColl toString TernaryExpression BinaryOperation == MethodInvocation targetColl size Literal 1 Literal " Literal " are " Literal " up to MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MethodInvocation getProject ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException ReturnStatement MethodInvocation project MemberReference buffer MemberReference offset MemberReference length	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "Files MethodInvocation FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String strType IfStatement MethodInvocation strType MethodInvocation Literal equals toLowerCase BlockStatement StatementExpression Assignment MemberReference type MemberReference Arc2D = IfStatement MethodInvocation strType MethodInvocation Literal equals toLowerCase BlockStatement StatementExpression Assignment MemberReference type MemberReference Arc2D PIE = IfStatement MethodInvocation strType MethodInvocation Literal equals toLowerCase BlockStatement StatementExpression Assignment MemberReference type MemberReference Arc2D =	1
MethodDeclaration Modifier public BasicType boolean createNewFile FormalParameter ReferenceType File f IOException ReturnStatement MethodInvocation f createNewFile	0
MethodDeclaration Modifier static protected ReferenceType ZipLong FormalParameter ReferenceType Date time ReturnStatement ClassCreator ReferenceType ZipLong MethodInvocation MethodInvocation time	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier protected BasicType boolean LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator project MethodInvocation getProject IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation project MemberReference getProperty Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation project MemberReference getProperty Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String name SAXException IfStatement MemberReference iasDescriptor BlockStatement StatementExpression MethodInvocation MemberReference currentText BlockStatement StatementExpression MethodInvocation MemberReference currentText LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation name length Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation currentLoc length StatementExpression Assignment MemberReference currentLoc MethodInvocation currentLoc Literal 0 BinaryOperation - MemberReference MemberReference substring =	1
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation next close	0
MethodDeclaration Modifier private BasicType boolean bsGetBit IOException LocalVariableDeclaration BasicType int VariableDeclarator bsLiveShadow This MemberReference bsLive LocalVariableDeclaration BasicType int VariableDeclarator bsBuffShadow This MemberReference bsBuff IfStatement BinaryOperation < MemberReference bsLiveShadow Literal 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator thech This MemberReference in MethodInvocation read IfStatement BinaryOperation < MemberReference thech Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "unexpected end of stream" StatementExpression Assignment MemberReference bsBuffShadow BinaryOperation | BinaryOperation << MemberReference bsBuffShadow Literal 8 MemberReference thech = StatementExpression Assignment MemberReference bsLiveShadow Literal 8 += StatementExpression Assignment This MemberReference bsBuff MemberReference bsBuffShadow = StatementExpression Assignment This MemberReference bsLive BinaryOperation - MemberReference bsLiveShadow Literal 1 = ReturnStatement BinaryOperation != BinaryOperation & BinaryOperation >> MemberReference bsBuffShadow BinaryOperation - MemberReference bsLiveShadow Literal 1 Literal 1 Literal 0	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir BuildException StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot set both dir and src BlockStatement StatementExpression SuperMethodInvocation MemberReference dir StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required attribute expectBuildException	0
MethodDeclaration BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH MemberReference MSVSS MemberReference MSVSS BinaryOperation + MemberReference MSVSS MemberReference DATE BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME MemberReference MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation MemberReference VSS_USERNAME StatementExpression MethodInvocation MemberReference DS_VSS_PROJECT_PATH StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference DATE setDate StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType MSVSS ReferenceType VariableDeclarator ClassCreator ReferenceType MSVSS ReferenceType StatementExpression MethodInvocation MemberReference setValue StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference commandline MethodInvocation = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType ps StatementExpression MethodInvocation MemberReference ps addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference expectBuildException	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting ro project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MemberReference name MemberReference value put LocalVariableDeclaration BasicType boolean VariableDeclarator done This MethodInvocation MemberReference ns MemberReference name MemberReference value Literal false Literal false Literal true IfStatement MemberReference done BlockStatement ReturnStatement StatementExpression MethodInvocation properties MemberReference name MemberReference value put	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Project p BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator systemDefault Literal null IfStatement BinaryOperation == MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference systemDefault MethodInvocation System Literal getProperty = BlockStatement StatementExpression Assignment MemberReference systemDefault MethodInvocation p Literal getProperty = IfStatement BinaryOperation != MemberReference systemDefault Literal null BlockStatement ReturnStatement MethodInvocation MemberReference systemDefault createRegexpInstance LocalVariableDeclaration ReferenceType Throwable VariableDeclarator cause Literal null TryStatement StatementExpression MethodInvocation Literal testAvailability ReturnStatement MethodInvocation Literal createRegexpInstance CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference cause MethodInvocation MemberReference cause MemberReference be BinaryOperation < MethodInvocation JavaEnvUtils Literal 14 orCause = TryStatement StatementExpression MethodInvocation Literal testAvailability ReturnStatement MethodInvocation Literal createRegexpInstance CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference cause MethodInvocation MemberReference cause MemberReference be Literal true orCause = TryStatement StatementExpression MethodInvocation Literal testAvailability ReturnStatement MethodInvocation Literal createRegexpInstance CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference cause MethodInvocation MemberReference cause MemberReference be Literal true orCause = ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No supported expression matcher found" TernaryExpression BinaryOperation != MemberReference cause Literal null BinaryOperation + Literal ": " MemberReference cause Literal "" MemberReference cause	1
MethodDeclaration FormalParameter ReferenceType Vector v LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression MethodInvocation v MethodInvocation MemberReference i elementAt addElement	1
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference buffer MethodInvocation	0
MethodDeclaration Modifier public static BasicType boolean isJavaVersion FormalParameter ReferenceType String version ReturnStatement MethodInvocation javaVersion MemberReference version equals	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter BasicType char c ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation Character MemberReference c isLetterOrDigit BinaryOperation == MemberReference c Literal '.' BinaryOperation == MemberReference c Literal '-'	0
MethodDeclaration Modifier public ReferenceType Throwable getException ReturnStatement MemberReference cause	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference script MemberReference text +=	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType String args FormalParameter ReferenceType file BuildException LocalVariableDeclaration ReferenceType VariableDeclarator parent Cast ReferenceType MethodInvocation MethodInvocation file getParent get IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement StatementExpression Assignment MemberReference parent ClassCreator ReferenceType MethodInvocation file getParent = IfStatement MethodInvocation ! parent BlockStatement StatementExpression MethodInvocation MemberReference parent IfStatement MethodInvocation parent BlockStatement StatementExpression MethodInvocation MemberReference parent checkout StatementExpression MethodInvocation MethodInvocation parent getPath MemberReference parent put StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args MethodInvocation file getAbsolutePath = LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public test2 IOException StatementExpression MethodInvocation Literal "test2" executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType String VariableDeclarator version MethodInvocation manifest StatementExpression MethodInvocation Literal was not created with correct version - " Literal MemberReference version assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean failonerror StatementExpression Assignment This MemberReference failonerror MemberReference failonerror =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fullChecking StatementExpression Assignment This MemberReference fullChecking MemberReference fullChecking =	1
MethodDeclaration Modifier public IOException IfStatement MethodInvocation ! Literal hasRegex ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal assertStringContains StatementExpression MethodInvocation MemberReference contents Literal "this is the StatementExpression MethodInvocation MemberReference contents Literal assertStringContains	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType File leading FormalParameter ReferenceType File path LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation MethodInvocation getAbsolutePath MethodInvocation leading getAbsolutePath normalize LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation MethodInvocation getAbsolutePath MethodInvocation path getAbsolutePath normalize IfStatement MethodInvocation l MemberReference p equals BlockStatement ReturnStatement Literal "" IfStatement MethodInvocation ! l MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference l MemberReference File separator += ReturnStatement TernaryExpression MethodInvocation p MemberReference l startsWith MethodInvocation p MethodInvocation l length substring MemberReference p	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier static protected hbMakeCodeLengths FormalParameter BasicType char len FormalParameter BasicType int freq FormalParameter BasicType int alphaSize FormalParameter BasicType int maxLen LocalVariableDeclaration Modifier final BasicType int VariableDeclarator heap ArrayCreator BasicType int BinaryOperation * MemberReference MAX_ALPHA_SIZE Literal 2 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight ArrayCreator BasicType int BinaryOperation * MemberReference MAX_ALPHA_SIZE Literal 2 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator parent ArrayCreator BasicType int BinaryOperation * MemberReference MAX_ALPHA_SIZE Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference alphaSize BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 weight BinaryOperation << TernaryExpression BinaryOperation == MemberReference ArraySelector MemberReference i freq Literal 0 Literal 1 MemberReference ArraySelector MemberReference i freq Literal 8 = ForStatement ForControl VariableDeclaration BasicType boolean VariableDeclarator tooLong Literal true MemberReference tooLong BlockStatement StatementExpression Assignment MemberReference tooLong Literal false = LocalVariableDeclaration BasicType int VariableDeclarator nNodes MemberReference alphaSize LocalVariableDeclaration BasicType int VariableDeclarator nHeap Literal 0 StatementExpression Assignment MemberReference ArraySelector Literal 0 heap Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 weight Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 parent Literal - 2 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i parent Literal - 1 = StatementExpression MemberReference ++ nHeap StatementExpression Assignment MemberReference ArraySelector MemberReference nHeap heap MemberReference i = LocalVariableDeclaration BasicType int VariableDeclarator zz MemberReference nHeap LocalVariableDeclaration BasicType int VariableDeclarator tmp MemberReference ArraySelector MemberReference zz heap WhileStatement BinaryOperation < MemberReference ArraySelector MemberReference tmp weight MemberReference ArraySelector MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap weight BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap = StatementExpression Assignment MemberReference zz Literal 1 >>= StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = WhileStatement BinaryOperation > MemberReference nHeap Literal 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n1 MemberReference ArraySelector Literal 1 heap StatementExpression Assignment MemberReference ArraySelector Literal 1 heap MemberReference ArraySelector MemberReference nHeap heap = StatementExpression MemberReference -- nHeap LocalVariableDeclaration BasicType int VariableDeclarator yy Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator zz Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator tmp MemberReference ArraySelector Literal 1 heap WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference yy BinaryOperation << MemberReference zz Literal 1 = IfStatement BinaryOperation > MemberReference yy MemberReference nHeap BlockStatement BreakStatement IfStatement BinaryOperation && BinaryOperation < MemberReference yy MemberReference nHeap BinaryOperation < MemberReference ArraySelector MemberReference ArraySelector BinaryOperation + MemberReference yy Literal 1 heap weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement StatementExpression MemberReference ++ yy IfStatement BinaryOperation < MemberReference ArraySelector MemberReference tmp weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector MemberReference yy heap = StatementExpression Assignment MemberReference zz MemberReference yy = StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = LocalVariableDeclaration BasicType int VariableDeclarator MemberReference ArraySelector Literal 1 heap StatementExpression Assignment MemberReference ArraySelector Literal 1 heap MemberReference ArraySelector MemberReference nHeap heap = StatementExpression MemberReference -- nHeap StatementExpression Assignment MemberReference yy Literal 0 = StatementExpression Assignment MemberReference zz Literal 1 = StatementExpression Assignment MemberReference tmp MemberReference ArraySelector Literal 1 heap = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference yy BinaryOperation << MemberReference zz Literal 1 = IfStatement BinaryOperation > MemberReference yy MemberReference nHeap BlockStatement BreakStatement IfStatement BinaryOperation && BinaryOperation < MemberReference yy MemberReference nHeap BinaryOperation < MemberReference ArraySelector MemberReference ArraySelector BinaryOperation + MemberReference yy Literal 1 heap weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement StatementExpression MemberReference ++ yy IfStatement BinaryOperation < MemberReference ArraySelector MemberReference tmp weight MemberReference ArraySelector MemberReference ArraySelector MemberReference yy heap weight BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector MemberReference yy heap = StatementExpression Assignment MemberReference zz MemberReference yy = StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = StatementExpression MemberReference ++ nNodes StatementExpression Assignment MemberReference ArraySelector MemberReference n1 parent Assignment MemberReference ArraySelector MemberReference parent MemberReference nNodes = = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight_n1 MemberReference ArraySelector MemberReference n1 weight LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight_n2 MemberReference ArraySelector MemberReference weight StatementExpression Assignment MemberReference ArraySelector MemberReference nNodes weight BinaryOperation | BinaryOperation + BinaryOperation & MemberReference weight_n1 Literal 0xffffff00 BinaryOperation & MemberReference weight_n2 Literal 0xffffff00 BinaryOperation + Literal 1 TernaryExpression BinaryOperation > BinaryOperation & MemberReference weight_n1 Literal 0x000000ff BinaryOperation & MemberReference weight_n2 Literal 0x000000ff BinaryOperation & MemberReference weight_n1 Literal 0x000000ff BinaryOperation & MemberReference weight_n2 Literal 0x000000ff = StatementExpression Assignment MemberReference ArraySelector MemberReference nNodes parent Literal - 1 = StatementExpression MemberReference ++ nHeap StatementExpression Assignment MemberReference ArraySelector MemberReference nHeap heap MemberReference nNodes = StatementExpression Assignment MemberReference tmp Literal 0 = StatementExpression Assignment MemberReference zz MemberReference nHeap = StatementExpression Assignment MemberReference tmp MemberReference ArraySelector MemberReference zz heap = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator weight_tmp MemberReference ArraySelector MemberReference tmp weight WhileStatement BinaryOperation < MemberReference weight_tmp MemberReference ArraySelector MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap weight BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference ArraySelector BinaryOperation >> MemberReference zz Literal 1 heap = StatementExpression Assignment MemberReference zz Literal 1 >>= StatementExpression Assignment MemberReference ArraySelector MemberReference zz heap MemberReference tmp = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator k MemberReference i ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator parent_k BinaryOperation >= Assignment MemberReference parent_k MemberReference ArraySelector MemberReference k parent = Literal 0 BlockStatement StatementExpression Assignment MemberReference k MemberReference parent_k = StatementExpression MemberReference ++ j StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 len Cast BasicType char MemberReference j = IfStatement BinaryOperation > MemberReference j MemberReference maxLen BlockStatement StatementExpression Assignment MemberReference tooLong Literal true = IfStatement MemberReference tooLong BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference alphaSize MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j BinaryOperation >> MemberReference ArraySelector MemberReference i weight Literal 8 StatementExpression Assignment MemberReference j BinaryOperation + Literal 1 BinaryOperation >> MemberReference j Literal 1 = StatementExpression Assignment MemberReference ArraySelector MemberReference i weight BinaryOperation << MemberReference j Literal 8 =	1
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation MemberReference obj MemberReference methodName invoke	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression MethodInvocation ClassCreator MethodInvocation longValue ReferenceType Long MemberReference ArraySelector MemberReference i MethodInvocation getValue params ContinueStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression Assignment MemberReference skip ClassCreator MethodInvocation longValue ReferenceType Long MemberReference ArraySelector MemberReference i MethodInvocation getValue params = ContinueStatement	1
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference wStack	1
MethodDeclaration Modifier public dispatch FormalParameter ReferenceType listener FormalParameter ReferenceType evt StatementExpression MethodInvocation listener MemberReference evt	0
MethodDeclaration Modifier protected ReferenceType Thread FormalParameter Modifier final ReferenceType TestResult result LocalVariableDeclaration ReferenceType Thread VariableDeclarator worker ClassCreator ReferenceType Thread Literal Test MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MemberReference result run ReturnStatement MemberReference worker	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType Method VariableDeclarator methods MethodInvocation clazz getDeclaredMethods ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methods length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator methodEntry MemberReference ArraySelector MemberReference i methods IfStatement MethodInvocation methodEntry MethodInvocation MemberReference method equals getName BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType Task FormalParameter ReferenceType String taskType BuildException LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference taskType IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal null ClassReference ! ReferenceType Task BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation MemberReference taskType IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Task BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Expected a Task from '" MemberReference taskType Literal "' but got an instance of " MethodInvocation obj MethodInvocation getName getClass Literal " LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MemberReference obj StatementExpression MethodInvocation task MemberReference taskType StatementExpression MethodInvocation task MemberReference taskType setTaskName StatementExpression MethodInvocation project BinaryOperation + Literal " " MemberReference taskType MemberReference Project MSG_DEBUG log ReturnStatement MemberReference task	1
MethodDeclaration Modifier public BasicType int getUid IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType TarFileSet MethodInvocation getCheckedRef ReturnStatement MemberReference uid	0
MethodDeclaration Modifier protected list FormalParameter ReferenceType File reposFile FormalParameter ReferenceType java ReferenceType io ReferenceType File localFile IOException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator status MethodInvocation reposFile getStatus LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Date VariableDeclarator displayDate Literal null IfStatement BinaryOperation == MemberReference status MemberReference Status NEW BlockStatement StatementExpression Assignment MemberReference displayDate ClassCreator ReferenceType java ReferenceType util ReferenceType Date MethodInvocation localFile lastModified = BlockStatement StatementExpression Assignment MemberReference displayDate MethodInvocation reposFile MethodInvocation = StatementExpression MethodInvocation b MethodInvocation Literal ' ' append MethodInvocation MethodInvocation Status MemberReference status name Literal 12 pad append StatementExpression MethodInvocation b MethodInvocation Literal ' ' append MethodInvocation MethodInvocation MemberReference displayDate format append MethodInvocation MethodInvocation MethodInvocation String MethodInvocation reposFile getSize valueOf Literal 9 append MethodInvocation Literal ' ' append MethodInvocation MethodInvocation reposFile getName append MethodInvocation MethodInvocation MethodInvocation reposFile Literal 20 pad append StatementExpression MethodInvocation MethodInvocation b toString log	1
MethodDeclaration Modifier private FormalParameter ReferenceType String name FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation This StatementExpression MethodInvocation Literal null MemberReference name MemberReference value Literal false setProperty	0
MethodDeclaration Modifier private ReferenceType Commandline FormalParameter ReferenceType javah LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation cmd MethodInvocation JavaEnvUtils Literal setExecutable IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation javah createArgument IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation javah createArgument LocalVariableDeclaration ReferenceType VariableDeclarator cp ClassCreator ReferenceType MethodInvocation javah getProject IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cp MethodInvocation javah append StatementExpression Assignment MemberReference cp MethodInvocation cp Literal "ignore" = IfStatement BinaryOperation != MethodInvocation javah Literal null BlockStatement StatementExpression MethodInvocation cp MethodInvocation javah append IfStatement BinaryOperation > MethodInvocation cp size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference cp setPath createArgument IfStatement MethodInvocation ! javah BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation javah StatementExpression MethodInvocation javah MemberReference cmd ReturnStatement MemberReference cmd	1
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference fromPrefix Literal null MethodInvocation ! MethodInvocation MethodInvocation MemberReference fromPrefix modifyName startsWith MemberReference sourceFileName modifyName MethodInvocation ! MethodInvocation MethodInvocation MemberReference fromPostfix modifyName endsWith MemberReference sourceFileName modifyName BlockStatement ReturnStatement Literal null ReturnStatement ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + BinaryOperation + MemberReference MethodInvocation MemberReference sourceFileName MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public BasicType boolean eval BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation getVersion IfStatement BinaryOperation != Literal null MemberReference BlockStatement ReturnStatement MethodInvocation ClassCreator ReferenceType MemberReference IfStatement BinaryOperation != Literal null MemberReference exactly BlockStatement ReturnStatement MethodInvocation ClassCreator ReferenceType MemberReference exactly isEqual ReturnStatement Literal false	1
MethodDeclaration Modifier protected FormalParameter ReferenceType value StatementExpression Assignment MemberReference formatter MemberReference value =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String s1 FormalParameter ReferenceType String s2 IfStatement BinaryOperation && BinaryOperation && BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal isFamily BinaryOperation > MethodInvocation s1 length Literal 0 BinaryOperation > MethodInvocation s2 length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ClassCreator ReferenceType StringBuffer MemberReference s1 LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ClassCreator ReferenceType StringBuffer MemberReference s2 StatementExpression MethodInvocation Literal 0 MethodInvocation Character MethodInvocation s1 Literal 0 charAt toUpperCase StatementExpression MethodInvocation Literal 0 MethodInvocation Character MethodInvocation s2 Literal 0 charAt toUpperCase StatementExpression MethodInvocation MethodInvocation toString MethodInvocation toString assertEquals BlockStatement StatementExpression MethodInvocation MemberReference s1 MemberReference s2 assertEquals	0
MethodDeclaration * Stop the as as * that it may to block on the input * but it will stop the thread as as it gets * or any and it will be marked as * */ Modifier synchronized stop StatementExpression Assignment MemberReference finish Literal true = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference file Literal " doesn\'t exist" MethodInvocation getLocation StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference file createArgument StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier private FormalParameter ReferenceType File file BuildException IfStatement MethodInvocation file exists BlockStatement IfStatement BinaryOperation == MemberReference property Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator checksumFile MethodInvocation MemberReference file IfStatement BinaryOperation || BinaryOperation || MemberReference forceOverwrite MemberReference isCondition BinaryOperation > MethodInvocation file lastModified MethodInvocation checksumFile lastModified BlockStatement StatementExpression MethodInvocation includeFileMap MemberReference file MemberReference checksumFile put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference file Literal " as " MemberReference checksumFile Literal " is up to MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference totalproperty Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator checksum MethodInvocation MemberReference checksumFile readChecksum LocalVariableDeclaration BasicType byte VariableDeclarator digest MethodInvocation MethodInvocation checksum toCharArray StatementExpression MethodInvocation allDigests MemberReference file MemberReference digest put BlockStatement StatementExpression MethodInvocation includeFileMap MemberReference file MemberReference property put BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Could not find file " MethodInvocation file getAbsolutePath Literal " to generate checksum StatementExpression MethodInvocation MemberReference message log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier final static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal "" setValue ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected appendFiles FormalParameter ReferenceType Vector files FormalParameter ReferenceType DirectoryScanner ds LocalVariableDeclaration ReferenceType String VariableDeclarator dsfiles MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dsfiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i dsfiles addElement	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String filename ReturnStatement MethodInvocation MemberReference filename	0
MethodDeclaration Modifier public FormalParameter ReferenceType attr StatementExpression MethodInvocation filter MethodInvocation MethodInvocation attr getValue newInstance	0
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object another IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Comparable MethodInvocation getCheckedRef IfStatement MethodInvocation another MethodInvocation MethodInvocation getClass equals getClass BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator otherjr Cast ReferenceType MemberReference another IfStatement MethodInvocation ! MethodInvocation MethodInvocation otherjr getName equals getName BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation otherjr getName compareTo getName IfStatement BinaryOperation != MemberReference loader MemberReference otherjr loader BlockStatement IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference otherjr loader Literal null BlockStatement ReturnStatement Literal 1 ReturnStatement MethodInvocation loader MethodInvocation MethodInvocation getRefId compareTo getRefId LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator op MethodInvocation otherjr IfStatement BinaryOperation != MemberReference p MemberReference op BlockStatement IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference op Literal null BlockStatement ReturnStatement Literal 1 ReturnStatement MethodInvocation p MethodInvocation MethodInvocation op toString compareTo toString ReturnStatement Literal 0 ReturnStatement SuperMethodInvocation MemberReference another compareTo	1
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference executeTarget StatementExpression MethodInvocation Literal log to not have MethodInvocation MethodInvocation getLog assertFalse	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference	0
MethodDeclaration Modifier public addSize FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType File location BuildException StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference location setLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String cond StatementExpression Assignment MemberReference ifCond MemberReference cond =	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == MemberReference zipFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is required" MethodInvocation getLocation IfStatement MethodInvocation zipFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal attribute must not " Literal a MethodInvocation getLocation IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "src attribute or resource Literal " required" MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation == MemberReference src Literal null	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getViewPathBasename ReturnStatement ClassCreator MethodInvocation getName ReferenceType File MemberReference	0
MethodDeclaration Modifier private IfStatement BinaryOperation != MemberReference Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference numThreads BinaryOperation * MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getLocation ReturnStatement MemberReference location	0
MethodDeclaration Modifier public ReferenceType createPath IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MemberReference path	0
MethodDeclaration Modifier public static FormalParameter Modifier final ReferenceType Extension extension FormalParameter Modifier final ReferenceType String prefix FormalParameter Modifier final ReferenceType Attributes attributes StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MethodInvocation extension LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator specificationVendor MethodInvocation extension IfStatement BinaryOperation != Literal null MemberReference specificationVendor BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MemberReference specificationVendor LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator specificationVersion MethodInvocation extension IfStatement BinaryOperation != Literal null MemberReference specificationVersion BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MethodInvocation specificationVersion toString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation extension IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator implementationVendor MethodInvocation extension IfStatement BinaryOperation != Literal null MemberReference implementationVendor BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MemberReference implementationVendor LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator implementationVersion MethodInvocation extension IfStatement BinaryOperation != Literal null MemberReference implementationVersion BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MethodInvocation implementationVersion toString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation extension IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + MemberReference prefix MemberReference MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation out Literal "." print IfStatement BinaryOperation > MemberReference ++ dots Literal 50 BlockStatement StatementExpression MethodInvocation out flush StatementExpression Assignment MemberReference dots Literal 0 =	1
MethodDeclaration Modifier private synchronized ReferenceType List ReturnStatement TernaryExpression BinaryOperation == MemberReference rc Literal null MemberReference Collections EMPTY_LIST MemberReference rc	0
MethodDeclaration Modifier public FormalParameter ReferenceType String pathElement BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator pathComponent TernaryExpression BinaryOperation != MemberReference project Literal null MethodInvocation project MemberReference pathElement ClassCreator ReferenceType File MemberReference pathElement TryStatement StatementExpression MethodInvocation MemberReference pathComponent CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier protected ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator sources Cast ReferenceType Vector MethodInvocation filesets clone IfStatement BinaryOperation != MemberReference jar Literal null BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator sourceJar ClassCreator ReferenceType FileSet StatementExpression MethodInvocation sourceJar MethodInvocation getProject setProject StatementExpression MethodInvocation sourceJar MemberReference jar StatementExpression MethodInvocation sourceJar MethodInvocation jar getParentFile StatementExpression MethodInvocation sources MemberReference sourceJar add ReturnStatement MemberReference sources	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal name must not be empty" expectBuildException	0
MethodDeclaration * add a line tokenizer - this is the * @param tokenizer the line */ Modifier public FormalParameter ReferenceType LineTokenizer tokenizer StatementExpression MethodInvocation MemberReference tokenizer add	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator propertiesFile Literal null IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference propertiesFile ClassCreator ReferenceType File MemberReference MemberReference = IfStatement MethodInvocation ! propertiesFile exists BlockStatement StatementExpression Assignment MemberReference propertiesFile MethodInvocation MethodInvocation MemberReference getProject = IfStatement MethodInvocation ! propertiesFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal file " MemberReference Literal " not found in home " MemberReference Literal " or as absolute file" LocalVariableDeclaration ReferenceType Java VariableDeclarator ClassCreator ReferenceType Java This StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference setClassname LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression MethodInvocation MethodInvocation MemberReference setLine createJvmarg StatementExpression MethodInvocation MethodInvocation MemberReference setLine createArg IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation MemberReference classpath IfStatement BinaryOperation != MethodInvocation executeJava Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal of server failed"	0
MethodDeclaration Modifier private BasicType long calcChecksum FormalParameter ReferenceType InputStream in IOException LocalVariableDeclaration ReferenceType CRC32 VariableDeclarator crc ClassCreator ReferenceType CRC32 LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference buffer length LocalVariableDeclaration BasicType int VariableDeclarator count Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 WhileStatement BinaryOperation > Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference len read = Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference count += StatementExpression MethodInvocation crc MemberReference buffer Literal 0 MemberReference count update StatementExpression MethodInvocation in close ReturnStatement MethodInvocation crc getValue	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean mkdirs StatementExpression Assignment This MemberReference mkdirs MemberReference mkdirs =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String proc Exception LocalVariableDeclaration ReferenceType String VariableDeclarator classname IfStatement MethodInvocation proc MemberReference equals BlockStatement StatementExpression Assignment MemberReference classname MemberReference = BlockStatement StatementExpression Assignment MemberReference classname MemberReference proc = LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation MemberReference classname loadClass StatementExpression Assignment MemberReference liaison Cast ReferenceType MethodInvocation clazz newInstance =	1
MethodDeclaration Modifier public IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html" BlockStatement StatementExpression MethodInvocation Literal "No file index file found" fail	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public ReferenceType String getFile ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must not be null" BlockStatement StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Iterator iterator StatementExpression MethodInvocation Literal log ReturnStatement Literal null	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target java.io.IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation Literal "File content after MethodInvocation FILE_UTILS MethodInvocation project Literal MethodInvocation project Literal assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType other FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot append to a reference" LocalVariableDeclaration ReferenceType Pattern VariableDeclarator incl MethodInvocation other MemberReference p IfStatement BinaryOperation != MemberReference incl Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference incl length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne MethodInvocation StatementExpression MethodInvocation ne MemberReference ArraySelector MemberReference i MethodInvocation incl setName StatementExpression MethodInvocation ne MemberReference ArraySelector MemberReference i MethodInvocation incl LocalVariableDeclaration ReferenceType Pattern VariableDeclarator excl MethodInvocation other MemberReference p IfStatement BinaryOperation != MemberReference excl Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference excl length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne MethodInvocation StatementExpression MethodInvocation ne MemberReference ArraySelector MemberReference i MethodInvocation excl setName StatementExpression MethodInvocation ne MemberReference ArraySelector MemberReference i MethodInvocation incl	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType File value StatementExpression Assignment MemberReference parts ArrayCreator ReferenceType String ArrayInitializer MethodInvocation value getAbsolutePath =	0
MethodDeclaration Modifier public characters FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator s ClassCreator MethodInvocation trim ReferenceType String MemberReference buf MemberReference start MemberReference count IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected text \"" MemberReference s Literal "\"" MemberReference helperImpl locator	1
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal Literal setNewProperty StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal MethodInvocation assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference ClassCreator ReferenceType StringBuffer MemberReference =	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument IfStatement BinaryOperation != MethodInvocation getTask Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getTask setValue createArgument IfStatement BinaryOperation != MethodInvocation getFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation file getAbsolutePath setValue createArgument	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType r IfStatement BinaryOperation != MemberReference url Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public testParagraphCharacter IOException TryStatement StatementExpression SuperMethodInvocation testParagraphCharacter StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier protected handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement IfStatement Literal MethodInvocation MemberReference ArraySelector Literal 0 args equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference os MemberReference System out = IfStatement Literal MethodInvocation MemberReference ArraySelector Literal 0 args equalsIgnoreCase "err" BlockStatement StatementExpression Assignment MemberReference os MemberReference System err = IfStatement Literal MethodInvocation MemberReference ArraySelector Literal 0 args equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType TeeOutputStream MemberReference System out MemberReference System err = IfStatement BinaryOperation != MemberReference os Literal null BlockStatement LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread ClassCreator ReferenceType StreamPumper MemberReference System in MemberReference os Literal true StatementExpression MethodInvocation t start TryStatement StatementExpression MethodInvocation t join CatchClause CatchClauseParameter InterruptedException	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator s LocalVariableDeclaration ReferenceType String VariableDeclarator results LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator directory ClassCreator ReferenceType ReferenceType StatementExpression MethodInvocation directory Literal setValue LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator file ClassCreator ReferenceType ReferenceType StatementExpression MethodInvocation file Literal "file" setValue TryStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference directory StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType MethodInvocation getInstance = StatementExpression MethodInvocation s MemberReference file StatementExpression Assignment MemberReference results MethodInvocation MemberReference s = StatementExpression MethodInvocation Literal MemberReference results assertEquals StatementExpression MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal is indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal is indexOf getLog Literal - 1 assertTrue StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal is 1" indexOf getLog Literal - 1 assertTrue	0
MethodDeclaration Modifier public static ReferenceType String getPath FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference MemberReference File separator LocalVariableDeclaration ReferenceType String VariableDeclarator path ArrayCreator ReferenceType String MethodInvocation tokenizer countTokens LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement MethodInvocation tokenizer hasMoreTokens BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i path MethodInvocation tokenizer nextToken = StatementExpression MemberReference ++ i ReturnStatement MemberReference path	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression SuperMethodInvocation MemberReference project setProject StatementExpression MethodInvocation fileset MemberReference project setProject	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression MethodInvocation redirector MemberReference append StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType FTPFile array FormalParameter ReferenceType String directory IfStatement BinaryOperation == MemberReference array Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator candidateFound Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator target Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator icounter Literal 0 BinaryOperation < MemberReference icounter MemberReference array length MemberReference ++ icounter BlockStatement IfStatement MemberReference ArraySelector MemberReference icounter MethodInvocation isDirectory array BlockStatement IfStatement BinaryOperation && MemberReference ! ArraySelector MemberReference icounter MethodInvocation getName MethodInvocation Literal "." equals array MemberReference ! ArraySelector MemberReference icounter MethodInvocation getName MethodInvocation Literal ".." equals array BlockStatement StatementExpression Assignment MemberReference candidateFound Literal true = StatementExpression Assignment MemberReference target MethodInvocation MemberReference ArraySelector MemberReference icounter MethodInvocation getName array = StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "will try to cd to " MemberReference target Literal " where a directory " MemberReference ArraySelector MemberReference icounter MethodInvocation getName array Literal " exists" MemberReference Project MSG_DEBUG log getProject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator pcounter Literal 0 BinaryOperation < MemberReference pcounter MemberReference array length MemberReference ++ pcounter BlockStatement IfStatement BinaryOperation && MemberReference ArraySelector MemberReference pcounter MethodInvocation getName MethodInvocation MemberReference target equals array BinaryOperation != MemberReference pcounter MemberReference icounter BlockStatement StatementExpression Assignment MemberReference candidateFound Literal false = IfStatement MemberReference candidateFound BlockStatement BreakStatement IfStatement MemberReference candidateFound BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal attempting to cd to " MemberReference target MemberReference Project MSG_DEBUG log getProject StatementExpression Assignment MemberReference remoteSystemCaseSensitive MethodInvocation ! ftp MemberReference target changeWorkingDirectory = CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference remoteSystemCaseSensitive Literal true = TryStatement StatementExpression MethodInvocation ftp MemberReference directory changeWorkingDirectory CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "remote system is : " MemberReference remoteSystemCaseSensitive MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation BinaryOperation + Literal -- " MethodInvocation event getTask MemberReference Project MSG_DEBUG log	1
MethodDeclaration processUncontrolledItems BuildException IfStatement This MethodInvocation isActive BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e This MethodInvocation keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator local Cast ReferenceType java ReferenceType io ReferenceType File MethodInvocation e nextElement StatementExpression MethodInvocation MemberReference local delete	1
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper mapper StatementExpression MethodInvocation MethodInvocation mapper add	0
MethodDeclaration Modifier protected ReferenceType BuildException ReturnStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "This data type contains a " Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression MethodInvocation MemberReference value MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files MethodInvocation StatementExpression MethodInvocation Literal did not correct number of files" BinaryOperation <= MethodInvocation files size Literal 2 assertTrue StatementExpression MethodInvocation Literal "Result did not contain MethodInvocation files Literal containsKey assertTrue	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation MemberReference pattern MemberReference str Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType String startToken StatementExpression Assignment This MemberReference startToken MemberReference startToken =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MethodInvocation MemberReference toLowerCase =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference MemberReference fail =	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement MemberReference filtering	0
MethodDeclaration Modifier public FormalParameter ReferenceType ClassLoader loader StatementExpression Assignment MemberReference MemberReference loader =	0
MethodDeclaration Modifier private static getExtension FormalParameter Modifier final ReferenceType Attributes attributes FormalParameter Modifier final ReferenceType ArrayList required FormalParameter Modifier final ReferenceType Attributes ReferenceType Name LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator names MethodInvocation attributes MemberReference getValue IfStatement BinaryOperation == Literal null MemberReference names BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation MemberReference names Literal " " split ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator prefix BinaryOperation + MemberReference ArraySelector MemberReference i Literal "-" LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MethodInvocation MemberReference prefix MemberReference attributes getExtension IfStatement BinaryOperation != Literal null MemberReference extension BlockStatement StatementExpression MethodInvocation required MemberReference extension add	0
MethodDeclaration Modifier protected doExecute BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator elems MethodInvocation MethodInvocation elements getFiles StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MethodInvocation files size Literal " log WhileStatement MethodInvocation elems hasMoreElements BlockStatement StatementExpression MethodInvocation MemberReference options Cast ReferenceType MethodInvocation elems nextElement execute	0
MethodDeclaration * attribute - to * the line ending with the or to * it in the * default * @param if true and in the */ Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getPassword ReturnStatement MemberReference password	0
MethodDeclaration Modifier public addNot FormalParameter ReferenceType NotSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public synchronized ReferenceType String getResult StatementExpression Assignment MemberReference loop Literal false = ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "none" Literal Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator baseDir MethodInvocation MethodInvocation Literal "basedir" getProperty getProject TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation FILE_UTILS BinaryOperation + MemberReference baseDir Literal toURI StatementExpression MethodInvocation MethodInvocation Literal MemberReference uri setNewProperty getProject CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression MethodInvocation Literal "test5" Literal is expectLog	0
MethodDeclaration Modifier public setString FormalParameter ReferenceType String string StatementExpression Assignment This MemberReference string MemberReference string =	0
MethodDeclaration Modifier private BasicType boolean LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmdl ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType String VariableDeclarator result StatementExpression MethodInvocation cmdl MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation cmdl MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmdl MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmdl MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmdl MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmdl MethodInvocation MethodInvocation getViewPath setValue createArgument StatementExpression Assignment MemberReference result MethodInvocation MemberReference cmdl = ReturnStatement TernaryExpression BinaryOperation && BinaryOperation != MemberReference result Literal null BinaryOperation > MethodInvocation result length Literal 0 Literal true Literal false	1
MethodDeclaration Modifier public ReferenceType String toString IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement MemberReference address BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference name Literal " <" MemberReference address Literal ">"	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType r IfStatement BinaryOperation == MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation init StatementExpression MethodInvocation callee MemberReference r	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference targetNames executeTargets Literal null Literal true getProject StatementExpression MethodInvocation Literal "should fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation e MethodInvocation Literal equals getMessage assertTrue StatementExpression MethodInvocation MemberReference Literal 1 assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType CommandlineJava cmd FormalParameter ReferenceType String argument FormalParameter ReferenceType File file IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference argument setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference file createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "" getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String enc StatementExpression MethodInvocation StatementExpression Assignment This MemberReference encoding MemberReference enc =	0
MethodDeclaration Modifier private ReferenceType XClass LocalVariableDeclaration ReferenceType XClass VariableDeclarator clazz Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation MethodInvocation getName IfStatement BinaryOperation || BinaryOperation || MethodInvocation methodName Literal "addConfigured" startsWith MethodInvocation methodName Literal startsWith MethodInvocation methodName Literal "create" startsWith BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation MethodInvocation getReturnType MethodInvocation getType = IfStatement Literal MethodInvocation MethodInvocation clazz getName equals "void" BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator params MethodInvocation MethodInvocation getParameters IfStatement BinaryOperation == MethodInvocation params size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation params iterator StatementExpression Assignment MemberReference clazz Cast ReferenceType MethodInvocation it next = ReturnStatement MemberReference clazz	0
MethodDeclaration Modifier private BasicType boolean valid FormalParameter ReferenceType Project p IfStatement BinaryOperation && BinaryOperation != MemberReference ifCond Literal null BinaryOperation == MethodInvocation p MemberReference ifCond getProperty Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference unlessCond Literal null BinaryOperation != MethodInvocation p MemberReference unlessCond getProperty Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "foo has been properly Literal	0
MethodDeclaration Modifier public static BasicType byte FormalParameter ReferenceType data LocalVariableDeclaration BasicType int VariableDeclarator sum BinaryOperation * Literal 4 MemberReference data length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference data length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sum MemberReference ArraySelector MemberReference i MethodInvocation getLocalFileDataLength MethodInvocation getValue data += LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte MemberReference sum LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference data length MemberReference ++ i BlockStatement StatementExpression MethodInvocation System MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation getBytes data Literal 0 MemberReference result MemberReference start Literal 2 arraycopy StatementExpression MethodInvocation System MemberReference ArraySelector MemberReference i MethodInvocation getLocalFileDataLength MethodInvocation getBytes data Literal 0 MemberReference result BinaryOperation + MemberReference start Literal 2 Literal 2 arraycopy LocalVariableDeclaration BasicType byte VariableDeclarator local MemberReference ArraySelector MemberReference i MethodInvocation data StatementExpression MethodInvocation System MemberReference local Literal 0 MemberReference result BinaryOperation + MemberReference start Literal 4 MemberReference local length arraycopy StatementExpression Assignment MemberReference start BinaryOperation + MemberReference local length Literal 4 += ReturnStatement MemberReference result	1
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal Literal setNewProperty StatementExpression MethodInvocation Literal MethodInvocation getSource assertEquals	0
MethodDeclaration IOException LocalVariableDeclaration ReferenceType String VariableDeclarator local MethodInvocation InetAddress MethodInvocation getHostName LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference local MemberReference ok send	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal name: " MemberReference name Literal "\n\r " MemberReference home Literal "\n\r " MemberReference remote Literal "\n\r " MemberReference implementation Literal "\n\r " MemberReference Literal "\n\r " MemberReference beantype Literal "\n\r " MemberReference cmp Literal "\n\r " MemberReference Literal "\n\r " MemberReference LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation cmpDescriptors iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal "\n\r CMP " MethodInvocation i next += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation == MemberReference targetdir Literal null BlockStatement StatementExpression MethodInvocation Literal "The targetdir attribute is required." setError IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference map ClassCreator ReferenceType IdentityMapper = BlockStatement StatementExpression Assignment MemberReference map MethodInvocation = IfStatement BinaryOperation == MemberReference map Literal null BlockStatement StatementExpression MethodInvocation Literal "Could not set setError	1
MethodDeclaration Modifier public ReferenceType Source resolve FormalParameter ReferenceType String href FormalParameter ReferenceType String base TransformerException LocalVariableDeclaration ReferenceType SAXSource VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source Literal null StatementExpression MethodInvocation processExternalCatalogs LocalVariableDeclaration ReferenceType VariableDeclarator matchingEntry MethodInvocation MemberReference href IfStatement BinaryOperation != MemberReference matchingEntry Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Matching catalog entry found for uri: '" MethodInvocation matchingEntry getPublicId Literal "' location: '" MethodInvocation matchingEntry getLocation Literal "'" MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType VariableDeclarator entryCopy MemberReference matchingEntry IfStatement BinaryOperation != MemberReference base Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator baseURL ClassCreator ReferenceType URL MemberReference base StatementExpression Assignment MemberReference entryCopy ClassCreator ReferenceType = StatementExpression MethodInvocation entryCopy MemberReference baseURL setBase CatchClause CatchClauseParameter MalformedURLException ex StatementExpression MethodInvocation entryCopy MethodInvocation matchingEntry getPublicId StatementExpression MethodInvocation entryCopy MethodInvocation matchingEntry getLocation setLocation StatementExpression Assignment MemberReference source MethodInvocation MemberReference entryCopy filesystemLookup = IfStatement BinaryOperation == MemberReference source Literal null BlockStatement StatementExpression Assignment MemberReference source MethodInvocation MemberReference entryCopy classpathLookup = IfStatement BinaryOperation != MemberReference source Literal null BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType SAXSource MemberReference source = BlockStatement TryStatement StatementExpression Assignment MemberReference result Cast ReferenceType SAXSource MethodInvocation resolve MemberReference resolverImpl ArrayCreator ReferenceType Object ArrayInitializer MemberReference href MemberReference base invoke = CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex BlockStatement TryStatement StatementExpression Assignment MemberReference result Cast ReferenceType SAXSource MethodInvocation resolve MemberReference resolverImpl ArrayCreator ReferenceType Object ArrayInitializer MemberReference href MemberReference base invoke = CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex ReturnStatement MemberReference result	1
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal element must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation == Literal null MemberReference MethodInvocation isEmpty BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal "File attribute not ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation ! exists BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "File '" MemberReference Literal "' does not exist." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference MethodInvocation ! isFile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "\'" MemberReference Literal is not a file." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier protected setUp StatementExpression Assignment MemberReference watchdog ClassCreator ReferenceType MemberReference =	0
MethodDeclaration Modifier public setFlags FormalParameter ReferenceType String flags StatementExpression Assignment This MemberReference flags MemberReference flags =	0
MethodDeclaration Modifier protected FormalParameter BasicType int fileProcessed StatementExpression MethodInvocation BinaryOperation + MemberReference fileProcessed MemberReference log	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal after Literal 0 MemberReference l length assertEquals StatementExpression MethodInvocation p Literal "" setPath StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 0 MemberReference l length assertEquals StatementExpression MethodInvocation p ClassCreator ReferenceType MemberReference project append StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 0 MemberReference l length assertEquals StatementExpression MethodInvocation p createPath StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 0 MemberReference l length assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType pc StatementExpression Assignment This MemberReference MemberReference pc =	0
MethodDeclaration Modifier public FormalParameter ReferenceType format StatementExpression Assignment This MemberReference format MethodInvocation format getIndex =	0
MethodDeclaration Modifier public BasicType int getPosition IfStatement BinaryOperation == MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MemberReference executable Literal null Literal 0 Literal 1 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference position MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator arg Cast ReferenceType MethodInvocation arguments MemberReference i elementAt StatementExpression Assignment MemberReference MethodInvocation arg MemberReference length += ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String operation StatementExpression Assignment This MemberReference operation MemberReference operation = StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MethodInvocation getValue equalsIgnoreCase	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Vector StatementExpression Assignment This MemberReference MemberReference =	1
MethodDeclaration Modifier protected execute FormalParameter ReferenceType List tests BuildException LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator test Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator casesFile MethodInvocation Literal createTempPropertiesFile LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer Literal null TryStatement StatementExpression Assignment MemberReference writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType FileWriter MemberReference casesFile = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation tests iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference test Cast ReferenceType JUnitTest MethodInvocation iter next = StatementExpression MethodInvocation writer MethodInvocation test getName print IfStatement BinaryOperation == MethodInvocation test Literal null BlockStatement StatementExpression MethodInvocation writer BinaryOperation + Literal "," MethodInvocation MethodInvocation Literal "." getProject print BlockStatement StatementExpression MethodInvocation writer BinaryOperation + Literal "," MethodInvocation test print IfStatement BinaryOperation == MethodInvocation test Literal null BlockStatement StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + Literal "," Literal MethodInvocation test getName println BlockStatement StatementExpression MethodInvocation writer BinaryOperation + Literal "," MethodInvocation test println StatementExpression MethodInvocation writer flush StatementExpression MethodInvocation writer close StatementExpression Assignment MemberReference writer Literal null = LocalVariableDeclaration ReferenceType VariableDeclarator watchdog MethodInvocation LocalVariableDeclaration ReferenceType TestResultHolder VariableDeclarator result MethodInvocation MemberReference test MemberReference watchdog MemberReference casesFile executeAsForked StatementExpression MethodInvocation MemberReference result MemberReference test Literal CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference writer Literal null BlockStatement StatementExpression MethodInvocation writer close TryStatement StatementExpression MethodInvocation casesFile delete CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation MethodInvocation e toString MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference file createArgument	0
MethodDeclaration Modifier protected FormalParameter ReferenceType command FormalParameter ReferenceType resource StatementExpression MethodInvocation resource MethodInvocation getProject MemberReference command Literal true getParameters	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Properties VariableDeclarator MethodInvocation System getProperties LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation propertyNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MemberReference propertyName getProperty StatementExpression This MethodInvocation MemberReference propertyName MemberReference value	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate IfStatement MethodInvocation ! BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation selectorElements IfStatement MethodInvocation ! e hasMoreElements BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType FileSelector VariableDeclarator f Cast ReferenceType FileSelector MethodInvocation e nextElement ReturnStatement MethodInvocation f MemberReference basedir MemberReference filename MemberReference file isSelected	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation archive close	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType equals getClass	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException ReturnStatement MethodInvocation MethodInvocation MemberReference buffer MemberReference offset MemberReference length getProject	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal "#" StatementExpression MethodInvocation MemberReference contents Literal "*" StatementExpression MethodInvocation MemberReference contents Literal "This is some " assertStringContains	0
MethodDeclaration Modifier public synchronized BasicType long getLastModified IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef IfStatement MethodInvocation ! Literal false isExists BlockStatement ReturnStatement Literal 0L ReturnStatement MethodInvocation conn getLastModified	1
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MethodInvocation Literal println	0
MethodDeclaration Modifier public taskFinished FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile ClassCreator ReferenceType ZipFile ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation BinaryOperation != MethodInvocation zipFile Literal getEntry Literal null assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation zipFile Literal getEntry Literal null assertTrue StatementExpression MethodInvocation BinaryOperation != MethodInvocation zipFile Literal getEntry Literal null assertTrue StatementExpression MethodInvocation BinaryOperation == MethodInvocation zipFile Literal getEntry Literal null assertTrue StatementExpression MethodInvocation BinaryOperation == MethodInvocation zipFile Literal getEntry Literal null assertTrue StatementExpression MethodInvocation zipFile close	1
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType Process VariableDeclarator process MethodInvocation BinaryOperation * MemberReference Literal 2 getProcess LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis StatementExpression MethodInvocation watchdog MemberReference process start LocalVariableDeclaration BasicType int VariableDeclarator retCode MethodInvocation process waitFor LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation - MethodInvocation System currentTimeMillis MemberReference now StatementExpression MethodInvocation Literal "process should have been killed" MethodInvocation watchdog killedProcess assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal time of " MemberReference Literal " ms is than timeout value of " MemberReference Literal " ms" BinaryOperation >= MemberReference MemberReference assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal time of " MemberReference Literal " ms is greater than run value of " BinaryOperation * MemberReference Literal 2 Literal " ms" BinaryOperation < MemberReference BinaryOperation * MemberReference Literal 2 assertTrue	1
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType long value FormalParameter BasicType byte buf FormalParameter BasicType int offset FormalParameter BasicType int length StatementExpression MethodInvocation MemberReference value MemberReference buf MemberReference offset MemberReference length StatementExpression Assignment MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference offset MemberReference length Literal 1 buf Cast BasicType byte Literal ' ' = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference offset MemberReference length Literal 2 buf Literal 0 = ReturnStatement BinaryOperation + MemberReference offset MemberReference length	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType VariableDeclarator matchingEntry MethodInvocation MemberReference publicId IfStatement BinaryOperation != MemberReference matchingEntry Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Matching catalog entry found for '" MethodInvocation matchingEntry getPublicId Literal "' location: '" MethodInvocation matchingEntry getLocation Literal "'" MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference result MethodInvocation MemberReference matchingEntry filesystemLookup = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference matchingEntry classpathLookup = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference matchingEntry urlLookup = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType Project project FormalParameter ReferenceType Object source BuildException IfStatement BinaryOperation instanceof MemberReference source ReferenceType File BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal File source supported by " Literal "default plugin" LocalVariableDeclaration ReferenceType File VariableDeclarator bFile Cast ReferenceType File MemberReference source LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator inputStream Literal null LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource Literal null StatementExpression Assignment This MemberReference project MemberReference project = StatementExpression Assignment This MemberReference buildFile ClassCreator ReferenceType File MethodInvocation bFile getAbsolutePath = StatementExpression Assignment MemberReference ClassCreator ReferenceType File This MemberReference buildFile MethodInvocation getParent = TryStatement TryStatement StatementExpression Assignment MemberReference parser MethodInvocation = CatchClause CatchClauseParameter BuildException e StatementExpression Assignment MemberReference parser ClassCreator ReferenceType MethodInvocation = LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation FILE_UTILS MethodInvocation bFile getAbsolutePath toURI StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType FileInputStream MemberReference bFile = StatementExpression Assignment MemberReference inputSource ClassCreator ReferenceType InputSource MemberReference inputStream = StatementExpression MethodInvocation inputSource MemberReference uri setSystemId StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "parsing " MemberReference bFile Literal " with URI = " MemberReference uri MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator hb ClassCreator ReferenceType RootHandler This StatementExpression MethodInvocation parser MemberReference hb StatementExpression MethodInvocation parser MemberReference hb setEntityResolver StatementExpression MethodInvocation parser MemberReference hb setErrorHandler StatementExpression MethodInvocation parser MemberReference hb setDTDHandler StatementExpression MethodInvocation parser MemberReference inputSource parse CatchClause CatchClauseParameter SAXParseException exc LocalVariableDeclaration ReferenceType Location VariableDeclarator location ClassCreator ReferenceType Location MethodInvocation exc getSystemId MethodInvocation exc getLineNumber MethodInvocation exc getColumnNumber LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation exc getException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement LocalVariableDeclaration ReferenceType BuildException VariableDeclarator be Cast ReferenceType BuildException MemberReference t IfStatement BinaryOperation == MethodInvocation be getLocation MemberReference Location UNKNOWN_LOCATION BlockStatement StatementExpression MethodInvocation be MemberReference location setLocation ThrowStatement MemberReference be ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exc getMessage MemberReference t MemberReference location CatchClause CatchClauseParameter SAXException exc LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation exc getException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exc getMessage MemberReference t CatchClause CatchClauseParameter FileNotFoundException exc ThrowStatement ClassCreator ReferenceType BuildException MemberReference exc CatchClause CatchClauseParameter UnsupportedEncodingException exc ThrowStatement ClassCreator ReferenceType BuildException Literal "Encoding of project file is invalid." MemberReference exc CatchClause CatchClauseParameter IOException exc ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error reading project file: " MethodInvocation exc getMessage MemberReference exc StatementExpression MethodInvocation FileUtils MemberReference inputStream close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier private StatementExpression MethodInvocation FileUtils MemberReference close StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal StatementExpression MethodInvocation Literal "No index.html Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal of language attribute not Literal language must be specified" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator IfStatement MethodInvocation ! i hasNext BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer WhileStatement MethodInvocation i hasNext BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb MemberReference File pathSeparatorChar append StatementExpression MethodInvocation sb MethodInvocation i next append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation outputDirectory toString setValue createArgument IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandline MethodInvocation MethodInvocation toString setValue createArgument IfStatement MemberReference html BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement MemberReference trace BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement MemberReference BlockStatement IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation commandline MethodInvocation Literal setValue createArgument	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType Retryable exe FormalParameter ReferenceType String desc IOException LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 WhileStatement Literal true BlockStatement TryStatement StatementExpression MethodInvocation exe execute BreakStatement CatchClause CatchClauseParameter IOException e StatementExpression MemberReference ++ IfStatement BinaryOperation && BinaryOperation > MemberReference This MemberReference retriesAllowed BinaryOperation > This MemberReference retriesAllowed Literal - 1 BlockStatement StatementExpression MethodInvocation task BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference Literal ": error (" MemberReference desc Literal number of maximum (" This MemberReference retriesAllowed Literal MemberReference Project MSG_WARN log ThrowStatement MemberReference e BlockStatement StatementExpression MethodInvocation task BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference Literal ": error (" MemberReference desc Literal MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectBuildException	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference srcDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal and " Literal must be StatementExpression MethodInvocation Literal "DEPRECATED - The task is deprecated. Use move instead." MemberReference Project MSG_WARN log StatementExpression MethodInvocation Literal this MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference srcDir Literal "\" MemberReference replace Literal "\">" MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference srcDir Literal "\" MemberReference Project MSG_INFO log StatementExpression MethodInvocation Literal " MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference Literal "\"" MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference Literal "\" MemberReference Project MSG_INFO log StatementExpression MethodInvocation Literal MemberReference Project MSG_INFO log StatementExpression MethodInvocation Literal "using the same patterns on as used MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType VariableDeclarator move ClassCreator ReferenceType StatementExpression MethodInvocation move This bindToOwner StatementExpression MethodInvocation move MethodInvocation getOwningTarget setOwningTarget StatementExpression MethodInvocation move MethodInvocation getTaskName setTaskName StatementExpression MethodInvocation move MethodInvocation getLocation setLocation StatementExpression MethodInvocation move MemberReference srcDir StatementExpression MethodInvocation move MemberReference replace StatementExpression MethodInvocation fileset MemberReference srcDir StatementExpression MethodInvocation move MemberReference fileset LocalVariableDeclaration ReferenceType Mapper VariableDeclarator me MethodInvocation move createMapper StatementExpression MethodInvocation me MemberReference StatementExpression MethodInvocation me BinaryOperation + Literal "*" MemberReference StatementExpression MethodInvocation me BinaryOperation + Literal "*" MemberReference StatementExpression MethodInvocation move execute	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal is required to fail Literal "No expectBuildExceptionContaining	0
MethodDeclaration Modifier public BasicType int getPlatform ReturnStatement MemberReference platform	0
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType File s StatementExpression Assignment This MemberReference source MemberReference s =	0
MethodDeclaration Modifier public static ReferenceType String getFullRepositoryPath FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File remotefile LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MethodInvocation MethodInvocation remotefile getName append MethodInvocation remotefile append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType String cls StatementExpression Assignment This MemberReference cls MemberReference cls =	0
MethodDeclaration Modifier private BasicType boolean changeRemoteDir FormalParameter ReferenceType String LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal true TryStatement StatementExpression MethodInvocation ftp MemberReference cwd CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation System.out BinaryOperation + Literal "could not change directory to " MemberReference remoteTmpDir println StatementExpression Assignment MemberReference result Literal false = ReturnStatement MemberReference result	0
MethodDeclaration Modifier protected ReferenceType Properties getProperties FormalParameter BasicType int database LocalVariableDeclaration ReferenceType Properties VariableDeclarator props Literal null SwitchStatement MemberReference database SwitchStatementCase StatementExpression Assignment MemberReference props MethodInvocation Literal Literal "test" Literal "test" Literal getProperties = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference props MethodInvocation Literal Literal "test" Literal "test" Literal getProperties = BreakStatement SwitchStatementCase NULL StatementExpression Assignment MemberReference props MethodInvocation MemberReference NULL_DRIVER Literal "test" Literal "test" Literal getProperties = LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MethodInvocation props MemberReference DRIVER getProperty StatementExpression MethodInvocation props MemberReference MemberReference path put StatementExpression MethodInvocation props MemberReference Literal table INTEGER NOT table if exists put ReturnStatement MemberReference props	1
MethodDeclaration Modifier protected ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal "-nowarn" addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal "-ptime" addElement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MethodInvocation getPath addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v Literal "<pname>" addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression MethodInvocation MemberReference label	0
MethodDeclaration Modifier public addMajority FormalParameter ReferenceType MajoritySelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileSet MethodInvocation MethodInvocation getProject ReturnStatement ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getDir MethodInvocation MethodInvocation getIncludedFiles MethodInvocation getProject getDirectoryScanner	0
MethodDeclaration Modifier public ReferenceType Enumeration selectorElements ReturnStatement MethodInvocation elements	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal test	0
MethodDeclaration Modifier public FormalParameter ReferenceType instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public read FormalParameter ReferenceType InputStream stream IOException LocalVariableDeclaration ReferenceType DataInputStream VariableDeclarator ClassCreator ReferenceType DataInputStream MemberReference stream IfStatement BinaryOperation != MethodInvocation readInt MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BinaryOperation + Literal "No Found " Literal "- probably not a Java class file." StatementExpression MethodInvocation readUnsignedShort StatementExpression MethodInvocation readUnsignedShort StatementExpression Assignment MemberReference constantPool ClassCreator ReferenceType ConstantPool = StatementExpression MethodInvocation constantPool MemberReference read StatementExpression MethodInvocation constantPool resolve StatementExpression MethodInvocation readUnsignedShort LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation readUnsignedShort StatementExpression MethodInvocation readUnsignedShort LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation constantPool MemberReference getEntry StatementExpression Assignment MemberReference className MethodInvocation getClassName =	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MethodInvocation Literal println	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte Literal 40 LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 LocalVariableDeclaration ReferenceType ReaderInputStream VariableDeclarator r ClassCreator ReferenceType ReaderInputStream ClassCreator ReferenceType StringReader Literal Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 Literal true MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator res MethodInvocation r read IfStatement BinaryOperation == MemberReference res Literal - 1 BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos bytes Cast BasicType byte MemberReference res = StatementExpression Assignment MemberReference bytes Literal MethodInvocation Literal getBytes = LocalVariableDeclaration ReferenceType String VariableDeclarator n ClassCreator ReferenceType String MemberReference bytes Literal 0 MemberReference bytes length Literal StatementExpression MethodInvocation System.out MemberReference n println	1
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort = StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal specified doesn't exist" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType redirectorElement IfStatement BinaryOperation != This MemberReference redirectorElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "cannot have > 1 StatementExpression Assignment This MemberReference redirectorElement MemberReference redirectorElement = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression Assignment MemberReference MemberReference name =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "property" expectBuildExceptionContaining	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getResource	1
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator newroots ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator icounter Literal 0 BinaryOperation < MemberReference icounter MemberReference includes length MemberReference ++ icounter BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation SelectorUtils MemberReference ArraySelector MemberReference icounter includes StatementExpression MethodInvocation newroots MemberReference MemberReference ArraySelector MemberReference icounter includes put IfStatement BinaryOperation == MemberReference remotedir Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference remotedir MethodInvocation ftp = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "could not read current ftp directory" MethodInvocation getLocation LocalVariableDeclaration ReferenceType AntFTPFile VariableDeclarator baseFTPFile ClassCreator ReferenceType MemberReference ftp MemberReference remotedir StatementExpression Assignment MemberReference rootPath MethodInvocation baseFTPFile getAbsolutePath = IfStatement MethodInvocation newroots Literal "" containsKey BlockStatement StatementExpression MethodInvocation MemberReference rootPath Literal "" Literal true scandir BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enum2 MethodInvocation newroots keys WhileStatement MethodInvocation enum2 hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentelement Cast ReferenceType String MethodInvocation enum2 nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator originalpattern Cast ReferenceType String MethodInvocation newroots MemberReference currentelement get LocalVariableDeclaration ReferenceType AntFTPFile VariableDeclarator myfile ClassCreator ReferenceType AntFTPFile MemberReference baseFTPFile MemberReference currentelement LocalVariableDeclaration BasicType boolean VariableDeclarator isOK Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator traversesSymlinks Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal null IfStatement MethodInvocation myfile exists BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation && MemberReference MemberReference remoteSystemCaseSensitive MethodInvocation BlockStatement StatementExpression Assignment MemberReference path MethodInvocation myfile = BlockStatement TryStatement StatementExpression Assignment MemberReference path MethodInvocation myfile = StatementExpression Assignment MemberReference traversesSymlinks MethodInvocation myfile = CatchClause CatchClauseParameter IOException be ThrowStatement ClassCreator ReferenceType BuildException MemberReference be MethodInvocation getLocation CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference isOK Literal false = BlockStatement StatementExpression Assignment MemberReference isOK Literal false = IfStatement MemberReference isOK BlockStatement StatementExpression Assignment MemberReference currentelement MethodInvocation path MethodInvocation remoteFileSep Literal 0 charAt MemberReference File separatorChar replace = IfStatement BinaryOperation && MethodInvocation ! MemberReference traversesSymlinks BlockStatement ContinueStatement IfStatement MethodInvocation myfile isDirectory BlockStatement IfStatement BinaryOperation && MethodInvocation MemberReference currentelement isIncluded BinaryOperation > MethodInvocation currentelement length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference currentelement MemberReference myfile Literal true accountForIncludedDir BlockStatement IfStatement BinaryOperation > MethodInvocation currentelement length Literal 0 BlockStatement IfStatement BinaryOperation != MethodInvocation currentelement BinaryOperation - MethodInvocation currentelement length Literal 1 charAt MemberReference File separatorChar BlockStatement StatementExpression Assignment MemberReference currentelement BinaryOperation + MemberReference currentelement MemberReference File separatorChar = StatementExpression MethodInvocation MethodInvocation myfile getAbsolutePath MemberReference currentelement Literal true scandir BlockStatement IfStatement BinaryOperation && MemberReference isCaseSensitive MethodInvocation originalpattern MemberReference currentelement equals BlockStatement StatementExpression MethodInvocation MemberReference currentelement IfStatement BinaryOperation && MemberReference ! isCaseSensitive MethodInvocation originalpattern MemberReference currentelement equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference currentelement	1
MethodDeclaration Modifier public setDefault FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference defaultValue MemberReference value =	0
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MethodInvocation e1 hasMoreElements BlockStatement ReturnStatement MethodInvocation e1 nextElement BlockStatement ReturnStatement MethodInvocation e2 nextElement	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment This MemberReference to MemberReference to =	0
MethodDeclaration Modifier public static FormalParameter ReferenceType ClassLoader loader LocalVariableDeclaration ReferenceType Thread VariableDeclarator currentThread MethodInvocation Thread currentThread StatementExpression MethodInvocation currentThread MemberReference loader	0
MethodDeclaration Modifier public FormalParameter ReferenceType s StatementExpression MethodInvocation MethodInvocation MemberReference s append createClasspath	0
MethodDeclaration Modifier public ReferenceType File getDir FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getDir MemberReference p ReturnStatement MemberReference dir	0
MethodDeclaration Modifier public BasicType boolean isDir ReturnStatement Literal MethodInvocation MethodInvocation getValue equalsIgnoreCase	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value FormalParameter BasicType boolean FormalParameter BasicType boolean user FormalParameter BasicType boolean IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator subst MethodInvocation MethodInvocation MemberReference ns MemberReference name MemberReference value MemberReference MemberReference user MemberReference IfStatement MemberReference subst BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean f StatementExpression Assignment MemberReference MemberReference f =	0
MethodDeclaration Modifier protected StatementExpression SuperMethodInvocation IfStatement MethodInvocation BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation MemberReference XmlConstants Literal true IfStatement BinaryOperation && MethodInvocation ! MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation MemberReference XmlConstants MemberReference fullChecking StatementExpression MethodInvocation MemberReference XmlConstants MemberReference StatementExpression MethodInvocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation System.out MethodInvocation println	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public BasicType boolean hasSelectors IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hasSelectors ReturnStatement SuperMethodInvocation hasSelectors	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public addMajority FormalParameter ReferenceType MajoritySelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier static parsePropertyStringDefault FormalParameter ReferenceType String value FormalParameter ReferenceType Vector fragments FormalParameter ReferenceType Vector propertyRefs BuildException LocalVariableDeclaration BasicType int VariableDeclarator prev Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator pos WhileStatement BinaryOperation >= Assignment MemberReference pos MethodInvocation value Literal "$" MemberReference prev indexOf = Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference pos Literal 0 BlockStatement StatementExpression MethodInvocation fragments MethodInvocation value MemberReference prev MemberReference pos substring addElement IfStatement BinaryOperation == MemberReference pos BinaryOperation - MethodInvocation value length Literal 1 BlockStatement StatementExpression MethodInvocation fragments Literal "$" addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference pos Literal 1 = IfStatement BinaryOperation != MethodInvocation value BinaryOperation + MemberReference pos Literal 1 charAt Literal '{' BlockStatement IfStatement BinaryOperation == MethodInvocation value BinaryOperation + MemberReference pos Literal 1 charAt Literal '$' BlockStatement StatementExpression MethodInvocation fragments Literal "$" addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference pos Literal 2 = BlockStatement StatementExpression MethodInvocation fragments MethodInvocation value MemberReference pos BinaryOperation + MemberReference pos Literal 2 substring addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference pos Literal 2 = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation value Literal '}' MemberReference pos indexOf IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal error in property: " MemberReference value LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName MethodInvocation value BinaryOperation + MemberReference pos Literal 2 MemberReference substring StatementExpression MethodInvocation fragments Literal null addElement StatementExpression MethodInvocation propertyRefs MemberReference propertyName addElement StatementExpression Assignment MemberReference prev BinaryOperation + MemberReference Literal 1 = IfStatement BinaryOperation < MemberReference prev MethodInvocation value length BlockStatement StatementExpression MethodInvocation fragments MethodInvocation value MemberReference prev substring addElement	1
MethodDeclaration Modifier public log FormalParameter ReferenceType String msg StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_INFO log	1
MethodDeclaration Modifier public FormalParameter BasicType boolean f StatementExpression Assignment MemberReference debug MemberReference f =	0
MethodDeclaration Modifier final protected ReferenceType String readFully IOException ReturnStatement MethodInvocation FileUtils MemberReference in MemberReference BUFFER_SIZE readFully	0
MethodDeclaration Modifier public FormalParameter ReferenceType serverLanguageCode IfStatement BinaryOperation && BinaryOperation != MemberReference serverLanguageCode Literal null MethodInvocation ! serverLanguageCode Literal "" equals BlockStatement StatementExpression Assignment This MemberReference MemberReference serverLanguageCode = StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected tearDown Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType long when RemoteException ReturnStatement MethodInvocation System currentTimeMillis	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType String line IfStatement MethodInvocation line Literal startsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation line Literal 9 substring = StatementExpression Assignment MemberReference status MemberReference = IfStatement MethodInvocation line Literal startsWith BlockStatement StatementExpression Assignment MemberReference status MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getValue LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject ReturnStatement TernaryExpression BinaryOperation == MemberReference p Literal null Literal null MethodInvocation p MethodInvocation getName getProperty	0
MethodDeclaration Modifier public execute IOException JSchException LocalVariableDeclaration ReferenceType ChannelSftp VariableDeclarator channel MethodInvocation openSftpChannel TryStatement StatementExpression MethodInvocation channel connect TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator attrs MethodInvocation channel MemberReference remoteFile stat IfStatement BinaryOperation && MethodInvocation attrs isDir MethodInvocation ! remoteFile Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference remoteFile BinaryOperation + MemberReference remoteFile Literal "/" = CatchClause CatchClauseParameter SftpException ee StatementExpression MethodInvocation MemberReference channel MemberReference remoteFile MemberReference localFile getDir CatchClause CatchClauseParameter SftpException e ThrowStatement ClassCreator ReferenceType JSchException MethodInvocation e toString IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel disconnect StatementExpression MethodInvocation Literal log	1
MethodDeclaration Modifier public execute org.apache.tools.ant.BuildException LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation MethodInvocation Literal "" equals trim BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required argument not specified" LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline StatementExpression MethodInvocation commandLine MethodInvocation MemberReference getExecutable setExecutable StatementExpression MethodInvocation commandLine MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation Literal setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal MethodInvocation setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal MethodInvocation getRepository setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator uid MethodInvocation IfStatement BinaryOperation != MemberReference uid Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal MemberReference uid setValue createArgument IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal null MethodInvocation MethodInvocation isEmpty getPvcsprojects BlockStatement StatementExpression Assignment MemberReference Literal "/" = IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument IfStatement MethodInvocation ! MethodInvocation isEmpty getPvcsprojects BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation elements getPvcsprojects WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator projectName Cast ReferenceType MethodInvocation e nextElement IfStatement BinaryOperation || BinaryOperation == MemberReference projectName Literal null MethodInvocation projectName MethodInvocation Literal "" equals trim BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "name is a required attribute " Literal "of StatementExpression MethodInvocation commandLine MethodInvocation MemberReference projectName setValue createArgument LocalVariableDeclaration ReferenceType File VariableDeclarator tmp Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator tmp2 Literal null TryStatement LocalVariableDeclaration ReferenceType Random VariableDeclarator rand ClassCreator ReferenceType Random MethodInvocation System currentTimeMillis StatementExpression Assignment MemberReference tmp ClassCreator ReferenceType File BinaryOperation + BinaryOperation + Literal MethodInvocation rand nextLong Literal ".log" = LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference tmp StatementExpression Assignment MemberReference tmp2 ClassCreator ReferenceType File BinaryOperation + BinaryOperation + Literal MethodInvocation rand nextLong Literal ".log" = StatementExpression MethodInvocation MethodInvocation commandLine describeCommand MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine ClassCreator ReferenceType PumpStreamHandler MemberReference fos ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_WARN runCmd = StatementExpression MethodInvocation fos close IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement MethodInvocation ! tmp exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal between ant and " Literal No output generated from executing " Literal interface and StatementExpression MethodInvocation Literal "Creating MemberReference Project MSG_INFO log StatementExpression MethodInvocation MemberReference tmp StatementExpression MethodInvocation MemberReference tmp MemberReference tmp2 StatementExpression MethodInvocation commandLine StatementExpression MethodInvocation commandLine MethodInvocation MemberReference getExecutable setExecutable IfStatement BinaryOperation && BinaryOperation != MethodInvocation getConfig Literal null BinaryOperation > MethodInvocation MethodInvocation length getConfig Literal 0 BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal MethodInvocation getConfig setValue createArgument IfStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null MethodInvocation MethodInvocation Literal equals BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation Literal setValue createArgument BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation Literal setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal MethodInvocation setValue createArgument BlockStatement IfStatement BinaryOperation != MethodInvocation getLabel Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal "-v" MethodInvocation getLabel setValue createArgument BlockStatement IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal "-r" MethodInvocation setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + Literal "@" MethodInvocation tmp2 getAbsolutePath setValue createArgument StatementExpression MethodInvocation Literal "Getting files" MemberReference Project MSG_INFO log StatementExpression MethodInvocation BinaryOperation + Literal "Executing " MethodInvocation commandLine toString MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN runCmd = IfStatement BinaryOperation && BinaryOperation != MemberReference result Literal 0 MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString Literal ". Return code was " MemberReference result ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation CatchClause CatchClauseParameter FileNotFoundException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString Literal ". Exception: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString Literal ". Exception: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation CatchClause CatchClauseParameter ParseException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString Literal ". Exception: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation != MemberReference tmp Literal null BlockStatement StatementExpression MethodInvocation tmp delete IfStatement BinaryOperation != MemberReference tmp2 Literal null BlockStatement StatementExpression MethodInvocation tmp2 delete	1
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator parentWrapper MethodInvocation context LocalVariableDeclaration ReferenceType Object VariableDeclarator parent Literal null IfStatement BinaryOperation != MemberReference parentWrapper Literal null BlockStatement StatementExpression Assignment MemberReference parent MethodInvocation parentWrapper = LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator task ClassCreator ReferenceType UnknownElement MemberReference tag StatementExpression MethodInvocation task MethodInvocation context getProject setProject StatementExpression MethodInvocation task MemberReference uri setNamespace StatementExpression MethodInvocation task MemberReference qname StatementExpression MethodInvocation task MethodInvocation ProjectHelper MethodInvocation task getNamespace MemberReference tag genComponentName StatementExpression MethodInvocation task MemberReference qname setTaskName LocalVariableDeclaration ReferenceType Location VariableDeclarator location ClassCreator ReferenceType Location MethodInvocation context MethodInvocation getSystemId getLocator MethodInvocation context MethodInvocation getLineNumber getLocator MethodInvocation context MethodInvocation getColumnNumber getLocator StatementExpression MethodInvocation task MemberReference location setLocation StatementExpression MethodInvocation task MethodInvocation context setOwningTarget IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression Cast ReferenceType UnknownElement MemberReference parent BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference task StatementExpression MethodInvocation context MemberReference task MemberReference attrs LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator wrapper ClassCreator ReferenceType RuntimeConfigurable MemberReference task MethodInvocation task getTaskName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation attrs MemberReference i getLocalName LocalVariableDeclaration ReferenceType String VariableDeclarator attrUri MethodInvocation attrs MemberReference i getURI IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference attrUri Literal null MethodInvocation ! attrUri Literal "" equals MethodInvocation ! attrUri MemberReference uri equals BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + BinaryOperation + MemberReference attrUri Literal ":" MethodInvocation attrs MemberReference i getQName = LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement BinaryOperation || MethodInvocation ANT_TYPE MemberReference name equals BinaryOperation && MethodInvocation ANT_CORE_URI MemberReference attrUri equals MethodInvocation ANT_TYPE MethodInvocation attrs MemberReference i getLocalName equals BlockStatement StatementExpression Assignment MemberReference name MemberReference ANT_TYPE = LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation value Literal ":" indexOf IfStatement BinaryOperation != MemberReference index Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator prefix MethodInvocation value Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType String VariableDeclarator mappedUri MethodInvocation context MemberReference prefix IfStatement BinaryOperation == MemberReference mappedUri Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to find XML NS prefix " MemberReference prefix StatementExpression Assignment MemberReference value MethodInvocation ProjectHelper MemberReference mappedUri MethodInvocation value BinaryOperation + MemberReference index Literal 1 substring genComponentName = StatementExpression MethodInvocation wrapper MemberReference name MemberReference value setAttribute IfStatement BinaryOperation != MemberReference parentWrapper Literal null BlockStatement StatementExpression MethodInvocation parentWrapper MemberReference wrapper addChild StatementExpression MethodInvocation context MemberReference wrapper	1
MethodDeclaration * Set the text contents for the * @param text the text to be added to the */ Modifier public FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference text MemberReference text =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator destPathElements MethodInvocation list LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation list LocalVariableDeclaration ReferenceType String VariableDeclarator checkPath Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator element MemberReference ArraySelector MemberReference i LocalVariableDeclaration BasicType boolean VariableDeclarator inDestPath Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation && BinaryOperation < MemberReference j MemberReference destPathElements length MemberReference ! inDestPath MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference inDestPath MemberReference ArraySelector MemberReference j MethodInvocation MemberReference element equals destPathElements = IfStatement MemberReference ! inDestPath BlockStatement IfStatement BinaryOperation == MethodInvocation checkPath length Literal 0 BlockStatement StatementExpression Assignment MemberReference checkPath MemberReference element = BlockStatement StatementExpression Assignment MemberReference checkPath BinaryOperation + Literal ":" MemberReference element += IfStatement BinaryOperation == MethodInvocation checkPath length Literal 0 BlockStatement ReturnStatement Literal null ReturnStatement ClassCreator ReferenceType MethodInvocation getProject MemberReference checkPath	1
MethodDeclaration Modifier private IOException IfStatement BinaryOperation == This MemberReference data Literal null BlockStatement ReturnStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator cftab This MemberReference data MemberReference cftab LocalVariableDeclaration Modifier final BasicType int VariableDeclarator This MemberReference data MethodInvocation BinaryOperation + This MemberReference last Literal 1 LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator ll8 This MemberReference data MemberReference ll8 StatementExpression Assignment MemberReference ArraySelector Literal 0 cftab Literal 0 = StatementExpression MethodInvocation System This MemberReference data MemberReference unzftab Literal 0 MemberReference cftab Literal 1 Literal 256 arraycopy ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 VariableDeclarator c MemberReference ArraySelector Literal 0 cftab BinaryOperation <= MemberReference i Literal 256 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference c MemberReference ArraySelector MemberReference i cftab += StatementExpression Assignment MemberReference ArraySelector MemberReference i cftab MemberReference c = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator lastShadow This MemberReference last BinaryOperation <= MemberReference i MemberReference lastShadow MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ ArraySelector BinaryOperation & MemberReference ArraySelector MemberReference i ll8 Literal 0xff cftab MemberReference i = IfStatement BinaryOperation || BinaryOperation < This MemberReference origPtr Literal 0 BinaryOperation >= This MemberReference origPtr MemberReference length BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "stream StatementExpression Assignment This MemberReference su_tPos MemberReference ArraySelector This MemberReference origPtr = StatementExpression Assignment This MemberReference su_count Literal 0 = StatementExpression Assignment This MemberReference su_i2 Literal 0 = StatementExpression Assignment This MemberReference su_ch2 Literal 256 = IfStatement This MemberReference BlockStatement StatementExpression Assignment This MemberReference su_rNToGo Literal 0 = StatementExpression Assignment This MemberReference su_rTPos Literal 0 = StatementExpression MethodInvocation setupRandPartA BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier public FormalParameter ReferenceType classPath IfStatement BinaryOperation == MemberReference classPath Literal null BlockStatement ReturnStatement StatementExpression This MemberReference classPath MethodInvocation MemberReference classPath append StatementExpression This MemberReference classPath MethodInvocation MethodInvocation classPath getProject setProject	1
MethodDeclaration Modifier public ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement ClassCreator ReferenceType FileSet MethodInvocation MethodInvocation getProject BlockStatement ReturnStatement ClassCreator ReferenceType FileSet This	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement SuperMethodInvocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference MemberReference value =	0
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal executeTarget StatementExpression Assignment MemberReference p MethodInvocation getProject = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p Literal getProperty StatementExpression MethodInvocation Literal file deleted by MethodInvocation p Literal getProperty assertNotNull IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference fail	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference replace MemberReference value =	0
MethodDeclaration Modifier public static ReferenceType Test FormalParameter ReferenceType ClassLoader loader FormalParameter ReferenceType String classname Exception LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz Literal null IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference classname forName = BlockStatement StatementExpression MethodInvocation loader MemberReference classname loadClass ReturnStatement MethodInvocation MemberReference clazz	0
MethodDeclaration Modifier public add FormalParameter ReferenceType IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression Assignment MemberReference mapper MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal cannot be found" expectLogContaining	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference src Literal null BlockStatement StatementExpression Assignment MemberReference src ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation src createPath	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setHost FormalParameter ReferenceType String value StatementExpression Assignment MemberReference host MemberReference value =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator logFiles ArrayCreator ReferenceType File ArrayInitializer MethodInvocation MethodInvocation Literal getProject MethodInvocation MethodInvocation Literal getProject MethodInvocation MethodInvocation Literal getProject MethodInvocation MethodInvocation Literal getProject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference logFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation getName logFiles Literal " doesn\'t exist" MemberReference ! ArraySelector MemberReference i MethodInvocation exists logFiles assertTrue StatementExpression MethodInvocation Literal executeTarget ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference logFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation getName logFiles Literal " exists" MemberReference ArraySelector MemberReference i MethodInvocation exists logFiles assertTrue	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType FileSet StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation IfStatement BinaryOperation && BinaryOperation == This MethodInvocation Literal null BinaryOperation == MethodInvocation size Literal 0 BlockStatement StatementExpression This MethodInvocation MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator c This MethodInvocation LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cloned Literal null IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression Assignment MemberReference cloned Cast ReferenceType Commandline MethodInvocation cmd clone = StatementExpression MethodInvocation cloned MethodInvocation MemberReference c setLine Literal true createArgument StatementExpression This MethodInvocation MemberReference cloned Literal true TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement StatementExpression This MethodInvocation Cast ReferenceType Commandline MethodInvocation MemberReference i elementAt runCommand IfStatement BinaryOperation != MemberReference cloned Literal null BlockStatement StatementExpression MethodInvocation MemberReference cloned StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation FileUtils MemberReference outputStream close StatementExpression MethodInvocation FileUtils MemberReference errorStream close	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html" StatementExpression MethodInvocation Literal "No index.html Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration Modifier public FormalParameter ReferenceType resolver StatementExpression Assignment This MemberReference resolver MemberReference resolver =	0
MethodDeclaration Modifier private static ReferenceType String removeExtraneousAuthority FormalParameter ReferenceType String uri LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Literal IfStatement MethodInvocation uri MemberReference prefix startsWith BlockStatement ReturnStatement BinaryOperation + Literal "file:/" MethodInvocation uri MethodInvocation prefix length substring BlockStatement ReturnStatement MemberReference uri	0
MethodDeclaration Modifier public BasicType boolean isUpToDate FormalParameter ReferenceType File source FormalParameter ReferenceType File dest ReturnStatement MethodInvocation MemberReference source MemberReference dest MethodInvocation isUpToDate	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression Assignment This MemberReference MethodInvocation r getRefId =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Task task FormalParameter ReferenceType Throwable exception StatementExpression MethodInvocation MethodInvocation Thread currentThread Literal null StatementExpression MethodInvocation System.out flush StatementExpression MethodInvocation System.err flush LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference task StatementExpression MethodInvocation event MemberReference exception LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event taskFinished	1
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal 0 BlockStatement ReturnStatement MethodInvocation o hashCode	0
MethodDeclaration Modifier public FormalParameter ReferenceType t StatementExpression Assignment MemberReference when MemberReference t =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File targetdir StatementExpression Assignment This MemberReference targetdir MemberReference targetdir =	0
MethodDeclaration Modifier public testLineSeparatorCharacter IOException TryStatement StatementExpression SuperMethodInvocation testLineSeparatorCharacter StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String v StatementExpression Assignment MemberReference value MemberReference v =	0
MethodDeclaration Modifier public FormalParameter ReferenceType address StatementExpression MethodInvocation MemberReference address addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private IOException StatementExpression MethodInvocation WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next IfStatement MethodInvocation ! r isExists BlockStatement ContinueStatement StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation r toLongString MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedInputStream MethodInvocation r getInputStream = ReturnStatement CatchClause CatchClauseParameter IOException eyeOhEx IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Failed to get input stream for " MemberReference r MemberReference Project MSG_ERR log ThrowStatement MemberReference eyeOhEx StatementExpression Assignment MemberReference eof Literal true =	0
MethodDeclaration Modifier public handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference systemOut Literal null BlockStatement StatementExpression MethodInvocation systemOut MemberReference output print	0
MethodDeclaration Modifier public executeTarget FormalParameter ReferenceType String targetName LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator sysOut MemberReference System out LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator MemberReference System err TryStatement StatementExpression MethodInvocation sysOut flush StatementExpression MethodInvocation flush StatementExpression Assignment MemberReference ClassCreator ReferenceType StringBuffer = LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator out ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MemberReference StatementExpression MethodInvocation System MemberReference out setOut StatementExpression Assignment MemberReference ClassCreator ReferenceType StringBuffer = LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator err ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MemberReference StatementExpression MethodInvocation System MemberReference err setErr StatementExpression Assignment MemberReference ClassCreator ReferenceType StringBuffer = StatementExpression Assignment MemberReference ClassCreator ReferenceType StringBuffer = StatementExpression Assignment MemberReference buildException Literal null = StatementExpression MethodInvocation project MemberReference targetName executeTarget StatementExpression MethodInvocation System MemberReference sysOut setOut StatementExpression MethodInvocation System MemberReference setErr	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference owner	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal true Literal true Literal false Literal false Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType String argument IfStatement BinaryOperation && BinaryOperation != MemberReference argument Literal null BinaryOperation != MethodInvocation argument length Literal 0 BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference argument setValue createArgument	0
MethodDeclaration Modifier public BasicType boolean IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference counter Literal null BlockStatement IfStatement BinaryOperation > MemberReference ArraySelector MemberReference counter MemberReference length Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType path IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This MethodInvocation getProject = StatementExpression MethodInvocation MemberReference path append	0
MethodDeclaration Modifier public ReferenceType DirectoryScanner getDirectoryScanner ReturnStatement MethodInvocation MethodInvocation getProject getDirectoryScanner	0
MethodDeclaration Modifier public FormalParameter BasicType boolean failonerror StatementExpression Assignment This MemberReference failonerror MemberReference failonerror =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Long value StatementExpression Assignment MemberReference timeout MemberReference value = StatementExpression Assignment MemberReference BinaryOperation != MemberReference timeout Literal null |=	0
MethodDeclaration Modifier private ReferenceType newInstance ReturnStatement MethodInvocation MethodInvocation getValue newInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier protected setUp Exception StatementExpression MethodInvocation MethodInvocation clear getLoaderMap	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal "root" createElement StatementExpression MethodInvocation MemberReference root Literal Literal LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier public final execute BuildException TryStatement StatementExpression MethodInvocation StatementExpression MethodInvocation doExecute StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference MemberReference Literal ""	0
MethodDeclaration Modifier public FormalParameter ReferenceType String compiler IfStatement BinaryOperation > MethodInvocation compiler length Literal 0 BlockStatement StatementExpression MethodInvocation facade MemberReference compiler	0
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object other IfStatement BinaryOperation == MemberReference other This BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation instanceof MemberReference other ReferenceType BlockStatement ReturnStatement MethodInvocation MethodInvocation Cast ReferenceType MemberReference other compareTo getResource ReturnStatement MethodInvocation MethodInvocation MemberReference other compareTo getResource	1
MethodDeclaration Modifier public synchronized ReferenceType Object FormalParameter ReferenceType String ns FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference ns MemberReference name Literal true IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement MemberReference o ReturnStatement MethodInvocation MemberReference name get	0
MethodDeclaration Modifier public ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i Cast ReferenceType String MethodInvocation MemberReference i elementAt = ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MethodInvocation Literal "1" indexOf getLog StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal "25" MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue StatementExpression Assignment MemberReference index MethodInvocation MethodInvocation Literal MemberReference index indexOf getLog = StatementExpression MethodInvocation BinaryOperation > MemberReference index Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType long ReturnStatement MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " MethodInvocation MethodInvocation Literal getProperty getProject Literal " MethodInvocation Literal assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MethodInvocation MemberReference getCommandLine	0
MethodDeclaration Modifier protected removeDir FormalParameter ReferenceType File d LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation d list IfStatement BinaryOperation == MemberReference list Literal null BlockStatement StatementExpression Assignment MemberReference list ArrayCreator ReferenceType String Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference ArraySelector MemberReference i list LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference d MemberReference s IfStatement MethodInvocation f isDirectory BlockStatement StatementExpression MethodInvocation MemberReference f removeDir BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting " MethodInvocation f getAbsolutePath TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference verbosity log IfStatement MethodInvocation ! MemberReference f delete BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to delete file " MethodInvocation f getAbsolutePath handle StatementExpression MethodInvocation BinaryOperation + Literal "Deleting directory " MethodInvocation d getAbsolutePath MemberReference verbosity log IfStatement MethodInvocation ! MemberReference d delete BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to delete directory " MethodInvocation dir getAbsolutePath handle	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType RuntimeConfigurable getWrapper ReturnStatement MemberReference wrapper	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init StatementExpression Assignment This MemberReference BinaryOperation + MethodInvocation System Literal "user.home" getProperty Literal = StatementExpression Assignment This MemberReference port MemberReference =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String patterns FormalParameter ReferenceType String pName IfStatement BinaryOperation == MemberReference patterns Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator ClassCreator ReferenceType StringTokenizer MemberReference patterns Literal "," WhileStatement MethodInvocation hasMoreTokens BlockStatement IfStatement MethodInvocation DirectoryScanner MethodInvocation nextToken MemberReference pName match BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference	0
MethodDeclaration Modifier private IfStatement MemberReference BlockStatement StatementExpression MethodInvocation regexp MemberReference StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public static ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator tests ClassCreator ReferenceType Vector StatementExpression MethodInvocation tests Literal addElement SwitchStatement MemberReference SwitchStatementCase Literal 16 Literal 15 StatementExpression MethodInvocation tests Literal " addElement SwitchStatementCase Literal 14 StatementExpression MethodInvocation tests Literal addElement IfStatement BinaryOperation == MemberReference Literal 14 BlockStatement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement SwitchStatementCase Literal 13 StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement SwitchStatementCase Literal 12 StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement SwitchStatementCase Literal 11 StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement StatementExpression MethodInvocation tests Literal addElement BreakStatement ReturnStatement MemberReference tests	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType Project VariableDeclarator p ClassCreator ReferenceType Project LocalVariableDeclaration ReferenceType VariableDeclarator t ClassCreator ReferenceType StatementExpression MethodInvocation t MemberReference p setProject StatementExpression MethodInvocation t execute TryStatement StatementExpression MethodInvocation Thread MethodInvocation Literal sleep currentThread CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation p Literal null StatementExpression MethodInvocation System.err Literal println TryStatement StatementExpression MethodInvocation Thread MethodInvocation Literal sleep currentThread CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation System.err Literal println StatementExpression MethodInvocation System Literal 0 exit	0
MethodDeclaration Modifier protected BasicType long LocalVariableDeclaration BasicType long VariableDeclarator outputTimestamp IfStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null MethodInvocation MethodInvocation exists BlockStatement StatementExpression Assignment MemberReference outputTimestamp MethodInvocation MethodInvocation lastModified = BlockStatement StatementExpression Assignment MemberReference outputTimestamp Literal 0 = ReturnStatement MemberReference outputTimestamp	0
MethodDeclaration Modifier public ReferenceType String getTargetFolder ReturnStatement MemberReference targetFolder	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType rexec BuildException ThrowStatement ClassCreator ReferenceType BuildException Literal be instantiate a	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference ++ column	0
MethodDeclaration Modifier private processBundle FormalParameter Modifier final ReferenceType String bundleFile FormalParameter Modifier final BasicType int i FormalParameter Modifier final BasicType boolean BuildException LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator propsFile MethodInvocation MethodInvocation BinaryOperation + MemberReference bundleFile Literal ".properties" getProject LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator ins Literal null TryStatement StatementExpression Assignment MemberReference ins ClassCreator ReferenceType FileInputStream MemberReference propsFile = StatementExpression Assignment MemberReference loaded Literal true = StatementExpression Assignment MemberReference ArraySelector MemberReference i MethodInvocation propsFile lastModified = StatementExpression MethodInvocation BinaryOperation + Literal "Using " MemberReference propsFile MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MemberReference ins CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + MemberReference propsFile Literal " not found." MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && MemberReference ! loaded MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe getMessage MethodInvocation getLocation	1
MethodDeclaration Modifier protected ReferenceType View FormalParameter ReferenceType View BuildException LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference IfStatement This MethodInvocation BlockStatement ReturnStatement ClassCreator ReferenceType View MemberReference MethodInvocation MemberReference IfStatement This MethodInvocation BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType View VariableDeclarator view MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference view Literal null BlockStatement ReturnStatement MemberReference view BlockStatement ReturnStatement ClassCreator ReferenceType View MemberReference MethodInvocation	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project TryStatement StatementExpression MethodInvocation p MemberReference p append StatementExpression MethodInvocation Literal 0 MethodInvocation p MemberReference length list assertEquals CatchClause CatchClauseParameter BuildException x LocalVariableDeclaration ReferenceType String VariableDeclarator m MethodInvocation x toString StatementExpression MethodInvocation MemberReference m BinaryOperation != MethodInvocation m Literal indexOf Literal - 1 assertTrue	1
MethodDeclaration Modifier public ReferenceType File getSource LocalVariableDeclaration ReferenceType File VariableDeclarator Literal null IfStatement MethodInvocation source exists BlockStatement IfStatement MethodInvocation source isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entries MethodInvocation source list LocalVariableDeclaration ReferenceType Vector VariableDeclarator files ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference entries length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference source MemberReference ArraySelector MemberReference i entries IfStatement MethodInvocation f isFile BlockStatement StatementExpression MethodInvocation files MemberReference f addElement IfStatement BinaryOperation < MethodInvocation files size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No files found in directory " MemberReference source LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation files size LocalVariableDeclaration ReferenceType Random VariableDeclarator rn ClassCreator ReferenceType Random LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation rn MemberReference nextInt StatementExpression Assignment This MemberReference source Cast ReferenceType File MethodInvocation files MemberReference x elementAt = BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference source Literal ": invalid MemberReference Project MSG_WARN log StatementExpression Assignment This MemberReference source MemberReference = ReturnStatement This MemberReference source	1
MethodDeclaration Modifier protected ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference replace BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference recurse BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MethodInvocation getPath addElement IfStatement BinaryOperation != MemberReference version Literal null BlockStatement StatementExpression MethodInvocation v Literal "-version" addElement StatementExpression MethodInvocation v MemberReference version addElement StatementExpression MethodInvocation v Literal "<pname>" addElement ReturnStatement MemberReference v	1
MethodDeclaration * add a check for all the destination settings * nothing for a * @return true if is false if we have * problems but allowed to fail on an * BuildException only throw this when the * is */ Modifier protected verifyArguments BuildException LocalVariableDeclaration ReferenceType BuildException VariableDeclarator Literal null IfStatement BinaryOperation || BinaryOperation != MethodInvocation Literal null BinaryOperation != MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal properties must not be defined for a HEAD StatementExpression SuperMethodInvocation verifyArguments	1
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList attrs SAXParseException IfStatement BinaryOperation instanceof MemberReference task ReferenceType TaskContainer BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference name MemberReference attrs init ReferenceType TaskHandler MemberReference helperImpl This Cast ReferenceType TaskContainer MemberReference task MemberReference wrapper MemberReference target BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference name MemberReference attrs init ReferenceType NestedElementHandler MemberReference helperImpl This MemberReference task MemberReference wrapper MemberReference target	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference MemberReference value =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String filename ReturnStatement MethodInvocation filename MethodInvocation Literal '/' Literal '.' replace MethodInvocation Literal '\\' Literal '.' replace MemberReference File separatorChar Literal '.' replace	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String implementationVendor StatementExpression MethodInvocation StatementExpression Assignment This MemberReference implementationVendor MemberReference implementationVendor =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Commandline line ReturnStatement MethodInvocation MethodInvocation line	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator p ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation packages size MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation p Literal ":" append StatementExpression MethodInvocation p MethodInvocation packages MethodInvocation toString MemberReference i elementAt append ReturnStatement MethodInvocation p toString	0
MethodDeclaration Modifier public StatementExpression MethodInvocation perms TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation System Literal "line.separator" getProperty StatementExpression MethodInvocation perms	0
MethodDeclaration Modifier public init BuildException StatementExpression SuperMethodInvocation init StatementExpression MethodInvocation setDefaults	1
MethodDeclaration Modifier public IOException StatementExpression Assignment MemberReference ClassCreator ReferenceType File Literal = LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference StatementExpression MethodInvocation fos ArrayCreator BasicType byte Literal 0 write StatementExpression MethodInvocation fos close LocalVariableDeclaration BasicType long VariableDeclarator modTime MethodInvocation lastModified StatementExpression MethodInvocation BinaryOperation != MemberReference modTime Literal 0 assertTrue TryStatement StatementExpression MethodInvocation Thread Literal sleep CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation MethodInvocation ie getMessage fail StatementExpression MethodInvocation FILE_UTILS MemberReference Literal - 1 setFileLastModified LocalVariableDeclaration BasicType long VariableDeclarator secondModTime MethodInvocation lastModified StatementExpression MethodInvocation BinaryOperation > MemberReference secondModTime MemberReference modTime assertTrue LocalVariableDeclaration Modifier final BasicType int VariableDeclarator BinaryOperation * BinaryOperation * Literal 24 Literal Literal 1000 StatementExpression MethodInvocation FILE_UTILS MemberReference BinaryOperation + MemberReference secondModTime MemberReference setFileLastModified LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation lastModified StatementExpression MethodInvocation BinaryOperation != MemberReference MemberReference secondModTime assertTrue	1
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType FilterSetCollection filters IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile MemberReference filters Literal false Literal false copyFile	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference Literal "+" Literal "-"	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference append MemberReference b =	0
MethodDeclaration Modifier protected validateAttributes BuildException IfStatement BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation == MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType List ReturnStatement MethodInvocation Collections MemberReference	0
MethodDeclaration Modifier protected BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement ReturnStatement MethodInvocation runner MemberReference buffer MemberReference offset MemberReference length handleInput BlockStatement ReturnStatement SuperMethodInvocation MemberReference buffer MemberReference offset MemberReference length handleInput	1
MethodDeclaration Modifier private expandStream FormalParameter ReferenceType String name FormalParameter ReferenceType InputStream stream FormalParameter ReferenceType File dir IOException LocalVariableDeclaration ReferenceType TarInputStream VariableDeclarator tis Literal null TryStatement StatementExpression Assignment MemberReference tis ClassCreator ReferenceType TarInputStream MethodInvocation MemberReference name ClassCreator ReferenceType BufferedInputStream MemberReference stream = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference name Literal " into " MemberReference dir MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType VariableDeclarator te Literal null LocalVariableDeclaration ReferenceType VariableDeclarator mapper MethodInvocation WhileStatement BinaryOperation != Assignment MemberReference te MethodInvocation tis getNextEntry = Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation FileUtils getFileUtils Literal null MemberReference dir MemberReference tis MethodInvocation te getName MethodInvocation te MethodInvocation te isDirectory MemberReference mapper extractFile StatementExpression MethodInvocation Literal complete" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation FileUtils MemberReference tis close	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String s ReturnStatement Literal null	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project p StatementExpression Assignment MemberReference project MemberReference p =	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf Literal append StatementExpression MethodInvocation buf MethodInvocation MemberReference algorithm append Literal "algorithm=" append StatementExpression MethodInvocation buf Literal ">" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public FormalParameter ReferenceType we StatementExpression Assignment MemberReference MethodInvocation we getValue =	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal Literal "root" StatementExpression MethodInvocation root Literal Literal "bar" Literal "baz" LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + Literal MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentHelper helper LocalVariableDeclaration ReferenceType VariableDeclarator MemberReference helper antTypeTable ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator values MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def Cast ReferenceType AntTypeDefinition MethodInvocation i next StatementExpression MethodInvocation antTypeTable MethodInvocation def getName MemberReference def put ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation i next add	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String target StatementExpression Assignment This MemberReference target MemberReference target =	0
MethodDeclaration Modifier public FormalParameter ReferenceType IfStatement BinaryOperation == This MemberReference Literal null BlockStatement StatementExpression Assignment This MemberReference MemberReference = BlockStatement StatementExpression This MemberReference MethodInvocation MemberReference append	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference additionalargs MemberReference =	0
MethodDeclaration * this method is for it is when * to a and the base implementation calls on * any subclass that to its * must * @param connection where to connect * BuildException build * IOException */ Modifier protected ReferenceType URLConnection FormalParameter ReferenceType URLConnection connection BuildException IOException ReturnStatement MethodInvocation MemberReference connection	0
MethodDeclaration Modifier public ReferenceType Object clone CloneNotSupportedException TryStatement LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c Cast ReferenceType CommandlineJava SuperMethodInvocation clone StatementExpression Assignment MemberReference c Cast ReferenceType Commandline MethodInvocation clone = StatementExpression Assignment MemberReference c Cast ReferenceType Commandline MethodInvocation clone = StatementExpression Assignment MemberReference c sysProperties Cast ReferenceType MethodInvocation sysProperties clone = IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference c classpath Cast ReferenceType MethodInvocation classpath clone = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference c Cast ReferenceType MethodInvocation clone = IfStatement BinaryOperation != MemberReference assertions Literal null BlockStatement StatementExpression Assignment MemberReference c assertions Cast ReferenceType MethodInvocation assertions clone = ReturnStatement MemberReference c CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier private readPatterns FormalParameter ReferenceType File patternfile FormalParameter ReferenceType Vector patternlist FormalParameter ReferenceType Project p BuildException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator patternReader Literal null TryStatement StatementExpression Assignment MemberReference patternReader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference patternfile = LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation patternReader readLine WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation line length Literal 0 BlockStatement StatementExpression Assignment MemberReference line MethodInvocation p MemberReference line replaceProperties = StatementExpression MethodInvocation MethodInvocation MemberReference line setName MemberReference patternlist StatementExpression Assignment MemberReference line MethodInvocation patternReader readLine = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "An error occured while reading from pattern file: " MemberReference patternfile ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe IfStatement BinaryOperation != Literal null MemberReference patternReader BlockStatement TryStatement StatementExpression MethodInvocation patternReader close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Filter filter IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression MethodInvocation filters MemberReference filter addElement StatementExpression Assignment MemberReference filterHash Literal null =	0
MethodDeclaration Modifier public static BuildException TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator optional MethodInvocation Class MemberReference forName LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ClassReference ReferenceType Main LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference optional IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! MemberReference equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Invalid implementation version " Literal core and optional Literal " core : " MemberReference Literal "\n" Literal " " MemberReference CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "int" Literal Literal "string"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier private static ReferenceType Extension FormalParameter Modifier final ReferenceType Project project FormalParameter Modifier final ReferenceType List libraries BuildException LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator extensions ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator iterator MethodInvocation libraries iterator WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType FileSet VariableDeclarator Cast ReferenceType FileSet MethodInvocation iterator next LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference StatementExpression Assignment MemberReference MethodInvocation = StatementExpression Assignment MemberReference MethodInvocation = LocalVariableDeclaration Modifier final ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation MemberReference project getDirectoryScanner LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator basedir MethodInvocation scanner getBasedir LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator files MethodInvocation scanner getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference i files StatementExpression MethodInvocation MemberReference file MemberReference extensions MemberReference MemberReference ReturnStatement Cast ReferenceType Extension MethodInvocation extensions ArrayCreator ReferenceType Extension MethodInvocation extensions size toArray	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier public write FormalParameter ReferenceType PrintWriter writer IOException IfStatement BinaryOperation != MemberReference name Literal null BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator ClassCreator ReferenceType Attribute MemberReference MemberReference name StatementExpression MethodInvocation MemberReference writer write LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute MethodInvocation MemberReference key getAttribute StatementExpression MethodInvocation attribute MemberReference writer write StatementExpression MethodInvocation writer MemberReference print	0
MethodDeclaration Modifier public FormalParameter ReferenceType files StatementExpression SuperMethodInvocation MemberReference files	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public addDifferent FormalParameter ReferenceType DifferentSelector selector StatementExpression MethodInvocation fileset MemberReference selector addDifferent	1
MethodDeclaration Modifier public final FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project = IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project This	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference config descriptorDir MemberReference =	0
MethodDeclaration Modifier public synchronized ReferenceType StatementExpression Assignment MemberReference targets TernaryExpression BinaryOperation == MemberReference targets Literal null ClassCreator ReferenceType MethodInvocation getProject MemberReference targets = ReturnStatement MemberReference targets	0
MethodDeclaration Modifier public TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Literal StatementExpression MethodInvocation Literal classname used." fail CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal "Wrong exception type: " MethodInvocation e MethodInvocation getName getClass BinaryOperation instanceof MemberReference e ReferenceType BuildException assertTrue StatementExpression MethodInvocation Literal "Wrong exception Literal "Specified class is not an MethodInvocation e getMessage assertEquals	1
MethodDeclaration Modifier protected determineDependencies FormalParameter ReferenceType Vector files FormalParameter ReferenceType Vector classes LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencies ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator containers ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator toAnalyze ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation toAnalyze MemberReference classname MemberReference classname put LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator maxCount TernaryExpression MethodInvocation MemberReference Literal 1 LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator analyzedDeps Literal null WhileStatement BinaryOperation && BinaryOperation != MethodInvocation toAnalyze size Literal 0 BinaryOperation < MemberReference ++ count MemberReference maxCount BlockStatement StatementExpression Assignment MemberReference analyzedDeps ClassCreator ReferenceType Hashtable = ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation toAnalyze keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation dependencies MemberReference classname MemberReference classname put TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator container MethodInvocation MemberReference classname getClassContainer IfStatement BinaryOperation == MemberReference container Literal null BlockStatement ContinueStatement StatementExpression MethodInvocation containers MemberReference container MemberReference container put LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inStream Literal null TryStatement IfStatement MethodInvocation container MethodInvocation Literal ".class" endsWith getName BlockStatement StatementExpression Assignment MemberReference inStream ClassCreator ReferenceType FileInputStream MethodInvocation container getPath = BlockStatement StatementExpression Assignment MemberReference zipFile ClassCreator ReferenceType ZipFile MethodInvocation container getPath = LocalVariableDeclaration ReferenceType String VariableDeclarator entryName BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".class" LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry ClassCreator ReferenceType ZipEntry MemberReference entryName StatementExpression Assignment MemberReference inStream MethodInvocation zipFile MemberReference entry getInputStream = LocalVariableDeclaration ReferenceType ClassFile VariableDeclarator classFile ClassCreator ReferenceType ClassFile StatementExpression MethodInvocation classFile MemberReference inStream read LocalVariableDeclaration ReferenceType Vector VariableDeclarator dependencyList MethodInvocation classFile LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator depEnum MethodInvocation dependencyList elements WhileStatement MethodInvocation depEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dependency Cast ReferenceType String MethodInvocation depEnum nextElement StatementExpression MethodInvocation analyzedDeps MemberReference dependency MemberReference dependency put IfStatement BinaryOperation != MemberReference inStream Literal null BlockStatement StatementExpression MethodInvocation inStream close IfStatement BinaryOperation != MemberReference zipFile Literal null BlockStatement StatementExpression MethodInvocation zipFile close CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation toAnalyze clear LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator depsEnum MethodInvocation analyzedDeps elements WhileStatement MethodInvocation depsEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation depsEnum nextElement IfStatement MethodInvocation ! dependencies MemberReference className containsKey BlockStatement StatementExpression MethodInvocation toAnalyze MemberReference className MemberReference className put LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator depsEnum MethodInvocation analyzedDeps elements WhileStatement MethodInvocation depsEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation depsEnum nextElement StatementExpression MethodInvocation dependencies MemberReference className MemberReference className put StatementExpression MethodInvocation files removeAllElements ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation containers keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation files Cast ReferenceType File MethodInvocation e nextElement addElement StatementExpression MethodInvocation classes removeAllElements ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dependencies keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation classes Cast ReferenceType String MethodInvocation e nextElement addElement	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute TypeName not specified" StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dir StatementExpression Assignment This MemberReference dir MemberReference dir = StatementExpression MethodInvocation MethodInvocation MemberReference dir	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html" StatementExpression MethodInvocation Literal "No index.html Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal "DEPRECATED - The task is deprecated. Use copy instead." log IfStatement BinaryOperation == MemberReference srcFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The src attribute must be MethodInvocation getLocation IfStatement MethodInvocation ! srcFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "src " MethodInvocation srcFile toString Literal " does not exist." MethodInvocation getLocation IfStatement BinaryOperation == MemberReference destFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The dest attribute must be MethodInvocation getLocation IfStatement MethodInvocation srcFile MemberReference destFile equals BlockStatement StatementExpression MethodInvocation Literal "Warning: src == MemberReference Project MSG_WARN log IfStatement BinaryOperation || MemberReference forceOverwrite BinaryOperation > MethodInvocation srcFile lastModified MethodInvocation destFile lastModified BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference srcFile MemberReference destFile MemberReference filtering MemberReference forceOverwrite copyFile getProject CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error file: " MethodInvocation srcFile getAbsolutePath Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg	1
MethodDeclaration Modifier public FormalParameter ReferenceType JUnitTest test StatementExpression MethodInvocation tests MemberReference test addElement StatementExpression MethodInvocation MemberReference test	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement BinaryOperation != MemberReference input Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The and " Literal cannot both be specified" StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Resource getArchive ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType ArchiveResource MethodInvocation getCheckedRef MemberReference archive	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget StatementExpression MethodInvocation MethodInvocation project Literal getProperty assertNotNull StatementExpression MethodInvocation MethodInvocation project Literal getProperty assertNotNull	0
MethodDeclaration Modifier public ReferenceType String elementType XDocletException LocalVariableDeclaration ReferenceType XClass VariableDeclarator clazz MethodInvocation IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ThrowStatement ClassCreator ReferenceType XDocletException Literal is not an ReturnStatement MethodInvocation clazz getQualifiedName	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType Object getProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference ns MemberReference name Literal false IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement MemberReference o ReturnStatement MethodInvocation properties MemberReference name get	0
MethodDeclaration Modifier protected ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation Literal IfStatement MethodInvocation ! f exists BlockStatement StatementExpression MethodInvocation Literal failed" fail	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String elementName ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation nestedCreators MethodInvocation elementName MemberReference toLowerCase containsKey MethodInvocation BinaryOperation != MethodInvocation addTypeMethods size Literal 0	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference project StatementExpression MethodInvocation MethodInvocation MethodInvocation System Literal "java.class.path" getProperty setPath createPath LocalVariableDeclaration ReferenceType VariableDeclarator pc ClassCreator ReferenceType Literal ArrayCreator ReferenceType String ArrayInitializer Literal null MethodInvocation toString StatementExpression MethodInvocation project MemberReference pc StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator ae MethodInvocation pc getError IfStatement BinaryOperation != MemberReference ae Literal null BlockStatement ThrowStatement MemberReference ae StatementExpression MethodInvocation project MemberReference pc	0
MethodDeclaration Modifier public FormalParameter BasicType boolean rebuild StatementExpression Assignment This MemberReference MemberReference rebuild =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal "" IfStatement MethodInvocation MethodInvocation MemberReference equals getValue BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation MethodInvocation MemberReference equals getValue BlockStatement StatementExpression Assignment MemberReference Literal false = ReturnStatement MemberReference BlockStatement ReturnStatement Literal ""	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setPrimaryReader FormalParameter ReferenceType Reader rdr StatementExpression Assignment MemberReference MemberReference rdr =	0
MethodDeclaration Modifier protected ReferenceType Commandline ReturnStatement MethodInvocation Literal false	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceCollection c BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference rc Literal null BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference rc MemberReference c = StatementExpression MethodInvocation Literal false setChecked	1
MethodDeclaration ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public final FormalParameter ReferenceType classpath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public final bindToOwner FormalParameter ReferenceType Task owner StatementExpression MethodInvocation MethodInvocation owner getProject setProject StatementExpression MethodInvocation MethodInvocation owner getOwningTarget setOwningTarget StatementExpression MethodInvocation MethodInvocation owner getTaskName setTaskName StatementExpression MethodInvocation MethodInvocation owner setDescription StatementExpression MethodInvocation MethodInvocation owner getLocation setLocation StatementExpression MethodInvocation MethodInvocation owner getTaskType	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation cmd MethodInvocation getProject createClasspath	0
MethodDeclaration Modifier protected setup FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType Native2Ascii args BuildException IfStatement BinaryOperation != MethodInvocation args getEncoding Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation args getEncoding setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation args	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "The value of test is expectLogContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType Resource src IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one resource per transaction" StatementExpression Assignment MemberReference MemberReference src =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ReturnStatement MethodInvocation name Literal "html" endsWith	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType DateSelector	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value StatementExpression MethodInvocation MemberReference name MemberReference value put StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting ro project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MemberReference name MemberReference value put LocalVariableDeclaration BasicType boolean VariableDeclarator done MethodInvocation MemberReference ns MemberReference name MemberReference value Literal true Literal false Literal false IfStatement MemberReference done BlockStatement ReturnStatement StatementExpression MethodInvocation properties MemberReference name MemberReference value put	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference echoString MemberReference b =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration ReferenceType StringBuffer ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Properties props BuildException ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Stack VariableDeclarator referencesSeen ClassCreator ReferenceType Stack StatementExpression MethodInvocation MemberReference props MemberReference propertyName MemberReference referencesSeen resolve	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal already exists as a file" expectBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType int FormalParameter BasicType int StatementExpression This MethodInvocation MemberReference StatementExpression This MethodInvocation MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal bar bar" expectLogContaining	0
MethodDeclaration Modifier public ReferenceType XSLTProcess ReferenceType Param createParam LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType Param VariableDeclarator p ClassCreator ReferenceType XSLTProcess ReferenceType Param StatementExpression MethodInvocation params MemberReference p add ReturnStatement MemberReference p	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator ps ClassCreator ReferenceType PrintStream TernaryExpression BinaryOperation != MemberReference property Literal null Cast ReferenceType OutputStream ClassCreator ReferenceType PropertyOutputStream MethodInvocation getProject MemberReference property Cast ReferenceType OutputStream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO IfStatement MethodInvocation STRING MemberReference mode equals BlockStatement StatementExpression MethodInvocation ps MethodInvocation MemberReference string MethodInvocation getLength print StatementExpression MethodInvocation ps close IfStatement MethodInvocation MemberReference mode equals BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ps handleResources IfStatement MethodInvocation MemberReference mode equals BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ps handleResources	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType Resource src FormalParameter ReferenceType Resource target FormalParameter BasicType int granularity ReturnStatement MethodInvocation MemberReference src MemberReference target Cast BasicType long MemberReference granularity	0
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentHelper next StatementExpression Assignment This MemberReference next MemberReference next =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text IfStatement BinaryOperation == MemberReference textBuffer Literal null BlockStatement StatementExpression Assignment MemberReference textBuffer ClassCreator ReferenceType StringBuffer MethodInvocation text length = StatementExpression MethodInvocation textBuffer MemberReference text append	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project project IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation MemberReference project = IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to create class for " MethodInvocation getName IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! MemberReference clazz isAssignableFrom BlockStatement LocalVariableDeclaration ReferenceType TypeAdapter VariableDeclarator adapter Cast ReferenceType TypeAdapter MethodInvocation MemberReference project MemberReference IfStatement BinaryOperation == MemberReference adapter Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to create adapter object" StatementExpression MethodInvocation adapter MemberReference clazz	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal attribute must not be empty" expectBuildException	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation newInstance	0
MethodDeclaration Modifier protected ReferenceType Commandline StatementExpression Assignment MemberReference commandLine ClassCreator ReferenceType Commandline = StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation getLabel Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must be MethodInvocation getLocation StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLabel setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public addContains FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType value StatementExpression Assignment MemberReference MethodInvocation value getValue = StatementExpression Assignment MemberReference summary MethodInvocation value asBoolean =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation toString getCheckedRef BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation toString getArchive Literal ':' MethodInvocation getName	1
MethodDeclaration Modifier public validate IfStatement BinaryOperation != MethodInvocation selectorCount Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one selector StatementExpression SuperMethodInvocation validate	1
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType String fromDate StatementExpression Assignment This MemberReference fromDate MemberReference fromDate =	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation This StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs SAXParseException LocalVariableDeclaration ReferenceType VariableDeclarator next MethodInvocation currentHandler MemberReference uri MemberReference tag MemberReference qname MemberReference attrs MemberReference context StatementExpression MethodInvocation MemberReference currentHandler push StatementExpression Assignment MemberReference currentHandler MemberReference next = StatementExpression MethodInvocation currentHandler MemberReference uri MemberReference tag MemberReference qname MemberReference attrs MemberReference context onStartElement	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference descriptorDirectory Literal null MethodInvocation ! descriptorDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory " MethodInvocation descriptorDirectory getPath Literal " is not valid" IfStatement BinaryOperation || BinaryOperation == MemberReference generatedFilesDirectory Literal null MethodInvocation ! generatedFilesDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory " MethodInvocation generatedFilesDirectory getPath Literal " is not valid" IfStatement BinaryOperation || BinaryOperation == MemberReference sourceDirectory Literal null MethodInvocation ! sourceDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "src directory " MethodInvocation sourceDirectory getPath Literal " is not valid" LocalVariableDeclaration ReferenceType String VariableDeclarator systemClassPath MethodInvocation System Literal "java.class.path" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator execClassPath MethodInvocation FileUtils BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference systemClassPath Literal ":" MemberReference classpath Literal ":" MemberReference generatedFilesDirectory LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds SuperMethodInvocation MemberReference descriptorDirectory getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType Java VariableDeclarator helperTask ClassCreator ReferenceType Java This StatementExpression MethodInvocation helperTask Literal true StatementExpression MethodInvocation helperTask Literal setClassname LocalVariableDeclaration ReferenceType String VariableDeclarator args Literal "" StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference descriptorDirectory += StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference generatedFilesDirectory += StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference sourceDirectory += StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference += StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference += ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference ArraySelector MemberReference i files += LocalVariableDeclaration ReferenceType Commandline ReferenceType VariableDeclarator arguments MethodInvocation helperTask createArg StatementExpression MethodInvocation arguments MemberReference args setLine StatementExpression MethodInvocation helperTask ClassCreator ReferenceType MethodInvocation getProject MemberReference execClassPath IfStatement BinaryOperation != MethodInvocation helperTask executeJava Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal of ejbc helper failed"	1
MethodDeclaration Modifier public FormalParameter ReferenceType String dirName StatementExpression Assignment MemberReference generatedFilesDirectory ClassCreator ReferenceType File MemberReference dirName =	0
MethodDeclaration Modifier public IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal ArrayCreator ReferenceType String ArrayInitializer Literal compareFiles StatementExpression Assignment MemberReference ds MethodInvocation myFTPTask MemberReference ftp newScanner = IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" Literal ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma" Literal compareFiles	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType Manifest ReferenceType Section VariableDeclarator mainSection MethodInvocation manifest LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation mainSection Literal getAttributeValue StatementExpression MethodInvocation Literal attribute was not set - " MemberReference MemberReference classpath assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation mainSection MemberReference getAttributeValue StatementExpression MethodInvocation Literal MemberReference MemberReference value assertEquals StatementExpression Assignment MemberReference value MethodInvocation mainSection MemberReference getAttributeValue = StatementExpression MethodInvocation Literal MemberReference MemberReference value assertEquals StatementExpression Assignment MemberReference value MethodInvocation mainSection MemberReference getAttributeValue = StatementExpression MethodInvocation Literal MemberReference MemberReference value assertEquals LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType String VariableDeclarator read MethodInvocation in readLine WhileStatement BinaryOperation != MemberReference read Literal null BlockStatement StatementExpression MethodInvocation set MemberReference read add StatementExpression Assignment MemberReference read MethodInvocation in readLine = StatementExpression MethodInvocation Literal file should have contained string " MethodInvocation set Literal " remove assertTrue StatementExpression MethodInvocation Literal file should have contained string " MethodInvocation set Literal " remove assertTrue StatementExpression MethodInvocation Literal file should have contained string " MethodInvocation set BinaryOperation + MemberReference Literal ": " remove assertTrue StatementExpression MethodInvocation Literal file should have contained string " MethodInvocation set BinaryOperation + MemberReference Literal ": remove assertTrue	1
MethodDeclaration Modifier public StatementExpression MethodInvocation reg Literal LocalVariableDeclaration ReferenceType Vector VariableDeclarator v MethodInvocation reg Literal getGroups StatementExpression MethodInvocation Literal 5 MethodInvocation v size assertEquals StatementExpression MethodInvocation Literal MethodInvocation v Literal 1 elementAt assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation v Literal 2 elementAt assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation v Literal 3 elementAt assertEquals StatementExpression MethodInvocation Literal MethodInvocation v Literal 4 elementAt assertEquals	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator mainjarstring MethodInvocation MethodInvocation Literal getProperty getProject LocalVariableDeclaration ReferenceType String VariableDeclarator extjarstring MethodInvocation MethodInvocation Literal getProperty getProject LocalVariableDeclaration ReferenceType VariableDeclarator myPath ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation myPath ClassCreator ReferenceType File MemberReference mainjarstring setLocation StatementExpression MethodInvocation MethodInvocation Literal Literal "ignore" getProject LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator MethodInvocation MethodInvocation MemberReference myPath createClassLoader getProject LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference mainjarstring MemberReference File pathSeparator MemberReference extjarstring MemberReference path assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal " error: " MethodInvocation evt getName println StatementExpression MethodInvocation MethodInvocation MethodInvocation evt MethodInvocation getError println	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected BasicType int runCmd FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType out TryStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference out StatementExpression MethodInvocation exe MemberReference aProj setAntRun StatementExpression MethodInvocation exe MethodInvocation aProj setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation cmd getCommandline setCommandline ReturnStatement MethodInvocation exe execute CatchClause CatchClauseParameter java.io.IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed executing: " MethodInvocation cmd toString Literal ". Exception: " MethodInvocation e getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier protected checkConfiguration EjbcException LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "" IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference msg Literal "A standard XML descriptor file must be " += IfStatement BinaryOperation == MemberReference iasDescriptor Literal null BlockStatement StatementExpression Assignment MemberReference msg Literal "An XML descriptor file must be " += IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference msg Literal "A classpath must be " += IfStatement BinaryOperation == MemberReference parser Literal null BlockStatement StatementExpression Assignment MemberReference msg Literal "An XML parser must be " += IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference msg Literal "A destination directory must be " += IfStatement MethodInvocation ! exists BlockStatement StatementExpression Assignment MemberReference msg Literal "The destination directory specified does not " += IfStatement MethodInvocation ! isDirectory BlockStatement StatementExpression Assignment MemberReference msg Literal "The destination specified is not a directory. " += IfStatement BinaryOperation > MethodInvocation msg length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType EjbcException MemberReference msg	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation checkConfiguration StatementExpression MethodInvocation touch	1
MethodDeclaration Modifier protected BasicType int executeExternalCompile FormalParameter ReferenceType String args FormalParameter BasicType int firstFileName FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator commandArray Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator tmpFile Literal null TryStatement IfStatement BinaryOperation && BinaryOperation > MethodInvocation Commandline MethodInvocation length MemberReference args toString Literal 4096 BinaryOperation >= MemberReference firstFileName Literal 0 BlockStatement LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference tmpFile MethodInvocation FILE_UTILS Literal "files" Literal "" MethodInvocation MethodInvocation createTempFile = StatementExpression MethodInvocation tmpFile deleteOnExit StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference tmpFile = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference firstFileName BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement BinaryOperation && MemberReference BinaryOperation > MemberReference ArraySelector MemberReference i MethodInvocation Literal " " indexOf args Literal - 1 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i args MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separatorChar Literal '/' replace args = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "\"" MemberReference ArraySelector MemberReference i args Literal "\"" println BlockStatement StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i args println StatementExpression MethodInvocation out flush StatementExpression Assignment MemberReference commandArray ArrayCreator ReferenceType String BinaryOperation + MemberReference firstFileName Literal 1 = StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference commandArray Literal 0 MemberReference firstFileName arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference firstFileName commandArray BinaryOperation + Literal "@" MemberReference tmpFile = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Error creating temporary file" MemberReference e MemberReference location StatementExpression MethodInvocation FileUtils MemberReference out close BlockStatement StatementExpression Assignment MemberReference commandArray MemberReference args = TryStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler MemberReference attributes MemberReference Project MSG_INFO MemberReference Project MSG_WARN IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement StatementExpression MethodInvocation exe Literal true StatementExpression MethodInvocation exe MemberReference project setAntRun StatementExpression MethodInvocation exe MethodInvocation project setWorkingDirectory StatementExpression MethodInvocation exe MemberReference commandArray setCommandline StatementExpression MethodInvocation exe execute ReturnStatement MethodInvocation exe CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Error running " MemberReference ArraySelector Literal 0 args Literal " compiler" MemberReference e MemberReference location IfStatement BinaryOperation != MemberReference tmpFile Literal null BlockStatement StatementExpression MethodInvocation tmpFile delete	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference other equals getCheckedRef ReturnStatement BinaryOperation && MethodInvocation other MethodInvocation MethodInvocation getClass equals getClass BinaryOperation == MethodInvocation MemberReference other compareTo Literal 0	1
MethodDeclaration Modifier private static ReferenceType Enumeration getFiles FormalParameter Modifier final ReferenceType File LocalVariableDeclaration ReferenceType Vector VariableDeclarator result ClassCreator ReferenceType Vector StatementExpression MethodInvocation MemberReference MemberReference result getFiles ReturnStatement MethodInvocation result elements	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src StatementExpression MethodInvocation MethodInvocation MemberReference src	0
MethodDeclaration Modifier private FormalParameter ReferenceType Set names FormalParameter ReferenceType Hashtable properties ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator r Cast ReferenceType MethodInvocation e nextElement IfStatement BinaryOperation != MemberReference r name Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation properties MemberReference r name get Literal null BlockStatement StatementExpression MethodInvocation names MemberReference r name add IfStatement BinaryOperation != MemberReference r prefix Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator p MethodInvocation properties keys MethodInvocation p hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation p nextElement IfStatement MethodInvocation name MemberReference r prefix startsWith BlockStatement StatementExpression MethodInvocation names MemberReference name add IfStatement BinaryOperation != MemberReference r regex Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration ReferenceType RegexpMatcher VariableDeclarator matcher MethodInvocation StatementExpression MethodInvocation matcher MemberReference r regex ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator p MethodInvocation properties keys MethodInvocation p hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation p nextElement IfStatement MethodInvocation matcher MemberReference name matches BlockStatement StatementExpression MethodInvocation names MemberReference name add IfStatement BinaryOperation != MemberReference r Literal null BlockStatement IfStatement MethodInvocation MemberReference equals BlockStatement StatementExpression MethodInvocation names MethodInvocation properties keySet addAll IfStatement MethodInvocation MemberReference equals BlockStatement StatementExpression MethodInvocation names MethodInvocation System MethodInvocation keySet getProperties addAll IfStatement MethodInvocation MemberReference equals BlockStatement StatementExpression MethodInvocation names MethodInvocation MethodInvocation MethodInvocation keySet getProject addAll BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal Invalid " Literal BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal Invalid	1
MethodDeclaration Modifier public BasicType boolean isDirectory IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef ReturnStatement BinaryOperation && BinaryOperation != MemberReference directory Literal null MethodInvocation directory booleanValue	0
MethodDeclaration Modifier static protected BasicType boolean match FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive ReturnStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference str MemberReference isCaseSensitive match	0
MethodDeclaration Modifier public FormalParameter BasicType boolean optional StatementExpression Assignment This MemberReference optional MemberReference optional =	0
MethodDeclaration Modifier public ReferenceType File getClassContainer FormalParameter ReferenceType String classname IOException LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".class" ReturnStatement MethodInvocation MemberReference MethodInvocation classPath list	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference descriptorDirectory Literal null MethodInvocation ! descriptorDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory " MethodInvocation descriptorDirectory getPath Literal " is not valid" IfStatement BinaryOperation || BinaryOperation == MemberReference generatedFilesDirectory Literal null MethodInvocation ! generatedFilesDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory " MethodInvocation generatedFilesDirectory getPath Literal " is not valid" LocalVariableDeclaration ReferenceType String VariableDeclarator args BinaryOperation + BinaryOperation + MemberReference descriptorDirectory Literal " " MemberReference generatedFilesDirectory LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds SuperMethodInvocation MemberReference descriptorDirectory getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference args BinaryOperation + Literal " " MemberReference ArraySelector MemberReference i files += LocalVariableDeclaration ReferenceType String VariableDeclarator systemClassPath MethodInvocation System Literal "java.class.path" getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator execClassPath MethodInvocation FileUtils BinaryOperation + BinaryOperation + MemberReference systemClassPath Literal ":" MemberReference classpath LocalVariableDeclaration ReferenceType Java VariableDeclarator ddCreatorTask ClassCreator ReferenceType Java This StatementExpression MethodInvocation ddCreatorTask Literal true StatementExpression MethodInvocation ddCreatorTask Literal setClassname LocalVariableDeclaration ReferenceType Commandline ReferenceType VariableDeclarator arguments MethodInvocation ddCreatorTask createArg StatementExpression MethodInvocation arguments MemberReference args setLine StatementExpression MethodInvocation ddCreatorTask ClassCreator ReferenceType MethodInvocation getProject MemberReference execClassPath IfStatement BinaryOperation != MethodInvocation ddCreatorTask executeJava Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal of helper failed"	1
MethodDeclaration Modifier public ReferenceType PlanarImage executeDrawOperation LocalVariableDeclaration ReferenceType VariableDeclarator bi ClassCreator ReferenceType MemberReference width MemberReference height MemberReference TYPE_4BYTE_ABGR_PRE LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics Cast ReferenceType Graphics2D MethodInvocation bi IfStatement MethodInvocation ! Literal "transparent" equals BlockStatement LocalVariableDeclaration ReferenceType BasicStroke VariableDeclarator bStroke ClassCreator ReferenceType BasicStroke MemberReference stroke_width StatementExpression MethodInvocation graphics MethodInvocation ColorMapper MemberReference getColorByName setColor StatementExpression MethodInvocation graphics MemberReference bStroke setStroke StatementExpression MethodInvocation graphics ClassCreator ReferenceType Ellipse2D ReferenceType Double Literal 0 Literal 0 MemberReference width MemberReference height draw IfStatement MethodInvocation ! fill Literal "transparent" equals BlockStatement StatementExpression MethodInvocation graphics MethodInvocation ColorMapper MemberReference fill getColorByName setColor StatementExpression MethodInvocation graphics ClassCreator ReferenceType Ellipse2D ReferenceType Double Literal 0 Literal 0 MemberReference width MemberReference height fill ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator img Cast ReferenceType DrawOperation MemberReference instr StatementExpression MethodInvocation graphics MethodInvocation img getAsBufferedImage Literal null Literal 0 Literal 0 IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement StatementExpression Assignment MemberReference graphics Cast ReferenceType Graphics2D MethodInvocation bi = LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator image Cast ReferenceType TransformOperation MemberReference instr StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = ReturnStatement MethodInvocation PlanarImage MemberReference bi wrapRenderedImage	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType ps ReturnStatement BinaryOperation || BinaryOperation > MethodInvocation ps MemberReference length MethodInvocation getProject Literal 0 BinaryOperation > MethodInvocation ps MemberReference length MethodInvocation getProject Literal 0	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator util ClassCreator ReferenceType LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator input MethodInvocation Literal LocalVariableDeclaration ReferenceType String VariableDeclarator output MethodInvocation util BinaryOperation + BinaryOperation + Literal MemberReference input Literal "/" MemberReference StatementExpression MethodInvocation Literal MemberReference output assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destFile StatementExpression Assignment This MemberReference zipFile MemberReference destFile =	0
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement ReturnStatement StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject LocalVariableDeclaration ReferenceType String VariableDeclarator filename Literal LocalVariableDeclaration ReferenceType File VariableDeclarator cachefile Literal null IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference cachefile ClassCreator ReferenceType File MethodInvocation p MemberReference filename = StatementExpression MethodInvocation MethodInvocation This getProject BlockStatement StatementExpression Assignment MemberReference cachefile ClassCreator ReferenceType File MemberReference filename = StatementExpression MethodInvocation Literal false LocalVariableDeclaration ReferenceType Cache VariableDeclarator ClassCreator ReferenceType MemberReference cachefile LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Comparator VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference update Literal true = StatementExpression Assignment MemberReference Literal true = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator itConfig MethodInvocation iterator MethodInvocation itConfig hasNext BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator Cast ReferenceType Parameter MethodInvocation itConfig next IfStatement BinaryOperation > MethodInvocation MethodInvocation Literal "." indexOf getName Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference add BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement Literal MethodInvocation MethodInvocation getValue equals BlockStatement StatementExpression Assignment MemberReference algorithm ClassCreator ReferenceType = IfStatement Literal MethodInvocation MethodInvocation getValue equals BlockStatement StatementExpression Assignment MemberReference algorithm ClassCreator ReferenceType = IfStatement Literal MethodInvocation MethodInvocation getValue equals BlockStatement StatementExpression Assignment MemberReference algorithm ClassCreator ReferenceType = BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference algorithm Cast ReferenceType MethodInvocation MemberReference Literal not an ClassReference ReferenceType loadClass = BlockStatement StatementExpression Assignment MemberReference algorithm MemberReference = IfStatement BinaryOperation != MemberReference cacheName Literal null BlockStatement IfStatement Literal MethodInvocation MethodInvocation cacheName getValue equals BlockStatement StatementExpression Assignment MemberReference cache ClassCreator ReferenceType = BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference cache Cast ReferenceType Cache MethodInvocation MemberReference Literal not a ClassReference ReferenceType Cache loadClass = BlockStatement StatementExpression Assignment MemberReference cache MemberReference = IfStatement BinaryOperation != MemberReference compName Literal null BlockStatement IfStatement Literal MethodInvocation MethodInvocation compName getValue equals BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = IfStatement Literal MethodInvocation MethodInvocation compName getValue equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal not BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType Comparator MethodInvocation MemberReference Literal not a ClassReference ReferenceType Comparator loadClass = BlockStatement StatementExpression Assignment MemberReference MemberReference = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator itSpecial MethodInvocation iterator MethodInvocation itSpecial hasNext BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator Cast ReferenceType Parameter MethodInvocation itSpecial next StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference MemberReference value =	0
MethodDeclaration Modifier protected ReferenceType createTask FormalParameter ReferenceType Properties props LocalVariableDeclaration ReferenceType VariableDeclarator sql ClassCreator ReferenceType StatementExpression MethodInvocation sql ClassCreator ReferenceType Project setProject StatementExpression MethodInvocation sql MethodInvocation props MemberReference DRIVER getProperty StatementExpression MethodInvocation sql MethodInvocation props MemberReference USER getProperty StatementExpression MethodInvocation sql MethodInvocation props MemberReference getProperty StatementExpression MethodInvocation sql MethodInvocation props MemberReference URL getProperty StatementExpression MethodInvocation sql MethodInvocation ClassCreator ReferenceType File MethodInvocation props MemberReference getProperty setLocation createClasspath StatementExpression MethodInvocation sql MethodInvocation props MemberReference getProperty ReturnStatement MemberReference sql	0
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameters StatementExpression SuperMethodInvocation MemberReference parameters IfStatement BinaryOperation != MemberReference parameters Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameters length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramname MemberReference ArraySelector MemberReference i MethodInvocation getName parameters IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters setName IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters toBoolean IfStatement MethodInvocation MemberReference paramname equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue parameters toBoolean BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference paramname setError	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal inside a from expectLog	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference exitValue	0
MethodDeclaration Modifier public FormalParameter ReferenceType instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier private FormalParameter ReferenceType String oldValue BuildException LocalVariableDeclaration BasicType int VariableDeclarator currentValue MemberReference LocalVariableDeclaration BasicType int VariableDeclarator newV MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator fmt TernaryExpression BinaryOperation != MemberReference pattern Literal null ClassCreator ReferenceType MemberReference pattern ClassCreator ReferenceType TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator curval MethodInvocation MemberReference oldValue IfStatement BinaryOperation != MemberReference curval Literal null BlockStatement StatementExpression Assignment MemberReference currentValue MethodInvocation fmt MethodInvocation intValue MemberReference curval parse = BlockStatement StatementExpression Assignment MemberReference currentValue Literal 0 = CatchClause CatchClauseParameter NumberFormatException nfe CatchClause CatchClauseParameter ParseException pe IfStatement BinaryOperation == MemberReference operation MemberReference Operation BlockStatement StatementExpression Assignment MemberReference newV MemberReference currentValue = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator operationValue Literal 1 IfStatement BinaryOperation != MemberReference value Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference operationValue MethodInvocation fmt MethodInvocation intValue MemberReference value parse = CatchClause CatchClauseParameter NumberFormatException nfe CatchClause CatchClauseParameter ParseException pe IfStatement BinaryOperation == MemberReference operation MemberReference Operation BlockStatement StatementExpression Assignment MemberReference newV BinaryOperation + MemberReference currentValue MemberReference operationValue = IfStatement BinaryOperation == MemberReference operation MemberReference Operation BlockStatement StatementExpression Assignment MemberReference newV BinaryOperation - MemberReference currentValue MemberReference operationValue = StatementExpression Assignment This MemberReference newValue MethodInvocation fmt MemberReference newV format =	1
MethodDeclaration Modifier public ReferenceType Enumeration keys StatementExpression MethodInvocation initAll ReturnStatement SuperMethodInvocation keys	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType VariableDeclarator r ClassCreator ReferenceType StatementExpression MethodInvocation r MemberReference name setName StatementExpression MethodInvocation MemberReference r	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public addDepend FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f1 MethodInvocation MethodInvocation Literal getProject LocalVariableDeclaration ReferenceType File VariableDeclarator f2 MethodInvocation MethodInvocation Literal getProject StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference f1 MemberReference f2 assertTrue	0
MethodDeclaration Modifier public BasicType long getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public FormalParameter ReferenceType source StatementExpression MethodInvocation schemas MemberReference source add	0
MethodDeclaration Modifier private zipFile FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream zOut IOException LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression MethodInvocation zOut MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String home StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference home	0
MethodDeclaration Modifier public FormalParameter ReferenceType String token StatementExpression Assignment This MemberReference token MemberReference token =	0
MethodDeclaration Modifier private signOneJar FormalParameter ReferenceType File jarSource FormalParameter ReferenceType File BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator targetFile MemberReference IfStatement BinaryOperation == MemberReference targetFile Literal null BlockStatement StatementExpression Assignment MemberReference targetFile MemberReference jarSource = IfStatement MethodInvocation MemberReference jarSource MemberReference targetFile isUpToDate BlockStatement ReturnStatement LocalVariableDeclaration BasicType long VariableDeclarator lastModified MethodInvocation jarSource lastModified LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator cmd MethodInvocation StatementExpression MethodInvocation MemberReference cmd StatementExpression MethodInvocation MemberReference cmd IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue LocalVariableDeclaration ReferenceType String VariableDeclarator value This MemberReference StatementExpression MethodInvocation MemberReference cmd MemberReference value addValue IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference targetFile MethodInvocation ! jarSource MemberReference targetFile equals BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue StatementExpression MethodInvocation MemberReference cmd MethodInvocation targetFile getPath addValue IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue StatementExpression MethodInvocation MemberReference cmd StatementExpression MethodInvocation MemberReference cmd MethodInvocation jarSource getPath addValue StatementExpression MethodInvocation MemberReference cmd MemberReference alias addValue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation jarSource getAbsolutePath Literal " to " MethodInvocation targetFile getAbsolutePath Literal " as " MemberReference alias log StatementExpression MethodInvocation cmd execute IfStatement MemberReference preserveLastModified BlockStatement StatementExpression MethodInvocation targetFile MemberReference lastModified setLastModified	1
MethodDeclaration Modifier public IfStatement MemberReference ! StatementExpression MethodInvocation setUp StatementExpression ClassCreator MethodInvocation delete ReferenceType File MethodInvocation MethodInvocation getProject MemberReference	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference client Literal null BinaryOperation == MemberReference server Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid need to be client or IfStatement BinaryOperation && BinaryOperation != MemberReference server Literal null BinaryOperation != MemberReference client Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator worker ClassCreator ReferenceType StatementExpression MethodInvocation worker start StatementExpression MethodInvocation client execute LocalVariableDeclaration ReferenceType Exception VariableDeclarator caught Literal null TryStatement StatementExpression MethodInvocation worker join StatementExpression Assignment MemberReference caught MethodInvocation worker getException = CatchClause CatchClauseParameter InterruptedException e StatementExpression Assignment MemberReference caught MemberReference e = IfStatement BinaryOperation != MemberReference caught Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference caught ReturnStatement IfStatement BinaryOperation && BinaryOperation != MemberReference server Literal null BinaryOperation == MemberReference client Literal null BlockStatement StatementExpression MethodInvocation server execute ReturnStatement IfStatement BinaryOperation && BinaryOperation == MemberReference server Literal null BinaryOperation != MemberReference client Literal null BlockStatement StatementExpression MethodInvocation client execute ReturnStatement	0
MethodDeclaration Modifier public process StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator options MethodInvocation env ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation options keySet BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal [" MemberReference key Literal "] = " MethodInvocation options MemberReference key get ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation env BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference src	0
MethodDeclaration Modifier final protected BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public verifySettings IfStatement MethodInvocation isReference BlockStatement StatementExpression Cast ReferenceType BaseSelector MethodInvocation getCheckedRef	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation getSelectors MethodInvocation i hasNext BlockStatement IfStatement Cast ReferenceType ResourceSelector MethodInvocation i next BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType boolean BuildException LocalVariableDeclaration BasicType boolean VariableDeclarator checksumMatches Literal true LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos Literal null LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte MemberReference TryStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation includeFileMap keys MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation messageDigest reset LocalVariableDeclaration ReferenceType File VariableDeclarator src Cast ReferenceType File MethodInvocation e nextElement IfStatement MemberReference ! isCondition BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference algorithm Literal " checksum for " MemberReference src MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference src = LocalVariableDeclaration ReferenceType DigestInputStream VariableDeclarator dis ClassCreator ReferenceType DigestInputStream MemberReference fis MemberReference messageDigest WhileStatement BinaryOperation != MethodInvocation dis MemberReference buf Literal 0 MemberReference read Literal - 1 BlockStatement StatementExpression MethodInvocation dis close StatementExpression MethodInvocation fis close StatementExpression Assignment MemberReference fis Literal null = LocalVariableDeclaration BasicType byte VariableDeclarator fileDigest MethodInvocation messageDigest digest IfStatement BinaryOperation != MemberReference totalproperty Literal null BlockStatement StatementExpression MethodInvocation allDigests MemberReference src MemberReference fileDigest put LocalVariableDeclaration ReferenceType String VariableDeclarator checksum MethodInvocation MemberReference fileDigest LocalVariableDeclaration ReferenceType Object VariableDeclarator destination MethodInvocation includeFileMap MemberReference src get IfStatement BinaryOperation instanceof MemberReference destination ReferenceType java ReferenceType lang ReferenceType String BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator prop Cast ReferenceType String MemberReference destination IfStatement MemberReference isCondition BlockStatement StatementExpression Assignment MemberReference checksumMatches BinaryOperation && MemberReference checksumMatches MethodInvocation checksum MemberReference property equals = BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference prop MemberReference checksum setNewProperty getProject IfStatement BinaryOperation instanceof MemberReference destination ReferenceType java ReferenceType io ReferenceType File BlockStatement IfStatement MemberReference isCondition BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator existingFile Cast ReferenceType File MemberReference destination IfStatement MethodInvocation existingFile exists BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference existingFile readChecksum StatementExpression Assignment MemberReference checksumMatches BinaryOperation && MemberReference checksumMatches MethodInvocation checksum MemberReference equals = CatchClause CatchClauseParameter BuildException be StatementExpression Assignment MemberReference checksumMatches Literal false = BlockStatement StatementExpression Assignment MemberReference checksumMatches Literal false = BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dest Cast ReferenceType File MemberReference destination StatementExpression Assignment MemberReference fos ClassCreator ReferenceType FileOutputStream MemberReference dest = StatementExpression MethodInvocation fos MethodInvocation format MethodInvocation getBytes ArrayCreator ReferenceType Object ArrayInitializer MemberReference checksum MethodInvocation src getName format write StatementExpression MethodInvocation fos MethodInvocation getBytes write StatementExpression MethodInvocation fos close StatementExpression Assignment MemberReference fos Literal null = IfStatement BinaryOperation != MemberReference totalproperty Literal null BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator keys MethodInvocation allDigests keySet LocalVariableDeclaration ReferenceType Object VariableDeclarator keyArray MethodInvocation keys toArray StatementExpression MethodInvocation Arrays MemberReference keyArray sort StatementExpression MethodInvocation messageDigest reset ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference keyArray length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator src Cast ReferenceType File MemberReference ArraySelector MemberReference i keyArray LocalVariableDeclaration BasicType byte VariableDeclarator digest Cast BasicType byte MethodInvocation allDigests MemberReference src get StatementExpression MethodInvocation messageDigest MemberReference digest update LocalVariableDeclaration ReferenceType String VariableDeclarator fileName Cast ReferenceType String MethodInvocation relativeFilePaths MemberReference src get StatementExpression MethodInvocation messageDigest MethodInvocation fileName getBytes update LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation messageDigest digest StatementExpression MethodInvocation MethodInvocation MemberReference totalproperty MemberReference setNewProperty getProject CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference fis close StatementExpression MethodInvocation FileUtils MemberReference fos close ReturnStatement MemberReference checksumMatches	1
MethodDeclaration Modifier private ReferenceType String getPropertyName FormalParameter ReferenceType String methodName FormalParameter ReferenceType String prefix ReturnStatement MethodInvocation methodName MethodInvocation MemberReference toLowerCase MethodInvocation prefix length substring	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation MethodInvocation getProject ReturnStatement MethodInvocation MethodInvocation MethodInvocation getProject getDirectoryScanner	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator originalFile MethodInvocation project Literal LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal LocalVariableDeclaration ReferenceType InputStream VariableDeclarator originalIn ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference originalFile StatementExpression MethodInvocation Cast BasicType byte Literal 'B' MethodInvocation originalIn read assertEquals StatementExpression MethodInvocation Cast BasicType byte Literal 'Z' MethodInvocation originalIn read assertEquals LocalVariableDeclaration ReferenceType InputStream VariableDeclarator actualIn ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference StatementExpression MethodInvocation Cast BasicType byte Literal 'B' MethodInvocation actualIn read assertEquals StatementExpression MethodInvocation Cast BasicType byte Literal 'Z' MethodInvocation actualIn read assertEquals StatementExpression Assignment MemberReference originalIn ClassCreator ReferenceType CBZip2InputStream MemberReference originalIn = StatementExpression Assignment MemberReference actualIn ClassCreator ReferenceType CBZip2InputStream MemberReference actualIn = WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator expected MethodInvocation originalIn read LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation actualIn read IfStatement BinaryOperation >= MemberReference expected Literal 0 BlockStatement IfStatement BinaryOperation != MemberReference expected MemberReference BlockStatement StatementExpression MethodInvocation Literal "File content fail BlockStatement IfStatement BinaryOperation >= MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation Literal "File content fail BreakStatement StatementExpression MethodInvocation originalIn close StatementExpression MethodInvocation actualIn close	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public CloneNotSupportedException LocalVariableDeclaration ReferenceType Project VariableDeclarator ClassCreator ReferenceType Project LocalVariableDeclaration ReferenceType Location VariableDeclarator ClassCreator ReferenceType Location Literal "foo" LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "bar" LocalVariableDeclaration ReferenceType VariableDeclarator pc ClassCreator ReferenceType StatementExpression MethodInvocation pc MemberReference setProject StatementExpression MethodInvocation pc MemberReference setLocation StatementExpression MethodInvocation pc MemberReference setDescription LocalVariableDeclaration ReferenceType VariableDeclarator cloned Cast ReferenceType MethodInvocation pc clone StatementExpression MethodInvocation MemberReference pc MemberReference cloned assertNotSame StatementExpression MethodInvocation MethodInvocation cloned getProject MemberReference assertSame StatementExpression MethodInvocation MethodInvocation cloned getLocation MemberReference assertSame StatementExpression MethodInvocation MethodInvocation cloned MemberReference assertSame	0
MethodDeclaration Modifier public test3 LocalVariableDeclaration ReferenceType String VariableDeclarator expected ArrayInitializer Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal StatementExpression MethodInvocation project Literal executeTarget StatementExpression MethodInvocation Literal "current default MemberReference expected MethodInvocation DirectoryScanner assertEquals	0
MethodDeclaration Modifier public synchronized ReferenceType String ReturnStatement MemberReference dateTime	0
MethodDeclaration Modifier public ReferenceType String getIncludedDirectories ReturnStatement ArrayCreator ReferenceType String Literal 0	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No type specified" ReturnStatement MethodInvocation MemberReference name	1
MethodDeclaration Modifier private ReferenceType Project getProject FormalParameter ReferenceType String e FormalParameter BasicType boolean f FormalParameter BasicType boolean k LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation p Literal MemberReference e setNewProperty StatementExpression MethodInvocation p MemberReference k IfStatement MemberReference f BlockStatement StatementExpression MethodInvocation p Literal Literal "foo" setNewProperty ReturnStatement MemberReference p	0
MethodDeclaration Modifier public FormalParameter ReferenceType ps StatementExpression MethodInvocation MemberReference ps addElement	0
MethodDeclaration Modifier protected addDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType Class c BuildException StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference c getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final ReferenceType Enumeration IfStatement MethodInvocation BlockStatement ReturnStatement MethodInvocation ReturnStatement MemberReference	0
MethodDeclaration Modifier protected expandFile FormalParameter ReferenceType FileUtils fileUtils FormalParameter ReferenceType File srcF FormalParameter ReferenceType File dir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference srcF Literal " into " MemberReference dir MemberReference Project MSG_INFO log LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zf Literal null LocalVariableDeclaration ReferenceType VariableDeclarator mapper MethodInvocation TryStatement StatementExpression Assignment MemberReference zf ClassCreator ReferenceType ZipFile MemberReference srcF MemberReference encoding = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation zf getEntries WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze Cast ReferenceType ZipEntry MethodInvocation e nextElement StatementExpression MethodInvocation MemberReference fileUtils MemberReference srcF MemberReference dir MethodInvocation zf MemberReference ze getInputStream MethodInvocation ze getName ClassCreator ReferenceType Date MethodInvocation ze MethodInvocation ze isDirectory MemberReference mapper extractFile StatementExpression MethodInvocation Literal complete" MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error while expanding " MethodInvocation srcF getPath MemberReference ioe StatementExpression MethodInvocation ZipFile MemberReference zf closeQuietly	1
MethodDeclaration Modifier protected waitFor FormalParameter ReferenceType Process process TryStatement StatementExpression MethodInvocation process waitFor StatementExpression MethodInvocation MethodInvocation process exitValue CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation process	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType extension IfStatement BinaryOperation != Literal null MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal not extension to " Literal for multiple ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression Assignment MemberReference MemberReference extension =	0
MethodDeclaration Modifier synchronized final protected ReferenceType ResourceCollection StatementExpression MethodInvocation dieOnCircularReference IfStatement BinaryOperation == MemberReference rc Literal null BlockStatement ThrowStatement MethodInvocation ReturnStatement MemberReference rc	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String text StatementExpression Assignment MemberReference label MemberReference text =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean createEmptyFiles IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference createEmptyFiles TernaryExpression MemberReference createEmptyFiles MemberReference Boolean TRUE MemberReference Boolean FALSE =	1
MethodDeclaration Modifier public FormalParameter BasicType int y StatementExpression Assignment MemberReference MemberReference y =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal of range" Literal of the expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object realThing StatementExpression Assignment This MemberReference realThing MemberReference realThing =	0
MethodDeclaration Modifier private ReferenceType Source getSource FormalParameter ReferenceType InputStream is FormalParameter ReferenceType Resource resource ParserConfigurationException SAXException LocalVariableDeclaration ReferenceType Source VariableDeclarator src Literal null IfStatement BinaryOperation != MemberReference entityResolver Literal null BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference SAXSource getFeature getFactory BlockStatement LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator spFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation spFactory Literal true setNamespaceAware LocalVariableDeclaration ReferenceType VariableDeclarator reader MethodInvocation spFactory MethodInvocation newSAXParser StatementExpression MethodInvocation reader MemberReference entityResolver setEntityResolver StatementExpression Assignment MemberReference src ClassCreator ReferenceType SAXSource MemberReference reader ClassCreator ReferenceType InputSource MemberReference is = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal specified, but " Literal doesn't support BlockStatement StatementExpression Assignment MemberReference src ClassCreator ReferenceType StreamSource MemberReference is = StatementExpression MethodInvocation src MethodInvocation MemberReference resource setSystemId ReturnStatement MemberReference src	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MemberReference MemberReference MemberReference BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference logError Literal null BinaryOperation != MemberReference append Literal null BinaryOperation != MemberReference createEmptyFiles Literal null BinaryOperation != MemberReference inputEncoding Literal null BinaryOperation != MemberReference outputEncoding Literal null BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String path ReturnStatement Literal null	1
MethodDeclaration Modifier public addNone FormalParameter ReferenceType NoneSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "no exception fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal task at the top level must not invoke its Literal " build file." MethodInvocation e getMessage assertEquals	0
MethodDeclaration Modifier protected ReferenceType View BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType View VariableDeclarator view Literal null TryStatement StatementExpression Assignment MemberReference view MethodInvocation MethodInvocation = CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to connect to " MethodInvocation getURL MemberReference e IfStatement BinaryOperation == Literal null MemberReference view BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Cannot find MethodInvocation getURL Literal " in LocalVariableDeclaration ReferenceType View VariableDeclarator MethodInvocation MemberReference view StatementExpression MethodInvocation BinaryOperation + Literal to view " MethodInvocation getURL MemberReference Project MSG_VERBOSE log StatementExpression Assignment This MemberReference server MethodInvocation getServer = ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType URL FormalParameter ReferenceType File MalformedURLException LocalVariableDeclaration ReferenceType File VariableDeclarator antLibDir Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System MemberReference getProperty IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference antLibDir ClassCreator ReferenceType File MemberReference = IfStatement BinaryOperation || BinaryOperation == MemberReference antLibDir Literal null MethodInvocation ! antLibDir exists BlockStatement StatementExpression Assignment MemberReference antLibDir MemberReference = StatementExpression MethodInvocation System MemberReference MethodInvocation antLibDir getAbsolutePath setProperty ReturnStatement MethodInvocation Locator MemberReference antLibDir	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType FTPClient VariableDeclarator ftp Literal null TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Opening connection to " MemberReference server MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference ftp ClassCreator ReferenceType FTPClient = IfStatement This MemberReference BlockStatement StatementExpression Assignment MemberReference ftp MethodInvocation MemberReference ftp This = StatementExpression MethodInvocation ftp MemberReference server MemberReference port connect IfStatement MethodInvocation ! FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal connection failed: " MethodInvocation ftp getReplyString StatementExpression MethodInvocation Literal MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation Literal in to server" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation || BinaryOperation && BinaryOperation != This MemberReference account Literal null MethodInvocation ! ftp MemberReference MemberReference password MemberReference account BinaryOperation && BinaryOperation == This MemberReference account Literal null MethodInvocation ! ftp MemberReference MemberReference password BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Could not to server" StatementExpression MethodInvocation Literal MemberReference Project MSG_VERBOSE log IfStatement MemberReference binary BlockStatement StatementExpression MethodInvocation ftp MemberReference setFileType IfStatement MethodInvocation ! FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "could not set type: " MethodInvocation ftp getReplyString BlockStatement StatementExpression MethodInvocation ftp MemberReference setFileType IfStatement MethodInvocation ! FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "could not set type: " MethodInvocation ftp getReplyString IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal mode" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation ftp IfStatement MethodInvocation ! FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "could not enter into " Literal " MethodInvocation ftp getReplyString IfStatement BinaryOperation != This MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType RetryHandler VariableDeclarator h ClassCreator ReferenceType RetryHandler This MemberReference retriesAllowed This LocalVariableDeclaration Modifier final ReferenceType FTPClient VariableDeclarator lftp MemberReference ftp StatementExpression MethodInvocation MemberReference h ClassCreator ReferenceType Retryable MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp This MemberReference BinaryOperation + Literal command: " This MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType RetryHandler VariableDeclarator h ClassCreator ReferenceType RetryHandler This MemberReference retriesAllowed This LocalVariableDeclaration Modifier final ReferenceType FTPClient VariableDeclarator lftp MemberReference ftp StatementExpression MethodInvocation MemberReference h ClassCreator ReferenceType Retryable MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp BinaryOperation + Literal " MemberReference BinaryOperation + Literal " MemberReference IfStatement BinaryOperation == MemberReference action MemberReference BlockStatement LocalVariableDeclaration ReferenceType RetryHandler VariableDeclarator h ClassCreator ReferenceType RetryHandler This MemberReference retriesAllowed This LocalVariableDeclaration Modifier final ReferenceType FTPClient VariableDeclarator lftp MemberReference ftp StatementExpression MethodInvocation MemberReference h ClassCreator ReferenceType Retryable MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp MemberReference remotedir MemberReference remotedir IfStatement BinaryOperation == MemberReference action MemberReference BlockStatement LocalVariableDeclaration ReferenceType RetryHandler VariableDeclarator h ClassCreator ReferenceType RetryHandler This MemberReference retriesAllowed This LocalVariableDeclaration Modifier final ReferenceType FTPClient VariableDeclarator lftp MemberReference ftp StatementExpression MethodInvocation MemberReference h ClassCreator ReferenceType Retryable MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp This MemberReference BinaryOperation + Literal Command: " This MemberReference BlockStatement IfStatement BinaryOperation != MemberReference remotedir Literal null BlockStatement StatementExpression MethodInvocation Literal the remote directory" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation ftp MemberReference remotedir changeWorkingDirectory IfStatement MethodInvocation ! FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "could not change remote " Literal "directory: " MethodInvocation ftp getReplyString IfStatement BinaryOperation && MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference ftp = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference ArraySelector MemberReference action Literal " " MemberReference ArraySelector MemberReference action ACTION_TARGET_STRS log StatementExpression MethodInvocation MemberReference ftp transferFiles CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "error during " MemberReference ex MemberReference ex IfStatement BinaryOperation && BinaryOperation != MemberReference ftp Literal null MethodInvocation ftp BlockStatement TryStatement StatementExpression MethodInvocation Literal MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation ftp logout StatementExpression MethodInvocation ftp disconnect CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal "Non existing files" MethodInvocation FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "foo" ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "bar" assertTrue StatementExpression MethodInvocation Literal "One the other one MethodInvocation ! FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "foo" ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal assertTrue StatementExpression MethodInvocation Literal compare directories" MethodInvocation ! FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src" ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src" assertTrue StatementExpression MethodInvocation Literal "File equals MethodInvocation FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal assertTrue StatementExpression MethodInvocation Literal "Files are MethodInvocation ! FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal assertTrue	1
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env IOException LocalVariableDeclaration ReferenceType File VariableDeclarator cmdFile MethodInvocation MemberReference cmd MemberReference env createCommandFile LocalVariableDeclaration ReferenceType Process VariableDeclarator p SuperMethodInvocation MemberReference project ArrayCreator ReferenceType String ArrayInitializer MethodInvocation cmdFile getPath MemberReference env exec StatementExpression MethodInvocation MemberReference cmdFile MemberReference p ReturnStatement MemberReference p	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference failed	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createPath	0
MethodDeclaration Modifier private FormalParameter ReferenceType String firstTarget FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference firstTarget executeTarget LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation + Literal MethodInvocation FILE_UTILS TryStatement StatementExpression MethodInvocation Thread MemberReference sleep CatchClause CatchClauseParameter InterruptedException e LocalVariableDeclaration ReferenceType File VariableDeclarator jarFile ClassCreator ReferenceType File MethodInvocation MemberReference LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation jarFile lastModified StatementExpression MethodInvocation MemberReference executeTarget StatementExpression Assignment MemberReference jarFile ClassCreator ReferenceType File MethodInvocation MemberReference = StatementExpression MethodInvocation BinaryOperation + Literal has been in " MemberReference BinaryOperation < MemberReference MethodInvocation jarFile lastModified assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 1 Literal 1 Literal 0 Literal 1 Literal 0 Literal 0 Literal 0 StatementExpression MethodInvocation Literal MemberReference	0
MethodDeclaration Modifier private ReferenceType InputSource urlLookup FormalParameter ReferenceType matchingEntry LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation matchingEntry getLocation LocalVariableDeclaration ReferenceType URL VariableDeclarator baseURL Literal null IfStatement BinaryOperation != MethodInvocation matchingEntry getBase Literal null BlockStatement StatementExpression Assignment MemberReference baseURL MethodInvocation matchingEntry getBase = BlockStatement TryStatement StatementExpression Assignment MemberReference baseURL MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject getFileURL = CatchClause CatchClauseParameter MalformedURLException ex ThrowStatement ClassCreator ReferenceType BuildException Literal "Project basedir cannot be converted to a URL" LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source Literal null LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null TryStatement StatementExpression Assignment MemberReference url ClassCreator ReferenceType URL MemberReference baseURL MemberReference uri = CatchClause CatchClauseParameter MalformedURLException ex IfStatement BinaryOperation != MemberReference url Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation url openStream IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference source ClassCreator ReferenceType InputSource MemberReference is = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation url toExternalForm StatementExpression MethodInvocation source MemberReference setSystemId StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal entry matched as a URL: '" MemberReference Literal "'" MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter IOException ex ReturnStatement MemberReference source	1
MethodDeclaration Modifier public init BuildException StatementExpression Assignment MemberReference myCopy ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference myCopy StatementExpression MethodInvocation myCopy Literal false StatementExpression MethodInvocation myCopy Literal false StatementExpression MethodInvocation myCopy Literal true	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String elementName LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation nestedElementMap MemberReference elementName get IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "<" MemberReference name Literal "> does not support " Literal "the <" MemberReference elementName Literal "> LocalVariableDeclaration ReferenceType Object VariableDeclarator instance Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator classname MemberReference className IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement StatementExpression Assignment MemberReference instance MethodInvocation MethodInvocation MemberReference type createTask getProject = IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance MethodInvocation MethodInvocation MemberReference type getProject = BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator loader MethodInvocation TryStatement StatementExpression Assignment MemberReference instance MethodInvocation ClasspathUtils MemberReference classname MemberReference loader newInstance = CatchClause CatchClauseParameter BuildException e StatementExpression Assignment MemberReference instance MethodInvocation ClasspathUtils MemberReference classname ClassReference MethodInvocation getClassLoader ReferenceType newInstance = StatementExpression MethodInvocation MethodInvocation MemberReference instance setProjectReference getProject IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "<" MemberReference name Literal "> is unable to create " Literal "the <" MemberReference elementName Literal "> ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference refid	0
MethodDeclaration Modifier static protected FormalParameter ReferenceType handler StatementExpression Assignment MemberReference MemberReference handler =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator al MethodInvocation IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MemberReference resource Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MemberReference value Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "name or classname attributes of " MethodInvocation getTaskName Literal " element " Literal "are undefined" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression MethodInvocation MemberReference al MemberReference name MemberReference value addDefinition BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null TryStatement IfStatement BinaryOperation || BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference value Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal must not name or value " Literal with file or ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null BinaryOperation != MemberReference resource Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal must not file and " Literal ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Loading definitions from file " MemberReference file MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference is ClassCreator ReferenceType FileInputStream MemberReference file = IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Could not load definitions from file " MemberReference file Literal ". It doesn\'t exist." MemberReference Project MSG_WARN log IfStatement BinaryOperation != MemberReference resource Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Loading definitions from resource " MemberReference resource MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference is MethodInvocation al MemberReference resource getResourceAsStream = IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Could not load definitions from resource " MemberReference resource Literal ". It could not be found." MemberReference Project MSG_WARN log IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression MethodInvocation props MemberReference is load LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator keys MethodInvocation props keys WhileStatement MethodInvocation keys hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n Cast ReferenceType String MethodInvocation keys nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator v MethodInvocation props MemberReference n getProperty StatementExpression MethodInvocation MemberReference al MemberReference n MemberReference v addDefinition CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex MethodInvocation getLocation IfStatement BinaryOperation != MemberReference is Literal null BlockStatement TryStatement StatementExpression MethodInvocation is close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public addParam FormalParameter ReferenceType Parameter param StatementExpression MethodInvocation params MemberReference param addElement	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private static FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType Properties VariableDeclarator sysprops Literal null TryStatement StatementExpression Assignment MemberReference sysprops MethodInvocation System getProperties = CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation MemberReference e StatementExpression MethodInvocation out BinaryOperation + Literal to " Literal "by a security manager" println ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator keys MethodInvocation sysprops propertyNames MethodInvocation keys hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation keys nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MemberReference key getProperty StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference key Literal " : " MemberReference value println	1
MethodDeclaration Modifier public FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference host MemberReference host =	0
MethodDeclaration Modifier protected ReferenceType String getPassword ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Target getImplicitTarget ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator iter MethodInvocation keys WhileStatement MethodInvocation iter hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation iter nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference name get StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-" MemberReference name Literal ":" MethodInvocation value toString setValue createArgument IfStatement BinaryOperation || BinaryOperation == MemberReference targetFile Literal null MethodInvocation ! targetFile isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid target: " MemberReference targetFile IfStatement BinaryOperation == MemberReference outputDirectory Literal null BlockStatement StatementExpression Assignment MemberReference outputDirectory ClassCreator ReferenceType File MethodInvocation targetFile getParent = IfStatement MethodInvocation ! outputDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal not a directory." StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + Literal MethodInvocation outputDirectory getAbsolutePath setValue createArgument LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator javaFile MethodInvocation MemberReference outputDirectory MemberReference targetFile IfStatement BinaryOperation && MethodInvocation javaFile exists BinaryOperation < MethodInvocation targetFile lastModified MethodInvocation javaFile lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Target is already built - skipping (" MemberReference targetFile Literal ")" MemberReference Project MSG_VERBOSE log ReturnStatement StatementExpression MethodInvocation cmdl MethodInvocation MethodInvocation targetFile getAbsolutePath setValue createArgument LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator classpath MethodInvocation cmdl MethodInvocation getProject createClasspath LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator javaccJar MethodInvocation JavaCC MemberReference getArchiveFile StatementExpression MethodInvocation classpath MethodInvocation MethodInvocation javaccJar getAbsolutePath setPath StatementExpression MethodInvocation classpath StatementExpression MethodInvocation cmdl MethodInvocation JavaCC MemberReference classpath MemberReference JavaCC getMainClass setClassname LocalVariableDeclaration Modifier final ReferenceType Commandline ReferenceType VariableDeclarator arg MethodInvocation cmdl StatementExpression MethodInvocation arg Literal "-mx140M" setValue StatementExpression MethodInvocation arg BinaryOperation + Literal "-Dinstall.root=" MethodInvocation getAbsolutePath setValue StatementExpression MethodInvocation Execute This MethodInvocation cmdl getCommandline runCommand	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String command IfStatement MemberReference BlockStatement ReturnStatement MemberReference command LocalVariableDeclaration ReferenceType File VariableDeclarator Literal null IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference MethodInvocation BinaryOperation + MemberReference Literal MemberReference command = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation BinaryOperation + MemberReference Literal MemberReference command = IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MethodInvocation getAbsolutePath BlockStatement ReturnStatement MethodInvocation MemberReference command	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator context MethodInvocation Thread MethodInvocation getContextClassLoader currentThread LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator caller MethodInvocation MethodInvocation getClassLoader getClass StatementExpression MethodInvocation MemberReference context MemberReference caller assertSame	0
MethodDeclaration Modifier public ReferenceType String replaceProperties FormalParameter ReferenceType String ns FormalParameter ReferenceType String value FormalParameter ReferenceType Hashtable keys BuildException IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator fragments ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator propertyRefs ClassCreator ReferenceType Vector StatementExpression MethodInvocation MemberReference value MemberReference fragments MemberReference propertyRefs parsePropertyString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation fragments elements LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator j MethodInvocation propertyRefs elements WhileStatement MethodInvocation i hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fragment Cast ReferenceType String MethodInvocation i nextElement IfStatement BinaryOperation == MemberReference fragment Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName Cast ReferenceType String MethodInvocation j nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator replacement Literal null IfStatement BinaryOperation != MemberReference keys Literal null BlockStatement StatementExpression Assignment MemberReference replacement MethodInvocation keys MemberReference propertyName get = IfStatement BinaryOperation == MemberReference replacement Literal null BlockStatement StatementExpression Assignment MemberReference replacement MethodInvocation MemberReference ns MemberReference propertyName getProperty = IfStatement BinaryOperation == MemberReference replacement Literal null BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal "Property MemberReference propertyName Literal "} has not been set" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference fragment TernaryExpression BinaryOperation != MemberReference replacement Literal null MethodInvocation replacement toString BinaryOperation + BinaryOperation + Literal "${" MemberReference propertyName Literal "}" = StatementExpression MethodInvocation sb MemberReference fragment append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference message MemberReference value =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal only with mail" expectBuildException	0
MethodDeclaration Modifier public ReferenceType Source resolve FormalParameter ReferenceType String href FormalParameter ReferenceType String base TransformerException LocalVariableDeclaration ReferenceType SAXSource VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source Literal null LocalVariableDeclaration ReferenceType VariableDeclarator matchingEntry MethodInvocation MemberReference href IfStatement BinaryOperation != MemberReference matchingEntry Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Matching catalog entry found for uri: '" MethodInvocation matchingEntry getPublicId Literal "' location: '" MethodInvocation matchingEntry getLocation Literal "'" MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType VariableDeclarator entryCopy MemberReference matchingEntry IfStatement BinaryOperation != MemberReference base Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator baseURL ClassCreator ReferenceType URL MemberReference base StatementExpression Assignment MemberReference entryCopy ClassCreator ReferenceType = StatementExpression MethodInvocation entryCopy MemberReference baseURL setBase CatchClause CatchClauseParameter MalformedURLException ex StatementExpression MethodInvocation entryCopy MethodInvocation matchingEntry getPublicId StatementExpression MethodInvocation entryCopy MethodInvocation matchingEntry getLocation setLocation StatementExpression Assignment MemberReference source MethodInvocation MemberReference entryCopy filesystemLookup = IfStatement BinaryOperation == MemberReference source Literal null BlockStatement StatementExpression Assignment MemberReference source MethodInvocation MemberReference entryCopy classpathLookup = IfStatement BinaryOperation == MemberReference source Literal null BlockStatement StatementExpression Assignment MemberReference source MethodInvocation MemberReference entryCopy urlLookup = IfStatement BinaryOperation != MemberReference source Literal null BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType SAXSource MemberReference source = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public tearDown TryStatement StatementExpression MethodInvocation ftp disconnect CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation MethodInvocation Literal "cleanup" executeTarget getProject	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private static ReferenceType CompilerAdapter resolveClassName FormalParameter ReferenceType String className BuildException ReturnStatement Cast ReferenceType CompilerAdapter MethodInvocation ClasspathUtils MemberReference className ClassReference MethodInvocation getClassLoader ReferenceType ClassReference ReferenceType CompilerAdapter newInstance	1
MethodDeclaration Modifier public ReferenceType String getExecutable ReturnStatement MemberReference executable	0
MethodDeclaration Modifier public StatementExpression MethodInvocation System Literal 0 exit	0
MethodDeclaration Modifier public FormalParameter ReferenceType String err StatementExpression Assignment MemberReference systemError MemberReference err =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v StatementExpression Assignment This MemberReference MemberReference v =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean optional StatementExpression Assignment This MemberReference optional MemberReference optional =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier protected exit FormalParameter BasicType int exitCode StatementExpression MethodInvocation System MemberReference exitCode exit	0
MethodDeclaration Modifier private FormalParameter ReferenceType File fromFile FormalParameter ReferenceType File toFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite LocalVariableDeclaration BasicType boolean VariableDeclarator moved Literal false TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Attempting to " MemberReference fromFile Literal " to " MemberReference toFile MemberReference verbosity log StatementExpression Assignment MemberReference moved MethodInvocation MemberReference fromFile MemberReference toFile MemberReference filtering MemberReference forceOverwrite = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to rename " MemberReference fromFile Literal " to " MemberReference toFile Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation IfStatement MemberReference ! moved BlockStatement StatementExpression MethodInvocation MemberReference fromFile MemberReference toFile MemberReference filtering MemberReference overwrite copyFile IfStatement MethodInvocation ! fromFile delete BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Unable to delete " Literal " MethodInvocation fromFile getAbsolutePath	1
MethodDeclaration Modifier public FormalParameter ReferenceType fe StatementExpression MethodInvocation filters MemberReference fe addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression This MemberReference MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType FormalParameter Modifier final ReferenceType Specification other IfStatement MethodInvocation ! specificationTitle MethodInvocation other equals BlockStatement ReturnStatement MemberReference LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator MethodInvocation other IfStatement BinaryOperation != Literal null MemberReference specificationVersion BlockStatement IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference MethodInvocation ! MemberReference specificationVersion MemberReference BlockStatement ReturnStatement MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator otherImplementationVendor MethodInvocation other IfStatement BinaryOperation != Literal null MemberReference implementationVendor BlockStatement IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference otherImplementationVendor MethodInvocation ! implementationVendor MemberReference otherImplementationVendor equals BlockStatement ReturnStatement MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator otherImplementationVersion MethodInvocation other IfStatement BinaryOperation != Literal null MemberReference implementationVersion BlockStatement IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference otherImplementationVersion MethodInvocation ! implementationVersion MemberReference otherImplementationVersion equals BlockStatement ReturnStatement MemberReference ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i Cast ReferenceType String MethodInvocation MemberReference i elementAt = ReturnStatement MemberReference	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name BuildException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal can't change the name of a Literal " resource"	1
MethodDeclaration Modifier private FormalParameter ReferenceType ChannelSftp channel FormalParameter ReferenceType Directory directory IOException SftpException LocalVariableDeclaration ReferenceType String VariableDeclarator dir MethodInvocation directory MethodInvocation getName getDirectory TryStatement StatementExpression MethodInvocation channel MemberReference dir stat CatchClause CatchClauseParameter SftpException e IfStatement BinaryOperation == MemberReference e id MemberReference ChannelSftp BlockStatement StatementExpression MethodInvocation channel MemberReference dir mkdir StatementExpression MethodInvocation channel MemberReference dir cd StatementExpression MethodInvocation MemberReference channel MemberReference directory StatementExpression MethodInvocation channel Literal ".." cd	0
MethodDeclaration Modifier public FormalParameter ReferenceType String a2 StatementExpression Assignment MemberReference arg2 MemberReference a2 =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation MemberReference s Literal null	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal	0
MethodDeclaration Modifier public ReferenceType Method BuildException IfStatement MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Class " MethodInvocation bean getName Literal " doesn't support text data." ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Directory current FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out IOException ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator fileIt MethodInvocation current MethodInvocation fileIt hasNext BlockStatement StatementExpression MethodInvocation Cast ReferenceType File MethodInvocation fileIt next MemberReference in MemberReference out ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator dirIt MethodInvocation current MethodInvocation dirIt hasNext BlockStatement LocalVariableDeclaration ReferenceType Directory VariableDeclarator dir Cast ReferenceType Directory MethodInvocation dirIt next StatementExpression MethodInvocation MemberReference dir MemberReference in MemberReference out	1
MethodDeclaration Modifier public BasicType byte LocalVariableDeclaration BasicType byte VariableDeclarator data ArrayCreator BasicType byte BinaryOperation - MethodInvocation MethodInvocation getValue getLocalFileDataLength Literal 4 StatementExpression MethodInvocation System MethodInvocation ZipShort MethodInvocation getMode getBytes Literal 0 MemberReference data Literal 0 Literal 2 arraycopy LocalVariableDeclaration BasicType byte VariableDeclarator linkArray MethodInvocation MethodInvocation getBytes StatementExpression MethodInvocation System MethodInvocation ZipLong MemberReference linkArray length getBytes Literal 0 MemberReference data Literal 2 Literal 4 arraycopy StatementExpression MethodInvocation System MethodInvocation ZipShort MethodInvocation getBytes Literal 0 MemberReference data Literal 6 Literal 2 arraycopy StatementExpression MethodInvocation System MethodInvocation ZipShort MethodInvocation getBytes Literal 0 MemberReference data Literal 8 Literal 2 arraycopy StatementExpression MethodInvocation System MemberReference linkArray Literal 0 MemberReference data Literal 10 MemberReference linkArray length arraycopy StatementExpression MethodInvocation crc reset StatementExpression MethodInvocation crc MemberReference data update LocalVariableDeclaration BasicType long VariableDeclarator checksum MethodInvocation crc getValue LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte BinaryOperation + MemberReference data length Literal 4 StatementExpression MethodInvocation System MethodInvocation ZipLong MemberReference checksum getBytes Literal 0 MemberReference result Literal 0 Literal 4 arraycopy StatementExpression MethodInvocation System MemberReference data Literal 0 MemberReference result Literal 4 MemberReference data length arraycopy ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Exception TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal "A path contain " MemberReference e fail	0
MethodDeclaration Modifier protected FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String filename IOException BuildException IfStatement MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference filename log IfStatement MethodInvocation ! ftp MethodInvocation MemberReference filename deleteFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + Literal "could not delete file: " MethodInvocation ftp getReplyString IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference Project MSG_WARN log StatementExpression MemberReference ++ skipped BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference s BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MemberReference filename Literal " deleted from " MemberReference server MemberReference Project MSG_VERBOSE log StatementExpression MemberReference ++ transferred	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal failed" Literal "Test Project MethodInvocation project assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference parts	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String line ReturnStatement BinaryOperation || MethodInvocation line Literal startsWith MethodInvocation line Literal startsWith	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "Missing expectBuildExceptionContaining StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Long value StatementExpression Assignment MemberReference timeout MemberReference value = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public synchronized start StatementExpression Assignment MemberReference stopped Literal false = LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread This Literal StatementExpression MethodInvocation t Literal true setDaemon StatementExpression MethodInvocation t start	0
MethodDeclaration Modifier protected ReferenceType String getFilename ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference ! b =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test" executeTarget StatementExpression MethodInvocation MethodInvocation project Literal getProperty Literal assertEquals StatementExpression MethodInvocation MethodInvocation project Literal getProperty Literal assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public ReferenceType Object getProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference ns MemberReference name Literal false IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement MemberReference o ReturnStatement MethodInvocation properties MemberReference name get	0
MethodDeclaration Modifier private FormalParameter ReferenceType Vector FormalParameter ReferenceType sp LocalVariableDeclaration ReferenceType Vector VariableDeclarator ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator Cast ReferenceType Vector MethodInvocation clone IfStatement BinaryOperation != MemberReference sourcePath Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps ClassCreator ReferenceType IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p Cast ReferenceType MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation p MethodInvocation Literal '.' Literal '/' replace getName IfStatement MethodInvocation pkg Literal "*" endsWith BlockStatement StatementExpression Assignment MemberReference pkg Literal "*" += StatementExpression MethodInvocation ps MethodInvocation MemberReference pkg setName BlockStatement StatementExpression MethodInvocation ps MethodInvocation Literal "**" setName LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p Cast ReferenceType MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation p MethodInvocation Literal '.' Literal '/' replace getName IfStatement MethodInvocation pkg Literal "*" endsWith BlockStatement StatementExpression Assignment MemberReference pkg Literal "*" += StatementExpression MethodInvocation ps MethodInvocation MemberReference pkg setName LocalVariableDeclaration ReferenceType String VariableDeclarator pathElements MethodInvocation sourcePath list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference pathElements length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i pathElements IfStatement MethodInvocation dir isDirectory BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ds ClassCreator ReferenceType StatementExpression MethodInvocation ds MemberReference StatementExpression MethodInvocation ds MemberReference dir StatementExpression MethodInvocation ds MethodInvocation MemberReference ps StatementExpression MethodInvocation MemberReference ds addElement BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference ArraySelector MemberReference i pathElements Literal " since it is no directory." MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ds Cast ReferenceType MethodInvocation e nextElement LocalVariableDeclaration ReferenceType File VariableDeclarator baseDir MethodInvocation ds MethodInvocation getProject getDir StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference baseDir Literal " for packages." MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator dsc MethodInvocation ds MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation dsc getIncludedDirectories LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pd ClassCreator ReferenceType File MemberReference baseDir MemberReference ArraySelector MemberReference i dirs LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation pd ClassCreator ReferenceType FilenameFilter MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir1 FormalParameter ReferenceType String name ReturnStatement BinaryOperation || MethodInvocation name Literal ".java" endsWith BinaryOperation && MemberReference MethodInvocation name Literal equals list IfStatement BinaryOperation > MemberReference files length Literal 0 BlockStatement IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i dirs equals "" BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference baseDir Literal " contains source files in the default Literal " you must as source files" Literal " not packages." MemberReference Project MSG_WARN log BlockStatement StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separatorChar Literal '.' replace dirs IfStatement MethodInvocation ! MemberReference packageName contains BlockStatement StatementExpression MethodInvocation MemberReference packageName addElement StatementExpression MethodInvocation MemberReference packageName addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation sp MethodInvocation MemberReference baseDir setLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference baseDir Literal " doesn\'t contain any it." MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public FormalParameter ReferenceType type StatementExpression Assignment This MemberReference type MethodInvocation type getValue =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType long lines StatementExpression Assignment This MemberReference lines MemberReference lines =	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType Object VariableDeclarator real MemberReference task IfStatement BinaryOperation instanceof MemberReference task ReferenceType UnknownElement BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator realObj Cast ReferenceType UnknownElement MemberReference task IfStatement BinaryOperation != MemberReference realObj Literal null BlockStatement StatementExpression Assignment MemberReference real MemberReference realObj = LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MethodInvocation real MethodInvocation getName getClass Literal null getLog IfStatement MethodInvocation log isTraceEnabled BlockStatement StatementExpression MethodInvocation MemberReference log BinaryOperation + BinaryOperation + Literal "Task \"" MethodInvocation task getTaskName Literal "\" started " MemberReference Project MSG_VERBOSE Literal null	1
MethodDeclaration Modifier private synchronized close IOException TryStatement StatementExpression MethodInvocation StatementExpression MethodInvocation out close StatementExpression Assignment MemberReference closed Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MethodInvocation MethodInvocation MemberReference value replaceProperties getProject +=	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MethodInvocation file1 exists assertTrue TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation FILE_UTILS ClassCreator ReferenceType FileReader MemberReference file1 readFully StatementExpression MethodInvocation Literal "This is file MemberReference assertEquals CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation test getName Literal ":" MemberReference testCase	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType File dir FormalParameter BasicType boolean LocalVariableDeclaration BasicType int VariableDeclarator removedCount Literal 0 IfStatement MethodInvocation dir isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator children MethodInvocation dir listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference children length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MemberReference ArraySelector MemberReference i children IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression Assignment MemberReference removedCount MethodInvocation MemberReference file Literal true += IfStatement BinaryOperation > MemberReference children length Literal 0 BlockStatement StatementExpression Assignment MemberReference children MethodInvocation dir listFiles = IfStatement BinaryOperation && BinaryOperation < MemberReference children length Literal 1 MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Removing empty directory: " MemberReference dir MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation dir delete StatementExpression MemberReference ++ removedCount ReturnStatement MemberReference removedCount	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration ReferenceType AssertionFailedError getError ReturnStatement MemberReference error	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 StatementExpression MethodInvocation StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation == MemberReference result Literal 255 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object o FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Class VariableDeclarator elementClass MethodInvocation o getClass LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation elementClass getName ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation antTypeTable MethodInvocation iterator values MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def Cast ReferenceType AntTypeDefinition MethodInvocation i next IfStatement BinaryOperation && MethodInvocation MethodInvocation def getClassName equals BinaryOperation == MemberReference elementClass MethodInvocation def MemberReference project BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation def getName ReturnStatement TernaryExpression MemberReference MemberReference name BinaryOperation + BinaryOperation + Literal "The <" MemberReference name Literal "> type" ReturnStatement MethodInvocation MethodInvocation o getClass MemberReference	1
MethodDeclaration Modifier private ReferenceType ResourceCollection ReturnStatement Cast ReferenceType ResourceCollection MethodInvocation ClassReference ReferenceType ResourceCollection Literal getCheckedRef	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal configureProject CatchClause CatchClauseParameter BuildException ex LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation ex getMessage IfStatement BinaryOperation == MethodInvocation message Literal "Duplicate indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal not see in '" MemberReference message Literal "'" Literal false assertTrue ReturnStatement StatementExpression MethodInvocation Literal not see build exception" Literal false assertTrue	0
MethodDeclaration Modifier public ReferenceType String getIncludedFiles IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement SuperMethodInvocation getIncludedFiles StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Set VariableDeclarator s MethodInvocation keySet ReturnStatement Cast ReferenceType String MethodInvocation s ArrayCreator ReferenceType String MethodInvocation s size toArray	1
MethodDeclaration Modifier public BasicType boolean matches FormalParameter ReferenceType String input FormalParameter BasicType int options BuildException ReturnStatement MethodInvocation MemberReference input MethodInvocation MemberReference options getCompiledPattern matches	1
MethodDeclaration Modifier private FormalParameter BasicType char c IOException StatementExpression MethodInvocation stream ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte MemberReference c Literal 0 Literal 1 write	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Task task FormalParameter ReferenceType String message FormalParameter BasicType int priority StatementExpression MethodInvocation MemberReference task MemberReference message Literal null MemberReference priority	0
MethodDeclaration Modifier public static ReferenceType ClassLoader FormalParameter ReferenceType Project p FormalParameter ReferenceType ref ReturnStatement MethodInvocation MemberReference p MemberReference ref Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType long time StatementExpression Assignment MemberReference MemberReference time =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type FormalParameter ReferenceType String from FormalParameter ReferenceType String to LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m MethodInvocation createMapper LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation MemberReference type setValue StatementExpression MethodInvocation m MemberReference StatementExpression MethodInvocation m MemberReference from StatementExpression MethodInvocation m MemberReference to	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType CrLf BinaryOperation == MethodInvocation getIndex Cast ReferenceType CrLf MemberReference other	1
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project project StatementExpression MethodInvocation parent MemberReference project	1
MethodDeclaration Modifier public ReferenceType Enumeration ReturnStatement MethodInvocation elements	0
MethodDeclaration Modifier private static printProperty FormalParameter ReferenceType PrintStream out FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MemberReference key getProperty IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation out MemberReference key print StatementExpression MethodInvocation out Literal " = " print StatementExpression MethodInvocation out Literal '"' print StatementExpression MethodInvocation out MemberReference value print StatementExpression MethodInvocation out Literal '"' println	0
MethodDeclaration ReferenceType IntrospectionHelper IfStatement BinaryOperation == MemberReference ih Literal null BlockStatement StatementExpression Assignment MemberReference ih MethodInvocation IntrospectionHelper MethodInvocation target getClass getHelper = ReturnStatement MemberReference ih	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference Literal Literal StatementExpression MethodInvocation MemberReference Literal Literal StatementExpression MethodInvocation MemberReference Literal Literal StatementExpression MethodInvocation MemberReference Literal Literal LocalVariableDeclaration BasicType char VariableDeclarator s MemberReference File separatorChar StatementExpression MethodInvocation MemberReference BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "" MemberReference s MemberReference s Literal MemberReference s Literal "file" MemberReference s Literal Literal	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference localFile	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation MemberReference name add StatementExpression MethodInvocation MemberReference value add	0
MethodDeclaration Modifier protected ReferenceType URLConnection FormalParameter ReferenceType URLConnection connection FormalParameter ReferenceType String contentType FormalParameter BasicType int contentLength FormalParameter ReferenceType InputStream content IOException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference contentLength Literal " bytes of type " MemberReference contentType MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation connection Literal true setDoOutput StatementExpression MethodInvocation connection Literal MethodInvocation String MemberReference contentLength valueOf setRequestProperty StatementExpression MethodInvocation connection Literal MemberReference contentType setRequestProperty StatementExpression MethodInvocation connection connect LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator MethodInvocation connection getOutputStream LocalVariableDeclaration BasicType int VariableDeclarator buffersize BinaryOperation * MemberReference blockSize Literal 1024 IfStatement BinaryOperation < MemberReference contentLength MemberReference buffersize StatementExpression Assignment MemberReference buffersize MemberReference contentLength = LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference buffersize LocalVariableDeclaration BasicType int VariableDeclarator remaining MemberReference contentLength WhileStatement BinaryOperation > MemberReference remaining Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation content MemberReference buffer read StatementExpression MethodInvocation BinaryOperation + Literal "block of " MemberReference read MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MemberReference buffer Literal 0 MemberReference read write StatementExpression Assignment MemberReference remaining MemberReference read -= IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal '^' IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal '\n' StatementExpression MethodInvocation Literal completed" MemberReference Project MSG_DEBUG log ReturnStatement MemberReference connection	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal value: " StatementExpression MethodInvocation buf MemberReference sizelimit append StatementExpression MethodInvocation buf MethodInvocation MethodInvocation when getValue append Literal " append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String condition StatementExpression Assignment This MemberReference unlessCond MemberReference condition =	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException IfStatement MethodInvocation qname Literal "target" equals BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference	1
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public setPath FormalParameter ReferenceType path StatementExpression Assignment This MemberReference path MemberReference path =	0
MethodDeclaration Modifier protected ReferenceType Hashtable ReturnStatement MemberReference	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MethodInvocation name MemberReference toLowerCase =	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference index MethodInvocation cpStream readUnsignedShort = StatementExpression MethodInvocation Literal setValue	1
MethodDeclaration Modifier public BasicType int selectorCount ReturnStatement MethodInvocation fileset selectorCount	0
MethodDeclaration Modifier public setDefault FormalParameter BasicType boolean def StatementExpression Assignment MemberReference MemberReference def =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String log StatementExpression Assignment MemberReference MemberReference log =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType File jspFile LocalVariableDeclaration ReferenceType String VariableDeclarator jspUri MethodInvocation jspFile getAbsolutePath LocalVariableDeclaration BasicType int VariableDeclarator start BinaryOperation + MethodInvocation jspUri MemberReference File separatorChar lastIndexOf Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation jspUri length LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator modifiedClassName StatementExpression Assignment MemberReference modifiedClassName ClassCreator ReferenceType StringBuffer BinaryOperation - MethodInvocation jspUri length MemberReference start = IfStatement BinaryOperation || MethodInvocation ! Character MethodInvocation jspUri MemberReference start charAt isJavaIdentifierStart BinaryOperation == MethodInvocation jspUri MemberReference start charAt Literal '_' BlockStatement StatementExpression MethodInvocation modifiedClassName Literal '_' append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference start BinaryOperation < MemberReference i MemberReference end MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation jspUri MemberReference i charAt IfStatement MethodInvocation Character MemberReference ch BlockStatement StatementExpression MethodInvocation modifiedClassName MemberReference ch append IfStatement BinaryOperation == MemberReference ch Literal '.' BlockStatement StatementExpression MethodInvocation modifiedClassName Literal '_' append BlockStatement StatementExpression MethodInvocation modifiedClassName MethodInvocation MemberReference ch append ReturnStatement MethodInvocation modifiedClassName toString	1
MethodDeclaration Modifier public handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement StatementExpression MethodInvocation runner MemberReference output handleErrorOutput IfStatement MemberReference BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier protected BasicType boolean isActive ReturnStatement This MemberReference	0
MethodDeclaration Modifier public rename FormalParameter ReferenceType File from FormalParameter ReferenceType File to IOException IfStatement BinaryOperation && MethodInvocation to exists MethodInvocation ! to delete BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to delete " MemberReference to Literal " while trying to rename " MemberReference from LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation to getParentFile IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference parent Literal null MethodInvocation ! parent exists MethodInvocation ! parent mkdirs BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to create directory " MemberReference parent Literal " while trying to rename " MemberReference from IfStatement MethodInvocation ! from MemberReference to renameTo BlockStatement StatementExpression MethodInvocation MemberReference from MemberReference to copyFile IfStatement MethodInvocation ! from delete BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal "Failed to delete " MemberReference from Literal " while trying to rename it."	1
MethodDeclaration Modifier public FormalParameter ReferenceType java ReferenceType io ReferenceType File file StatementExpression Assignment This MemberReference value MethodInvocation file getAbsolutePath =	0
MethodDeclaration Modifier public addModified FormalParameter ReferenceType ModifiedSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference attributes	0
MethodDeclaration Modifier public synchronized BasicType boolean IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference LocalVariableDeclaration BasicType boolean VariableDeclarator goEarly Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation rc iterator BinaryOperation && MemberReference goEarly MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference goEarly Cast ReferenceType ResourceCollection MethodInvocation i next &= IfStatement MemberReference goEarly BlockStatement ReturnStatement Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator MethodInvocation i hasNext BlockStatement IfStatement BinaryOperation instanceof MethodInvocation i next ReferenceType FileResource BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public BasicType byte ReturnStatement MemberReference	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Target target FormalParameter ReferenceType Throwable exception LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference target StatementExpression MethodInvocation event MemberReference exception LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event	0
MethodDeclaration Modifier private ReferenceType XMethod getAttributeMethods FormalParameter ReferenceType XClass cur_class XDocletException LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator is Literal null TryStatement StatementExpression Assignment MemberReference is MethodInvocation IntrospectionHelper MethodInvocation Class MethodInvocation cur_class getQualifiedName forName getHelper = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType XDocletException MemberReference e MethodInvocation e getMessage LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enum2 MethodInvocation is getAttributes LocalVariableDeclaration ReferenceType Properties VariableDeclarator attributeTypeMap ClassCreator ReferenceType Properties WhileStatement MethodInvocation enum2 hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation enum2 nextElement LocalVariableDeclaration ReferenceType Class VariableDeclarator type MethodInvocation is MemberReference name StatementExpression MethodInvocation attributeTypeMap MemberReference name MethodInvocation type getName setProperty LocalVariableDeclaration ReferenceType XMethod VariableDeclarator allMethods MethodInvocation MemberReference cur_class getMethods LocalVariableDeclaration ReferenceType List VariableDeclarator attributeMethods ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference allMethods length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType XMethod VariableDeclarator method MemberReference ArraySelector MemberReference i allMethods LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation method getName IfStatement MethodInvocation ! methodName Literal "set" startsWith BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attributeName MethodInvocation methodName MethodInvocation toLowerCase Literal 3 substring IfStatement BinaryOperation || BinaryOperation != MethodInvocation method MethodInvocation size getParameters Literal 1 MethodInvocation method isPublic BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation method MethodInvocation iterator getParameters LocalVariableDeclaration ReferenceType String VariableDeclarator attributeType Cast ReferenceType MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator mapAttribute MethodInvocation attributeTypeMap MemberReference attributeName getProperty IfStatement BinaryOperation == MemberReference mapAttribute Literal null BlockStatement ContinueStatement IfStatement MethodInvocation ! attributeType MethodInvocation mapAttribute Literal '$' Literal '.' replace equals BlockStatement ContinueStatement StatementExpression MethodInvocation attributeMethods MemberReference method add ReturnStatement Cast ReferenceType XMethod MethodInvocation attributeMethods ArrayCreator ReferenceType XMethod MethodInvocation attributeMethods size toArray	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Target target LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference target LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event targetStarted	0
MethodDeclaration Modifier private static ReferenceType File FormalParameter ReferenceType File input FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean semantic FormalParameter BasicType boolean FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator baseName MethodInvocation input MethodInvocation toLowerCase getName IfStatement MethodInvocation baseName Literal ".xml" endsWith BlockStatement StatementExpression Assignment MemberReference baseName BinaryOperation + MethodInvocation baseName Literal 0 BinaryOperation - MethodInvocation baseName length Literal 4 substring Literal ".properties" = LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation input MethodInvocation getParentFile getParentFile LocalVariableDeclaration ReferenceType String VariableDeclarator goldFileFolder Literal IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference goldFileFolder Literal += BlockStatement StatementExpression Assignment MemberReference goldFileFolder Literal += IfStatement MemberReference semantic BlockStatement StatementExpression Assignment MemberReference goldFileFolder Literal += IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference goldFileFolder Literal += BlockStatement IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference goldFileFolder Literal += BlockStatement StatementExpression Assignment MemberReference goldFileFolder Literal += ReturnStatement ClassCreator ReferenceType File MemberReference dir BinaryOperation + MemberReference goldFileFolder MemberReference baseName	1
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName LocalVariableDeclaration ReferenceType HashSet VariableDeclarator results ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType VariableDeclarator mapper Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator mIter MethodInvocation MethodInvocation iterator MethodInvocation mIter hasNext BlockStatement StatementExpression Assignment MemberReference mapper Cast ReferenceType MethodInvocation mIter next = IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mapped MethodInvocation mapper MemberReference sourceFileName mapFileName IfStatement BinaryOperation != MemberReference mapped Literal null BlockStatement StatementExpression MethodInvocation results MethodInvocation Arrays MemberReference mapped asList addAll ReturnStatement TernaryExpression BinaryOperation == MethodInvocation results size Literal 0 Literal null Cast ReferenceType String MethodInvocation results ArrayCreator ReferenceType String MethodInvocation results size toArray	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation execute	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType XMethod method LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation method MethodInvocation Literal Literal "ignore" getTagAttributeValue getDoc IfStatement Literal MethodInvocation MemberReference value equals "true" BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference value MethodInvocation method MethodInvocation Literal Literal "ignore" getTagAttributeValue getDoc = IfStatement Literal MethodInvocation MemberReference value equals "true" BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl Literal null IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference cl Cast ReferenceType ClassLoader MethodInvocation loader getReferencedObject = IfStatement BinaryOperation == MemberReference cl Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = BlockStatement StatementExpression Assignment MemberReference cl ClassReference MethodInvocation getClassLoader ReferenceType = IfStatement BinaryOperation && BinaryOperation != MemberReference loader Literal null BinaryOperation != MemberReference cl Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation loader getRefId MemberReference cl getProject ReturnStatement TernaryExpression BinaryOperation == MemberReference cl Literal null MethodInvocation ClassLoader MethodInvocation getName getSystemResourceAsStream MethodInvocation cl MethodInvocation getName getResourceAsStream	0
MethodDeclaration Modifier public static configureProject FormalParameter ReferenceType Project project FormalParameter ReferenceType File buildFile BuildException LocalVariableDeclaration ReferenceType ProjectHelper VariableDeclarator helper MethodInvocation ProjectHelper StatementExpression MethodInvocation project MemberReference MemberReference helper StatementExpression MethodInvocation helper MemberReference project MemberReference buildFile parse	1
MethodDeclaration Modifier protected ReferenceType URL BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator urlbase MethodInvocation getURL TryStatement IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference urlbase MethodInvocation = ReturnStatement ClassCreator ReferenceType URL MemberReference urlbase CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Invalid URL"	1
MethodDeclaration Modifier public static BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal "An	0
MethodDeclaration Modifier public FormalParameter ReferenceType attr StatementExpression MethodInvocation Literal The cr attribute has been MemberReference Project MSG_WARN log StatementExpression MethodInvocation Literal "Please use the eol attribute MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType String VariableDeclarator option MethodInvocation attr getValue LocalVariableDeclaration ReferenceType CrLf VariableDeclarator c ClassCreator ReferenceType CrLf IfStatement MethodInvocation option Literal "remove" equals BlockStatement StatementExpression MethodInvocation c Literal setValue IfStatement MethodInvocation option Literal equals BlockStatement StatementExpression MethodInvocation c Literal setValue BlockStatement StatementExpression MethodInvocation c Literal setValue StatementExpression MethodInvocation MemberReference c	1
MethodDeclaration Modifier private ReferenceType Set FormalParameter ReferenceType String actions LocalVariableDeclaration ReferenceType Set VariableDeclarator result ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tk ClassCreator ReferenceType StringTokenizer MemberReference actions Literal "," WhileStatement MethodInvocation tk hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator item MethodInvocation tk MethodInvocation trim nextToken IfStatement MethodInvocation ! item Literal "" equals BlockStatement StatementExpression MethodInvocation result MemberReference item add ReturnStatement MemberReference result	1
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference propertyName BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal "Property attribute must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation == Literal null MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal element must be ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to ThrowStatement ClassCreator ReferenceType UnsupportedAttributeException Literal doesn't support the attribute." Literal	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String asOfDateFormat IfStatement BinaryOperation && BinaryOperation != MemberReference asOfDateFormat Literal null BinaryOperation > MethodInvocation asOfDateFormat length Literal 0 BlockStatement StatementExpression Assignment This MemberReference asOfDateFormat MemberReference asOfDateFormat =	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MethodInvocation name trim =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destFile StatementExpression Assignment This MemberReference destFile MemberReference destFile =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String line ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation line length Literal 3 BinaryOperation == MethodInvocation line Literal 3 charAt Literal '-'	0
MethodDeclaration Modifier public ReferenceType Object getReferencedObject BuildException IfStatement BinaryOperation == MemberReference project Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "No project set on reference to " MemberReference refid ReturnStatement MethodInvocation MemberReference project getReferencedObject	0
MethodDeclaration Modifier public static ReferenceType Element FormalParameter ReferenceType Element parent FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation parent LocalVariableDeclaration ReferenceType Element VariableDeclarator e MethodInvocation doc MemberReference name createElement StatementExpression MethodInvocation parent MemberReference e ReturnStatement MemberReference e	0
MethodDeclaration Modifier protected IfStatement BinaryOperation == MemberReference language Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal language must be specified"	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference password MemberReference s =	0
MethodDeclaration Modifier public static ReferenceType IdentityStack getInstance FormalParameter ReferenceType Stack s IfStatement BinaryOperation instanceof MemberReference s ReferenceType IdentityStack BlockStatement ReturnStatement Cast ReferenceType IdentityStack MemberReference s LocalVariableDeclaration ReferenceType IdentityStack VariableDeclarator result ClassCreator ReferenceType IdentityStack IfStatement BinaryOperation != MemberReference s Literal null BlockStatement StatementExpression MethodInvocation result MemberReference s addAll ReturnStatement MemberReference result	1
MethodDeclaration Modifier public execute BuildException IfStatement MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal argument is required" MethodInvocation getLocation LocalVariableDeclaration ReferenceType Commandline VariableDeclarator toExecute Cast ReferenceType Commandline MethodInvocation cmd clone StatementExpression MethodInvocation toExecute Literal setExecutable IfStatement BinaryOperation != MemberReference originalFile Literal null BlockStatement StatementExpression MethodInvocation toExecute MethodInvocation MemberReference originalFile createArgument LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_WARN Literal null StatementExpression MethodInvocation exe MethodInvocation toExecute getCommandline setCommandline IfStatement BinaryOperation != MemberReference directory Literal null BlockStatement IfStatement BinaryOperation && MethodInvocation directory exists MethodInvocation directory isDirectory BlockStatement StatementExpression MethodInvocation exe MemberReference directory setWorkingDirectory IfStatement MethodInvocation ! directory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference directory Literal " is not a directory." MethodInvocation getLocation BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference directory Literal " doesn\'t exist" MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation exe MethodInvocation MethodInvocation getProject setWorkingDirectory StatementExpression MethodInvocation MethodInvocation toExecute describeCommand MemberReference Project MSG_VERBOSE log TryStatement StatementExpression MethodInvocation exe execute CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String s ReturnStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation != MethodInvocation s length Literal 0	0
MethodDeclaration Modifier public final ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String sourceFileName LocalVariableDeclaration ReferenceType List VariableDeclarator inputs ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator results ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation results MemberReference sourceFileName add LocalVariableDeclaration ReferenceType VariableDeclarator mapper Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator mIter MethodInvocation MethodInvocation iterator MethodInvocation mIter hasNext BlockStatement StatementExpression Assignment MemberReference mapper Cast ReferenceType MethodInvocation mIter next = IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement StatementExpression MethodInvocation inputs clear StatementExpression MethodInvocation inputs MemberReference results addAll StatementExpression MethodInvocation results clear ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation inputs iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mapped MethodInvocation mapper Cast ReferenceType String MethodInvocation it next mapFileName IfStatement BinaryOperation != MemberReference mapped Literal null BlockStatement StatementExpression MethodInvocation results MethodInvocation Arrays MemberReference mapped asList addAll ReturnStatement TernaryExpression BinaryOperation == MethodInvocation results size Literal 0 Literal null Cast ReferenceType String MethodInvocation results ArrayCreator ReferenceType String MethodInvocation results size toArray	1
MethodDeclaration Modifier protected ReferenceType File BuildException LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props Literal "debug" MethodInvocation String MemberReference debug valueOf setProperty StatementExpression MethodInvocation props Literal "host" MemberReference host setProperty StatementExpression MethodInvocation props Literal "port" MethodInvocation String MemberReference port valueOf setProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator classnames MethodInvocation WhileStatement MethodInvocation classnames hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname Cast ReferenceType String MethodInvocation classnames nextElement StatementExpression MethodInvocation buf MethodInvocation Literal " " append MemberReference classname append StatementExpression MethodInvocation props Literal MethodInvocation buf toString setProperty LocalVariableDeclaration ReferenceType FileUtils VariableDeclarator futils MethodInvocation FileUtils LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation futils Literal Literal ClassCreator ReferenceType File Literal "." createTempFile LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null TryStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream StatementExpression Assignment MemberReference os ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference f = StatementExpression MethodInvocation props MemberReference baos Literal Runner configuration file" store StatementExpression MethodInvocation MethodInvocation baos toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation os MethodInvocation baos toByteArray write CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference os Literal null BlockStatement TryStatement StatementExpression MethodInvocation os close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation f getAbsolutePath setValue createArgument ReturnStatement MemberReference f	1
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference MemberReference enable =	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String msg StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_INFO log	0
MethodDeclaration Modifier private ReferenceType String FormalParameter Modifier final ReferenceType String text IfStatement BinaryOperation <= MethodInvocation text length MemberReference BlockStatement ReturnStatement MemberReference text LocalVariableDeclaration BasicType int VariableDeclarator ends BinaryOperation / BinaryOperation - MemberReference MethodInvocation ELLIPSIS length Literal 2 ReturnStatement ClassCreator MethodInvocation MemberReference ends BinaryOperation - MethodInvocation text length MemberReference ends MemberReference ELLIPSIS replace MethodInvocation toString ReferenceType StringBuffer MemberReference text	0
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment This MemberReference command MemberReference c =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation MemberReference IfStatement MethodInvocation ! f exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal test" MemberReference Literal " failed" fail BlockStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference f = CatchClause CatchClauseParameter FileNotFoundException fnfe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal test" MemberReference Literal " failed, filtered file: " MethodInvocation f toString Literal " not found" fail TryStatement StatementExpression Assignment MemberReference line MethodInvocation in readLine = StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal test" MemberReference Literal " IOException while reading filtered file: " MemberReference ioe fail StatementExpression MethodInvocation f delete ReturnStatement MemberReference line	1
MethodDeclaration Modifier public FormalParameter BasicType int granularity StatementExpression Assignment This MemberReference granularity MemberReference granularity =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation MethodInvocation size	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String message ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference MethodInvocation toString	0
MethodDeclaration Modifier private accountForIncludedDir FormalParameter ReferenceType String name FormalParameter ReferenceType AntFTPFile file FormalParameter BasicType boolean fast IfStatement BinaryOperation && MethodInvocation ! MemberReference name contains MethodInvocation ! MemberReference name contains BlockStatement IfStatement MethodInvocation ! MemberReference name BlockStatement IfStatement MemberReference fast BlockStatement IfStatement MethodInvocation file isSymbolicLink BlockStatement TryStatement StatementExpression MethodInvocation file MethodInvocation MemberReference file changeWorkingDirectory CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "could not change directory to curpwd" StatementExpression MethodInvocation MethodInvocation file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir BlockStatement TryStatement StatementExpression MethodInvocation file MethodInvocation MemberReference file changeWorkingDirectory CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "could not change directory to curpwd" StatementExpression MethodInvocation MethodInvocation file getName BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir StatementExpression MethodInvocation MemberReference name addElement BlockStatement StatementExpression MethodInvocation MemberReference name addElement IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference name BlockStatement TryStatement StatementExpression MethodInvocation file MethodInvocation MemberReference file changeWorkingDirectory CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "could not change directory to curpwd" StatementExpression MethodInvocation MethodInvocation file getName BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String filter IfStatement MethodInvocation filter Literal equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference show MemberReference SHOW_ALL = IfStatement MethodInvocation filter Literal equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference show MemberReference = IfStatement MethodInvocation filter Literal equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference show MemberReference = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal should be one of: " Literal	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable var StatementExpression MethodInvocation env MemberReference var addVariable	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation System.out MethodInvocation println	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation project Literal "test" getProperty	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "unknown" MethodInvocation ClassCreator ReferenceType assertEquals	0
MethodDeclaration Modifier public handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation callee MemberReference output handleFlush BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleFlush	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration ReferenceType Object create FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation MemberReference name ReturnStatement TernaryExpression BinaryOperation == MemberReference def Literal null Literal null MethodInvocation def MemberReference project create	0
MethodDeclaration Modifier public static BasicType boolean toBoolean FormalParameter ReferenceType String s ReturnStatement BinaryOperation || BinaryOperation || Literal MethodInvocation MemberReference s equalsIgnoreCase "on" Literal MethodInvocation MemberReference s equalsIgnoreCase "true" Literal MethodInvocation MemberReference s equalsIgnoreCase	1
MethodDeclaration Modifier synchronized protected StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference BinaryOperation != MemberReference basedir Literal null = StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String target FormalParameter ReferenceType String FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation BinaryOperation + BinaryOperation + Literal MethodInvocation target Literal 4 substring Literal read StatementExpression MethodInvocation Literal 5 lines MethodInvocation MemberReference startsWith assertTrue StatementExpression MethodInvocation Literal 5 lines MethodInvocation MemberReference endsWith assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType Attribute attribute LocalVariableDeclaration ReferenceType String VariableDeclarator check MethodInvocation MemberReference attribute IfStatement BinaryOperation != MemberReference check Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Specify the section name using " Literal "the attribute of the element " Literal "than using a manifest attribute"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public FormalParameter ReferenceType File src StatementExpression Assignment MemberReference srcDir MemberReference src =	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference outputFile	0
MethodDeclaration Modifier synchronized protected handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType PrintStream MemberReference errorStream = StatementExpression MethodInvocation MemberReference output print	0
MethodDeclaration Modifier public ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i files Cast ReferenceType String MethodInvocation MemberReference i elementAt = ReturnStatement MemberReference files	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier protected ReferenceType String LocalVariableDeclaration ReferenceType Date VariableDeclarator date ClassCreator ReferenceType Date MethodInvocation System currentTimeMillis LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator formatter MethodInvocation DateFormat MemberReference DateFormat SHORT MemberReference DateFormat SHORT LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation formatter MemberReference date format ReturnStatement MemberReference	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement BinaryOperation * SuperMethodInvocation hashCode TernaryExpression BinaryOperation == MethodInvocation getArchive Literal null MemberReference MethodInvocation MethodInvocation hashCode getArchive	1
MethodDeclaration * This is where the to map from a URI to an antlib * is * @param uri the xml namespace uri that to * @return the name of a It may not */ Modifier public static ReferenceType String FormalParameter ReferenceType String uri LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation uri MethodInvocation length substring LocalVariableDeclaration ReferenceType String VariableDeclarator resource IfStatement MethodInvocation path Literal startsWith BlockStatement StatementExpression Assignment MemberReference resource MethodInvocation path Literal MethodInvocation length substring = IfStatement MethodInvocation ! resource Literal ".xml" endsWith BlockStatement StatementExpression Assignment MemberReference resource BinaryOperation + MemberReference resource MemberReference = BlockStatement StatementExpression Assignment MemberReference resource BinaryOperation + MethodInvocation path Literal '.' Literal '/' replace MemberReference = ReturnStatement MemberReference resource	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public FormalParameter ReferenceType Vector list StatementExpression Assignment This MemberReference toList MemberReference list =	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier protected ReferenceType Execute BuildException IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation MethodInvocation getProject = IfStatement BinaryOperation != MemberReference redirectorElement Literal null BlockStatement StatementExpression MethodInvocation redirectorElement MemberReference redirector LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MethodInvocation createHandler MethodInvocation StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation exe MemberReference dir setWorkingDirectory StatementExpression MethodInvocation exe MemberReference StatementExpression MethodInvocation exe MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator environment MethodInvocation env getVariables IfStatement BinaryOperation != MemberReference environment Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference environment length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Setting environment variable: " MemberReference ArraySelector MemberReference i environment MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MemberReference StatementExpression MethodInvocation exe MemberReference environment ReturnStatement MemberReference exe	1
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType VariableDeclarator r ClassCreator ReferenceType StatementExpression MethodInvocation r MemberReference prefix StatementExpression MethodInvocation MemberReference r	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public setBottom FormalParameter ReferenceType String bottom LocalVariableDeclaration ReferenceType VariableDeclarator h ClassCreator ReferenceType StatementExpression MethodInvocation h MemberReference bottom StatementExpression MethodInvocation MemberReference h	0
MethodDeclaration Modifier public BasicType boolean eval BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType MethodInvocation e nextElement IfStatement MethodInvocation ! c eval BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file ReturnStatement MethodInvocation ClassCreator ReferenceType FileResource MemberReference file isSelected	1
MethodDeclaration Modifier public FormalParameter ReferenceType Task task StatementExpression MethodInvocation MemberReference task	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation filter MemberReference	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getType params equals BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getValue params addElement	0
MethodDeclaration Modifier public registerDTD FormalParameter ReferenceType String publicId FormalParameter ReferenceType String location IfStatement BinaryOperation == MemberReference location Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType File VariableDeclarator fileDTD ClassCreator ReferenceType File MemberReference location IfStatement MethodInvocation ! fileDTD exists BlockStatement StatementExpression Assignment MemberReference fileDTD MethodInvocation owningTask MethodInvocation MemberReference location getProject = IfStatement MethodInvocation fileDTD exists BlockStatement IfStatement BinaryOperation != MemberReference publicId Literal null BlockStatement StatementExpression MethodInvocation MemberReference publicId MemberReference fileDTD put StatementExpression MethodInvocation owningTask BinaryOperation + BinaryOperation + BinaryOperation + Literal "Mapped publicId " MemberReference publicId Literal " to file " MemberReference fileDTD MemberReference Project MSG_VERBOSE log ReturnStatement IfStatement BinaryOperation != MethodInvocation MethodInvocation MemberReference location getResource getClass Literal null BlockStatement IfStatement BinaryOperation != MemberReference publicId Literal null BlockStatement StatementExpression MethodInvocation MemberReference publicId MemberReference location put StatementExpression MethodInvocation owningTask BinaryOperation + BinaryOperation + BinaryOperation + Literal "Mapped publicId " MemberReference publicId Literal " to resource " MemberReference location MemberReference Project MSG_VERBOSE log TryStatement IfStatement BinaryOperation != MemberReference publicId Literal null BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator ClassCreator ReferenceType URL MemberReference location StatementExpression MethodInvocation MemberReference publicId MemberReference put CatchClause CatchClauseParameter java.net.MalformedURLException e	1
MethodDeclaration Modifier public static BasicType int compare FormalParameter BasicType long t1 FormalParameter BasicType long t2 FormalParameter BasicType long g LocalVariableDeclaration BasicType long VariableDeclarator diff BinaryOperation - MemberReference t1 MemberReference t2 LocalVariableDeclaration BasicType long VariableDeclarator abs MethodInvocation Math MemberReference diff abs ReturnStatement TernaryExpression BinaryOperation > MemberReference abs MethodInvocation Math MemberReference g abs Cast BasicType int BinaryOperation / MemberReference diff MemberReference abs Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType String pkg StatementExpression Assignment This MemberReference packageName MemberReference pkg =	0
MethodDeclaration Modifier public ReferenceType Param createParam LocalVariableDeclaration ReferenceType Param VariableDeclarator p ClassCreator ReferenceType Param StatementExpression MethodInvocation params MemberReference p addElement ReturnStatement MemberReference p	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName ReturnStatement ClassCreator ReferenceType File MethodInvocation getDestDir BinaryOperation + MemberReference baseName MemberReference	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement BinaryOperation != MemberReference encoding Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier protected ReferenceType AntClassLoader getLoader ReturnStatement MemberReference loader	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression MethodInvocation env MethodInvocation MemberReference text	0
MethodDeclaration Modifier private sendMail FormalParameter ReferenceType String mailhost FormalParameter BasicType int port FormalParameter ReferenceType String from FormalParameter ReferenceType String replyToList FormalParameter ReferenceType String toList FormalParameter ReferenceType String subject FormalParameter ReferenceType String message IOException LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference mailhost MemberReference port StatementExpression MethodInvocation Literal MethodInvocation StatementExpression MethodInvocation MemberReference from from IfStatement MethodInvocation ! replyToList Literal "" equals BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator t ClassCreator ReferenceType StringTokenizer MemberReference replyToList Literal ", " Literal false WhileStatement MethodInvocation t hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation t nextToken LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator t ClassCreator ReferenceType StringTokenizer MemberReference toList Literal ", " Literal false WhileStatement MethodInvocation t hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation t nextToken to StatementExpression MethodInvocation MemberReference subject LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator ps MethodInvocation StatementExpression MethodInvocation ps MemberReference message println StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String outputEncoding StatementExpression Assignment This MemberReference outputEncoding MemberReference outputEncoding =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference currentHandler	0
MethodDeclaration Modifier public ReferenceType PlanarImage executeDrawOperation LocalVariableDeclaration ReferenceType VariableDeclarator bi ClassCreator ReferenceType BinaryOperation + MemberReference width BinaryOperation * MemberReference stroke_width Literal 2 BinaryOperation + MemberReference height BinaryOperation * MemberReference stroke_width Literal 2 MemberReference TYPE_4BYTE_ABGR_PRE LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics Cast ReferenceType Graphics2D MethodInvocation bi IfStatement MethodInvocation ! Literal "transparent" equals BlockStatement LocalVariableDeclaration ReferenceType BasicStroke VariableDeclarator bStroke ClassCreator ReferenceType BasicStroke MemberReference stroke_width StatementExpression MethodInvocation graphics MethodInvocation ColorMapper MemberReference getColorByName setColor StatementExpression MethodInvocation graphics MemberReference bStroke setStroke StatementExpression MethodInvocation graphics ClassCreator ReferenceType Arc2D ReferenceType Double MemberReference stroke_width MemberReference stroke_width MemberReference width MemberReference height MemberReference start MemberReference stop MemberReference type draw IfStatement MethodInvocation ! fill Literal "transparent" equals BlockStatement StatementExpression MethodInvocation graphics MethodInvocation ColorMapper MemberReference fill getColorByName setColor StatementExpression MethodInvocation graphics ClassCreator ReferenceType Arc2D ReferenceType Double MemberReference stroke_width MemberReference stroke_width MemberReference width MemberReference height MemberReference start MemberReference stop MemberReference type fill ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator img Cast ReferenceType DrawOperation MemberReference instr StatementExpression MethodInvocation graphics MethodInvocation img getAsBufferedImage Literal null Literal 0 Literal 0 IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement StatementExpression Assignment MemberReference graphics Cast ReferenceType Graphics2D MethodInvocation bi = LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator image Cast ReferenceType TransformOperation MemberReference instr StatementExpression Assignment MemberReference bi MethodInvocation image getAsBufferedImage = ReturnStatement MethodInvocation PlanarImage MemberReference bi wrapRenderedImage	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String SAXException StatementExpression MethodInvocation currentHandler MemberReference uri MemberReference name MemberReference context LocalVariableDeclaration ReferenceType VariableDeclarator prev Cast ReferenceType MethodInvocation pop StatementExpression Assignment MemberReference currentHandler MemberReference prev = IfStatement BinaryOperation != MemberReference currentHandler Literal null BlockStatement StatementExpression MethodInvocation currentHandler MemberReference uri MemberReference name MemberReference MemberReference context	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "property attribute required" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute required" MethodInvocation getLocation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation file getParent StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference value setNewProperty getProject	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType String VariableDeclarator enc TernaryExpression BinaryOperation == MemberReference encoding Literal null Literal MemberReference encoding StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal Literal " MethodInvocation filter MethodInvocation getValue Literal " MethodInvocation filter MethodInvocation getValue Literal " MethodInvocation filter MethodInvocation getValue Literal " MethodInvocation filter Literal " MemberReference enc Literal " TernaryExpression BinaryOperation == MemberReference outputEncoding Literal null MemberReference enc MemberReference outputEncoding MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds SuperMethodInvocation MemberReference srcDir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i files processFile	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator hasJar BinaryOperation != MemberReference jar Literal null LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator hasSignedJar BinaryOperation != MemberReference Literal null LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator hasDestDir BinaryOperation != MemberReference destDir Literal null LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator hasMapper BinaryOperation != MemberReference mapper Literal null IfStatement BinaryOperation && MemberReference ! hasJar MethodInvocation ! hasResources BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation == Literal null MemberReference alias BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation == Literal null MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation && MemberReference hasDestDir MemberReference hasSignedJar BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation && MethodInvocation hasResources MemberReference hasSignedJar BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation && MemberReference ! hasDestDir MemberReference hasMapper BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation TryStatement IfStatement BinaryOperation && MemberReference hasJar MemberReference hasSignedJar BlockStatement StatementExpression MethodInvocation MemberReference jar MemberReference signOneJar ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator sources MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator destMapper IfStatement MemberReference hasMapper BlockStatement StatementExpression Assignment MemberReference destMapper MemberReference mapper = BlockStatement StatementExpression Assignment MemberReference destMapper ClassCreator ReferenceType IdentityMapper = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation sources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr Cast ReferenceType FileResource MethodInvocation iter next LocalVariableDeclaration ReferenceType File VariableDeclarator toDir TernaryExpression MemberReference hasDestDir MemberReference destDir MethodInvocation fr LocalVariableDeclaration ReferenceType String VariableDeclarator destFilenames MethodInvocation destMapper MethodInvocation fr getName mapFileName IfStatement BinaryOperation || BinaryOperation == MemberReference destFilenames Literal null BinaryOperation != MemberReference destFilenames length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MethodInvocation fr getFile LocalVariableDeclaration ReferenceType File VariableDeclarator destFile ClassCreator ReferenceType File MemberReference toDir MemberReference ArraySelector Literal 0 destFilenames StatementExpression MethodInvocation MethodInvocation fr getFile MemberReference destFile signOneJar StatementExpression MethodInvocation	1
MethodDeclaration Modifier public final write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException LocalVariableDeclaration BasicType int VariableDeclarator offset MemberReference off LocalVariableDeclaration BasicType int VariableDeclarator blockStartOffset MemberReference offset LocalVariableDeclaration BasicType int VariableDeclarator remaining MemberReference len WhileStatement BinaryOperation > MemberReference remaining Literal 0 BlockStatement WhileStatement BinaryOperation && BinaryOperation && BinaryOperation > MemberReference remaining Literal 0 BinaryOperation != MemberReference ArraySelector MemberReference offset b MemberReference LF BinaryOperation != MemberReference ArraySelector MemberReference offset b MemberReference CR BlockStatement StatementExpression MemberReference ++ offset StatementExpression MemberReference -- remaining LocalVariableDeclaration BasicType int VariableDeclarator blockLength BinaryOperation - MemberReference offset MemberReference blockStartOffset IfStatement BinaryOperation > MemberReference blockLength Literal 0 BlockStatement StatementExpression MethodInvocation buffer MemberReference b MemberReference blockStartOffset MemberReference blockLength write WhileStatement BinaryOperation && BinaryOperation > MemberReference remaining Literal 0 BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference offset b MemberReference LF BinaryOperation == MemberReference ArraySelector MemberReference offset b MemberReference CR BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference offset b write StatementExpression MemberReference ++ offset StatementExpression MemberReference -- remaining StatementExpression Assignment MemberReference blockStartOffset MemberReference offset =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String remove StatementExpression Assignment This MemberReference remove MemberReference remove =	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType Object object ReturnStatement ClassCreator ReferenceType MemberReference object	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MemberReference MemberReference MemberReference MemberReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier public handleFlush FormalParameter ReferenceType String IfStatement BinaryOperation != MemberReference newProject Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference Literal false BlockStatement StatementExpression SuperMethodInvocation MemberReference handleFlush	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal expectLog	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ne StatementExpression Assignment MemberReference MemberReference ne =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response	0
MethodDeclaration Modifier public ReferenceType ArrayList ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType cp IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath MemberReference cp = BlockStatement StatementExpression MethodInvocation classpath MemberReference cp append	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator targetName MethodInvocation event MethodInvocation getName LocalVariableDeclaration ReferenceType Logger VariableDeclarator MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Target getLogger IfStatement BinaryOperation == MethodInvocation event getException Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Target \"" MemberReference targetName Literal "\" info BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Target \"" MemberReference targetName Literal "\" finished with error." MethodInvocation event getException error	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal "from simple in expectLog	0
MethodDeclaration Modifier final public static BasicType boolean FormalParameter ReferenceType String s ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference s length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! MemberReference ArraySelector MemberReference i s BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dir StatementExpression Assignment MemberReference baseDir MemberReference dir =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation facade	0
MethodDeclaration Modifier protected ReferenceType ReferenceType Config getConfig ReturnStatement MemberReference config	0
MethodDeclaration Modifier public ReferenceType Location getLocation ReturnStatement MemberReference location	0
MethodDeclaration Modifier public FormalParameter BasicType int milliseconds StatementExpression Assignment This MemberReference milliseconds MemberReference milliseconds =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType InputStream wrapStream FormalParameter ReferenceType InputStream in IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MAGIC length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation in read MemberReference ArraySelector MemberReference i MAGIC BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "Invalid bz2 stream." ReturnStatement ClassCreator ReferenceType CBZip2InputStream MemberReference in	1
MethodDeclaration Modifier protected ReferenceType String getSystemId FormalParameter ReferenceType File file ReturnStatement MethodInvocation MemberReference file getSystemId	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference NONE MemberReference MemberReference	0
MethodDeclaration Modifier public static close FormalParameter ReferenceType Writer device IfStatement BinaryOperation != MemberReference device Literal null BlockStatement TryStatement StatementExpression MethodInvocation device close CatchClause CatchClauseParameter IOException ioex	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration BasicType int VariableDeclarator depth Literal - 1 LocalVariableDeclaration ReferenceType String VariableDeclarator absBase MethodInvocation basedir getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokBase ClassCreator ReferenceType StringTokenizer MemberReference absBase MemberReference File separator LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokFile ClassCreator ReferenceType StringTokenizer MemberReference MemberReference File separator WhileStatement MethodInvocation tokFile hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation tokFile nextToken IfStatement MethodInvocation tokBase hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation tokBase nextToken IfStatement MethodInvocation ! MemberReference equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MemberReference filename Literal " does not appear within " MemberReference absBase Literal "directory" BlockStatement StatementExpression Assignment MemberReference depth Literal 1 += IfStatement BinaryOperation && BinaryOperation > MemberReference max Literal - 1 BinaryOperation > MemberReference depth MemberReference max BlockStatement ReturnStatement Literal false IfStatement MethodInvocation tokBase hasMoreTokens BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MemberReference filename Literal " is outside of " MemberReference absBase Literal IfStatement BinaryOperation && BinaryOperation > MemberReference min Literal - 1 BinaryOperation < MemberReference depth MemberReference min BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public FormalParameter ReferenceType File targetFile StatementExpression Assignment This MemberReference targetFile MemberReference targetFile =	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Vector contains StatementExpression Assignment This MemberReference contains MemberReference contains =	1
MethodDeclaration Modifier public log FormalParameter ReferenceType String message ThrowStatement ClassCreator ReferenceType AssertionFailedError BinaryOperation + Literal message: " MemberReference message	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType src IfStatement BinaryOperation == MemberReference sourcePath Literal null BlockStatement StatementExpression Assignment MemberReference sourcePath MemberReference src = BlockStatement StatementExpression MethodInvocation sourcePath MemberReference src append	0
MethodDeclaration Modifier public FormalParameter BasicType boolean compress StatementExpression Assignment This MemberReference compress MemberReference compress =	0
MethodDeclaration Modifier public validateConfigured BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference destDir Literal null MethodInvocation destDir isDirectory BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "A valid destination directory must be specified " Literal "using the attribute." ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "recursive expectBuildException	0
MethodDeclaration Modifier public final ReferenceType String getKey ReturnStatement MemberReference key	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType String name ReturnStatement Literal a foo,	0
MethodDeclaration Modifier public IfStatement MethodInvocation ! BlockStatement IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal must not be IfStatement MethodInvocation value Literal "file" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference Literal false = IfStatement MethodInvocation value Literal "directory" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference Literal false = IfStatement MethodInvocation ! operation Literal "equals" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation Literal true	1
MethodDeclaration Modifier public ReferenceType String BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buffer MemberReference namespace append StatementExpression MethodInvocation buffer Literal ' ' append StatementExpression MethodInvocation buffer MethodInvocation append ReturnStatement ClassCreator ReferenceType String MemberReference buffer	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator d MethodInvocation ReturnStatement TernaryExpression BinaryOperation == MemberReference d Literal null MethodInvocation getDataTypeName BinaryOperation + BinaryOperation + MethodInvocation getDataTypeName Literal " " MemberReference d	0
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException IfStatement BinaryOperation <= MemberReference remaining Literal 0 BlockStatement IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference ArraySelector MemberReference off b Literal 0 = ReturnStatement Literal 1 ReturnStatement Literal - 1 IfStatement BinaryOperation <= MemberReference len Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation > MemberReference len MemberReference remaining BlockStatement StatementExpression Assignment MemberReference len Cast BasicType int MemberReference remaining = LocalVariableDeclaration BasicType int VariableDeclarator ret Literal - 1 SynchronizedStatement MemberReference archive StatementExpression MethodInvocation archive MemberReference loc seek StatementExpression Assignment MemberReference ret MethodInvocation archive MemberReference b MemberReference off MemberReference len read = IfStatement BinaryOperation > MemberReference ret Literal 0 BlockStatement StatementExpression Assignment MemberReference loc MemberReference ret += StatementExpression Assignment MemberReference remaining MemberReference ret -= ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public static ReferenceType String TryStatement ReturnStatement MethodInvocation System MemberReference getProperty CatchClause CatchClauseParameter SecurityException e ReturnStatement Literal null	0
MethodDeclaration Modifier private FormalParameter BasicType byte data FormalParameter BasicType int offset FormalParameter BasicType int length FormalParameter ReferenceType OutputStream out IOException StatementExpression MethodInvocation out Cast BasicType byte BinaryOperation + BinaryOperation & MemberReference length Literal 0x3F Literal ' ' write LocalVariableDeclaration BasicType byte VariableDeclarator a LocalVariableDeclaration BasicType byte VariableDeclarator b LocalVariableDeclaration BasicType byte VariableDeclarator c ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length BlockStatement StatementExpression Assignment MemberReference b Literal 1 = StatementExpression Assignment MemberReference c Literal 1 = StatementExpression Assignment MemberReference a MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference ++ i data = IfStatement BinaryOperation < MemberReference i MemberReference length BlockStatement StatementExpression Assignment MemberReference b MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference ++ i data = IfStatement BinaryOperation < MemberReference i MemberReference length BlockStatement StatementExpression Assignment MemberReference c MemberReference ArraySelector BinaryOperation + MemberReference offset MemberReference ++ i data = LocalVariableDeclaration BasicType byte VariableDeclarator d1 Cast BasicType byte BinaryOperation + BinaryOperation & BinaryOperation >>> MemberReference a Literal 2 Literal 0x3F Literal ' ' LocalVariableDeclaration BasicType byte VariableDeclarator d2 Cast BasicType byte BinaryOperation + BinaryOperation | BinaryOperation & BinaryOperation << MemberReference a Literal 4 Literal BinaryOperation & BinaryOperation >>> MemberReference b Literal 4 Literal Literal ' ' LocalVariableDeclaration BasicType byte VariableDeclarator d3 Cast BasicType byte BinaryOperation + BinaryOperation | BinaryOperation & BinaryOperation << MemberReference b Literal 2 Literal BinaryOperation & BinaryOperation >>> MemberReference c Literal 6 Literal Literal ' ' LocalVariableDeclaration BasicType byte VariableDeclarator d4 Cast BasicType byte BinaryOperation + BinaryOperation & MemberReference c Literal 0x3F Literal ' ' StatementExpression MethodInvocation out MemberReference d1 write StatementExpression MethodInvocation out MemberReference d2 write StatementExpression MethodInvocation out MemberReference d3 write StatementExpression MethodInvocation out MemberReference d4 write StatementExpression MethodInvocation out Literal '\n' write	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator timeZone MethodInvocation TimeZone Literal LocalVariableDeclaration ReferenceType Calendar VariableDeclarator cal MethodInvocation Calendar MemberReference timeZone getInstance StatementExpression MethodInvocation cal Literal 2002 Literal 1 Literal 23 Literal 10 Literal 11 Literal 12 set LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation MethodInvocation cal MemberReference format StatementExpression MethodInvocation Literal MemberReference text assertEquals	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String input ReturnStatement BinaryOperation || BinaryOperation != MethodInvocation input Literal '*' indexOf Literal - 1 BinaryOperation != MethodInvocation input Literal '?' indexOf Literal - 1	1
MethodDeclaration Modifier protected ReferenceType File FormalParameter ReferenceType String filename IfStatement MethodInvocation filename Literal "." equals BlockStatement ReturnStatement MethodInvocation ReturnStatement ClassCreator ReferenceType File MethodInvocation MemberReference filename	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference trim MemberReference b =	0
MethodDeclaration Modifier protected visit FormalParameter ReferenceType Folder starteamFolder FormalParameter ReferenceType java ReferenceType io ReferenceType File targetFolder BuildException TryStatement IfStatement BinaryOperation != Literal null MethodInvocation BlockStatement StatementExpression MethodInvocation starteamFolder MethodInvocation targetFolder getAbsolutePath LocalVariableDeclaration ReferenceType Folder VariableDeclarator foldersList MethodInvocation starteamFolder getSubFolders LocalVariableDeclaration ReferenceType Item VariableDeclarator stFiles MethodInvocation starteamFolder MethodInvocation MemberReference FILE getItems LocalVariableDeclaration ReferenceType UnmatchedFileMap VariableDeclarator ufm ClassCreator MethodInvocation MethodInvocation targetFolder getAbsoluteFile MemberReference starteamFolder init ReferenceType ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator size MemberReference foldersList length BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Folder VariableDeclarator stFolder MemberReference ArraySelector MemberReference i foldersList LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator subfolder ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MethodInvocation stFolder getName StatementExpression MethodInvocation ufm MemberReference subfolder removeControlledItem IfStatement MethodInvocation isRecursive BlockStatement StatementExpression MethodInvocation MemberReference stFolder MemberReference subfolder visit ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator size MemberReference stFiles length BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File VariableDeclarator stFile Cast ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File MemberReference ArraySelector MemberReference i stFiles StatementExpression MethodInvocation MemberReference stFile processFile StatementExpression MethodInvocation ufm ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MethodInvocation stFile getName removeControlledItem IfStatement This MemberReference BlockStatement StatementExpression MethodInvocation ufm processUncontrolledItems CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Project other LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation e MethodInvocation toString nextElement IfStatement BinaryOperation != MethodInvocation other MemberReference arg Literal null BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference arg get StatementExpression MethodInvocation other MemberReference arg MethodInvocation value toString	0
MethodDeclaration Modifier public testParagraphCharacter IOException StatementExpression MethodInvocation reg Literal "end of text$" StatementExpression MethodInvocation Literal character" MethodInvocation ! reg Literal "end of matches assertTrue	1
MethodDeclaration Modifier public addTarget FormalParameter ReferenceType Target target StatementExpression MethodInvocation MemberReference target addElement StatementExpression Assignment MemberReference currentTarget MemberReference target =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean bool StatementExpression Assignment MemberReference MemberReference bool =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType PrintWriter MemberReference sw write CatchClause CatchClauseParameter IOException e ReturnStatement Literal null ReturnStatement MethodInvocation sw toString	1
MethodDeclaration Modifier public ReferenceType String FormalParameter Modifier final ReferenceType String value LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation value length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation value MemberReference i charAt IfStatement MethodInvocation MemberReference c BlockStatement StatementExpression MethodInvocation sb MemberReference c append LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation sb Literal 0 substring LocalVariableDeclaration BasicType int VariableDeclarator cdEnd MethodInvocation result Literal "]]>" indexOf WhileStatement BinaryOperation != MemberReference cdEnd Literal - 1 BlockStatement StatementExpression MethodInvocation sb MemberReference cdEnd setLength StatementExpression MethodInvocation sb MethodInvocation MethodInvocation result BinaryOperation + MemberReference cdEnd Literal 3 substring append Literal append StatementExpression Assignment MemberReference result MethodInvocation sb Literal 0 substring = StatementExpression Assignment MemberReference cdEnd MethodInvocation result Literal "]]>" indexOf = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public addPresent FormalParameter ReferenceType selector StatementExpression MethodInvocation fileset MemberReference selector addPresent	1
MethodDeclaration Modifier public FormalParameter ReferenceType JUnitTest suite IfStatement BinaryOperation == MemberReference output Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Testsuite: " StatementExpression MethodInvocation sb MethodInvocation suite getName append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append StatementExpression MethodInvocation output MethodInvocation sb toString write StatementExpression MethodInvocation output flush	1
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String s ReturnStatement MethodInvocation MemberReference s	0
MethodDeclaration Modifier public synchronized ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef StatementExpression MethodInvocation dieOnCircularReference ReturnStatement MethodInvocation w toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType Mapper VariableDeclarator ClassCreator ReferenceType Mapper MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference add LocalVariableDeclaration ReferenceType Mapper VariableDeclarator ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation ClassReference MethodInvocation getName ReferenceType setClassname StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator targets MethodInvocation Literal mapFileName StatementExpression MethodInvocation Literal "no MemberReference targets assertNotNull StatementExpression MethodInvocation Literal "wrong number of Literal 2 MemberReference targets length assertEquals LocalVariableDeclaration ReferenceType List VariableDeclarator list MethodInvocation Arrays MemberReference targets asList StatementExpression MethodInvocation Literal "cannot find expected target MethodInvocation list Literal contains assertTrue StatementExpression MethodInvocation Literal "cannot find expected target MethodInvocation list Literal contains assertTrue	0
MethodDeclaration Modifier public characters FormalParameter BasicType char ch FormalParameter BasicType int start FormalParameter BasicType int length SAXException StatementExpression Assignment MemberReference currentText ClassCreator ReferenceType String MemberReference ch MemberReference start MemberReference length +=	1
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType ProjectComponentHelper VariableDeclarator MethodInvocation ProjectComponentHelper StatementExpression MethodInvocation This LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation This MethodInvocation getClass MethodInvocation getClassLoader LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference findResources LocalVariableDeclaration ReferenceType Vector VariableDeclarator vector ClassCreator ReferenceType Vector WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator resourceInfo MethodInvocation StatementExpression MethodInvocation vector MemberReference resourceInfo add StatementExpression MethodInvocation System.out BinaryOperation + Literal "Found " MemberReference resourceInfo println StatementExpression Assignment MemberReference discoveredTasks ArrayCreator ReferenceType Resource MethodInvocation vector size = StatementExpression MethodInvocation vector MemberReference discoveredTasks copyInto	1
MethodDeclaration Modifier public ReferenceType Object evaluateScript FormalParameter ReferenceType String execName BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator engine MethodInvocation IfStatement BinaryOperation == MemberReference engine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to create javax script engine for " MethodInvocation getLanguage ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation keySet MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation i next LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MethodInvocation MemberReference key get StatementExpression MethodInvocation engine Literal ClassReference ReferenceType String MemberReference key ClassReference ReferenceType Object MemberReference value invoke ReturnStatement MethodInvocation engine Literal "eval" ClassReference ReferenceType String MethodInvocation getScript invoke CatchClause CatchClauseParameter Exception be LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MemberReference be LocalVariableDeclaration ReferenceType Throwable VariableDeclarator te Cast ReferenceType Throwable MethodInvocation MemberReference be Literal invoke IfStatement BinaryOperation != MemberReference te Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference te ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference te BlockStatement StatementExpression Assignment MemberReference t MemberReference te = ThrowStatement ClassCreator ReferenceType BuildException MemberReference t StatementExpression MethodInvocation MemberReference	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference charset	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public static deleteSymlink FormalParameter ReferenceType File linkfil IOException FileNotFoundException IfStatement MethodInvocation ! linkfil exists BlockStatement ThrowStatement ClassCreator ReferenceType FileNotFoundException BinaryOperation + Literal "No such " MemberReference linkfil LocalVariableDeclaration ReferenceType File VariableDeclarator canfil MethodInvocation linkfil getCanonicalFile LocalVariableDeclaration ReferenceType File VariableDeclarator temp MethodInvocation FILE_UTILS Literal Literal ".tmp" MethodInvocation canfil getParentFile createTempFile TryStatement TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference canfil MemberReference temp rename CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal "Couldn't rename resource when attempting to delete " MemberReference linkfil IfStatement MethodInvocation ! linkfil delete BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal "Couldn't delete " MemberReference linkfil Literal " it a real is this not a TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference temp MemberReference canfil rename CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Couldn't return resource " MemberReference temp Literal " to its original name: " MethodInvocation canfil getAbsolutePath Literal "\n NAME " Literal	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createArg ReturnStatement MethodInvocation cmdl createArgument	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Commandline cmd FormalParameter BasicType int firstFileName LocalVariableDeclaration ReferenceType File VariableDeclarator vmsFile Literal null TryStatement StatementExpression Assignment MemberReference vmsFile MethodInvocation JavaEnvUtils MethodInvocation cmd createVmsJavaOptionFile = LocalVariableDeclaration ReferenceType String VariableDeclarator commandLine ArrayInitializer MethodInvocation cmd getExecutable Literal MethodInvocation vmsFile getPath ReturnStatement BinaryOperation == Literal 0 MethodInvocation MemberReference commandLine MemberReference firstFileName Literal true executeExternalCompile CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Failed to create a temporary file for StatementExpression MethodInvocation FileUtils MemberReference vmsFile delete	1
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference taskType MemberReference type =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration * get the location of the * @return path or null for in it */ Modifier private static ReferenceType String LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser MethodInvocation IfStatement BinaryOperation == MemberReference saxParser Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator location MethodInvocation MethodInvocation saxParser getClass ReturnStatement MemberReference location	1
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType File directory LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType This StatementExpression MethodInvocation init IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference output Literal null BlockStatement StatementExpression MethodInvocation MemberReference output IfStatement BinaryOperation != MemberReference directory Literal null BlockStatement StatementExpression MethodInvocation MemberReference directory StatementExpression MethodInvocation MemberReference ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation properties elements MethodInvocation i hasMoreElements BlockStatement StatementExpression MethodInvocation MethodInvocation Cast ReferenceType Property MethodInvocation i nextElement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation elements MethodInvocation i hasMoreElements BlockStatement StatementExpression MethodInvocation Cast ReferenceType MethodInvocation i nextElement StatementExpression MethodInvocation MemberReference ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation references elements MethodInvocation i hasMoreElements BlockStatement StatementExpression MethodInvocation Cast ReferenceType ReferenceType MethodInvocation i nextElement ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation || BinaryOperation == MemberReference propName Literal null BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "name and value required" StatementExpression MethodInvocation MemberReference propName MethodInvocation value toString setNewProperty	0
MethodDeclaration Modifier private FormalParameter ReferenceType String message FormalParameter ReferenceType String filename StatementExpression MethodInvocation MemberReference message MethodInvocation ! MethodInvocation MemberReference filename MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MemberReference p ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference fieldName	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation formatter MemberReference evt	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " Literal " Literal " Literal " Literal " Literal " Literal " Literal " Literal	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier final public static ReferenceType String FormalParameter ReferenceType String value LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MethodInvocation value length LocalVariableDeclaration Modifier final BasicType int VariableDeclarator len MethodInvocation value length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation value MemberReference i charAt IfStatement BinaryOperation == MemberReference c Literal '/' BlockStatement StatementExpression MethodInvocation buf Literal '\\' append StatementExpression MethodInvocation buf MemberReference c append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public IfStatement MemberReference ! BlockStatement ReturnStatement IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds Literal true StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType ArrayList toExtensions FormalParameter Modifier final ReferenceType ArrayList BuildException LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator results ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType ExtensionSet VariableDeclarator set Cast ReferenceType ExtensionSet MethodInvocation MemberReference i get LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extensions MethodInvocation set MethodInvocation getProject toExtensions ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference extensions length MemberReference ++ j BlockStatement StatementExpression MethodInvocation results MemberReference ArraySelector MemberReference j extensions add ReturnStatement MemberReference results	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project init StatementExpression MethodInvocation project Literal "basedir" MethodInvocation basedir getAbsolutePath	0
MethodDeclaration Modifier public BasicType boolean getFailOnErr ReturnStatement MemberReference	0
MethodDeclaration Modifier private assertStringContains FormalParameter ReferenceType String string FormalParameter ReferenceType String contains StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "[" MemberReference string Literal "] does not contain [" MemberReference contains Literal "]" BinaryOperation > MethodInvocation string MemberReference contains indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier private BasicType boolean LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator l Literal null TryStatement StatementExpression Assignment MemberReference l MethodInvocation MethodInvocation MethodInvocation createClassLoader getProject = StatementExpression MethodInvocation l Literal loadClass ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException e ReturnStatement Literal false IfStatement BinaryOperation != MemberReference l Literal null BlockStatement StatementExpression MethodInvocation l cleanup	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier private synchronized ReferenceType Collection IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! BlockStatement StatementExpression Assignment MemberReference MethodInvocation getCollection = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType value LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation p MemberReference value StatementExpression Assignment MemberReference parts ArrayCreator ReferenceType String ArrayInitializer MethodInvocation p toString =	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String resource StatementExpression Assignment MemberReference resource BinaryOperation + MethodInvocation resource Literal '.' Literal '/' replace Literal ".class" = LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation getClassLoader MethodInvocation MemberReference resource getResource getClass IfStatement BinaryOperation == MemberReference url Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator u MethodInvocation url toString IfStatement MethodInvocation u Literal "jar:file:" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation u Literal "!" indexOf ReturnStatement MethodInvocation u Literal MethodInvocation length "jar:file:" MemberReference substring IfStatement MethodInvocation u Literal "file:" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator tail MethodInvocation u MemberReference resource indexOf ReturnStatement MethodInvocation u Literal MethodInvocation length "file:" MemberReference tail substring ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType int getPort ReturnStatement MemberReference port	0
MethodDeclaration Modifier private processSlowScan FormalParameter ReferenceType String arr ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference arr length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! MemberReference ArraySelector MemberReference i arr BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference i arr BinaryOperation + MemberReference ArraySelector MemberReference i arr MemberReference File separator Literal false scandir	1
MethodDeclaration StatementExpression MethodInvocation System.out ClassReference ReferenceType print	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator r ClassCreator ReferenceType Literal "bar" TryStatement StatementExpression MethodInvocation MemberReference r StatementExpression MethodInvocation Literal "should have caught fail CatchClause CatchClauseParameter ImmutableResourceException e CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation BinaryOperation + Literal "caught some other IOException: " MemberReference e fail StatementExpression MethodInvocation Literal "bar" MethodInvocation r getValue assertEquals	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target FormalParameter ReferenceType String name FormalParameter ReferenceType String contains IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference name MemberReference contains	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType BaseSelector VariableDeclarator s MethodInvocation getInstance IfStatement BinaryOperation == MemberReference s Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation s Literal error" setError TryStatement StatementExpression MethodInvocation s MemberReference MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal "Cannot cause BuildException when is fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal error" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType String VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator baseDir Literal null LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation context getProject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attrs getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation attrs MemberReference i getQName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attrs MemberReference i getValue IfStatement MethodInvocation key Literal equals BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation ! value Literal "" equals BlockStatement IfStatement MemberReference ! context StatementExpression MethodInvocation project MemberReference value IfStatement MethodInvocation key Literal "name" equals BlockStatement IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference context MemberReference value = IfStatement MemberReference ! context BlockStatement StatementExpression MethodInvocation project MemberReference value setName StatementExpression MethodInvocation project MemberReference value MemberReference project IfStatement MethodInvocation key Literal "id" equals BlockStatement IfStatement BinaryOperation != MemberReference value Literal null BlockStatement IfStatement MemberReference ! context BlockStatement StatementExpression MethodInvocation project MemberReference value MemberReference project IfStatement MethodInvocation key Literal "basedir" equals BlockStatement IfStatement MemberReference ! context StatementExpression Assignment MemberReference baseDir MemberReference value = BlockStatement ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected attribute \"" MethodInvocation attrs MemberReference i getQName Literal "\"" MemberReference context locator StatementExpression MethodInvocation project BinaryOperation + Literal "ant.file." MemberReference context MethodInvocation toString IfStatement MemberReference context BlockStatement ReturnStatement IfStatement BinaryOperation != MethodInvocation project Literal "basedir" getProperty Literal null BlockStatement StatementExpression MethodInvocation project MethodInvocation project Literal "basedir" getProperty BlockStatement IfStatement BinaryOperation == MemberReference baseDir Literal null BlockStatement StatementExpression MethodInvocation project MethodInvocation getAbsolutePath BlockStatement IfStatement ClassCreator MethodInvocation isAbsolute ReferenceType File MemberReference baseDir BlockStatement StatementExpression MethodInvocation project MemberReference baseDir BlockStatement StatementExpression MethodInvocation project MethodInvocation project MemberReference baseDir MemberReference context StatementExpression MethodInvocation project Literal "" MemberReference context addTarget StatementExpression Assignment MemberReference context currentTarget MemberReference context =	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression MethodInvocation ClassCreator ReferenceType Double MethodInvocation cpStream readDouble setValue	1
MethodDeclaration Modifier private FormalParameter ReferenceType File baseDir FormalParameter ReferenceType File FormalParameter ReferenceType String classname FormalParameter ReferenceType RmicAdapter adapter BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation classname Literal '.' MemberReference File separatorChar replace Literal ".class" LocalVariableDeclaration ReferenceType String VariableDeclarator generatedFiles MethodInvocation adapter MethodInvocation MemberReference mapFileName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference generatedFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator generatedFile MemberReference ArraySelector MemberReference i generatedFiles IfStatement MethodInvocation ! generatedFile Literal ".class" endsWith BlockStatement ContinueStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator pos BinaryOperation - MethodInvocation generatedFile length Literal MethodInvocation length ".class" LocalVariableDeclaration ReferenceType String VariableDeclarator sourceFileName BinaryOperation + MethodInvocation generatedFile Literal 0 MemberReference pos substring Literal ".java" LocalVariableDeclaration ReferenceType File VariableDeclarator oldFile ClassCreator ReferenceType File MemberReference baseDir MemberReference sourceFileName IfStatement MethodInvocation ! oldFile exists BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator newFile ClassCreator ReferenceType File MemberReference MemberReference sourceFileName TryStatement IfStatement MemberReference filtering BlockStatement StatementExpression MethodInvocation FILE_UTILS MemberReference oldFile MemberReference newFile ClassCreator ReferenceType FilterSetCollection MethodInvocation MethodInvocation getProject copyFile BlockStatement StatementExpression MethodInvocation FILE_UTILS MemberReference oldFile MemberReference newFile copyFile StatementExpression MethodInvocation oldFile delete CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference oldFile Literal " to " MemberReference newFile Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation != MemberReference regex Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one expression is StatementExpression Assignment MemberReference regex ClassCreator ReferenceType = ReturnStatement MemberReference regex	0
MethodDeclaration Modifier protected handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MethodInvocation redirector getErrorStream Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference output handleErrorOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier private IOException StatementExpression MethodInvocation Literal "	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File destfile StatementExpression Assignment This MemberReference destfile MemberReference destfile =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement This MemberReference proxy	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String parentPath FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator theFiles MethodInvocation MemberReference parentPath Literal false listFiles IfStatement BinaryOperation == MemberReference theFiles Literal null BlockStatement ReturnStatement Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator icounter Literal 0 BinaryOperation < MemberReference icounter MemberReference theFiles length MemberReference ++ icounter BlockStatement IfStatement MemberReference ArraySelector MemberReference icounter MethodInvocation getName MethodInvocation MemberReference equalsIgnoreCase theFiles BlockStatement ReturnStatement MemberReference ArraySelector MemberReference icounter MethodInvocation getName theFiles ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal " MethodInvocation getValue	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation filesets MemberReference fs addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference value MemberReference text =	0
MethodDeclaration Modifier private FormalParameter ReferenceType File file IOException ParseException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference file = LocalVariableDeclaration ReferenceType MessageFormat VariableDeclarator mf ClassCreator ReferenceType MessageFormat MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation in readLine WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal \"" MemberReference line Literal "\"" MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation || BinaryOperation || MethodInvocation line Literal startsWith MethodInvocation line Literal startsWith BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation line length MemberReference MethodInvocation line Literal "\"" startsWith MethodInvocation Character MethodInvocation line MemberReference charAt isLetter MethodInvocation String MethodInvocation Literal ":" equals MethodInvocation line MemberReference charAt valueOf MethodInvocation String MethodInvocation Literal "\\" equals MethodInvocation line MemberReference charAt valueOf BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator objs MethodInvocation mf MemberReference line parse LocalVariableDeclaration ReferenceType String VariableDeclarator f Cast ReferenceType String MemberReference ArraySelector Literal 1 objs LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation f MemberReference File separator lastIndexOf IfStatement BinaryOperation > MemberReference index Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MethodInvocation f Literal 0 MemberReference index substring IfStatement MethodInvocation ! dir exists BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Creating " MethodInvocation dir getAbsolutePath MemberReference Project MSG_VERBOSE log IfStatement MethodInvocation dir mkdirs BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Created " MethodInvocation dir getAbsolutePath MemberReference Project MSG_INFO log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Failed to create " MethodInvocation dir getAbsolutePath MemberReference Project MSG_INFO log BlockStatement StatementExpression MethodInvocation BinaryOperation + MethodInvocation dir getAbsolutePath Literal " MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "File separator problem with " MemberReference line MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal \"" MemberReference line Literal "\"" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference line MethodInvocation in readLine = IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference assertions	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt IOException StatementExpression Cast ReferenceType MemberReference out	0
MethodDeclaration Modifier private ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator reader TryStatement StatementExpression Assignment MemberReference reader MethodInvocation = CatchClause CatchClauseParameter BuildException exc StatementExpression Assignment MemberReference reader MethodInvocation = ReturnStatement MemberReference reader	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean b StatementExpression MethodInvocation w MemberReference b	0
MethodDeclaration IfStatement MethodInvocation ! to isEmpty BlockStatement StatementExpression MethodInvocation Literal "To" MethodInvocation MemberReference to	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation filterChains MemberReference addElement ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object it IfStatement BinaryOperation || BinaryOperation == MemberReference it Literal null BinaryOperation != MethodInvocation getClass MethodInvocation it getClass BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation Cast ReferenceType MemberReference it equals	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator arg ClassCreator ReferenceType StatementExpression MethodInvocation facade MemberReference arg ReturnStatement MemberReference arg	0
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int options LocalVariableDeclaration BasicType int VariableDeclarator MemberReference RE IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference RE = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getTask ReturnStatement MemberReference task	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate StatementExpression MethodInvocation Literal addCommandArgument StatementExpression MethodInvocation Literal "-s" addCommandArgument IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal "-r" addCommandArgument StatementExpression MethodInvocation MemberReference addCommandArgument BlockStatement StatementExpression MethodInvocation Literal addCommandArgument StatementExpression MethodInvocation MemberReference addCommandArgument IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal "-r" addCommandArgument StatementExpression MethodInvocation MemberReference addCommandArgument BlockStatement StatementExpression MethodInvocation Literal addCommandArgument StatementExpression MethodInvocation MemberReference addCommandArgument LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator myTokenizer ClassCreator ReferenceType StringTokenizer MemberReference WhileStatement MethodInvocation myTokenizer hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation myTokenizer nextToken addCommandArgument StatementExpression MethodInvocation Literal "" LocalVariableDeclaration ReferenceType File VariableDeclarator tmpFile Literal null TryStatement StatementExpression Assignment MemberReference tmpFile MethodInvocation FILE_UTILS Literal Literal ".log" Literal null createTempFile = StatementExpression MethodInvocation tmpFile deleteOnExit StatementExpression MethodInvocation MemberReference tmpFile StatementExpression SuperMethodInvocation execute LocalVariableDeclaration ReferenceType CvsTagEntry VariableDeclarator entries MethodInvocation MemberReference tmpFile StatementExpression MethodInvocation MemberReference entries IfStatement BinaryOperation != MemberReference tmpFile Literal null BlockStatement StatementExpression MethodInvocation tmpFile delete	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference MemberReference value =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Long value StatementExpression Assignment MemberReference timeout MemberReference value =	0
MethodDeclaration Modifier public ReferenceType InputStream getResourceAsStream FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType InputStream VariableDeclarator resourceStream Literal null IfStatement MethodInvocation MemberReference name isParentFirst BlockStatement StatementExpression Assignment MemberReference resourceStream MethodInvocation MemberReference name = IfStatement BinaryOperation != MemberReference resourceStream Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "ResourceStream for " MemberReference name Literal " loaded from parent loader" MemberReference Project MSG_DEBUG log BlockStatement StatementExpression Assignment MemberReference resourceStream MethodInvocation MemberReference name loadResource = IfStatement BinaryOperation != MemberReference resourceStream Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "ResourceStream for " MemberReference name Literal " loaded from ant loader" MemberReference Project MSG_DEBUG log BlockStatement StatementExpression Assignment MemberReference resourceStream MethodInvocation MemberReference name loadResource = IfStatement BinaryOperation != MemberReference resourceStream Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "ResourceStream for " MemberReference name Literal " loaded from ant loader" MemberReference Project MSG_DEBUG log BlockStatement StatementExpression Assignment MemberReference resourceStream MethodInvocation MemberReference name = IfStatement BinaryOperation != MemberReference resourceStream Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "ResourceStream for " MemberReference name Literal " loaded from parent loader" MemberReference Project MSG_DEBUG log IfStatement BinaryOperation == MemberReference resourceStream Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Couldn't load for " MemberReference name MemberReference Project MSG_DEBUG log ReturnStatement MemberReference resourceStream	1
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Connection conn IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference version Literal null BlockStatement ReturnStatement Literal true TryStatement LocalVariableDeclaration ReferenceType DatabaseMetaData VariableDeclarator dmd MethodInvocation conn getMetaData IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator theVendor MethodInvocation dmd MethodInvocation toLowerCase StatementExpression MethodInvocation BinaryOperation + Literal = " MemberReference theVendor MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation || BinaryOperation == MemberReference theVendor Literal null BinaryOperation < MethodInvocation theVendor MemberReference indexOf Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Not the required " MemberReference MemberReference Project MSG_VERBOSE log ReturnStatement Literal false IfStatement BinaryOperation != MemberReference version Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator theVersion MethodInvocation dmd MethodInvocation MemberReference ENGLISH toLowerCase StatementExpression MethodInvocation BinaryOperation + Literal = " MemberReference theVersion MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation || BinaryOperation == MemberReference theVersion Literal null BinaryOperation || MethodInvocation theVersion MemberReference version startsWith BinaryOperation >= MethodInvocation theVersion BinaryOperation + Literal " " MemberReference version indexOf Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Not the required version: \"" MemberReference version Literal "\"" MemberReference Project MSG_VERBOSE log ReturnStatement Literal false CatchClause CatchClauseParameter e StatementExpression MethodInvocation Literal "Failed to required MemberReference Project MSG_ERR log ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference compile	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation project BinaryOperation + MemberReference Literal MethodInvocation project BinaryOperation + MemberReference Literal Literal true assertTrue	0
MethodDeclaration Modifier public ReferenceType String getAction ReturnStatement MemberReference action	0
MethodDeclaration Modifier private ReferenceType InputSource classpathLookup FormalParameter ReferenceType matchingEntry LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source Literal null LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader Literal null LocalVariableDeclaration ReferenceType VariableDeclarator cp MemberReference classpath IfStatement BinaryOperation != MemberReference cp Literal null BlockStatement StatementExpression Assignment MemberReference cp MethodInvocation classpath Literal "ignore" concatSystemClasspath = BlockStatement StatementExpression Assignment MemberReference cp ClassCreator MethodInvocation Literal concatSystemClasspath ReferenceType MethodInvocation getProject = StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference cp createClassLoader getProject = LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation loader MethodInvocation matchingEntry getLocation getResourceAsStream IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference source ClassCreator ReferenceType InputSource MemberReference is = LocalVariableDeclaration ReferenceType URL VariableDeclarator MethodInvocation loader MethodInvocation matchingEntry getLocation getResource LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation toExternalForm StatementExpression MethodInvocation source MemberReference setSystemId StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal entry matched a resource in the classpath: '" MemberReference Literal "'" MemberReference Project MSG_DEBUG log ReturnStatement MemberReference source	1
MethodDeclaration Modifier private FormalParameter ReferenceType ChannelSftp channel FormalParameter ReferenceType File localFile FormalParameter ReferenceType String IOException SftpException LocalVariableDeclaration BasicType long VariableDeclarator filesize MethodInvocation localFile length IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation localFile getName = LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator MemberReference filesize LocalVariableDeclaration BasicType boolean VariableDeclarator trackProgress BinaryOperation && MethodInvocation BinaryOperation > MemberReference filesize Literal LocalVariableDeclaration ReferenceType VariableDeclarator monitor Literal null IfStatement MemberReference trackProgress BlockStatement StatementExpression Assignment MemberReference monitor MethodInvocation = TryStatement IfStatement This MethodInvocation BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation localFile getName Literal " : " MemberReference filesize log StatementExpression MethodInvocation channel MethodInvocation localFile getAbsolutePath MemberReference MemberReference monitor put IfStatement This MethodInvocation BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator endTime MethodInvocation System currentTimeMillis StatementExpression MethodInvocation MemberReference startTime MemberReference endTime Cast BasicType int MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String br StatementExpression Assignment This MemberReference branch MemberReference br =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result Literal null StatementExpression MethodInvocation processExternalCatalogs LocalVariableDeclaration ReferenceType VariableDeclarator matchingEntry MethodInvocation MemberReference publicId IfStatement BinaryOperation != MemberReference matchingEntry Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Matching catalog entry found for '" MethodInvocation matchingEntry getPublicId Literal "' location: '" MethodInvocation matchingEntry getLocation Literal "'" MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference result MethodInvocation MemberReference matchingEntry filesystemLookup = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference matchingEntry classpathLookup = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference result Cast ReferenceType InputSource MethodInvocation resolveEntity MemberReference resolverImpl ArrayCreator ReferenceType Object ArrayInitializer MemberReference publicId MemberReference systemId invoke = CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex BlockStatement TryStatement StatementExpression Assignment MemberReference result Cast ReferenceType InputSource MethodInvocation resolveEntity MemberReference resolverImpl ArrayCreator ReferenceType Object ArrayInitializer MemberReference publicId MemberReference systemId invoke = CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference tofile MemberReference =	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String parentUri FormalParameter ReferenceType IntrospectionHelper ih FormalParameter ReferenceType Object parent FormalParameter ReferenceType UnknownElement child FormalParameter ReferenceType RuntimeConfigurable LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ProjectHelper MethodInvocation child getNamespace MethodInvocation child getTag genComponentName IfStatement MethodInvocation ih MemberReference parentUri MemberReference BlockStatement LocalVariableDeclaration ReferenceType IntrospectionHelper ReferenceType VariableDeclarator MethodInvocation ih MethodInvocation getProject MemberReference parentUri MemberReference parent MemberReference MemberReference child StatementExpression MethodInvocation MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation create IfStatement BinaryOperation instanceof MemberReference ReferenceType ReferenceType PreSetDefinition BlockStatement LocalVariableDeclaration ReferenceType ReferenceType PreSetDefinition VariableDeclarator def Cast ReferenceType ReferenceType PreSetDefinition MemberReference StatementExpression Assignment MemberReference MethodInvocation = StatementExpression MethodInvocation child MethodInvocation def StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation instanceof MemberReference ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator Cast ReferenceType Task MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference setTaskName StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference StatementExpression MethodInvocation MethodInvocation getProject maybeConfigure StatementExpression MethodInvocation child MemberReference MemberReference handleChildren StatementExpression MethodInvocation store ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet reference StatementExpression MethodInvocation MemberReference reference add	0
MethodDeclaration Modifier protected BasicType boolean isValidOs IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! Os MemberReference Literal null Literal null Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator myos MethodInvocation System Literal "os.name" getProperty StatementExpression MethodInvocation BinaryOperation + Literal "Current OS is " MemberReference myos MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && BinaryOperation != MemberReference os Literal null BinaryOperation < MethodInvocation os MemberReference myos indexOf Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "This " MemberReference myos Literal " was not found in the specified list of valid " MemberReference os MemberReference Project MSG_VERBOSE log ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "invalid ejb jar file." IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation isDirectory BlockStatement StatementExpression MethodInvocation Literal "invalid or missing client jar file." MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator clientname MethodInvocation Literal 0 MethodInvocation Literal "." lastIndexOf substring StatementExpression Assignment MemberReference clientname BinaryOperation + MemberReference clientname Literal = StatementExpression Assignment MemberReference ClassCreator ReferenceType File MemberReference clientname = IfStatement BinaryOperation == MemberReference mode Literal null BlockStatement StatementExpression MethodInvocation Literal "mode is null default mode is log StatementExpression MethodInvocation MemberReference setMode IfStatement BinaryOperation || BinaryOperation == MemberReference version MemberReference BinaryOperation == MemberReference version MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "version " MemberReference version Literal " is not supported" StatementExpression MethodInvocation BinaryOperation + Literal jar file is " MemberReference log IfStatement MethodInvocation mode MemberReference equalsIgnoreCase BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation executeJava	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Section FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType Section MethodInvocation sections MemberReference name get	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String msg StatementExpression Assignment MemberReference message MethodInvocation MethodInvocation MemberReference msg replaceProperties getProject +=	0
MethodDeclaration Modifier public FormalParameter ReferenceType String source StatementExpression Assignment This MemberReference source MemberReference source =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public IfStatement MemberReference ! BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public ReferenceType String XDocletException LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation MethodInvocation getDoc MethodInvocation Literal Literal getTagAttributeValue ReturnStatement TernaryExpression BinaryOperation != MemberReference value Literal null MemberReference value MemberReference	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation java MemberReference className setClassname StatementExpression MethodInvocation java MethodInvocation StatementExpression MethodInvocation java Literal true StatementExpression MethodInvocation java Literal true StatementExpression MethodInvocation java execute	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r IfStatement BinaryOperation == MemberReference type Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The type attribute is required." LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation type getIndex ReturnStatement TernaryExpression MethodInvocation r isDirectory BinaryOperation == MemberReference i Literal 1 BinaryOperation == MemberReference i Literal 0	1
MethodDeclaration Modifier private playClip FormalParameter ReferenceType Clip clip FormalParameter BasicType long StatementExpression MethodInvocation clip MemberReference Clip loop TryStatement StatementExpression MethodInvocation Thread MemberReference sleep CatchClause CatchClauseParameter InterruptedException e	1
MethodDeclaration Modifier protected ReferenceType String LocalVariableDeclaration ReferenceType Vector VariableDeclarator env MethodInvocation Execute getProcEnvironment LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal null ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation env elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator var Cast ReferenceType String MethodInvocation e nextElement IfStatement BinaryOperation || BinaryOperation || MethodInvocation var MemberReference startsWith MethodInvocation var MemberReference startsWith MethodInvocation var MemberReference startsWith BlockStatement StatementExpression Assignment MemberReference path MethodInvocation var MemberReference substring = BreakStatement IfStatement BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MethodInvocation getProject MemberReference path LocalVariableDeclaration ReferenceType String VariableDeclarator pElements MethodInvocation p list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference pElements length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i pElements BinaryOperation + Literal TernaryExpression MethodInvocation Os Literal "dos" isFamily Literal ".exe" Literal "" IfStatement MethodInvocation f canRead BlockStatement ReturnStatement MethodInvocation f getAbsolutePath ReturnStatement Literal	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType int x StatementExpression Assignment MemberReference MemberReference x =	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType VariableDeclarator original ClassCreator ReferenceType MemberReference StatementExpression MethodInvocation Literal 100 BinaryOperation > MethodInvocation length Literal 100 assertTrue StatementExpression MethodInvocation Literal name" MemberReference MethodInvocation original getName assertEquals LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator buff ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference buff StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference original putNextEntry StatementExpression MethodInvocation StatementExpression MethodInvocation close LocalVariableDeclaration ReferenceType TarInputStream VariableDeclarator tis ClassCreator ReferenceType TarInputStream ClassCreator ReferenceType ByteArrayInputStream MethodInvocation buff toByteArray LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation tis getNextEntry StatementExpression MethodInvocation Literal name" MemberReference MethodInvocation getName assertEquals StatementExpression MethodInvocation Literal "no more entries" MethodInvocation tis getNextEntry StatementExpression MethodInvocation tis close	0
MethodDeclaration Modifier public Exception TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal "A path contain " MemberReference e fail	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintWriter out FormalParameter ReferenceType Project p FormalParameter ReferenceType String name FormalParameter ReferenceType Class element StatementExpression MethodInvocation Assert MemberReference assertTrue StatementExpression MethodInvocation Assert MemberReference assertTrue StatementExpression MethodInvocation Assert MemberReference ! assertTrue StatementExpression MemberReference ++ StatementExpression Assignment This MemberReference p MemberReference p =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject StatementExpression Assignment MemberReference Literal 0 = StatementExpression MethodInvocation MethodInvocation This getProject	0
MethodDeclaration Modifier public reset IOException StatementExpression MethodInvocation in reset	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal file not expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType PrintWriter output FormalParameter Modifier final ReferenceType entries TryStatement StatementExpression MethodInvocation output Literal "<?xml println LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation doc Literal createElement StatementExpression MethodInvocation MemberReference root MemberReference output Literal 0 Literal "\t" StatementExpression MethodInvocation output println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference entries length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator entry MemberReference ArraySelector MemberReference i entries StatementExpression MethodInvocation MemberReference doc MemberReference output MemberReference entry StatementExpression MethodInvocation MemberReference root MemberReference output Literal 0 Literal "\t" Literal true StatementExpression MethodInvocation output flush StatementExpression MethodInvocation output close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType org ReferenceType apache ReferenceType tools ReferenceType ant ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier public static delete FormalParameter ReferenceType File file IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation file delete	1
MethodDeclaration Modifier protected printResults FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType ResultSet VariableDeclarator rs MethodInvocation statement getResultSet TryStatement StatementExpression MethodInvocation MemberReference rs MemberReference out printResults IfStatement BinaryOperation != MemberReference rs Literal null BlockStatement StatementExpression MethodInvocation rs close	1
MethodDeclaration Modifier public static ReferenceType Extension FormalParameter Modifier final ReferenceType Manifest manifest IfStatement BinaryOperation == Literal null MemberReference manifest BlockStatement ReturnStatement ArrayCreator ReferenceType Extension Literal 0 LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator results ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final ReferenceType Attributes VariableDeclarator MethodInvocation manifest IfStatement BinaryOperation != Literal null MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MethodInvocation Literal "" MemberReference getExtension IfStatement BinaryOperation != Literal null MemberReference extension BlockStatement StatementExpression MethodInvocation results MemberReference extension add LocalVariableDeclaration Modifier final ReferenceType Map VariableDeclarator entries MethodInvocation manifest getEntries LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator keys MethodInvocation entries MethodInvocation iterator keySet WhileStatement MethodInvocation keys hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation keys next LocalVariableDeclaration Modifier final ReferenceType Attributes VariableDeclarator attributes Cast ReferenceType Attributes MethodInvocation entries MemberReference key get LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator extension MethodInvocation Literal "" MemberReference attributes getExtension IfStatement BinaryOperation != Literal null MemberReference extension BlockStatement StatementExpression MethodInvocation results MemberReference extension add ReturnStatement Cast ReferenceType Extension MethodInvocation results ArrayCreator ReferenceType Extension MethodInvocation results size toArray	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType ClassCreator ReferenceType Integer Literal 99 MemberReference StatementExpression MethodInvocation dispatcher MemberReference evt StatementExpression MethodInvocation MemberReference evt MethodInvocation Literal 0 elementAt assertEquals	1
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter ReferenceType Reader rdr StatementExpression Assignment MemberReference buffer ClassCreator ReferenceType MemberReference rdr = ReturnStatement MemberReference buffer	1
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType File location StatementExpression MethodInvocation MethodInvocation location getAbsolutePath setValue	0
MethodDeclaration Modifier public ReferenceType FTPFile listFiles FormalParameter ReferenceType String directory ReturnStatement MethodInvocation MemberReference directory Literal true listFiles	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation project Literal getProperty StatementExpression MethodInvocation Literal "foo" MemberReference assertEquals	0
MethodDeclaration Modifier public addEntity FormalParameter ReferenceType entity BuildException StatementExpression MethodInvocation MemberReference entity	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String filename LocalVariableDeclaration ReferenceType String VariableDeclarator classfile MethodInvocation filename Literal 0 MethodInvocation filename Literal ".java" lastIndexOf substring StatementExpression Assignment MemberReference classfile BinaryOperation + MemberReference classfile Literal ".class" = ReturnStatement MemberReference classfile	0
MethodDeclaration Modifier protected ReferenceType Pattern getCompiledPattern FormalParameter BasicType int options BuildException LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference options TryStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation Pattern This MemberReference pattern MemberReference compile ReturnStatement MemberReference p CatchClause CatchClauseParameter PatternSyntaxException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public ReferenceType Comparator ReturnStatement MemberReference	0
MethodDeclaration Modifier private checkParameters IfStatement MethodInvocation BlockStatement IfStatement BinaryOperation != MethodInvocation getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot use attribute with IfStatement BinaryOperation != MethodInvocation getFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot use attribute with BlockStatement IfStatement BinaryOperation != MethodInvocation getNamespace Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot use attribute without	0
MethodDeclaration Modifier public ReferenceType String getHref ReturnStatement MemberReference href	0
MethodDeclaration Modifier public ReferenceType String getAuthor ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String regex IfStatement BinaryOperation && BinaryOperation != MemberReference regex Literal null BinaryOperation != MethodInvocation regex length Literal 0 BlockStatement StatementExpression Assignment This MemberReference regex MemberReference regex = LocalVariableDeclaration ReferenceType VariableDeclarator ps ClassCreator ReferenceType StatementExpression MethodInvocation ps MethodInvocation getProject setProject StatementExpression MethodInvocation ps MemberReference regex StatementExpression MethodInvocation MemberReference ps	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation MethodInvocation Literal "Using WebLogic MemberReference Project MSG_VERBOSE log getRmic LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation ArrayCreator ReferenceType String ArrayInitializer Literal setupRmicCommand LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c Literal null IfStatement BinaryOperation == MethodInvocation MethodInvocation getRmic Literal null BlockStatement StatementExpression Assignment MemberReference c MethodInvocation Class MemberReference forName = BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation getProject MethodInvocation MethodInvocation MethodInvocation getRmic createClassLoader getRmic = StatementExpression Assignment MemberReference c MethodInvocation Class MemberReference Literal true MemberReference loader forName = LocalVariableDeclaration ReferenceType Method VariableDeclarator doRmic MethodInvocation c Literal "main" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod StatementExpression MethodInvocation doRmic Literal null ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation cmd invoke ReturnStatement Literal true CatchClause CatchClauseParameter ClassNotFoundException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference MethodInvocation MethodInvocation getLocation getRmic CatchClause CatchClauseParameter Exception ex IfStatement BinaryOperation instanceof MemberReference ex ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference ex BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference MemberReference ex MethodInvocation MethodInvocation getLocation getRmic IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement StatementExpression MethodInvocation loader cleanup	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String filename IOException LocalVariableDeclaration ReferenceType Reader VariableDeclarator r Literal null TryStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType FileReader MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject MemberReference filename = ReturnStatement MethodInvocation FileUtils MemberReference r readFully StatementExpression MethodInvocation FileUtils MemberReference r close	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation helper MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String max StatementExpression MethodInvocation MethodInvocation MemberReference max getCommandLine	0
MethodDeclaration Modifier public FormalParameter ReferenceType File z StatementExpression MethodInvocation MemberReference z	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Commandline MethodInvocation describeCommand	0
MethodDeclaration Modifier public ReferenceType String getName BuildException IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is ReturnStatement MemberReference name	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal TryStatement LocalVariableDeclaration ReferenceType ModifiedSelector ReferenceType VariableDeclarator compName ClassCreator ReferenceType ModifiedSelector ReferenceType StatementExpression MethodInvocation compName MemberReference name setValue StatementExpression MethodInvocation Literal invalid fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + MemberReference name Literal " is not a value for this attribute" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Properties userList BuildException IfStatement BinaryOperation != Literal null MemberReference BlockStatement TryStatement StatementExpression MethodInvocation userList ClassCreator ReferenceType FileInputStream MemberReference load CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe toString MemberReference ioe	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object rhs IfStatement BinaryOperation || BinaryOperation == MemberReference rhs Literal null BinaryOperation != MethodInvocation rhs getClass MethodInvocation getClass BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference rhs This BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType Attribute VariableDeclarator rhsAttribute Cast ReferenceType Attribute MemberReference rhs LocalVariableDeclaration ReferenceType String VariableDeclarator lhsKey MethodInvocation getKey LocalVariableDeclaration ReferenceType String VariableDeclarator rhsKey MethodInvocation rhsAttribute getKey IfStatement BinaryOperation || BinaryOperation || BinaryOperation && BinaryOperation == MemberReference lhsKey Literal null BinaryOperation != MemberReference rhsKey Literal null BinaryOperation && BinaryOperation != MemberReference lhsKey Literal null BinaryOperation == MemberReference rhsKey Literal null MethodInvocation ! lhsKey MemberReference rhsKey equals BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation values MemberReference rhsAttribute values equals	1
MethodDeclaration Modifier public FormalParameter ReferenceType String ws StatementExpression Assignment MemberReference MemberReference ws =	0
MethodDeclaration Modifier public FormalParameter ReferenceType dset BuildException IfStatement BinaryOperation == MethodInvocation dset getProject Literal null BlockStatement StatementExpression MethodInvocation dset MethodInvocation getProject setProject StatementExpression MethodInvocation MemberReference dset add	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal format expectBuildException	0
MethodDeclaration Modifier public ReferenceType PrintStream IOException StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal Literal StatementExpression MethodInvocation StatementExpression MethodInvocation ReturnStatement MemberReference out	0
MethodDeclaration Modifier protected ReferenceType String getPrompt FormalParameter ReferenceType InputRequest request LocalVariableDeclaration ReferenceType String VariableDeclarator prompt MethodInvocation request getPrompt LocalVariableDeclaration ReferenceType String VariableDeclarator def MethodInvocation request getDefaultValue IfStatement BinaryOperation instanceof MemberReference request ReferenceType BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MemberReference prompt StatementExpression MethodInvocation sb Literal " (" append LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e Cast ReferenceType MemberReference request LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation e hasMoreElements BlockStatement IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation sb Literal ", " append LocalVariableDeclaration ReferenceType String VariableDeclarator next Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation next MemberReference def equals BlockStatement StatementExpression MethodInvocation sb Literal '[' append StatementExpression MethodInvocation sb MemberReference next append IfStatement MethodInvocation next MemberReference def equals BlockStatement StatementExpression MethodInvocation sb Literal ']' append StatementExpression Assignment MemberReference first Literal false = StatementExpression MethodInvocation sb Literal ")" append ReturnStatement MethodInvocation sb toString IfStatement BinaryOperation != MemberReference def Literal null BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference prompt Literal " [" MemberReference def Literal "]" BlockStatement ReturnStatement MemberReference prompt	1
MethodDeclaration Modifier public BasicType boolean compile FormalParameter ReferenceType javah BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation MemberReference javah LocalVariableDeclaration ReferenceType ExecuteJava VariableDeclarator ej ClassCreator ReferenceType ExecuteJava LocalVariableDeclaration ReferenceType Class VariableDeclarator c Literal null TryStatement TryStatement StatementExpression Assignment MemberReference c MethodInvocation Class Literal forName = CatchClause CatchClauseParameter ClassNotFoundException cnfe StatementExpression Assignment MemberReference c MethodInvocation Class Literal forName = CatchClause CatchClauseParameter ClassNotFoundException ex ThrowStatement ClassCreator ReferenceType BuildException Literal "Can't load MemberReference ex MethodInvocation javah getLocation StatementExpression MethodInvocation cmd MethodInvocation c getName setExecutable StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation Locator MemberReference c IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation ej ClassCreator ReferenceType MethodInvocation javah getProject MethodInvocation f getPath ReturnStatement BinaryOperation == MethodInvocation ej MemberReference javah fork Literal 0	1
MethodDeclaration Modifier public FormalParameter BasicType boolean dump StatementExpression Assignment This MemberReference dump MemberReference dump =	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public FormalParameter ReferenceType test StatementExpression MethodInvocation MemberReference test addElement	0
MethodDeclaration Modifier public synchronized ReferenceType String getName ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MethodInvocation MethodInvocation getFile MethodInvocation Literal 1 substring getURL	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String ddPrefix IfStatement BinaryOperation || BinaryOperation == MemberReference version MemberReference BinaryOperation == MemberReference version MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "version " MemberReference version Literal " is not supported" LocalVariableDeclaration ReferenceType String VariableDeclarator dd TernaryExpression BinaryOperation == MemberReference version MemberReference MemberReference MemberReference StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal file : " MemberReference ddPrefix MemberReference dd MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType File VariableDeclarator borlandDD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference dd IfStatement MethodInvocation borlandDD exists BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal specific file found " MemberReference borlandDD MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference dd MemberReference borlandDD put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate " Literal "It was expected to be in " MethodInvocation borlandDD getPath MemberReference Project MSG_WARN log ReturnStatement	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String url StatementExpression Assignment This MemberReference url MemberReference url =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal "create"	0
MethodDeclaration Modifier public ReferenceType BaseSelector LocalVariableDeclaration ReferenceType BaseSelector VariableDeclarator selector MethodInvocation getInstance StatementExpression MethodInvocation selector MethodInvocation getProject setProject ReturnStatement MemberReference selector	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType File listing StatementExpression Assignment This MemberReference listing MemberReference listing =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal	0
MethodDeclaration Modifier public ReferenceType String getQualifiedClassName ReturnStatement MemberReference qualifiedName	0
MethodDeclaration Modifier private ReferenceType AttributeSetter FormalParameter Modifier final ReferenceType Method m FormalParameter ReferenceType Class arg FormalParameter Modifier final ReferenceType String LocalVariableDeclaration Modifier final ReferenceType Class VariableDeclarator reflectedArg TernaryExpression MethodInvocation MemberReference arg containsKey Cast ReferenceType Class MethodInvocation MemberReference arg get MemberReference arg IfStatement ClassReference java.lang MethodInvocation MemberReference reflectedArg equals ReferenceType String BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException StatementExpression MethodInvocation m MemberReference parent Cast ReferenceType Object ArrayCreator ReferenceType String ArrayInitializer MemberReference value invoke IfStatement ClassReference java.lang MethodInvocation MemberReference reflectedArg equals ReferenceType Character BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException IfStatement BinaryOperation == MethodInvocation value length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The value is not a " Literal value for attribute \"" MemberReference Literal "\"" StatementExpression MethodInvocation m MemberReference parent Cast ReferenceType Object ArrayCreator ReferenceType Character ArrayInitializer ClassCreator ReferenceType Character MethodInvocation value Literal 0 charAt invoke IfStatement ClassReference java.lang MethodInvocation MemberReference reflectedArg equals ReferenceType Boolean BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException StatementExpression MethodInvocation m MemberReference parent Cast ReferenceType Object ArrayCreator ReferenceType Boolean ArrayInitializer TernaryExpression MethodInvocation Project MemberReference value toBoolean MemberReference Boolean TRUE MemberReference Boolean FALSE invoke IfStatement ClassReference java.lang MethodInvocation MemberReference reflectedArg equals ReferenceType Class BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Class MemberReference value forName invoke CatchClause CatchClauseParameter ClassNotFoundException ce ThrowStatement ClassCreator ReferenceType BuildException MemberReference ce IfStatement ClassReference MethodInvocation MemberReference reflectedArg equals ReferenceType File BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p MemberReference value invoke IfStatement ClassReference MethodInvocation MemberReference reflectedArg isAssignableFrom ReferenceType EnumeratedAttribute BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement LocalVariableDeclaration ReferenceType EnumeratedAttribute VariableDeclarator ea Cast ReferenceType EnumeratedAttribute MethodInvocation reflectedArg newInstance StatementExpression MethodInvocation ea MemberReference value setValue StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference ea invoke CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie IfStatement BinaryOperation && BinaryOperation != MethodInvocation reflectedArg Literal null MethodInvocation reflectedArg MethodInvocation getName MethodInvocation Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation reflectedArg MethodInvocation Literal null ArrayCreator ReferenceType Object ArrayInitializer MemberReference value invoke Literal "valueOf" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod invoke CatchClause CatchClauseParameter InvocationTargetException x IfStatement BinaryOperation instanceof MethodInvocation x getTargetException ReferenceType IllegalArgumentException BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "'" MemberReference value Literal "' is not a value for " MethodInvocation reflectedArg getName BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation x getTargetException CatchClause CatchClauseParameter Exception x ThrowStatement ClassCreator ReferenceType BuildException MemberReference x BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator includeProject LocalVariableDeclaration ReferenceType Constructor VariableDeclarator c TryStatement StatementExpression Assignment MemberReference c MethodInvocation reflectedArg ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Project ClassReference ReferenceType String getConstructor = StatementExpression Assignment MemberReference includeProject Literal true = CatchClause CatchClauseParameter NoSuchMethodException TryStatement StatementExpression Assignment MemberReference c MethodInvocation reflectedArg ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getConstructor = StatementExpression Assignment MemberReference includeProject Literal false = CatchClause CatchClauseParameter NoSuchMethodException ReturnStatement Literal null LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator finalIncludeProject MemberReference includeProject LocalVariableDeclaration Modifier final ReferenceType Constructor VariableDeclarator finalConstructor MemberReference c ReturnStatement ClassCreator ReferenceType AttributeSetter MemberReference m MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException BuildException TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator args TernaryExpression MemberReference finalIncludeProject ArrayCreator ReferenceType Object ArrayInitializer MemberReference p MemberReference value ArrayCreator ReferenceType Object ArrayInitializer MemberReference value LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation finalConstructor MemberReference args newInstance IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation p MemberReference attribute setProjectReference StatementExpression MethodInvocation m MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference attribute invoke CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public merge FormalParameter ReferenceType Manifest other FormalParameter BasicType boolean IfStatement BinaryOperation != MemberReference other Literal null BlockStatement IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference mainSection Cast ReferenceType Section MethodInvocation clone = BlockStatement StatementExpression MethodInvocation mainSection MemberReference other mainSection merge IfStatement BinaryOperation != MemberReference other manifestVersion Literal null BlockStatement StatementExpression Assignment MemberReference manifestVersion MemberReference other manifestVersion = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation other WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Section VariableDeclarator Cast ReferenceType Section MethodInvocation sections MemberReference get LocalVariableDeclaration ReferenceType Section VariableDeclarator otherSection Cast ReferenceType Section MethodInvocation MemberReference get IfStatement BinaryOperation == MemberReference Literal null BlockStatement IfStatement BinaryOperation != MemberReference otherSection Literal null BlockStatement StatementExpression MethodInvocation Cast ReferenceType Section MethodInvocation otherSection clone BlockStatement StatementExpression MethodInvocation MemberReference otherSection merge	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType String from FormalParameter BasicType boolean append FormalParameter ReferenceType File to IOException LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileWriter MethodInvocation to getAbsolutePath MemberReference append = LocalVariableDeclaration ReferenceType StringReader VariableDeclarator in ClassCreator ReferenceType StringReader MemberReference from LocalVariableDeclaration BasicType char VariableDeclarator buffer ArrayCreator BasicType char Literal 8192 LocalVariableDeclaration BasicType int VariableDeclarator bytesRead WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference bytesRead MethodInvocation in MemberReference buffer read = IfStatement BinaryOperation == MemberReference bytesRead Literal - 1 BlockStatement BreakStatement StatementExpression MethodInvocation out MemberReference buffer Literal 0 MemberReference bytesRead write StatementExpression MethodInvocation out flush IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close	1
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator ze MethodInvocation MemberReference data parse StatementExpression MethodInvocation Literal of Literal 2 MemberReference ze length assertEquals StatementExpression MethodInvocation Literal "type field 1" BinaryOperation instanceof MemberReference ArraySelector Literal 0 ze ReferenceType AsiExtraField assertTrue StatementExpression MethodInvocation Literal "mode field 1" Literal Cast ReferenceType AsiExtraField MemberReference ArraySelector Literal 0 ze assertEquals StatementExpression MethodInvocation Literal "type field 2" BinaryOperation instanceof MemberReference ArraySelector Literal 1 ze ReferenceType UnrecognizedExtraField assertTrue StatementExpression MethodInvocation Literal "data length field 2" Literal 0 MemberReference ArraySelector Literal 1 MethodInvocation getLocalFileDataLength MethodInvocation getValue ze assertEquals LocalVariableDeclaration BasicType byte VariableDeclarator data2 ArrayCreator BasicType byte BinaryOperation - MemberReference data length Literal 1 StatementExpression MethodInvocation System MemberReference data Literal 0 MemberReference data2 Literal 0 MemberReference data2 length arraycopy TryStatement StatementExpression MethodInvocation MemberReference data2 parse StatementExpression MethodInvocation Literal "data should be invalid" fail CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation Literal "message" BinaryOperation + BinaryOperation + Literal "data starting at " BinaryOperation + Literal 4 MemberReference aLocal length Literal " is in unknown MethodInvocation e getMessage assertEquals	1
MethodDeclaration Modifier public FormalParameter BasicType int min StatementExpression Assignment This MemberReference min MemberReference min =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "foo has not been must not fail StatementExpression MethodInvocation project Literal "foo" Literal "" setProperty StatementExpression MethodInvocation Literal Literal must fail if foo has been set" expectBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v StatementExpression Assignment This MemberReference forced MemberReference v =	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry ReturnStatement MethodInvocation fileset	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference ds Literal null =	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation StatementExpression Assignment MemberReference loader MemberReference r =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Folder FormalParameter ReferenceType java ReferenceType io ReferenceType File StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + TernaryExpression This MethodInvocation isRecursive Literal Literal Literal " TernaryExpression BinaryOperation == Literal null MethodInvocation Literal " " Literal ": " MethodInvocation getAbsolutePath log StatementExpression MethodInvocation BinaryOperation + Literal "Checking in to: " MethodInvocation log StatementExpression MethodInvocation StatementExpression MethodInvocation IfStatement BinaryOperation == This MemberReference lockStatus MemberReference BlockStatement StatementExpression MethodInvocation Literal " will be checked in log BlockStatement StatementExpression MethodInvocation Literal " will be checked in with no change in lock log IfStatement This MethodInvocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " will be checked in in with " Literal and of lock log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " will be checked in of status " Literal if log	0
MethodDeclaration Modifier public FormalParameter BasicType boolean c StatementExpression Assignment MemberReference doUpdate MemberReference c = StatementExpression Assignment MemberReference MemberReference c =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal after Literal 1 MemberReference l length assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator base ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference File separator StatementExpression MethodInvocation p ClassCreator ReferenceType File MemberReference base Literal setLocation StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation p Literal setPath StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation p ClassCreator ReferenceType MemberReference project Literal append StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation p MethodInvocation Literal setPath createPath StatementExpression Assignment MemberReference l MethodInvocation p list = StatementExpression MethodInvocation Literal after Literal 1 MemberReference l length assertEquals	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ZipEntry ze IOException StatementExpression MethodInvocation MemberReference ze MethodInvocation ZipLong MemberReference getBytes put StatementExpression MethodInvocation MemberReference writeOut StatementExpression Assignment MemberReference Literal 4 += LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation ze getMethod IfStatement BinaryOperation && BinaryOperation == MemberReference MemberReference DEFLATED BinaryOperation == MemberReference raf Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation ZipShort Literal 20 getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipShort Literal 8 getBytes writeOut BlockStatement StatementExpression MethodInvocation MethodInvocation ZipShort Literal 10 getBytes writeOut StatementExpression MethodInvocation MemberReference writeOut StatementExpression Assignment MemberReference Literal 4 += StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference getBytes writeOut StatementExpression Assignment MemberReference Literal 2 += StatementExpression MethodInvocation MethodInvocation MethodInvocation ze writeOut StatementExpression Assignment MemberReference Literal 4 += StatementExpression Assignment MemberReference MemberReference = IfStatement BinaryOperation || BinaryOperation == MemberReference MemberReference DEFLATED BinaryOperation != MemberReference raf Literal null BlockStatement StatementExpression MethodInvocation MemberReference writeOut StatementExpression MethodInvocation MemberReference writeOut StatementExpression MethodInvocation MemberReference writeOut BlockStatement StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getSize getBytes writeOut StatementExpression MethodInvocation MethodInvocation ZipLong MethodInvocation ze getSize getBytes writeOut StatementExpression Assignment MemberReference Literal 12 += LocalVariableDeclaration BasicType byte VariableDeclarator name MethodInvocation MethodInvocation ze getName getBytes StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference name length getBytes writeOut StatementExpression Assignment MemberReference Literal 2 += LocalVariableDeclaration BasicType byte VariableDeclarator MethodInvocation ze StatementExpression MethodInvocation MethodInvocation ZipShort MemberReference length getBytes writeOut StatementExpression Assignment MemberReference Literal 2 += StatementExpression MethodInvocation MemberReference name writeOut StatementExpression Assignment MemberReference MemberReference name length += StatementExpression MethodInvocation MemberReference writeOut StatementExpression Assignment MemberReference MemberReference length += StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean trim StatementExpression Assignment This MemberReference trim MemberReference trim =	0
MethodDeclaration Modifier public printStackTrace FormalParameter ReferenceType PrintWriter pw SynchronizedStatement MemberReference pw StatementExpression SuperMethodInvocation MemberReference pw printStackTrace IfStatement BinaryOperation != MemberReference cause Literal null BlockStatement StatementExpression MethodInvocation pw Literal "--- Exception ---" println StatementExpression MethodInvocation cause MemberReference pw printStackTrace	1
MethodDeclaration Modifier protected ReferenceType ReturnStatement Cast ReferenceType MethodInvocation ClassReference ReferenceType Literal getCheckedRef	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType Vector names FormalParameter ReferenceType String name LocalVariableDeclaration BasicType int VariableDeclarator res MethodInvocation names size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MethodInvocation names size BinaryOperation == MemberReference res MethodInvocation names size MemberReference ++ i BlockStatement IfStatement BinaryOperation < MethodInvocation name Cast ReferenceType String MethodInvocation names MemberReference i elementAt compareTo Literal 0 BlockStatement StatementExpression Assignment MemberReference res MemberReference i = ReturnStatement MemberReference res	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String arguments IfStatement BinaryOperation && BinaryOperation != MemberReference arguments Literal null BinaryOperation != MemberReference arguments length Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference arguments length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i arguments	1
MethodDeclaration Modifier public static ReferenceType BuildException TryStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation newSAXParser CatchClause CatchClauseParameter SAXException e ThrowStatement MethodInvocation MemberReference e	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement BinaryOperation != This MemberReference Literal null	0
MethodDeclaration Modifier public close IOException IfStatement MemberReference ! closed BlockStatement StatementExpression This MethodInvocation finish StatementExpression This MemberReference buffer MethodInvocation close StatementExpression MethodInvocation out close StatementExpression Assignment MemberReference closed Literal true =	1
MethodDeclaration Modifier public characters FormalParameter BasicType char ch FormalParameter BasicType int start FormalParameter BasicType int length SAXException LocalVariableDeclaration ReferenceType String VariableDeclarator debug ClassCreator ReferenceType String MemberReference ch MemberReference start MemberReference length	1
MethodDeclaration Modifier public synchronized ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference ds Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String w StatementExpression Assignment MemberReference MemberReference w =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String os StatementExpression Assignment This MemberReference os MemberReference os =	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation close	0
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType File VariableDeclarator directory IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path Cast ReferenceType String MethodInvocation relativeFilePaths MemberReference file get IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Internal error: " Literal could not match file" MemberReference file Literal "\n" Literal file a bug report on this" StatementExpression Assignment MemberReference directory ClassCreator MethodInvocation getParentFile ReferenceType File MemberReference MemberReference path = StatementExpression MethodInvocation directory mkdirs BlockStatement StatementExpression Assignment MemberReference directory MethodInvocation file getParentFile = LocalVariableDeclaration ReferenceType File VariableDeclarator checksumFile ClassCreator ReferenceType File MemberReference directory BinaryOperation + MethodInvocation file getName MemberReference fileext ReturnStatement MemberReference checksumFile	1
MethodDeclaration Modifier public ReferenceType String resolve FormalParameter ReferenceType String filelist LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType int VariableDeclarator min TernaryExpression BinaryOperation > MemberReference length MethodInvocation filelist length MethodInvocation filelist length MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference min MemberReference ++ i BlockStatement IfStatement BinaryOperation == Literal 'X' MethodInvocation filelist MemberReference i charAt BlockStatement StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i append StatementExpression MethodInvocation sb Literal ";" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private synchronized validate StatementExpression MethodInvocation dieOnCircularReference StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MemberReference Literal null ClassCreator ReferenceType MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String add StatementExpression Assignment This MemberReference add MemberReference add =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator command ClassCreator ReferenceType This MemberReference MemberReference StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation StatementExpression MethodInvocation command MethodInvocation ReturnStatement MemberReference command	0
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper mapper IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one MethodInvocation getLocation StatementExpression Assignment MemberReference MemberReference mapper =	0
MethodDeclaration Modifier public push FormalParameter BasicType char cs FormalParameter BasicType int start FormalParameter BasicType int length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - BinaryOperation + MemberReference start MemberReference length Literal 1 BinaryOperation >= MemberReference i MemberReference start BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference -- i cs push	1
MethodDeclaration Modifier public testWindowsLineSeparator IOException StatementExpression MethodInvocation reg Literal "end of text$" StatementExpression MethodInvocation Literal line MethodInvocation ! reg Literal "end of matches assertTrue	1
MethodDeclaration Modifier private ReferenceType XMethod getMethods FormalParameter ReferenceType XClass cur_class LocalVariableDeclaration ReferenceType Map VariableDeclarator already ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType List VariableDeclarator methods ClassCreator ReferenceType ArrayList WhileStatement BinaryOperation != MemberReference cur_class Literal null BlockStatement IfStatement BinaryOperation || MethodInvocation cur_class MethodInvocation Literal equals getQualifiedName MethodInvocation cur_class MethodInvocation Literal equals getQualifiedName BlockStatement BreakStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation cur_class getMethods LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType XMethod VariableDeclarator method Cast ReferenceType XMethod MethodInvocation iter next IfStatement MethodInvocation MemberReference method BlockStatement ContinueStatement IfStatement MethodInvocation MemberReference method BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation method getName IfStatement BinaryOperation == MethodInvocation method MemberReference cur_class BlockStatement IfStatement BinaryOperation == MethodInvocation already MemberReference methodName containsKey Literal false BlockStatement StatementExpression MethodInvocation already MemberReference methodName MemberReference method put StatementExpression MethodInvocation methods MemberReference method add StatementExpression Assignment MemberReference cur_class MethodInvocation cur_class = ReturnStatement MethodInvocation MemberReference methods	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType Extension FormalParameter Modifier final ReferenceType Manifest manifest FormalParameter Modifier final ReferenceType Attributes ReferenceType Name LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator results ClassCreator ReferenceType ArrayList LocalVariableDeclaration Modifier final ReferenceType Attributes VariableDeclarator MethodInvocation manifest IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation MemberReference MemberReference results MemberReference getExtension LocalVariableDeclaration Modifier final ReferenceType Map VariableDeclarator entries MethodInvocation manifest getEntries LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator keys MethodInvocation entries MethodInvocation iterator keySet WhileStatement MethodInvocation keys hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation keys next LocalVariableDeclaration Modifier final ReferenceType Attributes VariableDeclarator attributes Cast ReferenceType Attributes MethodInvocation entries MemberReference key get StatementExpression MethodInvocation MemberReference attributes MemberReference results MemberReference getExtension ReturnStatement Cast ReferenceType Extension MethodInvocation results ArrayCreator ReferenceType Extension MethodInvocation results size toArray	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference inputEncoding MemberReference encoding = IfStatement BinaryOperation == MemberReference outputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference outputEncoding MemberReference encoding =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String executable StatementExpression Assignment This MemberReference executable MemberReference executable =	0
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation helper createClasspath	0
MethodDeclaration Modifier private ReferenceType String ReturnStatement MemberReference prefix	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal Literal "A in time expectPropertySet	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter BasicType char ch IfStatement BinaryOperation == MemberReference ch MemberReference File separatorChar BlockStatement StatementExpression Assignment MemberReference ch Literal '/' = LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Integer MemberReference ch toHexString LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - Literal 5 MethodInvocation s length LocalVariableDeclaration BasicType char VariableDeclarator result ArrayCreator BasicType char Literal 6 StatementExpression Assignment MemberReference ArraySelector Literal 0 result Literal '_' = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result Literal '0' = LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference Literal 1 BinaryOperation < MemberReference i Literal 6 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i result MethodInvocation s MemberReference ++ charAt = ReturnStatement ClassCreator ReferenceType String MemberReference result	0
MethodDeclaration Modifier public addOr FormalParameter ReferenceType OrSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference server Literal null BlockStatement StatementExpression Assignment MemberReference server ClassCreator ReferenceType This = ReturnStatement MemberReference server	0
MethodDeclaration Modifier public synchronized BasicType int selectorCount ReturnStatement TernaryExpression BinaryOperation && MethodInvocation isReference BinaryOperation != MethodInvocation getProject Literal null MethodInvocation MethodInvocation selectorCount MethodInvocation getProject MethodInvocation selectors size	0
MethodDeclaration Modifier protected FormalParameter BasicType int result IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator res MethodInvocation Integer MemberReference result toString StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference res setNewProperty getProject	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required attribute expectBuildException	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "exception thrown by the Literal the Foo expectBuildExceptionContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation MemberReference IfStatement MethodInvocation ! isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal home " MethodInvocation getPath Literal " is not valid" LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference BinaryOperation + BinaryOperation + Literal MemberReference Literal IfStatement MethodInvocation ! exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal config file " MemberReference Literal " not found." IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must a password " Literal start the server" LocalVariableDeclaration ReferenceType Java VariableDeclarator ClassCreator ReferenceType Java This StatementExpression MethodInvocation MethodInvocation getTaskName setTaskName StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference setClassname LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + Literal " MemberReference += StatementExpression MethodInvocation MethodInvocation MemberReference setLine createJvmarg StatementExpression MethodInvocation MethodInvocation MemberReference setLine createArg IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation MemberReference classpath IfStatement BinaryOperation != MethodInvocation executeJava Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal of server failed"	0
MethodDeclaration Modifier public static BasicType long FormalParameter BasicType byte buf LocalVariableDeclaration BasicType long VariableDeclarator sum Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference buf length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sum BinaryOperation & Literal 255 MemberReference ArraySelector MemberReference i buf += ReturnStatement MemberReference sum	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation < MethodInvocation project MethodInvocation Literal indexOf Literal getProperty Literal 0 BlockStatement StatementExpression MethodInvocation Literal fail	0
MethodDeclaration Modifier public static close FormalParameter ReferenceType OutputStream device IfStatement BinaryOperation != MemberReference device Literal null BlockStatement TryStatement StatementExpression MethodInvocation device close CatchClause CatchClauseParameter IOException ioex	1
MethodDeclaration Modifier public final ReferenceType String FormalParameter ReferenceType String IfStatement BinaryOperation || BinaryOperation == MemberReference impl Literal null MethodInvocation impl MemberReference equals BlockStatement ReturnStatement SuperMethodInvocation BlockStatement ReturnStatement ArrayCreator ReferenceType String Literal 0	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType File file StatementExpression MethodInvocation MethodInvocation MemberReference propertyName MethodInvocation file getAbsolutePath setNewProperty getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType h StatementExpression MethodInvocation MemberReference h addElement	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression MethodInvocation Literal MemberReference name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected addTestSuite FormalParameter ReferenceType Element root FormalParameter ReferenceType Element LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference getAttribute LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation Literal '.' lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression BinaryOperation == MemberReference pos Literal - 1 Literal "" MethodInvocation Literal 0 MemberReference pos substring LocalVariableDeclaration ReferenceType String VariableDeclarator classname TernaryExpression BinaryOperation == MemberReference pos Literal - 1 MemberReference MethodInvocation BinaryOperation + MemberReference pos Literal 1 substring LocalVariableDeclaration ReferenceType Element VariableDeclarator copy Cast ReferenceType Element MethodInvocation MemberReference root MemberReference StatementExpression MethodInvocation copy MemberReference MemberReference classname setAttribute StatementExpression MethodInvocation copy MemberReference MemberReference setAttribute StatementExpression MethodInvocation copy MemberReference MethodInvocation Integer MemberReference toString setAttribute	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType FileResource MethodInvocation getCheckedRef MemberReference baseDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType filter StatementExpression MethodInvocation MemberReference filter addElement	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MethodInvocation arguments iterator	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression Assignment This MemberReference classpath MemberReference classpath =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier private compareFiles FormalParameter ReferenceType DirectoryScanner ds FormalParameter ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ds getIncludedDirectories StatementExpression MethodInvocation Literal " MemberReference length MemberReference length assertEquals StatementExpression MethodInvocation Literal " MemberReference length MemberReference length assertEquals LocalVariableDeclaration ReferenceType TreeSet VariableDeclarator files ClassCreator ReferenceType TreeSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference File separatorChar Literal '/' replace add LocalVariableDeclaration ReferenceType TreeSet VariableDeclarator ClassCreator ReferenceType TreeSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference counter MethodInvocation MemberReference File separatorChar Literal '/' replace add LocalVariableDeclaration ReferenceType String VariableDeclarator LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation files iterator LocalVariableDeclaration BasicType int VariableDeclarator counter Literal 0 WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType String MethodInvocation i next = StatementExpression MethodInvocation MemberReference ArraySelector MemberReference counter MemberReference assertEquals StatementExpression MemberReference ++ counter LocalVariableDeclaration ReferenceType String VariableDeclarator currentdirectory LocalVariableDeclaration ReferenceType Iterator VariableDeclarator dirit MethodInvocation iterator StatementExpression Assignment MemberReference counter Literal 0 = WhileStatement MethodInvocation dirit hasNext BlockStatement StatementExpression Assignment MemberReference currentdirectory Cast ReferenceType String MethodInvocation dirit next = StatementExpression MethodInvocation MemberReference ArraySelector MemberReference counter MemberReference currentdirectory assertEquals StatementExpression MemberReference ++ counter	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation includes MemberReference name MemberReference isCaseSensitive BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal " MethodInvocation getValue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean replace StatementExpression Assignment MemberReference MemberReference replace =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "password" executeTarget	0
MethodDeclaration Modifier private synchronized BuildException IfStatement BinaryOperation == MemberReference props Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propsFile MethodInvocation System MemberReference getProperty IfStatement BinaryOperation == MemberReference propsFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal property " MemberReference Literal " for Literal " set" StatementExpression Assignment MemberReference props ClassCreator ReferenceType Properties = TryStatement StatementExpression MethodInvocation props ClassCreator ReferenceType FileInputStream MemberReference propsFile load CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Couldn't load " MemberReference propsFile MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType to StatementExpression MethodInvocation observers MemberReference to removeElement	0
MethodDeclaration Modifier private flush IfStatement BinaryOperation && MemberReference record BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out flush	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType Target VariableDeclarator target MethodInvocation event LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator targetElement ClassCreator ReferenceType TimedElement StatementExpression Assignment MemberReference targetElement startTime MethodInvocation System currentTimeMillis = StatementExpression Assignment MemberReference targetElement element MethodInvocation doc MemberReference createElement = StatementExpression MethodInvocation targetElement.element MemberReference MethodInvocation target getName setAttribute StatementExpression MethodInvocation targets MemberReference target MemberReference targetElement put StatementExpression MethodInvocation MethodInvocation MemberReference targetElement push getStack	1
MethodDeclaration Modifier public synchronized ReferenceType Enumeration selectorElements ReturnStatement TernaryExpression BinaryOperation && MethodInvocation isReference BinaryOperation != MethodInvocation getProject Literal null MethodInvocation MethodInvocation selectorElements MethodInvocation getProject MethodInvocation selectors elements	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation MemberReference inFile Literal StatementExpression MethodInvocation MemberReference outFile Literal LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream Literal null LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator outputStream Literal null TryStatement StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MethodInvocation = StatementExpression Assignment MemberReference outputStream ClassCreator ReferenceType FileOutputStream MethodInvocation = StatementExpression MethodInvocation MemberReference inputStream MemberReference outputStream doit CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression MethodInvocation FILE_UTILS MemberReference inputStream close StatementExpression MethodInvocation FILE_UTILS MemberReference outputStream close	1
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter Literal true ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public FormalParameter ReferenceType String hostname StatementExpression Assignment MemberReference proxyHost MemberReference hostname =	0
MethodDeclaration Modifier public synchronized ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Cache getCache ReturnStatement MemberReference cache	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType byte VariableDeclarator val ArrayCreator BasicType byte ArrayInitializer Literal Literal LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator zs ClassCreator ReferenceType ZipShort MemberReference val StatementExpression MethodInvocation Literal from Literal MethodInvocation zs getValue assertEquals	0
MethodDeclaration Modifier protected ReferenceType Vector getFileList BuildException LocalVariableDeclaration ReferenceType Vector VariableDeclarator files ClassCreator ReferenceType Vector IfStatement BinaryOperation != MemberReference baseDir Literal null BlockStatement StatementExpression MethodInvocation MemberReference files SuperMethodInvocation MemberReference baseDir getDirectoryScanner appendFiles BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets Literal 0 elementAt StatementExpression Assignment MemberReference baseDir MethodInvocation fs getDir = StatementExpression MethodInvocation MemberReference files MethodInvocation fs MethodInvocation getProject getDirectoryScanner appendFiles ReturnStatement MemberReference files	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation StatementExpression Cast ReferenceType MemberReference src	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference p ClassCreator ReferenceType Project = StatementExpression MethodInvocation p init	0
MethodDeclaration Modifier public FormalParameter ReferenceType String compiler StatementExpression Assignment This MemberReference compiler MemberReference compiler =	0
MethodDeclaration Modifier public ReferenceType String getError ReturnStatement MemberReference	0
MethodDeclaration Modifier public setEntityResolver FormalParameter ReferenceType StatementExpression Assignment MemberReference entityResolver MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType listener StatementExpression MethodInvocation listeners MemberReference listener remove	0
MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp BinaryOperation + Literal " MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType File srcDir LocalVariableDeclaration ReferenceType VariableDeclarator handler SuperMethodInvocation MemberReference srcDir IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation handler BinaryOperation + Literal Object Literal for WebLogic CMP MemberReference registerDTD BlockStatement StatementExpression MethodInvocation handler BinaryOperation + Literal Object Literal for WebLogic CMP MemberReference registerDTD ReturnStatement MemberReference handler	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null MemberReference MethodInvocation MethodInvocation MemberReference MagicNames getProperty getProject	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Project project FormalParameter ReferenceType Object source FormalParameter ReferenceType RootHandler handler BuildException LocalVariableDeclaration ReferenceType VariableDeclarator context MemberReference handler context IfStatement BinaryOperation instanceof MemberReference source ReferenceType File BlockStatement StatementExpression Assignment MemberReference context buildFile Cast ReferenceType File MemberReference source = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Source " MethodInvocation source MethodInvocation getName getClass Literal " not supported by this plugin" LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator inputStream Literal null LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource Literal null StatementExpression Assignment MemberReference context buildFile ClassCreator ReferenceType File MethodInvocation getAbsolutePath = StatementExpression Assignment MemberReference context ClassCreator ReferenceType File MethodInvocation getParent = TryStatement StatementExpression Assignment MemberReference context parser MethodInvocation = LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation MethodInvocation getAbsolutePath toURI StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType FileInputStream MemberReference context buildFile = StatementExpression Assignment MemberReference inputSource ClassCreator ReferenceType InputSource MemberReference inputStream = StatementExpression MethodInvocation inputSource MemberReference uri setSystemId StatementExpression MethodInvocation System.err BinaryOperation + Literal "Parsing with " MemberReference context buildFile println StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "parsing " MemberReference context buildFile Literal " with URI = " MemberReference uri MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator hb MemberReference handler StatementExpression MethodInvocation context.parser MemberReference hb StatementExpression MethodInvocation context.parser MemberReference hb setEntityResolver StatementExpression MethodInvocation context.parser MemberReference hb setErrorHandler StatementExpression MethodInvocation context.parser MemberReference hb setDTDHandler StatementExpression MethodInvocation context.parser MemberReference inputSource parse CatchClause CatchClauseParameter SAXParseException exc LocalVariableDeclaration ReferenceType Location VariableDeclarator location ClassCreator ReferenceType Location MethodInvocation exc getSystemId MethodInvocation exc getLineNumber MethodInvocation exc getColumnNumber LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation exc getException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement LocalVariableDeclaration ReferenceType BuildException VariableDeclarator be Cast ReferenceType BuildException MemberReference t IfStatement BinaryOperation == MethodInvocation be getLocation MemberReference Location UNKNOWN_LOCATION BlockStatement StatementExpression MethodInvocation be MemberReference location setLocation ThrowStatement MemberReference be ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exc getMessage MemberReference t MemberReference location CatchClause CatchClauseParameter SAXException exc LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation exc getException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exc getMessage MemberReference t CatchClause CatchClauseParameter FileNotFoundException exc ThrowStatement ClassCreator ReferenceType BuildException MemberReference exc CatchClause CatchClauseParameter UnsupportedEncodingException exc ThrowStatement ClassCreator ReferenceType BuildException Literal "Encoding of project file is invalid." MemberReference exc CatchClause CatchClauseParameter IOException exc ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error reading project file: " MethodInvocation exc getMessage MemberReference exc IfStatement BinaryOperation != MemberReference inputStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation inputStream close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String input LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType boolean VariableDeclarator backSlashSeen Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation input length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation input MemberReference i charAt IfStatement MemberReference ! backSlashSeen BlockStatement IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement StatementExpression Assignment MemberReference backSlashSeen Literal true = BlockStatement StatementExpression MethodInvocation b MemberReference c append BlockStatement SwitchStatement MemberReference c SwitchStatementCase Literal '\\' StatementExpression MethodInvocation b Cast BasicType char Literal '\\' append BreakStatement SwitchStatementCase Literal 'n' StatementExpression MethodInvocation b Cast BasicType char Literal '\n' append BreakStatement SwitchStatementCase Literal 'r' StatementExpression MethodInvocation b Cast BasicType char Literal '\r' append BreakStatement SwitchStatementCase Literal 't' StatementExpression MethodInvocation b Cast BasicType char Literal '\t' append BreakStatement SwitchStatementCase Literal 'f' StatementExpression MethodInvocation b Cast BasicType char Literal '\f' append BreakStatement SwitchStatementCase Literal 's' StatementExpression MethodInvocation b Literal " append BreakStatement SwitchStatementCase StatementExpression MethodInvocation b MemberReference c append StatementExpression Assignment MemberReference backSlashSeen Literal false = ReturnStatement MethodInvocation b toString	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier synchronized protected ReferenceType Vector getFilters IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation getFilters IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference Literal true = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator sz MethodInvocation size BinaryOperation < MemberReference i MemberReference sz MemberReference ++ i BlockStatement StatementExpression MethodInvocation Cast ReferenceType File MethodInvocation MemberReference i get StatementExpression MethodInvocation clear StatementExpression Assignment MemberReference Literal false = ReturnStatement MemberReference filters	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation fileSets MemberReference set addElement	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MemberReference includes setIncludes	0
MethodDeclaration Modifier public FormalParameter BasicType boolean closure StatementExpression Assignment This MemberReference closure MemberReference closure =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Manifest IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = BlockStatement StatementExpression MethodInvocation MemberReference merge StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal true Literal false Literal true Literal false Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized setMillis FormalParameter BasicType long m StatementExpression Assignment MemberReference millis ClassCreator ReferenceType Long MemberReference m =	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation hasSelectors BlockStatement StatementExpression MethodInvocation buf Literal " append StatementExpression MethodInvocation buf SuperMethodInvocation toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is directory" expectBuildException	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static ReferenceType Vector tokenizePath FormalParameter ReferenceType String path ReturnStatement MethodInvocation MemberReference path MemberReference File separator tokenizePath	1
MethodDeclaration Modifier private BasicType int LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation outOfDateClasses elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation e nextElement StatementExpression Assignment MemberReference count MethodInvocation MemberReference className deleteAffectedFiles += LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator Cast ReferenceType ClassFileInfo MethodInvocation classFileInfoMap MemberReference className get IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation exists BlockStatement StatementExpression MethodInvocation delete StatementExpression MemberReference ++ count ReturnStatement MemberReference count	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Resource r FormalParameter ReferenceType tOut FormalParameter ReferenceType String vPath FormalParameter ReferenceType TarFileSet tarFileSet IOException IfStatement MethodInvocation ! r isExists BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference tarFileSet Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fullpath MethodInvocation tarFileSet This MethodInvocation getProject getFullpath IfStatement BinaryOperation > MethodInvocation fullpath length Literal 0 BlockStatement StatementExpression Assignment MemberReference vPath MemberReference fullpath = BlockStatement IfStatement BinaryOperation <= MethodInvocation vPath length Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator prefix MethodInvocation tarFileSet This MethodInvocation getProject IfStatement BinaryOperation && BinaryOperation > MethodInvocation prefix length Literal 0 MethodInvocation ! prefix Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference prefix BinaryOperation + MemberReference prefix Literal "/" = StatementExpression Assignment MemberReference vPath BinaryOperation + MemberReference prefix MemberReference vPath = IfStatement BinaryOperation && MethodInvocation vPath Literal "/" startsWith MethodInvocation ! tarFileSet BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator l MethodInvocation vPath length IfStatement BinaryOperation <= MemberReference l Literal 1 BlockStatement ReturnStatement StatementExpression Assignment MemberReference vPath MethodInvocation vPath Literal 1 MemberReference l substring = IfStatement BinaryOperation && MethodInvocation r isDirectory MethodInvocation ! vPath Literal "/" endsWith BlockStatement StatementExpression Assignment MemberReference vPath Literal "/" += IfStatement BinaryOperation >= MethodInvocation vPath length MemberReference TarConstants BlockStatement IfStatement MethodInvocation longFileMode BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference vPath MemberReference Project MSG_INFO log ReturnStatement IfStatement MethodInvocation longFileMode BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference vPath Literal " longer than " MemberReference TarConstants Literal " MemberReference Project MSG_WARN log IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal tar file only be " Literal by compatible tar MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference Literal true = IfStatement MethodInvocation longFileMode BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference vPath Literal " longer than " MemberReference TarConstants Literal MethodInvocation getLocation LocalVariableDeclaration ReferenceType VariableDeclarator te ClassCreator ReferenceType MemberReference vPath StatementExpression MethodInvocation te MethodInvocation r getLastModified IfStatement BinaryOperation instanceof MemberReference r ReferenceType ArchiveResource BlockStatement LocalVariableDeclaration ReferenceType ArchiveResource VariableDeclarator ar Cast ReferenceType ArchiveResource MemberReference r StatementExpression MethodInvocation te MethodInvocation ar getMode setMode IfStatement BinaryOperation instanceof MemberReference r ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator tr Cast ReferenceType MemberReference r StatementExpression MethodInvocation te MethodInvocation tr StatementExpression MethodInvocation te MethodInvocation tr getUid StatementExpression MethodInvocation te MethodInvocation tr StatementExpression MethodInvocation te MethodInvocation tr IfStatement MethodInvocation ! r isDirectory BlockStatement IfStatement BinaryOperation > MethodInvocation r size MemberReference TarConstants BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference r Literal " than " MemberReference TarConstants Literal " StatementExpression MethodInvocation te MethodInvocation r getSize setSize IfStatement BinaryOperation && BinaryOperation != MemberReference tarFileSet Literal null MethodInvocation tarFileSet BlockStatement StatementExpression MethodInvocation te MethodInvocation tarFileSet getMode setMode IfStatement BinaryOperation && BinaryOperation != MemberReference tarFileSet Literal null MethodInvocation tarFileSet BlockStatement StatementExpression MethodInvocation te MethodInvocation tarFileSet This MethodInvocation getProject setMode IfStatement BinaryOperation != MemberReference tarFileSet Literal null BlockStatement IfStatement MethodInvocation tarFileSet BlockStatement StatementExpression MethodInvocation te MethodInvocation tarFileSet IfStatement MethodInvocation tarFileSet BlockStatement StatementExpression MethodInvocation te MethodInvocation tarFileSet IfStatement MethodInvocation tarFileSet BlockStatement StatementExpression MethodInvocation te MethodInvocation tarFileSet getUid IfStatement MethodInvocation tarFileSet BlockStatement StatementExpression MethodInvocation te MethodInvocation tarFileSet LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement StatementExpression MethodInvocation tOut MemberReference te putNextEntry IfStatement MethodInvocation ! r isDirectory BlockStatement StatementExpression Assignment MemberReference in MethodInvocation r getInputStream = LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 DoStatement BinaryOperation != MemberReference count Literal - 1 BlockStatement StatementExpression MethodInvocation tOut MemberReference buffer Literal 0 MemberReference count write StatementExpression Assignment MemberReference count MethodInvocation in MemberReference buffer Literal 0 MemberReference buffer length read = StatementExpression MethodInvocation tOut StatementExpression MethodInvocation FileUtils MemberReference in close	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public addNot FormalParameter ReferenceType NotSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType RuntimeConfigurable wrapper FormalParameter ReferenceType UnknownElement parentElement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation wrapper getChildren WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator Cast ReferenceType RuntimeConfigurable MethodInvocation e nextElement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ClassCreator ReferenceType UnknownElement MethodInvocation StatementExpression MethodInvocation parentElement MemberReference addChild StatementExpression MethodInvocation MethodInvocation getProject setProject StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier protected ReferenceType Vector ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public ReferenceType String getParameter BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation name Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No name specified for custom IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference name Literal ":" TernaryExpression MemberReference Literal "" Literal MemberReference scope Literal ":" MethodInvocation BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference name Literal ":" TernaryExpression MemberReference Literal "" Literal MemberReference scope Literal ":" MemberReference name	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getValue	0
MethodDeclaration Modifier private ReferenceType BSFException IfStatement BinaryOperation != MemberReference manager Literal null BlockStatement ReturnStatement MemberReference manager LocalVariableDeclaration ReferenceType VariableDeclarator m ClassCreator ReferenceType StatementExpression MethodInvocation m MethodInvocation IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator e MethodInvocation manager MethodInvocation getLanguage StatementExpression Assignment This MemberReference manager MemberReference m = StatementExpression Assignment This MemberReference engine MemberReference e = ReturnStatement MemberReference m	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator MethodInvocation getProject LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line IfStatement MethodInvocation util Literal MemberReference line match BlockStatement StatementExpression Assignment MemberReference line MethodInvocation util Literal MemberReference line = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Integer MemberReference line parseInt StatementExpression MethodInvocation BinaryOperation + Literal Number is " MemberReference MemberReference Project MSG_INFO log StatementExpression MethodInvocation Literal BinaryOperation + Literal "" MemberReference setProperty IfStatement MethodInvocation util Literal MemberReference line match BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal check client settings server" StatementExpression MethodInvocation handler MemberReference StatementExpression MethodInvocation Literal MemberReference handler execP4Command	0
MethodDeclaration Modifier private closeQuietly IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! BinaryOperation != MemberReference conn Literal null MethodInvocation Literal equals BlockStatement TryStatement StatementExpression MethodInvocation conn rollback CatchClause CatchClauseParameter ex	0
MethodDeclaration Modifier static ReferenceType String FormalParameter ReferenceType String s LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator end Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation s length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement BinaryOperation == MemberReference c Literal '(' BlockStatement StatementExpression MemberReference ++ IfStatement BinaryOperation == MemberReference start Literal 0 BlockStatement StatementExpression Assignment MemberReference end MemberReference i = IfStatement BinaryOperation == MemberReference c Literal ')' BlockStatement StatementExpression MemberReference -- IfStatement BinaryOperation == MemberReference end Literal 0 BlockStatement StatementExpression Assignment MemberReference start BinaryOperation + MemberReference i Literal 1 = IfStatement BinaryOperation && BinaryOperation == MemberReference Literal 0 BinaryOperation == MemberReference c Literal '<' BlockStatement StatementExpression Assignment MemberReference start BinaryOperation + MemberReference i Literal 1 = IfStatement BinaryOperation && BinaryOperation == MemberReference Literal 0 BinaryOperation == MemberReference c Literal '>' BlockStatement StatementExpression Assignment MemberReference end MemberReference i = IfStatement BinaryOperation == MemberReference end Literal 0 BlockStatement StatementExpression Assignment MemberReference end MemberReference len = ReturnStatement MethodInvocation s MemberReference start MemberReference end substring	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration * Get the set of that represent * @return an Iterator of * */ ReferenceType Iterator IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ReturnStatement ClassCreator ReferenceType MethodInvocation getBasedir MethodInvocation getIncludedFiles StatementExpression MethodInvocation ReturnStatement MethodInvocation MethodInvocation iterator values	0
MethodDeclaration Modifier public static BasicType boolean match FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation MemberReference pattern MemberReference str Literal true match	0
MethodDeclaration Modifier protected BasicType boolean run FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType log BuildException TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator n2aMain MethodInvocation Class Literal forName LocalVariableDeclaration ReferenceType Class VariableDeclarator param ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String LocalVariableDeclaration ReferenceType Method VariableDeclarator convert MethodInvocation n2aMain Literal "convert" MemberReference param getMethod IfStatement BinaryOperation == MemberReference convert Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not find method in " Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation n2aMain newInstance ReturnStatement Cast ReferenceType Boolean MethodInvocation convert MemberReference o ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation cmd invoke CatchClause CatchClauseParameter BuildException ex ThrowStatement MemberReference ex CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException Literal "Error starting " MemberReference ex	1
MethodDeclaration Modifier public LocalVariableDeclaration BasicType long VariableDeclarator ms BinaryOperation * BinaryOperation + BinaryOperation + BinaryOperation * Literal 20 Literal BinaryOperation * Literal 11 Literal 60 Literal 12 Literal 1000 LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation MemberReference ms MemberReference format StatementExpression MethodInvocation Literal MemberReference text assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType filter StatementExpression MethodInvocation filters MemberReference filter addElement	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child FormalParameter ReferenceType String tag LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MemberReference project MethodInvocation parent getClass getHelper StatementExpression MethodInvocation ih MemberReference project MemberReference parent MemberReference child MemberReference tag	0
MethodDeclaration Modifier protected validate BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference outputFile Literal null MethodInvocation outputFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal cannot be a directory" IfStatement BinaryOperation == MethodInvocation getExecutable Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal is no executable defined for this	1
MethodDeclaration Modifier public FormalParameter ReferenceType attr StatementExpression Assignment MemberReference MethodInvocation attr resolve =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Project project LocalVariableDeclaration ReferenceType Vector VariableDeclarator targets Cast ReferenceType Vector MethodInvocation project Literal getReference IfStatement BinaryOperation == MemberReference targets Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation targets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Target VariableDeclarator t Cast ReferenceType Target MethodInvocation targets MemberReference i elementAt StatementExpression MethodInvocation MemberReference project MemberReference t MemberReference ReturnStatement MethodInvocation toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String targetFolder StatementExpression Assignment This MemberReference targetFolder MemberReference targetFolder =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference finished	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation Literal IfStatement MethodInvocation ! f exists BlockStatement StatementExpression MethodInvocation Literal failed" fail	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation Literal null MemberReference name MemberReference value Literal true setProperty This	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation MemberReference args Literal null Literal null start	0
MethodDeclaration Modifier protected cleanUp StatementExpression Assignment MemberReference descriptorAdded Literal false = StatementExpression SuperMethodInvocation cleanUp	1
MethodDeclaration Modifier public static register FormalParameter ReferenceType Class c TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator ze Cast ReferenceType MethodInvocation c newInstance StatementExpression MethodInvocation MethodInvocation ze MemberReference c put CatchClause CatchClauseParameter ClassCastException ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + MemberReference c Literal " doesn\'t implement CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + MemberReference c Literal " is not a class" CatchClause CatchClauseParameter IllegalAccessException ie ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + MemberReference c Literal constructor is not	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	1
MethodDeclaration Modifier public FormalParameter BasicType long FormalParameter BasicType long FormalParameter BasicType long errors StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment This MemberReference errors MemberReference errors =	0
MethodDeclaration Modifier public verifySettings IfStatement BinaryOperation && BinaryOperation < MemberReference min Literal 0 BinaryOperation < MemberReference max Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal must set at least one of the min or the " Literal setError IfStatement BinaryOperation && BinaryOperation < MemberReference max MemberReference min BinaryOperation > MemberReference max Literal - 1 BlockStatement StatementExpression MethodInvocation Literal "The maximum depth is lower than the setError	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String s FormalParameter ReferenceType File baseDir ReturnStatement TernaryExpression BinaryOperation || BinaryOperation == MemberReference mapper Literal null MemberReference MemberReference s ClassCreator MethodInvocation MemberReference s MemberReference baseDir MemberReference destDir MemberReference mapper ReferenceType SourceFileScanner This	1
MethodDeclaration Modifier public IOException TryStatement StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation disconnect	0
MethodDeclaration Modifier private ReferenceType ArrayList FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType ResourceCollection MemberReference o MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation result MethodInvocation i next add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter BasicType boolean binary StatementExpression Assignment This MemberReference binary MemberReference binary =	0
MethodDeclaration Modifier protected ReferenceType File ReturnStatement MemberReference outFile	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " StatementExpression MethodInvocation Literal "unexpected MemberReference MethodInvocation Literal assertEquals StatementExpression MethodInvocation Literal MethodInvocation trim StatementExpression MethodInvocation Literal "unexpected error MemberReference MethodInvocation Literal assertEquals StatementExpression MethodInvocation Literal MethodInvocation trim	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference includeList	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String command BuildException LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute StatementExpression MethodInvocation MemberReference exe MemberReference command TryStatement StatementExpression MethodInvocation exe CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected writeJar FormalParameter ReferenceType String baseName FormalParameter ReferenceType File jarFile FormalParameter ReferenceType Hashtable files FormalParameter ReferenceType String publicId BuildException IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator genericJarFile SuperMethodInvocation MemberReference baseName getVendorOutputJarFile StatementExpression SuperMethodInvocation MemberReference baseName MemberReference genericJarFile MemberReference files MemberReference publicId writeJar IfStatement BinaryOperation || MemberReference MethodInvocation MemberReference genericJarFile MemberReference jarFile isRebuildRequired BlockStatement StatementExpression MethodInvocation MemberReference genericJarFile MemberReference jarFile IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal generic jar " MethodInvocation genericJarFile toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genericJarFile delete BlockStatement StatementExpression SuperMethodInvocation MemberReference baseName MemberReference jarFile MemberReference files MemberReference publicId writeJar	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation MethodInvocation MemberReference fs add	0
MethodDeclaration Modifier public ReferenceType AntClassLoader createClassLoader FormalParameter ReferenceType ClassLoader parent FormalParameter ReferenceType path ReturnStatement ClassCreator ReferenceType AntClassLoader MemberReference parent This MemberReference path	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t StatementExpression MethodInvocation MemberReference MemberReference test MemberReference t	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public synchronized ReferenceType Iterator iterator IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation iterator StatementExpression MethodInvocation validate ReturnStatement ClassCreator ReferenceType This MethodInvocation iterator	0
MethodDeclaration Modifier public FormalParameter ReferenceType component StatementExpression Assignment This MemberReference MemberReference component =	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String s ReturnStatement MethodInvocation MemberReference s remove	0
MethodDeclaration Modifier public FormalParameter ReferenceType Section section LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation section getName IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must have a name" StatementExpression MethodInvocation sections MemberReference MemberReference section put IfStatement MethodInvocation ! MemberReference contains BlockStatement StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public ReferenceType String getFiles FormalParameter ReferenceType Project p IfStatement BinaryOperation == MemberReference files Literal null BlockStatement StatementExpression Assignment MemberReference files MethodInvocation This = ReturnStatement MemberReference files	0
MethodDeclaration Modifier public FormalParameter BasicType int width StatementExpression Assignment This MemberReference width MemberReference width =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int length java.io.IOException LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c Literal 0 WhileStatement BinaryOperation && BinaryOperation > MemberReference -- length Literal 0 BinaryOperation != Assignment MemberReference c This MethodInvocation read = Literal - 1 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ start buf Cast BasicType char MemberReference c = StatementExpression MemberReference ++ count ReturnStatement TernaryExpression BinaryOperation && BinaryOperation == MemberReference count Literal 0 BinaryOperation == MemberReference c Literal - 1 Literal - 1 MemberReference count	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator entry ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference entry addElement ReturnStatement MemberReference entry	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MethodInvocation assumeJava11 Literal null Literal	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public testWindowsLineSeparator IOException TryStatement StatementExpression SuperMethodInvocation testWindowsLineSeparator StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation test toString LocalVariableDeclaration ReferenceType VariableDeclarator evt ClassCreator ReferenceType MemberReference id MemberReference MemberReference MemberReference t IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation MemberReference evt StatementExpression MethodInvocation MemberReference evt	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MethodInvocation MemberReference excludeList MemberReference p	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator cache ClassCreator ReferenceType LocalVariableDeclaration ReferenceType File VariableDeclarator cachefile ClassCreator ReferenceType File Literal StatementExpression MethodInvocation cache MemberReference cachefile StatementExpression MethodInvocation MemberReference cache StatementExpression MethodInvocation Literal "Cache file not MethodInvocation cachefile exists assertFalse	0
MethodDeclaration * @see */ Modifier public BasicType int ReturnStatement Literal 0	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object o StatementExpression MethodInvocation MethodInvocation o getClass StatementExpression Assignment This MemberReference proxy MemberReference o =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal "DEPRECATED - The starteam task is deprecated. Use instead." MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType VariableDeclarator s MethodInvocation getServer TryStatement StatementExpression MethodInvocation MemberReference s StatementExpression MethodInvocation s disconnect StatementExpression MethodInvocation BinaryOperation + MemberReference checkedOut Literal " files checked log	1
MethodDeclaration Modifier private IOException LocalVariableDeclaration BasicType byte VariableDeclarator b MethodInvocation getBytes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference b length MemberReference ++ i BlockStatement StatementExpression MethodInvocation stream MemberReference ArraySelector MemberReference i b write	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression SuperMethodInvocation MethodInvocation toString	0
MethodDeclaration Modifier public BasicType boolean isCompatibleWith FormalParameter Modifier final ReferenceType Extension required ReturnStatement BinaryOperation == MemberReference MethodInvocation MemberReference required	0
MethodDeclaration ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName LocalVariableDeclaration ReferenceType File VariableDeclarator jarFile ClassCreator ReferenceType File MethodInvocation getDestDir BinaryOperation + MemberReference baseName MemberReference StatementExpression MethodInvocation BinaryOperation + Literal file name: " MethodInvocation jarFile toString MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference jarFile	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation StatementExpression MethodInvocation MemberReference args assertNotNull StatementExpression MethodInvocation Literal "no Literal 0 MemberReference args length assertEquals LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator arg MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MemberReference Literal " " MemberReference StatementExpression MethodInvocation arg MemberReference setValue StatementExpression Assignment MemberReference args MethodInvocation = StatementExpression MethodInvocation Literal single Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation MemberReference MemberReference ArraySelector Literal 0 args assertEquals StatementExpression MethodInvocation arg Literal StatementExpression Assignment MemberReference args MethodInvocation = StatementExpression MethodInvocation MemberReference args assertNotNull StatementExpression MethodInvocation Literal is but is null" Literal 0 MemberReference args length assertEquals StatementExpression MethodInvocation project Literal Literal setProperty StatementExpression Assignment MemberReference args MethodInvocation = StatementExpression MethodInvocation MemberReference args assertNotNull StatementExpression MethodInvocation Literal is but is Literal 0 MemberReference args length assertEquals StatementExpression MethodInvocation project Literal Literal setProperty StatementExpression Assignment MemberReference args MethodInvocation = StatementExpression MethodInvocation Literal are Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation MemberReference MemberReference ArraySelector Literal 0 args assertEquals StatementExpression MethodInvocation arg MemberReference setLine StatementExpression Assignment MemberReference args MethodInvocation = StatementExpression MethodInvocation Literal at Literal 2 MemberReference args length assertEquals StatementExpression MethodInvocation MemberReference MemberReference ArraySelector Literal 0 args assertEquals StatementExpression MethodInvocation MemberReference MemberReference ArraySelector Literal 1 args assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType JUnitTest suite StatementExpression Assignment MemberReference doc MethodInvocation MethodInvocation = StatementExpression Assignment MemberReference rootElement MethodInvocation doc MemberReference createElement = LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation suite getName StatementExpression MethodInvocation rootElement MemberReference TernaryExpression BinaryOperation == MemberReference n Literal null MemberReference UNKNOWN MemberReference n setAttribute LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation ClassCreator ReferenceType Date MemberReference format StatementExpression MethodInvocation rootElement MemberReference TIMESTAMP MemberReference setAttribute StatementExpression MethodInvocation rootElement MemberReference MethodInvocation setAttribute LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation rootElement MemberReference LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation suite getProperties IfStatement BinaryOperation != MemberReference props Literal null BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props propertyNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation MemberReference MemberReference name setAttribute StatementExpression MethodInvocation MemberReference MethodInvocation props MemberReference name getProperty setAttribute StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal "blah is not a value for this attribute" expectSpecificBuildException	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType VariableDeclarator entry ClassCreator ReferenceType ClassCreator ReferenceType Date Literal Literal < && 3 > StatementExpression MethodInvocation entry Literal & Literal "1.1" addFile StatementExpression MethodInvocation entry Literal de Literal "1.2" addFile LocalVariableDeclaration ReferenceType VariableDeclarator entries ArrayInitializer MemberReference entry LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator output ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference output Literal "UTF-8" StatementExpression MethodInvocation writer MemberReference MemberReference entries LocalVariableDeclaration ReferenceType VariableDeclarator xmlReader MethodInvocation LocalVariableDeclaration ReferenceType InputStream VariableDeclarator input ClassCreator ReferenceType ByteArrayInputStream MethodInvocation output toByteArray StatementExpression MethodInvocation xmlReader ClassCreator ReferenceType StatementExpression MethodInvocation xmlReader ClassCreator ReferenceType InputSource MemberReference input parse	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator s Cast ReferenceType MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for required fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "The type attribute is required" MethodInvocation getMessage assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation == MethodInvocation project Literal "test" getProperty Literal null assertTrue	0
MethodDeclaration Modifier private IOException LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i MethodInvocation getValue params ContinueStatement IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getName params equals BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i MethodInvocation getValue params ContinueStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation ! isAbsolute BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject MethodInvocation getPath = StatementExpression Assignment MemberReference prependReader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference = IfStatement BinaryOperation != MemberReference append Literal null BlockStatement IfStatement MethodInvocation ! append isAbsolute BlockStatement StatementExpression Assignment MemberReference append ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject MethodInvocation append getPath = StatementExpression Assignment MemberReference appendReader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference append =	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal Literal Literal Literal Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal BinaryOperation + Literal MemberReference expectLogContaining	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private StatementExpression This MethodInvocation Literal "At least one MemberReference assertTrue	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference MethodInvocation getLocation StatementExpression Assignment MemberReference ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String xmlFile LocalVariableDeclaration BasicType int VariableDeclarator dotPos MethodInvocation xmlFile Literal '.' lastIndexOf IfStatement BinaryOperation > MemberReference dotPos Literal 0 BlockStatement StatementExpression Assignment MemberReference xmlFile MethodInvocation xmlFile Literal 0 MemberReference dotPos substring = ReturnStatement ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference xmlFile MemberReference	1
MethodDeclaration Modifier private FormalParameter ReferenceType String IfStatement BinaryOperation != This MemberReference Literal null BlockStatement ThrowStatement MethodInvocation MemberReference StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file	0
MethodDeclaration Modifier public parsePropertyString FormalParameter ReferenceType String value FormalParameter ReferenceType Vector fragments FormalParameter ReferenceType Vector propertyRefs BuildException StatementExpression MethodInvocation MemberReference value MemberReference fragments MemberReference propertyRefs parsePropertyStringDefault	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dir BuildException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal doesn't support the dir " Literal	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String dir StatementExpression Assignment MemberReference MethodInvocation FileUtils MemberReference dir =	0
MethodDeclaration Modifier public verifySettings StatementExpression MethodInvocation IfStatement BinaryOperation == MemberReference cache Literal null BlockStatement StatementExpression MethodInvocation Literal "Cache must be set." setError IfStatement BinaryOperation == MemberReference algorithm Literal null BlockStatement StatementExpression MethodInvocation Literal must be set." setError IfStatement MethodInvocation ! cache isValid BlockStatement StatementExpression MethodInvocation Literal "Cache must be proper setError IfStatement MethodInvocation ! algorithm isValid BlockStatement StatementExpression MethodInvocation Literal must be proper setError	1
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MethodInvocation hasMoreElements BlockStatement ReturnStatement MemberReference ArraySelector MemberReference index MethodInvocation nextElement ThrowStatement ClassCreator ReferenceType NoSuchElementException	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Vector errorFilterChains StatementExpression Assignment This MemberReference errorFilterChains MemberReference errorFilterChains =	1
MethodDeclaration Modifier protected ReferenceType BuildException FormalParameter ReferenceType String what FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MethodInvocation getProject getComponentHelper LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation helper MemberReference name MemberReference what ReturnStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	0
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation file MethodInvocation toLowerCase toString ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation filename Literal ".exe" endsWith MethodInvocation filename Literal endsWith MethodInvocation filename Literal endsWith	1
MethodDeclaration Modifier public ReferenceType String getVersion ReturnStatement MemberReference	0
MethodDeclaration Modifier public ThrowStatement ClassCreator ReferenceType RuntimeException Literal	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference targetType Literal null = StatementExpression Assignment MemberReference srcDir Literal null = StatementExpression Assignment MemberReference listing Literal false = StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference debug Literal true = StatementExpression Assignment MemberReference outputFile Literal null = StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier public static ReferenceType Object getField FormalParameter ReferenceType Object obj FormalParameter ReferenceType String fieldName BuildException TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation obj MethodInvocation MemberReference fieldName getDeclaredField getClass StatementExpression MethodInvocation field Literal true setAccessible ReturnStatement MethodInvocation field MemberReference obj get CatchClause CatchClauseParameter Exception t StatementExpression MethodInvocation MemberReference t throwBuildException ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + MethodInvocation location toString MethodInvocation getMessage	1
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement MemberReference inputEncoding	0
MethodDeclaration Modifier public BasicType boolean isUpToDate FormalParameter ReferenceType File source FormalParameter ReferenceType File dest FormalParameter BasicType long granularity IfStatement MethodInvocation ! dest exists BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation source lastModified LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation dest lastModified ReturnStatement MethodInvocation MemberReference MemberReference MemberReference granularity isUpToDate	0
MethodDeclaration Modifier public ReferenceType InetAddress UnknownHostException ReturnStatement MethodInvocation InetAddress	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation line Literal 0 charAt = IfStatement BinaryOperation == MethodInvocation line length Literal 1 BlockStatement StatementExpression Assignment MemberReference line Literal null = BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line Literal 1 substring = BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation contains size ForStatement ForControl Assignment MemberReference line MethodInvocation readLine = BinaryOperation != MemberReference line Literal null Assignment MemberReference line MethodInvocation readLine = BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator matches Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && MemberReference matches BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation contains MemberReference i elementAt StatementExpression Assignment MemberReference matches BinaryOperation >= MethodInvocation line MemberReference indexOf Literal 0 = IfStatement BinaryOperation MemberReference matches MethodInvocation BlockStatement BreakStatement IfStatement BinaryOperation != MemberReference line Literal null BlockStatement ReturnStatement MethodInvocation read ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected setUp Exception StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public AssertStatement BinaryOperation == BinaryOperation + Literal 2 Literal 2 Literal 4	1
MethodDeclaration Modifier public ReferenceType String getVariables BuildException LocalVariableDeclaration ReferenceType List VariableDeclarator definitions ClassCreator ReferenceType LinkedList LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator list MethodInvocation definitions listIterator StatementExpression MethodInvocation MemberReference list addDefinitionsToList IfStatement BinaryOperation == MethodInvocation definitions size Literal 0 BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement Cast ReferenceType String MethodInvocation definitions ArrayCreator ReferenceType String MethodInvocation definitions size toArray	1
MethodDeclaration Modifier public ThrowStatement ClassCreator ReferenceType RuntimeException Literal "error on	0
MethodDeclaration Modifier private StatementExpression MethodInvocation clear StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType Parameter createParam FormalParameter ReferenceType String name FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType Parameter VariableDeclarator p ClassCreator ReferenceType Parameter StatementExpression MethodInvocation p MemberReference name setName StatementExpression MethodInvocation p MemberReference value setValue ReturnStatement MemberReference p	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment This MemberReference includes Literal null = BlockStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p ArrayCreator ReferenceType Pattern MemberReference includes length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i p ClassCreator ReferenceType Pattern = StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i includes p StatementExpression MethodInvocation MemberReference p setIncludes	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "\n" LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation entries size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "[" MemberReference i Literal "] = " MethodInvocation MemberReference i getEntry Literal "\n" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix FormalParameter ReferenceType String uri StatementExpression MethodInvocation context MemberReference prefix MemberReference uri	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType address IfStatement BinaryOperation != This MemberReference from Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal only be from one StatementExpression Assignment This MemberReference from MemberReference address =	0
MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal retrieved line \"" MemberReference line Literal "\"" MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference value MethodInvocation Integer MemberReference line parseInt = StatementExpression MethodInvocation MemberReference property BinaryOperation + Literal "" MemberReference value setProperty CatchClause CatchClauseParameter NumberFormatException nfe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal " Literal "Could not retrieve counter	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH BinaryOperation + MemberReference MSVSS MemberReference MemberReference MSVSS BinaryOperation + MemberReference MSVSS MemberReference BinaryOperation + MemberReference MSVSS MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME Literal "," MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference VSS_USERNAME Literal "," MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference commandline MethodInvocation = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement This MemberReference prefix	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The " MethodInvocation getTaskName Literal " task doesn't support the encoding" Literal " attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public IfStatement BinaryOperation >= MethodInvocation JavaEnvUtils Literal 15 BlockStatement StatementExpression MethodInvocation Literal Literal "no at expectBuildException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType implementation StatementExpression Assignment This MemberReference implementation MemberReference implementation =	0
MethodDeclaration Modifier public addRootClass FormalParameter ReferenceType String className IfStatement BinaryOperation == MemberReference className Literal null BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference className contains BlockStatement StatementExpression MethodInvocation MemberReference className addElement	1
MethodDeclaration Modifier public BasicType boolean hasMoreTokens IfStatement BinaryOperation != MemberReference lookahead Literal null BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation tokenizer hasMoreTokens	0
MethodDeclaration Modifier public FormalParameter ReferenceType ref IfStatement BinaryOperation || BinaryOperation > MethodInvocation size Literal 0 BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference ref	1
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter BasicType boolean filtering IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile TernaryExpression MemberReference filtering MemberReference globalFilters Literal null copyFile	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object rhs IfStatement BinaryOperation || BinaryOperation == MemberReference rhs Literal null BinaryOperation != MethodInvocation rhs getClass MethodInvocation getClass BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference rhs This BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType Manifest VariableDeclarator rhsManifest Cast ReferenceType Manifest MemberReference rhs IfStatement BinaryOperation == MemberReference manifestVersion Literal null BlockStatement IfStatement BinaryOperation != MemberReference rhsManifest manifestVersion Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! manifestVersion MemberReference rhsManifest manifestVersion equals BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! mainSection MemberReference rhsManifest mainSection equals BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation sections MemberReference rhsManifest sections equals	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference P4View Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No view specified to StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-s " MemberReference toChange Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier private ReferenceType String getAttributeValue FormalParameter ReferenceType Node attributeNode LocalVariableDeclaration ReferenceType String VariableDeclarator nodeValue MethodInvocation attributeNode MethodInvocation trim getNodeValue IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attributeName MethodInvocation attributeNode getNodeName StatementExpression Assignment MemberReference nodeValue MethodInvocation MethodInvocation MemberReference nodeValue replaceProperties getProject = IfStatement MethodInvocation attributeName MemberReference equals BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MemberReference nodeValue ReturnStatement MethodInvocation f getPath IfStatement MethodInvocation attributeName MemberReference REF_ID equals BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ref MethodInvocation MethodInvocation MemberReference nodeValue getReference getProject IfStatement BinaryOperation != MemberReference ref Literal null BlockStatement ReturnStatement MethodInvocation ref toString ReturnStatement MemberReference nodeValue	1
MethodDeclaration Modifier private FormalParameter ReferenceType ZipOutputStream zOut IOException LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference baos Literal "UTF8" StatementExpression MethodInvocation writer Literal println StatementExpression MethodInvocation writer println StatementExpression MethodInvocation writer MethodInvocation zipFile getName println StatementExpression MethodInvocation ClassCreator ReferenceType ArrayList MethodInvocation keySet MemberReference rootEntries MemberReference writer writeIndexLikeList StatementExpression MethodInvocation writer println IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf MethodInvocation LocalVariableDeclaration ReferenceType Manifest ReferenceType Attribute VariableDeclarator classpath MethodInvocation mf MethodInvocation MemberReference Manifest ATTRIBUTE_CLASSPATH getAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator cpEntries Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference classpath Literal null BinaryOperation != MethodInvocation classpath getValue Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MethodInvocation classpath getValue Literal " " StatementExpression Assignment MemberReference cpEntries ArrayCreator ReferenceType String MethodInvocation tok countTokens = LocalVariableDeclaration BasicType int VariableDeclarator c Literal 0 WhileStatement MethodInvocation tok hasMoreTokens BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ c cpEntries MethodInvocation tok nextToken = LocalVariableDeclaration ReferenceType String VariableDeclarator indexJarEntries MethodInvocation list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference indexJarEntries length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MemberReference ArraySelector MemberReference i indexJarEntries MemberReference cpEntries IfStatement BinaryOperation != MemberReference name Literal null BlockStatement LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator dirs ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator files ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i indexJarEntries MemberReference dirs MemberReference files grabFilesAndDirs IfStatement BinaryOperation > BinaryOperation + MethodInvocation dirs size MethodInvocation files size Literal 0 BlockStatement StatementExpression MethodInvocation writer MemberReference name println StatementExpression MethodInvocation MemberReference dirs MemberReference files MemberReference writer writeIndexLikeList StatementExpression MethodInvocation writer println StatementExpression MethodInvocation writer flush LocalVariableDeclaration ReferenceType ByteArrayInputStream VariableDeclarator bais ClassCreator ReferenceType ByteArrayInputStream MethodInvocation baos toByteArray StatementExpression SuperMethodInvocation MemberReference bais MemberReference zOut MemberReference MethodInvocation System currentTimeMillis Literal null MemberReference ZipFileSet DEFAULT_FILE_MODE zipFile	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal getProperty getProject assertNotNull StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal getProperty MethodInvocation Literal startsWith getProject assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected BasicType int run FormalParameter ReferenceType Commandline cmd FormalParameter ReferenceType handler TryStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference handler StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun StatementExpression MethodInvocation exe MethodInvocation MethodInvocation getProject setWorkingDirectory StatementExpression MethodInvocation exe MethodInvocation cmd getCommandline setCommandline ReturnStatement MethodInvocation exe execute CatchClause CatchClauseParameter java.io.IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	0
MethodDeclaration * add an * @param tokenizer the tokenizer to only one */ Modifier public add FormalParameter ReferenceType tokenizer IfStatement BinaryOperation != This MemberReference tokenizer Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one tokenizer StatementExpression Assignment This MemberReference tokenizer MemberReference tokenizer =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation && BinaryOperation == MemberReference linkFlag MemberReference MethodInvocation name MethodInvocation MemberReference equals toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set add	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference fail	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean isDirectory ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MethodInvocation MethodInvocation isDirectory getNotNullFile	1
MethodDeclaration Modifier protected BasicType boolean ReturnStatement BinaryOperation && BinaryOperation != Literal null This MemberReference This MemberReference MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression Assignment MemberReference MethodInvocation r getRefId =	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation BinaryOperation + MethodInvocation getTaskName Literal ": condition was MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType r LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation r getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType ResourceCollection BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation r getRefId Literal " doesn\'t a StatementExpression MethodInvocation Cast ReferenceType ResourceCollection MemberReference o add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter BasicType short s StatementExpression MethodInvocation Literal 18 MemberReference s assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Document doc FormalParameter ReferenceType File file IOException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out Literal null LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator wri Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference file = StatementExpression Assignment MemberReference wri ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference out Literal "UTF8" = StatementExpression MethodInvocation wri Literal "<?xml write StatementExpression ClassCreator MethodInvocation MethodInvocation doc MemberReference wri Literal 0 Literal " " write ReferenceType StatementExpression MethodInvocation wri flush IfStatement MethodInvocation wri checkError BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "Error while DOM StatementExpression MethodInvocation FileUtils MemberReference wri close StatementExpression MethodInvocation FileUtils MemberReference out close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "" Literal expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Should not be to set both classname AND expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean s StatementExpression Assignment This MemberReference fork MemberReference s =	0
MethodDeclaration Modifier public setItem FormalParameter ReferenceType String item StatementExpression Assignment This MemberReference item MemberReference item =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Token token StatementExpression MethodInvocation hash MethodInvocation token getKey MethodInvocation token getValue put	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType ClassLoader LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator ret MethodInvocation MethodInvocation getClassLoader getClass WhileStatement BinaryOperation && BinaryOperation != MemberReference ret Literal null BinaryOperation != MethodInvocation ret getParent Literal null BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation ret getParent = ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public setText FormalParameter ReferenceType String contains StatementExpression Assignment This MemberReference contains MemberReference contains =	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment MemberReference includes ArrayCreator ReferenceType String Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 includes Literal "**" = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArrayCreator ReferenceType String Literal 0 = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cwd MethodInvocation ftp StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation ftp MemberReference cwd changeWorkingDirectory CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to " MemberReference e	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference	0
MethodDeclaration Modifier private writeBlock IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal blkIdx = " This MemberReference currBlkIdx println IfStatement BinaryOperation == This MemberReference outStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "writing to an input buffer" StatementExpression This MemberReference outStream MethodInvocation This MemberReference blockBuffer Literal 0 This MemberReference blockSize write StatementExpression This MemberReference outStream MethodInvocation flush StatementExpression Assignment This MemberReference currRecIdx Literal 0 = StatementExpression This ++ MemberReference currBlkIdx	0
MethodDeclaration BasicType boolean process IOException StatementExpression MethodInvocation writer MethodInvocation toString write StatementExpression MethodInvocation Literal 0 MethodInvocation length delete ReturnStatement Literal false	0
MethodDeclaration ReferenceType String ReturnStatement MethodInvocation getValue	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation MemberReference test Cast ReferenceType Throwable MemberReference t	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement MethodInvocation MemberReference IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference fileSets Literal null BlockStatement ThrowStatement MethodInvocation MemberReference Literal "one or more TryStatement IfStatement BinaryOperation && MemberReference MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference MemberReference download IfStatement BinaryOperation && MemberReference ! MemberReference BlockStatement IfStatement BinaryOperation != MemberReference fileSets Literal null BlockStatement StatementExpression MethodInvocation MemberReference fileSets MemberReference BlockStatement StatementExpression MethodInvocation MemberReference MemberReference IfStatement BinaryOperation && MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Copying from a remote server to a remote server is not BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal and attributes " Literal "must have syntax like the following: " Literal CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation getFailonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Caught exception: " MethodInvocation e getMessage MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public addDifferent FormalParameter ReferenceType DifferentSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier private FormalParameter ReferenceType File localFile FormalParameter BasicType long filesize FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType InputStream in IOException LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte MemberReference BUFFER_SIZE StatementExpression MethodInvocation MemberReference out LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference localFile LocalVariableDeclaration BasicType int VariableDeclarator length LocalVariableDeclaration BasicType long VariableDeclarator Literal 0 LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType boolean VariableDeclarator trackProgress BinaryOperation && MethodInvocation BinaryOperation > MemberReference filesize Literal LocalVariableDeclaration BasicType long VariableDeclarator MemberReference filesize LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 TryStatement WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference length MethodInvocation in MemberReference buf Literal 0 TernaryExpression BinaryOperation < MemberReference BUFFER_SIZE MemberReference filesize MemberReference BUFFER_SIZE Cast BasicType int MemberReference filesize read = IfStatement BinaryOperation < MemberReference length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType EOFException Literal "Unexpected end of stream." StatementExpression MethodInvocation fos MemberReference buf Literal 0 MemberReference length write StatementExpression Assignment MemberReference filesize MemberReference length -= StatementExpression Assignment MemberReference MemberReference length += IfStatement BinaryOperation == MemberReference filesize Literal 0 BlockStatement BreakStatement IfStatement MemberReference trackProgress BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference MemberReference trackProgress = LocalVariableDeclaration BasicType long VariableDeclarator endTime MethodInvocation System currentTimeMillis StatementExpression MethodInvocation MemberReference startTime MemberReference endTime MemberReference StatementExpression MethodInvocation fos flush StatementExpression MethodInvocation fos close	1
MethodDeclaration Modifier public parseFromLocalFileData FormalParameter BasicType byte data FormalParameter BasicType int offset FormalParameter BasicType int length LocalVariableDeclaration BasicType byte VariableDeclarator tmp ArrayCreator BasicType byte MemberReference length StatementExpression MethodInvocation System MemberReference data MemberReference offset MemberReference tmp Literal 0 MemberReference length arraycopy StatementExpression MethodInvocation MemberReference tmp setLocalFileDataData	1
MethodDeclaration Modifier public FormalParameter ReferenceType type IfStatement Literal MethodInvocation MethodInvocation type getValue equals "xml" BlockStatement StatementExpression MethodInvocation MemberReference setClassname BlockStatement IfStatement Literal MethodInvocation MethodInvocation type getValue equals BlockStatement StatementExpression MethodInvocation MemberReference setClassname BlockStatement StatementExpression MethodInvocation MemberReference setClassname	0
MethodDeclaration Modifier public FormalParameter BasicType int value StatementExpression Assignment MemberReference port MemberReference value =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation	1
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference verbosity TernaryExpression MemberReference MemberReference Project MSG_INFO MemberReference Project MSG_VERBOSE =	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceCollection c BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation rc MemberReference c add StatementExpression MethodInvocation This StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation Literal false setChecked	1
MethodDeclaration Modifier public FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier public static ReferenceType parse FormalParameter BasicType byte data ZipException LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 WhileStatement BinaryOperation <= MemberReference start BinaryOperation - MemberReference data length Literal 4 BlockStatement LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator ClassCreator ReferenceType ZipShort MemberReference data MemberReference start LocalVariableDeclaration BasicType int VariableDeclarator length ClassCreator MethodInvocation getValue ReferenceType ZipShort MemberReference data BinaryOperation + MemberReference start Literal 2 IfStatement BinaryOperation > BinaryOperation + BinaryOperation + MemberReference start Literal 4 MemberReference length MemberReference data length BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + BinaryOperation + Literal "data starting at " MemberReference start Literal " is in unknown TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator ze MethodInvocation MemberReference StatementExpression MethodInvocation ze MemberReference data BinaryOperation + MemberReference start Literal 4 MemberReference length parseFromLocalFileData StatementExpression MethodInvocation v MemberReference ze addElement CatchClause CatchClauseParameter InstantiationException ie ThrowStatement ClassCreator ReferenceType ZipException MethodInvocation ie getMessage CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement ClassCreator ReferenceType ZipException MethodInvocation iae getMessage StatementExpression Assignment MemberReference start BinaryOperation + MemberReference length Literal 4 += IfStatement BinaryOperation != MemberReference start MemberReference data length BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + BinaryOperation + Literal "data starting at " MemberReference start Literal " is in unknown LocalVariableDeclaration ReferenceType VariableDeclarator result ArrayCreator ReferenceType MethodInvocation v size StatementExpression MethodInvocation v MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType int fork FormalParameter ReferenceType pc BuildException LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator cmdl ClassCreator ReferenceType CommandlineJava StatementExpression MethodInvocation cmdl MethodInvocation getExecutable setClassname LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation cmdl MethodInvocation MemberReference ArraySelector MemberReference i args setValue createArgument IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation cmdl MethodInvocation MemberReference classpath append MethodInvocation pc getProject createClasspath IfStatement BinaryOperation != MemberReference sysProperties Literal null BlockStatement StatementExpression MethodInvocation cmdl MemberReference sysProperties LocalVariableDeclaration ReferenceType VariableDeclarator redirector ClassCreator ReferenceType MemberReference pc LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MethodInvocation redirector createHandler TernaryExpression BinaryOperation == MemberReference timeout Literal null Literal null ClassCreator ReferenceType MethodInvocation timeout longValue StatementExpression MethodInvocation exe MethodInvocation pc getProject setAntRun IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement StatementExpression MethodInvocation MemberReference exe MethodInvocation cmdl getCommandline BlockStatement StatementExpression MethodInvocation exe MethodInvocation cmdl getCommandline setCommandline TryStatement LocalVariableDeclaration BasicType int VariableDeclarator rc MethodInvocation exe execute StatementExpression MethodInvocation redirector complete ReturnStatement MemberReference rc CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression Assignment MemberReference timedOut MethodInvocation exe killedProcess =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal of language attribute not Literal a language attribute" expectBuildExceptionContaining	0
MethodDeclaration Modifier public addAnd FormalParameter ReferenceType AndSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH MemberReference MSVSS BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference MemberReference MSVSS MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME Literal "," MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MethodInvocation project MethodInvocation getAbsolutePath MemberReference File separator MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator vssHistory ClassCreator ReferenceType StatementExpression MethodInvocation vssHistory MemberReference project setProject StatementExpression MethodInvocation vssHistory BinaryOperation + BinaryOperation + MemberReference VSS_USERNAME Literal "," MemberReference StatementExpression MethodInvocation vssHistory MemberReference StatementExpression MethodInvocation vssHistory BinaryOperation + MemberReference Literal StatementExpression MethodInvocation vssHistory MemberReference StatementExpression MethodInvocation vssHistory Literal false StatementExpression MethodInvocation vssHistory ClassCreator ReferenceType File MethodInvocation project MethodInvocation getAbsolutePath MemberReference StatementExpression Assignment MemberReference commandline MethodInvocation vssHistory = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration * get block size */ Modifier public BasicType int ReturnStatement MemberReference blockSize	0
MethodDeclaration Modifier public ReferenceType String getFullpath ReturnStatement MemberReference fullpath	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String text StatementExpression MethodInvocation reg Literal StatementExpression MethodInvocation Literal "^starttest in default mode" MethodInvocation ! reg MemberReference text matches assertTrue StatementExpression MethodInvocation Literal "^starttest in single line mode" MethodInvocation ! reg MemberReference text MemberReference RegexpMatcher matches assertTrue StatementExpression MethodInvocation Literal "^starttest in multi line mode" MethodInvocation reg MemberReference text MemberReference RegexpMatcher matches assertTrue	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Vector inputFilterChains StatementExpression Assignment This MemberReference inputFilterChains MemberReference inputFilterChains =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean filtering StatementExpression Assignment This MemberReference filtering MemberReference filtering =	0
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String ddPrefix StatementExpression Assignment MemberReference MethodInvocation = LocalVariableDeclaration ReferenceType File VariableDeclarator jonasDD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig MemberReference IfStatement MethodInvocation jonasDD exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference MemberReference jonasDD put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate the It was expected to be in: " MethodInvocation jonasDD getPath Literal "." MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable parentWrapper IfStatement BinaryOperation < MethodInvocation wStack size Literal 2 BlockStatement ReturnStatement Literal null ReturnStatement Cast ReferenceType RuntimeConfigurable MethodInvocation wStack BinaryOperation - MethodInvocation wStack size Literal 2 elementAt	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String resolvemode LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 0 BinaryOperation < MemberReference counter MemberReference length MemberReference ++ counter BlockStatement IfStatement MethodInvocation resolvemode MemberReference ArraySelector MemberReference counter equals BlockStatement StatementExpression Assignment MemberReference found Literal true = BreakStatement IfStatement MemberReference ! found BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal value for resolve mode" StatementExpression Assignment This MemberReference resolvemode MemberReference resolvemode =	1
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference params	0
MethodDeclaration * @see */ Modifier public ReferenceType String getIncludedDirectories ReturnStatement ArrayCreator ReferenceType String Literal 0	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal "!! is deprecated. Use Filter + instead. !!" log StatementExpression MethodInvocation Literal log IfStatement BinaryOperation || BinaryOperation == MemberReference source Literal null BinaryOperation == MemberReference dest Literal null BlockStatement StatementExpression MethodInvocation Literal "Source and must not be null" log ReturnStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator br Literal null LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator bw Literal null TryStatement StatementExpression Assignment MemberReference br ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference source = StatementExpression MethodInvocation dest delete StatementExpression Assignment MemberReference bw ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType FileWriter MemberReference dest = LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator newline Literal null StatementExpression Assignment MemberReference line MethodInvocation br readLine = WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation line length Literal 0 BlockStatement StatementExpression MethodInvocation bw newLine BlockStatement StatementExpression Assignment MemberReference newline MethodInvocation MemberReference line MemberReference replacements replace = StatementExpression MethodInvocation bw MemberReference newline write StatementExpression MethodInvocation bw newLine StatementExpression Assignment MemberReference line MethodInvocation br readLine = StatementExpression MethodInvocation bw flush CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation ioe printStackTrace IfStatement BinaryOperation != MemberReference bw Literal null BlockStatement TryStatement StatementExpression MethodInvocation bw close CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation != MemberReference br Literal null BlockStatement TryStatement StatementExpression MethodInvocation br close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier final protected writeOut FormalParameter BasicType byte data FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation != MemberReference raf Literal null BlockStatement StatementExpression MethodInvocation raf MemberReference data MemberReference offset MemberReference length write BlockStatement StatementExpression MethodInvocation out MemberReference data MemberReference offset MemberReference length write	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String displayName StatementExpression Assignment This MemberReference displayName MemberReference displayName =	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintStream output StatementExpression Assignment This MemberReference out ClassCreator ReferenceType PrintStream MemberReference output Literal true =	1
MethodDeclaration Modifier public final FormalParameter ReferenceType String IfStatement MethodInvocation MemberReference SOSCmd startsWith BlockStatement StatementExpression Assignment MemberReference MemberReference = BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference SOSCmd MemberReference =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix StatementExpression MethodInvocation Literal MemberReference prefix StatementExpression Assignment This MemberReference prefix MemberReference prefix =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType File srcFile StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference srcFile	0
MethodDeclaration Modifier final protected writeOut FormalParameter BasicType byte data IOException StatementExpression MethodInvocation MemberReference data Literal 0 MemberReference data length writeOut	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "Files MethodInvocation FILE_UTILS ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal assertTrue	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal 0 write StatementExpression MethodInvocation close StatementExpression MethodInvocation BinaryOperation + MemberReference f Literal " has been MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier private static FormalParameter ReferenceType String line BuildException LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator fe ClassCreator ReferenceType FormatterElement LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation line Literal ',' indexOf IfStatement BinaryOperation == MemberReference pos Literal - 1 BlockStatement StatementExpression MethodInvocation fe MemberReference line setClassname StatementExpression MethodInvocation fe Literal false BlockStatement StatementExpression MethodInvocation fe MethodInvocation line Literal 0 MemberReference pos substring setClassname StatementExpression MethodInvocation fe Literal true IfStatement MemberReference ! multipleTests BlockStatement StatementExpression MethodInvocation fe ClassCreator ReferenceType File MethodInvocation line BinaryOperation + MemberReference pos Literal 1 substring BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation line MemberReference indexOf IfStatement BinaryOperation > MemberReference Literal - 1 BlockStatement StatementExpression MethodInvocation fe MethodInvocation line BinaryOperation + MemberReference MethodInvocation length substring StatementExpression MethodInvocation fromCmdLine MemberReference fe addElement	1
MethodDeclaration Modifier protected FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dir FormalParameter ReferenceType String filename IOException BuildException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator instream Literal null TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation MethodInvocation ClassCreator MethodInvocation getPath ReferenceType File MemberReference dir MemberReference filename getProject IfStatement BinaryOperation && MemberReference MethodInvocation MemberReference ftp MemberReference file MethodInvocation MemberReference filename isUpToDate BlockStatement ReturnStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation file getAbsolutePath log StatementExpression Assignment MemberReference instream ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference file = StatementExpression MethodInvocation MemberReference ftp MemberReference filename StatementExpression MethodInvocation ftp MethodInvocation MemberReference filename MemberReference instream storeFile LocalVariableDeclaration BasicType boolean VariableDeclarator success MethodInvocation FTPReply MethodInvocation ftp getReplyCode isPositiveCompletion IfStatement MemberReference ! success BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + Literal "could not put file: " MethodInvocation ftp getReplyString IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference Project MSG_WARN log StatementExpression MemberReference ++ skipped BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference s BlockStatement IfStatement BinaryOperation != MemberReference chmod Literal null BlockStatement StatementExpression MethodInvocation MemberReference ftp BinaryOperation + BinaryOperation + BinaryOperation + Literal "chmod " MemberReference chmod Literal " " MethodInvocation MemberReference filename StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MethodInvocation file getAbsolutePath Literal " to " MemberReference server MemberReference Project MSG_VERBOSE log StatementExpression MemberReference ++ transferred IfStatement BinaryOperation != MemberReference instream Literal null BlockStatement TryStatement StatementExpression MethodInvocation instream close CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier protected StatementExpression Assignment MemberReference xmlReader MethodInvocation = StatementExpression MethodInvocation xmlReader MethodInvocation setEntityResolver StatementExpression MethodInvocation xmlReader MemberReference setErrorHandler IfStatement MethodInvocation ! BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference XmlConstants Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator feature Cast ReferenceType Attribute MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation MethodInvocation feature getName MethodInvocation feature getValue ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Property VariableDeclarator prop Cast ReferenceType Property MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation MethodInvocation prop getName MethodInvocation prop getValue setProperty	0
MethodDeclaration Modifier protected IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation tearDown StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected doit FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os Exception StatementExpression ClassCreator MethodInvocation MemberReference is MemberReference os encode ReferenceType MethodInvocation MethodInvocation getName	0
MethodDeclaration Modifier private static add FormalParameter ReferenceType File baseDir FormalParameter ReferenceType String names FormalParameter ReferenceType Map m IfStatement BinaryOperation != MemberReference names Literal null BlockStatement StatementExpression Assignment MemberReference baseDir MethodInvocation MemberReference baseDir = LocalVariableDeclaration ReferenceType List VariableDeclarator l Cast ReferenceType List MethodInvocation m MemberReference baseDir get IfStatement BinaryOperation == MemberReference l Literal null BlockStatement StatementExpression Assignment MemberReference l ClassCreator ReferenceType ArrayList MemberReference names length = StatementExpression MethodInvocation m MemberReference baseDir MemberReference l put StatementExpression MethodInvocation l MethodInvocation MemberReference names asList addAll	1
MethodDeclaration BasicType boolean ReturnStatement Literal true	1
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation || BinaryOperation || BinaryOperation > MethodInvocation event getPriority MemberReference msgOutputLevel BinaryOperation == Literal null MethodInvocation event getMessage Literal MethodInvocation MethodInvocation event MethodInvocation trim getMessage equals "" BlockStatement ReturnStatement IfStatement BinaryOperation != Literal null MemberReference targetName BlockStatement StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference StringUtils LINE_SEP MemberReference targetName Literal ":" println StatementExpression Assignment MemberReference targetName Literal null = StatementExpression SuperMethodInvocation MemberReference event messageLogged	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation stream flush StatementExpression MethodInvocation stream	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator reg Cast ReferenceType MethodInvocation StatementExpression MethodInvocation reg MemberReference pattern StatementExpression MethodInvocation MethodInvocation reg MemberReference test matches assertTrue StatementExpression MethodInvocation Literal MethodInvocation reg MemberReference test Literal MemberReference MATCH_DEFAULT assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Invalid file" expectBuildException	0
MethodDeclaration Modifier private BuildException IfStatement BinaryOperation == MemberReference config srcDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The srcDir attribute must be specified" IfStatement BinaryOperation == MemberReference config descriptorDir Literal null BlockStatement StatementExpression Assignment MemberReference config descriptorDir MemberReference config srcDir = IfStatement BinaryOperation == MemberReference config Literal null BlockStatement StatementExpression Assignment MemberReference config ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference setValue IfStatement BinaryOperation && MethodInvocation MethodInvocation MemberReference equals getValue BinaryOperation == MemberReference config Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The attribute must " Literal "be specified with the	1
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String exec FormalParameter BasicType boolean IfStatement MemberReference ! BlockStatement ReturnStatement MemberReference exec LocalVariableDeclaration ReferenceType File VariableDeclarator executableFile MethodInvocation MethodInvocation MemberReference exec getProject IfStatement MethodInvocation executableFile exists BlockStatement ReturnStatement MethodInvocation executableFile getAbsolutePath IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement StatementExpression Assignment MemberReference executableFile MethodInvocation FILE_UTILS MemberReference dir MemberReference exec = IfStatement MethodInvocation executableFile exists BlockStatement ReturnStatement MethodInvocation executableFile getAbsolutePath IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator environment MethodInvocation env getVariables IfStatement BinaryOperation != MemberReference environment Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference environment length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i environment BlockStatement StatementExpression Assignment MemberReference p ClassCreator ReferenceType MethodInvocation getProject MemberReference ArraySelector MemberReference i MethodInvocation Literal 5 substring environment = BreakStatement IfStatement BinaryOperation == MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator MethodInvocation Execute getProcEnvironment LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation MemberReference line BlockStatement StatementExpression Assignment MemberReference p ClassCreator ReferenceType MethodInvocation getProject MethodInvocation line Literal 5 substring = BreakStatement IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation p list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirs length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference executableFile MethodInvocation FILE_UTILS ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i dirs MemberReference exec = IfStatement MethodInvocation executableFile exists BlockStatement ReturnStatement MethodInvocation executableFile getAbsolutePath ReturnStatement MemberReference exec	1
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement Cast ReferenceType MethodInvocation	0
MethodDeclaration Modifier protected visit FormalParameter ReferenceType Folder starteamFolder FormalParameter ReferenceType java ReferenceType io ReferenceType File targetFolder BuildException TryStatement IfStatement BinaryOperation != Literal null MethodInvocation BlockStatement StatementExpression MethodInvocation starteamFolder MethodInvocation targetFolder getAbsolutePath LocalVariableDeclaration ReferenceType Folder VariableDeclarator subFolders MethodInvocation starteamFolder getSubFolders LocalVariableDeclaration ReferenceType Item VariableDeclarator files MethodInvocation starteamFolder MethodInvocation MemberReference FILE getItems LocalVariableDeclaration ReferenceType UnmatchedFileMap VariableDeclarator ufm ClassCreator MethodInvocation MethodInvocation targetFolder getAbsoluteFile MemberReference starteamFolder init ReferenceType StatementExpression MethodInvocation Literal "" log StatementExpression MethodInvocation BinaryOperation + Literal folder " MethodInvocation starteamFolder log StatementExpression MethodInvocation BinaryOperation + Literal " against local folder " MethodInvocation targetFolder getAbsolutePath log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator eachFile Cast ReferenceType File MemberReference ArraySelector MemberReference i files LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation eachFile getName LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator localFile ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MemberReference filename StatementExpression MethodInvocation ufm MemberReference localFile removeControlledItem IfStatement MethodInvocation ! MemberReference filename shouldProcess BlockStatement ContinueStatement StatementExpression MethodInvocation MemberReference eachFile MemberReference localFile list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference subFolders length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator targetSubfolder ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference targetFolder MemberReference ArraySelector MemberReference i MethodInvocation getName subFolders StatementExpression MethodInvocation ufm MemberReference targetSubfolder removeControlledItem IfStatement MethodInvocation isRecursive BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i subFolders MemberReference targetSubfolder visit IfStatement This MemberReference BlockStatement StatementExpression MethodInvocation ufm processUncontrolledItems CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier private ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator filter Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation filter flush	0
MethodDeclaration Modifier public validate IfStatement BinaryOperation != MemberReference file Literal null BlockStatement IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MethodInvocation file toString IfStatement MethodInvocation file isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MethodInvocation file toString IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null BinaryOperation != MemberReference url Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MemberReference url Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType File file FormalParameter ReferenceType PrintStream out IOException IfStatement BinaryOperation || MethodInvocation ! file exists MethodInvocation ! file canRead BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "File \"" MethodInvocation file getName Literal "\" does not exist or is not " Literal LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator finstr ClassCreator ReferenceType FileInputStream MemberReference file TryStatement LocalVariableDeclaration ReferenceType BufferedInputStream VariableDeclarator in ClassCreator ReferenceType BufferedInputStream MemberReference finstr LocalVariableDeclaration ReferenceType VariableDeclarator encoder ClassCreator ReferenceType MethodInvocation file getName StatementExpression MethodInvocation encoder MemberReference in MemberReference out encode StatementExpression MethodInvocation finstr close	1
MethodDeclaration Modifier public IfStatement BinaryOperation > MethodInvocation wStack size Literal 0 BlockStatement StatementExpression MethodInvocation wStack BinaryOperation - MethodInvocation wStack size Literal 1 removeElementAt	1
MethodDeclaration Modifier public FormalParameter ReferenceType String objselect StatementExpression MethodInvocation MemberReference objselect	1
MethodDeclaration Modifier public BasicType boolean isValid ReturnStatement BinaryOperation || Literal MethodInvocation MemberReference algorithm equalsIgnoreCase Literal MethodInvocation MemberReference algorithm equalsIgnoreCase	1
MethodDeclaration Modifier public BasicType int getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected the class to MemberReference expectBuildExceptionContaining StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte buf FormalParameter BasicType int offset FormalParameter BasicType int numToRead IOException LocalVariableDeclaration BasicType int VariableDeclarator totalRead Literal 0 IfStatement BinaryOperation >= This MemberReference entryOffset This MemberReference entrySize BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation > BinaryOperation + MemberReference numToRead This MemberReference entryOffset This MemberReference entrySize BlockStatement StatementExpression Assignment MemberReference numToRead Cast BasicType int BinaryOperation - This MemberReference entrySize This MemberReference entryOffset = IfStatement BinaryOperation != This MemberReference readBuf Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator sz TernaryExpression BinaryOperation > MemberReference numToRead This MemberReference readBuf MemberReference length This MemberReference readBuf MemberReference length MemberReference numToRead StatementExpression MethodInvocation System This MemberReference readBuf Literal 0 MemberReference buf MemberReference offset MemberReference sz arraycopy IfStatement BinaryOperation >= MemberReference sz This MemberReference readBuf MemberReference length BlockStatement StatementExpression Assignment This MemberReference readBuf Literal null = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator newLen BinaryOperation - This MemberReference readBuf MemberReference length MemberReference sz LocalVariableDeclaration BasicType byte VariableDeclarator ArrayCreator BasicType byte MemberReference newLen StatementExpression MethodInvocation System This MemberReference readBuf MemberReference sz MemberReference Literal 0 MemberReference newLen arraycopy StatementExpression Assignment This MemberReference readBuf MemberReference = StatementExpression Assignment MemberReference totalRead MemberReference sz += StatementExpression Assignment MemberReference numToRead MemberReference sz -= StatementExpression Assignment MemberReference offset MemberReference sz += WhileStatement BinaryOperation > MemberReference numToRead Literal 0 BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator rec This MemberReference buffer MethodInvocation IfStatement BinaryOperation == MemberReference rec Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal "unexpected EOF with " MemberReference numToRead Literal " bytes LocalVariableDeclaration BasicType int VariableDeclarator sz MemberReference numToRead LocalVariableDeclaration BasicType int VariableDeclarator recLen MemberReference rec length IfStatement BinaryOperation > MemberReference recLen MemberReference sz BlockStatement StatementExpression MethodInvocation System MemberReference rec Literal 0 MemberReference buf MemberReference offset MemberReference sz arraycopy StatementExpression Assignment This MemberReference readBuf ArrayCreator BasicType byte BinaryOperation - MemberReference recLen MemberReference sz = StatementExpression MethodInvocation System MemberReference rec MemberReference sz This MemberReference readBuf Literal 0 BinaryOperation - MemberReference recLen MemberReference sz arraycopy BlockStatement StatementExpression Assignment MemberReference sz MemberReference recLen = StatementExpression MethodInvocation System MemberReference rec Literal 0 MemberReference buf MemberReference offset MemberReference recLen arraycopy StatementExpression Assignment MemberReference totalRead MemberReference sz += StatementExpression Assignment MemberReference numToRead MemberReference sz -= StatementExpression Assignment MemberReference offset MemberReference sz += StatementExpression Assignment This MemberReference entryOffset MemberReference totalRead += ReturnStatement MemberReference totalRead	1
MethodDeclaration Modifier public static close FormalParameter ReferenceType Reader device IfStatement BinaryOperation != MemberReference device Literal null BlockStatement TryStatement StatementExpression MethodInvocation device close CatchClause CatchClauseParameter IOException ioex	1
MethodDeclaration Modifier public FormalParameter ReferenceType String enc StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference enc setValue createArgument	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String name FormalParameter ReferenceType Class type IfStatement BinaryOperation && Literal MethodInvocation MemberReference name equals ClassReference MethodInvocation MemberReference type equals ReferenceType Location BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && Literal MethodInvocation MemberReference name equals ClassReference java.lang MethodInvocation MemberReference type equals ReferenceType String BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType File incl BuildException StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference incl StatementExpression Assignment MemberReference ds Literal null =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal out the name attribute" Literal "No type specified" expectBuildExceptionContaining	0
MethodDeclaration Modifier private ReferenceType java ReferenceType io ReferenceType File FormalParameter ReferenceType View v FormalParameter ReferenceType Folder LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator root ClassCreator ReferenceType java ReferenceType io ReferenceType File MethodInvocation getTargetFolder IfStatement MethodInvocation ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation v StatementExpression Assignment MemberReference MethodInvocation Literal '/' MemberReference separatorChar replace = StatementExpression Assignment MemberReference MethodInvocation Literal '\\' MemberReference separatorChar replace = LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator dir ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator dirName MethodInvocation dir getName IfStatement MethodInvocation dirName MemberReference delim endsWith BlockStatement StatementExpression Assignment MemberReference dirName MethodInvocation dirName Literal 0 BinaryOperation - MethodInvocation dirName length Literal 1 substring = LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator ClassCreator ReferenceType StringTokenizer MethodInvocation MemberReference delim LocalVariableDeclaration ReferenceType String VariableDeclarator currentToken Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false WhileStatement MethodInvocation hasMoreTokens BlockStatement StatementExpression Assignment MemberReference currentToken MethodInvocation nextToken = IfStatement BinaryOperation && MethodInvocation currentToken MethodInvocation getProjectName equals MemberReference ! BlockStatement StatementExpression Assignment MemberReference currentToken MemberReference dirName = StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference root ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference root MemberReference currentToken = ReturnStatement MemberReference root	0
MethodDeclaration Modifier private FormalParameter ReferenceType String targetName FormalParameter BasicType long StatementExpression MethodInvocation MemberReference targetName executeTarget LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation StatementExpression MethodInvocation MemberReference MemberReference time	0
MethodDeclaration Modifier public FormalParameter BasicType long timeout StatementExpression Assignment This MemberReference timeout MemberReference timeout =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal MemberReference MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project Literal LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal Literal 2 MemberReference l length assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 1 l assertEquals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator base ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference File separator StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 0 l assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal MemberReference ArraySelector Literal 1 l assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation MethodInvocation getProject MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal false Literal true Literal true Literal false Literal false	0
MethodDeclaration Modifier public BasicType int size ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation size MethodInvocation MethodInvocation size getProperties	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding = IfStatement BinaryOperation == MemberReference outputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference outputEncoding MemberReference encoding =	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createJvmarg ReturnStatement MethodInvocation MethodInvocation getCommandLine	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname IfStatement Literal ! MethodInvocation MemberReference classname equals "" BlockStatement StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference d LocalVariableDeclaration ReferenceType String VariableDeclarator c BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference c LocalVariableDeclaration ReferenceType String VariableDeclarator f BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference f StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal "Removing indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal "NO file to remove StatementExpression MethodInvocation Literal 2	0
MethodDeclaration Modifier public FormalParameter ReferenceType permissions StatementExpression Assignment MemberReference perm MemberReference permissions =	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType TestResult res LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator errors Literal 0 LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation res WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation e nextElement StatementExpression MemberReference ++ StatementExpression Assignment MemberReference e MethodInvocation res errors = WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t Cast ReferenceType TestFailure MethodInvocation e nextElement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference t ReferenceType AssertionFailedError MethodInvocation t MethodInvocation getName MethodInvocation Literal equals getClass BlockStatement StatementExpression MemberReference ++ BlockStatement StatementExpression MemberReference ++ errors ReturnStatement ArrayCreator BasicType int ArrayInitializer MemberReference MemberReference errors	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType File createTempPropertiesFile FormalParameter ReferenceType String prefix LocalVariableDeclaration ReferenceType File VariableDeclarator propsFile MethodInvocation FILE_UTILS MemberReference prefix Literal ".properties" TernaryExpression BinaryOperation != MemberReference tmpDir Literal null MemberReference tmpDir MethodInvocation MethodInvocation getProject Literal true createTempFile ReturnStatement MemberReference propsFile	1
MethodDeclaration Modifier public FormalParameter ReferenceType String owner StatementExpression MethodInvocation MethodInvocation MemberReference owner setValue createArg StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier final protected IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public final setProjectReference FormalParameter Modifier final ReferenceType Object obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference obj ReturnStatement TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation obj MethodInvocation Literal "setProject" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Project getMethod getClass IfStatement BinaryOperation != MemberReference method Literal null BlockStatement StatementExpression MethodInvocation method MemberReference obj ArrayCreator ReferenceType Object ArrayInitializer This invoke CatchClause CatchClauseParameter Throwable e	1
MethodDeclaration Modifier private ReferenceType File IOException LocalVariableDeclaration ReferenceType File VariableDeclarator uploadFile StatementExpression Assignment MemberReference uploadFile MethodInvocation File Literal Literal "test" MemberReference tempDir createTempFile = LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator writer ClassCreator ReferenceType FileWriter MemberReference uploadFile StatementExpression MethodInvocation writer Literal you me write StatementExpression MethodInvocation writer close StatementExpression MethodInvocation MemberReference uploadFile ReturnStatement MemberReference uploadFile	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is a directory" Literal is a expectBuildExceptionContaining	0
MethodDeclaration Modifier public BasicType int get FormalParameter Modifier final BasicType int index ReturnStatement MemberReference ArraySelector MemberReference index components	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String msg IfStatement MemberReference debug BlockStatement StatementExpression MethodInvocation System.out MemberReference msg println	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MethodInvocation MemberReference getCommandline	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using modern compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class Literal "com.sun.tools.javac.Main" forName LocalVariableDeclaration ReferenceType Object VariableDeclarator compiler MethodInvocation c newInstance LocalVariableDeclaration ReferenceType Method VariableDeclarator compile MethodInvocation c Literal ArrayCreator ReferenceType Class ArrayInitializer ArrayCreator MethodInvocation getClass ReferenceType String ArrayInitializer getMethod LocalVariableDeclaration BasicType int VariableDeclarator result Cast ReferenceType Integer MethodInvocation compile MemberReference compiler ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation cmd invoke ReturnStatement BinaryOperation == MemberReference result MemberReference CatchClause CatchClauseParameter Exception ex IfStatement BinaryOperation instanceof MemberReference ex ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference ex BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Error starting modern compiler" MemberReference ex MemberReference location	1
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression MethodInvocation helper MemberReference text	0
MethodDeclaration ReferenceType Class FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation MemberReference name ReturnStatement TernaryExpression BinaryOperation == MemberReference def Literal null Literal null MethodInvocation def MemberReference project	0
MethodDeclaration Modifier public IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier protected doExecute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator tmp MethodInvocation LocalVariableDeclaration ReferenceType Execute VariableDeclarator execute ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler MemberReference parent MemberReference Project MSG_VERBOSE MemberReference Project MSG_VERBOSE StatementExpression MethodInvocation execute MethodInvocation cmd getCommandline setCommandline StatementExpression MethodInvocation execute MemberReference project setAntRun StatementExpression MethodInvocation MethodInvocation Literal MethodInvocation cmd toString getString MemberReference Project MSG_VERBOSE log LocalVariableDeclaration BasicType int VariableDeclarator retVal Literal 0 TryStatement StatementExpression Assignment MemberReference retVal MethodInvocation execute execute = IfStatement BinaryOperation != MemberReference retVal Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal CatchClause CatchClauseParameter IOException e LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation Literal getString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference e StatementExpression MethodInvocation tmp delete	1
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation event MethodInvocation getName MethodInvocation Literal equals BlockStatement StatementExpression Assignment MemberReference buildFinished Literal true =	1
MethodDeclaration Modifier protected transferFiles FormalParameter ReferenceType FTPClient ftp IOException BuildException StatementExpression Assignment MemberReference transferred Literal 0 = StatementExpression Assignment MemberReference skipped Literal 0 = IfStatement BinaryOperation == MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "at least one fileset must be BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt IfStatement BinaryOperation != MemberReference fs Literal null BlockStatement StatementExpression MethodInvocation MemberReference ftp MemberReference fs transferFiles StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference transferred Literal " " MemberReference ArraySelector MemberReference action ACTION_TARGET_STRS Literal " " MemberReference ArraySelector MemberReference action log IfStatement BinaryOperation != MemberReference skipped Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference skipped Literal " " MemberReference ArraySelector MemberReference action ACTION_TARGET_STRS Literal " were not " MemberReference ArraySelector MemberReference action log	1
MethodDeclaration Modifier protected tearDown ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Cast ReferenceType File MethodInvocation i next StatementExpression MethodInvocation file delete	1
MethodDeclaration Modifier private ReferenceType String getParameter FormalParameter ReferenceType String fileName FormalParameter ReferenceType String name FormalParameter BasicType boolean csharpStyle LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buffer TernaryExpression MethodInvocation Literal Literal append StatementExpression MethodInvocation buffer Literal ':' append StatementExpression MethodInvocation buffer MemberReference fileName append IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation buffer Literal ',' append StatementExpression MethodInvocation buffer MemberReference name append IfStatement MemberReference csharpStyle BlockStatement IfStatement BinaryOperation != MethodInvocation getPublic Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "This compiler does not support the " Literal BlockStatement IfStatement BinaryOperation != MethodInvocation getPublic Literal null BlockStatement StatementExpression MethodInvocation buffer Literal ',' append StatementExpression MethodInvocation buffer TernaryExpression MethodInvocation MethodInvocation booleanValue getPublic Literal "public" Literal "private" append IfStatement BinaryOperation != MethodInvocation getPublic Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal cannot have a public or private " Literal without the resource" ReturnStatement MethodInvocation buffer toString	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType File srcfile FormalParameter ReferenceType File destfile IfStatement BinaryOperation != MethodInvocation srcfile exists MethodInvocation destfile exists BlockStatement ReturnStatement Literal true IfStatement BinaryOperation != MethodInvocation srcfile length MethodInvocation destfile length BlockStatement ReturnStatement Literal true IfStatement MemberReference ! BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator StatementExpression Assignment MemberReference BinaryOperation && BinaryOperation >= MethodInvocation destfile lastModified BinaryOperation - MethodInvocation srcfile lastModified MemberReference granularity BinaryOperation <= MethodInvocation destfile lastModified BinaryOperation + MethodInvocation srcfile lastModified MemberReference granularity = IfStatement MemberReference ! BlockStatement ReturnStatement Literal true IfStatement MemberReference ! BlockStatement TryStatement ReturnStatement MethodInvocation ! FILE_UTILS MemberReference srcfile MemberReference destfile CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal comparing " MemberReference srcfile Literal " and " MemberReference destfile MemberReference e BlockStatement ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType DocumentFragment ReturnStatement MemberReference fragment	0
MethodDeclaration Modifier protected ReferenceType AntClassLoader IfStatement BinaryOperation != MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + Literal MemberReference = IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MethodInvocation MemberReference getReference getProject IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType AntClassLoader BlockStatement ReturnStatement Cast ReferenceType AntClassLoader MemberReference LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator al Cast ReferenceType AntClassLoader MethodInvocation project Literal getReference IfStatement BinaryOperation == MemberReference al Literal null BlockStatement IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference al ClassCreator ReferenceType AntClassLoader MethodInvocation getProject MemberReference classpath MemberReference ! = BlockStatement StatementExpression Assignment MemberReference al ClassCreator ReferenceType AntClassLoader MethodInvocation getProject MemberReference MemberReference ! = BlockStatement IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference al ClassCreator ReferenceType AntClassLoader MemberReference al MethodInvocation getProject MemberReference classpath MemberReference ! = BlockStatement StatementExpression Assignment MemberReference al ClassCreator ReferenceType AntClassLoader MemberReference al MethodInvocation getProject MemberReference MemberReference ! = StatementExpression MethodInvocation al Literal IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference getReference getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference al getProject ReturnStatement MemberReference al	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal "should have a parser exception" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + MethodInvocation e MethodInvocation toString getLocation Literal " should refer to BinaryOperation > MethodInvocation e MethodInvocation toString MethodInvocation Literal indexOf getLocation Literal - 1 assertTrue	0
MethodDeclaration Modifier public synchronized BasicType int read FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement ReturnStatement Literal 0 WhileStatement BinaryOperation == MemberReference slack Literal null BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator buf ArrayCreator BasicType char MemberReference len LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation in MemberReference buf read IfStatement BinaryOperation == MemberReference n Literal - 1 BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation > MemberReference n Literal 0 BlockStatement StatementExpression Assignment MemberReference slack ClassCreator MethodInvocation MemberReference encoding getBytes ReferenceType String MemberReference buf Literal 0 MemberReference n = StatementExpression Assignment MemberReference begin Literal 0 = IfStatement BinaryOperation > MemberReference len BinaryOperation - MemberReference slack length MemberReference begin BlockStatement StatementExpression Assignment MemberReference len BinaryOperation - MemberReference slack length MemberReference begin = StatementExpression MethodInvocation System MemberReference slack MemberReference begin MemberReference b MemberReference off MemberReference len arraycopy IfStatement BinaryOperation >= Assignment MemberReference begin MemberReference len += MemberReference slack length BlockStatement StatementExpression Assignment MemberReference slack Literal null = ReturnStatement MemberReference len	1
MethodDeclaration Modifier public setAddress FormalParameter ReferenceType String address StatementExpression Assignment This MemberReference address MemberReference address =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String pattern StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType DateFormat ReturnStatement ClassCreator ReferenceType MemberReference pattern MethodDeclaration Modifier public ReferenceType DateFormat ReturnStatement Literal null =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setBase FormalParameter ReferenceType URL base StatementExpression Assignment This MemberReference base MemberReference base =	0
MethodDeclaration Modifier public onStartElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String propType FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException LocalVariableDeclaration ReferenceType VariableDeclarator parentWrapper MethodInvocation context LocalVariableDeclaration ReferenceType VariableDeclarator wrapper Literal null TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation parentWrapper IfStatement BinaryOperation instanceof MemberReference parent ReferenceType BlockStatement StatementExpression MethodInvocation System.err Literal " println TryStatement ThrowStatement ClassCreator ReferenceType Exception CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace StatementExpression Assignment MemberReference parent Cast ReferenceType MemberReference parent = LocalVariableDeclaration ReferenceType String VariableDeclarator elementName MethodInvocation qname MemberReference toLowerCase IfStatement BinaryOperation instanceof MemberReference parent ReferenceType UnknownElement BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ClassCreator ReferenceType MemberReference elementName StatementExpression MethodInvocation MethodInvocation context getProject setProject StatementExpression Cast ReferenceType UnknownElement MemberReference parent StatementExpression Assignment MemberReference element MemberReference = BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator parentClass MethodInvocation parent getClass LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MemberReference parentClass getHelper StatementExpression Assignment MemberReference element MethodInvocation ih MethodInvocation context getProject MemberReference parent MemberReference elementName createElement = StatementExpression MethodInvocation context MemberReference element MemberReference attrs StatementExpression Assignment MemberReference wrapper ClassCreator ReferenceType MethodInvocation context getProject Literal null MemberReference element MemberReference qname = StatementExpression MethodInvocation wrapper MemberReference attrs StatementExpression MethodInvocation parentWrapper MemberReference wrapper addChild CatchClause CatchClauseParameter BuildException exc ThrowStatement ClassCreator ReferenceType SAXParseException MethodInvocation exc getMessage MemberReference context locator MemberReference exc StatementExpression MethodInvocation context MemberReference wrapper	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "class not an MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal getProperty getProject assertNotNull	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ReturnStatement MethodInvocation name Literal startsWith	0
MethodDeclaration Modifier public FormalParameter ReferenceType String op StatementExpression Assignment This MemberReference operation MemberReference op =	0
MethodDeclaration Modifier public synchronized setString FormalParameter ReferenceType String string StatementExpression Assignment This MemberReference string MemberReference string = StatementExpression Assignment This MemberReference mode MemberReference STRING =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal Literal setNewProperty StatementExpression MethodInvocation Literal MethodInvocation assertEquals	0
MethodDeclaration Modifier private FormalParameter ReferenceType path TryStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator acl MemberReference AntClassLoader StatementExpression MemberReference project getReference StatementExpression MemberReference IfStatement BinaryOperation == MemberReference acl Literal null BlockStatement StatementExpression Assignment MemberReference acl ClassCreator ReferenceType AntClassLoader This MethodInvocation getClass MethodInvocation getClassLoader Literal true = StatementExpression MethodInvocation acl Literal StatementExpression MethodInvocation project MemberReference MemberReference acl LocalVariableDeclaration ReferenceType String VariableDeclarator list MethodInvocation path list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i list IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation acl MethodInvocation f getAbsolutePath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Adding to class loader " MemberReference acl Literal " " MethodInvocation f getAbsolutePath MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType String VariableDeclarator antHome MemberReference project getProperty StatementExpression Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File BinaryOperation + MemberReference antHome Literal IfStatement MethodInvocation exists StatementExpression MemberReference acl StatementExpression MethodInvocation getAbsolutePath LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator tasks MethodInvocation project LocalVariableDeclaration ReferenceType String VariableDeclarator Literal TryStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in This MethodInvocation getClass MemberReference getResourceAsStream StatementExpression MemberReference IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Can't load default task StatementExpression MemberReference props load StatementExpression MemberReference in StatementExpression MethodInvocation in close LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation tasks keys WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key MemberReference String StatementExpression MethodInvocation nextElement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MemberReference Class StatementExpression MemberReference tasks get StatementExpression MemberReference key IfStatement MethodInvocation ! c MethodInvocation Literal startsWith getName ContinueStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator taskClass MethodInvocation acl MethodInvocation c getName loadClass StatementExpression MethodInvocation project MethodInvocation MemberReference key MemberReference taskClass put CatchClause CatchClauseParameter NoClassDefFoundError ncdfe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load a class (" MethodInvocation ncdfe getMessage Literal ") for task " MemberReference key MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter ClassNotFoundException cnfe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load class (" MethodInvocation c getName Literal ") for task " MemberReference key MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace StatementExpression Assignment MemberReference MethodInvocation props propertyNames = WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation props MemberReference key getProperty IfStatement MethodInvocation ! value Literal startsWith ContinueStatement IfStatement BinaryOperation != MethodInvocation tasks MemberReference key get Literal null ContinueStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator taskClass MethodInvocation acl MemberReference value loadClass StatementExpression MethodInvocation project MethodInvocation MemberReference key MemberReference taskClass put CatchClause CatchClauseParameter NoClassDefFoundError ncdfe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load a class (" MethodInvocation ncdfe getMessage Literal ") for task " MemberReference key MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter ClassNotFoundException cnfe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load class (" MemberReference value Literal ") for task " MemberReference key MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "Can't load default task CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation ex printStackTrace	0
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String file ReturnStatement SuperMethodInvocation MemberReference file	1
MethodDeclaration Modifier public add FormalParameter ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference add createMapper	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute TypeName not specified" IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType String evalName FormalParameter ReferenceType Project p ReturnStatement TernaryExpression MethodInvocation MemberReference p valid MemberReference name Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType element IfStatement BinaryOperation == MethodInvocation element getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the element element needed a attribute" IfStatement BinaryOperation != MethodInvocation elements MethodInvocation element getName get Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "the element " MethodInvocation element getName Literal " has already been specified" IfStatement BinaryOperation || MemberReference BinaryOperation && MethodInvocation element BinaryOperation != MethodInvocation elements size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one element allowed when using StatementExpression Assignment MemberReference MethodInvocation element = StatementExpression MethodInvocation elements MethodInvocation element getName MemberReference element put	1
MethodDeclaration send FormalParameter ReferenceType String msg FormalParameter BasicType int ok IOException StatementExpression MethodInvocation out BinaryOperation + MemberReference msg Literal LocalVariableDeclaration ReferenceType String VariableDeclarator response MethodInvocation in IfStatement MethodInvocation ! MemberReference response MemberReference ok BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unexpected to command: " MemberReference msg Literal ": " MemberReference response	0
MethodDeclaration Modifier public setError FormalParameter ReferenceType File error IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation == MemberReference error Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "error file specified as null" StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference MethodInvocation MemberReference error =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType Permission perm StatementExpression MethodInvocation MemberReference perm add	0
MethodDeclaration Modifier public SAXException IOException LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator db MethodInvocation LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is This MethodInvocation getClass MethodInvocation getClassLoader MethodInvocation Literal getResourceAsStream LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation db MemberReference is parse LocalVariableDeclaration ReferenceType NodeList VariableDeclarator nl MethodInvocation MethodInvocation doc getFirstChild ClassCreator ReferenceType Literal true StatementExpression MethodInvocation MethodInvocation nl getLength Literal 3 assertEquals	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String filename IOException LocalVariableDeclaration ReferenceType Reader VariableDeclarator r Literal null TryStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType FileReader MethodInvocation MethodInvocation MemberReference filename getProject = ReturnStatement MethodInvocation FileUtils MemberReference r readFully StatementExpression MethodInvocation FileUtils MemberReference r close	1
MethodDeclaration Modifier protected logError FormalParameter ReferenceType String msg StatementExpression MethodInvocation owner MethodInvocation MemberReference msg MemberReference Project MSG_ERR log getProject	0
MethodDeclaration Modifier private static FormalParameter ReferenceType String msg FormalParameter ReferenceType File inputFile FormalParameter ReferenceType File workingDir FormalParameter ReferenceType Project p FormalParameter ReferenceType Properties properties LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator xmlproperties MethodInvocation p getProperties LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation properties propertyNames WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentKey MethodInvocation MethodInvocation toString nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator assertMsg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference msg Literal "-" MethodInvocation inputFile getName Literal " MemberReference currentKey LocalVariableDeclaration ReferenceType String VariableDeclarator propertyValue MethodInvocation properties MemberReference currentKey getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation xmlproperties MemberReference currentKey get IfStatement BinaryOperation == MethodInvocation propertyValue Literal indexOf Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator id MemberReference currentKey LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation p MethodInvocation MemberReference id get IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference assertMsg Literal " Object ID does not exist." fail StatementExpression Assignment MemberReference propertyValue MethodInvocation propertyValue Literal 3 MethodInvocation propertyValue length substring = IfStatement MethodInvocation propertyValue Literal equals BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference assertMsg Literal " ID is a " MethodInvocation obj MethodInvocation getName getClass fail BlockStatement StatementExpression MethodInvocation MemberReference assertMsg MemberReference propertyValue MethodInvocation obj toString assertEquals BlockStatement IfStatement BinaryOperation == MethodInvocation propertyValue Literal indexOf Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation propertyValue Literal 5 MethodInvocation propertyValue length substring LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference workingDir MemberReference fileName StatementExpression Assignment MemberReference propertyValue MethodInvocation f getAbsolutePath = StatementExpression MethodInvocation MemberReference assertMsg MemberReference propertyValue MemberReference assertEquals	1
MethodDeclaration Modifier public FormalParameter ReferenceType String manager StatementExpression MethodInvocation helper MemberReference manager	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String getKey ReturnStatement This MemberReference key	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator table Cast ReferenceType Hashtable MethodInvocation ClassCreator ReferenceType Literal getField LocalVariableDeclaration ReferenceType String VariableDeclarator engineClassName Cast ReferenceType String MethodInvocation table MethodInvocation getLanguage get IfStatement BinaryOperation == MemberReference engineClassName Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "This is no BSF engine class for language '" MethodInvocation getLanguage Literal "'" MemberReference Project MSG_VERBOSE log getProject ReturnStatement Literal false TryStatement StatementExpression MethodInvocation MethodInvocation MemberReference engineClassName loadClass ReturnStatement Literal true CatchClause CatchClauseParameter Throwable ex StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "unable to create BSF engine class for language '" MethodInvocation getLanguage Literal "'" MemberReference ex MemberReference Project MSG_VERBOSE log getProject ReturnStatement Literal false	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier final public static ReferenceType String readFully FormalParameter ReferenceType Reader rdr IOException ReturnStatement MethodInvocation MemberReference rdr MemberReference BUF_SIZE readFully	0
MethodDeclaration Modifier public FormalParameter ReferenceType path StatementExpression Assignment This MemberReference path MemberReference path =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String className LocalVariableDeclaration ReferenceType Provider VariableDeclarator provider ClassCreator ReferenceType Provider StatementExpression MethodInvocation provider MemberReference className StatementExpression MethodInvocation MemberReference provider add	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MethodInvocation MethodInvocation getName getResource	0
MethodDeclaration Modifier private BasicType boolean delete FormalParameter ReferenceType File f IfStatement MethodInvocation ! f delete BlockStatement IfStatement MethodInvocation Os Literal "windows" isFamily BlockStatement StatementExpression MethodInvocation System gc TryStatement StatementExpression MethodInvocation Thread MemberReference sleep CatchClause CatchClauseParameter InterruptedException ex IfStatement MethodInvocation ! f delete BlockStatement IfStatement MemberReference deleteOnExit BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator level TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference Project MSG_INFO StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to delete " MemberReference f Literal ", calling Literal " This attempts to delete the file when the Literal " has and not MemberReference level log StatementExpression MethodInvocation f deleteOnExit ReturnStatement Literal true ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference append	0
MethodDeclaration Modifier protected ReferenceType Enumeration LocalVariableDeclaration Modifier final BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration Modifier final ReferenceType Enumeration VariableDeclarator enums ArrayCreator ReferenceType Enumeration BinaryOperation + MemberReference count Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation MemberReference i elementAt StatementExpression Assignment MemberReference ArraySelector MemberReference i enums MethodInvocation elements = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference enums length Literal 1 enums MethodInvocation tests elements = ReturnStatement MethodInvocation MemberReference enums	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference srcFile MemberReference file =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal TryStatement LocalVariableDeclaration ReferenceType ModifiedSelector ReferenceType VariableDeclarator ClassCreator ReferenceType ModifiedSelector ReferenceType StatementExpression MethodInvocation MemberReference name setValue StatementExpression MethodInvocation Literal invalid fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation BinaryOperation + MemberReference name Literal " is not a value for this attribute" MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier public IOException IfStatement MethodInvocation ! Literal hasRegex ReturnStatement StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier public execute FormalParameter ReferenceType AntTelnetClient telnet BuildException StatementExpression MethodInvocation telnet MemberReference MemberReference timeout	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference prevRevision	0
MethodDeclaration Modifier public FormalParameter BasicType boolean print StatementExpression Assignment This MemberReference print MemberReference print =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt LocalVariableDeclaration ReferenceType Element VariableDeclarator suite MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator summary MethodInvocation evt getSummary StatementExpression MethodInvocation suite MemberReference MethodInvocation String BinaryOperation / MethodInvocation summary Literal valueOf setAttribute StatementExpression MethodInvocation suite MemberReference MethodInvocation String MethodInvocation summary valueOf setAttribute StatementExpression MethodInvocation suite MemberReference MethodInvocation String MethodInvocation summary failureCount valueOf setAttribute StatementExpression MethodInvocation suite MemberReference MethodInvocation String MethodInvocation summary valueOf setAttribute StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation callee MemberReference output handleErrorOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleErrorOutput	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference next	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment MemberReference MemberReference to =	0
MethodDeclaration Modifier public testEquals LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator ClassCreator ReferenceType ZipLong Literal LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator ClassCreator ReferenceType ZipLong Literal LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator ClassCreator ReferenceType ZipLong Literal StatementExpression MethodInvocation Literal MethodInvocation MemberReference equals assertTrue StatementExpression MethodInvocation Literal MethodInvocation MemberReference equals assertTrue StatementExpression MethodInvocation Literal part MethodInvocation ! MemberReference equals assertTrue StatementExpression MethodInvocation Literal MethodInvocation MemberReference equals assertTrue StatementExpression MethodInvocation Literal "null handling" MethodInvocation ! Literal null equals assertTrue StatementExpression MethodInvocation Literal ZipLong handling" MethodInvocation ! ClassCreator ReferenceType Integer Literal equals assertTrue	1
MethodDeclaration Modifier protected ReferenceType FormalParameter Modifier final ReferenceType File srcDir LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType MethodInvocation getTask MemberReference srcDir MethodDeclaration Modifier protected ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MemberReference MethodInvocation iterator getConfig MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator Cast ReferenceType ReferenceType MethodInvocation i next StatementExpression MethodInvocation handler MethodInvocation getPublicId MethodInvocation getLocation registerDTD ReturnStatement MemberReference handler	1
MethodDeclaration Modifier public FormalParameter ReferenceType String p StatementExpression Assignment This MemberReference pword MemberReference p =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name IfStatement MemberReference BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement ClassCreator ReferenceType Literal null MemberReference parts	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType String string FormalParameter ReferenceType String contains StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "[" MemberReference string Literal "] does contain [" MemberReference contains Literal "]" BinaryOperation == MethodInvocation string MemberReference contains indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String asOfDateFormat StatementExpression MethodInvocation MemberReference asOfDateFormat	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target FormalParameter ReferenceType String name FormalParameter ReferenceType String contains IOException StatementExpression MethodInvocation MemberReference target executeTarget StatementExpression MethodInvocation MemberReference name MemberReference contains	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation formatter MemberReference evt	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator dosRoot Literal null IfStatement BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal isFamily BlockStatement StatementExpression Assignment MemberReference dosRoot MethodInvocation System MethodInvocation Literal 0 Literal 2 substring Literal "user.dir" getProperty = BlockStatement StatementExpression Assignment MemberReference dosRoot Literal "" = IfStatement MethodInvocation Os Literal isFamily BlockStatement StatementExpression MethodInvocation Literal MethodInvocation FILE_UTILS Literal fromURI IfStatement MethodInvocation Os Literal "dos" isFamily BlockStatement StatementExpression MethodInvocation Literal MethodInvocation FILE_UTILS Literal fromURI StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference dosRoot MemberReference File separator Literal "foo" MethodInvocation FILE_UTILS Literal fromURI StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "." MemberReference File separator Literal "foo" MethodInvocation FILE_UTILS Literal fromURI assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference dosRoot MemberReference File separator Literal "foo bar" MethodInvocation FILE_UTILS Literal fromURI assertEquals StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference dosRoot MemberReference File separator Literal MethodInvocation FILE_UTILS Literal fromURI assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal property not MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public synchronized BasicType boolean isCaseSensitive ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation isCaseSensitive MethodInvocation getProject MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference ds Literal null =	0
MethodDeclaration Modifier private FormalParameter ReferenceType ZipOutputStream zOut IOException LocalVariableDeclaration ReferenceType Iterator VariableDeclarator LocalVariableDeclaration ReferenceType Service VariableDeclarator service StatementExpression Assignment MemberReference MethodInvocation iterator = WhileStatement MethodInvocation hasNext BlockStatement StatementExpression Assignment MemberReference service Cast ReferenceType Service MethodInvocation next = StatementExpression SuperMethodInvocation MethodInvocation service MemberReference zOut BinaryOperation + Literal MethodInvocation service getType MethodInvocation System currentTimeMillis Literal null MemberReference ZipFileSet DEFAULT_FILE_MODE zipFile	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType AntTelnetClient telnet BuildException StatementExpression MethodInvocation telnet MemberReference MemberReference echoString	1
MethodDeclaration Modifier public FormalParameter ReferenceType File params StatementExpression Assignment MemberReference outputFile MemberReference params =	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier public ReferenceType Resource getResource FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType FileResource MemberReference toDir MemberReference name	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String FormalParameter BasicType int ParseException LocalVariableDeclaration ReferenceType Calendar VariableDeclarator calendar ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Date VariableDeclarator MethodInvocation dateFormat MemberReference parse StatementExpression MethodInvocation calendar MemberReference StatementExpression MethodInvocation calendar MemberReference Calendar DATE MemberReference add ReturnStatement MethodInvocation dateFormat MethodInvocation calendar format	0
MethodDeclaration Modifier public FormalParameter BasicType boolean append StatementExpression MethodInvocation redirector MemberReference append StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file ReturnStatement MethodInvocation MemberReference basedir MemberReference filename MethodInvocation file getAbsolutePath isSelected	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Thread thread FormalParameter ReferenceType Task task IfStatement BinaryOperation != MemberReference task Literal null BlockStatement StatementExpression MethodInvocation MemberReference thread MemberReference task put StatementExpression MethodInvocation MethodInvocation thread MemberReference task put BlockStatement StatementExpression MethodInvocation MemberReference thread remove StatementExpression MethodInvocation MethodInvocation thread remove	0
MethodDeclaration Modifier public FormalParameter ReferenceType String factory StatementExpression Assignment This MemberReference factory MemberReference factory =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType StatementExpression MethodInvocation Literal not proper MethodInvocation isValid assertTrue TryStatement StatementExpression MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MemberReference ArraySelector MemberReference i files IfStatement MethodInvocation file isFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference file getValue LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference file getValue LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference file getValue LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference file getValue LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ClassCreator ReferenceType File MethodInvocation file getAbsolutePath getValue StatementExpression MethodInvocation BinaryOperation + Literal was null for " MethodInvocation file getAbsolutePath MemberReference assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal was null for " MethodInvocation file getAbsolutePath MemberReference assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal was null for " MethodInvocation file getAbsolutePath MemberReference assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal was null for " MethodInvocation file getAbsolutePath MemberReference assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal was null for " MethodInvocation file getAbsolutePath MemberReference assertNotNull StatementExpression MethodInvocation BinaryOperation + Literal returned value for " MethodInvocation file getAbsolutePath MemberReference MemberReference assertEquals StatementExpression MethodInvocation BinaryOperation + Literal returned value for " MethodInvocation file getAbsolutePath MemberReference MemberReference assertEquals StatementExpression MethodInvocation BinaryOperation + Literal returned value for " MethodInvocation file getAbsolutePath MemberReference MemberReference assertEquals StatementExpression MethodInvocation BinaryOperation + Literal returned value for " MethodInvocation file getAbsolutePath MemberReference MemberReference assertEquals StatementExpression MethodInvocation	0
MethodDeclaration Modifier public run SynchronizedStatement This StatementExpression Assignment MemberReference started Literal true = StatementExpression Assignment MemberReference finished Literal false = StatementExpression Assignment MemberReference finish Literal false = LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator buf ArrayCreator BasicType byte MemberReference LocalVariableDeclaration BasicType int VariableDeclarator length TryStatement WhileStatement BinaryOperation && BinaryOperation > Assignment MemberReference length MethodInvocation is MemberReference buf read = Literal 0 MemberReference ! finish BlockStatement StatementExpression MethodInvocation os MemberReference buf Literal 0 MemberReference length write IfStatement MemberReference BlockStatement StatementExpression MethodInvocation os flush StatementExpression MethodInvocation os flush CatchClause CatchClauseParameter Exception e SynchronizedStatement This StatementExpression Assignment MemberReference exception MemberReference e = IfStatement MemberReference BlockStatement TryStatement StatementExpression MethodInvocation os close CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference finished Literal true = SynchronizedStatement This StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String rsh IfStatement BinaryOperation != MemberReference rsh Literal null BlockStatement IfStatement MethodInvocation rsh MethodInvocation Literal "" equals trim BlockStatement StatementExpression Assignment MemberReference rsh Literal null = StatementExpression Assignment This MemberReference MemberReference rsh =	1
MethodDeclaration Modifier public ReferenceType String getPassword ReturnStatement MemberReference password	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal null LocalVariableDeclaration ReferenceType FileReader VariableDeclarator r Literal null TryStatement StatementExpression Assignment MemberReference r ClassCreator ReferenceType FileReader ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal = LocalVariableDeclaration ReferenceType String VariableDeclarator report MethodInvocation FileUtils MemberReference r readFully StatementExpression MethodInvocation Literal must contain BinaryOperation > MethodInvocation report Literal indexOf Literal - 1 assertTrue StatementExpression MethodInvocation FileUtils MemberReference r close	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public testFile Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized ReferenceType String ReturnStatement MemberReference polyType	0
MethodDeclaration Modifier private appendLibraryList FormalParameter Modifier final ReferenceType Attributes attributes FormalParameter Modifier final ReferenceType String FormalParameter Modifier final ReferenceType ArrayList extensions BuildException LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation extensions size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Extension VariableDeclarator ext Cast ReferenceType Extension MethodInvocation extensions MemberReference i get LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator prefix BinaryOperation + BinaryOperation + MemberReference MemberReference i Literal "-" StatementExpression MethodInvocation Extension MemberReference ext MemberReference prefix MemberReference attributes	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference failonerror MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getElement ReturnStatement MemberReference element	0
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression SuperMethodInvocation MemberReference label	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference a ClassCreator ReferenceType AsiExtraField = StatementExpression MethodInvocation a Literal 0755 setMode StatementExpression MethodInvocation a Literal true setDirectory StatementExpression Assignment MemberReference dummy ClassCreator ReferenceType UnrecognizedExtraField = StatementExpression MethodInvocation dummy ClassCreator ReferenceType ZipShort Literal 1 StatementExpression MethodInvocation dummy ArrayCreator BasicType byte Literal 0 setLocalFileDataData StatementExpression MethodInvocation dummy ArrayCreator BasicType byte ArrayInitializer Literal 0 StatementExpression Assignment MemberReference aLocal MethodInvocation a = LocalVariableDeclaration BasicType byte VariableDeclarator dummyLocal MethodInvocation dummy StatementExpression Assignment MemberReference data ArrayCreator BasicType byte BinaryOperation + BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 4 MemberReference dummyLocal length = StatementExpression MethodInvocation System MethodInvocation a MethodInvocation getBytes Literal 0 MemberReference data Literal 0 Literal 2 arraycopy StatementExpression MethodInvocation System MethodInvocation a MethodInvocation getBytes getLocalFileDataLength Literal 0 MemberReference data Literal 2 Literal 2 arraycopy StatementExpression MethodInvocation System MemberReference aLocal Literal 0 MemberReference data Literal 4 MemberReference aLocal length arraycopy StatementExpression MethodInvocation System MethodInvocation dummy MethodInvocation getBytes Literal 0 MemberReference data BinaryOperation + Literal 4 MemberReference aLocal length Literal 2 arraycopy StatementExpression MethodInvocation System MethodInvocation dummy MethodInvocation getBytes getLocalFileDataLength Literal 0 MemberReference data BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 2 Literal 2 arraycopy StatementExpression MethodInvocation System MemberReference dummyLocal Literal 0 MemberReference data BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 4 MemberReference dummyLocal length arraycopy	1
MethodDeclaration Modifier protected BasicType boolean isValidOs ReturnStatement BinaryOperation && MethodInvocation Os Literal isFamily SuperMethodInvocation isValidOs	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType File f Exception LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference f = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal null WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation reader readLine = Literal null BlockStatement StatementExpression MethodInvocation buf BinaryOperation + MemberReference line MemberReference append ReturnStatement MethodInvocation buf toString IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close	0
MethodDeclaration Modifier public addTarget FormalParameter ReferenceType String targetName FormalParameter ReferenceType Target target BuildException IfStatement BinaryOperation != MethodInvocation targets MemberReference targetName get Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Duplicate target: `" MemberReference targetName Literal "'" StatementExpression MethodInvocation MemberReference targetName MemberReference target	1
MethodDeclaration Modifier public FormalParameter ReferenceType String root IfStatement BinaryOperation != MemberReference root Literal null BlockStatement IfStatement MethodInvocation root MethodInvocation Literal "" equals trim BlockStatement StatementExpression Assignment MemberReference root Literal null = StatementExpression Assignment This MemberReference MemberReference root =	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference srcDir Literal null BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal and destDir attributes must be LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation MemberReference srcDir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression MethodInvocation MemberReference srcDir MemberReference destDir MemberReference files scanDir StatementExpression MethodInvocation IfStatement BinaryOperation > MethodInvocation compileList size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MethodInvocation compileList size Literal " source file" TernaryExpression BinaryOperation == MethodInvocation compileList size Literal 1 Literal "" Literal "s" Literal " to " MemberReference destDir log StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String FormalParameter ReferenceType Class taskClass StatementExpression MethodInvocation MemberReference taskClass checkTaskClass LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def ClassCreator ReferenceType AntTypeDefinition StatementExpression MethodInvocation def MemberReference setName StatementExpression MethodInvocation def MethodInvocation taskClass getClassLoader StatementExpression MethodInvocation def MemberReference taskClass StatementExpression MethodInvocation def ClassReference ReferenceType StatementExpression MethodInvocation def MethodInvocation taskClass getName StatementExpression MethodInvocation def ClassReference ReferenceType Task StatementExpression MethodInvocation MemberReference def	0
MethodDeclaration Modifier public single BuildException TryStatement IfStatement BinaryOperation == MemberReference resource Literal null BlockStatement StatementExpression MethodInvocation Literal define the resource to handleError ReturnStatement IfStatement BinaryOperation == MemberReference link Literal null BlockStatement StatementExpression MethodInvocation Literal define the link name for handleError ReturnStatement StatementExpression MethodInvocation MemberReference resource MemberReference link StatementExpression MethodInvocation setDefaults	0
MethodDeclaration Modifier public ReferenceType ZipShort getLocalFileDataLength ReturnStatement ClassCreator ReferenceType ZipShort MemberReference length	0
MethodDeclaration Modifier protected handleOutput FormalParameter ReferenceType String output IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleOutput	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference rc add getPath	0
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public FormalParameter ReferenceType File inFile StatementExpression Assignment This MemberReference inFile MemberReference inFile =	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry StatementExpression Assignment MemberReference usedMatchingTask Literal true = ReturnStatement SuperMethodInvocation	1
MethodDeclaration Modifier protected ReferenceType OutputStream ReturnStatement ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO	0
MethodDeclaration Modifier public ReferenceType JUnitTaskMirror ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" Literal sleep are not supported" expectBuildException	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType byte getBytes LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 result Cast BasicType byte BinaryOperation & MemberReference value Literal 0xFF = StatementExpression Assignment MemberReference ArraySelector Literal 1 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal Literal 8 = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference MemberReference	0
MethodDeclaration Modifier private static header FormalParameter ReferenceType PrintStream out FormalParameter ReferenceType String section StatementExpression MethodInvocation out println StatementExpression MethodInvocation out Literal println StatementExpression MethodInvocation out Literal " " print StatementExpression MethodInvocation out MemberReference section println StatementExpression MethodInvocation out Literal println	0
MethodDeclaration Modifier public FormalParameter BasicType boolean preserveLastModified StatementExpression Assignment This MemberReference preserveLastModified MemberReference preserveLastModified =	0
MethodDeclaration Modifier public synchronized addAll FormalParameter ReferenceType Collection c BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation TryStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation Cast ReferenceType ResourceCollection MethodInvocation i next add CatchClause CatchClauseParameter ClassCastException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator arg MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MemberReference Literal " " MemberReference StatementExpression MethodInvocation arg MemberReference setValue StatementExpression MethodInvocation arg Literal StatementExpression MethodInvocation Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation StatementExpression MethodInvocation Literal are forked Literal 1 MemberReference args length assertEquals StatementExpression MethodInvocation MemberReference MemberReference ArraySelector Literal 0 args assertEquals	0
MethodDeclaration Modifier private BasicType boolean hasRegex FormalParameter ReferenceType String test TryStatement StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal CatchClause CatchClauseParameter Throwable ex StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + MemberReference test Literal ": skipped - regex not present " MemberReference ex println ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType File destFile StatementExpression Assignment This MemberReference destFile MemberReference destFile =	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String s ReturnStatement Literal 0	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier private FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType String VariableDeclarator searchForThis Literal null LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator logTo Literal null LocalVariableDeclaration ReferenceType HashMap VariableDeclarator launchCommands ClassCreator ReferenceType HashMap StatementExpression MethodInvocation launchCommands Literal Literal "" put StatementExpression MethodInvocation launchCommands Literal Literal "" put StatementExpression MethodInvocation launchCommands Literal Literal "" put StatementExpression MethodInvocation launchCommands Literal Literal "" put StatementExpression MethodInvocation launchCommands Literal Literal "" put StatementExpression MethodInvocation launchCommands Literal Literal "" put StatementExpression MethodInvocation launchCommands Literal Literal "" put ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg MemberReference ArraySelector MemberReference i args IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement StatementExpression MethodInvocation printUsage ReturnStatement IfStatement MethodInvocation arg Literal "-version" equals BlockStatement StatementExpression MethodInvocation ReturnStatement IfStatement MethodInvocation arg Literal equals BlockStatement StatementExpression MethodInvocation MemberReference System out ReturnStatement IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement StatementExpression Assignment MemberReference msgOutputLevel MemberReference Project MSG_WARN = IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal "-v" equals BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference msgOutputLevel MemberReference Project MSG_VERBOSE = IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal "-d" equals BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference msgOutputLevel MemberReference Project MSG_DEBUG = IfStatement MethodInvocation arg Literal equals BlockStatement StatementExpression Assignment MemberReference Literal false = IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args StatementExpression MemberReference ++ i StatementExpression Assignment MemberReference logTo ClassCreator ReferenceType PrintStream ClassCreator ReferenceType FileOutputStream MemberReference = StatementExpression Assignment MemberReference Literal true = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "Cannot write on the specified log file. " Literal sure the path exists and you have write " Literal ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal must a log file when " Literal "using the argument" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement BinaryOperation || BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement TryStatement StatementExpression Assignment MemberReference buildFile ClassCreator ReferenceType File MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 MethodInvocation Literal '/' MemberReference File separatorChar replace args = StatementExpression MemberReference ++ i CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal must a when " Literal "using the argument" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement MethodInvocation arg Literal equals BlockStatement TryStatement StatementExpression MethodInvocation listeners MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args addElement StatementExpression MemberReference ++ i CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal must a classname when " Literal "using the argument" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement MethodInvocation arg Literal startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation arg Literal 2 MethodInvocation arg length substring LocalVariableDeclaration ReferenceType String VariableDeclarator value Literal null LocalVariableDeclaration BasicType int VariableDeclarator posEq MethodInvocation name Literal "=" indexOf IfStatement BinaryOperation > MemberReference posEq Literal 0 BlockStatement StatementExpression Assignment MemberReference value MethodInvocation name BinaryOperation + MemberReference posEq Literal 1 substring = StatementExpression Assignment MemberReference name MethodInvocation name Literal 0 MemberReference posEq substring = IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference value MemberReference ArraySelector MemberReference ++ i args = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Missing value for property " MemberReference name StatementExpression MethodInvocation definedProps MemberReference name MemberReference value put IfStatement MethodInvocation arg Literal equals BlockStatement IfStatement BinaryOperation != MemberReference loggerClassname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal one logger class may " Literal " be TryStatement StatementExpression Assignment MemberReference loggerClassname MemberReference ArraySelector MemberReference ++ i args = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must a classname Literal " using the argument" IfStatement MethodInvocation arg Literal equals BlockStatement IfStatement BinaryOperation != MemberReference inputHandlerClassname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal one input handler class may " Literal "be TryStatement StatementExpression Assignment MemberReference inputHandlerClassname MemberReference ArraySelector MemberReference ++ i args = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal must a classname Literal " using the Literal " argument" IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement StatementExpression Assignment MemberReference emacsMode Literal true = IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement StatementExpression Assignment MemberReference projectHelp Literal true = IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal "-s" equals BlockStatement IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference searchForThis MemberReference ArraySelector MemberReference ++ i args = BlockStatement StatementExpression Assignment MemberReference searchForThis MemberReference DEFAULT_BUILD_FILENAME = IfStatement MethodInvocation arg Literal startsWith BlockStatement TryStatement StatementExpression MethodInvocation MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args addElement StatementExpression MemberReference ++ i CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal must a property filename when " Literal "using the argument" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement BinaryOperation || MethodInvocation arg Literal equals MethodInvocation arg Literal equals BlockStatement StatementExpression Assignment MemberReference Literal true = IfStatement MethodInvocation arg Literal equals BlockStatement TryStatement StatementExpression Assignment MemberReference threadPriority MethodInvocation Integer MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args decode = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException aioobe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must a value Literal " after the -nice CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal value: " MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args StatementExpression MemberReference ++ i IfStatement BinaryOperation || BinaryOperation < MethodInvocation threadPriority intValue MemberReference Thread BinaryOperation > MethodInvocation threadPriority intValue MemberReference Thread MAX_PRIORITY BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal value is out of the IfStatement BinaryOperation != MethodInvocation launchCommands MemberReference arg get Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal Main method is " Literal "an option " MemberReference arg Literal " that is only for the launcher class." Literal be by a version between " Literal "the ant file and ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg IfStatement MethodInvocation arg Literal equals BlockStatement StatementExpression Assignment MemberReference proxy Literal false = IfStatement MethodInvocation arg Literal "-" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Unknown argument: " MemberReference arg StatementExpression MethodInvocation System.err MemberReference msg println StatementExpression MethodInvocation printUsage ThrowStatement ClassCreator ReferenceType BuildException Literal "" BlockStatement StatementExpression MethodInvocation targets MemberReference arg addElement IfStatement BinaryOperation == MemberReference buildFile Literal null BlockStatement IfStatement BinaryOperation != MemberReference searchForThis Literal null BlockStatement StatementExpression Assignment MemberReference buildFile MethodInvocation MethodInvocation System Literal "user.dir" getProperty MemberReference searchForThis = BlockStatement StatementExpression Assignment MemberReference buildFile ClassCreator ReferenceType File MemberReference DEFAULT_BUILD_FILENAME = IfStatement MethodInvocation ! buildFile exists BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal " MemberReference buildFile Literal " does not exist!" println ThrowStatement ClassCreator ReferenceType BuildException Literal "Build failed" IfStatement MethodInvocation buildFile isDirectory BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal " MemberReference buildFile Literal " is a println ThrowStatement ClassCreator ReferenceType BuildException Literal "Build failed" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator propertyFileIndex Literal 0 BinaryOperation < MemberReference propertyFileIndex MethodInvocation size MemberReference ++ propertyFileIndex BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename Cast ReferenceType String MethodInvocation MemberReference propertyFileIndex elementAt LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference filename = StatementExpression MethodInvocation props MemberReference fis load CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load property file " MemberReference filename Literal ": " MethodInvocation e getMessage println StatementExpression MethodInvocation FileUtils MemberReference fis close LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator propertyNames MethodInvocation props propertyNames WhileStatement MethodInvocation propertyNames hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation propertyNames nextElement IfStatement BinaryOperation == MethodInvocation definedProps MemberReference name getProperty Literal null BlockStatement StatementExpression MethodInvocation definedProps MemberReference name MethodInvocation props MemberReference name getProperty put IfStatement BinaryOperation >= MemberReference msgOutputLevel MemberReference Project MSG_INFO BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal " MemberReference buildFile println IfStatement BinaryOperation != MemberReference logTo Literal null BlockStatement StatementExpression Assignment MemberReference out MemberReference logTo = StatementExpression Assignment MemberReference err MemberReference logTo = StatementExpression MethodInvocation System MemberReference out setOut StatementExpression MethodInvocation System MemberReference err setErr StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate ReturnStatement BinaryOperation || BinaryOperation && MethodInvocation file isDirectory MemberReference ! MethodInvocation when MethodInvocation file lastModified MemberReference millis MemberReference granularity evaluate	1
MethodDeclaration Modifier static FormalParameter ReferenceType FormalParameter ReferenceType Commandline cmd IfStatement MethodInvocation ! BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument LocalVariableDeclaration ReferenceType String VariableDeclarator factory MethodInvocation getFactory IfStatement BinaryOperation != MemberReference factory Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference factory setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference setPath createArgument LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-s" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference createArgument LocalVariableDeclaration ReferenceType Vector VariableDeclarator options MethodInvocation LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator elements MethodInvocation options elements LocalVariableDeclaration ReferenceType ReferenceType Option VariableDeclarator opt LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator arg Literal null WhileStatement MethodInvocation elements hasMoreElements BlockStatement StatementExpression Assignment MemberReference opt Cast ReferenceType ReferenceType Option MethodInvocation elements nextElement = StatementExpression Assignment MemberReference arg ClassCreator ReferenceType StringBuffer = StatementExpression MethodInvocation arg MethodInvocation MethodInvocation opt getName append Literal append IfStatement BinaryOperation != MethodInvocation opt getValue Literal null BlockStatement StatementExpression MethodInvocation arg MethodInvocation MethodInvocation opt getValue append Literal "=" append StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation arg toString setValue createArgument	1
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference setValue StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation dispose	0
MethodDeclaration Modifier public IfStatement MemberReference ! loginSuceeded BlockStatement ReturnStatement IfStatement MethodInvocation ! MemberReference remoteTmpDir changeRemoteDir BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment MemberReference inFile MemberReference file =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File baseDir BuildException StatementExpression Assignment MemberReference baseDir MethodInvocation FILE_UTILS MethodInvocation baseDir getAbsolutePath normalize = IfStatement MethodInvocation ! baseDir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation baseDir getAbsolutePath Literal " does not exist" IfStatement MethodInvocation ! baseDir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation baseDir getAbsolutePath Literal " is not a directory" StatementExpression Assignment This MemberReference baseDir MemberReference baseDir = StatementExpression MethodInvocation MemberReference MagicNames This MemberReference baseDir MethodInvocation getPath LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Project base dir set to: " This MemberReference baseDir StatementExpression MethodInvocation MemberReference msg MemberReference MSG_VERBOSE log	1
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MemberReference MemberReference File separator MemberReference	0
MethodDeclaration Modifier protected ReferenceType View FormalParameter ReferenceType View BuildException IfStatement BinaryOperation == This MemberReference asOfDate Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Date VariableDeclarator asOfDate Literal null LocalVariableDeclaration ReferenceType VariableDeclarator fmt Literal null IfStatement BinaryOperation != This MemberReference asOfDateFormat Literal null BlockStatement StatementExpression Assignment MemberReference fmt ClassCreator ReferenceType This MemberReference asOfDateFormat = TryStatement StatementExpression Assignment MemberReference asOfDate MethodInvocation fmt This MemberReference asOfDate parse = CatchClause CatchClauseParameter ParseException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal " This MemberReference asOfDate Literal " not by supplied format " This MemberReference asOfDateFormat BlockStatement TryStatement StatementExpression Assignment MemberReference asOfDate MethodInvocation This MemberReference asOfDate = CatchClause CatchClauseParameter ParseException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal " This MemberReference asOfDate Literal " not by default" Literal " ReturnStatement ClassCreator ReferenceType View MemberReference MethodInvocation ClassCreator ReferenceType MemberReference asOfDate	1
MethodDeclaration Modifier public FormalParameter ReferenceType XSLTProcess xsltTask StatementExpression Assignment MemberReference project MethodInvocation xsltTask getProject = LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType Factory VariableDeclarator factory MethodInvocation xsltTask getFactory IfStatement BinaryOperation != MemberReference factory Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation factory getName ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator attrs MethodInvocation factory getAttributes MethodInvocation attrs hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType Factory ReferenceType Attribute VariableDeclarator attr Cast ReferenceType XSLTProcess ReferenceType Factory ReferenceType Attribute MethodInvocation attrs nextElement StatementExpression MethodInvocation MethodInvocation attr getName MethodInvocation attr getValue setAttribute LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation xsltTask IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference setEntityResolver StatementExpression MethodInvocation MemberReference ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator props MethodInvocation xsltTask MethodInvocation props hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType XSLTProcess ReferenceType VariableDeclarator prop Cast ReferenceType XSLTProcess ReferenceType MethodInvocation props nextElement StatementExpression MethodInvocation MethodInvocation prop getName MethodInvocation prop getValue	1
MethodDeclaration Modifier public ReferenceType String getDefaultValue ReturnStatement MemberReference defaultValue	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation project Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public synchronized ReferenceType OutputStream getErrorStream ReturnStatement MemberReference errorStream	0
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType Resource r1 FormalParameter ReferenceType Resource r2 IOException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in1 Literal null LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in2 Literal null TryStatement StatementExpression Assignment MemberReference in1 ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation r1 getInputStream = StatementExpression Assignment MemberReference in2 ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation r2 getInputStream = LocalVariableDeclaration ReferenceType String VariableDeclarator expected MethodInvocation in1 readLine WhileStatement BinaryOperation != MemberReference expected Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation in2 readLine IfStatement MethodInvocation ! expected MemberReference equals BlockStatement ReturnStatement MethodInvocation expected MemberReference compareTo StatementExpression Assignment MemberReference expected MethodInvocation in1 readLine = ReturnStatement TernaryExpression BinaryOperation == MethodInvocation in2 readLine Literal null Literal 0 Literal - 1 StatementExpression MethodInvocation FileUtils MemberReference in1 close StatementExpression MethodInvocation FileUtils MemberReference in2 close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator f1 MethodInvocation ClassReference ReferenceType StatementExpression MethodInvocation MemberReference f1 assertNotNull LocalVariableDeclaration ReferenceType File VariableDeclarator f2 MethodInvocation Literal null Literal StatementExpression MethodInvocation MemberReference f2 assertNotNull StatementExpression MethodInvocation MethodInvocation f1 getAbsolutePath MethodInvocation f2 getAbsolutePath assertEquals	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation > MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal must not nest more than one " Literal into " MethodInvocation getTaskName IfStatement BinaryOperation < MethodInvocation Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must nest a condition into " MethodInvocation getTaskName LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType MethodInvocation MethodInvocation nextElement LocalVariableDeclaration BasicType long VariableDeclarator MemberReference LocalVariableDeclaration BasicType long VariableDeclarator MemberReference TryStatement StatementExpression Assignment MemberReference MemberReference *= StatementExpression Assignment MemberReference MemberReference *= LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator end BinaryOperation + MemberReference start MemberReference WhileStatement BinaryOperation < MethodInvocation System currentTimeMillis MemberReference end BlockStatement IfStatement MethodInvocation c eval BlockStatement StatementExpression MethodInvocation ReturnStatement TryStatement StatementExpression MethodInvocation Thread MemberReference sleep CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration FormalParameter BasicType int b StatementExpression SuperMethodInvocation MemberReference b write	0
MethodDeclaration Modifier synchronized protected handleErrorFlush FormalParameter ReferenceType String output IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType PrintStream MemberReference errorStream = StatementExpression MethodInvocation MemberReference output print	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setSize FormalParameter BasicType long l StatementExpression Assignment MemberReference size MemberReference l =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The method has been deprecated." Literal " Use instead." log StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference src getProject	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation verifyArguments LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation TryStatement LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator connection MethodInvocation url openConnection StatementExpression MethodInvocation connection MethodInvocation LocalVariableDeclaration BasicType long VariableDeclarator localTimestamp MethodInvocation IfStatement BinaryOperation != MemberReference localTimestamp Literal 0 BlockStatement IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator t ClassCreator ReferenceType Date MemberReference localTimestamp StatementExpression MethodInvocation BinaryOperation + Literal "local file date : " MethodInvocation t toString log StatementExpression MethodInvocation connection MemberReference localTimestamp setIfModifiedSince LocalVariableDeclaration ReferenceType HttpAuthenticationStrategy VariableDeclarator authStrategy MethodInvocation IfStatement BinaryOperation != MemberReference authStrategy Literal null BlockStatement StatementExpression MethodInvocation authStrategy MemberReference connection Literal null MemberReference MemberReference password LocalVariableDeclaration ReferenceType VariableDeclarator header ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation headers size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference header Cast ReferenceType MethodInvocation headers MemberReference i get = StatementExpression MethodInvocation connection MethodInvocation header getName MethodInvocation header getValue setRequestProperty LocalVariableDeclaration ReferenceType String VariableDeclarator method MethodInvocation LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator httpConnection Literal null IfStatement BinaryOperation instanceof MemberReference connection ReferenceType HttpURLConnection BlockStatement StatementExpression Assignment MemberReference httpConnection Cast ReferenceType HttpURLConnection MemberReference connection = StatementExpression MethodInvocation httpConnection MemberReference method setRequestMethod StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference method Literal " to " MemberReference url log StatementExpression Assignment MemberReference connection MethodInvocation MemberReference connection = IfStatement MethodInvocation ! MemberReference connection BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference connection ReferenceType HttpURLConnection BlockStatement StatementExpression Assignment MemberReference httpConnection Cast ReferenceType HttpURLConnection MemberReference connection = IfStatement BinaryOperation != MemberReference httpConnection Literal null BlockStatement IfStatement BinaryOperation != MemberReference localTimestamp Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference httpConnection getResponseCode MemberReference HttpURLConnection BlockStatement StatementExpression MethodInvocation Literal "Local file is up to date - so nothing was log StatementExpression MethodInvocation ReturnStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation MemberReference connection getInputStream IfStatement BinaryOperation == MemberReference is Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Can't get " MemberReference url MemberReference Project MSG_ERR log IfStatement MethodInvocation BlockStatement ReturnStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Can't reach URL" LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out Literal null IfStatement BinaryOperation != MemberReference dest Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Saving output to " MemberReference dest MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileOutputStream MemberReference dest = BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Saving output to property " MemberReference MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference out ClassCreator ReferenceType ByteArrayOutputStream BinaryOperation * MemberReference blockSize Literal 1024 = BlockStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType = LocalVariableDeclaration BasicType int VariableDeclarator contentLength MethodInvocation connection Literal Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator bytesRead Literal 0 LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte BinaryOperation * MemberReference blockSize Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator length WhileStatement BinaryOperation && BinaryOperation >= Assignment MemberReference length MethodInvocation is MemberReference buffer read = Literal 0 BinaryOperation || BinaryOperation == MemberReference contentLength Literal - 1 BinaryOperation < MemberReference bytesRead MemberReference contentLength BlockStatement StatementExpression Assignment MemberReference bytesRead MemberReference length += StatementExpression MethodInvocation out MemberReference buffer Literal 0 MemberReference length write IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal '.' IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal '\n' IfStatement BinaryOperation instanceof MemberReference out ReferenceType ByteArrayOutputStream BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation out toString setProperty getProject StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close StatementExpression MethodInvocation is close StatementExpression Assignment MemberReference is Literal null = StatementExpression Assignment MemberReference out Literal null = IfStatement MethodInvocation ! MemberReference connection BlockStatement ReturnStatement IfStatement MemberReference BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator remoteTimestamp MethodInvocation connection getLastModified IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Date VariableDeclarator t ClassCreator ReferenceType Date MemberReference remoteTimestamp StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal modified = " MethodInvocation t toString TernaryExpression BinaryOperation == MemberReference remoteTimestamp Literal 0 Literal " - using current time Literal "" log IfStatement BinaryOperation != MemberReference remoteTimestamp Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference dest MemberReference remoteTimestamp LocalVariableDeclaration ReferenceType String VariableDeclarator failureString Literal null IfStatement BinaryOperation && BinaryOperation > MemberReference contentLength Literal - 1 BinaryOperation != MemberReference bytesRead MemberReference contentLength BlockStatement StatementExpression Assignment MemberReference failureString BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal download " MemberReference contentLength Literal " MemberReference bytesRead Literal " = BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference httpConnection Literal null MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator statusCode MethodInvocation httpConnection getResponseCode IfStatement BinaryOperation || BinaryOperation < MemberReference statusCode Literal 200 BinaryOperation > MemberReference statusCode Literal 299 BlockStatement StatementExpression Assignment MemberReference failureString BinaryOperation + BinaryOperation + Literal error code " MemberReference statusCode Literal " received" = IfStatement BinaryOperation == MemberReference failureString Literal null BlockStatement StatementExpression MethodInvocation BlockStatement IfStatement MemberReference ThrowStatement ClassCreator ReferenceType BuildException MemberReference failureString StatementExpression MethodInvocation MemberReference failureString MemberReference Project MSG_ERR log CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error performing " MethodInvocation Literal " on " MemberReference url Literal " : " MethodInvocation ioe toString MemberReference Project MSG_ERR log IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference counter Literal null BinaryOperation == MethodInvocation counter length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No counter specified to IfStatement BinaryOperation && MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Cannot both set the value of the property and retrieve the " Literal of the property." LocalVariableDeclaration ReferenceType String VariableDeclarator command BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference P4CmdOpts Literal " " MemberReference counter IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + Literal "-s " MemberReference command = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + Literal " " MemberReference value += IfStatement MemberReference BlockStatement LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator MethodInvocation getProject LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType P4HandlerAdapter MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal retrieved line \"" MemberReference line Literal "\"" MemberReference Project MSG_VERBOSE log TryStatement StatementExpression Assignment MemberReference value MethodInvocation Integer MemberReference line parseInt = StatementExpression MethodInvocation MemberReference property BinaryOperation + Literal "" MemberReference value setProperty CatchClause CatchClauseParameter NumberFormatException nfe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal " Literal "Could not retrieve counter StatementExpression MethodInvocation MemberReference command MemberReference handler execP4Command BlockStatement StatementExpression MethodInvocation MemberReference command ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private ReferenceType UnknownElement copy FormalParameter ReferenceType UnknownElement ue LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ret ClassCreator ReferenceType UnknownElement MethodInvocation ue getTag StatementExpression MethodInvocation ret MethodInvocation ue getNamespace setNamespace StatementExpression MethodInvocation ret MethodInvocation getProject setProject StatementExpression MethodInvocation ret MethodInvocation ue getQName StatementExpression MethodInvocation ret MethodInvocation ue getTaskType StatementExpression MethodInvocation ret MethodInvocation ue getTaskName setTaskName StatementExpression MethodInvocation ret TernaryExpression MethodInvocation macroDef MethodInvocation ue getLocation MethodInvocation getLocation setLocation IfStatement BinaryOperation == MethodInvocation getOwningTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Target VariableDeclarator t ClassCreator ReferenceType Target StatementExpression MethodInvocation t MethodInvocation getProject setProject StatementExpression MethodInvocation ret MemberReference t setOwningTarget BlockStatement StatementExpression MethodInvocation ret MethodInvocation getOwningTarget setOwningTarget LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator rc ClassCreator ReferenceType RuntimeConfigurable MemberReference ret MethodInvocation ue getTaskName StatementExpression MethodInvocation rc MethodInvocation ue MethodInvocation getWrapper LocalVariableDeclaration ReferenceType Map VariableDeclarator m MethodInvocation ue MethodInvocation getAttributeMap getWrapper ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation m MethodInvocation iterator entrySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation i next StatementExpression MethodInvocation rc Cast ReferenceType String MethodInvocation entry getKey MethodInvocation Cast ReferenceType String MethodInvocation entry getValue MemberReference localAttributes macroSubs setAttribute StatementExpression MethodInvocation rc MethodInvocation MethodInvocation ue MethodInvocation getText MethodInvocation toString getWrapper MemberReference localAttributes macroSubs LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation ue MethodInvocation getChildren getWrapper WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType RuntimeConfigurable VariableDeclarator r Cast ReferenceType RuntimeConfigurable MethodInvocation e nextElement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator unknownElement Cast ReferenceType UnknownElement MethodInvocation r LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation unknownElement getTaskType IfStatement BinaryOperation != MemberReference tag Literal null BlockStatement StatementExpression Assignment MemberReference tag MethodInvocation tag MemberReference toLowerCase = LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator templateElement Cast ReferenceType ReferenceType MethodInvocation MethodInvocation MemberReference tag get IfStatement BinaryOperation == MemberReference templateElement Literal null BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator child MethodInvocation MemberReference unknownElement copy StatementExpression MethodInvocation rc MethodInvocation child getWrapper addChild StatementExpression MethodInvocation ret MemberReference child addChild IfStatement MethodInvocation templateElement BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation size Literal 0 MethodInvocation ! templateElement BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Missing elements for element " MethodInvocation templateElement getName ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator child MethodInvocation Cast ReferenceType UnknownElement MethodInvocation i next copy StatementExpression MethodInvocation rc MethodInvocation child getWrapper addChild StatementExpression MethodInvocation ret MemberReference child addChild BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator presentElement Cast ReferenceType UnknownElement MethodInvocation presentElements MemberReference tag get IfStatement BinaryOperation == MemberReference presentElement Literal null BlockStatement IfStatement MethodInvocation ! templateElement BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Required element " MethodInvocation templateElement getName Literal " ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation presentElement MethodInvocation getText MethodInvocation toString getWrapper IfStatement Literal ! MethodInvocation MemberReference equals "" BlockStatement StatementExpression MethodInvocation rc MethodInvocation MemberReference MemberReference localAttributes macroSubs LocalVariableDeclaration ReferenceType List VariableDeclarator list MethodInvocation presentElement getChildren IfStatement BinaryOperation != MemberReference list Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation list iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator child MethodInvocation Cast ReferenceType UnknownElement MethodInvocation i next copy StatementExpression MethodInvocation rc MethodInvocation child getWrapper addChild StatementExpression MethodInvocation ret MemberReference child addChild ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation FileUtils MemberReference in close StatementExpression MethodInvocation z close	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String target StatementExpression MethodInvocation MemberReference target BinaryOperation + Literal not thrown in " MemberReference target Literal 1" expectBuildExceptionContaining	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String message FormalParameter BasicType int StatementExpression MethodInvocation MemberReference message Literal null MemberReference log	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The method has been deprecated." Literal " Use instead." MemberReference Project MSG_WARN log StatementExpression Assignment This MemberReference type ClassCreator ReferenceType = StatementExpression This MemberReference type MethodInvocation MemberReference type setValue	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "No public method expectBuildExceptionContaining	0
MethodDeclaration Modifier protected ReferenceType String getExecutable ReturnStatement MemberReference executable	0
MethodDeclaration Modifier public FormalParameter ReferenceType ref StatementExpression MethodInvocation references MemberReference ref addElement	0
MethodDeclaration Modifier public init IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment MemberReference includes ArrayCreator ReferenceType Pattern Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 includes ClassCreator ReferenceType Pattern = StatementExpression MemberReference ArraySelector Literal 0 MethodInvocation Literal "**" includes IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArrayCreator ReferenceType Pattern Literal 0 =	0
MethodDeclaration Modifier public checkTaskClass FormalParameter Modifier final ReferenceType Class taskClass BuildException StatementExpression MethodInvocation ComponentHelper MethodInvocation MemberReference taskClass checkTaskClass This getComponentHelper IfStatement MethodInvocation ! Modifier MethodInvocation taskClass getModifiers isPublic BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MemberReference taskClass Literal " is not StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MethodInvocation Modifier MethodInvocation taskClass getModifiers isAbstract BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MemberReference taskClass Literal " is StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message TryStatement StatementExpression MethodInvocation taskClass Cast ReferenceType Class Literal null getConstructor CatchClause CatchClauseParameter NoSuchMethodException e LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "No public constructor in " MemberReference taskClass StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message CatchClause CatchClauseParameter LinkageError e LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not load " MemberReference taskClass Literal ": " MemberReference e StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference e IfStatement ClassReference ! MethodInvocation MemberReference taskClass isAssignableFrom ReferenceType Task BlockStatement StatementExpression MethodInvocation MemberReference taskClass This checkTaskClass	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File file StatementExpression Assignment MemberReference myFile MemberReference file =	0
MethodDeclaration Modifier protected extractFile FormalParameter ReferenceType FileUtils fileUtils FormalParameter ReferenceType File srcF FormalParameter ReferenceType File dir FormalParameter ReferenceType InputStream FormalParameter ReferenceType String entryName FormalParameter ReferenceType Date entryDate FormalParameter BasicType boolean isDirectory FormalParameter ReferenceType mapper IOException IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation entryName MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace LocalVariableDeclaration BasicType boolean VariableDeclarator included Literal false LocalVariableDeclaration ReferenceType Set VariableDeclarator includePatterns ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Set VariableDeclarator excludePatterns ClassCreator ReferenceType HashSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator v Literal 0 VariableDeclarator size MethodInvocation size BinaryOperation < MemberReference v MemberReference size MemberReference ++ v BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p Cast ReferenceType MethodInvocation MemberReference v elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator incls MethodInvocation p MethodInvocation getProject IfStatement BinaryOperation || BinaryOperation == MemberReference incls Literal null BinaryOperation == MemberReference incls length Literal 0 BlockStatement StatementExpression Assignment MemberReference incls ArrayCreator ReferenceType String ArrayInitializer Literal "**" = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator w Literal 0 BinaryOperation < MemberReference w MemberReference incls length MemberReference ++ w BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MemberReference ArraySelector MemberReference w MethodInvocation Literal '/' MemberReference File separatorChar replace MethodInvocation Literal '\\' MemberReference File separatorChar replace incls IfStatement MethodInvocation pattern MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference pattern Literal "**" += StatementExpression MethodInvocation includePatterns MemberReference pattern add LocalVariableDeclaration ReferenceType String VariableDeclarator excls MethodInvocation p MethodInvocation getProject IfStatement BinaryOperation != MemberReference excls Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator w Literal 0 BinaryOperation < MemberReference w MemberReference excls length MemberReference ++ w BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MemberReference ArraySelector MemberReference w MethodInvocation Literal '/' MemberReference File separatorChar replace MethodInvocation Literal '\\' MemberReference File separatorChar replace excls IfStatement MethodInvocation pattern MemberReference File separator endsWith BlockStatement StatementExpression Assignment MemberReference pattern Literal "**" += StatementExpression MethodInvocation excludePatterns MemberReference pattern add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation includePatterns iterator BinaryOperation && MemberReference ! included MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern Cast ReferenceType String MethodInvocation iter next StatementExpression Assignment MemberReference included MethodInvocation SelectorUtils MemberReference pattern MemberReference name = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation excludePatterns iterator BinaryOperation && MemberReference included MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern Cast ReferenceType String MethodInvocation iter next StatementExpression Assignment MemberReference included MethodInvocation ! SelectorUtils MemberReference pattern MemberReference name = IfStatement MemberReference ! included BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mappedNames MethodInvocation mapper MemberReference entryName mapFileName IfStatement BinaryOperation || BinaryOperation == MemberReference mappedNames Literal null BinaryOperation == MemberReference mappedNames length Literal 0 BlockStatement StatementExpression Assignment MemberReference mappedNames ArrayCreator ReferenceType String ArrayInitializer MemberReference entryName = LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation fileUtils MemberReference dir MemberReference ArraySelector Literal 0 mappedNames TryStatement IfStatement BinaryOperation && BinaryOperation && MemberReference ! overwrite MethodInvocation f exists BinaryOperation >= MethodInvocation f lastModified MethodInvocation entryDate BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Skipping " MemberReference f Literal " as it is MemberReference Project MSG_DEBUG log ReturnStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference entryName Literal " to " MemberReference f MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation f getParentFile IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation mkdirs IfStatement MemberReference isDirectory BlockStatement StatementExpression MethodInvocation f mkdirs BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator length Literal 0 LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos Literal null TryStatement StatementExpression Assignment MemberReference fos ClassCreator ReferenceType FileOutputStream MemberReference f = WhileStatement BinaryOperation >= Assignment MemberReference length MethodInvocation MemberReference buffer read = Literal 0 BlockStatement StatementExpression MethodInvocation fos MemberReference buffer Literal 0 MemberReference length write StatementExpression MethodInvocation fos close StatementExpression Assignment MemberReference fos Literal null = StatementExpression MethodInvocation FileUtils MemberReference fos close StatementExpression MethodInvocation fileUtils MemberReference f MethodInvocation entryDate setFileLastModified CatchClause CatchClauseParameter FileNotFoundException ex StatementExpression MethodInvocation BinaryOperation + Literal "Unable to expand to file " MethodInvocation f getPath MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal ClassReference ReferenceType getProject TryStatement StatementExpression MethodInvocation MethodInvocation Literal Literal setProperty getProject StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject CatchClause CatchClauseParameter BuildException bx StatementExpression MethodInvocation Literal specified, but failed." fail	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal address	0
MethodDeclaration Modifier protected checkConfiguration FormalParameter ReferenceType String descriptorFileName FormalParameter ReferenceType SAXParser saxParser BuildException IfStatement BinaryOperation == MemberReference jonasroot Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The jonasroot is not set." IfStatement MethodInvocation ! jonasroot isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "The jonasroot '" MemberReference jonasroot Literal "' is not a valid directory." IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference orb Literal null MethodInvocation ! orb MemberReference equals MethodInvocation ! orb MemberReference equals MethodInvocation ! orb MemberReference equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The orb '" MemberReference orb Literal "' is not valid be either " MemberReference Literal ", " MemberReference Literal " or " MemberReference Literal ")." IfStatement BinaryOperation && BinaryOperation != MemberReference additionalargs Literal null MethodInvocation additionalargs Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Empty additionalargs IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Empty	1
MethodDeclaration Modifier public static ReferenceType JspCompilerAdapter FormalParameter ReferenceType String compilerType FormalParameter ReferenceType Task task FormalParameter ReferenceType AntClassLoader loader BuildException IfStatement MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType ClassCreator ReferenceType IfStatement MethodInvocation compilerType Literal equalsIgnoreCase BlockStatement ReturnStatement ClassCreator ReferenceType ClassCreator ReferenceType ReturnStatement MethodInvocation MemberReference compilerType MemberReference loader resolveClassName	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Project project ReturnStatement MethodInvocation parent MemberReference project create	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType FileSelector getSelectors FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getSelectors ReturnStatement SuperMethodInvocation MemberReference p getSelectors	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator dir1 MethodInvocation LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal ".." StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer MethodInvocation dir1 getAbsolutePath MethodInvocation getAbsolutePath	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation to Literal "*" lastIndexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement StatementExpression Assignment MemberReference MemberReference to = StatementExpression Assignment MemberReference Literal "" = BlockStatement StatementExpression Assignment MemberReference MethodInvocation to Literal 0 MemberReference index substring = StatementExpression Assignment MemberReference MethodInvocation to BinaryOperation + MemberReference index Literal 1 substring =	1
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType String resourceLocation FormalParameter ReferenceType String paths IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paths length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator element ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i paths IfStatement MethodInvocation ! element exists BlockStatement ContinueStatement IfStatement MethodInvocation element isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator resource ClassCreator ReferenceType File MemberReference element MemberReference resourceLocation IfStatement MethodInvocation resource exists BlockStatement ReturnStatement MemberReference resource BlockStatement LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile Literal null TryStatement StatementExpression Assignment MemberReference zipFile ClassCreator ReferenceType ZipFile MemberReference element = IfStatement BinaryOperation != MethodInvocation zipFile MemberReference resourceLocation getEntry Literal null BlockStatement ReturnStatement MemberReference element IfStatement BinaryOperation != MemberReference zipFile Literal null BlockStatement StatementExpression MethodInvocation zipFile close ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression Assignment This MemberReference text MemberReference text =	0
MethodDeclaration Modifier public ReferenceType String getAttribute ReturnStatement MemberReference attribute	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator testMailServer ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType VariableDeclarator testMailClient ClassCreator ReferenceType StatementExpression MethodInvocation testMailClient Literal Message from StatementExpression MethodInvocation testMailClient Literal StatementExpression MethodInvocation testMailClient Literal "Test StatementExpression MethodInvocation testMailClient BinaryOperation + Literal line Literal line 2" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal test Literal " MemberReference local Literal Literal " MemberReference local Literal " " MemberReference local Literal " to Literal Literal Literal Literal Literal Literal Literal Test Literal Message Literal Literal Literal Literal line Literal line Literal Literal Literal Literal Literal StatementExpression MethodInvocation MethodInvocation length MethodInvocation result length assertEquals StatementExpression MethodInvocation MemberReference MemberReference result assertEquals IfStatement MethodInvocation testMailClient BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient fail	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal expectLog	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference specificationVendor	0
MethodDeclaration Modifier public execute BuildException StatementExpression Assignment MemberReference server ClassCreator ReferenceType MemberReference port = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator f Cast ReferenceType MethodInvocation MemberReference i get StatementExpression MethodInvocation server MemberReference f TryStatement StatementExpression MethodInvocation server Literal false start CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation server	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean backups IfStatement MemberReference backups BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal MemberReference MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final ReferenceType RegexpMatcher ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "DEPRECATED - The " MethodInvocation getTaskName Literal " task is deprecated. " Literal "Use the mail task instead." log StatementExpression SuperMethodInvocation execute	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference add ReturnStatement MemberReference	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project p StatementExpression Assignment This MemberReference project MemberReference p =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String s ReturnStatement MethodInvocation MemberReference s	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private FormalParameter ReferenceType Execute exe LocalVariableDeclaration ReferenceType String VariableDeclarator environment MethodInvocation env getVariables IfStatement BinaryOperation != MemberReference environment Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference environment length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Setting environment variable: " MemberReference ArraySelector MemberReference i environment MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MemberReference StatementExpression MethodInvocation exe MemberReference environment	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator f ClassCreator ReferenceType StatementExpression MethodInvocation f MemberReference project setProject StatementExpression MethodInvocation f MethodInvocation project Literal "." StatementExpression MethodInvocation f Literal StatementExpression MethodInvocation p MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator l MethodInvocation p list StatementExpression MethodInvocation Literal 1 MemberReference l length assertEquals StatementExpression MethodInvocation MethodInvocation project MethodInvocation getAbsolutePath Literal MemberReference ArraySelector Literal 0 l assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType File zipFile StatementExpression MethodInvocation MemberReference zipFile	0
MethodDeclaration Modifier public FormalParameter BasicType boolean symbols StatementExpression Assignment This MemberReference symbols MemberReference symbols =	0
MethodDeclaration Modifier public init FormalParameter ReferenceType String propType FormalParameter ReferenceType AttributeList attrs SAXParseException TryStatement StatementExpression Assignment MemberReference element MethodInvocation helperImpl.project MemberReference propType = IfStatement BinaryOperation == MemberReference element Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unknown data type " MemberReference propType StatementExpression Assignment MemberReference wrapper ClassCreator ReferenceType RuntimeConfigurable MemberReference element MemberReference propType = StatementExpression MethodInvocation wrapper MemberReference attrs StatementExpression MethodInvocation target MemberReference wrapper CatchClause CatchClauseParameter BuildException exc ThrowStatement ClassCreator ReferenceType SAXParseException MethodInvocation exc getMessage MemberReference helperImpl locator MemberReference exc	1
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType IfStatement BinaryOperation == MemberReference success Literal null BlockStatement StatementExpression MethodInvocation Literal "No success element found." MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation MethodInvocation success getSource MethodInvocation success MethodInvocation success IfStatement BinaryOperation == MemberReference fail Literal null BlockStatement StatementExpression MethodInvocation Literal "No element found." MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation MethodInvocation fail getSource MethodInvocation fail MethodInvocation fail StatementExpression MethodInvocation MethodInvocation MemberReference getProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal Literal endsWith assertTrue	0
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Class getElementType FormalParameter ReferenceType String elementName BuildException LocalVariableDeclaration ReferenceType Class VariableDeclarator nt Cast ReferenceType Class MethodInvocation MemberReference elementName get IfStatement BinaryOperation == MemberReference nt Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedElementException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MethodInvocation bean getName Literal " doesn't support the \"" MemberReference elementName Literal "\" MemberReference elementName ReturnStatement MemberReference nt	1
MethodDeclaration Modifier final protected BasicType boolean getInitialized ReturnStatement MemberReference initialized	0
MethodDeclaration Modifier private StatementExpression Assignment This MemberReference Literal true =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected tar FormalParameter ReferenceType ResourceCollection rc FormalParameter ReferenceType tOut IOException LocalVariableDeclaration ReferenceType ArchiveFileSet VariableDeclarator afs Literal null IfStatement BinaryOperation instanceof MemberReference rc ReferenceType ArchiveFileSet BlockStatement StatementExpression Assignment MemberReference afs Cast ReferenceType ArchiveFileSet MemberReference rc = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference afs Literal null BinaryOperation > MethodInvocation afs size Literal 1 BinaryOperation > MethodInvocation afs MethodInvocation length This MethodInvocation getProject getFullpath Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal attribute may only " Literal "be specified for " Literal that a " Literal file." LocalVariableDeclaration ReferenceType TarFileSet VariableDeclarator tfs MethodInvocation MemberReference afs IfStatement MethodInvocation MemberReference rc BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MemberReference rc LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation MemberReference fs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation fs MethodInvocation getProject getDir MemberReference ArraySelector MemberReference i files LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separatorChar Literal '/' replace files StatementExpression MethodInvocation MemberReference f MemberReference tOut MemberReference name MemberReference tfs tarFile IfStatement MethodInvocation rc BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation rc iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator r Cast ReferenceType FileResource MethodInvocation iter next LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation r getFile IfStatement BinaryOperation == MemberReference f Literal null BlockStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType File MethodInvocation r MethodInvocation r getName = StatementExpression MethodInvocation MemberReference f MemberReference tOut MethodInvocation f getName MemberReference tfs tarFile BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation rc iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next StatementExpression MethodInvocation MemberReference r MemberReference tOut MethodInvocation r getName MemberReference tfs	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation MemberReference ReturnStatement TernaryExpression BinaryOperation == MemberReference def Literal null Literal null MethodInvocation def MemberReference project create	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal is not Literal StatementExpression MethodInvocation Literal is Literal	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "."	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType BuildException tooManyAttributes ReturnStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must not more than one " Literal when using refid"	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + Literal MethodInvocation Literal "]"	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public handleErrorOutput FormalParameter ReferenceType String output IfStatement BinaryOperation != MemberReference systemError Literal null BlockStatement StatementExpression MethodInvocation systemError MemberReference output print	0
MethodDeclaration Modifier public endPrefixMapping FormalParameter ReferenceType String prefix StatementExpression MethodInvocation context MemberReference prefix endPrefixMapping	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String asOfDate IfStatement BinaryOperation && BinaryOperation != MemberReference asOfDate Literal null BinaryOperation > MethodInvocation asOfDate length Literal 0 BlockStatement StatementExpression Assignment This MemberReference asOfDate MemberReference asOfDate =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public close IOException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator outShadow This MemberReference out IfStatement BinaryOperation != MemberReference outShadow Literal null BlockStatement TryStatement IfStatement BinaryOperation > This MemberReference runLength Literal 0 BlockStatement StatementExpression MethodInvocation StatementExpression Assignment This MemberReference currentChar Literal - 1 = StatementExpression MethodInvocation StatementExpression MethodInvocation endCompression StatementExpression MethodInvocation outShadow close StatementExpression Assignment This MemberReference out Literal null = StatementExpression Assignment This MemberReference data Literal null =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "unknown" MethodInvocation ClassCreator ReferenceType assertEquals	0
MethodDeclaration Modifier private processFile FormalParameter ReferenceType String file BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator srcFile ClassCreator ReferenceType File MemberReference srcDir MemberReference file LocalVariableDeclaration BasicType long VariableDeclarator lastModified MethodInvocation srcFile lastModified LocalVariableDeclaration ReferenceType File VariableDeclarator TernaryExpression BinaryOperation == MemberReference destDir Literal null MemberReference srcDir MemberReference destDir IfStatement BinaryOperation == MemberReference fcv Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator fc ClassCreator ReferenceType StatementExpression MethodInvocation fc MemberReference filter add StatementExpression Assignment MemberReference fcv ClassCreator ReferenceType Vector Literal 1 = StatementExpression MethodInvocation fcv MemberReference fc add LocalVariableDeclaration ReferenceType File VariableDeclarator tmpFile MethodInvocation FILE_UTILS Literal Literal "" Literal null createTempFile StatementExpression MethodInvocation tmpFile deleteOnExit TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference srcFile MemberReference tmpFile Literal null MemberReference fcv Literal false Literal false MemberReference encoding TernaryExpression BinaryOperation == MemberReference outputEncoding Literal null MemberReference encoding MemberReference outputEncoding MethodInvocation getProject copyFile LocalVariableDeclaration ReferenceType File VariableDeclarator destFile ClassCreator ReferenceType File MemberReference MemberReference file LocalVariableDeclaration BasicType boolean VariableDeclarator destIsWrong Literal true IfStatement MethodInvocation destFile exists BlockStatement StatementExpression MethodInvocation Literal exists" MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference destIsWrong MethodInvocation ! FILE_UTILS MemberReference destFile MemberReference tmpFile = StatementExpression MethodInvocation BinaryOperation + MemberReference destFile TernaryExpression MemberReference destIsWrong Literal " is Literal " is not as the contents are MemberReference Project MSG_DEBUG log IfStatement MemberReference destIsWrong BlockStatement StatementExpression MethodInvocation FILE_UTILS MemberReference tmpFile MemberReference destFile rename IfStatement MemberReference preserveLastModified BlockStatement StatementExpression MethodInvocation Literal MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation FILE_UTILS MemberReference destFile MemberReference lastModified setFileLastModified StatementExpression Assignment MemberReference tmpFile Literal null = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public synchronized setValue FormalParameter ReferenceType String s StatementExpression MethodInvocation MemberReference s setName	0
MethodDeclaration Modifier public FormalParameter ReferenceType list StatementExpression MethodInvocation MemberReference list add	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public static ReferenceType Vector IfStatement BinaryOperation == MemberReference jrePackages Literal null BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference jrePackages	1
MethodDeclaration Modifier public start BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference myHandler ClassCreator ReferenceType PumpStreamHandler ClassCreator ReferenceType P4OutputStream This ClassCreator ReferenceType P4OutputStream This ClassCreator ReferenceType ByteArrayInputStream MethodInvocation getBytes = BlockStatement StatementExpression Assignment MemberReference myHandler ClassCreator ReferenceType PumpStreamHandler ClassCreator ReferenceType P4OutputStream This ClassCreator ReferenceType P4OutputStream This = StatementExpression MethodInvocation myHandler MemberReference os StatementExpression MethodInvocation myHandler MemberReference StatementExpression MethodInvocation myHandler MemberReference is setProcessOutputStream StatementExpression MethodInvocation myHandler start	1
MethodDeclaration Modifier public ReferenceType String replaceProperties FormalParameter ReferenceType String ns FormalParameter ReferenceType String value FormalParameter ReferenceType Hashtable keys BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation == MethodInvocation value Literal '$' indexOf Literal - 1 BlockStatement ReturnStatement MemberReference value LocalVariableDeclaration ReferenceType Vector VariableDeclarator fragments ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator propertyRefs ClassCreator ReferenceType Vector StatementExpression MethodInvocation MemberReference value MemberReference fragments MemberReference propertyRefs parsePropertyString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation fragments elements LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator j MethodInvocation propertyRefs elements WhileStatement MethodInvocation i hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fragment Cast ReferenceType String MethodInvocation i nextElement IfStatement BinaryOperation == MemberReference fragment Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName Cast ReferenceType String MethodInvocation j nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator replacement Literal null IfStatement BinaryOperation != MemberReference keys Literal null BlockStatement StatementExpression Assignment MemberReference replacement MethodInvocation keys MemberReference propertyName get = IfStatement BinaryOperation == MemberReference replacement Literal null BlockStatement StatementExpression Assignment MemberReference replacement MethodInvocation MemberReference ns MemberReference propertyName getProperty = IfStatement BinaryOperation == MemberReference replacement Literal null BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal "Property \"" MemberReference propertyName Literal "\" has not been set" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference fragment TernaryExpression BinaryOperation != MemberReference replacement Literal null MethodInvocation replacement toString BinaryOperation + BinaryOperation + Literal "${" MemberReference propertyName Literal "}" = StatementExpression MethodInvocation sb MemberReference fragment append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier protected FormalParameter ReferenceType handler StatementExpression MethodInvocation handler MemberReference PUBLICID_EJB11 MemberReference registerDTD StatementExpression MethodInvocation handler MemberReference PUBLICID_EJB11 MemberReference registerDTD StatementExpression MethodInvocation handler MemberReference PUBLICID_EJB11 MemberReference registerDTD StatementExpression MethodInvocation handler MemberReference MemberReference registerDTD	1
MethodDeclaration Modifier public BasicType int getPort ReturnStatement This MemberReference port	0
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference MemberReference enable =	0
MethodDeclaration Modifier private static BuildException StatementExpression MethodInvocation System.out MethodInvocation println	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Folder FormalParameter ReferenceType java ReferenceType io ReferenceType File StatementExpression MethodInvocation BinaryOperation + BinaryOperation + TernaryExpression This MethodInvocation isRecursive Literal Literal Literal " of: " MethodInvocation log StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal against local folder" TernaryExpression BinaryOperation == Literal null MethodInvocation Literal " " Literal ": " MethodInvocation getAbsolutePath MemberReference Project MSG_INFO log StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean debug StatementExpression Assignment This MemberReference debug MemberReference debug =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Class findClass FormalParameter ReferenceType String name ClassNotFoundException StatementExpression MethodInvocation BinaryOperation + Literal "Finding class " MemberReference name MemberReference Project MSG_DEBUG log ReturnStatement MethodInvocation MemberReference name	1
MethodDeclaration Modifier public ReferenceType String getTaskName ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator length MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement TryStatement StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation String MemberReference i valueOf MemberReference ArraySelector MemberReference i MemberReference ArraySelector MemberReference i assertEquals CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException StatementExpression MethodInvocation BinaryOperation + Literal arg " MemberReference ArraySelector MemberReference i fail IfStatement BinaryOperation > MemberReference length MemberReference length BlockStatement StatementExpression MethodInvocation Literal fail	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getVersion Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getVersion setValue createArgument	0
MethodDeclaration Modifier public FormalParameter ReferenceType String max StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + Literal MemberReference max setValue createArgument	0
MethodDeclaration Modifier private IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue Cast ReferenceType UnknownElement MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation ProjectHelper MethodInvocation MemberReference toLowerCase MethodInvocation ue getTag IfStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference name get Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "unsupported element " MemberReference name IfStatement BinaryOperation != MethodInvocation presentElements MemberReference name get Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference name Literal " already StatementExpression MethodInvocation presentElements MemberReference name MemberReference ue put	1
MethodDeclaration Modifier public FormalParameter Modifier final BasicType char endToken StatementExpression Assignment This MemberReference endToken MemberReference endToken =	0
MethodDeclaration Modifier public execute StatementExpression Assignment MemberReference helper jc MethodInvocation = StatementExpression MethodInvocation MethodInvocation Literal MemberReference project put LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference project StatementExpression MethodInvocation helper MethodInvocation StatementExpression MethodInvocation helper MemberReference project setProject StatementExpression MethodInvocation MemberReference helper	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef ReturnStatement BinaryOperation * MemberReference MAGIC TernaryExpression BinaryOperation == MethodInvocation getFile Literal null MemberReference MethodInvocation MethodInvocation hashCode getFile	1
MethodDeclaration Modifier private init IOException LocalVariableDeclaration BasicType int VariableDeclarator This MemberReference in MethodInvocation read IfStatement BinaryOperation != MemberReference Literal 'h' BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal is not expected Literal " as first byte but got '" Cast BasicType char MemberReference Literal "'" LocalVariableDeclaration BasicType int VariableDeclarator blockSize This MemberReference in MethodInvocation read IfStatement BinaryOperation || BinaryOperation < MemberReference blockSize Literal '1' BinaryOperation > MemberReference blockSize Literal '9' BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal is not illegal " Literal " Cast BasicType char MemberReference blockSize StatementExpression Assignment This MemberReference BinaryOperation - MemberReference blockSize Literal '0' = StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier private validate IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference sourceFile Literal null MethodInvocation ! sourceFile exists MethodInvocation ! sourceFile isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "invalid source" IfStatement BinaryOperation || BinaryOperation == MemberReference destFile Literal null MethodInvocation destFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "invalid IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation || MethodInvocation ! exists MethodInvocation ! isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "invalid resource directory"	0
MethodDeclaration Modifier public FormalParameter ReferenceType bl StatementExpression MethodInvocation project MemberReference bl	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MethodInvocation Jar Literal ArrayCreator ReferenceType String ArrayInitializer Literal "foo" Literal Literal assertEquals	0
MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference ftp MemberReference dsfile	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument expectBuildException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation BinaryOperation / MemberReference Literal 2 getCommandline StatementExpression MethodInvocation ej MemberReference cmd setJavaCommand StatementExpression MethodInvocation ej MemberReference cp fork StatementExpression MethodInvocation Literal "process should not have been killed" MethodInvocation ! ej killedProcess assertTrue	1
MethodDeclaration Modifier public write FormalParameter BasicType byte b IOException StatementExpression MethodInvocation left MemberReference b write StatementExpression MethodInvocation right MemberReference b write	1
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal " " MethodInvocation evt getName println StatementExpression MethodInvocation MethodInvocation MethodInvocation evt MethodInvocation getError println	0
MethodDeclaration * add files * @param fs the file set to */ Modifier public FormalParameter ReferenceType ZipFileSet fs StatementExpression MethodInvocation fs Literal StatementExpression SuperMethodInvocation MemberReference fs	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument	0
MethodDeclaration Modifier public endTestSuite FormalParameter ReferenceType JUnitTest suite BuildException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "Tests run: " StatementExpression MethodInvocation sb MethodInvocation suite append StatementExpression MethodInvocation sb Literal ", Failures: " append StatementExpression MethodInvocation sb MethodInvocation suite failureCount append StatementExpression MethodInvocation sb Literal ", Errors: " append StatementExpression MethodInvocation sb MethodInvocation suite append StatementExpression MethodInvocation sb Literal ", Time " append StatementExpression MethodInvocation sb MethodInvocation nf BinaryOperation / MethodInvocation suite Literal format append StatementExpression MethodInvocation sb Literal " append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation && BinaryOperation != MemberReference systemOutput Literal null BinaryOperation > MethodInvocation systemOutput length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference StringUtils LINE_SEP append MethodInvocation MemberReference systemOutput append MethodInvocation Literal "------------- ---------------- ---------------" append MethodInvocation MemberReference StringUtils LINE_SEP append Literal "------------- Standard Output ---------------" append IfStatement BinaryOperation && BinaryOperation != MemberReference systemError Literal null BinaryOperation > MethodInvocation systemError length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference StringUtils LINE_SEP append MethodInvocation MemberReference systemError append MethodInvocation Literal "------------- ---------------- ---------------" append MethodInvocation MemberReference StringUtils LINE_SEP append Literal "------------- Standard Error -----------------" append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != MemberReference out Literal null BlockStatement TryStatement StatementExpression MethodInvocation out MethodInvocation sb MethodInvocation getBytes toString write StatementExpression MethodInvocation wri close StatementExpression MethodInvocation out MethodInvocation inner MethodInvocation getBytes toString write StatementExpression MethodInvocation out flush CatchClause CatchClauseParameter IOException ioex ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write MemberReference ioex IfStatement BinaryOperation && BinaryOperation != MemberReference out MemberReference System out BinaryOperation != MemberReference out MemberReference System err BlockStatement StatementExpression MethodInvocation FileUtils MemberReference out close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal ClassReference ReferenceType getProject TryStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression MethodInvocation Literal after fail CatchClause CatchClauseParameter BuildException bx	1
MethodDeclaration Modifier private ReferenceType TestResultHolder executeInVM FormalParameter ReferenceType JUnitTest arg BuildException LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator test Cast ReferenceType JUnitTest MethodInvocation arg clone StatementExpression MethodInvocation test MethodInvocation MethodInvocation getProperties getProject setProperties IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement StatementExpression MethodInvocation Literal "dir attribute ignored if running in the same MemberReference Project MSG_WARN log IfStatement BinaryOperation || MemberReference BinaryOperation != Literal null MethodInvocation env getVariables BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal to environment variables are ignored if running in " Literal "the same MemberReference Project MSG_WARN log IfStatement BinaryOperation != MethodInvocation MethodInvocation getCommandline Literal null BlockStatement StatementExpression MethodInvocation Literal is ignored if running in the same MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType CommandlineJava ReferenceType VariableDeclarator sysProperties MethodInvocation MethodInvocation getCommandline IfStatement BinaryOperation != MemberReference sysProperties Literal null BlockStatement StatementExpression MethodInvocation sysProperties TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Using System properties " MethodInvocation System getProperties MemberReference Project MSG_VERBOSE log IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference classLoader Cast ReferenceType AntClassLoader MethodInvocation MethodInvocation getClassLoader getClass = BlockStatement StatementExpression MethodInvocation createClassLoader IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement StatementExpression MethodInvocation classLoader StatementExpression Assignment MemberReference runner MethodInvocation MemberReference test MethodInvocation test MethodInvocation test MethodInvocation test Literal false Literal true MemberReference classLoader = IfStatement MemberReference summary BlockStatement LocalVariableDeclaration ReferenceType JUnitTaskMirror ReferenceType VariableDeclarator f MethodInvocation StatementExpression MethodInvocation f Literal MethodInvocation MemberReference equalsIgnoreCase "withoutanderr" StatementExpression MethodInvocation f MethodInvocation StatementExpression MethodInvocation runner MemberReference f StatementExpression MethodInvocation runner MemberReference perm LocalVariableDeclaration Modifier final ReferenceType FormatterElement VariableDeclarator feArray MethodInvocation MemberReference test mergeFormatters ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference feArray length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FormatterElement VariableDeclarator fe MemberReference ArraySelector MemberReference i feArray IfStatement MethodInvocation fe This BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator outFile MethodInvocation MemberReference fe MemberReference test getOutput IfStatement BinaryOperation != MemberReference outFile Literal null BlockStatement StatementExpression MethodInvocation fe MemberReference outFile BlockStatement StatementExpression MethodInvocation fe MethodInvocation StatementExpression MethodInvocation runner MethodInvocation fe MemberReference classLoader createFormatter StatementExpression MethodInvocation runner run LocalVariableDeclaration ReferenceType TestResultHolder VariableDeclarator result ClassCreator ReferenceType TestResultHolder StatementExpression Assignment MemberReference result exitCode MethodInvocation runner = ReturnStatement MemberReference result IfStatement BinaryOperation != MemberReference sysProperties Literal null BlockStatement StatementExpression MethodInvocation sysProperties IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement StatementExpression MethodInvocation classLoader	1
MethodDeclaration Modifier protected ReferenceType File ReturnStatement MemberReference inFile	0
MethodDeclaration Modifier public maybeConfigure BuildException LocalVariableDeclaration ReferenceType ProjectComponentHelper VariableDeclarator helper MethodInvocation ProjectComponentHelper StatementExpression Assignment MemberReference realThing MethodInvocation helper This MethodInvocation getProject Literal null This MethodInvocation getTag = IfStatement BinaryOperation == MemberReference realThing Literal null BlockStatement ThrowStatement MethodInvocation Literal or type" This MethodInvocation getTag StatementExpression MethodInvocation MethodInvocation MemberReference realThing IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MemberReference realThing StatementExpression MethodInvocation task This MethodInvocation getLocation setLocation StatementExpression MethodInvocation task This MethodInvocation getOwningTarget setOwningTarget StatementExpression MethodInvocation task init StatementExpression MethodInvocation task MethodInvocation StatementExpression This MethodInvocation getOwningTarget MethodInvocation This Cast ReferenceType Task MemberReference realThing StatementExpression MethodInvocation MemberReference realThing MethodInvocation handleChildren StatementExpression MethodInvocation MethodInvocation MethodInvocation getProject maybeConfigure	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s FormalParameter ReferenceType Integer timeout LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is This MethodInvocation getInputStream TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference timeout Literal null BinaryOperation == MethodInvocation timeout intValue Literal 0 BlockStatement WhileStatement BinaryOperation == MethodInvocation sb MethodInvocation MemberReference s indexOf toString Literal - 1 BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MethodInvocation is read append BlockStatement LocalVariableDeclaration ReferenceType Calendar VariableDeclarator endTime MethodInvocation Calendar getInstance StatementExpression MethodInvocation endTime MemberReference Calendar SECOND MethodInvocation timeout intValue add WhileStatement BinaryOperation == MethodInvocation sb MethodInvocation MemberReference s indexOf toString Literal - 1 BlockStatement WhileStatement BinaryOperation && MethodInvocation Calendar MethodInvocation MemberReference endTime before getInstance BinaryOperation == MethodInvocation is available Literal 0 BlockStatement StatementExpression MethodInvocation Thread Literal 250 sleep IfStatement BinaryOperation == MethodInvocation is available Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal before running into " MethodInvocation sb toString MemberReference Project MSG_DEBUG log ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Response waiting for \"" MemberReference s Literal '\"' MethodInvocation getLocation StatementExpression MethodInvocation sb Cast BasicType char MethodInvocation is read append StatementExpression MethodInvocation MethodInvocation sb toString MemberReference Project MSG_INFO log CatchClause CatchClauseParameter BuildException be ThrowStatement MemberReference be CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String driver StatementExpression Assignment This MemberReference driver MethodInvocation driver trim =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference executeTarget StatementExpression MethodInvocation Literal test count MethodInvocation BinaryOperation + MemberReference Literal to run: " assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType String max StatementExpression Assignment MemberReference MemberReference max =	0
MethodDeclaration Modifier public IfStatement BinaryOperation || MethodInvocation Os Literal isFamily MethodInvocation Os Literal "dos" isFamily BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference File separator localize MethodInvocation p MethodInvocation getPath Literal "/" Literal null StatementExpression MethodInvocation MethodInvocation MemberReference File separator localize MethodInvocation p MethodInvocation getPath Literal "\\" Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "/" Literal null StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "\\" Literal null StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference Literal "/" Literal null StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference Literal "\\" Literal null StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal Literal null StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal Literal null BlockStatement StatementExpression MethodInvocation MemberReference File separator MethodInvocation p MethodInvocation getPath Literal "/" Literal null assertEquals StatementExpression MethodInvocation MemberReference File separator MethodInvocation p MethodInvocation getPath Literal "\\" Literal null assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation System Literal "user.dir" getProperty MemberReference File separatorChar StatementExpression MethodInvocation BinaryOperation + MemberReference MemberReference driveSpec MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "/" Literal null assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference MemberReference driveSpec MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "\\" Literal null assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation BinaryOperation + MemberReference MemberReference MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference Literal "/" Literal null assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference MemberReference MethodInvocation p MethodInvocation getPath BinaryOperation + MemberReference Literal "\\" Literal null assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation p MethodInvocation getPath Literal ClassCreator ReferenceType File MethodInvocation Literal localize assertEquals	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal Literal "alpha/beta/gamma" LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds MemberReference MemberReference compareFiles StatementExpression Assignment MemberReference ds ClassCreator ReferenceType DirectoryScanner = StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds MemberReference MemberReference compareFiles	0
MethodDeclaration Modifier public ReferenceType RegexpMatcher ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier protected ReferenceType URLConnection FormalParameter ReferenceType URLConnection connection BuildException IOException LocalVariableDeclaration BasicType int VariableDeclarator size Cast BasicType int MethodInvocation length StatementExpression MethodInvocation BinaryOperation + Literal file " MemberReference MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType InputStream VariableDeclarator instream ClassCreator ReferenceType FileInputStream MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator type MemberReference contentType IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference type MethodInvocation MethodInvocation getName = ReturnStatement MethodInvocation MemberReference connection MemberReference type MemberReference size MemberReference instream	1
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference MemberReference enable =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType ps StatementExpression MethodInvocation MemberReference ps addElement	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Process process SynchronizedStatement MemberReference processes LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation processes MemberReference process removeElement IfStatement BinaryOperation && MemberReference BinaryOperation == MethodInvocation processes size Literal 0 BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference	1
MethodDeclaration Modifier public final static ReferenceType String FormalParameter ReferenceType XClass clazz LocalVariableDeclaration ReferenceType String VariableDeclarator tagValue MethodInvocation clazz MethodInvocation Literal "ant.task" Literal getTagAttributeValue getDoc IfStatement BinaryOperation != MemberReference tagValue Literal null BlockStatement StatementExpression Assignment MemberReference tagValue MethodInvocation tagValue toLowerCase = BlockStatement StatementExpression Assignment MemberReference tagValue MemberReference = ReturnStatement MemberReference tagValue	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject TryStatement StatementExpression MethodInvocation Literal Literal "from included entity in expectLog CatchClause CatchClauseParameter Throwable t ThrowStatement ClassCreator ReferenceType AssertionFailedError BinaryOperation + BinaryOperation + MethodInvocation t toString Literal "; MethodInvocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation fileset MemberReference	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation Literal getFile StatementExpression MethodInvocation liaison MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator in MethodInvocation Literal getFile LocalVariableDeclaration ReferenceType File VariableDeclarator out ClassCreator ReferenceType File Literal StatementExpression MethodInvocation out deleteOnExit TryStatement StatementExpression MethodInvocation liaison MemberReference in MemberReference out transform LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation MemberReference out StatementExpression MethodInvocation Literal "root" MethodInvocation doc MethodInvocation getNodeName assertEquals StatementExpression MethodInvocation Literal "message" MethodInvocation doc MethodInvocation getFirstChild MethodInvocation getNodeName assertEquals StatementExpression MethodInvocation Literal MethodInvocation doc MethodInvocation getFirstChild MethodInvocation getFirstChild MethodInvocation getNodeValue assertEquals StatementExpression MethodInvocation out delete	0
MethodDeclaration Modifier public BasicType boolean hasBeenSet ReturnStatement BinaryOperation || BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation ! This MemberReference equals BlockStatement StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public synchronized mark FormalParameter Modifier final BasicType int limit TryStatement StatementExpression MethodInvocation in MemberReference limit mark CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType RuntimeException MethodInvocation ioe getMessage	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument expectBuildException	0
MethodDeclaration * if the proxy port and host settings are not null, then the * get applied settings last beyond the of the object * apply to all * */ Modifier public LocalVariableDeclaration BasicType boolean VariableDeclarator settingsChanged Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator enablingProxy Literal false LocalVariableDeclaration ReferenceType Properties VariableDeclarator sysprops MethodInvocation System getProperties IfStatement BinaryOperation != MemberReference proxyHost Literal null BlockStatement StatementExpression Assignment MemberReference settingsChanged Literal true = IfStatement BinaryOperation != MethodInvocation proxyHost length Literal 0 BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference enablingProxy Literal true = StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference proxyHost put LocalVariableDeclaration ReferenceType String VariableDeclarator portString MethodInvocation Integer MemberReference proxyPort toString StatementExpression MethodInvocation sysprops MemberReference ProxySetup HTTP_PROXY_PORT MemberReference portString put StatementExpression MethodInvocation sysprops MemberReference ProxySetup HTTPS_PROXY_HOST MemberReference proxyHost put StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference portString put StatementExpression MethodInvocation sysprops MemberReference ProxySetup FTP_PROXY_HOST MemberReference proxyHost put StatementExpression MethodInvocation sysprops MemberReference ProxySetup FTP_PROXY_PORT MemberReference portString put IfStatement BinaryOperation != MemberReference nonProxyHosts Literal null BlockStatement StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference nonProxyHosts put StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference nonProxyHosts put StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference nonProxyHosts put IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation sysprops MemberReference ProxySetup HTTP_PROXY_USERNAME MemberReference put StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference put BlockStatement StatementExpression MethodInvocation Literal http proxy" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation sysprops MemberReference ProxySetup remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup HTTP_PROXY_PORT remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup HTTP_PROXY_USERNAME remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup HTTPS_PROXY_HOST remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup FTP_PROXY_HOST remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup FTP_PROXY_PORT remove IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference settingsChanged Literal true = IfStatement BinaryOperation != MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference enablingProxy Literal true = StatementExpression MethodInvocation sysprops MemberReference ProxySetup SOCKS_PROXY_HOST MemberReference put StatementExpression MethodInvocation sysprops MemberReference ProxySetup SOCKS_PROXY_PORT MethodInvocation Integer MemberReference toString put IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation sysprops MemberReference ProxySetup SOCKS_PROXY_USERNAME MemberReference put StatementExpression MethodInvocation sysprops MemberReference ProxySetup MemberReference put BlockStatement StatementExpression MethodInvocation Literal proxy" MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation sysprops MemberReference ProxySetup SOCKS_PROXY_HOST remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup SOCKS_PROXY_PORT remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup SOCKS_PROXY_USERNAME remove StatementExpression MethodInvocation sysprops MemberReference ProxySetup remove IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MemberReference enablingProxy BlockStatement StatementExpression MethodInvocation Authenticator ClassCreator ReferenceType MemberReference MemberReference setDefault IfStatement MemberReference settingsChanged BlockStatement StatementExpression MethodInvocation Authenticator ClassCreator ReferenceType Literal "" Literal "" setDefault	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType FileSelector selector ReturnStatement MethodInvocation MemberReference MemberReference files MemberReference selector	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation ClassCreator ReferenceType Literal	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference DIRECTORY MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference xmlReader	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference Literal "-" Literal "+"	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private log FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator w ClassCreator ReferenceType PrintWriter MemberReference sw StatementExpression MethodInvocation t MemberReference w printStackTrace StatementExpression MethodInvocation w close StatementExpression MethodInvocation MethodInvocation sw toString MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive IfStatement BinaryOperation != MethodInvocation str MemberReference File separator startsWith MethodInvocation pattern MemberReference File separator startsWith BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Vector VariableDeclarator patDirs ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference pattern MemberReference File separator WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation patDirs MethodInvocation st nextToken addElement LocalVariableDeclaration ReferenceType Vector VariableDeclarator strDirs ClassCreator ReferenceType Vector StatementExpression Assignment MemberReference st ClassCreator ReferenceType StringTokenizer MemberReference str MemberReference File separator = WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation strDirs MethodInvocation st nextToken addElement LocalVariableDeclaration BasicType int VariableDeclarator patIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator patIdxEnd BinaryOperation - MethodInvocation patDirs size Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator strIdxStart Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator strIdxEnd BinaryOperation - MethodInvocation strDirs size Literal 1 WhileStatement BinaryOperation && BinaryOperation <= MemberReference patIdxStart MemberReference patIdxEnd BinaryOperation <= MemberReference strIdxStart MemberReference strIdxEnd BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation patDirs MemberReference patIdxStart elementAt IfStatement MethodInvocation Literal "**" equals BlockStatement BreakStatement IfStatement MethodInvocation ! MemberReference Cast ReferenceType String MethodInvocation strDirs MemberReference strIdxStart elementAt MemberReference isCaseSensitive match BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ patIdxStart StatementExpression MemberReference ++ strIdxStart IfStatement BinaryOperation > MemberReference strIdxStart MemberReference strIdxEnd BlockStatement ReturnStatement Literal true IfStatement BinaryOperation > MemberReference patIdxStart MemberReference patIdxEnd BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement Literal true	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType VariableDeclarator MemberReference path LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference pathSep LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference TryStatement IfStatement MethodInvocation isReference BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation refid MethodInvocation getProject getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType ResourceCollection BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal '" MethodInvocation refid getRefId Literal "' does not refer to a resource StatementExpression MethodInvocation MethodInvocation Cast ReferenceType ResourceCollection MemberReference o add getPath StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator fromDirSep TernaryExpression MemberReference onWindows Literal "\\" Literal "/" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator rslt ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator elems MethodInvocation path list IfStatement BinaryOperation != MemberReference mapper Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator impl MethodInvocation mapper LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elems length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mapped MethodInvocation impl MemberReference ArraySelector MemberReference i elems mapFileName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator m Literal 0 BinaryOperation && BinaryOperation != MemberReference mapped Literal null BinaryOperation < MemberReference m MemberReference mapped length MemberReference ++ m BlockStatement StatementExpression MethodInvocation ret MemberReference ArraySelector MemberReference m mapped add StatementExpression Assignment MemberReference elems Cast ReferenceType String MethodInvocation ret ArrayCreator ReferenceType String MethodInvocation ret size toArray = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elems length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator elem MethodInvocation MemberReference ArraySelector MemberReference i elems IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation rslt MemberReference pathSep append LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator stDirectory ClassCreator ReferenceType StringTokenizer MemberReference elem MemberReference fromDirSep Literal true WhileStatement MethodInvocation stDirectory hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation stDirectory nextToken StatementExpression MethodInvocation rslt TernaryExpression MethodInvocation fromDirSep MemberReference token equals MemberReference MemberReference token append IfStatement BinaryOperation || MemberReference BinaryOperation > MethodInvocation rslt length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation rslt toString IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation MemberReference value log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal property " MemberReference property Literal " = " MemberReference value MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference value setNewProperty getProject StatementExpression Assignment MemberReference path MemberReference = StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference pathSep MemberReference =	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal MemberReference	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference server Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Specified" IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation != MemberReference password Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Specified" IfStatement BinaryOperation && BinaryOperation == MemberReference password Literal null BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No Specified" LocalVariableDeclaration ReferenceType AntTelnetClient VariableDeclarator telnet Literal null TryStatement StatementExpression Assignment MemberReference telnet ClassCreator ReferenceType AntTelnetClient = TryStatement StatementExpression MethodInvocation telnet MemberReference server MemberReference port connect CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Can't connect to " MemberReference server IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference password Literal null BlockStatement StatementExpression MethodInvocation MemberReference telnet LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation elements WhileStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator task Cast ReferenceType MethodInvocation nextElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference task ReferenceType BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Cast ReferenceType MemberReference task StatementExpression MethodInvocation task MemberReference telnet execute IfStatement BinaryOperation && BinaryOperation != MemberReference telnet Literal null MethodInvocation telnet BlockStatement TryStatement StatementExpression MethodInvocation telnet disconnect CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error from " MemberReference server	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public setDirectory FormalParameter ReferenceType File directory StatementExpression Assignment This MemberReference directory MemberReference directory =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation Literal getProject StatementExpression MethodInvocation Literal "starting empty" MethodInvocation ! f exists assertTrue StatementExpression MethodInvocation Literal Literal expectLogContaining StatementExpression MethodInvocation Literal it is MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier public final FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String encode FormalParameter BasicType byte octetString LocalVariableDeclaration BasicType int VariableDeclarator bits24 LocalVariableDeclaration BasicType int VariableDeclarator bits6 LocalVariableDeclaration BasicType char VariableDeclarator out ArrayCreator BasicType char BinaryOperation * BinaryOperation + BinaryOperation / BinaryOperation - MemberReference octetString length Literal 1 Literal 3 Literal 1 Literal 4 LocalVariableDeclaration BasicType int VariableDeclarator outIndex Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement BinaryOperation <= BinaryOperation + MemberReference i Literal 3 MemberReference octetString length BlockStatement StatementExpression Assignment MemberReference bits24 BinaryOperation << BinaryOperation & MemberReference ArraySelector MemberReference ++ i octetString Literal 0xFF Literal 16 = StatementExpression Assignment MemberReference bits24 BinaryOperation << BinaryOperation & MemberReference ArraySelector MemberReference ++ i octetString Literal 0xFF Literal 8 |= StatementExpression Assignment MemberReference bits24 MemberReference ArraySelector MemberReference ++ i octetString |= StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal 0x00FC0000 Literal 18 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal Literal 12 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal Literal 6 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference bits6 BinaryOperation & MemberReference bits24 Literal = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = IfStatement BinaryOperation == BinaryOperation - MemberReference octetString length MemberReference i Literal 2 BlockStatement StatementExpression Assignment MemberReference bits24 BinaryOperation << BinaryOperation & MemberReference ArraySelector MemberReference i octetString Literal 0xFF Literal 16 = StatementExpression Assignment MemberReference bits24 BinaryOperation << BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 octetString Literal 0xFF Literal 8 |= StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal 0x00FC0000 Literal 18 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal Literal 12 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal Literal 6 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out Literal '=' = IfStatement BinaryOperation == BinaryOperation - MemberReference octetString length MemberReference i Literal 1 BlockStatement StatementExpression Assignment MemberReference bits24 BinaryOperation << BinaryOperation & MemberReference ArraySelector MemberReference i octetString Literal 0xFF Literal 16 = StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal 0x00FC0000 Literal 18 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference bits6 BinaryOperation >> BinaryOperation & MemberReference bits24 Literal Literal 12 = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out MemberReference ArraySelector MemberReference bits6 ALPHABET = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out Literal '=' = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ outIndex out Literal '=' = ReturnStatement ClassCreator ReferenceType String MemberReference out	1
MethodDeclaration Modifier public FormalParameter ReferenceType String fileext StatementExpression Assignment This MemberReference fileext MemberReference fileext =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier protected ReferenceType Commandline FormalParameter ReferenceType Commandline cmd ReturnStatement MethodInvocation MemberReference cmd Literal false	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLog	0
MethodDeclaration Modifier public FormalParameter ReferenceType String u StatementExpression Assignment This MemberReference MemberReference u =	0
MethodDeclaration Modifier private IOException IfStatement BinaryOperation < This MemberReference This MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator su_ch2Shadow This MemberReference su_ch2 StatementExpression Assignment This MemberReference currentChar MemberReference su_ch2Shadow = StatementExpression This MemberReference crc MethodInvocation MemberReference su_ch2Shadow StatementExpression This ++ MemberReference StatementExpression Assignment This MemberReference MemberReference = BlockStatement StatementExpression This ++ MemberReference su_i2 StatementExpression Assignment This MemberReference su_count Literal 0 = StatementExpression MethodInvocation	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "identity" Literal Literal Literal Literal Literal "package" Literal	0
MethodDeclaration IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation MemberReference i elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation MemberReference i elementAt StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference name Literal ": " MemberReference value println StatementExpression MethodInvocation out println StatementExpression MethodInvocation out flush	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation != This MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one StatementExpression Assignment This MemberReference ClassCreator ReferenceType = ReturnStatement This MemberReference	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property StatementExpression Assignment This MemberReference property MemberReference property =	0
MethodDeclaration Modifier protected ReferenceType IfStatement BinaryOperation == MemberReference monitor Literal null BlockStatement StatementExpression Assignment MemberReference monitor ClassCreator ReferenceType ProgressMonitor = ReturnStatement MemberReference monitor	0
MethodDeclaration Modifier public handleInput FormalParameter ReferenceType InputRequest request BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator prompt MethodInvocation MemberReference request getPrompt LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in MethodInvocation getInputStream = StatementExpression MethodInvocation System.err MemberReference prompt println StatementExpression MethodInvocation System.err flush LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType StreamPumper VariableDeclarator p ClassCreator ReferenceType StreamPumper MemberReference in MemberReference baos LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread MemberReference p StatementExpression MethodInvocation t start TryStatement StatementExpression MethodInvocation t join CatchClause CatchClauseParameter InterruptedException e TryStatement StatementExpression MethodInvocation t join CatchClause CatchClauseParameter InterruptedException e2 StatementExpression MethodInvocation request ClassCreator ReferenceType String MethodInvocation baos toByteArray IfStatement MethodInvocation ! request BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal invalid console IfStatement BinaryOperation != MethodInvocation p getException Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Failed to read input from MethodInvocation p getException StatementExpression MethodInvocation FileUtils MemberReference in close	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal " StatementExpression MethodInvocation buf MemberReference append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier private ReferenceType OutputStream foldFiles FormalParameter ReferenceType File file FormalParameter ReferenceType String logHead FormalParameter BasicType int loglevel LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator result ClassCreator ReferenceType MemberReference ArraySelector Literal 0 file MemberReference append MemberReference createEmptyFiles StatementExpression MethodInvocation managingTask BinaryOperation + MemberReference logHead MemberReference ArraySelector Literal 0 file MemberReference loglevel log LocalVariableDeclaration BasicType char VariableDeclarator c ArrayCreator BasicType char MethodInvocation logHead length StatementExpression MethodInvocation Arrays MemberReference c Literal ' ' fill LocalVariableDeclaration ReferenceType String VariableDeclarator indent ClassCreator ReferenceType String MemberReference c ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference file length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference outputStream ClassCreator ReferenceType TeeOutputStream MemberReference outputStream ClassCreator ReferenceType MemberReference ArraySelector MemberReference i file MemberReference append MemberReference createEmptyFiles = StatementExpression MethodInvocation managingTask BinaryOperation + MemberReference indent MemberReference ArraySelector MemberReference i file MemberReference loglevel log ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected BasicType long ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal is not Literal StatementExpression MethodInvocation Literal is Literal	0
MethodDeclaration Modifier public ReferenceType String BuildException IOException ReturnStatement Literal ""	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "exception" Literal "Should have thrown an exception in the script" Literal expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference destDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression MethodInvocation MemberReference file	1
MethodDeclaration Modifier public FormalParameter ReferenceType s StatementExpression MethodInvocation MethodInvocation MemberReference s append	0
MethodDeclaration ReferenceType Object ReturnStatement MemberReference realObject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference config MemberReference =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType Field VariableDeclarator fields MethodInvocation clazz getDeclaredFields ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fields length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator fieldEntry MemberReference ArraySelector MemberReference i fields IfStatement MethodInvocation fieldEntry MethodInvocation MemberReference field equals getName BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public stop StatementExpression MethodInvocation myHandler stop	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String name ReturnStatement MethodInvocation name MethodInvocation Literal '/' Literal '.' replace Literal '\\' Literal '.' replace	0
MethodDeclaration Modifier public FormalParameter ReferenceType Attribute attribute IfStatement BinaryOperation == MethodInvocation attribute getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the attribute element needed a attribute" IfStatement MethodInvocation attribute MethodInvocation MemberReference textName equals getName BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "the name \"" MethodInvocation attribute getName Literal "\" has already been used by the text ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attributes size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator Cast ReferenceType Attribute MethodInvocation attributes MemberReference i get IfStatement MethodInvocation MethodInvocation MethodInvocation attribute getName equals getName BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "the name \"" MethodInvocation attribute getName Literal "\" has already been used in " Literal attribute StatementExpression MethodInvocation attributes MemberReference attribute add	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "."	0
MethodDeclaration closeQuietly StatementExpression MethodInvocation FileUtils MemberReference writer close	0
MethodDeclaration Modifier public append FormalParameter ReferenceType other FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot append to a reference" LocalVariableDeclaration ReferenceType String VariableDeclarator incl MethodInvocation other MemberReference p IfStatement BinaryOperation != MemberReference incl Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference incl length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i incl setName LocalVariableDeclaration ReferenceType String VariableDeclarator excl MethodInvocation other MemberReference p IfStatement BinaryOperation != MemberReference excl Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference excl length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i excl setName	1
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration BasicType int VariableDeclarator priority MethodInvocation event getPriority IfStatement BinaryOperation > MemberReference priority MemberReference msgOutputLevel BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator messageElement MethodInvocation doc MemberReference createElement LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal "debug" SwitchStatement MethodInvocation event getPriority SwitchStatementCase MemberReference Project MSG_ERR StatementExpression Assignment MemberReference name Literal "error" = BreakStatement SwitchStatementCase MemberReference Project MSG_WARN StatementExpression Assignment MemberReference name Literal = BreakStatement SwitchStatementCase MemberReference Project MSG_INFO StatementExpression Assignment MemberReference name Literal = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference name Literal "debug" = BreakStatement StatementExpression MethodInvocation messageElement MemberReference MemberReference name setAttribute LocalVariableDeclaration ReferenceType Throwable VariableDeclarator ex MethodInvocation event getException IfStatement BinaryOperation && BinaryOperation <= MemberReference Project MSG_DEBUG MemberReference msgOutputLevel BinaryOperation != MemberReference ex Literal null BlockStatement LocalVariableDeclaration ReferenceType Text VariableDeclarator errText MethodInvocation doc MethodInvocation StringUtils MemberReference ex LocalVariableDeclaration ReferenceType Element VariableDeclarator stacktrace MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation stacktrace MemberReference errText StatementExpression MethodInvocation buildElement.element MemberReference stacktrace LocalVariableDeclaration ReferenceType Text VariableDeclarator MethodInvocation doc MethodInvocation event getMessage StatementExpression MethodInvocation messageElement MemberReference LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator parentElement Literal null LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType Target VariableDeclarator target MethodInvocation event IfStatement BinaryOperation != MemberReference task Literal null BlockStatement StatementExpression Assignment MemberReference parentElement MethodInvocation MemberReference task = IfStatement BinaryOperation && BinaryOperation == MemberReference parentElement Literal null BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference parentElement Cast ReferenceType TimedElement MethodInvocation targets MemberReference target get = IfStatement BinaryOperation != MemberReference parentElement Literal null BlockStatement StatementExpression MethodInvocation MemberReference messageElement BlockStatement StatementExpression MethodInvocation buildElement.element MemberReference messageElement	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public write FormalParameter BasicType int b IfStatement BinaryOperation && BinaryOperation == MemberReference b Literal '\n' BinaryOperation != MemberReference lastChar Literal '\r' BlockStatement StatementExpression MethodInvocation Literal '\r' StatementExpression MethodInvocation MemberReference b IfStatement BinaryOperation && BinaryOperation == MemberReference b Literal '.' BinaryOperation == MemberReference lastChar Literal '\n' BlockStatement StatementExpression MethodInvocation Literal '.' StatementExpression MethodInvocation MemberReference b BlockStatement StatementExpression MethodInvocation MemberReference b StatementExpression Assignment MemberReference lastChar MemberReference b =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "This task is and will be removed in a Literal "of It is now part of the Literal MemberReference Project MSG_WARN log StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType VariableDeclarator command MethodInvocation StatementExpression MethodInvocation command MemberReference StatementExpression MethodInvocation command MemberReference StatementExpression MethodInvocation MemberReference command StatementExpression MethodInvocation MemberReference command addResources StatementExpression MethodInvocation MemberReference command LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference command MethodInvocation LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation > MemberReference Literal 0 StatementExpression MethodInvocation MemberReference command MemberReference	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized setLength FormalParameter BasicType long ell StatementExpression Assignment MemberReference length ClassCreator ReferenceType Long MemberReference ell =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean bool StatementExpression Assignment MemberReference warn MemberReference bool =	0
MethodDeclaration Modifier public FormalParameter ReferenceType units LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation units getIndex StatementExpression Assignment MemberReference multiplier Literal 0 = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal - 1 BinaryOperation < MemberReference i Literal 4 BlockStatement StatementExpression Assignment MemberReference multiplier Literal 1000 = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 3 BinaryOperation < MemberReference i Literal 9 BlockStatement StatementExpression Assignment MemberReference multiplier Literal 1024 = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 8 BinaryOperation < MemberReference i Literal 13 BlockStatement StatementExpression Assignment MemberReference multiplier Literal 1000000 = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 12 BinaryOperation < MemberReference i Literal 18 BlockStatement StatementExpression Assignment MemberReference multiplier Literal = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 17 BinaryOperation < MemberReference i Literal 22 BlockStatement StatementExpression Assignment MemberReference multiplier Literal = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 21 BinaryOperation < MemberReference i Literal 27 BlockStatement StatementExpression Assignment MemberReference multiplier Literal = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 26 BinaryOperation < MemberReference i Literal 31 BlockStatement StatementExpression Assignment MemberReference multiplier Literal = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 30 BinaryOperation < MemberReference i Literal 36 BlockStatement StatementExpression Assignment MemberReference multiplier Literal = IfStatement BinaryOperation && BinaryOperation > MemberReference multiplier Literal 0 BinaryOperation > MemberReference size Literal - 1 BlockStatement StatementExpression Assignment MemberReference sizelimit BinaryOperation * MemberReference size MemberReference multiplier =	1
MethodDeclaration Modifier public testLineSeparatorCharacter IOException TryStatement StatementExpression SuperMethodInvocation testLineSeparatorCharacter StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier protected FormalParameter ReferenceType RetryHandler h FormalParameter ReferenceType Retryable r FormalParameter ReferenceType String IOException StatementExpression MethodInvocation h MemberReference r MemberReference execute	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "Missing expectBuildExceptionContaining StatementExpression MethodInvocation Literal	0
MethodDeclaration BasicType boolean eval FormalParameter BasicType int t FormalParameter BasicType int f ReturnStatement BinaryOperation == MemberReference f Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType String action StatementExpression SuperMethodInvocation MemberReference action	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation MethodInvocation MemberReference s getCommandLine	0
MethodDeclaration Modifier protected ReferenceType BuildException LocalVariableDeclaration ReferenceType VariableDeclarator exec ClassCreator ReferenceType This ReturnStatement MemberReference exec	1
MethodDeclaration Modifier public FormalParameter BasicType boolean failonerror StatementExpression MethodInvocation myCopy MemberReference failonerror	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Vector VariableDeclarator Cast ReferenceType Vector MethodInvocation clone LocalVariableDeclaration ReferenceType Properties VariableDeclarator TernaryExpression BinaryOperation == MemberReference properties Literal null Literal null Cast ReferenceType Properties MethodInvocation properties clone IfStatement BinaryOperation != MemberReference token Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator val ClassCreator ReferenceType StringBuffer MethodInvocation value getText StatementExpression MethodInvocation MemberReference val Literal Literal "\n" stringReplace StatementExpression MethodInvocation MemberReference val Literal "\n" MemberReference StringUtils LINE_SEP stringReplace LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator tok ClassCreator ReferenceType StringBuffer MethodInvocation token getText StatementExpression MethodInvocation MemberReference tok Literal Literal "\n" stringReplace StatementExpression MethodInvocation MemberReference tok Literal "\n" MemberReference StringUtils LINE_SEP stringReplace LocalVariableDeclaration ReferenceType VariableDeclarator firstFilter MethodInvocation StatementExpression MethodInvocation firstFilter MethodInvocation tok toString StatementExpression MethodInvocation firstFilter MethodInvocation val toString setValue TryStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props MethodInvocation MemberReference getProperties LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tok MethodInvocation e MethodInvocation toString nextElement LocalVariableDeclaration ReferenceType VariableDeclarator replaceFilter MethodInvocation StatementExpression MethodInvocation replaceFilter MemberReference tok StatementExpression MethodInvocation replaceFilter MethodInvocation props MemberReference tok getProperty setValue StatementExpression MethodInvocation validateAttributes IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference properties MethodInvocation MemberReference getProperties = StatementExpression MethodInvocation StatementExpression Assignment MemberReference fileCount Literal 0 = StatementExpression Assignment MemberReference Literal 0 = IfStatement BinaryOperation != MemberReference src Literal null BlockStatement StatementExpression MethodInvocation MemberReference src processFile IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds SuperMethodInvocation MemberReference dir getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator srcs MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference srcs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference i srcs StatementExpression MethodInvocation MemberReference file processFile IfStatement MemberReference summary BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " occurrences in " MemberReference fileCount Literal " MemberReference Project MSG_INFO log StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference properties MemberReference =	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment MemberReference destFile MemberReference dest =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier private IOException LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation LocalVariableDeclaration BasicType char VariableDeclarator MethodInvocation IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference Literal BinaryOperation == MemberReference Literal BinaryOperation == MemberReference Literal BinaryOperation == MemberReference Literal BinaryOperation == MemberReference Literal BinaryOperation == MemberReference Literal BlockStatement StatementExpression MethodInvocation complete IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference Literal BinaryOperation != MemberReference Literal BinaryOperation != MemberReference Literal BinaryOperation != MemberReference Literal BinaryOperation != MemberReference Literal BinaryOperation != MemberReference Literal BlockStatement StatementExpression Assignment This MemberReference MemberReference EOF = ThrowStatement ClassCreator ReferenceType IOException Literal "bad block BlockStatement StatementExpression Assignment This MemberReference MethodInvocation = StatementExpression Assignment This MemberReference BinaryOperation == MethodInvocation Literal 1 Literal 1 = IfStatement BinaryOperation == This MemberReference data Literal null BlockStatement StatementExpression Assignment This MemberReference data ClassCreator ReferenceType Data This MemberReference = StatementExpression MethodInvocation StatementExpression This MemberReference crc MethodInvocation StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null MemberReference TernaryExpression BinaryOperation != MemberReference Literal null MemberReference MemberReference defaultValue	1
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression SuperMethodInvocation MemberReference label	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation BinaryOperation + Literal MemberReference LocalVariableDeclaration BasicType long VariableDeclarator lastModified MethodInvocation f lastModified StatementExpression MethodInvocation Literal Literal expectLogContaining StatementExpression Assignment MemberReference f MethodInvocation BinaryOperation + Literal MemberReference = LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation f lastModified StatementExpression MethodInvocation Literal "File was BinaryOperation == MemberReference lastModified MemberReference assertTrue	0
MethodDeclaration Modifier private endCompression IOException StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation This MemberReference StatementExpression MethodInvocation	1
MethodDeclaration Modifier public synchronized BasicType int size ReturnStatement MemberReference size	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String input LocalVariableDeclaration ReferenceType String VariableDeclarator tokens MethodInvocation MemberReference input tokenizePathAsArray LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tokens length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i tokens BlockStatement BreakStatement IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 0 BinaryOperation != MethodInvocation sb BinaryOperation - MethodInvocation sb length Literal 1 charAt MemberReference File separatorChar BlockStatement StatementExpression MethodInvocation sb MemberReference File separator append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i tokens append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal	0
MethodDeclaration Modifier private ReferenceType String quoteString FormalParameter ReferenceType String str FormalParameter BasicType char delim LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer BinaryOperation * MethodInvocation str length Literal 2 StatementExpression MethodInvocation buf MemberReference delim append IfStatement BinaryOperation != MethodInvocation str Literal '\\' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference str MethodInvocation MemberReference str Literal '\\' Literal replace = IfStatement BinaryOperation != MethodInvocation str MemberReference delim indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference str MethodInvocation MemberReference str MemberReference delim BinaryOperation + Literal "\\" MemberReference delim replace = StatementExpression MethodInvocation buf MemberReference str append StatementExpression MethodInvocation buf MemberReference delim append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t IfStatement BinaryOperation instanceof MemberReference t ReferenceType AssertionFailedError BlockStatement StatementExpression MethodInvocation MemberReference test Cast ReferenceType AssertionFailedError MemberReference t BlockStatement StatementExpression MethodInvocation MemberReference test MemberReference t	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Execute exe FormalParameter ReferenceType Vector fileNames FormalParameter ReferenceType Vector baseDirs IOException BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator s ArrayCreator ReferenceType String MethodInvocation fileNames size StatementExpression MethodInvocation fileNames MemberReference s copyInto LocalVariableDeclaration ReferenceType File VariableDeclarator b ArrayCreator ReferenceType File MethodInvocation baseDirs size StatementExpression MethodInvocation baseDirs MemberReference b copyInto IfStatement BinaryOperation || BinaryOperation <= MemberReference Literal 0 BinaryOperation == MemberReference s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator command MethodInvocation MemberReference s MemberReference b getCommandline StatementExpression MethodInvocation MethodInvocation Commandline MemberReference command describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MemberReference command setCommandline StatementExpression MethodInvocation MemberReference exe runExecute BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator stillToDo MethodInvocation fileNames size LocalVariableDeclaration BasicType int VariableDeclarator currentOffset Literal 0 WhileStatement BinaryOperation > MemberReference stillToDo Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator currentAmount MethodInvocation Math MemberReference stillToDo MemberReference min LocalVariableDeclaration ReferenceType String VariableDeclarator cs ArrayCreator ReferenceType String MemberReference currentAmount StatementExpression MethodInvocation System MemberReference s MemberReference currentOffset MemberReference cs Literal 0 MemberReference currentAmount arraycopy LocalVariableDeclaration ReferenceType File VariableDeclarator cb ArrayCreator ReferenceType File MemberReference currentAmount StatementExpression MethodInvocation System MemberReference b MemberReference currentOffset MemberReference cb Literal 0 MemberReference currentAmount arraycopy LocalVariableDeclaration ReferenceType String VariableDeclarator command MethodInvocation MemberReference cs MemberReference cb getCommandline StatementExpression MethodInvocation MethodInvocation Commandline MemberReference command describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MemberReference command setCommandline IfStatement BinaryOperation != MemberReference redirectorElement Literal null BlockStatement StatementExpression MethodInvocation setupRedirector StatementExpression MethodInvocation redirectorElement MemberReference redirector Literal null IfStatement BinaryOperation || BinaryOperation != MemberReference redirectorElement Literal null BinaryOperation > MemberReference currentOffset Literal 0 BlockStatement StatementExpression MethodInvocation exe MethodInvocation redirector createHandler StatementExpression MethodInvocation MemberReference exe runExecute StatementExpression Assignment MemberReference stillToDo MemberReference currentAmount -= StatementExpression Assignment MemberReference currentOffset MemberReference currentAmount +=	1
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType unit StatementExpression Assignment MemberReference field MethodInvocation unit =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String objselect StatementExpression Assignment MemberReference MemberReference objselect =	1
MethodDeclaration Modifier public IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier public execute StatementExpression MethodInvocation parent	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String file StatementExpression Assignment MemberReference filename MemberReference file =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected logFlush IfStatement BinaryOperation != MemberReference queuedLine Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference queuedLine MemberReference Project MSG_VERBOSE processLine StatementExpression Assignment MemberReference queuedLine Literal null =	0
MethodDeclaration Modifier public ReferenceType Task createTask FormalParameter ReferenceType String taskType BuildException ReturnStatement MethodInvocation ComponentHelper MethodInvocation MemberReference taskType createTask This getComponentHelper	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "test4" executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " MemberReference f Literal " not created" MethodInvocation f exists assertTrue StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference f assertEquals	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project Literal "."	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "type" executeTarget	0
MethodDeclaration Modifier public static putAll FormalParameter ReferenceType m1 FormalParameter ReferenceType m2 ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator it MethodInvocation m2 keys MethodInvocation it hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator key MethodInvocation it nextElement StatementExpression MethodInvocation m1 MemberReference key MethodInvocation m2 MemberReference key get put	1
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String argument IfStatement BinaryOperation > MethodInvocation argument Literal "\"" indexOf Literal - 1 BlockStatement IfStatement BinaryOperation > MethodInvocation argument Literal "\'" indexOf Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal handle single and Literal " in same argument" BlockStatement ReturnStatement BinaryOperation + BinaryOperation + Literal '\'' MemberReference argument Literal '\'' IfStatement BinaryOperation || BinaryOperation || BinaryOperation > MethodInvocation argument Literal "\'" indexOf Literal - 1 BinaryOperation > MethodInvocation argument Literal " " indexOf Literal - 1 BinaryOperation && MemberReference BinaryOperation != MethodInvocation argument Literal ';' indexOf Literal - 1 BlockStatement ReturnStatement BinaryOperation + BinaryOperation + Literal '\"' MemberReference argument Literal '\"' BlockStatement ReturnStatement MemberReference argument	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object another IfStatement BinaryOperation == This MemberReference another BlockStatement ReturnStatement Literal true IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference another equals getCheckedRef IfStatement MethodInvocation ! another getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType FileResource VariableDeclarator otherfr Cast ReferenceType FileResource MemberReference another ReturnStatement TernaryExpression BinaryOperation == MethodInvocation getFile Literal null BinaryOperation == MethodInvocation otherfr getFile Literal null MethodInvocation MethodInvocation MethodInvocation otherfr getFile equals getFile	1
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType list ReturnStatement MethodInvocation MethodInvocation list MethodInvocation getProject getFiles MethodInvocation list MethodInvocation getProject getDir	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BasicType boolean markSupported ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType createArgument FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType VariableDeclarator argument ClassCreator ReferenceType IfStatement MemberReference BlockStatement StatementExpression MethodInvocation arguments MemberReference argument Literal 0 insertElementAt BlockStatement StatementExpression MethodInvocation arguments MemberReference argument addElement ReturnStatement MemberReference argument	0
MethodDeclaration Modifier public FormalParameter ReferenceType StringBuffer sb StatementExpression MethodInvocation sb Literal "test" append	0
MethodDeclaration Modifier public ReferenceType concatSystemClasspath FormalParameter ReferenceType String ReturnStatement MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier private static ReferenceType Specification FormalParameter Modifier final ReferenceType Specification specification FormalParameter Modifier final ReferenceType ArrayList sectionsToAdd IfStatement BinaryOperation == Literal 0 MethodInvocation sectionsToAdd size BlockStatement ReturnStatement MemberReference specification StatementExpression MethodInvocation sectionsToAdd MethodInvocation Arrays MethodInvocation specification asList addAll LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator sections Cast ReferenceType String MethodInvocation sectionsToAdd ArrayCreator ReferenceType String MethodInvocation sectionsToAdd size toArray ReturnStatement ClassCreator ReferenceType Specification MethodInvocation specification MethodInvocation specification MethodInvocation toString MethodInvocation specification MethodInvocation specification MethodInvocation specification MethodInvocation specification MemberReference sections	1
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation MemberReference pattern Literal null MemberReference str Literal true	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getQualifiedClassName	0
MethodDeclaration Modifier private ReferenceType getVersion LocalVariableDeclaration ReferenceType Project VariableDeclarator p ClassCreator ReferenceType Project StatementExpression MethodInvocation p init LocalVariableDeclaration BasicType char VariableDeclarator versionString MethodInvocation p MethodInvocation toCharArray Literal getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType boolean VariableDeclarator foundFirstDigit Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference versionString length MemberReference ++ i BlockStatement IfStatement MethodInvocation Character MemberReference ArraySelector MemberReference i versionString isDigit BlockStatement StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i versionString append StatementExpression Assignment MemberReference foundFirstDigit Literal true = IfStatement BinaryOperation && BinaryOperation == MemberReference ArraySelector MemberReference i versionString Literal '.' MemberReference foundFirstDigit BlockStatement StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i versionString append IfStatement BinaryOperation && MethodInvocation Character MemberReference ArraySelector MemberReference i versionString isLetter MemberReference foundFirstDigit BlockStatement BreakStatement ReturnStatement ClassCreator ReferenceType MethodInvocation sb toString	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier private IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null MemberReference added MemberReference ! running BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference destroyProcessThread TryStatement LocalVariableDeclaration ReferenceType Boolean VariableDeclarator removed Cast ReferenceType Boolean MethodInvocation MethodInvocation Runtime getRuntime MemberReference args invoke IfStatement MethodInvocation ! removed booleanValue BlockStatement StatementExpression MethodInvocation System.err Literal "Could not remove println CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getTargetException IfStatement BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation == MethodInvocation t getClass ClassReference ReferenceType IllegalStateException BlockStatement StatementExpression Assignment MemberReference running Literal true = BlockStatement StatementExpression MethodInvocation e printStackTrace StatementExpression MethodInvocation destroyProcessThread Literal false IfStatement MethodInvocation ! destroyProcessThread MethodInvocation BlockStatement StatementExpression MethodInvocation destroyProcessThread start TryStatement StatementExpression MethodInvocation destroyProcessThread Literal 20000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression Assignment MemberReference destroyProcessThread Literal null = StatementExpression Assignment MemberReference added Literal false =	1
MethodDeclaration IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation Literal MethodInvocation MemberReference	0
MethodDeclaration Modifier public add FormalParameter ReferenceType C StatementExpression MethodInvocation Literal C log	0
MethodDeclaration Modifier public static ReferenceType Parser BuildException TryStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation newSAXParser CatchClause CatchClauseParameter SAXException e ThrowStatement MethodInvocation MemberReference e	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String name ReturnStatement MethodInvocation name MemberReference prefixLength BinaryOperation - MethodInvocation name length MemberReference substring	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal MemberReference MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String out StatementExpression Assignment MemberReference systemOutput MemberReference out =	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType String VariableDeclarator p IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference binary MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference compile MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference console MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference decimal MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference diag MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference format MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference replace MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference symbols MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference time MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression MethodInvocation MemberReference p IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression MethodInvocation MemberReference p IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean = IfStatement BinaryOperation != Assignment MemberReference p MethodInvocation MethodInvocation Literal getProperty getProject = Literal null BlockStatement StatementExpression Assignment This MemberReference MethodInvocation Project MemberReference p toBoolean =	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation hasSelectors BlockStatement StatementExpression MethodInvocation buf Literal " append StatementExpression MethodInvocation buf SuperMethodInvocation toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public BasicType boolean getMaster ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Enumeration elements LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator tests MethodInvocation ReturnStatement MethodInvocation MemberReference tests fromArray	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement BinaryOperation + Literal TernaryExpression MemberReference Literal "+" Literal "-"	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ClassLoader classLoader StatementExpression Assignment This MemberReference classLoader MemberReference classLoader =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator sql MethodInvocation MethodInvocation MemberReference NULL getProperties createTask StatementExpression MethodInvocation MethodInvocation ! MethodInvocation MemberReference NULL_DRIVER containsKey getLoaderMap assertTrue TryStatement StatementExpression MethodInvocation sql execute CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation != MethodInvocation e MethodInvocation getMessage MethodInvocation Literal "No suitable indexOf getException Literal - 1 assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference NULL_DRIVER containsKey getLoaderMap assertTrue StatementExpression MethodInvocation MethodInvocation sql getLoader MethodInvocation MethodInvocation MemberReference NULL_DRIVER get getLoaderMap assertSame LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation sql getLoader StatementExpression Assignment MemberReference sql MethodInvocation MethodInvocation MemberReference NULL getProperties createTask = StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference NULL_DRIVER containsKey getLoaderMap assertTrue TryStatement StatementExpression MethodInvocation sql execute CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation != MethodInvocation e MethodInvocation getMessage MethodInvocation Literal "No suitable indexOf getException Literal - 1 assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference NULL_DRIVER containsKey getLoaderMap assertTrue StatementExpression MethodInvocation MethodInvocation sql getLoader MethodInvocation MethodInvocation MemberReference NULL_DRIVER get getLoaderMap assertSame StatementExpression MethodInvocation MemberReference MethodInvocation sql getLoader assertSame	1
MethodDeclaration Modifier protected FormalParameter ReferenceType File BuildException TryStatement LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator builder MethodInvocation newDocumentBuilder LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in ClassCreator ReferenceType FileInputStream MemberReference TryStatement LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation builder MemberReference in parse StatementExpression MethodInvocation MemberReference doc StatementExpression MethodInvocation in close CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error while parsing " MemberReference MemberReference e	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + Literal "@" MethodInvocation += StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier private ReferenceType Map IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType HashMap = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation macroDef MethodInvocation entrySet MethodInvocation iterator getElements MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation i next StatementExpression MethodInvocation Cast ReferenceType String MethodInvocation entry getKey MethodInvocation entry getValue put LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator te Cast ReferenceType ReferenceType MethodInvocation entry getValue IfStatement MethodInvocation te BlockStatement StatementExpression Assignment MemberReference MethodInvocation te getName = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType path StatementExpression Assignment This MemberReference classpath MemberReference path =	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType File incl BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression MethodInvocation MemberReference incl StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation System.out MemberReference TESTDATA println	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveFileSet MethodInvocation MemberReference p ReturnStatement MemberReference prefix	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public final ReferenceType String toLongString ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getDataTypeName Literal " \"" MethodInvocation toString Literal '"'	0
MethodDeclaration Modifier public FormalParameter BasicType int i StatementExpression MethodInvocation Literal 2 MemberReference i assertEquals	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public execute IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "scriptdef requires a name attribute to " Literal "name the script" IfStatement BinaryOperation == MethodInvocation helper getLanguage Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal requires a language attribute " Literal the script IfStatement BinaryOperation || BinaryOperation != MethodInvocation Literal null MethodInvocation BlockStatement StatementExpression MethodInvocation helper MethodInvocation StatementExpression Assignment MemberReference runner MethodInvocation helper = StatementExpression Assignment MemberReference attributeSet ClassCreator ReferenceType HashSet = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation attributes iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute Cast ReferenceType Attribute MethodInvocation i next IfStatement BinaryOperation == MemberReference attribute name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "scriptdef elements " Literal "must an attribute name" IfStatement MethodInvocation attributeSet MemberReference attribute name contains BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "scriptdef <" MemberReference name Literal "> " Literal "the " MemberReference attribute name Literal " attribute more than StatementExpression MethodInvocation attributeSet MemberReference attribute name add StatementExpression Assignment MemberReference nestedElementMap ClassCreator ReferenceType HashMap = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator nestedElement Cast ReferenceType MethodInvocation i next IfStatement BinaryOperation == MemberReference nestedElement name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "scriptdef elements " Literal "must an element name" IfStatement MethodInvocation nestedElementMap MemberReference nestedElement name containsKey BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "scriptdef <" MemberReference name Literal "> " Literal "the " MemberReference nestedElement name Literal " element more " Literal "than IfStatement BinaryOperation && BinaryOperation == MemberReference nestedElement className Literal null BinaryOperation == MemberReference nestedElement type Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "scriptdef elements " Literal "must either a classname or type attribute" IfStatement BinaryOperation && BinaryOperation != MemberReference nestedElement className Literal null BinaryOperation != MemberReference nestedElement type Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "scriptdef elements " Literal "must only one of the classname and type " Literal StatementExpression MethodInvocation nestedElementMap MemberReference nestedElement name MemberReference nestedElement put LocalVariableDeclaration ReferenceType Map VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject SynchronizedStatement MemberReference p StatementExpression Assignment MemberReference Cast ReferenceType Map MethodInvocation p MemberReference MagicNames getReference = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType HashMap = StatementExpression MethodInvocation p MemberReference MagicNames MemberReference StatementExpression Assignment MemberReference name MethodInvocation ProjectHelper MethodInvocation getURI MemberReference name genComponentName = StatementExpression MethodInvocation MemberReference name This put LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def ClassCreator ReferenceType AntTypeDefinition StatementExpression MethodInvocation def MemberReference name setName StatementExpression MethodInvocation def ClassReference ReferenceType StatementExpression MethodInvocation ComponentHelper MethodInvocation MemberReference def MethodInvocation getProject getComponentHelper	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String ext StatementExpression MethodInvocation task Literal is not used MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MethodInvocation getProject setProject StatementExpression MethodInvocation MethodInvocation MemberReference r createPath	0
MethodDeclaration Modifier private ReferenceType NameEntry FormalParameter ReferenceType Vector list LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator result ClassCreator ReferenceType NameEntry StatementExpression MethodInvocation list MemberReference result addElement ReturnStatement MemberReference result	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation Literal Literal task in one MemberReference expectBuildExceptionContaining	0
MethodDeclaration BasicType boolean process IfStatement BinaryOperation > MethodInvocation length MethodInvocation token length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation replace StatementExpression Assignment MemberReference pos MethodInvocation Math BinaryOperation - MethodInvocation length MethodInvocation token length MemberReference pos max = StatementExpression MethodInvocation MethodInvocation Literal 0 MemberReference pos substring append StatementExpression MethodInvocation Literal 0 MemberReference pos delete ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int getMode ReturnStatement MemberReference mode	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd StatementExpression MethodInvocation MemberReference cmd IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal null BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Should select either an element " Literal or an object StatementExpression MethodInvocation MemberReference cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public add FormalParameter ReferenceType IfStatement BinaryOperation != This MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one mapper type element StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected ReferenceType LocalVariableDeclaration ReferenceType Object VariableDeclarator reader Literal null IfStatement BinaryOperation == MemberReference readerClassName Literal null BlockStatement StatementExpression Assignment MemberReference reader MethodInvocation = BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator readerClass Literal null TryStatement IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject StatementExpression Assignment MemberReference readerClass MethodInvocation Class MemberReference readerClassName Literal true MemberReference loader forName = BlockStatement StatementExpression Assignment MemberReference readerClass MethodInvocation Class MemberReference readerClassName forName = StatementExpression Assignment MemberReference reader MethodInvocation readerClass newInstance = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference INIT_FAILED_MSG MemberReference readerClassName MemberReference e CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference INIT_FAILED_MSG MemberReference readerClassName MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference INIT_FAILED_MSG MemberReference readerClassName MemberReference e LocalVariableDeclaration ReferenceType VariableDeclarator newReader IfStatement BinaryOperation instanceof MemberReference reader ReferenceType BlockStatement StatementExpression Assignment MemberReference newReader Cast ReferenceType MemberReference reader = StatementExpression MethodInvocation BinaryOperation + Literal "Using reader " MethodInvocation reader MethodInvocation getName getClass MemberReference Project MSG_VERBOSE log BlockStatement IfStatement BinaryOperation instanceof MemberReference reader ReferenceType Parser BlockStatement StatementExpression Assignment MemberReference newReader ClassCreator ReferenceType Cast ReferenceType Parser MemberReference reader = StatementExpression MethodInvocation BinaryOperation + Literal "Using parser " MethodInvocation reader MethodInvocation getName getClass MemberReference Project MSG_VERBOSE log BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference INIT_FAILED_MSG MethodInvocation reader MethodInvocation getName getClass Literal " nor Parser nor ReturnStatement MemberReference newReader	1
MethodDeclaration Modifier public BasicType boolean isDirectory IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef StatementExpression MethodInvocation ReturnStatement SuperMethodInvocation isDirectory	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument expectBuildException	0
MethodDeclaration Modifier public static ReferenceType File LocalVariableDeclaration BasicType boolean VariableDeclarator toolsJarAvailable Literal false TryStatement StatementExpression MethodInvocation Class Literal "com.sun.tools.javac.Main" forName StatementExpression Assignment MemberReference toolsJarAvailable Literal true = CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation Class Literal forName StatementExpression Assignment MemberReference toolsJarAvailable Literal true = CatchClause CatchClauseParameter Exception e2 IfStatement MemberReference toolsJarAvailable BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator javaHome MethodInvocation System Literal "java.home" getProperty LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File BinaryOperation + MemberReference javaHome Literal IfStatement MethodInvocation exists BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation javaHome MethodInvocation BinaryOperation + MemberReference File separator Literal endsWith MemberReference toLowerCase BlockStatement StatementExpression Assignment MemberReference javaHome MethodInvocation javaHome Literal 0 BinaryOperation - MethodInvocation javaHome length Literal 4 substring = StatementExpression Assignment MemberReference ClassCreator ReferenceType File BinaryOperation + MemberReference javaHome Literal = IfStatement MethodInvocation ! exists BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "Unable to locate " Literal "Expected to find it in " MethodInvocation getPath println ReturnStatement Literal null ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType File LocalVariableDeclaration ReferenceType File VariableDeclarator dest Literal null IfStatement BinaryOperation == MemberReference packageName Literal null BlockStatement StatementExpression Assignment MemberReference dest MemberReference destDir = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path BinaryOperation + BinaryOperation + MethodInvocation destDir getPath MemberReference File separatorChar MethodInvocation packageName Literal '.' MemberReference File separatorChar replace StatementExpression Assignment MemberReference dest ClassCreator ReferenceType File MemberReference path = ReturnStatement MemberReference dest	0
MethodDeclaration Modifier public FormalParameter ReferenceType Hashtable h StatementExpression MethodInvocation MethodInvocation Literal Literal "value" makeTable MemberReference h assertEquals	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType FileResource MethodInvocation getCheckedRef MemberReference file	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File file StatementExpression Assignment This MemberReference sourceFile MemberReference file =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" BinaryOperation + Literal "No public in " ClassReference ReferenceType Project expectBuildException	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType define StatementExpression MethodInvocation MemberReference define addElement	0
MethodDeclaration Modifier public static BasicType boolean endsWith FormalParameter ReferenceType StringBuffer buffer FormalParameter ReferenceType String suffix IfStatement BinaryOperation > MethodInvocation suffix length MethodInvocation buffer length BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator endIndex BinaryOperation - MethodInvocation suffix length Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator bufferIndex BinaryOperation - MethodInvocation buffer length Literal 1 WhileStatement BinaryOperation >= MemberReference endIndex Literal 0 BlockStatement IfStatement BinaryOperation != MethodInvocation buffer MemberReference bufferIndex charAt MethodInvocation suffix MemberReference endIndex charAt BlockStatement ReturnStatement Literal false StatementExpression MemberReference -- bufferIndex StatementExpression MemberReference -- endIndex ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference MemberReference name =	0
MethodDeclaration Modifier protected BasicType int run FormalParameter ReferenceType String command BuildException LocalVariableDeclaration BasicType int VariableDeclarator err Literal - 1 LocalVariableDeclaration ReferenceType String VariableDeclarator myos MethodInvocation System Literal "os.name" getProperty StatementExpression MethodInvocation BinaryOperation + Literal = " MemberReference myos MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && BinaryOperation != MemberReference os Literal null BinaryOperation < MethodInvocation os MemberReference myos indexOf Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Not found in " MemberReference os MemberReference Project MSG_VERBOSE log ReturnStatement Literal 0 IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation MethodInvocation getProject = IfStatement BinaryOperation >= MethodInvocation myos MethodInvocation Literal "windows" indexOf toLowerCase Literal 0 BlockStatement IfStatement MethodInvocation ! dir MethodInvocation MethodInvocation Literal "." getProject equals BlockStatement IfStatement BinaryOperation >= MethodInvocation myos MethodInvocation Literal indexOf toLowerCase Literal 0 BlockStatement StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + Literal cd " MemberReference dir Literal " && " MemberReference command = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ant MethodInvocation MethodInvocation MemberReference MagicNames ANT_HOME getProperty getProject IfStatement BinaryOperation == MemberReference ant Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Property '" MemberReference MagicNames ANT_HOME Literal "' not " Literal MethodInvocation getLocation LocalVariableDeclaration ReferenceType String VariableDeclarator antRun MethodInvocation MethodInvocation BinaryOperation + MemberReference ant Literal MethodInvocation toString getProject StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference antRun Literal " " MemberReference dir Literal " " MemberReference command = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ant MethodInvocation MethodInvocation MemberReference MagicNames ANT_HOME getProperty getProject IfStatement BinaryOperation == MemberReference ant Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Property '" MemberReference MagicNames ANT_HOME Literal "' not found" MethodInvocation getLocation LocalVariableDeclaration ReferenceType String VariableDeclarator antRun MethodInvocation MethodInvocation BinaryOperation + MemberReference ant Literal MethodInvocation toString getProject StatementExpression Assignment MemberReference command BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference antRun Literal " " MemberReference dir Literal " " MemberReference command = TryStatement StatementExpression MethodInvocation MemberReference command MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Process VariableDeclarator proc MethodInvocation Runtime MethodInvocation MemberReference command exec getRuntime IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression Assignment MemberReference fos ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference out = StatementExpression MethodInvocation BinaryOperation + Literal "Output redirected to " MemberReference out MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType StreamPumper VariableDeclarator inputPumper ClassCreator ReferenceType StreamPumper MethodInvocation proc getInputStream MemberReference Project MSG_INFO LocalVariableDeclaration ReferenceType StreamPumper VariableDeclarator ClassCreator ReferenceType StreamPumper MethodInvocation proc getErrorStream MemberReference Project MSG_WARN StatementExpression MethodInvocation inputPumper start StatementExpression MethodInvocation start StatementExpression MethodInvocation proc waitFor StatementExpression MethodInvocation inputPumper join StatementExpression MethodInvocation join StatementExpression MethodInvocation proc StatementExpression MethodInvocation logFlush StatementExpression Assignment MemberReference err MethodInvocation proc exitValue = IfStatement BinaryOperation != MemberReference err Literal 0 BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal " MemberReference err MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference err MemberReference Project MSG_ERR log CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error " MemberReference command MemberReference ioe MethodInvocation getLocation CatchClause CatchClauseParameter InterruptedException ex ReturnStatement MemberReference err	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType String version StatementExpression Assignment This MemberReference version MethodInvocation version MemberReference toLowerCase =	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Pattern FormalParameter ReferenceType Vector list FormalParameter ReferenceType Project p IfStatement BinaryOperation == MethodInvocation list size Literal 0 ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator tmpPatterns ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation list elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation && BinaryOperation != MemberReference pattern Literal null BinaryOperation > MethodInvocation pattern length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator pat ClassCreator ReferenceType Pattern StatementExpression MethodInvocation pat MemberReference pattern StatementExpression MethodInvocation pat MethodInvocation ne StatementExpression MethodInvocation tmpPatterns MemberReference pat addElement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator result ArrayCreator ReferenceType Pattern MethodInvocation tmpPatterns size StatementExpression MethodInvocation tmpPatterns MemberReference result copyInto ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected BasicType boolean isValidOs ReturnStatement BinaryOperation && MethodInvocation Os MemberReference Os isFamily SuperMethodInvocation isValidOs	1
MethodDeclaration Modifier public ReferenceType Enumeration keys ReturnStatement MethodInvocation CollectionUtils MethodInvocation keyList iterator	1
MethodDeclaration Modifier public tearDown IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String getPackageName ReturnStatement MemberReference packageName	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType long value FormalParameter BasicType byte buf FormalParameter BasicType int offset FormalParameter BasicType int length LocalVariableDeclaration BasicType byte VariableDeclarator temp ArrayCreator BasicType byte BinaryOperation + MemberReference length Literal 1 StatementExpression MethodInvocation MemberReference value MemberReference temp Literal 0 BinaryOperation + MemberReference length Literal 1 StatementExpression MethodInvocation System MemberReference temp Literal 0 MemberReference buf MemberReference offset MemberReference length arraycopy ReturnStatement BinaryOperation + MemberReference offset MemberReference length	0
MethodDeclaration Modifier private FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType String VariableDeclarator base BinaryOperation + Literal MemberReference ejbType IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal equals BlockStatement StatementExpression Assignment MemberReference currentEjb Cast ReferenceType MethodInvocation MemberReference value get = IfStatement BinaryOperation == MemberReference currentEjb Literal null BlockStatement StatementExpression Assignment MemberReference currentEjb ClassCreator ReferenceType MemberReference value = StatementExpression MethodInvocation MemberReference value MemberReference currentEjb put IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value IfStatement MethodInvocation currentLoc BinaryOperation + MemberReference base Literal equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value IfStatement MethodInvocation currentLoc BinaryOperation + BinaryOperation + MemberReference base Literal Literal equals BlockStatement StatementExpression MethodInvocation currentEjb MemberReference value	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "have " MemberReference P4CmdOpts Literal " " MemberReference P4View ClassCreator ReferenceType SimpleP4OutputHandler This execP4Command	1
MethodDeclaration Modifier public execute BuildException TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator MethodInvocation proxy MethodInvocation Literal ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Location getMethod getClass IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference proxy ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation getLocation invoke CatchClause CatchClauseParameter NoSuchMethodException e CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Error setting location in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator setProjectM MethodInvocation proxy MethodInvocation Literal "setProject" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Project getMethod getClass IfStatement BinaryOperation != MemberReference setProjectM Literal null BlockStatement StatementExpression MethodInvocation setProjectM MemberReference proxy ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation getProject invoke CatchClause CatchClauseParameter NoSuchMethodException e CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Error setting project in " MethodInvocation proxy getClass MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex TryStatement StatementExpression MethodInvocation MemberReference proxy execute CatchClause CatchClauseParameter BuildException be ThrowStatement MemberReference be CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation BinaryOperation + Literal "Error in " MethodInvocation proxy getClass MemberReference Project MSG_VERBOSE log ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex	1
MethodDeclaration Modifier public ReferenceType Enumeration ReturnStatement ClassCreator ReferenceType ArrayCreator ReferenceType String ArrayInitializer MemberReference name	0
MethodDeclaration Modifier public FormalParameter BasicType boolean version StatementExpression Assignment This MemberReference version MemberReference version =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public BuildException StatementExpression MethodInvocation Literal is not a data type" MethodInvocation p Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation p Literal StatementExpression MethodInvocation Literal is a type" MemberReference o assertNotNull StatementExpression MethodInvocation Literal BinaryOperation instanceof MemberReference o ReferenceType FileSet assertTrue StatementExpression MethodInvocation Literal BinaryOperation instanceof MethodInvocation p Literal ReferenceType assertTrue StatementExpression MethodInvocation Literal BinaryOperation instanceof MethodInvocation p Literal ReferenceType assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t StatementExpression MethodInvocation Literal MemberReference test MemberReference t	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation Literal Literal "" Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation Literal tasks output correct MemberReference log BinaryOperation + MemberReference MemberReference assertEquals	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Commandline Literal 2 3" StatementExpression MethodInvocation Literal "Simple Literal 3 MemberReference s length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 3 MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "" BinaryOperation + MemberReference i Literal 1 MemberReference ArraySelector MemberReference i s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal "" = StatementExpression MethodInvocation Literal "empty string" Literal 0 MemberReference s length assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal null = StatementExpression MethodInvocation Literal "null" Literal 0 MemberReference s length assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal 3" = StatementExpression MethodInvocation Literal "Simple with single Literal 3 MemberReference s length assertEquals StatementExpression MethodInvocation Literal have been Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal 3" = StatementExpression MethodInvocation Literal "Simple with double Literal 3 MemberReference s length assertEquals StatementExpression MethodInvocation Literal have been Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal with double and Literal 3 MemberReference s length assertEquals StatementExpression MethodInvocation Literal Literal 3" MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal with double single Literal 3 MemberReference s length assertEquals StatementExpression MethodInvocation Literal single quote Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal with single and Literal 3 MemberReference s length assertEquals StatementExpression MethodInvocation Literal Literal 3" MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal with single double Literal 3 MemberReference s length assertEquals StatementExpression MethodInvocation Literal double quote Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal 3 = StatementExpression MethodInvocation Literal with quoted Literal 4 MemberReference s length assertEquals StatementExpression MethodInvocation Literal Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal null arg Literal 2 MemberReference s length assertEquals StatementExpression MethodInvocation Literal null arg Literal "" MemberReference ArraySelector Literal 0 s assertEquals StatementExpression MethodInvocation Literal null arg Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal "a = StatementExpression MethodInvocation Literal null arg Literal 2 MemberReference s length assertEquals StatementExpression MethodInvocation Literal null arg Literal MemberReference ArraySelector Literal 0 s assertEquals StatementExpression MethodInvocation Literal null arg Literal "" MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal null Literal 1 MemberReference s length assertEquals StatementExpression MethodInvocation Literal null Literal "" MemberReference ArraySelector Literal 0 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal null arg Literal 2 MemberReference s length assertEquals StatementExpression MethodInvocation Literal null arg Literal "" MemberReference ArraySelector Literal 0 s assertEquals StatementExpression MethodInvocation Literal null arg Literal MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal "a = StatementExpression MethodInvocation Literal null arg Literal 2 MemberReference s length assertEquals StatementExpression MethodInvocation Literal null arg Literal MemberReference ArraySelector Literal 0 s assertEquals StatementExpression MethodInvocation Literal null arg Literal "" MemberReference ArraySelector Literal 1 s assertEquals StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal = StatementExpression MethodInvocation Literal null Literal 1 MemberReference s length assertEquals StatementExpression MethodInvocation Literal null Literal "" MemberReference ArraySelector Literal 0 s assertEquals TryStatement StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal "a = StatementExpression MethodInvocation Literal single fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal in a MethodInvocation be getMessage assertEquals TryStatement StatementExpression Assignment MemberReference s MethodInvocation Commandline Literal "a = StatementExpression MethodInvocation Literal double fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal in a MethodInvocation be getMessage assertEquals	0
MethodDeclaration Modifier protected runFolder FormalParameter ReferenceType s FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType Project p FormalParameter ReferenceType View v FormalParameter ReferenceType Type t FormalParameter ReferenceType Folder f FormalParameter ReferenceType java ReferenceType io ReferenceType File tgt LocalVariableDeclaration ReferenceType Item VariableDeclarator items MethodInvocation f MethodInvocation t getName getItems ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference items length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference p MemberReference v MemberReference t MemberReference f MemberReference ArraySelector MemberReference i items MemberReference tgt IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType Folder VariableDeclarator MethodInvocation f getSubFolders ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference s MemberReference p MemberReference v MemberReference t MemberReference ArraySelector MemberReference i ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference tgt MemberReference ArraySelector MemberReference i MethodInvocation getName runFolder	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType cp IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference cp = BlockStatement StatementExpression MethodInvocation MemberReference cp append	0
MethodDeclaration Modifier public static ReferenceType JspCompilerAdapter FormalParameter ReferenceType String compilerType FormalParameter ReferenceType Task task BuildException ReturnStatement MethodInvocation MemberReference compilerType MemberReference task MethodInvocation task MethodInvocation Literal null createClassLoader getProject	1
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator t ClassCreator ReferenceType StringTokenizer MemberReference Literal ", " WhileStatement MethodInvocation t hasMoreTokens BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType FileResource MethodInvocation MethodInvocation MethodInvocation t nextToken getProject add	0
MethodDeclaration Modifier public close IOException IfStatement BinaryOperation > MethodInvocation buffer size Literal 0 BlockStatement StatementExpression MethodInvocation processBuffer StatementExpression SuperMethodInvocation close	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MemberReference text	0
MethodDeclaration Modifier public open IOException StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public addContains FormalParameter ReferenceType selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addContains	1
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment This MemberReference command MemberReference c =	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference displayName	0
MethodDeclaration Modifier public FormalParameter BasicType boolean ci StatementExpression Assignment MemberReference MemberReference ci =	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation stream close StatementExpression MethodInvocation stream StatementExpression Assignment MemberReference stream Literal null =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType String getCommentFile ReturnStatement MemberReference	0
MethodDeclaration Modifier public addNone FormalParameter ReferenceType NoneSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public final ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter Literal true ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public FormalParameter ReferenceType Character c StatementExpression MethodInvocation MethodInvocation c Literal 'a' assertEquals	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation MethodInvocation MethodInvocation getProject MethodInvocation createPath getCommandline	0
MethodDeclaration * @see */ Modifier protected printMessage FormalParameter Modifier final ReferenceType String message FormalParameter Modifier final ReferenceType PrintStream stream FormalParameter Modifier final BasicType int priority IfStatement BinaryOperation && BinaryOperation != MemberReference message Literal null BinaryOperation != MemberReference stream Literal null BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator msg ClassCreator ReferenceType StringBuffer MemberReference message SwitchStatement MemberReference priority SwitchStatementCase MemberReference Project MSG_ERR StatementExpression MethodInvocation msg Literal 0 MemberReference insert StatementExpression MethodInvocation msg MemberReference END_COLOR append BreakStatement SwitchStatementCase MemberReference Project MSG_WARN StatementExpression MethodInvocation msg Literal 0 MemberReference insert StatementExpression MethodInvocation msg MemberReference END_COLOR append BreakStatement SwitchStatementCase MemberReference Project MSG_INFO StatementExpression MethodInvocation msg Literal 0 MemberReference insert StatementExpression MethodInvocation msg MemberReference END_COLOR append BreakStatement SwitchStatementCase MemberReference Project MSG_VERBOSE StatementExpression MethodInvocation msg Literal 0 MemberReference insert StatementExpression MethodInvocation msg MemberReference END_COLOR append BreakStatement SwitchStatementCase MemberReference Project MSG_DEBUG StatementExpression MethodInvocation msg Literal 0 MemberReference insert StatementExpression MethodInvocation msg MemberReference END_COLOR append BreakStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation msg toString StatementExpression MethodInvocation stream MemberReference println	1
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression MethodInvocation IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MemberReference MagicNames MemberReference e	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Hashtable FormalParameter ReferenceType File viewpath FormalParameter BasicType boolean recurse LocalVariableDeclaration ReferenceType String VariableDeclarator TernaryExpression MemberReference recurse Literal "-r" Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator fullpath MethodInvocation viewpath getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal MemberReference Literal Literal "-s" Literal MemberReference fullpath LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res LocalVariableDeclaration ReferenceType Vector VariableDeclarator lines MethodInvocation res LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator map MethodInvocation MemberReference lines toFiles ReturnStatement MemberReference map	1
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType VariableDeclarator selector MethodInvocation LocalVariableDeclaration ReferenceType List VariableDeclarator list MethodInvocation selector MemberReference select LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator proxies MethodInvocation list listIterator WhileStatement MethodInvocation proxies hasNext BlockStatement LocalVariableDeclaration ReferenceType Proxy VariableDeclarator proxy Cast ReferenceType Proxy MethodInvocation proxies next LocalVariableDeclaration ReferenceType VariableDeclarator address MethodInvocation proxy address IfStatement BinaryOperation == MemberReference address Literal null BlockStatement StatementExpression MethodInvocation result Literal append BlockStatement StatementExpression MethodInvocation result MethodInvocation proxy toString append IfStatement BinaryOperation instanceof MemberReference address ReferenceType InetSocketAddress BlockStatement LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator ina Cast ReferenceType InetSocketAddress MemberReference address StatementExpression MethodInvocation result Literal ' ' append StatementExpression MethodInvocation result MethodInvocation ina getHostName append StatementExpression MethodInvocation result Literal ':' append StatementExpression MethodInvocation result MethodInvocation ina getPort append IfStatement MethodInvocation ina BlockStatement StatementExpression MethodInvocation result Literal " append BlockStatement LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator addr MethodInvocation ina getAddress StatementExpression MethodInvocation result Literal " [" append StatementExpression MethodInvocation result MethodInvocation addr getHostAddress append StatementExpression MethodInvocation result Literal ']' append StatementExpression MethodInvocation result Literal '\n' append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier private ReferenceType String describeCheckin FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File remotefile LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MethodInvocation Literal " " append MethodInvocation MethodInvocation MemberReference remotefile getFullRepositoryPath append MethodInvocation remotefile getFullName append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "Not a BinaryOperation == Literal false MethodInvocation ih assertTrue	1
MethodDeclaration Modifier protected ReferenceType String getPublicId ReturnStatement Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal "java.class.path" getProperty StatementExpression MethodInvocation MemberReference assertNotNull StatementExpression MethodInvocation MethodInvocation System Literal getProperty LocalVariableDeclaration ReferenceType CommandlineJava VariableDeclarator c ClassCreator ReferenceType CommandlineJava LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator v ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation v Literal setKey StatementExpression MethodInvocation v Literal "value" setValue StatementExpression MethodInvocation c MemberReference v StatementExpression MethodInvocation project Literal Literal setProperty LocalVariableDeclaration ReferenceType VariableDeclarator ps ClassCreator ReferenceType StatementExpression MethodInvocation ps MemberReference project setProject StatementExpression MethodInvocation ps Literal StatementExpression MethodInvocation c MemberReference ps TryStatement StatementExpression MethodInvocation c LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal "java.class.path" getProperty StatementExpression MethodInvocation MemberReference assertNotNull StatementExpression MethodInvocation MemberReference MemberReference assertEquals StatementExpression MethodInvocation MethodInvocation System Literal getProperty assertNotNull StatementExpression MethodInvocation Literal "value" MethodInvocation System Literal getProperty assertEquals StatementExpression MethodInvocation MethodInvocation System MethodInvocation Literal "java.class.path" containsKey getProperties assertTrue StatementExpression MethodInvocation MethodInvocation System Literal getProperty assertNotNull StatementExpression MethodInvocation Literal MethodInvocation System Literal getProperty assertEquals StatementExpression MethodInvocation c StatementExpression MethodInvocation MethodInvocation System Literal getProperty StatementExpression MethodInvocation MethodInvocation System Literal getProperty	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required expectBuildException	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation toString getCheckedRef TernaryExpression BinaryOperation == MemberReference union Literal null Literal "" MethodInvocation union toString	1
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier protected log FormalParameter ReferenceType String message FormalParameter BasicType int priority IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project MemberReference message MemberReference priority log	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null WhileStatement BinaryOperation && BinaryOperation < MemberReference MethodInvocation size BinaryOperation == MemberReference url Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pathComponent Cast ReferenceType File MethodInvocation MemberReference elementAt StatementExpression Assignment MemberReference url MethodInvocation MemberReference pathComponent This MemberReference resourceName getResourceURL = StatementExpression MemberReference ++ CatchClause CatchClauseParameter BuildException e StatementExpression Assignment This MemberReference MemberReference url =	0
MethodDeclaration Modifier public addSize FormalParameter ReferenceType selector StatementExpression MethodInvocation fileset MemberReference selector addSize	1
MethodDeclaration * the next character in the filtered only * lines from the original stream which match all of the * * @return the next character in the or * if the end of the stream has been * IOException if the stream an * during */ Modifier public BasicType int read IOException IfStatement BinaryOperation == MemberReference tokenizer Literal null BlockStatement StatementExpression Assignment MemberReference tokenizer ClassCreator ReferenceType LineTokenizer = WhileStatement BinaryOperation || BinaryOperation == MemberReference line Literal null BinaryOperation == MethodInvocation line length Literal 0 BlockStatement StatementExpression Assignment MemberReference line MethodInvocation tokenizer MemberReference in getToken = IfStatement BinaryOperation == MemberReference line Literal null BlockStatement ReturnStatement Literal - 1 ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filters elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Filter VariableDeclarator filter Cast ReferenceType Filter MethodInvocation e nextElement StatementExpression Assignment MemberReference line MethodInvocation filter MemberReference line filter = IfStatement BinaryOperation == MemberReference line Literal null BlockStatement BreakStatement StatementExpression Assignment MemberReference linePos Literal 0 = IfStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation tokenizer MethodInvocation length Literal 0 BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference line BinaryOperation + MemberReference line MemberReference = BlockStatement StatementExpression Assignment MemberReference line BinaryOperation + MemberReference line MethodInvocation tokenizer = LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation line MemberReference linePos charAt StatementExpression MemberReference ++ linePos IfStatement BinaryOperation == MemberReference linePos MethodInvocation line length BlockStatement StatementExpression Assignment MemberReference line Literal null = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err Literal println IfStatement BinaryOperation == This MemberReference outStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "writing to an input buffer" IfStatement BinaryOperation > This MemberReference currRecIdx Literal 0 BlockStatement StatementExpression This MethodInvocation writeBlock	0
MethodDeclaration Modifier protected ReferenceType Hashtable ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable FormalParameter BasicType int StatementExpression MethodInvocation This MemberReference message MemberReference MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidOs ReturnStatement BinaryOperation && MethodInvocation Os Literal "windows" isFamily SuperMethodInvocation isValidOs	1
MethodDeclaration ReferenceType AssertionFailedError getError ReturnStatement MemberReference error	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration flush StatementExpression MethodInvocation replace StatementExpression MethodInvocation MethodInvocation toString append StatementExpression MethodInvocation Literal 0 MethodInvocation length delete	0
MethodDeclaration Modifier private FormalParameter ReferenceType BuildEvent event FormalParameter ReferenceType String message FormalParameter BasicType int priority IfStatement MethodInvocation message MemberReference StringUtils LINE_SEP endsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endIndex BinaryOperation - MethodInvocation message length MethodInvocation length StatementExpression MethodInvocation event MethodInvocation message Literal 0 MemberReference endIndex substring MemberReference priority setMessage BlockStatement StatementExpression MethodInvocation event MemberReference message MemberReference priority setMessage SynchronizedStatement This IfStatement MemberReference BlockStatement ReturnStatement TryStatement StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation listener MemberReference event messageLogged StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType Literal null = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration BasicType int ReturnStatement MethodInvocation filesets size	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public BasicType int size ReturnStatement MemberReference size	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Line 2" expectLog	0
MethodDeclaration Modifier public synchronized ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference copyInto ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer i StatementExpression Assignment This MemberReference timeout MemberReference i =	0
MethodDeclaration Modifier protected compile FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType String VariableDeclarator commandArray Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator tmpFile Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator myos MethodInvocation System Literal "os.name" getProperty IfStatement BinaryOperation && BinaryOperation >= MethodInvocation myos MethodInvocation Literal "windows" indexOf toLowerCase Literal 0 BinaryOperation > MemberReference args length Literal 250 BlockStatement LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + Literal ClassCreator MethodInvocation nextLong ReferenceType Random MethodInvocation System currentTimeMillis StatementExpression Assignment MemberReference tmpFile ClassCreator ReferenceType File MemberReference = StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference tmpFile = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i args println StatementExpression MethodInvocation out flush StatementExpression Assignment MemberReference commandArray ArrayCreator ReferenceType String ArrayInitializer MemberReference command BinaryOperation + Literal "@" MethodInvocation tmpFile getAbsolutePath = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Error creating temporary file" MemberReference e StatementExpression MethodInvocation FileUtils MemberReference out close BlockStatement StatementExpression Assignment MemberReference commandArray ArrayCreator ReferenceType String BinaryOperation + MemberReference args length Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 commandArray MemberReference command = StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference commandArray Literal 1 MemberReference args length arraycopy TryStatement LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference StatementExpression MethodInvocation exe MemberReference project setAntRun StatementExpression MethodInvocation exe MethodInvocation project setWorkingDirectory StatementExpression MethodInvocation exe MemberReference commandArray setCommandline StatementExpression MethodInvocation exe execute CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Error running compiler" MemberReference e IfStatement BinaryOperation != MemberReference tmpFile Literal null BlockStatement StatementExpression MethodInvocation tmpFile delete	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean replace StatementExpression Assignment This MemberReference replace MemberReference replace =	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet fileset StatementExpression MethodInvocation BinaryOperation + Literal "class of fileset is " MethodInvocation fileset getClass log	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destFile StatementExpression Assignment This MemberReference destFile MemberReference destFile =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference MethodInvocation toString	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation == MethodInvocation getLog Literal null BlockStatement ReturnStatement BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getLog setValue createArgument	1
MethodDeclaration Modifier public StatementExpression MethodInvocation perms TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation System Literal "user.home" getProperty StatementExpression MethodInvocation System Literal "user.home" MemberReference s setProperty StatementExpression MethodInvocation Literal "Could perform an action that should have been forbidden." fail CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation perms	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier private BasicType boolean checkFile FormalParameter ReferenceType File f FormalParameter ReferenceType String text IfStatement BinaryOperation != MemberReference type Literal null BlockStatement IfStatement MethodInvocation type isDir BlockStatement IfStatement MethodInvocation f isDirectory BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found directory: " MemberReference text MemberReference Project MSG_VERBOSE log ReturnStatement MethodInvocation f isDirectory IfStatement MethodInvocation type isFile BlockStatement IfStatement MethodInvocation f isFile BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Found file: " MemberReference text MemberReference Project MSG_VERBOSE log ReturnStatement MethodInvocation f isFile IfStatement MethodInvocation f exists BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference text MemberReference Project MSG_VERBOSE log ReturnStatement MethodInvocation f exists	0
MethodDeclaration Modifier protected BasicType boolean isSelected FormalParameter ReferenceType String name FormalParameter ReferenceType File file IfStatement BinaryOperation != MemberReference selectors Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference selectors length MemberReference ++ i BlockStatement IfStatement MemberReference ! ArraySelector MemberReference i MethodInvocation MemberReference basedir MemberReference name MemberReference file isSelected selectors BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference sysProperties	0
MethodDeclaration Modifier private static ReferenceType Vector FormalParameter ReferenceType Project project FormalParameter ReferenceType Target t FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Task VariableDeclarator tasks MethodInvocation t LocalVariableDeclaration ReferenceType Vector VariableDeclarator elems ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tasks length MemberReference ++ i BlockStatement IfStatement MethodInvocation name MemberReference ArraySelector MemberReference i MethodInvocation getTaskName tasks equals BlockStatement StatementExpression MethodInvocation elems MemberReference ArraySelector MemberReference i tasks addElement ReturnStatement MemberReference elems	1
MethodDeclaration Modifier public FormalParameter BasicType boolean console StatementExpression Assignment This MemberReference console MemberReference console =	0
MethodDeclaration Modifier public FormalParameter ReferenceType fp IfStatement BinaryOperation == MethodInvocation fp getIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier private ReferenceType FormalParameter Modifier final ReferenceType ReturnStatement ClassCreator ReferenceType MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t IfStatement BinaryOperation && MemberReference BinaryOperation instanceof MemberReference t ReferenceType AssertionFailedError BlockStatement StatementExpression MethodInvocation MemberReference test Cast ReferenceType AssertionFailedError MemberReference t IfStatement BinaryOperation && MemberReference MethodInvocation t MethodInvocation getName MethodInvocation Literal equals getClass BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation t getMessage LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator TernaryExpression BinaryOperation != MemberReference msg Literal null ClassCreator ReferenceType AssertionFailedError MemberReference msg ClassCreator ReferenceType AssertionFailedError LocalVariableDeclaration ReferenceType Method VariableDeclarator initCause ClassReference MethodInvocation Literal ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Throwable getMethod ReferenceType Throwable StatementExpression MethodInvocation initCause MemberReference ArrayCreator ReferenceType Object ArrayInitializer MemberReference t invoke StatementExpression MethodInvocation MemberReference test MemberReference CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace StatementExpression MethodInvocation MemberReference test MemberReference t BlockStatement StatementExpression MethodInvocation MemberReference test MemberReference t MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation MemberReference test MemberReference t MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t IfStatement BinaryOperation instanceof MemberReference t ReferenceType AssertionFailedError BlockStatement StatementExpression MethodInvocation MemberReference test Cast ReferenceType AssertionFailedError MemberReference t BlockStatement StatementExpression MethodInvocation MemberReference test MemberReference t MethodDeclaration Modifier public FormalParameter ReferenceType Test test StatementExpression MethodInvocation MemberReference test MethodDeclaration Modifier public FormalParameter ReferenceType Test test StatementExpression MethodInvocation MemberReference test	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement BinaryOperation || BinaryOperation != MemberReference archive Literal null MemberReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public ReferenceType String getContentType IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference type Literal null BinaryOperation > MethodInvocation type Literal "charset" indexOf Literal 0 MethodInvocation type Literal startsWith BlockStatement ReturnStatement MemberReference type ReturnStatement ClassCreator MethodInvocation Literal "; charset=" append MethodInvocation MemberReference charset append MethodInvocation toString ReferenceType StringBuffer TernaryExpression BinaryOperation != MemberReference type Literal null MemberReference type Literal	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType Process VariableDeclarator process MethodInvocation BinaryOperation / MemberReference Literal 2 getProcess StatementExpression MethodInvocation watchdog MemberReference process start LocalVariableDeclaration BasicType int VariableDeclarator retCode MethodInvocation MemberReference process StatementExpression MethodInvocation Literal "process should not have been killed" MethodInvocation ! watchdog killedProcess assertTrue StatementExpression MethodInvocation MethodInvocation Execute MemberReference retCode isFailure assertFalse	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "property" expectBuildExceptionContaining	0
MethodDeclaration Modifier public ReferenceType StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Process exec FormalParameter ReferenceType Project project FormalParameter ReferenceType String cmd FormalParameter ReferenceType String env FormalParameter ReferenceType File workingDir IOException IfStatement BinaryOperation == MemberReference workingDir Literal null BlockStatement ReturnStatement MethodInvocation MemberReference project MemberReference cmd MemberReference env exec ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal "Cannot execute a process in " Literal this	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType String VariableDeclarator Literal IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MemberReference BlockStatement StatementExpression Assignment MemberReference Literal = IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MemberReference BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference IfStatement BinaryOperation != MethodInvocation Runtime MethodInvocation ArrayCreator ReferenceType String ArrayInitializer MemberReference Literal "-s" Literal MethodInvocation getAbsolutePath exec MethodInvocation waitFor getRuntime Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "'" MemberReference Literal " " MemberReference Literal "' failed" TryStatement StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal ClassCreator MethodInvocation getAbsolutePath ReferenceType File MethodInvocation System Literal "root" getProperty Literal StatementExpression MethodInvocation Literal ClassCreator MethodInvocation getAbsolutePath ReferenceType File MethodInvocation System Literal "root" getProperty Literal StatementExpression MethodInvocation delete	0
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int options LocalVariableDeclaration BasicType int VariableDeclarator MemberReference IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference |= IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference |= IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference |= ReturnStatement MemberReference	0
MethodDeclaration Modifier protected tarFile FormalParameter ReferenceType File file FormalParameter ReferenceType tOut FormalParameter ReferenceType String vPath FormalParameter ReferenceType TarFileSet tarFileSet IOException IfStatement MethodInvocation file MemberReference tarFile equals BlockStatement ReturnStatement StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference file MemberReference tOut MemberReference vPath MemberReference tarFileSet	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation MethodInvocation MemberReference getCommandline	1
MethodDeclaration Modifier public FormalParameter BasicType boolean java StatementExpression MethodInvocation Literal "The attribute java is MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier private static ReferenceType RmicAdapter resolveClassName FormalParameter ReferenceType String className BuildException ReturnStatement Cast ReferenceType RmicAdapter MethodInvocation ClasspathUtils MemberReference className ClassReference MethodInvocation getClassLoader ReferenceType ClassReference ReferenceType RmicAdapter newInstance	1
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Class taskClass FormalParameter Modifier final ReferenceType String message LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator dummyName Literal TryStatement StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR StatementExpression MethodInvocation p MemberReference dummyName MemberReference taskClass StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "expected MemberReference message Literal "\", when adding task " MemberReference taskClass fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MemberReference message MethodInvocation e getMessage assertEquals StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation ! p MethodInvocation MemberReference dummyName containsKey assertTrue	1
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes StatementExpression Assignment This MemberReference includes MemberReference includes =	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public stop FormalParameter ReferenceType TestResult result StatementExpression Assignment MemberReference BinaryOperation - MethodInvocation System currentTimeMillis MemberReference = StatementExpression MethodInvocation result This	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier public addModified FormalParameter ReferenceType ModifiedSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addModified	1
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression SuperMethodInvocation MemberReference label	0
MethodDeclaration Modifier protected zipFile FormalParameter ReferenceType File file FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType int mode IOException IfStatement MethodInvocation file MemberReference zipFile equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "A file cannot MethodInvocation getLocation LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fIn ClassCreator ReferenceType FileInputStream MemberReference file TryStatement StatementExpression MethodInvocation MemberReference fIn MemberReference zOut MemberReference vPath BinaryOperation + MethodInvocation file lastModified TernaryExpression MemberReference Literal 1999 Literal 0 Literal null MemberReference mode zipFile StatementExpression MethodInvocation fIn close	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setSize FormalParameter BasicType long size BuildException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal can't change the size of a " Literal " compressed resource"	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference deleteOnExit	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType AntXMLContext context SAXParseException ReturnStatement MemberReference ProjectHelper2	1
MethodDeclaration Modifier public FormalParameter ReferenceType String pattern StatementExpression Assignment This MemberReference pattern MemberReference pattern =	1
MethodDeclaration Modifier public setFlags FormalParameter ReferenceType String flags StatementExpression Assignment This MemberReference flags MemberReference flags =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation MemberReference test Cast ReferenceType Throwable MemberReference t	0
MethodDeclaration Modifier public addParam FormalParameter ReferenceType String key FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Parameter VariableDeclarator ClassCreator ReferenceType Parameter StatementExpression MethodInvocation MemberReference key setName StatementExpression MethodInvocation MethodInvocation String MemberReference value valueOf setValue StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation perms TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation System Literal getProperty StatementExpression MethodInvocation System Literal MemberReference s setProperty StatementExpression MethodInvocation perms	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType Project project BuildException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator classname MethodInvocation getExecutable LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader Literal null TryStatement IfStatement BinaryOperation != MemberReference sysProperties Literal null BlockStatement StatementExpression MethodInvocation sysProperties LocalVariableDeclaration ReferenceType Class VariableDeclarator target Literal null TryStatement IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference target MethodInvocation Class MemberReference classname forName = BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation project MemberReference classpath createClassLoader = StatementExpression MethodInvocation loader MethodInvocation project setParent StatementExpression MethodInvocation loader Literal false StatementExpression MethodInvocation loader StatementExpression MethodInvocation loader Literal true StatementExpression MethodInvocation loader StatementExpression MethodInvocation loader MemberReference classname StatementExpression Assignment MemberReference target MethodInvocation Class MemberReference classname Literal true MemberReference loader forName = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find " MemberReference classname Literal "." Literal " sure you have it in Literal " classpath" StatementExpression Assignment MemberReference main MethodInvocation target Literal "main" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod = IfStatement BinaryOperation == MemberReference main Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not find method in " MemberReference classname IfStatement BinaryOperation == BinaryOperation & MethodInvocation main getModifiers MemberReference Modifier STATIC Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal method in " MemberReference classname Literal " is not declared IfStatement BinaryOperation == MemberReference timeout Literal null BlockStatement StatementExpression MethodInvocation run BlockStatement StatementExpression Assignment MemberReference thread ClassCreator ReferenceType Thread This Literal = LocalVariableDeclaration ReferenceType Task VariableDeclarator MethodInvocation project MethodInvocation Thread currentThread StatementExpression MethodInvocation project MemberReference thread MemberReference StatementExpression MethodInvocation thread Literal true setDaemon LocalVariableDeclaration ReferenceType Watchdog VariableDeclarator w ClassCreator ReferenceType Watchdog MethodInvocation timeout longValue StatementExpression MethodInvocation w This SynchronizedStatement This StatementExpression MethodInvocation thread start StatementExpression MethodInvocation w start TryStatement StatementExpression MethodInvocation wait CatchClause CatchClauseParameter InterruptedException e IfStatement MemberReference timedOut BlockStatement StatementExpression MethodInvocation project Literal MemberReference Project MSG_WARN log BlockStatement StatementExpression Assignment MemberReference thread Literal null = StatementExpression MethodInvocation w stop IfStatement BinaryOperation != MemberReference caught Literal null BlockStatement ThrowStatement MemberReference caught CatchClause CatchClauseParameter BuildException e ThrowStatement MemberReference e CatchClause CatchClauseParameter SecurityException e ThrowStatement MemberReference e CatchClause CatchClauseParameter ThreadDeath e ThrowStatement MemberReference e CatchClause CatchClauseParameter Throwable e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement StatementExpression MethodInvocation loader StatementExpression MethodInvocation loader cleanup StatementExpression Assignment MemberReference loader Literal null = IfStatement BinaryOperation != MemberReference sysProperties Literal null BlockStatement StatementExpression MethodInvocation sysProperties	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation obj getClass MethodInvocation getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Attribute VariableDeclarator other Cast ReferenceType Attribute MemberReference obj IfStatement BinaryOperation == MemberReference name Literal null BlockStatement IfStatement BinaryOperation != MemberReference other name Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! name MemberReference other name equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference defaultValue Literal null BlockStatement IfStatement BinaryOperation != MemberReference other defaultValue Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! defaultValue MemberReference other defaultValue equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation p MethodInvocation ClassReference ReferenceType contains assertTrue	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p	0
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix StatementExpression Assignment This MemberReference prefix MemberReference prefix = IfStatement MethodInvocation ! prefix Literal "." endsWith BlockStatement StatementExpression Assignment This MemberReference prefix Literal "." +=	0
MethodDeclaration Modifier public FormalParameter ReferenceType String label StatementExpression Assignment This MemberReference labelName MemberReference label =	0
MethodDeclaration Modifier public static ReferenceType String replaceProperties FormalParameter ReferenceType Project project FormalParameter ReferenceType String value BuildException ReturnStatement MethodInvocation project MemberReference value replaceProperties	1
MethodDeclaration Modifier public FormalParameter ReferenceType Commandline cmd StatementExpression MethodInvocation MemberReference cmd	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression MethodInvocation removeAllElements IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation classpath Literal "ignore" concatSystemClasspath LocalVariableDeclaration ReferenceType String VariableDeclarator pathElements MethodInvocation list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference pathElements length MemberReference ++ i BlockStatement TryStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i pathElements CatchClause CatchClauseParameter BuildException e	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation ClassCreator ReferenceType Literal	0
MethodDeclaration Modifier public write FormalParameter BasicType int b IOException StatementExpression MethodInvocation left MemberReference b write StatementExpression MethodInvocation right MemberReference b write	1
MethodDeclaration Modifier public addCommandArgument FormalParameter ReferenceType String arg StatementExpression This MethodInvocation MemberReference cmd MemberReference arg addCommandArgument	0
MethodDeclaration Modifier protected ReferenceType IfStatement BinaryOperation == This MemberReference Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType PumpStreamHandler MethodInvocation getOutputStream MethodInvocation getErrorStream ReturnStatement This MemberReference	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference manifestFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "the file attribute is required" LocalVariableDeclaration ReferenceType Manifest VariableDeclarator toWrite MethodInvocation Manifest LocalVariableDeclaration ReferenceType Manifest VariableDeclarator current Literal null LocalVariableDeclaration ReferenceType BuildException VariableDeclarator error Literal null IfStatement MethodInvocation manifestFile exists BlockStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis Literal null LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr Literal null TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference manifestFile = IfStatement BinaryOperation == MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference fis Literal "UTF-8" = BlockStatement StatementExpression Assignment MemberReference isr ClassCreator ReferenceType InputStreamReader MemberReference fis MemberReference encoding = StatementExpression Assignment MemberReference current ClassCreator ReferenceType Manifest MemberReference isr = CatchClause CatchClauseParameter m StatementExpression Assignment MemberReference error ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Existing manifest " MemberReference manifestFile Literal " is invalid" MemberReference m MethodInvocation getLocation = CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference error ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to read " MemberReference manifestFile MemberReference e MethodInvocation getLocation = StatementExpression MethodInvocation FileUtils MemberReference isr close ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation getWarnings MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " Cast ReferenceType String MethodInvocation e nextElement MemberReference Project MSG_WARN log TryStatement IfStatement BinaryOperation && MethodInvocation mode MethodInvocation Literal "update" equals getValue MethodInvocation manifestFile exists BlockStatement IfStatement BinaryOperation != MemberReference current Literal null BlockStatement StatementExpression MethodInvocation toWrite MemberReference current merge IfStatement BinaryOperation != MemberReference error Literal null BlockStatement ThrowStatement MemberReference error StatementExpression MethodInvocation toWrite MemberReference merge CatchClause CatchClauseParameter m ThrowStatement ClassCreator ReferenceType BuildException Literal is invalid" MemberReference m MethodInvocation getLocation IfStatement MethodInvocation toWrite MemberReference current equals BlockStatement StatementExpression MethodInvocation Literal has not do not MemberReference Project MSG_VERBOSE log ReturnStatement LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator w Literal null TryStatement LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference manifestFile LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator osw ClassCreator ReferenceType OutputStreamWriter MemberReference fos MemberReference Manifest StatementExpression Assignment MemberReference w ClassCreator ReferenceType PrintWriter MemberReference osw = StatementExpression MethodInvocation toWrite MemberReference w write CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Failed to write " MemberReference manifestFile MemberReference e MethodInvocation getLocation IfStatement BinaryOperation != MemberReference w Literal null BlockStatement StatementExpression MethodInvocation w close	1
MethodDeclaration Modifier public ReferenceType Enumeration selectorElements IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation selectorElements ReturnStatement SuperMethodInvocation selectorElements	1
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator basedir MethodInvocation MethodInvocation getAbsolutePath StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer MemberReference basedir MemberReference basedir	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference chmod MemberReference =	0
MethodDeclaration Modifier private IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MemberReference recordBuf MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment This MemberReference recordBuf ArraySelector MemberReference i Literal 0 = StatementExpression This MemberReference buffer MethodInvocation This MemberReference recordBuf writeRecord	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator eq ClassCreator ReferenceType StatementExpression MethodInvocation eq Literal StatementExpression MethodInvocation eq Literal " StatementExpression MethodInvocation MethodInvocation ! eq eval assertTrue StatementExpression MethodInvocation eq Literal true StatementExpression MethodInvocation MethodInvocation eq eval assertTrue StatementExpression MethodInvocation eq Literal StatementExpression MethodInvocation MethodInvocation eq eval assertTrue	1
MethodDeclaration Modifier public add FormalParameter ReferenceType BuildException IfStatement BinaryOperation != This MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal one mapper may be added to the " MethodInvocation getTaskName Literal " StatementExpression Assignment This MemberReference MemberReference =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Locator locator StatementExpression Assignment MemberReference context locator MemberReference locator =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String ReturnStatement Literal true	0
MethodDeclaration Modifier protected close StatementExpression MethodInvocation MethodInvocation Literal "<?xml println LocalVariableDeclaration ReferenceType String VariableDeclarator now MethodInvocation ClassCreator ReferenceType Date MemberReference format StatementExpression MethodInvocation rootElement Literal MemberReference now setAttribute TryStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference rootElement MethodInvocation Literal 0 Literal " " write CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression SuperMethodInvocation close	0
MethodDeclaration Modifier public final BuildException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator expected MethodInvocation project Literal getProperty LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator generated MethodInvocation project Literal getProperty StatementExpression MethodInvocation MemberReference expected MemberReference generated assertEquals	0
MethodDeclaration * to enable so that the * found by the directory match * checked to see if they implement * This defaults to false if not * @param on for */ Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String tn StatementExpression Assignment MemberReference MemberReference tn =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" Literal 1" expectBuildException	0
MethodDeclaration Modifier protected BuildException StatementExpression MethodInvocation BinaryOperation + Literal "Reading filters from " MemberReference filtersFile MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference filtersFile getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String publicId StatementExpression Assignment This MemberReference publicId MemberReference publicId =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter BasicType boolean filtering FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile TernaryExpression MemberReference filtering MemberReference globalFilters Literal null MemberReference overwrite MemberReference preserveLastModified copyFile	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Commandline c StatementExpression MethodInvocation MemberReference c removeElement	0
MethodDeclaration Modifier protected handleOutput FormalParameter ReferenceType String output StatementExpression MethodInvocation MemberReference output MemberReference Project MSG_INFO log	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String token StatementExpression MethodInvocation init StatementExpression MethodInvocation MemberReference token StatementExpression MethodInvocation runner Literal ReturnStatement MethodInvocation getToken	1
MethodDeclaration Modifier public FormalParameter BasicType boolean c StatementExpression Assignment MemberReference MemberReference c =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String FormalParameter ReferenceType String FormalParameter ReferenceType URL base LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd MemberReference base setBase StatementExpression MethodInvocation dtd MemberReference StatementExpression MethodInvocation dtd MemberReference setLocation StatementExpression MethodInvocation MemberReference dtd	0
MethodDeclaration Modifier private ReferenceType Enumeration FormalParameter ReferenceType ClassLoader classLoader LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator ret TryStatement StatementExpression Assignment MemberReference ret MethodInvocation classLoader MemberReference resource = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not fetch resources named " MemberReference resource MemberReference e MethodInvocation getLocation IfStatement MethodInvocation ! ret hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Could not load definitions from resource " MemberReference resource Literal ". It could not be found." SwitchStatement MemberReference SwitchStatementCase MemberReference ThrowStatement ClassCreator ReferenceType BuildException MemberReference message SwitchStatementCase MemberReference MemberReference StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_WARN log BreakStatement SwitchStatementCase MemberReference IGNORE StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_VERBOSE log BreakStatement SwitchStatementCase BreakStatement ReturnStatement MemberReference ret	0
MethodDeclaration Modifier protected ReferenceType Properties getProperties FormalParameter ReferenceType String driver FormalParameter ReferenceType String user FormalParameter ReferenceType String FormalParameter ReferenceType String url LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props MemberReference DRIVER MemberReference driver put StatementExpression MethodInvocation props MemberReference USER MemberReference user put StatementExpression MethodInvocation props MemberReference MemberReference put StatementExpression MethodInvocation props MemberReference URL MemberReference url put ReturnStatement MemberReference props	0
MethodDeclaration Modifier public addContains FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public synchronized BasicType int getCount ReturnStatement MemberReference count	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType char c IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference c Literal BinaryOperation == MemberReference c Literal BinaryOperation == MemberReference c Literal BlockStatement ReturnStatement Literal true IfStatement BinaryOperation < MemberReference c Literal 0x20 BlockStatement ReturnStatement Literal false IfStatement BinaryOperation <= MemberReference c Literal BlockStatement ReturnStatement Literal true IfStatement BinaryOperation < MemberReference c Literal BlockStatement ReturnStatement Literal false IfStatement BinaryOperation <= MemberReference c Literal BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v StatementExpression Assignment MemberReference MemberReference v =	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation factories MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean validate StatementExpression Assignment This MemberReference validate MemberReference validate =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation StringUtils ClassCreator ReferenceType StringBuffer Literal Literal "" endsWith assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType tokenizer StatementExpression MethodInvocation MemberReference tokenizer add	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "update" Literal "replace"	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier protected IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation Literal setNamespace	0
MethodDeclaration Modifier public ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i files Cast ReferenceType String MethodInvocation MemberReference i elementAt = ReturnStatement MemberReference files	0
MethodDeclaration Modifier protected listFile FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType BufferedWriter bw FormalParameter ReferenceType String filename IOException BuildException IfStatement MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference filename log LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator ftpfiles MethodInvocation ftp MethodInvocation MemberReference filename listFiles IfStatement BinaryOperation && BinaryOperation != MemberReference ftpfiles Literal null BinaryOperation > MemberReference ftpfiles length Literal 0 BlockStatement StatementExpression MethodInvocation bw MemberReference ArraySelector Literal 0 MethodInvocation toString ftpfiles write StatementExpression MethodInvocation bw newLine StatementExpression MemberReference ++ transferred	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MethodInvocation name MemberReference toLowerCase =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Vector StatementExpression Assignment This MemberReference MemberReference =	1
MethodDeclaration Modifier public final setValue FormalParameter ReferenceType String StatementExpression Assignment MemberReference value MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType instr StatementExpression MethodInvocation instructions MemberReference instr add	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintWriter out FormalParameter ReferenceType Project p FormalParameter ReferenceType Hashtable tasks FormalParameter ReferenceType Hashtable types StatementExpression MethodInvocation MemberReference out MethodInvocation tasks keys MethodInvocation types keys	1
MethodDeclaration Modifier public FormalParameter ReferenceType String from StatementExpression Assignment MemberReference MemberReference from =	0
MethodDeclaration Modifier public ReferenceType File getDir ReturnStatement MethodInvocation MethodInvocation getProject getDir	0
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType FTPClient ftp LocalVariableDeclaration ReferenceType FTPFile VariableDeclarator theFiles Literal null LocalVariableDeclaration Modifier final BasicType int VariableDeclarator Literal 1000 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter Literal 1 BinaryOperation < MemberReference counter MemberReference MemberReference ++ counter BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator localFile MethodInvocation FILE_UTILS BinaryOperation + Literal MethodInvocation Integer MemberReference counter toString Literal ".tmp" Literal null createTempFile LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation localFile getName LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false TryStatement IfStatement BinaryOperation == MemberReference counter Literal 1 BlockStatement StatementExpression Assignment MemberReference theFiles MethodInvocation ftp listFiles = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator counter2 Literal 0 BinaryOperation < MemberReference counter2 MemberReference theFiles length MemberReference ++ counter2 BlockStatement IfStatement MemberReference ArraySelector MemberReference counter2 MethodInvocation getName MethodInvocation MemberReference fileName equals theFiles BlockStatement StatementExpression Assignment MemberReference found Literal true = BreakStatement CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation IfStatement MemberReference ! found BlockStatement StatementExpression MethodInvocation localFile deleteOnExit ReturnStatement MemberReference localFile ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation MethodInvocation getClassName	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private IOException IfStatement BinaryOperation <= This MemberReference su_i2 This MemberReference last BlockStatement StatementExpression Assignment This MemberReference su_chPrev This MemberReference su_ch2 = LocalVariableDeclaration BasicType int VariableDeclarator su_ch2Shadow BinaryOperation & This MemberReference data MemberReference ll8 ArraySelector This MemberReference su_tPos Literal 0xff StatementExpression Assignment This MemberReference su_ch2 MemberReference su_ch2Shadow = StatementExpression Assignment This MemberReference su_tPos This MemberReference data MemberReference ArraySelector This MemberReference su_tPos = StatementExpression This ++ MemberReference su_i2 StatementExpression Assignment This MemberReference currentChar MemberReference su_ch2Shadow = StatementExpression Assignment This MemberReference MemberReference = StatementExpression This MemberReference crc MethodInvocation MemberReference su_ch2Shadow BlockStatement StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	1
MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType Object value StatementExpression MethodInvocation initAll ReturnStatement SuperMethodInvocation MemberReference value contains	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType StatementExpression MethodInvocation p Literal setIncludes LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal StatementExpression MethodInvocation p MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation p MemberReference project LocalVariableDeclaration ReferenceType String VariableDeclarator includes MethodInvocation p MemberReference project StatementExpression MethodInvocation Literal Literal MemberReference ArraySelector Literal 0 includes assertEquals StatementExpression MethodInvocation Literal Literal MemberReference ArraySelector Literal 0 assertEquals	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation open StatementExpression MethodInvocation close StatementExpression MethodInvocation BinaryOperation + MemberReference f Literal " has been MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Timer VariableDeclarator timer ClassCreator ReferenceType Timer StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation timer stop IfStatement MemberReference TRACE StatementExpression MethodInvocation System.out BinaryOperation + Literal " time=" MethodInvocation timer time println StatementExpression MethodInvocation BinaryOperation && BinaryOperation >= MethodInvocation timer time BinaryOperation - Literal MemberReference BinaryOperation < MethodInvocation timer time Literal 60000 assertTrue	1
MethodDeclaration Modifier public addContains FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private IfStatement BinaryOperation > MethodInvocation filecopyList size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MethodInvocation filecopyList size Literal " file" TernaryExpression BinaryOperation == MethodInvocation filecopyList size Literal 1 Literal "" Literal "s" Literal " to " MethodInvocation destDir getAbsolutePath log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation filecopyList keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fromFile Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator toFile Cast ReferenceType String MethodInvocation filecopyList MemberReference fromFile get TryStatement StatementExpression MethodInvocation FileUtils MethodInvocation MemberReference fromFile MemberReference toFile copyFile getFileUtils CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference fromFile Literal " to " MemberReference toFile Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MethodInvocation project MethodInvocation getAbsolutePath MemberReference File separator MemberReference MemberReference MSVSS MemberReference MSVSS BinaryOperation + MemberReference MSVSS MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME Literal "," MemberReference MemberReference MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference project MemberReference StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference VSS_USERNAME Literal "," MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MemberReference DATE setDate StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType MSVSS ReferenceType VariableDeclarator ClassCreator ReferenceType MSVSS ReferenceType StatementExpression MethodInvocation MemberReference setValue StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType MSVSS ReferenceType VariableDeclarator ClassCreator ReferenceType MSVSS ReferenceType StatementExpression MethodInvocation MemberReference setValue StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference commandline MethodInvocation = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier protected cleanUp StatementExpression SuperMethodInvocation cleanUp IfStatement BinaryOperation || MemberReference ! doubleFilePass BinaryOperation && MemberReference doubleFilePass MemberReference ! skipWriting BlockStatement StatementExpression Assignment MemberReference manifest Literal null = StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference filesetManifest Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation rootEntries removeAllElements	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference excludesFileList	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType FileSet fs StatementExpression MethodInvocation MemberReference fs addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation System.out Literal println	0
MethodDeclaration Modifier public FormalParameter ReferenceType File afile StatementExpression Assignment This MemberReference MemberReference afile =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment This MemberReference to MemberReference to =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String params StatementExpression Assignment MemberReference MemberReference params =	0
MethodDeclaration Modifier public putNextEntry FormalParameter ReferenceType ZipEntry ze IOException StatementExpression MethodInvocation StatementExpression Assignment MemberReference entry MemberReference ze = StatementExpression MethodInvocation entries MemberReference entry addElement IfStatement BinaryOperation == MethodInvocation entry getMethod Literal - 1 BlockStatement StatementExpression MethodInvocation entry MemberReference method setMethod IfStatement BinaryOperation == MethodInvocation entry Literal - 1 BlockStatement StatementExpression MethodInvocation entry MethodInvocation System currentTimeMillis IfStatement BinaryOperation && BinaryOperation == MethodInvocation entry getMethod MemberReference STORED BinaryOperation == MemberReference raf Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation entry getSize Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + BinaryOperation + Literal size is required Literal " STORED method when not to Literal " file" IfStatement BinaryOperation == MethodInvocation entry Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + Literal checksum is required for Literal " method when not to a file" StatementExpression MethodInvocation entry MethodInvocation entry getSize IfStatement BinaryOperation && BinaryOperation == MethodInvocation entry getMethod MemberReference DEFLATED MemberReference BlockStatement StatementExpression MethodInvocation def MemberReference level setLevel StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference entry	0
MethodDeclaration Modifier public IfStatement MemberReference loginSuceeded BlockStatement IfStatement MethodInvocation MemberReference remoteTmpDir changeRemoteDir BlockStatement LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator ds MethodInvocation myFTPTask MemberReference ftp newScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator reportFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty Literal "src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html" StatementExpression MethodInvocation Literal "No index.html Not generated?" MethodInvocation reportFile exists assertTrue StatementExpression MethodInvocation Literal "Cant read the report file." MethodInvocation reportFile canRead assertTrue StatementExpression MethodInvocation Literal "File shouldnt be empty." BinaryOperation > MethodInvocation reportFile length Literal 0 assertTrue LocalVariableDeclaration ReferenceType URL VariableDeclarator reportUrl ClassCreator ReferenceType URL MethodInvocation FileUtils MethodInvocation MethodInvocation reportFile getAbsolutePath toURI getFileUtils LocalVariableDeclaration ReferenceType InputStream VariableDeclarator reportStream MethodInvocation reportUrl openStream StatementExpression MethodInvocation Literal "This shouldnt be an empty stream." BinaryOperation > MethodInvocation reportStream available Literal 0 assertTrue	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public messageLogged FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation event getMessage LocalVariableDeclaration ReferenceType Integer VariableDeclarator Cast ReferenceType Integer MethodInvocation MemberReference message get IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation MemberReference message ClassCreator ReferenceType Integer BinaryOperation + MethodInvocation intValue Literal 1 put StatementExpression SuperMethodInvocation MemberReference event messageLogged	1
MethodDeclaration Modifier protected IfStatement BinaryOperation > MethodInvocation completeDirMap size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation completeDirMap keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator fromDir Cast ReferenceType File MethodInvocation e nextElement LocalVariableDeclaration ReferenceType File VariableDeclarator toDir Cast ReferenceType File MethodInvocation completeDirMap MemberReference fromDir get LocalVariableDeclaration BasicType boolean VariableDeclarator renamed Literal false TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Attempting to rename dir: " MemberReference fromDir Literal " to " MemberReference toDir MemberReference verbosity log StatementExpression Assignment MemberReference renamed MethodInvocation MemberReference fromDir MemberReference toDir MemberReference filtering MemberReference forceOverwrite = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to rename dir " MemberReference fromDir Literal " to " MemberReference toDir Literal " due to " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation IfStatement MemberReference ! renamed BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MethodInvocation getProject setProject StatementExpression MethodInvocation fs MemberReference fromDir StatementExpression MethodInvocation MemberReference fs LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation ds getIncludedDirectories StatementExpression MethodInvocation MemberReference fromDir MemberReference toDir MemberReference files MemberReference dirs LocalVariableDeclaration BasicType int VariableDeclarator moveCount MethodInvocation fileCopyMap size IfStatement BinaryOperation > MemberReference moveCount Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference moveCount Literal " file" TernaryExpression BinaryOperation == MemberReference moveCount Literal 1 Literal "" Literal "s" Literal " to " MethodInvocation destDir getAbsolutePath log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation fileCopyMap keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fromFile Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference fromFile LocalVariableDeclaration BasicType boolean VariableDeclarator selfMove Literal false IfStatement MethodInvocation f exists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator toFiles Cast ReferenceType String MethodInvocation fileCopyMap MemberReference fromFile get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator toFile Cast ReferenceType String MemberReference ArraySelector MemberReference i toFiles IfStatement MethodInvocation fromFile MemberReference toFile equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Skipping of " MemberReference fromFile MemberReference verbosity log StatementExpression Assignment MemberReference selfMove Literal true = ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator d ClassCreator ReferenceType File MemberReference toFile IfStatement BinaryOperation && BinaryOperation == BinaryOperation + MemberReference i Literal 1 MemberReference toFiles length MemberReference ! selfMove BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference d MemberReference filtering MemberReference forceOverwrite BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference d MemberReference filtering MemberReference forceOverwrite copyFile IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dirCopyMap keys LocalVariableDeclaration BasicType int VariableDeclarator createCount Literal 0 WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fromDirName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator toDirNames Cast ReferenceType String MethodInvocation dirCopyMap MemberReference fromDirName get LocalVariableDeclaration BasicType boolean VariableDeclarator selfMove Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toDirNames length MemberReference ++ i BlockStatement IfStatement MethodInvocation fromDirName MemberReference ArraySelector MemberReference i toDirNames equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Skipping of " MemberReference fromDirName MemberReference verbosity log StatementExpression Assignment MemberReference selfMove Literal true = ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator d ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i toDirNames IfStatement MethodInvocation ! d exists BlockStatement IfStatement MethodInvocation ! d mkdirs BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to create directory " MethodInvocation d getAbsolutePath MemberReference Project MSG_ERR log BlockStatement StatementExpression MemberReference ++ createCount LocalVariableDeclaration ReferenceType File VariableDeclarator fromDir ClassCreator ReferenceType File MemberReference fromDirName IfStatement BinaryOperation && MemberReference ! selfMove MethodInvocation MemberReference fromDir okToDelete BlockStatement StatementExpression MethodInvocation MemberReference fromDir deleteDir IfStatement BinaryOperation > MemberReference createCount Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation dirCopyMap size Literal " empty director" TernaryExpression BinaryOperation == MethodInvocation dirCopyMap size Literal 1 Literal "y" Literal "ies" Literal " to " MemberReference createCount Literal " empty director" TernaryExpression BinaryOperation == MemberReference createCount Literal 1 Literal "y" Literal "ies" Literal " " MethodInvocation destDir getAbsolutePath log	1
MethodDeclaration Modifier protected ReferenceType Collection getCollection LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement outer ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation w MethodInvocation iterator MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation next ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation getSelectors MethodInvocation i hasNext BlockStatement IfStatement Cast ReferenceType ResourceSelector MethodInvocation i next BlockStatement ContinueStatement outer StatementExpression MethodInvocation result MemberReference r add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected BasicType boolean check FormalParameter ReferenceType File basedir FormalParameter ReferenceType String files LocalVariableDeclaration BasicType boolean VariableDeclarator upToDate Literal true IfStatement MethodInvocation ! MemberReference files MemberReference basedir BlockStatement StatementExpression Assignment MemberReference upToDate Literal false = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement IfStatement MethodInvocation tarFile ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference i files equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "A tar file cannot " Literal "itself" MethodInvocation getLocation ReturnStatement MemberReference upToDate	1
MethodDeclaration Modifier public FormalParameter ReferenceType targetType StatementExpression Assignment This MemberReference targetType MethodInvocation targetType getValue =	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType ZipShort InstantiationException IllegalAccessException LocalVariableDeclaration ReferenceType Class VariableDeclarator c Cast ReferenceType Class MethodInvocation MemberReference get IfStatement BinaryOperation != MemberReference c Literal null BlockStatement ReturnStatement Cast ReferenceType MethodInvocation c newInstance LocalVariableDeclaration ReferenceType UnrecognizedExtraField VariableDeclarator u ClassCreator ReferenceType UnrecognizedExtraField StatementExpression MethodInvocation u MemberReference ReturnStatement MemberReference u	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal MethodInvocation exists getProject assertTrue StatementExpression MethodInvocation MethodInvocation ! MethodInvocation Literal MethodInvocation exists getProject assertTrue	0
MethodDeclaration Modifier public ReferenceType String getTaskName ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean decimal StatementExpression Assignment This MemberReference decimal MemberReference decimal =	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation formatter MemberReference evt	0
MethodDeclaration Modifier protected BasicType boolean isChecked ReturnStatement MemberReference checked	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator savedFile MemberReference myFile StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType Properties VariableDeclarator properties MethodInvocation loadProperties LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation MemberReference properties StatementExpression MethodInvocation properties MemberReference MethodInvocation String BinaryOperation + MemberReference Literal 1 valueOf put LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator output Literal null TryStatement StatementExpression Assignment MemberReference output ClassCreator ReferenceType FileOutputStream MemberReference myFile = LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator header Literal "Build Number for not StatementExpression MethodInvocation properties MemberReference output MemberReference header store CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "Error while " MemberReference myFile ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference ioe IfStatement BinaryOperation != Literal null MemberReference output BlockStatement TryStatement StatementExpression MethodInvocation output close CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation BinaryOperation + Literal "error closing output stream " MemberReference ioe MemberReference Project MSG_ERR log StatementExpression Assignment MemberReference myFile MemberReference savedFile = StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation String MemberReference valueOf setNewProperty getProject	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class Entry for " MemberReference className Literal "[" MemberReference index Literal "]"	0
MethodDeclaration Modifier public static ReferenceType Process launch FormalParameter ReferenceType Project project FormalParameter ReferenceType String command FormalParameter ReferenceType String env FormalParameter ReferenceType File dir FormalParameter BasicType boolean IOException IfStatement BinaryOperation && BinaryOperation != MemberReference dir Literal null MethodInvocation ! dir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference dir Literal " doesn't exist." LocalVariableDeclaration ReferenceType VariableDeclarator launcher TernaryExpression BinaryOperation && MemberReference BinaryOperation != MemberReference Literal null MemberReference MemberReference ReturnStatement MethodInvocation launcher MemberReference project MemberReference command MemberReference env MemberReference dir exec	1
MethodDeclaration Modifier public printStackTrace FormalParameter ReferenceType PrintStream ps SynchronizedStatement MemberReference ps StatementExpression SuperMethodInvocation MemberReference ps printStackTrace IfStatement BinaryOperation != MemberReference cause Literal null BlockStatement StatementExpression MethodInvocation ps Literal "--- Exception ---" println StatementExpression MethodInvocation cause MemberReference ps printStackTrace	1
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType Project project ReturnStatement MethodInvocation parent MemberReference project	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public appendSelector FormalParameter ReferenceType FileSelector selector IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression SuperMethodInvocation MemberReference selector appendSelector	1
MethodDeclaration * @see */ Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MemberReference MethodInvocation event MethodInvocation getName getLog StatementExpression MethodInvocation MemberReference log BinaryOperation + Literal " MethodInvocation event MethodInvocation getName MemberReference Project MSG_VERBOSE Literal null	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal StatementExpression MethodInvocation execute LocalVariableDeclaration ReferenceType String VariableDeclarator prop MethodInvocation project Literal getProperty StatementExpression MethodInvocation MemberReference prop assertNotNull	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private FormalParameter ReferenceType String result FormalParameter ReferenceType String where StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference where Literal " '" MemberReference result Literal "' must not contain print BinaryOperation == MethodInvocation result Literal to indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ReturnStatement This BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MethodInvocation MethodInvocation getProject getReferencedObject IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "reference is of wrong type" ReturnStatement Cast ReferenceType MemberReference o	0
MethodDeclaration * @see */ Modifier public taskFinished FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType Object VariableDeclarator real MemberReference task IfStatement BinaryOperation instanceof MemberReference task ReferenceType UnknownElement BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator realObj Cast ReferenceType UnknownElement MemberReference task IfStatement BinaryOperation != MemberReference realObj Literal null BlockStatement StatementExpression Assignment MemberReference real MemberReference realObj = LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MethodInvocation real MethodInvocation getName getClass Literal null getLog IfStatement BinaryOperation == MethodInvocation event getException Literal null BlockStatement IfStatement MethodInvocation log isTraceEnabled BlockStatement StatementExpression MethodInvocation MemberReference log BinaryOperation + BinaryOperation + Literal "Task \"" MethodInvocation task getTaskName Literal "\" MemberReference Project MSG_VERBOSE Literal null BlockStatement StatementExpression MethodInvocation MemberReference log BinaryOperation + BinaryOperation + Literal "Task \"" MethodInvocation task getTaskName Literal "\" finished with error." MemberReference Project MSG_ERR MethodInvocation event getException	1
MethodDeclaration Modifier public StatementExpression SuperMethodInvocation MemberReference task	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference displayName	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType int IfStatement MemberReference started BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "Cannot set buffer size on a running StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference implementation	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference file Literal null BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference logLevel log BlockStatement LocalVariableDeclaration ReferenceType Writer VariableDeclarator out Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation file getAbsolutePath IfStatement BinaryOperation || BinaryOperation == MemberReference encoding Literal null BinaryOperation == MethodInvocation encoding length Literal 0 BlockStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileWriter MemberReference filename MemberReference append = BlockStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference filename MemberReference append MemberReference encoding = StatementExpression MethodInvocation out MemberReference message Literal 0 MethodInvocation message length write CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference out close	1
MethodDeclaration Modifier protected IfStatement MethodInvocation currentElement Literal equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference currentText LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation MethodInvocation META_DIR length MethodInvocation length substring LocalVariableDeclaration ReferenceType File VariableDeclarator descriptorFile ClassCreator ReferenceType File MemberReference srcDir MemberReference fileName StatementExpression MethodInvocation ejbFiles MemberReference MemberReference descriptorFile put	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement MethodInvocation Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute must not be empty" StatementExpression MethodInvocation targets MemberReference add StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier private static ReferenceType Class ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement TryStatement ReturnStatement MethodInvocation Class MemberReference ArraySelector MemberReference i forName CatchClause CatchClauseParameter ClassNotFoundException cnfe ReturnStatement Literal null	0
MethodDeclaration Modifier protected FormalParameter ReferenceType CommandlineJava cmd FormalParameter ReferenceType String argument IfStatement BinaryOperation && BinaryOperation != MemberReference argument Literal null BinaryOperation != MethodInvocation argument length Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference argument setValue createArgument	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public write FormalParameter BasicType int b IOException LocalVariableDeclaration BasicType byte VariableDeclarator buff ArrayCreator BasicType byte Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 buff Cast BasicType byte BinaryOperation & MemberReference b Literal 0xff = StatementExpression MethodInvocation MemberReference buff Literal 0 Literal 1 write	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference value setNewProperty getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation nestedTasks MemberReference nestedTask addElement	1
MethodDeclaration Modifier public FormalParameter ReferenceType i StatementExpression MethodInvocation MemberReference i addElement	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement Cast BasicType int MemberReference value	0
MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation StatementExpression Assignment MemberReference eof Literal true =	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String url FormalParameter ReferenceType Properties info ReturnStatement ArrayCreator ReferenceType Literal 0	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation myCopy MemberReference rc add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is expectLog	0
MethodDeclaration Modifier public ReferenceType Enumeration elements StatementExpression MethodInvocation initAll ReturnStatement SuperMethodInvocation elements	1
MethodDeclaration Modifier public ReferenceType File resolve FormalParameter Modifier final ReferenceType Extension extension FormalParameter Modifier final ReferenceType Project project BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ant ClassCreator ReferenceType StatementExpression MethodInvocation ant MemberReference project setProject StatementExpression MethodInvocation ant Literal false StatementExpression MethodInvocation ant MethodInvocation getName TryStatement LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator dir MethodInvocation MethodInvocation getCanonicalFile getParentFile StatementExpression MethodInvocation ant MemberReference dir CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation ioe getMessage MemberReference ioe IfStatement BinaryOperation != Literal null MemberReference target BlockStatement StatementExpression MethodInvocation ant MemberReference target StatementExpression MethodInvocation ant execute ReturnStatement MemberReference destfile	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String replace StatementExpression Assignment This MemberReference replace MethodInvocation Project MemberReference replace toBoolean =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference doUpdate	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected IfStatement BinaryOperation != Literal null This MemberReference asOfDate BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " Using view as of date " MethodInvocation log	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MethodInvocation Literal " end println StatementExpression SuperMethodInvocation MemberReference evt	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ls MethodInvocation System Literal "line.separator" getProperty StatementExpression MethodInvocation perms TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation System Literal "line.separator" MemberReference ls setProperty StatementExpression MethodInvocation Literal "Could perform an action that should have been forbidden." fail CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation perms	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType Vector ReturnStatement MemberReference contains	1
MethodDeclaration Modifier public FormalParameter ReferenceType String unit StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - The method has been deprecated." Literal " Use instead." log LocalVariableDeclaration ReferenceType VariableDeclarator u ClassCreator ReferenceType StatementExpression MethodInvocation u MemberReference unit setValue StatementExpression Assignment MemberReference field MethodInvocation u =	1
MethodDeclaration Modifier private BasicType boolean isSymlink FormalParameter ReferenceType File base FormalParameter ReferenceType Vector pathElements IfStatement BinaryOperation > MethodInvocation pathElements size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator current Cast ReferenceType String MethodInvocation pathElements Literal 0 remove TryStatement ReturnStatement BinaryOperation || MethodInvocation FILE_UTILS MemberReference base MemberReference current isSymbolicLink MethodInvocation ClassCreator ReferenceType File MemberReference base MemberReference current MemberReference pathElements isSymlink CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "IOException caught while checking " Literal "for couldn't get canonical StatementExpression MethodInvocation System.err MemberReference msg println ReturnStatement Literal false	1
MethodDeclaration Modifier public run WhileStatement MethodInvocation ! channel BlockStatement IfStatement BinaryOperation == MemberReference thread Literal null BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation Literal 500 sleep CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier private ReferenceType String IfStatement MethodInvocation filesets isEmpty BlockStatement ReturnStatement Literal "" LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator urls ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator list MethodInvocation filesets listIterator WhileStatement MethodInvocation list hasNext BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator set Cast ReferenceType FileSet MethodInvocation list next LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation set MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation scanner getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation scanner getBasedir MemberReference ArraySelector MemberReference i files StatementExpression MethodInvocation MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator asUrl MethodInvocation MemberReference f toURL StatementExpression MethodInvocation urls MemberReference asUrl append StatementExpression MethodInvocation MemberReference asUrl MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation urls MemberReference separator append StatementExpression MemberReference ++ count ReturnStatement MethodInvocation MemberReference urls MemberReference count stripTrailingSeparator	1
MethodDeclaration Modifier public addDate FormalParameter ReferenceType DateSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addDate	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Project project FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable FormalParameter BasicType int priority LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent MemberReference project StatementExpression MethodInvocation event MemberReference StatementExpression MethodInvocation MemberReference event MemberReference message MemberReference priority	0
MethodDeclaration Modifier protected ReferenceType Enumeration findResources FormalParameter ReferenceType String name IOException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator mine ClassCreator ReferenceType MemberReference name LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator base IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null BinaryOperation != MemberReference parent MethodInvocation getParent BlockStatement StatementExpression Assignment MemberReference base MethodInvocation parent MemberReference name = BlockStatement StatementExpression Assignment MemberReference base ClassCreator ReferenceType CollectionUtils ReferenceType = IfStatement MethodInvocation MemberReference name isParentFirst BlockStatement ReturnStatement MethodInvocation CollectionUtils MemberReference base MemberReference mine append IfStatement MemberReference BlockStatement ReturnStatement TernaryExpression BinaryOperation == MethodInvocation Literal null MemberReference mine MethodInvocation CollectionUtils MemberReference mine MethodInvocation MethodInvocation MemberReference name append BlockStatement ReturnStatement MethodInvocation CollectionUtils MemberReference mine MemberReference base append	1
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier private synchronized close IfStatement BinaryOperation != MemberReference conn Literal null BlockStatement TryStatement IfStatement BinaryOperation instanceof MemberReference conn ReferenceType JarURLConnection BlockStatement LocalVariableDeclaration ReferenceType JarURLConnection VariableDeclarator Cast ReferenceType JarURLConnection MemberReference conn LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jf MethodInvocation StatementExpression MethodInvocation jf close StatementExpression Assignment MemberReference jf Literal null = IfStatement BinaryOperation instanceof MemberReference conn ReferenceType HttpURLConnection BlockStatement StatementExpression Cast ReferenceType HttpURLConnection MemberReference conn CatchClause CatchClauseParameter IOException exc StatementExpression Assignment MemberReference conn Literal null =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ExtensionSet StatementExpression MethodInvocation dependencies MemberReference add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text StatementExpression MethodInvocation helper MemberReference text	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "Attempt to use a URI expectBuildExceptionContaining	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public FormalParameter BasicType boolean r IfStatement MemberReference r BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType we StatementExpression MethodInvocation Literal are never they contain at least a manifest file" MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool LocalVariableDeclaration ReferenceType VariableDeclarator methodClass Cast ReferenceType MethodInvocation constantPool MemberReference getEntry StatementExpression MethodInvocation methodClass MemberReference constantPool resolve StatementExpression Assignment MemberReference MethodInvocation methodClass getClassName = LocalVariableDeclaration ReferenceType VariableDeclarator nt Cast ReferenceType MethodInvocation constantPool MemberReference getEntry StatementExpression MethodInvocation nt MemberReference constantPool resolve StatementExpression Assignment MemberReference methodName MethodInvocation nt getName = StatementExpression Assignment MemberReference MethodInvocation nt getType = StatementExpression SuperMethodInvocation MemberReference constantPool resolve	1
MethodDeclaration Modifier public FormalParameter ReferenceType File srcDir StatementExpression Assignment This MemberReference srcDir MemberReference srcDir =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType wrapper StatementExpression MethodInvocation wStack MemberReference wrapper addElement	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public characters FormalParameter BasicType char ch FormalParameter BasicType int start FormalParameter BasicType int len SAXException StatementExpression Assignment MemberReference currentText ClassCreator MethodInvocation MemberReference start BinaryOperation + MemberReference start MemberReference len substring ReferenceType String MemberReference ch +=	1
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference test StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference Literal ", " MethodInvocation t getMessage Literal ")" IfStatement MemberReference BlockStatement StatementExpression MethodInvocation res stop	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation == MemberReference parent Literal null	0
MethodDeclaration Modifier public ReferenceType String IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Vector VariableDeclarator packages MethodInvocation JavaEnvUtils LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation packages elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName Cast ReferenceType String MethodInvocation e nextElement StatementExpression MethodInvocation MemberReference packageName	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation getViewPathBasename MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType int getMode IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType ArchiveResource MethodInvocation getCheckedRef StatementExpression MethodInvocation ReturnStatement MemberReference mode	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b	0
MethodDeclaration Modifier public ReferenceType Object get ReturnStatement MethodInvocation get	0
MethodDeclaration Modifier public final BasicType boolean convert FormalParameter ReferenceType Native2Ascii args FormalParameter ReferenceType File srcFile FormalParameter ReferenceType File destFile BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation MemberReference cmd MemberReference args setup StatementExpression MethodInvocation MemberReference cmd MemberReference args MemberReference srcFile MemberReference destFile ReturnStatement MethodInvocation MemberReference cmd MemberReference args run	1
MethodDeclaration Modifier public ReferenceType StatementExpression Assignment MemberReference success ClassCreator ReferenceType = ReturnStatement MemberReference success	0
MethodDeclaration Modifier public validateAttributes BuildException IfStatement BinaryOperation == MethodInvocation task getAction Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The attribute must be set" IfStatement MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Invalid action \"" MethodInvocation task getAction Literal "\" passed" IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The classpath attribute must be set"	1
MethodDeclaration Modifier public ReferenceType Method FormalParameter ReferenceType Class proxyClass TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator execMethod MethodInvocation proxyClass MemberReference execMethodName Literal null getMethod IfStatement MethodInvocation ! MethodInvocation execMethod getReturnType equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "return type of " MemberReference execMethodName Literal "() should be " Literal "void but was \"" MethodInvocation execMethod getReturnType Literal "\" in " MemberReference proxyClass StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_WARN log ReturnStatement MemberReference execMethod CatchClause CatchClauseParameter NoSuchMethodException e LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + BinaryOperation + Literal "No public " MemberReference execMethodName Literal "() method in " MemberReference proxyClass StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	1
MethodDeclaration Modifier protected log FormalParameter ReferenceType String message StatementExpression MethodInvocation buffer MethodInvocation MemberReference StringUtils LINE_SEP append MemberReference message append	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "windows" Literal Literal Literal Literal	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator specificMessage Literal "A single condition is required." LocalVariableDeclaration BasicType char VariableDeclarator c ArrayInitializer Literal 'a' Literal 'b' LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator target ClassCreator ReferenceType StringBuffer Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference c length MemberReference ++ i BlockStatement StatementExpression MethodInvocation target BinaryOperation - MethodInvocation target length Literal 1 MemberReference ArraySelector MemberReference i c StatementExpression MethodInvocation MethodInvocation target toString Literal is required to fail MemberReference specificMessage expectSpecificBuildException	1
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType command FormalParameter ReferenceType Hashtable filesToBuild FormalParameter BasicType long outputTimestamp LocalVariableDeclaration BasicType int VariableDeclarator filesOutOfDate Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation || BinaryOperation != MethodInvocation Literal null BinaryOperation == MethodInvocation filesets size Literal 0 IfStatement MemberReference BlockStatement IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal "." getProject StatementExpression MethodInvocation BinaryOperation + Literal from source directory " MethodInvocation MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation MethodInvocation getDirectoryScanner StatementExpression Assignment MemberReference filesOutOfDate MethodInvocation command MemberReference scanner MemberReference filesToBuild MemberReference outputTimestamp scanOneFileset = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt StatementExpression Assignment MemberReference filesOutOfDate MethodInvocation command MethodInvocation fs MethodInvocation getProject getDirectoryScanner MemberReference filesToBuild MemberReference outputTimestamp scanOneFileset += ReturnStatement MemberReference filesOutOfDate	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation ArrayCreator BasicType byte ArrayInitializer Literal 0 write StatementExpression MethodInvocation close StatementExpression MethodInvocation BinaryOperation + MemberReference f Literal " has been MethodInvocation f exists assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType File src StatementExpression Assignment MemberReference srcFile MemberReference src =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" Literal is invalid - section starts with Literal "Invalid expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter BasicType boolean update StatementExpression Assignment This MemberReference update MemberReference update =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf MethodInvocation BinaryOperation * Literal 1024 Literal 300 Literal 'a' ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 1000 MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation StringUtils MemberReference buf Literal endsWith assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType list StatementExpression MethodInvocation MemberReference list add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String tn StatementExpression Assignment MemberReference MemberReference tn =	0
MethodDeclaration Modifier public test3 LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation MemberReference tempFile IfStatement MethodInvocation file exists BlockStatement StatementExpression MethodInvocation file delete StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation file exists assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintWriter out StatementExpression MethodInvocation visited clear	1
MethodDeclaration Modifier public ReferenceType String getLabel ReturnStatement MemberReference label	0
MethodDeclaration Modifier public close IOException StatementExpression This MemberReference buffer MethodInvocation close	1
MethodDeclaration Modifier public BasicType int fileSize ReturnStatement MethodInvocation files size	0
MethodDeclaration Modifier public ReferenceType AntTypeDefinition FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference ReturnStatement MethodInvocation antTypeTable MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal Literal "root" LocalVariableDeclaration ReferenceType Element VariableDeclarator child MethodInvocation d Literal Literal "child" StatementExpression MethodInvocation root MemberReference child LocalVariableDeclaration ReferenceType Element VariableDeclarator child2 MethodInvocation d Literal Literal "child" StatementExpression MethodInvocation root MemberReference child2 LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation d Literal Literal StatementExpression MethodInvocation child2 MemberReference LocalVariableDeclaration ReferenceType Element VariableDeclarator child3 MethodInvocation d Literal Literal "child" StatementExpression MethodInvocation root MemberReference child3 LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType Literal false MemberReference StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal " MemberReference StringUtils LINE_SEP Literal MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier private ReferenceType Project getProject FormalParameter ReferenceType String e FormalParameter BasicType boolean f ReturnStatement MethodInvocation MemberReference e MemberReference f Literal false getProject	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType String getStyle ReturnStatement TernaryExpression BinaryOperation != MemberReference style Literal null MemberReference style Literal ""	0
MethodDeclaration Modifier private FormalParameter ReferenceType Method method LocalVariableDeclaration ReferenceType Class VariableDeclarator argClass MethodInvocation method ArraySelector Literal 0 getParameterTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator c Literal 0 BinaryOperation < MemberReference c MethodInvocation addTypeMethods size MemberReference ++ c BlockStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator current Cast ReferenceType Method MethodInvocation addTypeMethods MemberReference c get IfStatement MethodInvocation current ArraySelector Literal 0 MethodInvocation MemberReference argClass equals getParameterTypes BlockStatement IfStatement MethodInvocation method MethodInvocation Literal "addConfigured" equals getName BlockStatement StatementExpression MethodInvocation addTypeMethods MemberReference c MemberReference method set ReturnStatement IfStatement MethodInvocation current ArraySelector Literal 0 MethodInvocation MemberReference argClass isAssignableFrom getParameterTypes BlockStatement StatementExpression MethodInvocation addTypeMethods MemberReference c MemberReference method add ReturnStatement StatementExpression MethodInvocation addTypeMethods MemberReference method add	1
MethodDeclaration Modifier private checkParameters BuildException IfStatement MethodInvocation ! MemberReference propertyfile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal token must not be MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType String max StatementExpression MethodInvocation MethodInvocation MemberReference max getCommandline	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType c IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression MethodInvocation comp MemberReference c add	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute BuildException IfStatement Literal MethodInvocation MethodInvocation getTaskType equals "style" BlockStatement StatementExpression MethodInvocation Literal "Warning: the task name is deprecated. Use instead." MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType File VariableDeclarator MemberReference baseDir LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner LocalVariableDeclaration ReferenceType String VariableDeclarator list LocalVariableDeclaration ReferenceType String VariableDeclarator dirs IfStatement BinaryOperation && BinaryOperation == MemberReference xslResource Literal null BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal the " Literal either as a filename in style " Literal or as a resource" MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference xslResource Literal null BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal the " Literal either as a filename in style " Literal or as a resource but not " Literal MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference inFile Literal null MethodInvocation ! inFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "input file " MethodInvocation inFile toString Literal " does not exist" MethodInvocation getLocation TryStatement IfStatement BinaryOperation == MemberReference baseDir Literal null BlockStatement StatementExpression Assignment MemberReference baseDir MethodInvocation MethodInvocation Literal "." getProject = StatementExpression Assignment MemberReference liaison MethodInvocation = IfStatement BinaryOperation instanceof MemberReference liaison ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference liaison StatementExpression MethodInvocation BinaryOperation + Literal "Using " MethodInvocation liaison MethodInvocation toString getClass MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator stylesheet MethodInvocation MethodInvocation MemberReference getProject IfStatement MethodInvocation ! stylesheet exists BlockStatement StatementExpression Assignment MemberReference stylesheet MethodInvocation FILE_UTILS MemberReference baseDir MemberReference = IfStatement MethodInvocation stylesheet exists BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "DEPRECATED - the attribute should be " Literal the log StatementExpression MethodInvocation Literal " not the log LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr ClassCreator ReferenceType FileResource StatementExpression MethodInvocation fr MethodInvocation getProject setProject StatementExpression MethodInvocation fr MemberReference stylesheet StatementExpression Assignment MemberReference xslResource MemberReference fr = IfStatement BinaryOperation && BinaryOperation != MemberReference inFile Literal null BinaryOperation != MemberReference outFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference inFile MemberReference outFile MemberReference xslResource process ReturnStatement StatementExpression MethodInvocation IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference scanner MethodInvocation MemberReference baseDir getDirectoryScanner = StatementExpression MethodInvocation BinaryOperation + Literal into " MemberReference destDir MemberReference Project MSG_INFO log StatementExpression Assignment MemberReference list MethodInvocation scanner getIncludedFiles = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference baseDir MemberReference ArraySelector MemberReference i list MemberReference destDir MemberReference xslResource process IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference dirs MethodInvocation scanner getIncludedDirectories = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference dirs length MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference list ClassCreator MethodInvocation list ReferenceType File MemberReference baseDir MemberReference ArraySelector MemberReference j dirs = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference list length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference baseDir BinaryOperation + BinaryOperation + MemberReference ArraySelector MemberReference j dirs MemberReference File separator MemberReference ArraySelector MemberReference i list MemberReference destDir MemberReference xslResource process BlockStatement IfStatement BinaryOperation == MethodInvocation resources size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "no resources specified" StatementExpression MethodInvocation MemberReference xslResource IfStatement BinaryOperation != MemberReference loader Literal null BlockStatement StatementExpression MethodInvocation loader StatementExpression MethodInvocation loader cleanup StatementExpression Assignment MemberReference loader Literal null = StatementExpression Assignment MemberReference liaison Literal null = StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference baseDir MemberReference =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String manager StatementExpression Assignment This MemberReference manager MemberReference manager =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation Literal Literal assertEquals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Commandline cmdl ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the command attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String keystore StatementExpression Assignment This MemberReference keystore MemberReference keystore =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String algorithm StatementExpression Assignment This MemberReference algorithm MemberReference algorithm =	0
MethodDeclaration Modifier private assertAttrMethod FormalParameter ReferenceType String FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class FormalParameter ReferenceType Object arg FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation ih MemberReference StatementExpression MethodInvocation MemberReference m MemberReference methodName MemberReference MemberReference arg MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression Assignment MemberReference targetName Literal null =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String args StatementExpression Assignment MemberReference MemberReference args =	0
MethodDeclaration Modifier public BasicType boolean isValid ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType File v StatementExpression MethodInvocation BinaryOperation + Literal file " MemberReference v MemberReference Project MSG_VERBOSE log StatementExpression Assignment This MemberReference file MemberReference v =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String className StatementExpression Assignment MemberReference readerClassName MemberReference className =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int getStatus ReturnStatement MemberReference status	0
MethodDeclaration Modifier public FormalParameter ReferenceType Parameter parameter LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation parameter getName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation parameter getValue IfStatement Literal MethodInvocation MemberReference key equals "cache" BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference value setValue StatementExpression MethodInvocation MemberReference IfStatement Literal MethodInvocation MemberReference key equals BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator an ClassCreator ReferenceType StatementExpression MethodInvocation an MemberReference value setValue StatementExpression MethodInvocation MemberReference an IfStatement Literal MethodInvocation MemberReference key equals "comparator" BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference value setValue StatementExpression MethodInvocation MemberReference IfStatement Literal MethodInvocation MemberReference key equals "update" BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator updateValue TernaryExpression Literal "true" Literal true Literal false StatementExpression MethodInvocation MemberReference updateValue IfStatement Literal MethodInvocation MemberReference key equals BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator updateValue TernaryExpression Literal "true" Literal true Literal false StatementExpression MethodInvocation MemberReference updateValue IfStatement Literal MethodInvocation MemberReference key equals BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator TernaryExpression Literal "true" Literal true Literal false StatementExpression MethodInvocation MemberReference IfStatement MethodInvocation key Literal startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation key Literal 6 substring StatementExpression MethodInvocation MemberReference cache MemberReference name MemberReference value tryToSetAParameter IfStatement MethodInvocation key Literal startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation key Literal 10 substring StatementExpression MethodInvocation MemberReference algorithm MemberReference name MemberReference value tryToSetAParameter IfStatement MethodInvocation key Literal startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation key Literal 11 substring StatementExpression MethodInvocation MemberReference MemberReference name MemberReference value tryToSetAParameter BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Invalid parameter " MemberReference key setError	1
MethodDeclaration ReferenceType String TryStatement LocalVariableDeclaration Modifier final ReferenceType ByteArrayOutputStream VariableDeclarator error Cast ReferenceType ByteArrayOutputStream MethodInvocation ReturnStatement MethodInvocation error Literal "ASCII" toString CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet fs StatementExpression MethodInvocation MethodInvocation MemberReference fs add	0
MethodDeclaration Modifier private ReferenceType IfStatement MethodInvocation ! isReference BlockStatement ReturnStatement This ReturnStatement Cast ReferenceType MethodInvocation ClassReference ReferenceType Literal getCheckedRef	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal " running " MethodInvocation evt getName println	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String property ReturnStatement BinaryOperation && BinaryOperation != MemberReference property Literal null BinaryOperation != MethodInvocation property length Literal 0	0
MethodDeclaration Modifier public ReferenceType createArg LocalVariableDeclaration ReferenceType VariableDeclarator arg ClassCreator ReferenceType StatementExpression MethodInvocation facade MemberReference arg ReturnStatement MemberReference arg	0
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool StatementExpression Assignment MemberReference name Cast ReferenceType Utf8CPInfo MethodInvocation constantPool MemberReference getEntry = StatementExpression Assignment MemberReference type Cast ReferenceType Utf8CPInfo MethodInvocation constantPool MemberReference getEntry = StatementExpression SuperMethodInvocation MemberReference constantPool resolve	1
MethodDeclaration Modifier public BasicType boolean eval StatementExpression MethodInvocation validate IfStatement BinaryOperation == MemberReference length Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference LocalVariableDeclaration ReferenceType Long VariableDeclarator ell Literal null IfStatement MethodInvocation STRING MemberReference mode equals BlockStatement StatementExpression Assignment MemberReference ell ClassCreator ReferenceType Long MethodInvocation MemberReference string MethodInvocation getLength = BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator h ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference h handleResources StatementExpression Assignment MemberReference ell ClassCreator ReferenceType Long MethodInvocation h getLength = ReturnStatement MethodInvocation when MethodInvocation ell MemberReference length compareTo evaluate	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal "%" MemberReference	0
MethodDeclaration ReferenceType AssertionFailedError getError ReturnStatement MemberReference error	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration * @see */ Modifier public FormalParameter BasicType boolean emacsMode StatementExpression Assignment This MemberReference emacsMode MemberReference emacsMode =	1
MethodDeclaration Modifier public fatalError FormalParameter ReferenceType SAXParseException exception StatementExpression Assignment MemberReference failed Literal true = StatementExpression MethodInvocation MemberReference exception MemberReference Project MSG_ERR doLog	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting ro project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MemberReference name MemberReference value put LocalVariableDeclaration BasicType boolean VariableDeclarator done MethodInvocation MemberReference ns MemberReference name MemberReference value Literal false Literal true Literal false IfStatement MemberReference done BlockStatement ReturnStatement StatementExpression MethodInvocation properties MemberReference name MemberReference value put	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute not specified" IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Required attribute TypeName not specified" StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public ReferenceType StatementExpression MethodInvocation ReturnStatement Cast ReferenceType MemberReference src	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType path StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference path setPath createArgument	0
MethodDeclaration Modifier public ReferenceType String mapFileName FormalParameter ReferenceType String fileName LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation fileName Literal '.' lastIndexOf IfStatement BinaryOperation >= MemberReference lastDot Literal 0 BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MethodInvocation fileName Literal 0 MemberReference lastDot substring MemberReference extension BlockStatement ReturnStatement ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference fileName MemberReference extension	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator genericTool ClassCreator ReferenceType StatementExpression MethodInvocation genericTool This StatementExpression MethodInvocation genericTool MemberReference destDir StatementExpression MethodInvocation genericTool MemberReference StatementExpression MethodInvocation MemberReference genericTool add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation i next StatementExpression MethodInvocation MemberReference config StatementExpression MethodInvocation validateConfigured TryStatement LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator saxParserFactory MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation saxParserFactory Literal true setValidating LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator saxParser MethodInvocation saxParserFactory newSAXParser LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation MemberReference config descriptorDir getDirectoryScanner StatementExpression MethodInvocation ds LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles StatementExpression MethodInvocation BinaryOperation + MemberReference files length Literal " descriptors MemberReference Project MSG_VERBOSE log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator index Literal 0 BinaryOperation < MemberReference index MemberReference files length MemberReference ++ index BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation i next StatementExpression MethodInvocation MemberReference ArraySelector MemberReference index files MemberReference saxParser processDescriptor CatchClause CatchClauseParameter SAXException se LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "SAXException while creating Literal " Details: " MethodInvocation se getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference se CatchClause CatchClauseParameter ParserConfigurationException pce LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal while creating " Literal " MethodInvocation pce getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference pce	1
MethodDeclaration Modifier private ReferenceType Date parseDate FormalParameter Modifier final ReferenceType String date TryStatement ReturnStatement MethodInvocation MemberReference date parse CatchClause CatchClauseParameter ParseException e TryStatement ReturnStatement MethodInvocation MemberReference date parse CatchClause CatchClauseParameter ParseException e2 ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Invalid date " MemberReference date	1
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MemberReference ! done	0
MethodDeclaration Modifier public ReferenceType String getContent BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MethodInvocation key trim StatementExpression MethodInvocation sb MethodInvocation MethodInvocation value trim append Literal "=" append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public final FormalParameter ReferenceType filter StatementExpression MethodInvocation filterChains MemberReference filter addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public synchronized ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public executeTarget FormalParameter ReferenceType String targetName BuildException IfStatement BinaryOperation == MemberReference targetName Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "No target specified" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg StatementExpression MethodInvocation MethodInvocation MemberReference targetName MemberReference targets Literal false topoSort	1
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline LocalVariableDeclaration ReferenceType Project VariableDeclarator aProj MethodInvocation getProject LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation == MethodInvocation getViewPath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation aProj MethodInvocation getPath setViewPath StatementExpression MethodInvocation commandLine MethodInvocation getClearToolCommand setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions IfStatement MethodInvocation ! getFailOnErr BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Ignoring any errors that occur for: " MethodInvocation MemberReference Project MSG_VERBOSE log getProject StatementExpression Assignment MemberReference result MethodInvocation MemberReference commandLine run = IfStatement BinaryOperation && MethodInvocation Execute MemberReference result isFailure MethodInvocation getFailOnErr BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project p StatementExpression Assignment This MemberReference project MemberReference p =	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Properties props FormalParameter ReferenceType OutputStream os IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator rootElement MethodInvocation doc MemberReference createElement LocalVariableDeclaration ReferenceType List VariableDeclarator MethodInvocation MemberReference props LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iten MethodInvocation iterator WhileStatement MethodInvocation iten hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation iten next LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference createElement StatementExpression MethodInvocation MemberReference MemberReference key setAttribute StatementExpression MethodInvocation MemberReference MemberReference value setAttribute StatementExpression MethodInvocation rootElement MemberReference LocalVariableDeclaration ReferenceType Writer VariableDeclarator wri Literal null TryStatement StatementExpression Assignment MemberReference wri ClassCreator ReferenceType OutputStreamWriter MemberReference os Literal "UTF8" = StatementExpression MethodInvocation wri Literal "<?xml write StatementExpression ClassCreator MethodInvocation MemberReference rootElement MemberReference wri Literal 0 Literal "\t" write ReferenceType StatementExpression MethodInvocation wri flush CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "Unable to write XML file" MemberReference ioe StatementExpression MethodInvocation FileUtils MemberReference wri close	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Rectangle rect StatementExpression MethodInvocation instructions MemberReference rect add	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter Literal true ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator comp Cast ReferenceType MethodInvocation getInstance StatementExpression MethodInvocation MemberReference comp	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType InputStream ReturnStatement MemberReference	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "invalid BinaryOperation + BinaryOperation + Literal "Found invalid input test for MethodInvocation BinaryOperation + BinaryOperation + Literal "All data Literal " to be deleted from Literal " getKey Literal "\'" expectSpecificBuildException	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object key ReturnStatement SuperMethodInvocation MemberReference key get	0
MethodDeclaration Modifier public ReferenceType Hashtable getTargets ReturnStatement MemberReference targets	1
MethodDeclaration Modifier public FormalParameter ReferenceType String file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public ReferenceType AttributeList getAttributes ReturnStatement MethodInvocation MemberReference attributes	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MemberReference classpath IfStatement BinaryOperation != MemberReference config classpath Literal null BlockStatement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference config classpath = BlockStatement StatementExpression MethodInvocation MemberReference config classpath append ReturnStatement MemberReference	0
MethodDeclaration Modifier public static BasicType boolean classExists FormalParameter ReferenceType ClassLoader loader FormalParameter ReferenceType String className ReturnStatement BinaryOperation != MethodInvocation loader MethodInvocation MemberReference className getResource Literal null	0
MethodDeclaration Modifier public FormalParameter BasicType int mode StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference BinaryOperation | MemberReference MemberReference mode =	0
MethodDeclaration Modifier protected BasicType int resourceCompare FormalParameter ReferenceType Resource foo FormalParameter ReferenceType Resource bar LocalVariableDeclaration BasicType boolean VariableDeclarator f MethodInvocation foo isExists IfStatement BinaryOperation == MemberReference f MethodInvocation bar isExists BlockStatement ReturnStatement Literal 0 ReturnStatement TernaryExpression MemberReference f Literal 1 Literal - 1	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator log ClassCreator ReferenceType Literal StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression MethodInvocation MethodInvocation MemberReference log getProject StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression MethodInvocation Literal 1 MethodInvocation log getCount assertEquals	0
MethodDeclaration Modifier public ReferenceType String getTag ReturnStatement MemberReference tag	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test4" executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference jonasroot MemberReference =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType TreeMap VariableDeclarator data ClassCreator ReferenceType TreeMap LocalVariableDeclaration ReferenceType String VariableDeclarator categories MethodInvocation rootDir list IfStatement BinaryOperation == MemberReference categories Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal directory \"" MethodInvocation rootDir getPath Literal "\" does not exist!" MethodInvocation getLocation LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation sb Literal "<body>" append LocalVariableDeclaration BasicType int VariableDeclarator catCount Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference categories length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference ArraySelector MemberReference i categories LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference rootDir MemberReference IfStatement MethodInvocation ! isDirectory BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tasks MethodInvocation list StatementExpression MethodInvocation Arrays MemberReference tasks sort StatementExpression MethodInvocation data MemberReference MemberReference tasks put LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation data MethodInvocation iterator keySet WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MemberReference ++ catCount LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation iter next StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal MemberReference Literal append StatementExpression MethodInvocation sb Literal append LocalVariableDeclaration ReferenceType String VariableDeclarator tasks Cast ReferenceType String MethodInvocation data MemberReference get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference tasks length MemberReference ++ j BlockStatement StatementExpression MemberReference ++ LocalVariableDeclaration ReferenceType String VariableDeclarator task MemberReference ArraySelector MemberReference j tasks StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference Literal "/" MemberReference task Literal "\">" MemberReference task Literal append StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation sb Literal "</body></html>" append LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator fw Literal null TryStatement StatementExpression Assignment MemberReference fw ClassCreator ReferenceType FileWriter ClassCreator ReferenceType File MemberReference rootDir Literal = StatementExpression MethodInvocation fw MethodInvocation sb toString write StatementExpression MethodInvocation fw close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal generated: " MemberReference catCount Literal " categories and " MemberReference Literal " log	1
MethodDeclaration Modifier public ReferenceType Object clone TryStatement LocalVariableDeclaration ReferenceType Commandline VariableDeclarator c Cast ReferenceType Commandline SuperMethodInvocation clone StatementExpression Assignment MemberReference c arguments Cast ReferenceType Vector MethodInvocation arguments clone = ReturnStatement MemberReference c CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Class proxyClass StatementExpression MethodInvocation MemberReference proxyClass MethodInvocation getProject checkTaskClass	1
MethodDeclaration Modifier public record BuildException TryStatement IfStatement MethodInvocation fileSets isEmpty BlockStatement StatementExpression MethodInvocation Literal links to record required" handleError ReturnStatement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal of file to record links in required" handleError ReturnStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator byDir ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation MethodInvocation iterator MemberReference fileSets MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator thisLink Cast ReferenceType File MethodInvocation next LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation thisLink getParentFile LocalVariableDeclaration ReferenceType Vector VariableDeclarator v Cast ReferenceType Vector MethodInvocation byDir MemberReference parent get IfStatement BinaryOperation == MemberReference v Literal null BlockStatement StatementExpression Assignment MemberReference v ClassCreator ReferenceType Vector = StatementExpression MethodInvocation byDir MemberReference parent MemberReference v put StatementExpression MethodInvocation v MemberReference thisLink addElement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator dirs MethodInvocation byDir MethodInvocation iterator keySet MethodInvocation dirs hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir Cast ReferenceType File MethodInvocation dirs next LocalVariableDeclaration ReferenceType Vector VariableDeclarator Cast ReferenceType Vector MethodInvocation byDir MemberReference dir get LocalVariableDeclaration ReferenceType Properties VariableDeclarator linksToStore ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator dlnk MethodInvocation iterator MethodInvocation dlnk hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator lnk Cast ReferenceType File MethodInvocation dlnk next TryStatement StatementExpression MethodInvocation linksToStore MethodInvocation lnk getName MethodInvocation lnk getCanonicalPath put CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation Literal "Couldn't get canonical name of parent link" handleError StatementExpression MethodInvocation MemberReference linksToStore MemberReference dir StatementExpression MethodInvocation setDefaults	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType String out StatementExpression Assignment MemberReference systemOutput MemberReference out =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType VariableDeclarator v ClassCreator ReferenceType StatementExpression MethodInvocation v MemberReference setValue StatementExpression MethodInvocation MemberReference v	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference myFile BlockStatement StatementExpression Assignment MemberReference myFile MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject MemberReference = IfStatement MethodInvocation ! myFile exists BlockStatement TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference myFile createNewFile CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MemberReference myFile Literal " doesn't exist and new file can't be ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MemberReference ioe IfStatement MethodInvocation ! myFile canRead BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Unable to read from " MemberReference myFile Literal "." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MethodInvocation ! myFile canWrite BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Unable to write to " MemberReference myFile Literal "." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType File FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType FileUtils VariableDeclarator futils MethodInvocation FileUtils LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation futils Literal Literal ".tmp" ClassCreator ReferenceType File Literal "." createTempFile LocalVariableDeclaration ReferenceType Writer VariableDeclarator writer Literal null TryStatement StatementExpression Assignment MemberReference writer ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType FileWriter MemberReference f = StatementExpression MethodInvocation writer MemberReference write StatementExpression MethodInvocation writer flush CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e IfStatement BinaryOperation != MemberReference writer Literal null BlockStatement TryStatement StatementExpression MethodInvocation writer close CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference f	1
MethodDeclaration Modifier public FormalParameter ReferenceType File f StatementExpression Assignment MemberReference manifestFile MemberReference f =	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference orb MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Resource VariableDeclarator r ClassCreator ReferenceType Resource Literal Literal true Literal 1 Literal false LocalVariableDeclaration ReferenceType Resource VariableDeclarator MethodInvocation ResourceUtils MemberReference ArrayCreator ReferenceType Resource ArrayInitializer MemberReference r This This StatementExpression MethodInvocation Literal 1 MemberReference length assertEquals	0
MethodDeclaration Modifier public BasicType boolean isDirectory ReturnStatement MethodInvocation MethodInvocation isDirectory getResource	0
MethodDeclaration Modifier public FormalParameter ReferenceType File FormalParameter BasicType int FormalParameter ReferenceType Long StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public taskFinished FormalParameter ReferenceType BuildEvent event LocalVariableDeclaration ReferenceType Task VariableDeclarator task MethodInvocation event getTask LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator taskElement Cast ReferenceType TimedElement MethodInvocation tasks MemberReference task get IfStatement BinaryOperation != MemberReference taskElement Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator totalTime BinaryOperation - MethodInvocation System currentTimeMillis MemberReference taskElement startTime StatementExpression MethodInvocation taskElement.element MemberReference TIME_ATTR MethodInvocation MemberReference totalTime setAttribute LocalVariableDeclaration ReferenceType Target VariableDeclarator target MethodInvocation task getOwningTarget LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator targetElement Literal null IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference targetElement Cast ReferenceType TimedElement MethodInvocation targets MemberReference target get = IfStatement BinaryOperation == MemberReference targetElement Literal null BlockStatement StatementExpression MethodInvocation buildElement.element MemberReference taskElement element BlockStatement StatementExpression MethodInvocation targetElement.element MemberReference taskElement element LocalVariableDeclaration ReferenceType Stack VariableDeclarator MethodInvocation getStack IfStatement MethodInvocation ! empty BlockStatement LocalVariableDeclaration ReferenceType TimedElement VariableDeclarator poppedStack Cast ReferenceType TimedElement MethodInvocation pop IfStatement BinaryOperation != MemberReference poppedStack MemberReference taskElement BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Mismatch - element = " MemberReference poppedStack Literal " finished task element = " MemberReference taskElement StatementExpression MethodInvocation tasks MemberReference task remove BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unknown task " MemberReference task Literal " not in " MemberReference tasks	1
MethodDeclaration Modifier public setProject FormalParameter Modifier final ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression MethodInvocation MemberReference value MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Calling not Literal "Target does not exist in the project expectBuildExceptionContaining	1
MethodDeclaration Modifier public FormalParameter ReferenceType String height StatementExpression Assignment MemberReference MemberReference height =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MethodInvocation MethodInvocation ClassReference ReferenceType equals getClass	1
MethodDeclaration Modifier public ReferenceType Iterator ReturnStatement MethodInvocation iterator	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier protected FormalParameter BasicType int exitValue FormalParameter BasicType boolean FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType TestResultHolder VariableDeclarator t ClassCreator ReferenceType TestResultHolder StatementExpression Assignment MemberReference t exitCode MemberReference exitValue = StatementExpression Assignment MemberReference t timedOut MemberReference = StatementExpression MethodInvocation MemberReference t MemberReference test MemberReference name	0
MethodDeclaration Modifier protected BasicType int run FormalParameter ReferenceType Commandline cmd ReturnStatement MethodInvocation MemberReference cmd ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_VERBOSE MemberReference Project MSG_WARN run	0
MethodDeclaration Modifier public IfStatement MemberReference ! done BlockStatement StatementExpression MethodInvocation System.out Literal println StatementExpression Assignment MemberReference run Literal false = SynchronizedStatement This WhileStatement MemberReference ! done BlockStatement TryStatement StatementExpression MethodInvocation wait CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation System.out Literal println	0
MethodDeclaration Modifier protected ReferenceType Location getLocation ReturnStatement MethodInvocation MethodInvocation getLocation getTask	0
MethodDeclaration Modifier private FormalParameter ReferenceType String type FormalParameter ReferenceType String output LocalVariableDeclaration ReferenceType Element VariableDeclarator MethodInvocation doc MemberReference type createElement StatementExpression MethodInvocation rootElement MemberReference StatementExpression MethodInvocation MethodInvocation doc MemberReference output	0
MethodDeclaration Modifier public FormalParameter ReferenceType File srcFile StatementExpression Assignment This MemberReference srcFile MemberReference srcFile =	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal instance failed" Literal Project MethodInvocation project assertEquals	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType long getLastModified ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MethodInvocation MethodInvocation lastModified getNotNullFile	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setProperties FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public execute FormalParameter ReferenceType AntTelnetClient telnet BuildException ThrowStatement ClassCreator ReferenceType BuildException Literal be instantiate a	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference release	0
MethodDeclaration Modifier public ReferenceType String getFileExtension ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public IfStatement BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal isFamily BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator pattern BinaryOperation + ClassCreator MethodInvocation getAbsolutePath MethodInvocation toUpperCase ReferenceType File MemberReference File separator Literal "*" StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer MemberReference pattern setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation Literal "should have at least one file" BinaryOperation > BinaryOperation + MethodInvocation ds getIncludedFilesCount MethodInvocation ds Literal 0 assertTrue	1
MethodDeclaration Modifier public ReferenceType String getToken ReturnStatement MemberReference token	0
MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MethodInvocation parent getClassLoader	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException StatementExpression SuperMethodInvocation execute	1
MethodDeclaration Modifier protected ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v TernaryExpression MemberReference Literal Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement BinaryOperation != MemberReference branch Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MemberReference branch addElement IfStatement MemberReference version BlockStatement StatementExpression MethodInvocation v Literal "-version" addElement IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MemberReference out addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal "-ptime" addElement StatementExpression MethodInvocation v Literal "<pname>" addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation MemberReference name MemberReference isCaseSensitive BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType CommandlineJava ReferenceType ReturnStatement MethodInvocation MethodInvocation getCommandLine	0
MethodDeclaration Modifier public test1 IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest MethodInvocation MemberReference getManifest LocalVariableDeclaration ReferenceType String VariableDeclarator version MethodInvocation manifest StatementExpression MethodInvocation Literal was not created with correct version - " Literal MemberReference version assertEquals	0
MethodDeclaration Modifier public ReferenceType String getLanguage ReturnStatement MemberReference language	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MemberReference evt StatementExpression SuperMethodInvocation MemberReference evt	0
MethodDeclaration Modifier public getParameters FormalParameter ReferenceType Project p FormalParameter ReferenceType command FormalParameter BasicType boolean csharpStyle StatementExpression MethodInvocation checkParameters IfStatement MethodInvocation BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator listIter MethodInvocation fileSets iterator MethodInvocation listIter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation listIter next LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation fs MethodInvocation toString MemberReference p getDir LocalVariableDeclaration ReferenceType String VariableDeclarator namespace MethodInvocation getNamespace LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator file MemberReference ArraySelector MemberReference i files StatementExpression MethodInvocation command MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference File separatorChar MemberReference file TernaryExpression BinaryOperation == MemberReference namespace Literal null Literal null BinaryOperation + MemberReference namespace MethodInvocation file MemberReference File separatorChar Literal '.' replace MemberReference csharpStyle getParameter BlockStatement StatementExpression MethodInvocation command MethodInvocation MethodInvocation MethodInvocation toString getFile MethodInvocation getName MemberReference csharpStyle getParameter	1
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement TernaryExpression MethodInvocation isReference MethodInvocation MethodInvocation MemberReference	0
MethodDeclaration Modifier public synchronized BasicType boolean ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference client Literal null BinaryOperation != MemberReference server Literal null BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Mapper createMapper BuildException IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one MethodInvocation getLocation StatementExpression Assignment MemberReference ClassCreator ReferenceType Mapper MethodInvocation getProject = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MemberReference !	0
MethodDeclaration Modifier public FormalParameter ReferenceType ListIterator list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation arguments size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator arg Cast ReferenceType MethodInvocation arguments MemberReference i elementAt LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation arg IfStatement BinaryOperation != MemberReference s Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference s length MemberReference ++ j BlockStatement StatementExpression MethodInvocation list MemberReference ArraySelector MemberReference j s add	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation filter MemberReference	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation MemberReference command run	1
MethodDeclaration Modifier public addSelector FormalParameter ReferenceType SelectSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addSelector	1
MethodDeclaration Modifier private StatementExpression MethodInvocation newProject MethodInvocation MethodInvocation getProject LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation newProject Cast ReferenceType MethodInvocation iter next IfStatement BinaryOperation != MemberReference output Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator Literal null IfStatement BinaryOperation != MemberReference dir Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation FILE_UTILS MemberReference dir MemberReference output = BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation MemberReference output getProject = TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintStream ClassCreator ReferenceType FileOutputStream MemberReference = LocalVariableDeclaration ReferenceType VariableDeclarator logger ClassCreator ReferenceType StatementExpression MethodInvocation logger MemberReference Project MSG_INFO setMessageOutputLevel StatementExpression MethodInvocation logger MemberReference out StatementExpression MethodInvocation logger MemberReference out StatementExpression MethodInvocation newProject MemberReference logger CatchClause CatchClauseParameter IOException ex StatementExpression MethodInvocation BinaryOperation + Literal set output to " MemberReference output log StatementExpression MethodInvocation MethodInvocation MemberReference newProject getProject IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation newProject BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getProperties getProject LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps Cast ReferenceType MethodInvocation e nextElement StatementExpression MethodInvocation MethodInvocation ps getProperties	0
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String name FormalParameter ReferenceType String value BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Property name and value must be TryStatement StatementExpression MethodInvocation xmlReader MemberReference name MemberReference value setProperty CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Parser " MethodInvocation xmlReader MethodInvocation getName getClass Literal " doesn't property " MemberReference name MemberReference e MethodInvocation getLocation CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Parser " MethodInvocation xmlReader MethodInvocation getName getClass Literal " doesn't support property " MemberReference name MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier private storeAttribute FormalParameter ReferenceType Attribute attribute IfStatement BinaryOperation == MemberReference attribute Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation attribute getKey StatementExpression MethodInvocation attributes MemberReference MemberReference attribute put IfStatement MethodInvocation ! MemberReference contains BlockStatement StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public static ReferenceType Test suite ThrowStatement ClassCreator ReferenceType NullPointerException Literal on	0
MethodDeclaration Modifier public handleErrorFlush FormalParameter ReferenceType String errorOutputToFlush IfStatement BinaryOperation != MemberReference newProject Literal null BlockStatement StatementExpression MethodInvocation newProject MemberReference errorOutputToFlush Literal true BlockStatement StatementExpression SuperMethodInvocation MemberReference errorOutputToFlush handleErrorFlush	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation ! CollectionUtils Literal null ClassCreator ReferenceType Hashtable equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils ClassCreator ReferenceType Hashtable Literal null equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils ClassCreator ReferenceType Hashtable ClassCreator ReferenceType Properties equals assertTrue LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator h1 ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Properties VariableDeclarator p2 ClassCreator ReferenceType Properties StatementExpression MethodInvocation h1 Literal "foo" Literal "" put StatementExpression MethodInvocation p2 Literal "foo" Literal "" put StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation h1 Literal "bar" Literal "" put StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation p2 Literal "bar" Literal "" put StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation p2 Literal "baz" Literal "" put StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation h1 Literal "baz" Literal "" put StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation h1 Literal Literal "" put StatementExpression MethodInvocation p2 Literal "zyzzy2" Literal "" put StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation p2 Literal Literal "" put StatementExpression MethodInvocation h1 Literal "zyzzy2" Literal "" put StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue StatementExpression MethodInvocation h1 Literal Literal "1" put StatementExpression MethodInvocation p2 Literal Literal put StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference h1 MemberReference p2 equals assertTrue StatementExpression MethodInvocation MethodInvocation ! CollectionUtils MemberReference p2 MemberReference h1 equals assertTrue	1
MethodDeclaration * of * @return false */ Modifier protected BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public final close IOException IfStatement BinaryOperation > MethodInvocation buffer size Literal 0 BlockStatement StatementExpression MethodInvocation processBuffer StatementExpression SuperMethodInvocation close	1
MethodDeclaration Modifier public FormalParameter ReferenceType File output StatementExpression Assignment This MemberReference output MemberReference output =	0
MethodDeclaration Modifier public write FormalParameter BasicType int IOException LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator c Cast BasicType byte MemberReference IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '\n' BinaryOperation == MemberReference c Literal '\r' BlockStatement IfStatement MemberReference ! skip BlockStatement StatementExpression MethodInvocation processBuffer BlockStatement StatementExpression MethodInvocation buffer MemberReference write StatementExpression Assignment MemberReference skip BinaryOperation == MemberReference c Literal '\r' =	1
MethodDeclaration Modifier public ReferenceType RuntimeConfigurable IfStatement BinaryOperation == MemberReference wrapper Literal null BlockStatement StatementExpression Assignment MemberReference wrapper ClassCreator ReferenceType RuntimeConfigurable This MethodInvocation getTaskName = ReturnStatement MemberReference wrapper	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror createFormatter BuildException ReturnStatement MethodInvocation Literal null createFormatter	1
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier private setLockStatus FormalParameter BasicType boolean v FormalParameter BasicType int newStatus BuildException IfStatement MemberReference v BlockStatement IfStatement BinaryOperation == This MemberReference lockStatus MemberReference BlockStatement StatementExpression Assignment This MemberReference lockStatus MemberReference newStatus = IfStatement BinaryOperation != This MemberReference lockStatus MemberReference newStatus BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Error: cannot set locked and both	1
MethodDeclaration Modifier public FormalParameter ReferenceType c StatementExpression Assignment MemberReference when MemberReference c =	0
MethodDeclaration Modifier public static ReferenceType Date FormalParameter ReferenceType String ParseException ReturnStatement ClassCreator MethodInvocation MemberReference parse ReferenceType MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType byte VariableDeclarator local MethodInvocation ArrayCreator ReferenceType ArrayInitializer MemberReference a MemberReference dummy StatementExpression MethodInvocation Literal "local MemberReference data length MemberReference local length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference local length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "local byte " MemberReference i MemberReference ArraySelector MemberReference i data MemberReference ArraySelector MemberReference i local assertEquals LocalVariableDeclaration BasicType byte VariableDeclarator MethodInvocation dummy LocalVariableDeclaration BasicType byte VariableDeclarator data2 ArrayCreator BasicType byte BinaryOperation + BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 4 MemberReference length StatementExpression MethodInvocation System MemberReference data Literal 0 MemberReference data2 Literal 0 BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 2 arraycopy StatementExpression MethodInvocation System MethodInvocation dummy MethodInvocation getBytes Literal 0 MemberReference data2 BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 2 Literal 2 arraycopy StatementExpression MethodInvocation System MemberReference Literal 0 MemberReference data2 BinaryOperation + BinaryOperation + Literal 4 MemberReference aLocal length Literal 4 MemberReference length arraycopy LocalVariableDeclaration BasicType byte VariableDeclarator MethodInvocation ArrayCreator ReferenceType ArrayInitializer MemberReference a MemberReference dummy StatementExpression MethodInvocation Literal MemberReference data2 length MemberReference length assertEquals ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal byte " MemberReference i MemberReference ArraySelector MemberReference i data2 MemberReference ArraySelector MemberReference i assertEquals	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next IfStatement MethodInvocation r isExists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pathname MethodInvocation r getName IfStatement MethodInvocation pathname Literal ".java" endsWith BlockStatement StatementExpression MethodInvocation v MethodInvocation pathname Literal 0 BinaryOperation - MethodInvocation pathname length Literal MethodInvocation length ".java" substring addElement IfStatement MethodInvocation pathname Literal ".class" endsWith BlockStatement StatementExpression MethodInvocation v MethodInvocation pathname Literal 0 BinaryOperation - MethodInvocation pathname length Literal MethodInvocation length ".class" substring addElement LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MethodInvocation v size StatementExpression MethodInvocation v MemberReference files copyInto ReturnStatement MemberReference files	1
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation formatter MemberReference evt	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference ArraySelector MethodInvocation getIndex	0
MethodDeclaration Modifier private ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType MethodInvocation MemberReference i elementAt	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference targetType	0
MethodDeclaration Modifier public ReferenceType List ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String qname StatementExpression Assignment This MemberReference qname MemberReference qname =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String files FormalParameter ReferenceType File dir LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator sfs ClassCreator ReferenceType SourceFileScanner This LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MethodInvocation tarFile getAbsolutePath ReturnStatement BinaryOperation == MethodInvocation sfs MemberReference length MemberReference files MemberReference dir Literal null MemberReference Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType redirector FormalParameter ReferenceType String sourcefile IfStatement MethodInvocation isReference BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference redirector MemberReference sourcefile ReturnStatement IfStatement BinaryOperation != MemberReference alwaysLog Literal null BlockStatement StatementExpression MethodInvocation redirector MethodInvocation alwaysLog booleanValue IfStatement BinaryOperation != MemberReference logError Literal null BlockStatement StatementExpression MethodInvocation redirector MethodInvocation logError booleanValue IfStatement BinaryOperation != MemberReference append Literal null BlockStatement StatementExpression MethodInvocation redirector MethodInvocation append booleanValue IfStatement BinaryOperation != MemberReference createEmptyFiles Literal null BlockStatement StatementExpression MethodInvocation redirector MethodInvocation createEmptyFiles booleanValue IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation redirector MethodInvocation booleanValue IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator inputTargets Literal null TryStatement StatementExpression Assignment MemberReference inputTargets MethodInvocation MethodInvocation MemberReference sourcefile mapFileName = CatchClause CatchClauseParameter NullPointerException enPeaEx IfStatement BinaryOperation != MemberReference sourcefile Literal null BlockStatement ThrowStatement MemberReference enPeaEx IfStatement BinaryOperation && BinaryOperation != MemberReference inputTargets Literal null BinaryOperation > MemberReference inputTargets length Literal 0 BlockStatement StatementExpression MethodInvocation redirector MethodInvocation MemberReference inputTargets toFileArray IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator outputTargets Literal null TryStatement StatementExpression Assignment MemberReference outputTargets MethodInvocation MethodInvocation MemberReference sourcefile mapFileName = CatchClause CatchClauseParameter NullPointerException enPeaEx IfStatement BinaryOperation != MemberReference sourcefile Literal null BlockStatement ThrowStatement MemberReference enPeaEx IfStatement BinaryOperation && BinaryOperation != MemberReference outputTargets Literal null BinaryOperation > MemberReference outputTargets length Literal 0 BlockStatement StatementExpression MethodInvocation redirector MethodInvocation MemberReference outputTargets toFileArray IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator errorTargets Literal null TryStatement StatementExpression Assignment MemberReference errorTargets MethodInvocation MethodInvocation MemberReference sourcefile mapFileName = CatchClause CatchClauseParameter NullPointerException enPeaEx IfStatement BinaryOperation != MemberReference sourcefile Literal null BlockStatement ThrowStatement MemberReference enPeaEx IfStatement BinaryOperation && BinaryOperation != MemberReference errorTargets Literal null BinaryOperation > MemberReference errorTargets length Literal 0 BlockStatement StatementExpression MethodInvocation redirector MethodInvocation MemberReference errorTargets toFileArray setError IfStatement BinaryOperation > MethodInvocation inputFilterChains size Literal 0 BlockStatement StatementExpression MethodInvocation redirector MemberReference inputFilterChains IfStatement BinaryOperation > MethodInvocation outputFilterChains size Literal 0 BlockStatement StatementExpression MethodInvocation redirector MemberReference outputFilterChains IfStatement BinaryOperation > MethodInvocation errorFilterChains size Literal 0 BlockStatement StatementExpression MethodInvocation redirector MemberReference errorFilterChains IfStatement BinaryOperation != MemberReference inputEncoding Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference inputEncoding IfStatement BinaryOperation != MemberReference outputEncoding Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference outputEncoding IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation redirector MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference ! =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String text StatementExpression Assignment MemberReference MemberReference text =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal name: " StatementExpression MethodInvocation buf MemberReference pattern append StatementExpression MethodInvocation buf Literal " " append IfStatement MemberReference BlockStatement StatementExpression MethodInvocation buf Literal "true" append BlockStatement StatementExpression MethodInvocation buf Literal "false" append StatementExpression MethodInvocation buf Literal " " append IfStatement MemberReference BlockStatement StatementExpression MethodInvocation buf Literal "true" append BlockStatement StatementExpression MethodInvocation buf Literal "false" append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType list StatementExpression MethodInvocation MemberReference list add	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Class StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public final static ReferenceType String getTaskName FormalParameter ReferenceType XClass clazz LocalVariableDeclaration ReferenceType String VariableDeclarator tagValue MethodInvocation clazz MethodInvocation Literal "ant.task" Literal "name" getTagAttributeValue getDoc IfStatement BinaryOperation == MemberReference tagValue Literal null BlockStatement StatementExpression Assignment MemberReference tagValue MethodInvocation clazz getName = IfStatement MethodInvocation tagValue Literal endsWith BlockStatement StatementExpression Assignment MemberReference tagValue MethodInvocation tagValue Literal 0 MethodInvocation tagValue Literal indexOf substring = StatementExpression Assignment MemberReference tagValue MethodInvocation tagValue toLowerCase = ReturnStatement MemberReference tagValue	1
MethodDeclaration Modifier public put FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference key Literal ", " MemberReference value Literal ")" log StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal date: " StatementExpression MethodInvocation buf MemberReference dateTime append StatementExpression MethodInvocation buf MethodInvocation MethodInvocation when getValue append Literal " " append StatementExpression MethodInvocation buf Literal " " append StatementExpression MethodInvocation buf MemberReference granularity append IfStatement BinaryOperation != MemberReference pattern Literal null BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference pattern append Literal " pattern: " append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String ddPrefix StatementExpression SuperMethodInvocation MemberReference ejbFiles MemberReference ddPrefix addVendorFiles LocalVariableDeclaration ReferenceType File VariableDeclarator toplinkDD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference IfStatement MethodInvocation toplinkDD exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference MemberReference toplinkDD put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate " Literal "It was expected to be in " MethodInvocation toplinkDD getPath MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String n FormalParameter ReferenceType String v IfStatement MemberReference BlockStatement IfStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference n getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference n MemberReference v getProject BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal ignored for " MemberReference n MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference n MemberReference v setNewProperty getProject	0
MethodDeclaration Modifier public ReferenceType Resource ReturnStatement MemberReference src	0
MethodDeclaration Modifier public FormalParameter ReferenceType URL u StatementExpression Assignment This MemberReference source MemberReference u =	0
MethodDeclaration Modifier protected finalize Throwable StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public BasicType boolean eval BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference arg1 Literal null BinaryOperation == MemberReference arg2 Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal arg1 and arg2 are required in " Literal "equals" IfStatement MemberReference trim BlockStatement StatementExpression Assignment MemberReference arg1 MethodInvocation arg1 trim = StatementExpression Assignment MemberReference arg2 MethodInvocation arg2 trim = ReturnStatement TernaryExpression MemberReference MethodInvocation arg1 MemberReference arg2 equals MethodInvocation arg1 MemberReference arg2 equalsIgnoreCase	1
MethodDeclaration Modifier public static ReferenceType SAXParserFactory BuildException TryStatement ReturnStatement MethodInvocation SAXParserFactory newInstance CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal parser factory has not been " Literal " MethodInvocation e getMessage MemberReference e	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType XClass clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation clazz getQualifiedName equals Literal MethodInvocation MethodInvocation clazz getQualifiedName equals Literal MethodInvocation MethodInvocation clazz getQualifiedName equals Literal MethodInvocation MethodInvocation clazz getQualifiedName equals BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Collection VariableDeclarator methods MethodInvocation clazz Literal true getMethods LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation methods iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType XMethod VariableDeclarator method Cast ReferenceType XMethod MethodInvocation iter next IfStatement Literal MethodInvocation MethodInvocation method getName equals BlockStatement IfStatement BinaryOperation == MethodInvocation method MethodInvocation size getParameters Literal 0 BlockStatement IfStatement MethodInvocation method MethodInvocation getType MethodInvocation getName MethodInvocation Literal "void" equals getReturnType BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference MemberReference Literal ""	0
MethodDeclaration Modifier public FormalParameter ReferenceType File cache StatementExpression Assignment This MemberReference cache MemberReference cache =	0
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter BasicType long t1 FormalParameter BasicType long t2 FormalParameter BasicType long g LocalVariableDeclaration BasicType int VariableDeclarator cmp MethodInvocation getIndex IfStatement BinaryOperation == MemberReference cmp Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal value not set." IfStatement BinaryOperation == MemberReference cmp Literal 0 BlockStatement ReturnStatement BinaryOperation < BinaryOperation - MemberReference t1 MemberReference g MemberReference t2 IfStatement BinaryOperation == MemberReference cmp Literal 1 BlockStatement ReturnStatement BinaryOperation > BinaryOperation + MemberReference t1 MemberReference g MemberReference t2 ReturnStatement BinaryOperation <= MethodInvocation Math BinaryOperation - MemberReference t1 MemberReference t2 abs MemberReference g	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator securityPolicy This MemberReference securityPolicy IfStatement BinaryOperation == MemberReference securityPolicy Literal null BlockStatement StatementExpression Assignment MemberReference securityPolicy MemberReference = LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference MemberReference securityPolicy IfStatement BinaryOperation && BinaryOperation != This MemberReference securityPolicy Literal null MethodInvocation ! exists BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation MemberReference securityPolicy getProject = IfStatement MethodInvocation ! exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference securityPolicy Literal " was not found." ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String className StatementExpression Assignment This MemberReference className MemberReference className =	0
MethodDeclaration Modifier public stop StatementExpression Assignment MemberReference stop MethodInvocation System currentTimeMillis =	0
MethodDeclaration Modifier public static setLastModified FormalParameter ReferenceType Touchable t FormalParameter BasicType long time StatementExpression MethodInvocation t TernaryExpression BinaryOperation < MemberReference time Literal 0 MethodInvocation System currentTimeMillis MemberReference time touch	1
MethodDeclaration Modifier public buildFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier public FormalParameter ReferenceType InputStream is IfStatement BinaryOperation != MemberReference err Literal null BlockStatement StatementExpression MethodInvocation MemberReference is MemberReference err	1
MethodDeclaration Modifier public FormalParameter ReferenceType compiler StatementExpression Assignment This MemberReference compiler MemberReference compiler =	0
MethodDeclaration Modifier protected ReferenceType Task getTask ReturnStatement MemberReference task	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Failed executing: Exception: not found" expectBuildException	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "expected MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public setVisibility FormalParameter ReferenceType String visibility StatementExpression Assignment This MemberReference visibility MemberReference visibility =	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef LocalVariableDeclaration Modifier final ReferenceType ZipFile VariableDeclarator z ClassCreator ReferenceType ZipFile MethodInvocation MethodInvocation getEncoding LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze MethodInvocation z MethodInvocation getName getEntry IfStatement BinaryOperation == MemberReference ze Literal null BlockStatement StatementExpression MethodInvocation z close ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "no entry " MethodInvocation getName Literal " in " MethodInvocation getArchive ReturnStatement ClassCreator ReferenceType MethodInvocation z MemberReference ze getInputStream MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation FileUtils MemberReference in close StatementExpression MethodInvocation z close MethodDeclaration Modifier protected finalize Throwable TryStatement StatementExpression MethodInvocation close StatementExpression SuperMethodInvocation finalize	1
MethodDeclaration Modifier public final FormalParameter Modifier final ReferenceType File srcFile StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference srcFile	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "String Entry for " MethodInvocation getValue Literal "[" MemberReference index Literal "]"	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String fname StatementExpression Assignment MemberReference filename MemberReference fname =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String dirName StatementExpression Assignment MemberReference sourceDirectory ClassCreator ReferenceType File MemberReference dirName =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File directory StatementExpression Assignment This MemberReference directory MemberReference directory =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected SynchronizedStatement MemberReference slowScanLock IfStatement MemberReference BlockStatement ReturnStatement IfStatement MemberReference slowScanning BlockStatement WhileStatement MemberReference slowScanning BlockStatement TryStatement StatementExpression MethodInvocation slowScanLock wait CatchClause CatchClauseParameter InterruptedException e ReturnStatement StatementExpression Assignment MemberReference slowScanning Literal true = TryStatement SynchronizedStatement This LocalVariableDeclaration BasicType boolean VariableDeclarator nullIncludes BinaryOperation == MemberReference includes Literal null StatementExpression Assignment MemberReference includes TernaryExpression MemberReference nullIncludes ArrayCreator ReferenceType String ArrayInitializer Literal "**" MemberReference includes = LocalVariableDeclaration BasicType boolean VariableDeclarator nullExcludes BinaryOperation == MemberReference Literal null StatementExpression Assignment MemberReference TernaryExpression MemberReference nullExcludes ArrayCreator ReferenceType String Literal 0 MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator excl ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference excl copyInto LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference copyInto StatementExpression MethodInvocation MemberReference excl processSlowScan StatementExpression MethodInvocation MemberReference processSlowScan StatementExpression MethodInvocation StatementExpression Assignment MemberReference includes TernaryExpression MemberReference nullIncludes Literal null MemberReference includes = StatementExpression Assignment MemberReference TernaryExpression MemberReference nullExcludes Literal null MemberReference = SynchronizedStatement MemberReference slowScanLock StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference slowScanning Literal false = StatementExpression MethodInvocation slowScanLock	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference name Literal ", MemberReference regex Literal ", MemberReference prefix Literal ", MemberReference	0
MethodDeclaration Modifier public static ReferenceType Date FormalParameter ReferenceType String ParseException ReturnStatement ClassCreator MethodInvocation MemberReference parse ReferenceType MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal target	0
MethodDeclaration Modifier protected handleFlush FormalParameter ReferenceType String output IfStatement BinaryOperation instanceof MemberReference realThing ReferenceType Task BlockStatement StatementExpression Cast ReferenceType Task MemberReference realThing BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleFlush	1
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile FormalParameter ReferenceType FilterSetCollection filters FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean preserveLastModified IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile MemberReference filters MemberReference overwrite MemberReference preserveLastModified copyFile	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String uri FormalParameter ReferenceType String name FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException ReturnStatement MemberReference	0
MethodDeclaration Modifier public log FormalParameter ReferenceType String message FormalParameter BasicType int loglevel IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference message MemberReference loglevel log BlockStatement IfStatement BinaryOperation > MemberReference loglevel MemberReference Project MSG_WARN BlockStatement StatementExpression MethodInvocation System.out MemberReference message println BlockStatement StatementExpression MethodInvocation System.err MemberReference message println	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation Literal null MemberReference name MemberReference value This	0
MethodDeclaration Modifier public FormalParameter ReferenceType r IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference exists Literal null BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference directory Literal null BinaryOperation != MemberReference size Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation getNotNullFile IfStatement MethodInvocation f exists BlockStatement IfStatement MethodInvocation f isFile BlockStatement StatementExpression MethodInvocation f delete BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator p MethodInvocation f getParentFile IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null MethodInvocation ! p exists BlockStatement StatementExpression MethodInvocation p mkdirs ReturnStatement ClassCreator ReferenceType FileOutputStream MemberReference f	1
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList attrs SAXParseException IfStatement BinaryOperation instanceof MemberReference child ReferenceType TaskContainer BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference name MemberReference attrs init ReferenceType TaskHandler MemberReference helperImpl This Cast ReferenceType TaskContainer MemberReference child MemberReference MemberReference target BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference name MemberReference attrs init ReferenceType NestedElementHandler MemberReference helperImpl This MemberReference child MemberReference MemberReference target	1
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getContent StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal added : " MemberReference MemberReference Project MSG_DEBUG log getProject StatementExpression MethodInvocation MethodInvocation MemberReference getCommandline	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference basedir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "No basedir set" IfStatement MethodInvocation ! basedir exists BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "basedir " MemberReference basedir Literal " does not exist" IfStatement MethodInvocation ! basedir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "basedir " MemberReference basedir Literal " is not a directory" IfStatement BinaryOperation == MemberReference includes Literal null BlockStatement StatementExpression Assignment MemberReference includes ArrayCreator ReferenceType Pattern Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 includes ClassCreator ReferenceType Pattern = StatementExpression MemberReference ArraySelector Literal 0 MethodInvocation Literal "**" includes IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArrayCreator ReferenceType Pattern Literal 0 = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = StatementExpression Assignment MemberReference ClassCreator ReferenceType Vector = IfStatement MethodInvocation Literal "" isIncluded BlockStatement IfStatement MethodInvocation ! Literal "" BlockStatement StatementExpression MethodInvocation Literal "" addElement BlockStatement StatementExpression MethodInvocation Literal "" addElement BlockStatement StatementExpression MethodInvocation Literal "" addElement StatementExpression MethodInvocation MemberReference basedir Literal "" Literal true scandir	0
MethodDeclaration Modifier public BasicType boolean isIgnoringProjectTag ReturnStatement MemberReference	0
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType Location location StatementExpression Assignment This MemberReference location MemberReference location =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator toDir MethodInvocation myCopy LocalVariableDeclaration ReferenceType Set VariableDeclarator allFiles MemberReference myCopy nonOrphans LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation || MethodInvocation ! toDir exists BinaryOperation < MethodInvocation toDir MemberReference length list Literal 1 StatementExpression MethodInvocation BinaryOperation + Literal files to " MemberReference toDir MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation myCopy execute IfStatement MemberReference BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "NO removing necessary in " MemberReference toDir MemberReference Project MSG_DEBUG log ReturnStatement StatementExpression MethodInvocation BinaryOperation + Literal files from " MemberReference toDir MemberReference Project MSG_DEBUG log LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference allFiles MemberReference toDir StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 Literal director" Literal "y" Literal "ies" logRemovedCount StatementExpression MethodInvocation MemberReference ArraySelector Literal 1 Literal file" Literal "" Literal "s" logRemovedCount IfStatement MethodInvocation ! myCopy BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal empty from " MemberReference toDir MemberReference Project MSG_DEBUG log LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference toDir Literal false StatementExpression MethodInvocation MemberReference Literal "empty director" Literal "y" Literal "ies" logRemovedCount	1
MethodDeclaration Modifier private ReferenceType InputStream loadResource FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType InputStream VariableDeclarator stream Literal null LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement BinaryOperation && MethodInvocation e hasMoreElements BinaryOperation == MemberReference stream Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pathComponent Cast ReferenceType File MethodInvocation e nextElement StatementExpression Assignment MemberReference stream MethodInvocation MemberReference pathComponent MemberReference name getResourceStream = ReturnStatement MemberReference stream	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator log ClassCreator ReferenceType Literal StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression MethodInvocation MethodInvocation MemberReference log getProject StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression MethodInvocation Literal 3 MethodInvocation log getCount assertEquals	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String line FormalParameter BasicType int IfStatement BinaryOperation == MemberReference fos Literal null BlockStatement StatementExpression MethodInvocation MemberReference line MemberReference log BlockStatement StatementExpression MethodInvocation fos MemberReference line println	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public BasicType byte getBytes ReturnStatement MethodInvocation ZipLong MemberReference value getBytes	0
MethodDeclaration Modifier public FormalParameter ReferenceType TimeComparisons StatementExpression MethodInvocation Cast ReferenceType MemberReference	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference message MemberReference Project MSG_INFO log	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType filter StatementExpression MethodInvocation MemberReference filter addElement	0
MethodDeclaration Modifier public ReferenceType Object createParam LocalVariableDeclaration ReferenceType VariableDeclarator param ClassCreator ReferenceType StatementExpression MethodInvocation params MemberReference param addElement ReturnStatement MemberReference param	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier private logFuture FormalParameter ReferenceType ResourceCollection rc FormalParameter ReferenceType ResourceSelector LocalVariableDeclaration ReferenceType Restrict VariableDeclarator r ClassCreator ReferenceType Restrict StatementExpression MethodInvocation r MemberReference add StatementExpression MethodInvocation r MemberReference rc add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation r iterator MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Warning: " MethodInvocation i next Literal " modified in the MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier final protected ReferenceType String FormalParameter BasicType int LocalVariableDeclaration ReferenceType User VariableDeclarator u This MemberReference server MethodInvocation MemberReference IfStatement BinaryOperation == Literal null MemberReference u BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation u getName	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation != MethodInvocation MethodInvocation MemberReference Manifest indexOf getLog Literal - 1 StatementExpression MethodInvocation Literal "Expected warning about attribute" MemberReference assertTrue	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Commandline c IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation c Literal setExecutable IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation c MethodInvocation MemberReference setLine createArgument IfStatement BinaryOperation && BinaryOperation > This MemberReference Literal 0 BinaryOperation <= This MemberReference MemberReference BlockStatement StatementExpression MethodInvocation c MethodInvocation BinaryOperation + Literal This MemberReference setValue Literal true createArgument IfStatement BinaryOperation && MemberReference MemberReference ! BlockStatement StatementExpression MethodInvocation c MethodInvocation Literal setValue Literal true createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation c MethodInvocation Literal setValue Literal true createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation c MethodInvocation Literal setValue Literal true createArgument IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation c MethodInvocation BinaryOperation + Literal "-d" MemberReference setLine Literal true createArgument	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType url StatementExpression MethodInvocation resolvers MemberReference url add	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createArg ReturnStatement MethodInvocation cmd createArgument	0
MethodDeclaration Modifier protected processLine FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference level processLine	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType String style StatementExpression Assignment This MemberReference style MemberReference style =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal a foo"	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String p StatementExpression Assignment MemberReference property MemberReference p =	0
MethodDeclaration Modifier public BasicType boolean isExists ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MethodInvocation MethodInvocation exists getNotNullFile	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator test ClassCreator ReferenceType MethodInvocation getProject StatementExpression MethodInvocation MemberReference test addElement StatementExpression MethodInvocation MemberReference test ReturnStatement MemberReference test	0
MethodDeclaration Modifier public ReferenceType String IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Test test FormalParameter ReferenceType AssertionFailedError t StatementExpression MethodInvocation MemberReference test Cast ReferenceType Throwable MemberReference t	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression MethodInvocation Literal is an parameter" MemberReference Project MSG_WARN log	0
MethodDeclaration Modifier private BasicType boolean IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null Literal MethodInvocation MemberReference equals "" BlockStatement ReturnStatement Literal true ReturnStatement BinaryOperation != MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null	0
MethodDeclaration Modifier public ReferenceType Handler createHandler IfStatement BinaryOperation != MemberReference handler Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define > 1 input StatementExpression Assignment MemberReference handler ClassCreator ReferenceType Handler = ReturnStatement MemberReference handler	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType StatementExpression MethodInvocation MethodInvocation getProject setProject ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation MethodInvocation ! FILE_UTILS MethodInvocation exists MethodInvocation MethodInvocation getProject Literal assertTrue StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator outputDirectory ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + MemberReference Literal LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation outputDirectory ClassCreator ReferenceType list StatementExpression MethodInvocation BinaryOperation > MemberReference length Literal 0 assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate IfStatement BinaryOperation != MemberReference classpath Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "using user supplied classpath: " MemberReference classpath MemberReference Project MSG_DEBUG log getProject StatementExpression Assignment MemberReference classpath MethodInvocation classpath Literal "ignore" concatSystemClasspath = BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = StatementExpression Assignment MemberReference classpath MethodInvocation classpath Literal concatSystemClasspath = StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "using system classpath: " MemberReference classpath MemberReference Project MSG_DEBUG log getProject LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader StatementExpression Assignment MemberReference loader ClassCreator ReferenceType AntClassLoader MethodInvocation MethodInvocation getProject MethodInvocation getProject MemberReference classpath Literal false = LocalVariableDeclaration ReferenceType String VariableDeclarator loc Literal null IfStatement BinaryOperation != MemberReference classname Literal null BlockStatement StatementExpression Assignment MemberReference resource BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".class" = IfStatement BinaryOperation == MemberReference resource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "One of class or resource is required" IfStatement MethodInvocation resource Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference resource MethodInvocation resource Literal 1 substring = StatementExpression MethodInvocation BinaryOperation + Literal "Searching for " MemberReference resource MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType URL VariableDeclarator url StatementExpression Assignment MemberReference url MethodInvocation loader MemberReference resource getResource = IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression Assignment MemberReference loc MethodInvocation url toExternalForm = StatementExpression MethodInvocation MethodInvocation MemberReference property MemberReference loc setNewProperty getProject	1
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator m ClassCreator ReferenceType StatementExpression MethodInvocation m Literal StatementExpression MethodInvocation m Literal StatementExpression MethodInvocation Literal match MethodInvocation m Literal mapFileName LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation m Literal mapFileName StatementExpression MethodInvocation Literal "Should match MemberReference result assertNotNull StatementExpression MethodInvocation Literal one result for Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals StatementExpression MethodInvocation m Literal StatementExpression Assignment MemberReference result MethodInvocation m Literal mapFileName = StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal locations for MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType File FormalParameter ReferenceType File result AssertionFailedError IOException IfStatement MethodInvocation ! result exists BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Expected file " MemberReference result Literal " doesn\'t exist" fail LocalVariableDeclaration ReferenceType InputStream VariableDeclarator Literal null LocalVariableDeclaration ReferenceType InputStream VariableDeclarator Literal null TryStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType FileInputStream MemberReference result = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation read WhileStatement BinaryOperation != MemberReference Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference MethodInvocation read assertEquals StatementExpression Assignment MemberReference MethodInvocation read = StatementExpression MethodInvocation Literal "End of file" Literal - 1 MethodInvocation read assertEquals IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean emacsMode StatementExpression Assignment This MemberReference emacsMode MemberReference emacsMode =	0
MethodDeclaration Modifier private ReferenceType ClassLoader IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getClassLoader getClass = ReturnStatement MemberReference StatementExpression Assignment MemberReference MethodInvocation getClassLoader = ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation checkConfiguration LocalVariableDeclaration ReferenceType Vector VariableDeclarator files MethodInvocation getFileList IfStatement MethodInvocation MemberReference files isUpToDate BlockStatement ReturnStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference archiveType Literal ": " MethodInvocation cabFile getAbsolutePath log IfStatement MethodInvocation ! Os Literal "windows" isFamily BlockStatement StatementExpression MethodInvocation Literal "Using MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator fileEnum MethodInvocation files elements WhileStatement MethodInvocation fileEnum hasMoreElements BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "\n" append MethodInvocation fileEnum nextElement append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation cabFile getAbsolutePath append MethodInvocation Literal "\n" append Literal "\n" append TryStatement LocalVariableDeclaration ReferenceType Process VariableDeclarator p MethodInvocation Execute MethodInvocation getProject ArrayCreator ReferenceType String ArrayInitializer Literal Literal null TernaryExpression BinaryOperation != MemberReference baseDir Literal null MemberReference baseDir MethodInvocation MethodInvocation getProject Literal true launch LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out MethodInvocation p getOutputStream LocalVariableDeclaration ReferenceType LogOutputStream VariableDeclarator outLog ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_VERBOSE LocalVariableDeclaration ReferenceType LogOutputStream VariableDeclarator errLog ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_ERR LocalVariableDeclaration ReferenceType StreamPumper VariableDeclarator ClassCreator ReferenceType StreamPumper MethodInvocation p getInputStream MemberReference outLog LocalVariableDeclaration ReferenceType StreamPumper VariableDeclarator ClassCreator ReferenceType StreamPumper MethodInvocation p getErrorStream MemberReference errLog StatementExpression ClassCreator MethodInvocation start ReferenceType Thread MemberReference StatementExpression ClassCreator MethodInvocation start ReferenceType Thread MemberReference StatementExpression MethodInvocation out MethodInvocation sb MethodInvocation getBytes toString write StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close LocalVariableDeclaration BasicType int VariableDeclarator result Literal - 99 TryStatement StatementExpression Assignment MemberReference result MethodInvocation p waitFor = StatementExpression MethodInvocation waitFor StatementExpression MethodInvocation outLog close StatementExpression MethodInvocation waitFor StatementExpression MethodInvocation errLog close CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference ie log IfStatement MethodInvocation Execute MemberReference result isFailure BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Error executing error " MemberReference result log CatchClause CatchClauseParameter IOException ex LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Problem creating " MemberReference cabFile Literal " " MethodInvocation ex getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator listFile MethodInvocation MemberReference files LocalVariableDeclaration ReferenceType VariableDeclarator exec MethodInvocation LocalVariableDeclaration ReferenceType File VariableDeclarator outFile Literal null StatementExpression MethodInvocation exec Literal true StatementExpression MethodInvocation exec MemberReference baseDir IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference outFile MethodInvocation FILE_UTILS Literal Literal "" Literal null createTempFile = StatementExpression MethodInvocation outFile deleteOnExit StatementExpression MethodInvocation exec MemberReference outFile StatementExpression MethodInvocation exec Literal setExecutable StatementExpression MethodInvocation exec MethodInvocation Literal "-r" setValue createArg StatementExpression MethodInvocation exec MethodInvocation Literal setValue createArg IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation exec MethodInvocation Literal setValue createArg StatementExpression MethodInvocation exec MethodInvocation Literal "none" setValue createArg IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation exec MethodInvocation MemberReference setLine createArg StatementExpression MethodInvocation exec MethodInvocation Literal "n" setValue createArg StatementExpression MethodInvocation exec MethodInvocation MemberReference cabFile createArg StatementExpression MethodInvocation exec MethodInvocation BinaryOperation + Literal "@" MethodInvocation listFile getAbsolutePath setValue createArg StatementExpression MethodInvocation exec execute IfStatement BinaryOperation != MemberReference outFile Literal null BlockStatement StatementExpression MethodInvocation outFile delete StatementExpression MethodInvocation listFile delete CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Problem creating " MemberReference cabFile Literal " " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	1
MethodDeclaration Modifier static protected BasicType int FormalParameter ReferenceType File home BuildException ReturnStatement MemberReference ArraySelector MethodInvocation MemberReference home	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement TernaryExpression BinaryOperation == MemberReference name Literal null SuperMethodInvocation getName MemberReference name	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public addFilterSet FormalParameter ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType String token StatementExpression MethodInvocation MethodInvocation MemberReference token	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression Assignment MemberReference r1 ClassCreator ReferenceType FileReader MethodInvocation MethodInvocation BinaryOperation + MemberReference tempDir Literal getProject = StatementExpression Assignment MemberReference r2 ClassCreator ReferenceType FileReader MethodInvocation MethodInvocation BinaryOperation + MemberReference tempDir Literal getProject = LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf1 ClassCreator ReferenceType Manifest MemberReference r1 LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf2 ClassCreator ReferenceType Manifest MemberReference r2 StatementExpression MethodInvocation MemberReference mf1 MemberReference mf2 assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal - expectLogContaining	0
MethodDeclaration Modifier public static ReferenceType Test suite ReturnStatement ClassCreator ReferenceType ClassReference ReferenceType	0
MethodDeclaration Modifier public close IfStatement BinaryOperation && BinaryOperation != MemberReference project Literal null BinaryOperation != MemberReference property Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s ClassCreator ReferenceType String MethodInvocation toByteArray StatementExpression MethodInvocation project MemberReference property TernaryExpression MemberReference trim MethodInvocation s trim MemberReference s setNewProperty	1
MethodDeclaration Modifier public FormalParameter ReferenceType File target StatementExpression Assignment This MemberReference targetFile MemberReference target =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Vector list StatementExpression Assignment This MemberReference MemberReference list =	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Project p FormalParameter ReferenceType Object parent FormalParameter ReferenceType String value InvocationTargetException IllegalAccessException StatementExpression MethodInvocation m MemberReference parent Cast ReferenceType Object ArrayCreator ReferenceType String ArrayInitializer MemberReference value invoke	1
MethodDeclaration Modifier public static ReferenceType Object invoke FormalParameter ReferenceType Object obj FormalParameter ReferenceType String methodName TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method StatementExpression Assignment MemberReference method MethodInvocation obj MethodInvocation MemberReference methodName Cast ReferenceType Class Literal null getMethod getClass = ReturnStatement MethodInvocation method MemberReference obj Cast ReferenceType Object Literal null invoke CatchClause CatchClauseParameter Exception t StatementExpression MethodInvocation MemberReference t throwBuildException ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected runExec FormalParameter ReferenceType Execute exe BuildException LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator totalDirs Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator haveExecuted Literal false TryStatement LocalVariableDeclaration ReferenceType Vector VariableDeclarator fileNames ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator baseDirs ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentType MemberReference type LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator fs Cast ReferenceType AbstractFileSet MethodInvocation filesets MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference fs ReferenceType BlockStatement IfStatement MethodInvocation ! FileDirBoth.DIR MemberReference type equals BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Found a dirset but type is " MemberReference type Literal ". " Literal to on Literal " that you did Literal " not MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference currentType MemberReference = LocalVariableDeclaration ReferenceType File VariableDeclarator base MethodInvocation fs MethodInvocation getProject getDir LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner IfStatement MethodInvocation ! FileDirBoth.DIR MemberReference currentType equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference base MemberReference ds getFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference s length MemberReference ++ j BlockStatement StatementExpression MemberReference ++ StatementExpression MethodInvocation fileNames MemberReference ArraySelector MemberReference j s addElement StatementExpression MethodInvocation baseDirs MemberReference base addElement IfStatement MethodInvocation ! FileDirBoth.FILE MemberReference currentType equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference base MemberReference ds ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference s length MemberReference ++ j BlockStatement StatementExpression MemberReference ++ totalDirs StatementExpression MethodInvocation fileNames MemberReference ArraySelector MemberReference j s addElement StatementExpression MethodInvocation baseDirs MemberReference base addElement IfStatement BinaryOperation && BinaryOperation == MethodInvocation fileNames size Literal 0 MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator includedCount BinaryOperation + TernaryExpression MethodInvocation FileDirBoth.DIR MemberReference currentType equals MethodInvocation ds getIncludedFilesCount Literal 0 TernaryExpression MethodInvocation FileDirBoth.FILE MemberReference currentType equals MethodInvocation ds Literal 0 StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Skipping fileset for directory " MemberReference base Literal ". It is " TernaryExpression BinaryOperation > MemberReference includedCount Literal 0 Literal to Literal MemberReference Project MSG_INFO log ContinueStatement IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s ArrayCreator ReferenceType String MethodInvocation fileNames size StatementExpression MethodInvocation fileNames MemberReference s copyInto ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference s length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator command MethodInvocation MemberReference ArraySelector MemberReference j s MemberReference base getCommandline StatementExpression MethodInvocation MethodInvocation Commandline MemberReference command describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MemberReference command setCommandline IfStatement BinaryOperation != MemberReference redirectorElement Literal null BlockStatement StatementExpression MethodInvocation setupRedirector StatementExpression MethodInvocation redirectorElement MemberReference redirector MemberReference ArraySelector MemberReference j s IfStatement BinaryOperation || BinaryOperation != MemberReference redirectorElement Literal null MemberReference haveExecuted BlockStatement StatementExpression MethodInvocation exe MethodInvocation redirector createHandler StatementExpression MethodInvocation MemberReference exe runExecute StatementExpression Assignment MemberReference haveExecuted Literal true = StatementExpression MethodInvocation fileNames removeAllElements StatementExpression MethodInvocation baseDirs removeAllElements IfStatement BinaryOperation != MemberReference resources Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator res Cast ReferenceType Resource MethodInvocation iter next IfStatement BinaryOperation && MethodInvocation ! res isExists MemberReference BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator base Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation res getName IfStatement BinaryOperation instanceof MemberReference res ReferenceType FileResource BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator fr Cast ReferenceType FileResource MemberReference res StatementExpression Assignment MemberReference base MethodInvocation fr = IfStatement BinaryOperation == MemberReference base Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation fr MethodInvocation getAbsolutePath getFile = IfStatement BinaryOperation == MethodInvocation MemberReference length ArrayCreator ReferenceType String ArrayInitializer MemberReference name MemberReference base Literal 0 BlockStatement ContinueStatement IfStatement BinaryOperation && BinaryOperation || MethodInvocation ! res isDirectory MethodInvocation ! res isExists MethodInvocation ! FileDirBoth.DIR MemberReference type equals BlockStatement StatementExpression MemberReference ++ IfStatement BinaryOperation && MethodInvocation res isDirectory MethodInvocation ! FileDirBoth.FILE MemberReference type equals BlockStatement StatementExpression MemberReference ++ totalDirs BlockStatement ContinueStatement StatementExpression MethodInvocation baseDirs MemberReference base add StatementExpression MethodInvocation fileNames MemberReference name add IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator command MethodInvocation MemberReference name MemberReference base getCommandline StatementExpression MethodInvocation MethodInvocation Commandline MemberReference command describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation exe MemberReference command setCommandline IfStatement BinaryOperation != MemberReference redirectorElement Literal null BlockStatement StatementExpression MethodInvocation setupRedirector StatementExpression MethodInvocation redirectorElement MemberReference redirector MemberReference name IfStatement BinaryOperation || BinaryOperation != MemberReference redirectorElement Literal null MemberReference haveExecuted BlockStatement StatementExpression MethodInvocation exe MethodInvocation redirector createHandler StatementExpression MethodInvocation MemberReference exe runExecute StatementExpression Assignment MemberReference haveExecuted Literal true = StatementExpression MethodInvocation fileNames removeAllElements StatementExpression MethodInvocation baseDirs removeAllElements IfStatement BinaryOperation && MemberReference BinaryOperation || BinaryOperation > MethodInvocation fileNames size Literal 0 MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference exe MemberReference fileNames MemberReference baseDirs StatementExpression Assignment MemberReference haveExecuted Literal true = IfStatement MemberReference haveExecuted BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation cmdl getExecutable Literal " to " MemberReference Literal " file" TernaryExpression BinaryOperation != MemberReference Literal 1 Literal "s" Literal "" Literal " and " MemberReference totalDirs Literal " director" TernaryExpression BinaryOperation != MemberReference totalDirs Literal 1 Literal "ies" Literal "y" Literal "." TernaryExpression MemberReference MemberReference Project MSG_INFO MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Execute failed: " MemberReference e MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation logFlush StatementExpression MethodInvocation redirector Literal false StatementExpression MethodInvocation redirector setProperties	1
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference MemberReference enable =	0
MethodDeclaration Modifier public SAXException LocalVariableDeclaration ReferenceType VariableDeclarator StatementExpression Assignment MemberReference MethodInvocation = StatementExpression MethodInvocation Literal Literal true	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation getAbsolutePath getProject BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation MethodInvocation MemberReference getProject IfStatement MethodInvocation ! dir exists BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator done MethodInvocation dir mkdirs IfStatement MemberReference ! done BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Directory " MemberReference Literal " creation was not " Literal for an unknown ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal "Created dir: " MethodInvocation dir getAbsolutePath log getProject ReturnStatement MethodInvocation dir getAbsolutePath	0
MethodDeclaration Modifier private ReferenceType Iterator iterator ReturnStatement MethodInvocation rcs iterator	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public ReferenceType getRmic ReturnStatement MemberReference attributes	0
MethodDeclaration Modifier final protected addParentDirs FormalParameter ReferenceType File baseDir FormalParameter ReferenceType String entry FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String prefix FormalParameter BasicType int IOException IfStatement MemberReference ! doFilesonly BlockStatement LocalVariableDeclaration ReferenceType Stack VariableDeclarator ClassCreator ReferenceType Stack LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation entry length WhileStatement BinaryOperation != Assignment MemberReference MethodInvocation entry Literal '/' BinaryOperation - MemberReference Literal 1 lastIndexOf = Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dir MethodInvocation entry Literal 0 BinaryOperation + MemberReference Literal 1 substring IfStatement BinaryOperation != MethodInvocation BinaryOperation + MemberReference prefix MemberReference dir get Literal null BlockStatement BreakStatement StatementExpression MethodInvocation MemberReference dir push WhileStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dir Cast ReferenceType String MethodInvocation pop LocalVariableDeclaration ReferenceType File VariableDeclarator f Literal null IfStatement BinaryOperation != MemberReference baseDir Literal null BlockStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType File MemberReference baseDir MemberReference dir = BlockStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType File MemberReference dir = StatementExpression MethodInvocation MemberReference f MemberReference zOut BinaryOperation + MemberReference prefix MemberReference dir MemberReference	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Class c ReturnStatement TernaryExpression BinaryOperation == MemberReference c Literal null Literal "<null>" MethodInvocation c MethodInvocation getName getClass	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String destFile LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator relativePath ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator defaultOutputDirectory MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator nextPos MethodInvocation defaultOutputDirectory Literal '/' indexOf LocalVariableDeclaration BasicType int VariableDeclarator startPos BinaryOperation + MemberReference nextPos Literal 1 WhileStatement BinaryOperation && BinaryOperation > MemberReference startPos Literal - 1 BinaryOperation < MemberReference startPos MethodInvocation defaultOutputDirectory length BlockStatement StatementExpression MethodInvocation relativePath Literal append StatementExpression Assignment MemberReference nextPos MethodInvocation defaultOutputDirectory Literal '/' MemberReference startPos indexOf = IfStatement BinaryOperation == MemberReference nextPos Literal - 1 BlockStatement StatementExpression Assignment MemberReference startPos MemberReference nextPos = BlockStatement StatementExpression Assignment MemberReference startPos BinaryOperation + MemberReference nextPos Literal 1 = StatementExpression MethodInvocation relativePath MemberReference destFile append ReturnStatement MethodInvocation relativePath toString	1
MethodDeclaration Modifier public write FormalParameter ReferenceType PrintWriter writer IOException ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation MemberReference writer Cast ReferenceType String MethodInvocation e nextElement	0
MethodDeclaration Modifier protected ReferenceType StatementExpression Assignment MemberReference src Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType context StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public setHost FormalParameter ReferenceType String host StatementExpression Assignment This MemberReference host MemberReference host =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fork IfStatement MemberReference ! fork BlockStatement StatementExpression MethodInvocation MemberReference MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public ReferenceType String fromURI FormalParameter ReferenceType String uri SynchronizedStatement MemberReference IfStatement MethodInvocation uri MemberReference equals BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation Locator MemberReference uri fromURI LocalVariableDeclaration ReferenceType String VariableDeclarator ret TernaryExpression MethodInvocation MemberReference path isAbsolutePath MethodInvocation MethodInvocation getAbsolutePath MemberReference path normalize MemberReference path StatementExpression Assignment MemberReference MemberReference uri = StatementExpression Assignment MemberReference MemberReference ret = ReturnStatement MemberReference ret	0
MethodDeclaration Modifier private FormalParameter ReferenceType Document doc FormalParameter Modifier final ReferenceType PrintWriter output FormalParameter Modifier final ReferenceType entry IOException LocalVariableDeclaration ReferenceType Element VariableDeclarator ent MethodInvocation doc Literal createElement StatementExpression MethodInvocation MemberReference ent Literal MethodInvocation MethodInvocation entry getDate format StatementExpression MethodInvocation MemberReference ent Literal MethodInvocation MethodInvocation entry getDate format StatementExpression MethodInvocation MemberReference ent Literal "author" MethodInvocation entry getAuthor LocalVariableDeclaration Modifier final ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation entry MethodInvocation elements getFiles WhileStatement MethodInvocation enumeration hasMoreElements BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator file Cast ReferenceType MethodInvocation enumeration nextElement LocalVariableDeclaration ReferenceType Element VariableDeclarator f MethodInvocation MemberReference ent Literal "file" StatementExpression MethodInvocation MemberReference f Literal "name" MethodInvocation file getName StatementExpression MethodInvocation MemberReference f Literal MethodInvocation file LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation file IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference f Literal MemberReference StatementExpression MethodInvocation MemberReference ent Literal MethodInvocation entry StatementExpression MethodInvocation MemberReference ent MemberReference output Literal 1 Literal "\t" write	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String toProcess IfStatement BinaryOperation || BinaryOperation == MemberReference toProcess Literal null BinaryOperation == MethodInvocation toProcess length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator path ClassCreator ReferenceType StringBuffer BinaryOperation + MethodInvocation toProcess length Literal 50 LocalVariableDeclaration ReferenceType PathTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType PathTokenizer MemberReference toProcess WhileStatement MethodInvocation tokenizer hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pathComponent MethodInvocation tokenizer nextToken StatementExpression Assignment MemberReference pathComponent MethodInvocation pathComponent Literal '/' MemberReference File separatorChar replace = StatementExpression Assignment MemberReference pathComponent MethodInvocation pathComponent Literal '\\' MemberReference File separatorChar replace = IfStatement BinaryOperation != MethodInvocation path length Literal 0 BlockStatement StatementExpression MethodInvocation path MemberReference File pathSeparatorChar append StatementExpression MethodInvocation path MemberReference pathComponent append ReturnStatement MethodInvocation path toString	1
MethodDeclaration * accessor to proxy * @return the port */ Modifier public BasicType int ReturnStatement MemberReference proxyPort	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator zs ClassCreator ReferenceType ZipShort Literal LocalVariableDeclaration BasicType byte VariableDeclarator result MethodInvocation zs getBytes StatementExpression MethodInvocation Literal Literal 2 MemberReference result length assertEquals StatementExpression MethodInvocation Literal byte Literal MemberReference ArraySelector Literal 0 result assertEquals StatementExpression MethodInvocation Literal byte Literal MemberReference ArraySelector Literal 1 result assertEquals	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType FTPClient ftp FormalParameter ReferenceType String dir FormalParameter ReferenceType FTPFile file LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator currentWorkingDir Literal null IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal true IfStatement MethodInvocation file isFile BlockStatement ReturnStatement Literal false TryStatement StatementExpression Assignment MemberReference currentWorkingDir MethodInvocation ftp = CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "could not find current directory " MemberReference dir Literal " while checking a MemberReference Project MSG_DEBUG log getProject IfStatement BinaryOperation != MemberReference currentWorkingDir Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference result MethodInvocation ftp MethodInvocation file changeWorkingDirectory = CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "could not cd to " MethodInvocation file Literal " while checking a MemberReference Project MSG_DEBUG log getProject IfStatement MemberReference result BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator comeback Literal false TryStatement StatementExpression Assignment MemberReference comeback MethodInvocation ftp MemberReference currentWorkingDir changeWorkingDirectory = CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "could not cd back to " MemberReference dir Literal " while checking a MemberReference Project MSG_ERR log getProject IfStatement MemberReference ! comeback BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "could not cd back to " MemberReference dir Literal " while checking a ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference password MemberReference password =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Map attributes FormalParameter ReferenceType Map elements StatementExpression MethodInvocation MemberReference attributes MemberReference elements Literal null	1
MethodDeclaration Modifier private FormalParameter ReferenceType ResourceCollection c LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null LocalVariableDeclaration BasicType char VariableDeclarator buffer ArrayCreator BasicType char MemberReference BUFFER_SIZE TryStatement LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer Literal null IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference writer ClassCreator ReferenceType PrintWriter MemberReference = BlockStatement IfStatement BinaryOperation == MemberReference destinationFile Literal null BlockStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_WARN = BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation destinationFile getParentFile IfStatement MethodInvocation ! parent exists BlockStatement StatementExpression MethodInvocation parent mkdirs StatementExpression Assignment MemberReference os ClassCreator ReferenceType FileOutputStream MethodInvocation destinationFile getAbsolutePath MemberReference append = IfStatement BinaryOperation == MemberReference outputEncoding Literal null BlockStatement StatementExpression Assignment MemberReference writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference os = BlockStatement StatementExpression Assignment MemberReference writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference os MemberReference outputEncoding = IfStatement BinaryOperation != MemberReference header Literal null BlockStatement IfStatement MethodInvocation header BlockStatement StatementExpression MethodInvocation MemberReference buffer MemberReference writer ClassCreator ReferenceType StringReader MethodInvocation header getValue concatenate BlockStatement StatementExpression MethodInvocation writer MethodInvocation header getValue print IfStatement BinaryOperation > MethodInvocation c size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference buffer MemberReference writer ClassCreator ReferenceType MemberReference c concatenate IfStatement BinaryOperation != MemberReference footer Literal null BlockStatement IfStatement MethodInvocation footer BlockStatement StatementExpression MethodInvocation MemberReference buffer MemberReference writer ClassCreator ReferenceType StringReader MethodInvocation footer getValue concatenate BlockStatement StatementExpression MethodInvocation writer MethodInvocation footer getValue print StatementExpression MethodInvocation writer flush IfStatement BinaryOperation != MemberReference os Literal null BlockStatement StatementExpression MethodInvocation os flush CatchClause CatchClauseParameter IOException ioex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error while " MethodInvocation ioex getMessage MemberReference ioex StatementExpression MethodInvocation FileUtils MemberReference os close	1
MethodDeclaration Modifier public start StatementExpression Assignment MemberReference worker ClassCreator ReferenceType Thread This BinaryOperation + BinaryOperation + MethodInvocation toString Literal "/" MemberReference target = StatementExpression MethodInvocation worker start	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation reg Literal "end of text$" StatementExpression MethodInvocation Literal character" MethodInvocation ! reg Literal "end of matches assertTrue	1
MethodDeclaration Modifier public FormalParameter ReferenceType value StatementExpression MethodInvocation MemberReference value add	0
MethodDeclaration Modifier public synchronized BuildException StatementExpression Assignment MemberReference MethodInvocation System = StatementExpression MethodInvocation init StatementExpression MethodInvocation System ClassCreator ReferenceType StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression MethodInvocation MemberReference file add	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src StatementExpression Assignment MemberReference group MemberReference src =	0
MethodDeclaration Modifier public ReferenceType Property createParam IfStatement BinaryOperation == MemberReference callee Literal null BlockStatement StatementExpression MethodInvocation init ReturnStatement MethodInvocation callee	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file1 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator file2 ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MethodInvocation file1 exists assertTrue StatementExpression MethodInvocation MethodInvocation file2 exists assertTrue StatementExpression MethodInvocation MethodInvocation exists assertTrue	0
MethodDeclaration Modifier protected ReferenceType getServer LocalVariableDeclaration ReferenceType VariableDeclarator s ClassCreator ReferenceType MethodInvocation MethodInvocation StatementExpression MethodInvocation s connect StatementExpression MethodInvocation s MethodInvocation MethodInvocation getPassword ReturnStatement MemberReference s	0
MethodDeclaration Modifier protected FormalParameter ReferenceType OutputStream errorStream StatementExpression Assignment This MemberReference errorStream MemberReference errorStream =	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String label BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference label Literal null MethodInvocation label Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal cannot be Null or StatementExpression Assignment This MemberReference label MemberReference label =	1
MethodDeclaration Modifier public ReferenceType StringBuffer ThrowStatement ClassCreator ReferenceType NullPointerException	0
MethodDeclaration Modifier public ReferenceType String XDocletException LocalVariableDeclaration ReferenceType String VariableDeclarator elementType MethodInvocation elementType LocalVariableDeclaration ReferenceType String VariableDeclarator display Cast ReferenceType String MethodInvocation MemberReference elementType get IfStatement BinaryOperation == MemberReference display Literal null BlockStatement StatementExpression Assignment MemberReference display Literal "" = ReturnStatement MemberReference display	0
MethodDeclaration Modifier public IfStatement BinaryOperation || MethodInvocation Os Literal "dos" isFamily MethodInvocation Os Literal isFamily BlockStatement StatementExpression MethodInvocation MemberReference File separator MethodInvocation FILE_UTILS MethodInvocation getPath Literal "/" normalize assertEquals StatementExpression MethodInvocation MemberReference File separator MethodInvocation FILE_UTILS MethodInvocation getPath Literal "\\" normalize assertEquals BlockStatement TryStatement StatementExpression MethodInvocation FILE_UTILS MethodInvocation getPath Literal "/" normalize StatementExpression MethodInvocation Literal on or fail CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation FILE_UTILS MethodInvocation getPath Literal "\\" normalize StatementExpression MethodInvocation Literal on or fail CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation Os Literal "dos" isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal TryStatement StatementExpression MethodInvocation FILE_UTILS MethodInvocation getPath MemberReference driveSpec normalize StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal " is not an absolute path" fail CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "/" normalize assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "\\" normalize assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference Literal "/" normalize assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference Literal "\\" normalize assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal normalize assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal "\\" MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal normalize assertEquals IfStatement MethodInvocation Os Literal isFamily BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath MemberReference driveSpec normalize assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "/" normalize assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal "\\" normalize assertEquals LocalVariableDeclaration ReferenceType String VariableDeclarator Literal StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath MemberReference normalize assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference Literal "/" normalize assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference Literal "\\" normalize assertEquals StatementExpression MethodInvocation BinaryOperation + MemberReference driveSpec Literal MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference Literal normalize assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal normalize assertEquals StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath BinaryOperation + MemberReference driveSpec Literal normalize assertEquals BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator driveSpec Literal StatementExpression MethodInvocation MemberReference driveSpec MethodInvocation FILE_UTILS MethodInvocation getPath MemberReference driveSpec normalize assertEquals StatementExpression MethodInvocation Literal "Expected isn't an absolute path on other fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals StatementExpression MethodInvocation MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation getPath MethodInvocation Literal localize normalize assertEquals TryStatement StatementExpression MethodInvocation FILE_UTILS Literal "foo" normalize StatementExpression MethodInvocation Literal "foo is not an absolute path" fail CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation Literal "will not go outside FS root will not throw an exception ClassCreator ReferenceType File MethodInvocation Literal localize MethodInvocation FILE_UTILS MethodInvocation Literal localize normalize assertEquals	1
MethodDeclaration Modifier public reset StatementExpression MethodInvocation resources removeAllElements StatementExpression Assignment MemberReference zipFile Literal null = StatementExpression Assignment MemberReference baseDir Literal null = StatementExpression MethodInvocation removeAllElements StatementExpression Assignment MemberReference duplicate Literal = StatementExpression Assignment MemberReference archiveType Literal = StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference Literal = StatementExpression Assignment MemberReference doUpdate Literal false = StatementExpression Assignment MemberReference doFilesonly Literal false = StatementExpression Assignment MemberReference encoding Literal null =	0
MethodDeclaration Modifier public clear StatementExpression Assignment MemberReference files ClassCreator ReferenceType ArrayList Literal 1 =	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement This MemberReference classpath MethodInvocation createPath	0
MethodDeclaration BasicType boolean IOException LocalVariableDeclaration BasicType int VariableDeclarator bufferLength Literal 0 StatementExpression Assignment MemberReference bufferLength MethodInvocation reader MemberReference buffer read = IfStatement BinaryOperation < MemberReference bufferLength Literal 0 BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation ClassCreator ReferenceType String MemberReference buffer Literal 0 MemberReference bufferLength append ReturnStatement Literal true	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MethodInvocation getProject getComponentHelper LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ProjectHelper MemberReference uri MemberReference genComponentName LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def MethodInvocation helper MemberReference IfStatement BinaryOperation == MemberReference def Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator found BinaryOperation != MethodInvocation def MethodInvocation getProject Literal null IfStatement MemberReference ! found BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation helper MemberReference Literal "type" StatementExpression MethodInvocation MemberReference text MemberReference Project MSG_VERBOSE log ReturnStatement MemberReference found	0
MethodDeclaration Modifier public FormalParameter ReferenceType String p StatementExpression Assignment This MemberReference password MemberReference p =	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String ReturnStatement MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType File normalize FormalParameter Modifier final ReferenceType String path LocalVariableDeclaration ReferenceType Stack VariableDeclarator s ClassCreator ReferenceType Stack LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference path StatementExpression MethodInvocation s MemberReference ArraySelector Literal 0 push LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference ArraySelector Literal 1 MemberReference File separator WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation tok nextToken IfStatement Literal MethodInvocation MemberReference equals "." BlockStatement ContinueStatement IfStatement Literal MethodInvocation MemberReference equals ".." BlockStatement IfStatement BinaryOperation < MethodInvocation s size Literal 2 BlockStatement ReturnStatement ClassCreator ReferenceType File MemberReference path StatementExpression MethodInvocation s pop BlockStatement StatementExpression MethodInvocation s MemberReference push LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation s size MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 1 BlockStatement StatementExpression MethodInvocation sb MemberReference File separatorChar append StatementExpression MethodInvocation sb MethodInvocation s MemberReference i elementAt append ReturnStatement ClassCreator ReferenceType File MethodInvocation sb toString	0
MethodDeclaration Modifier public BasicType long getLastModified IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef IfStatement BinaryOperation || MethodInvocation ! isExists BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MemberReference LocalVariableDeclaration BasicType long VariableDeclarator result MethodInvocation longValue ReturnStatement TernaryExpression BinaryOperation < MemberReference result MemberReference MemberReference MemberReference result	0
MethodDeclaration Modifier public FormalParameter ReferenceType String src StatementExpression Assignment MemberReference MemberReference src =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference StatementExpression Assignment This MemberReference Literal false =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Operation value StatementExpression Assignment This MemberReference operation MethodInvocation Operation MethodInvocation value getValue =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType double d LocalVariableDeclaration BasicType double VariableDeclarator diff BinaryOperation - MemberReference d Literal 19 StatementExpression MethodInvocation BinaryOperation + Literal "Expected received " MemberReference d BinaryOperation && BinaryOperation > MemberReference diff Literal - BinaryOperation < MemberReference diff Literal assertTrue	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String ReturnStatement MethodInvocation Literal null Literal null MemberReference Literal null	0
MethodDeclaration Modifier public synchronized ReferenceType String getValue ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public FormalParameter ReferenceType s IfStatement BinaryOperation != MemberReference syncTarget Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must not multiple " Literal StatementExpression Assignment MemberReference syncTarget MemberReference s =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File srcFile StatementExpression Assignment This MemberReference srcFile MemberReference srcFile =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Set nonOrphans FormalParameter ReferenceType File toDir LocalVariableDeclaration BasicType int VariableDeclarator removedCount ArrayCreator BasicType int ArrayInitializer Literal 0 Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator excls Cast ReferenceType String MethodInvocation nonOrphans ArrayCreator ReferenceType String BinaryOperation + MethodInvocation nonOrphans size Literal 1 toArray StatementExpression Assignment MemberReference ArraySelector MethodInvocation nonOrphans size excls Literal "" = LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds Literal null IfStatement BinaryOperation != MemberReference syncTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MemberReference toDir StatementExpression MethodInvocation fs MethodInvocation syncTarget isCaseSensitive StatementExpression MethodInvocation fs MethodInvocation syncTarget LocalVariableDeclaration ReferenceType VariableDeclarator ps MethodInvocation syncTarget MethodInvocation getProject StatementExpression MethodInvocation fs MethodInvocation ps MethodInvocation getProject appendExcludes StatementExpression MethodInvocation fs MethodInvocation ps MethodInvocation getProject appendIncludes StatementExpression MethodInvocation fs MethodInvocation ! syncTarget LocalVariableDeclaration ReferenceType FileSelector VariableDeclarator s MethodInvocation syncTarget MethodInvocation getProject getSelectors IfStatement BinaryOperation > MemberReference s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType NoneSelector VariableDeclarator ns ClassCreator ReferenceType NoneSelector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference s length MemberReference ++ i BlockStatement StatementExpression MethodInvocation ns MemberReference ArraySelector MemberReference i s appendSelector StatementExpression MethodInvocation fs MemberReference ns appendSelector StatementExpression Assignment MemberReference ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner = BlockStatement StatementExpression Assignment MemberReference ds ClassCreator ReferenceType DirectoryScanner = StatementExpression MethodInvocation ds MemberReference toDir StatementExpression MethodInvocation ds MemberReference excls StatementExpression MethodInvocation ds LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference toDir MemberReference ArraySelector MemberReference i files StatementExpression MethodInvocation BinaryOperation + Literal "Removing file: " MemberReference f MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation f delete StatementExpression MemberReference ++ ArraySelector Literal 1 removedCount LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation ds getIncludedDirectories ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference dirs length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference toDir MemberReference ArraySelector MemberReference i dirs IfStatement BinaryOperation < MethodInvocation f MemberReference length list Literal 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Removing directory: " MemberReference f MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation f delete StatementExpression MemberReference ++ ArraySelector Literal 0 removedCount ReturnStatement MemberReference removedCount	1
MethodDeclaration Modifier public synchronized write FormalParameter BasicType int b IOException StatementExpression MethodInvocation StatementExpression MethodInvocation fos MemberReference b write	1
MethodDeclaration Modifier protected checkConfiguration IfStatement MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Required attribute owner not set Literal " MethodInvocation getLocation StatementExpression SuperMethodInvocation checkConfiguration	1
MethodDeclaration Modifier private FormalParameter ReferenceType File jar IfStatement MethodInvocation ! jar exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference jar LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator cmd MethodInvocation StatementExpression MethodInvocation MemberReference cmd StatementExpression MethodInvocation MemberReference cmd StatementExpression MethodInvocation MemberReference cmd Literal addValue IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue StatementExpression MethodInvocation MemberReference cmd MethodInvocation jar getPath addValue StatementExpression MethodInvocation BinaryOperation + Literal " MethodInvocation jar getAbsolutePath log StatementExpression MethodInvocation clear LocalVariableDeclaration ReferenceType BuildException VariableDeclarator ex Literal null TryStatement StatementExpression MethodInvocation cmd execute CatchClause CatchClauseParameter BuildException e StatementExpression Assignment MemberReference ex MemberReference e = LocalVariableDeclaration ReferenceType String VariableDeclarator results MethodInvocation toString IfStatement BinaryOperation != MemberReference ex Literal null BlockStatement IfStatement BinaryOperation >= MethodInvocation results Literal file indexOf Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal are running " MemberReference Literal " against a JVM Literal " a bug that as an MemberReference Project MSG_WARN log BlockStatement ThrowStatement MemberReference ex IfStatement BinaryOperation < MethodInvocation results MemberReference indexOf Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference MemberReference jar	0
MethodDeclaration Modifier protected loadFile FormalParameter ReferenceType File file BuildException LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation BinaryOperation + Literal "Loading " MethodInvocation file getAbsolutePath MemberReference Project MSG_VERBOSE log TryStatement IfStatement MethodInvocation file exists BlockStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference file TryStatement StatementExpression MethodInvocation props MemberReference fis load IfStatement BinaryOperation != MemberReference fis Literal null BlockStatement StatementExpression MethodInvocation fis close StatementExpression MethodInvocation MemberReference props BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to find property file: " MethodInvocation file getAbsolutePath MemberReference Project MSG_VERBOSE log CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType File src StatementExpression Assignment MemberReference MemberReference src =	0
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator IfStatement BinaryOperation && BinaryOperation != MemberReference label Literal null BinaryOperation > MethodInvocation label length Literal 31 BlockStatement StatementExpression Assignment MemberReference This MemberReference label MethodInvocation Literal 0 Literal 30 substring = StatementExpression MethodInvocation BinaryOperation + Literal "Label is longer than 31 to: " MemberReference MemberReference Project MSG_WARN log BlockStatement StatementExpression Assignment MemberReference MemberReference label = ReturnStatement MemberReference	0
MethodDeclaration FormalParameter BasicType int StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String t StatementExpression MethodInvocation text MemberReference t append	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Project project FormalParameter ReferenceType Object source FormalParameter ReferenceType RootHandler handler BuildException LocalVariableDeclaration ReferenceType AntXMLContext VariableDeclarator context MemberReference handler context LocalVariableDeclaration ReferenceType File VariableDeclarator buildFile Literal null LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator buildFileName Literal null IfStatement BinaryOperation instanceof MemberReference source ReferenceType File BlockStatement StatementExpression Assignment MemberReference buildFile Cast ReferenceType File MemberReference source = StatementExpression Assignment MemberReference buildFile MethodInvocation FILE_UTILS MethodInvocation buildFile getAbsolutePath normalize = StatementExpression MethodInvocation context MemberReference buildFile StatementExpression Assignment MemberReference buildFileName MethodInvocation buildFile toString = IfStatement BinaryOperation instanceof MemberReference source ReferenceType URL BlockStatement StatementExpression Assignment MemberReference url Cast ReferenceType URL MemberReference source = StatementExpression Assignment MemberReference buildFileName MethodInvocation url toString = BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Source " MethodInvocation source MethodInvocation getName getClass Literal " not supported by this plugin" LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream Literal null LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource Literal null TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator parser MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator uri Literal null IfStatement BinaryOperation != MemberReference buildFile Literal null BlockStatement StatementExpression Assignment MemberReference uri MethodInvocation FILE_UTILS MethodInvocation buildFile getAbsolutePath toURI = StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType FileInputStream MemberReference buildFile = BlockStatement StatementExpression Assignment MemberReference inputStream MethodInvocation url openStream = StatementExpression Assignment MemberReference uri MethodInvocation url toString = StatementExpression Assignment MemberReference inputSource ClassCreator ReferenceType InputSource MemberReference inputStream = IfStatement BinaryOperation != MemberReference uri Literal null BlockStatement StatementExpression MethodInvocation inputSource MemberReference uri setSystemId StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "parsing " MemberReference buildFileName Literal " with URI = " MemberReference uri MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator hb MemberReference handler StatementExpression MethodInvocation parser MemberReference hb StatementExpression MethodInvocation parser MemberReference hb setEntityResolver StatementExpression MethodInvocation parser MemberReference hb setErrorHandler StatementExpression MethodInvocation parser MemberReference hb setDTDHandler StatementExpression MethodInvocation parser MemberReference inputSource parse CatchClause CatchClauseParameter SAXParseException exc LocalVariableDeclaration ReferenceType Location VariableDeclarator location ClassCreator ReferenceType Location MethodInvocation exc getSystemId MethodInvocation exc getLineNumber MethodInvocation exc getColumnNumber LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation exc getException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement LocalVariableDeclaration ReferenceType BuildException VariableDeclarator be Cast ReferenceType BuildException MemberReference t IfStatement BinaryOperation == MethodInvocation be getLocation MemberReference Location UNKNOWN_LOCATION BlockStatement StatementExpression MethodInvocation be MemberReference location setLocation ThrowStatement MemberReference be IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference t MemberReference exc = ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exc getMessage MemberReference t MemberReference location CatchClause CatchClauseParameter SAXException exc LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation exc getException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference t MemberReference exc = ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation exc getMessage MemberReference t CatchClause CatchClauseParameter FileNotFoundException exc ThrowStatement ClassCreator ReferenceType BuildException MemberReference exc CatchClause CatchClauseParameter UnsupportedEncodingException exc ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Encoding of project file " MemberReference buildFileName Literal " is invalid." MemberReference exc CatchClause CatchClauseParameter IOException exc ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error reading project file " MemberReference buildFileName Literal ": " MethodInvocation exc getMessage MemberReference exc StatementExpression MethodInvocation FileUtils MemberReference inputStream close	1
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier protected ReferenceType DirectoryScanner getDirectoryScanner FormalParameter ReferenceType File baseDir StatementExpression MethodInvocation fileset MemberReference baseDir ReturnStatement MethodInvocation fileset MethodInvocation getProject getDirectoryScanner	0
MethodDeclaration * * * protected and private * */ Modifier protected validateAttributes BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MethodInvocation rcs size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Specify at least one file or a resource IfStatement BinaryOperation && BinaryOperation != MemberReference destFile Literal null BinaryOperation != MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one of tofile and may be set." IfStatement BinaryOperation && BinaryOperation == MemberReference destFile Literal null BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "One of tofile or must be set." IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation file isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Use a resource collection to copy IfStatement BinaryOperation && BinaryOperation != MemberReference destFile Literal null BinaryOperation > MethodInvocation rcs size Literal 0 BlockStatement IfStatement BinaryOperation > MethodInvocation rcs size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot concatenate multiple files into a single file." BlockStatement LocalVariableDeclaration ReferenceType ResourceCollection VariableDeclarator rc Cast ReferenceType ResourceCollection MethodInvocation rcs Literal 0 elementAt IfStatement MethodInvocation ! rc BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal resources Literal " supported when Literal " IfStatement BinaryOperation == MethodInvocation rc size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot perform operation from directory to file." IfStatement BinaryOperation == MethodInvocation rc size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator r Cast ReferenceType FileResource MethodInvocation rc MethodInvocation next iterator IfStatement BinaryOperation == MemberReference file Literal null BlockStatement StatementExpression Assignment MemberReference file MethodInvocation r getFile = StatementExpression MethodInvocation rcs Literal 0 removeElementAt BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot concatenate multiple files into a single file." BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot concatenate multiple files into a single file." IfStatement BinaryOperation != MemberReference destFile Literal null BlockStatement StatementExpression Assignment MemberReference destDir MethodInvocation destFile getParentFile =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference type MethodInvocation type toLowerCase =	1
MethodDeclaration Modifier public ReferenceType createPath IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation path createPath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation BinaryOperation + Literal request to set user property in Literal " MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected Literal "3" MethodInvocation MethodInvocation trim Literal assertEquals StatementExpression MethodInvocation Literal "property Literal "3" MethodInvocation MethodInvocation Literal getProperty MethodInvocation trim getProject assertEquals StatementExpression MethodInvocation Literal "unexpected error MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation BinaryOperation + MemberReference TernaryExpression MethodInvocation Literal "." endsWith Literal "" Literal "." addElement	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public final FormalParameter ReferenceType path StatementExpression Assignment MemberReference MethodInvocation path toString =	0
MethodDeclaration ReferenceType Location getLocation ReturnStatement MemberReference location	0
MethodDeclaration Modifier public FormalParameter ReferenceType String classname StatementExpression Assignment MemberReference MemberReference classname =	0
MethodDeclaration Modifier private StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal Dependency for " MethodInvocation size Literal " MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation keys WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation nextElement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " Class " MemberReference className Literal " MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator affectedClasses Cast ReferenceType Hashtable MethodInvocation MemberReference className get LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation affectedClasses keys WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation nextElement LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator info Cast ReferenceType ClassFileInfo MethodInvocation affectedClasses MemberReference get StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MemberReference Literal " in " MethodInvocation getPath MemberReference Project MSG_DEBUG log IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal file dependencies MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation keys WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation nextElement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " Class " MemberReference className Literal " depends MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencies Cast ReferenceType Hashtable MethodInvocation MemberReference className get LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation dependencies elements WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator Cast ReferenceType File MethodInvocation nextElement StatementExpression MethodInvocation BinaryOperation + Literal " " MethodInvocation getPath MemberReference Project MSG_DEBUG log	0
MethodDeclaration Modifier public run TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator evt Literal null IfStatement BinaryOperation != Assignment MemberReference evt MethodInvocation read = Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation evt getType MemberReference BlockStatement StatementExpression This MethodInvocation stop CatchClause CatchClauseParameter Exception e StatementExpression This MethodInvocation stop	1
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment MemberReference destDir MemberReference dest =	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + Literal "{" MethodInvocation MethodInvocation toString Literal "}"	1
MethodDeclaration Modifier public FormalParameter ReferenceType File destDir StatementExpression Assignment This MemberReference destDir MemberReference destDir =	0
MethodDeclaration Modifier public static ReferenceType getInstance FormalParameter ReferenceType ResourceCollection rc ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference rc ReferenceType Cast ReferenceType MemberReference rc ClassCreator ReferenceType MemberReference rc	0
MethodDeclaration Modifier public log FormalParameter ReferenceType Target target FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable FormalParameter BasicType int StatementExpression MethodInvocation MemberReference target MemberReference message MemberReference MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal "" Literal StatementExpression MethodInvocation Literal Literal from expectLog	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException IfStatement BinaryOperation && BinaryOperation == MemberReference data Literal null BinaryOperation == MemberReference out Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "No IfStatement BinaryOperation != MemberReference out Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation out MemberReference charset toString StatementExpression Assignment MemberReference data TernaryExpression BinaryOperation != MemberReference data Literal null MethodInvocation data MemberReference concat MemberReference = StatementExpression Assignment MemberReference out Literal null = ReturnStatement ClassCreator ReferenceType ByteArrayInputStream MethodInvocation data MemberReference charset getBytes	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType name IfStatement BinaryOperation == MethodInvocation name getName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No name specified in file StatementExpression MethodInvocation MethodInvocation name getName addElement	0
MethodDeclaration Modifier public ReferenceType Enumeration getWarnings LocalVariableDeclaration ReferenceType Vector VariableDeclarator warnings ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation mainSection getWarnings WhileStatement MethodInvocation hasMoreElements BlockStatement StatementExpression MethodInvocation warnings MethodInvocation nextElement addElement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation sections elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Section VariableDeclarator section Cast ReferenceType Section MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e2 MethodInvocation section getWarnings WhileStatement MethodInvocation e2 hasMoreElements BlockStatement StatementExpression MethodInvocation warnings MethodInvocation e2 nextElement addElement ReturnStatement MethodInvocation warnings elements	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 1 Literal 1 Literal 0 Literal 0 Literal 0 Literal 0 Literal 1 StatementExpression MethodInvocation Literal MemberReference TryStatement StatementExpression MethodInvocation Literal MemberReference StatementExpression MethodInvocation Literal fail CatchClause CatchClauseParameter Exception bx StatementExpression MethodInvocation BinaryOperation instanceof MemberReference bx ReferenceType BuildException assertTrue	1
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MemberReference Manifest expectLogContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String property FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation project MemberReference property getProperty StatementExpression MethodInvocation BinaryOperation + Literal "property " MemberReference property MemberReference value MemberReference result assertEquals	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator m ClassCreator ReferenceType StatementExpression MethodInvocation m Literal StatementExpression MethodInvocation m Literal StatementExpression MethodInvocation Literal match MethodInvocation m Literal mapFileName LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation m Literal mapFileName StatementExpression MethodInvocation Literal "Should match MemberReference result assertNotNull StatementExpression MethodInvocation Literal one result for Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals StatementExpression Assignment MemberReference result MethodInvocation m Literal mapFileName = StatementExpression MethodInvocation Literal "Should match MemberReference result assertNotNull StatementExpression MethodInvocation Literal one result for Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals StatementExpression Assignment MemberReference result MethodInvocation m Literal mapFileName = StatementExpression MethodInvocation Literal "Should match MemberReference result assertNotNull StatementExpression MethodInvocation Literal one result for Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals	0
MethodDeclaration Modifier public addNone FormalParameter ReferenceType NoneSelector selector StatementExpression MethodInvocation fileset MemberReference selector addNone	1
MethodDeclaration Modifier protected ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector StatementExpression MethodInvocation v Literal addElement IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MemberReference type addElement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference = StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MethodInvocation getAbsolutePath addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal "-ptime" addElement StatementExpression MethodInvocation v Literal "<pname>" addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier public static ReferenceType Resource FormalParameter ReferenceType logTo FormalParameter ReferenceType Resource source FormalParameter ReferenceType mapper FormalParameter ReferenceType targets ReturnStatement MethodInvocation MemberReference logTo MemberReference source MemberReference mapper MemberReference targets MethodInvocation FILE_UTILS	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private BasicType int fork FormalParameter ReferenceType String command BuildException LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MethodInvocation redirector createHandler MethodInvocation StatementExpression MethodInvocation MemberReference exe MemberReference command TryStatement LocalVariableDeclaration BasicType int VariableDeclarator rc MethodInvocation exe execute StatementExpression MethodInvocation redirector complete IfStatement MethodInvocation exe killedProcess BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal the ReturnStatement MemberReference rc CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String u StatementExpression Assignment MemberReference MemberReference u =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation != MethodInvocation MethodInvocation Literal indexOf getLog Literal - 1 BlockStatement StatementExpression MethodInvocation Literal was not found" fail	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Project p IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference p = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object clone CloneNotSupportedException TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType SuperMethodInvocation clone StatementExpression Assignment MemberReference c variables Cast ReferenceType Vector MethodInvocation variables clone = StatementExpression Assignment MemberReference c Cast ReferenceType Vector MethodInvocation clone = ReturnStatement MemberReference c CatchClause CatchClauseParameter CloneNotSupportedException e ReturnStatement Literal null	1
MethodDeclaration Modifier public setExecutable FormalParameter ReferenceType String e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the executable attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Element parent FormalParameter ReferenceType String name FormalParameter ReferenceType String content LocalVariableDeclaration ReferenceType Element VariableDeclarator e MethodInvocation MemberReference parent MemberReference name StatementExpression MethodInvocation MemberReference e MemberReference content	0
MethodDeclaration Modifier public FormalParameter ReferenceType ds StatementExpression MethodInvocation MemberReference ds MethodInvocation getProject	0
MethodDeclaration FormalParameter ReferenceType String s LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation s length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation s MemberReference i charAt	0
MethodDeclaration Modifier public addDate FormalParameter ReferenceType DateSelector selector StatementExpression MethodInvocation fileset MemberReference selector addDate	1
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet src StatementExpression MethodInvocation filesets MemberReference src add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String group StatementExpression MethodInvocation MethodInvocation MemberReference group setValue createArg StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType ProjectHelper VariableDeclarator MethodInvocation ProjectHelper IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation getProject IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference text setDescription getProject BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference MemberReference text setDescription getProject	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation r getName IfStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference n MemberReference cs match BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation r toString ReturnStatement TernaryExpression MethodInvocation s MemberReference n equals Literal false MethodInvocation SelectorUtils MemberReference pattern MemberReference s MemberReference cs match	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal Literal "Property already expectBuildExceptionContaining StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier private ReferenceType Hashtable makeTable FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator table ClassCreator ReferenceType Hashtable StatementExpression MethodInvocation table MemberReference key MemberReference value put ReturnStatement MemberReference table	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port =	0
MethodDeclaration Modifier public ReferenceType Enumeration IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation MemberReference MemberReference determineDependencies ReturnStatement MethodInvocation elements	0
MethodDeclaration Modifier public BasicType boolean eval StatementExpression MethodInvocation project Literal log ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType byte ReturnStatement MethodInvocation MethodInvocation getExtraFields	0
MethodDeclaration Modifier public static ReferenceType String toString FormalParameter ReferenceType ByteArrayOutputStream bos IfStatement MethodInvocation Os Literal isFamily BlockStatement TryStatement ReturnStatement MethodInvocation bos Literal toString CatchClause CatchClauseParameter java.io.UnsupportedEncodingException e IfStatement MethodInvocation Os Literal isFamily BlockStatement TryStatement ReturnStatement MethodInvocation bos Literal toString CatchClause CatchClauseParameter java.io.UnsupportedEncodingException e ReturnStatement MethodInvocation bos toString	1
MethodDeclaration Modifier public to FormalParameter ReferenceType String to IOException StatementExpression MethodInvocation MemberReference to StatementExpression This MemberReference to MethodInvocation MemberReference to addElement	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal true LocalVariableDeclaration BasicType long VariableDeclarator diff BinaryOperation - MethodInvocation file length MemberReference sizelimit ReturnStatement MethodInvocation when TernaryExpression BinaryOperation == MemberReference diff Literal 0 Literal 0 Cast BasicType int BinaryOperation / MemberReference diff MethodInvocation Math MemberReference diff abs evaluate	1
MethodDeclaration Modifier private static ReferenceType DocumentBuilder TryStatement ReturnStatement MethodInvocation DocumentBuilderFactory MethodInvocation newDocumentBuilder newInstance CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType MemberReference e	0
MethodDeclaration Modifier public setError FormalParameter ReferenceType File error StatementExpression Assignment This MemberReference error MemberReference error = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public performTests FormalParameter ReferenceType FileSelector selector FormalParameter ReferenceType String expected LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation MemberReference selector LocalVariableDeclaration ReferenceType String VariableDeclarator diff MethodInvocation MemberReference expected MemberReference result diff LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference diff resolve StatementExpression MethodInvocation BinaryOperation + Literal files: " MemberReference MemberReference result MemberReference expected assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean recurse StatementExpression Assignment This MemberReference recurse MemberReference recurse =	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal ";"	0
MethodDeclaration Modifier public FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding =	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference destDir	0
MethodDeclaration Modifier private static ReferenceType String TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator reader MethodInvocation ReturnStatement MethodInvocation MethodInvocation reader getClass CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter BasicType boolean skip ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the " Literal attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType File target StatementExpression MethodInvocation BinaryOperation + Literal "Setting target to: " MethodInvocation target toString MemberReference Project MSG_VERBOSE log StatementExpression Assignment This MemberReference targetFile MemberReference target =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference UU MemberReference PLAIN	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String classname StatementExpression Assignment This MemberReference classname MemberReference classname =	0
MethodDeclaration ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "" Literal "" assertExpandsTo StatementExpression MethodInvocation Literal "$" Literal "$" assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal "$" assertExpandsTo StatementExpression MethodInvocation project Literal Literal setProperty StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo StatementExpression MethodInvocation Literal "" Literal "" assertExpandsTo StatementExpression MethodInvocation Literal Literal assertExpandsTo	0
MethodDeclaration Modifier private FormalParameter ReferenceType Project p IfStatement BinaryOperation > MethodInvocation includesFileList size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation includesFileList elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation != MemberReference fileName Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator inclFile MethodInvocation p MemberReference fileName IfStatement MethodInvocation ! inclFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation inclFile getAbsolutePath Literal " not found." StatementExpression MethodInvocation MemberReference inclFile MemberReference includeList MemberReference p readPatterns StatementExpression MethodInvocation includesFileList removeAllElements IfStatement BinaryOperation > MethodInvocation excludesFileList size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation excludesFileList elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator ne Cast ReferenceType NameEntry MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation ne MemberReference p evalName IfStatement BinaryOperation != MemberReference fileName Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator exclFile MethodInvocation p MemberReference fileName IfStatement MethodInvocation ! exclFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MethodInvocation exclFile getAbsolutePath Literal " not found." StatementExpression MethodInvocation MemberReference exclFile MemberReference excludeList MemberReference p readPatterns StatementExpression MethodInvocation excludesFileList removeAllElements	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "foo" expectPropertySet	0
MethodDeclaration Modifier protected ReferenceType AbstractFileSet getInstance ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "double" Literal is value of is property expectLog	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal Literal "root" StatementExpression MethodInvocation root Literal Literal "bar" Literal "baz" LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType Literal false ClassCreator ReferenceType ReferenceType Literal false Literal true StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + Literal MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation filesets MemberReference set addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference forceOverwrite MemberReference =	0
MethodDeclaration Modifier private ReferenceType URL fileToURL LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal null IfStatement MethodInvocation ! file exists BlockStatement StatementExpression Assignment MemberReference message BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " does not exist" = IfStatement BinaryOperation && BinaryOperation == MemberReference message Literal null MethodInvocation ! file isFile BlockStatement StatementExpression Assignment MemberReference message BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " is not a file" = TryStatement IfStatement BinaryOperation == MemberReference message Literal null BlockStatement ReturnStatement MethodInvocation file toURL CatchClause CatchClauseParameter Exception ex StatementExpression Assignment MemberReference message BinaryOperation + BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " cannot use as URL: " MethodInvocation ex toString = SwitchStatement MemberReference SwitchStatementCase MemberReference ThrowStatement ClassCreator ReferenceType BuildException MemberReference message SwitchStatementCase MemberReference MemberReference StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_WARN log BreakStatement SwitchStatementCase MemberReference IGNORE StatementExpression MethodInvocation MemberReference message MemberReference Project MSG_VERBOSE log BreakStatement SwitchStatementCase BreakStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "+" Literal "-" Literal "="	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation MethodInvocation Literal "cleanup" executeTarget getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType String property StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MemberReference property Literal null Literal "" MemberReference property =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator brace Literal ": " LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MethodInvocation toString StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference specificationTitle append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference specificationVersion BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference specificationVersion append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference specificationVendor BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference specificationVendor append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference implementationTitle BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference implementationTitle append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference implementationVersion BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference implementationVersion append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append IfStatement BinaryOperation != Literal null MemberReference implementationVendor BlockStatement StatementExpression MethodInvocation sb MemberReference append StatementExpression MethodInvocation sb MemberReference brace append StatementExpression MethodInvocation sb MemberReference implementationVendor append StatementExpression MethodInvocation sb MemberReference StringUtils LINE_SEP append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean enable StatementExpression Assignment MemberReference MemberReference enable =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration Modifier public FormalParameter ReferenceType String nonProxyHosts StatementExpression Assignment This MemberReference nonProxyHosts MemberReference nonProxyHosts =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String condition StatementExpression Assignment This MemberReference ifCond MemberReference condition =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public setDatetime FormalParameter ReferenceType String dateTime StatementExpression Assignment This MemberReference dateTime MemberReference dateTime = StatementExpression Assignment MemberReference millis Literal - 1 =	0
MethodDeclaration Modifier public static ReferenceType File FormalParameter ReferenceType Class c LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation c MethodInvocation Literal '.' Literal '/' replace getName Literal ".class" ReturnStatement MethodInvocation MethodInvocation c getClassLoader MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression MethodInvocation MethodInvocation MemberReference classpath append createClasspath	0
MethodDeclaration Modifier public addCommandArgument FormalParameter ReferenceType Commandline c FormalParameter ReferenceType String arg StatementExpression MethodInvocation c MethodInvocation MemberReference arg setValue createArgument	1
MethodDeclaration Modifier public FormalParameter ReferenceType String uri StatementExpression Assignment This MemberReference uri MemberReference uri =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal "true" MethodInvocation project Literal "test" getProperty assertEquals	0
MethodDeclaration Modifier public ReferenceType String getInput ReturnStatement MemberReference input	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation FILE_UTILS Literal Literal "log" MethodInvocation project createTempFile StatementExpression MethodInvocation Literal file not MethodInvocation ! exists assertTrue StatementExpression MethodInvocation project Literal MethodInvocation getAbsolutePath setProperty StatementExpression MethodInvocation project Literal MethodInvocation Long MemberReference toString setProperty StatementExpression MethodInvocation project Literal executeTarget TryStatement StatementExpression MethodInvocation Thread BinaryOperation + BinaryOperation * MemberReference Literal 1000 MemberReference sleep CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation System.out Literal "my sleep was println IfStatement MethodInvocation ! exists BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal increase the constant" Literal " to more time for java to println StatementExpression MethodInvocation Literal file exists" MethodInvocation exists assertTrue	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Node node FormalParameter ReferenceType String prefix FormalParameter ReferenceType Object container LocalVariableDeclaration ReferenceType Object VariableDeclarator addedPath Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator id Literal null IfStatement MethodInvocation node BlockStatement LocalVariableDeclaration ReferenceType NamedNodeMap VariableDeclarator nodeAttributes MethodInvocation node getAttributes LocalVariableDeclaration ReferenceType Node VariableDeclarator idNode MethodInvocation nodeAttributes MemberReference ID getNamedItem StatementExpression Assignment MemberReference id TernaryExpression BinaryOperation && MemberReference BinaryOperation != MemberReference idNode Literal null MethodInvocation idNode getNodeValue Literal null = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation nodeAttributes getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator attributeNode MethodInvocation nodeAttributes MemberReference i item IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attributeName MethodInvocation MemberReference attributeNode LocalVariableDeclaration ReferenceType String VariableDeclarator attributeValue MethodInvocation MemberReference attributeNode getAttributeValue StatementExpression MethodInvocation BinaryOperation + MemberReference prefix MemberReference attributeName MemberReference attributeValue Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nodeName MethodInvocation attributeNode getNodeName LocalVariableDeclaration ReferenceType String VariableDeclarator attributeValue MethodInvocation MemberReference attributeNode getAttributeValue LocalVariableDeclaration ReferenceType VariableDeclarator containingPath TernaryExpression BinaryOperation && BinaryOperation != MemberReference container Literal null BinaryOperation instanceof MemberReference container ReferenceType Cast ReferenceType MemberReference container Literal null IfStatement MethodInvocation nodeName MemberReference ID equals BlockStatement ContinueStatement IfStatement BinaryOperation && BinaryOperation != MemberReference containingPath Literal null MethodInvocation nodeName MemberReference equals BlockStatement StatementExpression MethodInvocation containingPath MemberReference attributeValue setPath IfStatement BinaryOperation && BinaryOperation instanceof MemberReference container ReferenceType MethodInvocation nodeName MemberReference REF_ID equals BlockStatement StatementExpression MethodInvocation containingPath MemberReference attributeValue setPath IfStatement BinaryOperation && BinaryOperation instanceof MemberReference container ReferenceType MethodInvocation nodeName MemberReference equals BlockStatement StatementExpression MethodInvocation containingPath MethodInvocation MemberReference attributeValue setLocation IfStatement MethodInvocation nodeName MemberReference equals BlockStatement IfStatement BinaryOperation != MemberReference container Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal does not " Literal StatementExpression Assignment MemberReference addedPath ClassCreator ReferenceType MethodInvocation getProject = StatementExpression MethodInvocation MethodInvocation MemberReference attributeValue MemberReference addedPath getProject BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attributeName MethodInvocation MemberReference attributeNode StatementExpression MethodInvocation BinaryOperation + MemberReference prefix MemberReference attributeName MemberReference attributeValue MemberReference id LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator emptyNode Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator semanticEmptyOverride Literal false IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation node MemberReference Node ELEMENT_NODE MemberReference MethodInvocation node BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MethodInvocation node MethodInvocation MemberReference getNamedItem getAttributes Literal null BinaryOperation != MethodInvocation node MethodInvocation MemberReference getNamedItem getAttributes Literal null BinaryOperation != MethodInvocation node MethodInvocation MemberReference REF_ID getNamedItem getAttributes Literal null BinaryOperation != MethodInvocation node MethodInvocation MemberReference getNamedItem getAttributes Literal null BinaryOperation != MethodInvocation node MethodInvocation MemberReference getNamedItem getAttributes Literal null BlockStatement StatementExpression Assignment MemberReference semanticEmptyOverride Literal true = IfStatement BinaryOperation == MethodInvocation node MemberReference Node BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference node getAttributeValue = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation node MemberReference Node ELEMENT_NODE BinaryOperation == MethodInvocation node MethodInvocation getLength getChildNodes Literal 1 BinaryOperation == MethodInvocation node MethodInvocation getFirstChild MemberReference Node BlockStatement StatementExpression Assignment MemberReference MethodInvocation node MethodInvocation getNodeValue getFirstChild = IfStatement BinaryOperation && Literal MethodInvocation MemberReference equals "" MemberReference ! semanticEmptyOverride BlockStatement StatementExpression Assignment MemberReference emptyNode Literal true = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation node MemberReference Node ELEMENT_NODE BinaryOperation == MethodInvocation node MethodInvocation getLength getChildNodes Literal 0 MemberReference ! semanticEmptyOverride BlockStatement StatementExpression Assignment MemberReference Literal "" = StatementExpression Assignment MemberReference emptyNode Literal true = IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation node MemberReference Node ELEMENT_NODE BinaryOperation == MethodInvocation node MethodInvocation getLength getChildNodes Literal 1 BinaryOperation == MethodInvocation node MethodInvocation getFirstChild MemberReference Node Literal "" MemberReference ! semanticEmptyOverride BlockStatement StatementExpression Assignment MemberReference Literal "" = StatementExpression Assignment MemberReference emptyNode Literal true = IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation && MemberReference BinaryOperation == MemberReference id Literal null BinaryOperation instanceof MemberReference container ReferenceType String BlockStatement StatementExpression Assignment MemberReference id Cast ReferenceType String MemberReference container = IfStatement BinaryOperation || BinaryOperation != MethodInvocation MethodInvocation length trim Literal 0 MemberReference emptyNode BlockStatement StatementExpression MethodInvocation MemberReference prefix MemberReference MemberReference id ReturnStatement TernaryExpression BinaryOperation != MemberReference addedPath Literal null MemberReference addedPath MemberReference id	1
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation task getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier public FormalParameter BasicType boolean fail StatementExpression Assignment MemberReference MemberReference fail =	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType ejb LocalVariableDeclaration ReferenceType List VariableDeclarator arguments ClassCreator ReferenceType ArrayList IfStatement MemberReference BlockStatement StatementExpression MethodInvocation arguments Literal add IfStatement MethodInvocation ejb MethodInvocation MemberReference equals BlockStatement StatementExpression MethodInvocation arguments Literal add IfStatement MethodInvocation ejb MethodInvocation MemberReference STATEFUL_SESSION equals BlockStatement StatementExpression MethodInvocation arguments Literal add IfStatement MethodInvocation ejb BlockStatement StatementExpression MethodInvocation arguments Literal add IfStatement MethodInvocation ejb BlockStatement StatementExpression MethodInvocation arguments Literal add IfStatement MemberReference BlockStatement StatementExpression MethodInvocation arguments Literal add IfStatement MethodInvocation ejb BlockStatement StatementExpression MethodInvocation arguments Literal add StatementExpression MethodInvocation arguments Literal "-classpath" add StatementExpression MethodInvocation arguments MemberReference classpath add StatementExpression MethodInvocation arguments Literal "-d" add StatementExpression MethodInvocation arguments MethodInvocation toString add StatementExpression MethodInvocation arguments MethodInvocation ejb MethodInvocation getQualifiedClassName add StatementExpression MethodInvocation arguments MethodInvocation ejb MethodInvocation getQualifiedClassName add StatementExpression MethodInvocation arguments MethodInvocation ejb MethodInvocation getQualifiedClassName add ReturnStatement Cast ReferenceType String MethodInvocation arguments ArrayCreator ReferenceType String MethodInvocation arguments size toArray	1
MethodDeclaration Modifier public FormalParameter ReferenceType ClassLoader classLoader ThrowStatement ClassCreator ReferenceType BuildException Literal "Not supported"	1
MethodDeclaration Modifier static protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType Project project IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator z MethodInvocation MemberReference project IfStatement BinaryOperation || BinaryOperation == MemberReference z Literal null MethodInvocation MemberReference z isAssignableFrom BlockStatement ReturnStatement MemberReference z ReturnStatement TernaryExpression BinaryOperation == MemberReference Literal null MethodInvocation MemberReference project MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String packages LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference packages Literal "," WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation tok nextToken LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference p setName StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private BasicType boolean IfStatement Literal MethodInvocation MemberReference equals "" BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator test MethodInvocation project MemberReference replaceProperties ReturnStatement BinaryOperation == MethodInvocation project MemberReference test getProperty Literal null	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator thisChar SuperMethodInvocation read StatementExpression Assignment MemberReference editsBlocked BinaryOperation || BinaryOperation == MemberReference state MemberReference IN_CHAR_CONST BinaryOperation == MemberReference state MemberReference IN_STR_CONST = SwitchStatement MemberReference state SwitchStatementCase JAVA SwitchStatement MemberReference thisChar SwitchStatementCase Literal '\'' StatementExpression Assignment MemberReference state MemberReference IN_CHAR_CONST = BreakStatement SwitchStatementCase Literal '"' StatementExpression Assignment MemberReference state MemberReference IN_STR_CONST = BreakStatement SwitchStatementCase Literal '/' StatementExpression Assignment MemberReference state MemberReference = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase IN_CHAR_CONST SwitchStatement MemberReference thisChar SwitchStatementCase Literal '\'' StatementExpression Assignment MemberReference state MemberReference JAVA = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase IN_STR_CONST SwitchStatement MemberReference thisChar SwitchStatementCase Literal '"' StatementExpression Assignment MemberReference state MemberReference JAVA = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase SwitchStatement MemberReference thisChar SwitchStatementCase Literal '\n' Literal '\r' StatementExpression Assignment MemberReference state MemberReference JAVA = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase SwitchStatement MemberReference thisChar SwitchStatementCase Literal '*' StatementExpression Assignment MemberReference state MemberReference = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase SwitchStatement MemberReference thisChar SwitchStatementCase Literal '*' StatementExpression Assignment MemberReference state MemberReference = BreakStatement SwitchStatementCase Literal '/' StatementExpression Assignment MemberReference state MemberReference = BreakStatement SwitchStatementCase Literal '\'' StatementExpression Assignment MemberReference state MemberReference IN_CHAR_CONST = BreakStatement SwitchStatementCase Literal '"' StatementExpression Assignment MemberReference state MemberReference IN_STR_CONST = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference state MemberReference JAVA = BreakStatement SwitchStatementCase SwitchStatement MemberReference thisChar SwitchStatementCase Literal '/' StatementExpression Assignment MemberReference state MemberReference JAVA = BreakStatement SwitchStatementCase BreakStatement SwitchStatementCase ReturnStatement MemberReference thisChar	1
MethodDeclaration Modifier protected BasicType boolean assumeJava12 ReturnStatement BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals "classic" MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BinaryOperation && Literal MethodInvocation MethodInvocation attributes getCompilerVersion equals MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintWriter out StatementExpression MethodInvocation out Literal "<!ELEMENT target (" print StatementExpression MethodInvocation out MemberReference print StatementExpression MethodInvocation out Literal " | " print StatementExpression MethodInvocation out MemberReference print StatementExpression MethodInvocation out Literal println StatementExpression MethodInvocation out Literal "" println StatementExpression MethodInvocation out Literal println StatementExpression MethodInvocation out Literal " id ID #IMPLIED" println StatementExpression MethodInvocation out Literal " name println StatementExpression MethodInvocation out Literal " if #IMPLIED" println StatementExpression MethodInvocation out Literal " #IMPLIED" println StatementExpression MethodInvocation out Literal " depends #IMPLIED" println StatementExpression MethodInvocation out Literal " println StatementExpression MethodInvocation out Literal "" println	1
MethodDeclaration Modifier public setViewPath FormalParameter ReferenceType File value StatementExpression Assignment This MemberReference viewpath MemberReference value =	0
MethodDeclaration Modifier public BasicType boolean eval IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute not set" StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType File VariableDeclarator MemberReference baseDir IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getProject = LocalVariableDeclaration ReferenceType FileSelector VariableDeclarator f MethodInvocation ArraySelector Literal 0 MethodInvocation getProject getSelectors ReturnStatement MethodInvocation f MemberReference MethodInvocation FILE_UTILS MemberReference MemberReference file MemberReference file isSelected	0
MethodDeclaration Modifier protected ReferenceType Property getPrimaryDescriptor FormalParameter ReferenceType Type t LocalVariableDeclaration ReferenceType Property VariableDeclarator properties MethodInvocation t getProperties ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference properties length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p MemberReference ArraySelector MemberReference i properties IfStatement MethodInvocation p BlockStatement ReturnStatement MemberReference p ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType String feature StatementExpression Assignment This MemberReference feature MemberReference feature =	0
MethodDeclaration BasicType boolean eval FormalParameter BasicType int t FormalParameter BasicType int f ReturnStatement BinaryOperation > MemberReference t MemberReference f	0
MethodDeclaration Modifier public synchronized ReferenceType String ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier private assertExpandsTo FormalParameter ReferenceType String source FormalParameter ReferenceType String expected LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation project MemberReference source replaceProperties StatementExpression MethodInvocation MemberReference source MemberReference expected MemberReference assertEquals	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" Literal "required argument expectBuildException	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement BinaryOperation <= MemberReference -- remaining Literal 0 BlockStatement IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference Literal false = ReturnStatement Literal 0 ReturnStatement Literal - 1 SynchronizedStatement MemberReference archive StatementExpression MethodInvocation archive MemberReference ++ loc seek ReturnStatement MethodInvocation archive read	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Target target FormalParameter ReferenceType String message FormalParameter BasicType int priority StatementExpression MethodInvocation MemberReference target MemberReference message Literal null MemberReference priority	0
MethodDeclaration Modifier private checkOptions FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation && MethodInvocation MethodInvocation BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Should either | IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement MethodInvocation getMaster BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getViewPath setValue createArgument	0
MethodDeclaration Modifier private static IOException IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType FileWriter MemberReference = StatementExpression MethodInvocation out BinaryOperation + MemberReference Constants Literal "\n" write StatementExpression MethodInvocation out flush IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close	0
MethodDeclaration Modifier protected zipFile FormalParameter ReferenceType File file FormalParameter ReferenceType ZipOutputStream zOut FormalParameter ReferenceType String vPath FormalParameter BasicType int mode IOException LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation vPath MemberReference ENGLISH toLowerCase LocalVariableDeclaration BasicType boolean VariableDeclarator addFile Literal true IfStatement MethodInvocation MemberReference equals BlockStatement IfStatement BinaryOperation != MemberReference addedWebXmlFile Literal null BlockStatement StatementExpression Assignment MemberReference addFile Literal false = IfStatement MethodInvocation ! FILE_UTILS MemberReference addedWebXmlFile MemberReference file BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Warning: selected " MemberReference archiveType Literal " files a second " MemberReference Literal " which will be Literal "The duplicate entry is at " MemberReference file Literal '\n' Literal "The file that will be used is " MemberReference addedWebXmlFile MemberReference Project MSG_WARN log BlockStatement StatementExpression Assignment MemberReference addedWebXmlFile MemberReference file = StatementExpression Assignment MemberReference addFile Literal true = StatementExpression Assignment MemberReference MemberReference file = IfStatement MemberReference addFile BlockStatement StatementExpression SuperMethodInvocation MemberReference file MemberReference zOut MemberReference vPath MemberReference mode zipFile	1
MethodDeclaration Modifier private FormalParameter ReferenceType caller StatementExpression Assignment This MemberReference caller MemberReference caller =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation System.out Literal "foo" println	0
MethodDeclaration * A string to wait for from the * A tag was found. the * it in and return * @return a read sub */ Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator task Cast ReferenceType ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference task addElement ReturnStatement MemberReference task	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds Literal false StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer Literal Literal "alpha/beta/gamma/gamma.xml" ArrayCreator ReferenceType String ArrayInitializer Literal "alpha" Literal Literal "alpha/beta/gamma" compareFiles	0
MethodDeclaration Modifier private FormalParameter ReferenceType AntTelnetClient telnet IfStatement MemberReference BlockStatement StatementExpression MethodInvocation telnet Literal "\n" Literal true StatementExpression MethodInvocation telnet Literal StatementExpression MethodInvocation telnet MemberReference Literal true StatementExpression MethodInvocation telnet Literal StatementExpression MethodInvocation telnet MemberReference password Literal false	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType String getClassName ReturnStatement MemberReference className	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Task t IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation t MethodInvocation MemberReference getProperty getProject Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation t MethodInvocation MemberReference getProperty getProject Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation project Literal MemberReference m StatementExpression MethodInvocation m ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation m StatementExpression MethodInvocation Literal make Mapper a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m1 ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation project Literal MemberReference m1 StatementExpression MethodInvocation m1 ClassCreator ReferenceType Literal "dummy2" LocalVariableDeclaration ReferenceType Mapper VariableDeclarator m2 ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation project Literal "dummy2" MemberReference m2 StatementExpression MethodInvocation m2 ClassCreator ReferenceType Literal LocalVariableDeclaration ReferenceType Mapper VariableDeclarator ClassCreator ReferenceType Mapper MemberReference project StatementExpression MethodInvocation project Literal MemberReference StatementExpression MethodInvocation ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation m1 StatementExpression MethodInvocation Literal make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference m1 ClassCreator ReferenceType Mapper MemberReference project = StatementExpression MethodInvocation project Literal MemberReference m1 StatementExpression MethodInvocation m1 ClassCreator ReferenceType Literal "dummy2" StatementExpression Assignment MemberReference m2 ClassCreator ReferenceType Mapper MemberReference project = StatementExpression MethodInvocation project Literal "dummy2" MemberReference m2 StatementExpression MethodInvocation m2 ClassCreator ReferenceType Literal StatementExpression Assignment MemberReference ClassCreator ReferenceType Mapper MemberReference project = StatementExpression MethodInvocation project Literal MemberReference LocalVariableDeclaration ReferenceType Mapper ReferenceType MapperType VariableDeclarator ClassCreator ReferenceType Mapper ReferenceType MapperType StatementExpression MethodInvocation Literal setValue StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation m1 StatementExpression MethodInvocation Literal "should be BinaryOperation instanceof MemberReference ReferenceType assertTrue LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation Literal mapFileName StatementExpression MethodInvocation Literal should Literal 1 MemberReference result length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 result assertEquals	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment This MemberReference classpath MethodInvocation FileUtils MemberReference s =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Task task StatementExpression MethodInvocation MemberReference task add	1
MethodDeclaration Modifier public IfStatement MethodInvocation ! BlockStatement StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String lock StatementExpression Assignment This MemberReference lock MemberReference lock =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String compiler StatementExpression MethodInvocation facade MemberReference compiler	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String file ReturnStatement MethodInvocation file MethodInvocation System MethodInvocation Literal 0 charAt Literal getProperty MethodInvocation remoteFileSep Literal 0 charAt replace	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String s StatementExpression Assignment MemberReference dateTime MemberReference s = StatementExpression Assignment MemberReference millis Literal null =	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation || MethodInvocation ! includeList isEmpty MethodInvocation ! excludeList isEmpty BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public static ReferenceType Object newInstance FormalParameter ReferenceType String className FormalParameter ReferenceType ClassLoader ReturnStatement MethodInvocation MemberReference className MemberReference ClassReference ReferenceType Object newInstance	0
MethodDeclaration Modifier private validate BuildException IfStatement BinaryOperation == Literal null MemberReference destFile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal attribute not ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement BinaryOperation && MethodInvocation destFile exists MethodInvocation ! destFile isFile BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MemberReference destFile Literal " is not a file." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message	0
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier public FormalParameter ReferenceType t LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation t getName IfStatement Literal MethodInvocation MemberReference name equals "" BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal name must not be empty" StatementExpression MethodInvocation targets MemberReference t add	0
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment MemberReference MemberReference c =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String cond StatementExpression Assignment MemberReference unlessCond MemberReference cond =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String className StatementExpression Assignment This MemberReference className MemberReference className =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal of StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference	0
MethodDeclaration Modifier public process FormalParameter ReferenceType String line StatementExpression MethodInvocation MemberReference line MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getCurrentProjectName ReturnStatement MemberReference	0
MethodDeclaration ReferenceType File getVendorOutputJarFile FormalParameter ReferenceType String baseName ReturnStatement ClassCreator ReferenceType File MemberReference destDir BinaryOperation + MemberReference baseName MemberReference	0
MethodDeclaration Modifier private ReferenceType String FormalParameter BasicType byte fileDigest LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator checksumSb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fileDigest length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator hexStr MethodInvocation Integer BinaryOperation & Literal MemberReference ArraySelector MemberReference i fileDigest toHexString IfStatement BinaryOperation < MethodInvocation hexStr length Literal 2 BlockStatement StatementExpression MethodInvocation checksumSb Literal "0" append StatementExpression MethodInvocation checksumSb MemberReference hexStr append ReturnStatement MethodInvocation checksumSb toString	1
MethodDeclaration Modifier private IOException ParserConfigurationException SAXException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator Literal null TryStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType BufferedInputStream MethodInvocation stylesheet getInputStream = StatementExpression Assignment MemberReference MethodInvocation stylesheet getLastModified = LocalVariableDeclaration ReferenceType Source VariableDeclarator src MethodInvocation MemberReference MemberReference stylesheet getSource StatementExpression Assignment MemberReference templates MethodInvocation MethodInvocation MemberReference src getFactory = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public final ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public validate IfStatement BinaryOperation || BinaryOperation == MemberReference key Literal null BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal and value must be specified " Literal "for environment	0
MethodDeclaration Modifier public FormalParameter ReferenceType String prefix StatementExpression MethodInvocation IfStatement BinaryOperation && MethodInvocation ! prefix Literal "" equals MethodInvocation ! fullpath Literal "" equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot set both fullpath and prefix StatementExpression Assignment This MemberReference prefix MemberReference prefix =	1
MethodDeclaration Modifier private static FormalParameter ReferenceType PrintStream out StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + MemberReference MagicNames ANT_HOME Literal ": " MethodInvocation System MemberReference MagicNames ANT_HOME getProperty println LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference MemberReference out	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference autocommit	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected handleFlush FormalParameter ReferenceType String output StatementExpression MethodInvocation MemberReference output handleOutput	0
MethodDeclaration Modifier public IOException IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference Literal " doesn't exist." LocalVariableDeclaration Modifier final ReferenceType Process VariableDeclarator process MethodInvocation MemberReference project MethodInvocation getCommandline MethodInvocation MemberReference MemberReference launch IfStatement MethodInvocation Os Literal "windows" isFamily BlockStatement TryStatement StatementExpression MethodInvocation Thread Literal 1000 sleep CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation project BinaryOperation + Literal in the sleep after having Literal " MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator ClassCreator ReferenceType OutputStream MethodDeclaration Modifier public write FormalParameter BasicType int b IOException LocalVariableDeclaration ReferenceType VariableDeclarator handler ClassCreator ReferenceType PumpStreamHandler MemberReference StatementExpression MethodInvocation handler MethodInvocation process getErrorStream StatementExpression MethodInvocation handler MethodInvocation process getInputStream setProcessOutputStream StatementExpression MethodInvocation handler start StatementExpression MethodInvocation process MethodInvocation close getOutputStream StatementExpression MethodInvocation project BinaryOperation + Literal process " MethodInvocation process toString MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier private Exception LocalVariableDeclaration ReferenceType Properties VariableDeclarator testProps ClassCreator ReferenceType Properties StatementExpression MethodInvocation testProps MemberReference MemberReference put StatementExpression MethodInvocation testProps MemberReference MemberReference put StatementExpression MethodInvocation testProps MemberReference MemberReference put StatementExpression MethodInvocation testProps Literal Literal put LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty MemberReference StatementExpression MethodInvocation testProps MemberReference fos Literal store StatementExpression MethodInvocation fos close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference cs MemberReference b =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation file exists assertTrue	0
MethodDeclaration Modifier public ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation ReturnStatement MethodInvocation MemberReference includeList	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference executeTarget StatementExpression MethodInvocation Literal test started MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal MemberReference Literal ")" assertTrue	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal did not correct number of files" Literal 4 MethodInvocation MethodInvocation size assertEquals	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType URL url StatementExpression Assignment This MemberReference url MemberReference url =	0
MethodDeclaration Modifier public static ReferenceType File createVmsJavaOptionFile FormalParameter ReferenceType String cmd IOException LocalVariableDeclaration ReferenceType File VariableDeclarator script MethodInvocation FILE_UTILS Literal "ANT" Literal Literal null createTempFile LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out Literal null TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType FileWriter MemberReference script = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cmd length MemberReference ++ i BlockStatement StatementExpression MethodInvocation out MemberReference ArraySelector MemberReference i cmd println StatementExpression MethodInvocation FileUtils MemberReference out close ReturnStatement MemberReference script	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation ProjectHelper MethodInvocation getNamespace MethodInvocation getTag genComponentName	0
MethodDeclaration * @see */ Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType Logger VariableDeclarator log MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Target getLogger StatementExpression MethodInvocation log BinaryOperation + BinaryOperation + Literal "Target \"" MethodInvocation event MethodInvocation getName Literal "\" info	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement TernaryExpression MemberReference Literal Literal null	0
MethodDeclaration Modifier public appendSelector FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation MemberReference selector addElement	1
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == This MemberReference classpath Literal null BlockStatement StatementExpression Assignment This MemberReference classpath MemberReference classpath = BlockStatement StatementExpression This MemberReference classpath MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String classname StatementExpression Assignment MemberReference MemberReference classname =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference d LocalVariableDeclaration ReferenceType String VariableDeclarator f BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference f StatementExpression MethodInvocation BinaryOperation == MethodInvocation MethodInvocation Literal "Removing indexOf Literal - 1 assertTrue	0
MethodDeclaration Modifier public FormalParameter ReferenceType Attributes attributes StatementExpression Assignment This MemberReference attributes ClassCreator ReferenceType AttributesImpl MemberReference attributes =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference MemberReference type =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType command FormalParameter ReferenceType resource StatementExpression MethodInvocation resource MethodInvocation getProject MemberReference command Literal false getParameters	0
MethodDeclaration Modifier public FormalParameter ReferenceType JUnitTaskMirror ReferenceType JUnitResultFormatterMirror f StatementExpression MethodInvocation Cast ReferenceType MemberReference f addElement	0
MethodDeclaration Modifier public add FormalParameter ReferenceType A StatementExpression MethodInvocation Literal A log	0
MethodDeclaration Modifier private BasicType int replace LocalVariableDeclaration BasicType int VariableDeclarator found MethodInvocation MethodInvocation MemberReference token indexOf toString LocalVariableDeclaration BasicType int VariableDeclarator pos Literal - 1 WhileStatement BinaryOperation >= MemberReference found Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference found BinaryOperation + MemberReference found MethodInvocation token length MemberReference replace StatementExpression Assignment MemberReference pos BinaryOperation + MemberReference found MethodInvocation length = StatementExpression Assignment MemberReference found MethodInvocation MethodInvocation MemberReference token MemberReference pos indexOf toString = StatementExpression MemberReference ++ ReturnStatement MemberReference pos	0
MethodDeclaration Modifier public FormalParameter ReferenceType text StatementExpression Assignment MemberReference bottom MemberReference text =	0
MethodDeclaration Modifier public setString FormalParameter ReferenceType String str StatementExpression Assignment MemberReference MemberReference str =	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator data Literal LocalVariableDeclaration ReferenceType Vector VariableDeclarator res MethodInvocation StringUtils MemberReference data StatementExpression MethodInvocation Literal 5 MethodInvocation res size assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 0 elementAt assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 1 elementAt assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 2 elementAt assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 3 elementAt assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 4 elementAt assertEquals	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File jar StatementExpression Assignment This MemberReference jar MemberReference jar =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "other" Literal "a expectLog	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static FormalParameter Modifier final ReferenceType Extension extension FormalParameter Modifier final ReferenceType Attributes attributes StatementExpression MethodInvocation MemberReference extension Literal "" MemberReference attributes	0
MethodDeclaration Modifier public static BasicType int compare FormalParameter BasicType long t1 FormalParameter BasicType long t2 ReturnStatement MethodInvocation MemberReference t1 MemberReference t2 MethodInvocation FILE_UTILS compare	0
MethodDeclaration Modifier public FormalParameter ReferenceType Map m StatementExpression MethodInvocation BinaryOperation == MethodInvocation m size Literal 0 assertTrue	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object key LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference key IfStatement BinaryOperation instanceof MemberReference o ReferenceType UnknownElement BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue Cast ReferenceType UnknownElement MemberReference o StatementExpression MethodInvocation ue maybeConfigure StatementExpression Assignment MemberReference o MethodInvocation ue = ReturnStatement MemberReference o	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Literal StatementExpression MethodInvocation BinaryOperation + Literal "Wrong algorithm " MemberReference MethodInvocation Literal startsWith assertTrue	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType String namespace StatementExpression Assignment This MemberReference namespace MemberReference namespace =	0
MethodDeclaration Modifier public BasicType long getSize IfStatement MethodInvocation isExists BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in MethodInvocation getInputStream = LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 8192 LocalVariableDeclaration BasicType int VariableDeclarator size Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator readNow WhileStatement BinaryOperation > Assignment MemberReference readNow MethodInvocation in MemberReference buf Literal 0 MemberReference buf length read = Literal 0 BlockStatement StatementExpression Assignment MemberReference size MemberReference readNow += ReturnStatement MemberReference size CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "caught exception while reading " MethodInvocation getName MemberReference ex StatementExpression MethodInvocation FileUtils MemberReference in close BlockStatement ReturnStatement Literal 0	1
MethodDeclaration Modifier public static BasicType boolean ReturnStatement BinaryOperation != MethodInvocation Literal null	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal println StatementExpression MethodInvocation System.out MemberReference a println	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation files MemberReference add	0
MethodDeclaration Modifier public static ReferenceType BuildException FormalParameter ReferenceType BuildException ex FormalParameter ReferenceType Location IfStatement BinaryOperation || BinaryOperation == MethodInvocation ex getLocation Literal null BinaryOperation == MethodInvocation ex getMessage Literal null BlockStatement ReturnStatement MemberReference ex LocalVariableDeclaration ReferenceType String VariableDeclarator errorMessage BinaryOperation + BinaryOperation + BinaryOperation + Literal "The following error occurred while executing this MethodInvocation System Literal "line.separator" getProperty MethodInvocation ex MethodInvocation toString getLocation MethodInvocation ex getMessage IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement ClassCreator ReferenceType BuildException MemberReference errorMessage MemberReference ex BlockStatement ReturnStatement ClassCreator ReferenceType BuildException MemberReference errorMessage MemberReference ex MemberReference	0
MethodDeclaration Modifier private ReferenceType String getMessage FormalParameter ReferenceType SAXParseException e LocalVariableDeclaration ReferenceType String VariableDeclarator sysID MethodInvocation e getSystemId IfStatement BinaryOperation != MemberReference sysID Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference sysID IfStatement MethodInvocation sysID Literal "file:" startsWith BlockStatement TryStatement StatementExpression Assignment MemberReference name MethodInvocation FILE_UTILS MemberReference sysID fromURI = CatchClause CatchClauseParameter Exception ex LocalVariableDeclaration BasicType int VariableDeclarator line MethodInvocation e getLineNumber LocalVariableDeclaration BasicType int VariableDeclarator col MethodInvocation e getColumnNumber ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference name TernaryExpression BinaryOperation == MemberReference line Literal - 1 Literal "" BinaryOperation + BinaryOperation + Literal ":" MemberReference line TernaryExpression BinaryOperation == MemberReference col Literal - 1 Literal "" BinaryOperation + Literal ":" MemberReference col Literal ": " MethodInvocation e getMessage ReturnStatement MethodInvocation e getMessage	1
MethodDeclaration Modifier public BasicType long getLastModified IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef StatementExpression MethodInvocation ReturnStatement SuperMethodInvocation getLastModified	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment MemberReference proxyPort MemberReference port =	0
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation task perform CatchClause CatchClauseParameter Throwable t StatementExpression Assignment MemberReference exception MemberReference t = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference stillRunning Literal false = SynchronizedStatement MemberReference semaphore StatementExpression Assignment MemberReference finished Literal true = StatementExpression MethodInvocation semaphore	1
MethodDeclaration Modifier public BasicType long skip FormalParameter BasicType long numToSkip IOException LocalVariableDeclaration BasicType byte VariableDeclarator skipBuf ArrayCreator BasicType byte BinaryOperation * Literal 8 Literal 1024 LocalVariableDeclaration BasicType long VariableDeclarator skip MemberReference numToSkip WhileStatement BinaryOperation > MemberReference skip Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator Cast BasicType int TernaryExpression BinaryOperation > MemberReference skip MemberReference skipBuf length MemberReference skipBuf length MemberReference skip LocalVariableDeclaration BasicType int VariableDeclarator numRead This MethodInvocation MemberReference skipBuf Literal 0 MemberReference read IfStatement BinaryOperation == MemberReference numRead Literal - 1 BlockStatement BreakStatement StatementExpression Assignment MemberReference skip MemberReference numRead -= ReturnStatement BinaryOperation - MemberReference numToSkip MemberReference skip	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String name StatementExpression Assignment MemberReference name TernaryExpression MethodInvocation name MemberReference File separator endsWith MemberReference name BinaryOperation + MemberReference name MemberReference File separator = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator e MemberReference ArraySelector MemberReference i IfStatement BinaryOperation && MethodInvocation e Literal "**" endsWith MethodInvocation SelectorUtils MethodInvocation e Literal 0 BinaryOperation - MethodInvocation e length Literal 2 substring MemberReference name MethodInvocation isCaseSensitive BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public start StatementExpression MethodInvocation start StatementExpression MethodInvocation start IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Thread VariableDeclarator ClassCreator ReferenceType Thread MemberReference StatementExpression MethodInvocation Literal true setDaemon StatementExpression MethodInvocation start	0
MethodDeclaration Modifier public synchronized maybeConfigure FormalParameter ReferenceType Project p FormalParameter BasicType boolean BuildException IfStatement MemberReference BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target TernaryExpression BinaryOperation instanceof MemberReference ReferenceType TypeAdapter Cast ReferenceType TypeAdapter MemberReference MemberReference LocalVariableDeclaration ReferenceType IntrospectionHelper VariableDeclarator ih MethodInvocation IntrospectionHelper MemberReference p MethodInvocation target getClass getHelper IfStatement BinaryOperation != MemberReference attributeNames Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation attributeNames size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation attributeNames MemberReference i get LocalVariableDeclaration ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation attributeMap MemberReference name get StatementExpression Assignment MemberReference value MethodInvocation p MemberReference value replaceProperties = TryStatement StatementExpression MethodInvocation ih MemberReference p MemberReference target MemberReference name MemberReference value setAttribute CatchClause CatchClauseParameter UnsupportedAttributeException be IfStatement MethodInvocation name Literal "id" equals BlockStatement IfStatement BinaryOperation == MethodInvocation Literal null BlockStatement ThrowStatement MemberReference be BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Literal " doesn't support the \"" MethodInvocation be getAttribute Literal "\" attribute" MemberReference be CatchClause CatchClauseParameter BuildException be IfStatement MethodInvocation name Literal "id" equals BlockStatement BlockStatement ThrowStatement MemberReference be IfStatement BinaryOperation != MemberReference characters Literal null BlockStatement StatementExpression MethodInvocation ProjectHelper MemberReference p MemberReference MethodInvocation characters Literal 0 substring IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation p MemberReference id MemberReference StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference classpath = BlockStatement StatementExpression MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public final setValue FormalParameter ReferenceType String value BuildException LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation MemberReference value IfStatement BinaryOperation == MemberReference idx Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference value Literal " is not a value for this attribute" StatementExpression Assignment This MemberReference index MemberReference idx = StatementExpression Assignment This MemberReference value MemberReference value =	1
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType char FormalParameter BasicType int off FormalParameter BasicType int len IOException LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation next MemberReference MemberReference off MemberReference len read StatementExpression MethodInvocation buffer MemberReference MemberReference off MemberReference len append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId SAXException StatementExpression Assignment This MemberReference publicId MemberReference publicId = LocalVariableDeclaration ReferenceType File VariableDeclarator Cast ReferenceType File MethodInvocation MemberReference publicId get IfStatement BinaryOperation != MemberReference Literal null BlockStatement TryStatement StatementExpression MethodInvocation owningTask BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference publicId Literal " to local file " MemberReference MemberReference Project MSG_VERBOSE log ReturnStatement ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference CatchClause CatchClauseParameter FileNotFoundException ex LocalVariableDeclaration ReferenceType String VariableDeclarator dtdResourceName Cast ReferenceType String MethodInvocation MemberReference publicId get IfStatement BinaryOperation != MemberReference dtdResourceName Literal null BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is This MethodInvocation getClass MethodInvocation MemberReference dtdResourceName getResourceAsStream IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression MethodInvocation owningTask BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference publicId Literal " to local resource " MemberReference dtdResourceName MemberReference Project MSG_VERBOSE log ReturnStatement ClassCreator ReferenceType InputSource MemberReference is LocalVariableDeclaration ReferenceType URL VariableDeclarator dtdUrl Cast ReferenceType URL MethodInvocation MemberReference publicId get IfStatement BinaryOperation != MemberReference dtdUrl Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation dtdUrl openStream StatementExpression MethodInvocation owningTask BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference publicId Literal " to url " MemberReference dtdUrl MemberReference Project MSG_VERBOSE log ReturnStatement ClassCreator ReferenceType InputSource MemberReference is CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation owningTask BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not resolve ( " MemberReference publicId Literal ", " MemberReference systemId Literal ") to a local entity" MemberReference Project MSG_INFO log ReturnStatement Literal null	1
MethodDeclaration Modifier public synchronized ReferenceType ReferenceType NameEntry IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression Assignment MemberReference ds Literal null = ReturnStatement MethodInvocation	0
MethodDeclaration Modifier final protected ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType Document VariableDeclarator d MethodInvocation LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation d Literal Literal "root" StatementExpression MethodInvocation root Literal Literal "bar" Literal "baz" LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType VariableDeclarator w ClassCreator ReferenceType Literal false MemberReference StatementExpression MethodInvocation w MemberReference root MemberReference sw Literal 0 Literal " " write StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal Literal " MemberReference StringUtils LINE_SEP MethodInvocation sw toString assertEquals	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference bundle Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The bundle attribute must be set." MethodInvocation getLocation IfStatement BinaryOperation == MemberReference startToken Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The attribute must be set." MethodInvocation getLocation IfStatement BinaryOperation == MemberReference endToken Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The attribute must be set." MethodInvocation getLocation IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator l MethodInvocation StatementExpression Assignment MemberReference MethodInvocation l getLanguage = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation = IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator l ClassCreator ReferenceType MemberReference MemberReference StatementExpression Assignment MemberReference MethodInvocation l getVariant = IfStatement BinaryOperation == MemberReference toDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "The attribute must be set." MethodInvocation getLocation IfStatement MethodInvocation ! toDir exists BlockStatement StatementExpression MethodInvocation toDir mkdirs IfStatement MethodInvocation toDir isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference toDir Literal " is not a directory" IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation System Literal "file.encoding" getProperty = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation StatementExpression MethodInvocation translate	1
MethodDeclaration Modifier public BasicType long skip FormalParameter BasicType long i java.io.IOException ReturnStatement MethodInvocation in MemberReference i skip	1
MethodDeclaration Modifier private static BasicType int launch FormalParameter ReferenceType JUnitTest t FormalParameter BasicType boolean haltError FormalParameter BasicType boolean stackfilter FormalParameter BasicType boolean haltFail FormalParameter BasicType boolean showOut FormalParameter BasicType boolean outputToFormat FormalParameter BasicType boolean logTestListenerEvents FormalParameter ReferenceType Properties props StatementExpression MethodInvocation t MemberReference props setProperties LocalVariableDeclaration ReferenceType VariableDeclarator runner ClassCreator ReferenceType MemberReference t MemberReference haltError MemberReference stackfilter MemberReference haltFail MemberReference showOut MemberReference logTestListenerEvents Literal null StatementExpression Assignment MemberReference runner forked Literal true = StatementExpression Assignment MemberReference runner MemberReference outputToFormat = StatementExpression MethodInvocation MemberReference runner MemberReference t StatementExpression MethodInvocation runner run ReturnStatement MethodInvocation runner	1
MethodDeclaration Modifier public synchronized run LocalVariableDeclaration Modifier final BasicType long VariableDeclarator until BinaryOperation + MethodInvocation System currentTimeMillis MemberReference timeout LocalVariableDeclaration BasicType long VariableDeclarator now WhileStatement BinaryOperation && MemberReference ! stopped BinaryOperation > MemberReference until Assignment MemberReference now MethodInvocation System currentTimeMillis = BlockStatement TryStatement StatementExpression MethodInvocation BinaryOperation - MemberReference until MemberReference now wait CatchClause CatchClauseParameter InterruptedException e IfStatement MemberReference ! stopped BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected BasicType boolean isRebuildRequired FormalParameter ReferenceType File genericJarFile FormalParameter ReferenceType File websphereJarFile LocalVariableDeclaration BasicType boolean VariableDeclarator rebuild Literal false LocalVariableDeclaration ReferenceType JarFile VariableDeclarator genericJar Literal null LocalVariableDeclaration ReferenceType JarFile VariableDeclarator wasJar Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator newwasJarFile Literal null LocalVariableDeclaration ReferenceType JarOutputStream VariableDeclarator newJarStream Literal null TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "Checking if websphere Jar needs to be for jar " MethodInvocation websphereJarFile getName MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation genericJarFile exists MethodInvocation genericJarFile isFile MethodInvocation websphereJarFile exists MethodInvocation websphereJarFile isFile BlockStatement StatementExpression Assignment MemberReference genericJar ClassCreator ReferenceType JarFile MemberReference genericJarFile = StatementExpression Assignment MemberReference wasJar ClassCreator ReferenceType JarFile MemberReference websphereJarFile = LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator genericEntries ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator wasEntries ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator replaceEntries ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation genericJar entries MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je Cast ReferenceType JarEntry MethodInvocation e nextElement StatementExpression MethodInvocation genericEntries MethodInvocation je MethodInvocation Literal '\\' Literal '/' replace getName MemberReference je put ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation wasJar entries MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je Cast ReferenceType JarEntry MethodInvocation e nextElement StatementExpression MethodInvocation wasEntries MethodInvocation je getName MemberReference je put LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator genericLoader MethodInvocation MemberReference genericJarFile ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation genericEntries keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filepath Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation wasEntries MemberReference filepath containsKey BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator genericEntry Cast ReferenceType JarEntry MethodInvocation genericEntries MemberReference filepath get LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator Cast ReferenceType JarEntry MethodInvocation wasEntries MemberReference filepath get IfStatement BinaryOperation || BinaryOperation != MethodInvocation genericEntry MethodInvocation BinaryOperation != MethodInvocation genericEntry getSize MethodInvocation getSize BlockStatement IfStatement MethodInvocation genericEntry MethodInvocation Literal ".class" endsWith getName BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation genericEntry MethodInvocation MemberReference File separatorChar Literal '.' replace getName StatementExpression Assignment MemberReference classname MethodInvocation classname Literal 0 MethodInvocation classname Literal ".class" lastIndexOf substring = LocalVariableDeclaration ReferenceType Class VariableDeclarator genclass MethodInvocation genericLoader MemberReference classname loadClass IfStatement MethodInvocation genclass isInterface BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Interface " MethodInvocation genclass getName Literal " has changed" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rebuild Literal true = BreakStatement BlockStatement StatementExpression MethodInvocation replaceEntries MemberReference filepath MemberReference genericEntry put BlockStatement IfStatement MethodInvocation ! genericEntry MethodInvocation Literal equals getName BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Non class file " MethodInvocation genericEntry getName Literal " has changed" MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rebuild Literal true = BreakStatement BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "File " MemberReference filepath Literal " not present in websphere MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference rebuild Literal true = BreakStatement IfStatement MemberReference ! rebuild BlockStatement StatementExpression MethodInvocation Literal "No rebuild needed - updating MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference newwasJarFile ClassCreator ReferenceType File BinaryOperation + MethodInvocation websphereJarFile getAbsolutePath Literal = IfStatement MethodInvocation newwasJarFile exists BlockStatement StatementExpression MethodInvocation newwasJarFile delete StatementExpression Assignment MemberReference newJarStream ClassCreator ReferenceType JarOutputStream ClassCreator ReferenceType FileOutputStream MemberReference newwasJarFile = StatementExpression MethodInvocation newJarStream Literal 0 setLevel ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation wasEntries elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference DEFAULT_BUFFER_SIZE LocalVariableDeclaration BasicType int VariableDeclarator bytesRead LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator je Cast ReferenceType JarEntry MethodInvocation e nextElement IfStatement BinaryOperation || BinaryOperation == MethodInvocation je Literal - 1 BinaryOperation == MethodInvocation je MethodInvocation je getSize BlockStatement StatementExpression MethodInvocation newJarStream Literal 0 setLevel BlockStatement StatementExpression MethodInvocation newJarStream MemberReference setLevel IfStatement MethodInvocation replaceEntries MethodInvocation je getName containsKey BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Updating Bean class from generic Jar " MethodInvocation je getName MemberReference Project MSG_VERBOSE log StatementExpression Assignment MemberReference je Cast ReferenceType JarEntry MethodInvocation replaceEntries MethodInvocation je getName get = StatementExpression Assignment MemberReference is MethodInvocation genericJar MemberReference je getInputStream = BlockStatement StatementExpression Assignment MemberReference is MethodInvocation wasJar MemberReference je getInputStream = StatementExpression MethodInvocation newJarStream ClassCreator ReferenceType JarEntry MethodInvocation je getName putNextEntry WhileStatement BinaryOperation != Assignment MemberReference bytesRead MethodInvocation is MemberReference buffer read = Literal - 1 BlockStatement StatementExpression MethodInvocation newJarStream MemberReference buffer Literal 0 MemberReference bytesRead write StatementExpression MethodInvocation is close BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal Jar rebuild needed due to changed " Literal or MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression Assignment MemberReference rebuild Literal true = CatchClause CatchClauseParameter ClassNotFoundException cnfe LocalVariableDeclaration ReferenceType String VariableDeclarator cnfmsg BinaryOperation + BinaryOperation + Literal while processing ejb-jar file" Literal ". Details: " MethodInvocation cnfe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference cnfmsg MemberReference cnfe CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + Literal "IOException while processing ejb-jar file " Literal ". Details: " MethodInvocation ioe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe IfStatement BinaryOperation != MemberReference genericJar Literal null BlockStatement TryStatement StatementExpression MethodInvocation genericJar close CatchClause CatchClauseParameter IOException closeException IfStatement BinaryOperation != MemberReference wasJar Literal null BlockStatement TryStatement StatementExpression MethodInvocation wasJar close CatchClause CatchClauseParameter IOException closeException IfStatement BinaryOperation != MemberReference newJarStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation newJarStream close CatchClause CatchClauseParameter IOException closeException TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference newwasJarFile MemberReference websphereJarFile rename CatchClause CatchClauseParameter IOException renameException StatementExpression MethodInvocation MethodInvocation renameException getMessage MemberReference Project MSG_WARN log StatementExpression Assignment MemberReference rebuild Literal true = ReturnStatement MemberReference rebuild	1
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! Literal "" equals BlockStatement StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean getFailonerror ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String cond StatementExpression Assignment MemberReference ifCond MemberReference cond =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType cmd IfStatement BinaryOperation != Literal null MemberReference keystore BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue LocalVariableDeclaration ReferenceType String VariableDeclarator loc LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation MethodInvocation MemberReference keystore getProject IfStatement MethodInvocation exists BlockStatement StatementExpression Assignment MemberReference loc MethodInvocation getPath = BlockStatement StatementExpression Assignment MemberReference loc MemberReference keystore = StatementExpression MethodInvocation MemberReference cmd MemberReference loc addValue IfStatement BinaryOperation != Literal null MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue StatementExpression MethodInvocation MemberReference cmd MemberReference addValue	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public taskFinished FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "protected" Literal "public" Literal "package" Literal "private"	0
MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference TernaryExpression BinaryOperation == MemberReference classpath Literal null MethodInvocation MethodInvocation getClassLoader getClass MethodInvocation MethodInvocation MemberReference classpath createClassLoader getProject = ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier protected addVendorFiles FormalParameter ReferenceType Hashtable ejbFiles FormalParameter ReferenceType String ddPrefix LocalVariableDeclaration ReferenceType File VariableDeclarator jbossDD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference IfStatement MethodInvocation jbossDD exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference MemberReference jbossDD put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate jboss " Literal "It was expected to be in " MethodInvocation jbossDD getPath MemberReference Project MSG_WARN log ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator descriptorFileName MemberReference IfStatement MethodInvocation MethodInvocation MethodInvocation getParent equals BlockStatement StatementExpression Assignment MemberReference descriptorFileName MemberReference = LocalVariableDeclaration ReferenceType File VariableDeclarator jbossCMPD ClassCreator ReferenceType File MethodInvocation MemberReference descriptorDir getConfig BinaryOperation + MemberReference ddPrefix MemberReference descriptorFileName IfStatement MethodInvocation jbossCMPD exists BlockStatement StatementExpression MethodInvocation ejbFiles BinaryOperation + MemberReference META_DIR MemberReference descriptorFileName MemberReference jbossCMPD put BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Unable to locate jboss cmp " Literal "It was expected to be in " MethodInvocation jbossCMPD getPath MemberReference Project MSG_VERBOSE log ReturnStatement	1
MethodDeclaration Modifier public ReferenceType Property LocalVariableDeclaration Modifier final ReferenceType Property VariableDeclarator prop ClassCreator ReferenceType Property StatementExpression MethodInvocation MemberReference prop addElement ReturnStatement MemberReference prop	0
MethodDeclaration Modifier public synchronized BasicType boolean isDirectory ReturnStatement TernaryExpression MethodInvocation isReference Cast ReferenceType Resource MethodInvocation getCheckedRef MethodInvocation MethodInvocation Literal "/" endsWith getName	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal auth only with mail" expectBuildException	0
MethodDeclaration Modifier private FormalParameter ReferenceType String n IOException LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator writer ClassCreator ReferenceType PrintStream MemberReference out StatementExpression MethodInvocation writer MemberReference n print StatementExpression MethodInvocation writer flush	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected IfStatement BinaryOperation > MethodInvocation fileCopyMap size Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MethodInvocation fileCopyMap size Literal " file" TernaryExpression BinaryOperation == MethodInvocation fileCopyMap size Literal 1 Literal "" Literal "s" Literal " to " MethodInvocation destDir getAbsolutePath log LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation fileCopyMap keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fromFile Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator toFiles Cast ReferenceType String MethodInvocation fileCopyMap MemberReference fromFile get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator toFile MemberReference ArraySelector MemberReference i toFiles IfStatement MethodInvocation fromFile MemberReference toFile equals BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Skipping of " MemberReference fromFile MemberReference verbosity log ContinueStatement TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Copying " MemberReference fromFile Literal " to " MemberReference toFile MemberReference verbosity log LocalVariableDeclaration ReferenceType FilterSetCollection VariableDeclarator executionFilters ClassCreator ReferenceType FilterSetCollection IfStatement MemberReference filtering BlockStatement StatementExpression MethodInvocation executionFilters MethodInvocation MethodInvocation getProject addFilterSet ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator filterEnum MethodInvocation elements MethodInvocation filterEnum hasMoreElements BlockStatement StatementExpression MethodInvocation executionFilters Cast ReferenceType MethodInvocation filterEnum nextElement addFilterSet StatementExpression MethodInvocation fileUtils MemberReference fromFile MemberReference toFile MemberReference executionFilters MemberReference filterChains MemberReference forceOverwrite MemberReference preserveLastModified MemberReference inputEncoding MemberReference outputEncoding MethodInvocation getProject copyFile CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Failed to copy " MemberReference fromFile Literal " to " MemberReference toFile Literal " due to " MethodInvocation MemberReference ioe LocalVariableDeclaration ReferenceType File VariableDeclarator targetFile ClassCreator ReferenceType File MemberReference toFile IfStatement BinaryOperation && MethodInvocation targetFile exists MethodInvocation ! targetFile delete BlockStatement StatementExpression Assignment MemberReference msg BinaryOperation + Literal " and I couldn't delete the corrupt " MemberReference toFile += IfStatement MemberReference failonerror BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation MemberReference msg MemberReference Project MSG_ERR log IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dirCopyMap elements LocalVariableDeclaration BasicType int VariableDeclarator createCount Literal 0 WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dirs Cast ReferenceType String MethodInvocation e nextElement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator d ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i dirs IfStatement MethodInvocation ! d exists BlockStatement IfStatement MethodInvocation ! d mkdirs BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to create directory " MethodInvocation d getAbsolutePath MemberReference Project MSG_ERR log BlockStatement StatementExpression MemberReference ++ createCount IfStatement BinaryOperation > MemberReference createCount Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation dirCopyMap size Literal " empty director" TernaryExpression BinaryOperation == MethodInvocation dirCopyMap size Literal 1 Literal "y" Literal "ies" Literal " to " MemberReference createCount Literal " empty director" TernaryExpression BinaryOperation == MemberReference createCount Literal 1 Literal "y" Literal "ies" Literal " " MethodInvocation destDir getAbsolutePath log	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Project project StatementExpression MethodInvocation project MethodInvocation createLogger ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation listeners size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation listeners MemberReference i elementAt LocalVariableDeclaration ReferenceType VariableDeclarator listener Cast ReferenceType MethodInvocation ClasspathUtils MemberReference className ClassReference MethodInvocation getClassLoader ReferenceType Main ClassReference ReferenceType newInstance IfStatement BinaryOperation != MemberReference project Literal null BlockStatement StatementExpression MethodInvocation project MemberReference listener setProjectReference StatementExpression MethodInvocation project MemberReference listener	1
MethodDeclaration Modifier public FormalParameter ReferenceType String from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public addDifferent FormalParameter ReferenceType DifferentSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public parseFromLocalFileData FormalParameter BasicType byte data FormalParameter BasicType int offset FormalParameter BasicType int length ZipException LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation ZipLong MemberReference data MemberReference offset getValue LocalVariableDeclaration BasicType byte VariableDeclarator tmp ArrayCreator BasicType byte BinaryOperation - MemberReference length Literal 4 StatementExpression MethodInvocation System MemberReference data BinaryOperation + MemberReference offset Literal 4 MemberReference tmp Literal 0 BinaryOperation - MemberReference length Literal 4 arraycopy StatementExpression MethodInvocation crc reset StatementExpression MethodInvocation crc MemberReference tmp update LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation crc getValue IfStatement BinaryOperation != MemberReference MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType ZipException BinaryOperation + BinaryOperation + BinaryOperation + Literal "bad checksum " MethodInvocation Long MemberReference toHexString Literal " of " MethodInvocation Long MemberReference toHexString LocalVariableDeclaration BasicType int VariableDeclarator newMode MethodInvocation ZipShort MemberReference tmp Literal 0 getValue LocalVariableDeclaration BasicType byte VariableDeclarator linkArray ArrayCreator BasicType byte Cast BasicType int MethodInvocation ZipLong MemberReference tmp Literal 2 getValue StatementExpression Assignment MemberReference uid MethodInvocation ZipShort MemberReference tmp Literal 6 getValue = StatementExpression Assignment MemberReference gid MethodInvocation ZipShort MemberReference tmp Literal 8 getValue = IfStatement BinaryOperation == MemberReference linkArray length Literal 0 BlockStatement StatementExpression Assignment MemberReference link Literal "" = BlockStatement StatementExpression MethodInvocation System MemberReference tmp Literal 10 MemberReference linkArray Literal 0 MemberReference linkArray length arraycopy StatementExpression Assignment MemberReference link ClassCreator ReferenceType String MemberReference linkArray = StatementExpression MethodInvocation BinaryOperation != BinaryOperation & MemberReference newMode MemberReference Literal 0 setDirectory StatementExpression MethodInvocation MemberReference newMode setMode	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier protected validate BuildException IfStatement BinaryOperation == MemberReference destFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal file must be specified" IfStatement MethodInvocation destFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal file is a directory" IfStatement BinaryOperation || BinaryOperation == MemberReference srcFile Literal null MethodInvocation ! srcFile exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal file does not exist" IfStatement MethodInvocation srcFile isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal file is a directory" IfStatement BinaryOperation == MemberReference namespace Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No namespace"	0
MethodDeclaration Modifier protected ReferenceType String read FormalParameter ReferenceType String filename LocalVariableDeclaration ReferenceType String VariableDeclarator content Literal null TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject MemberReference filename LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType FileReader VariableDeclarator rdr ClassCreator ReferenceType java ReferenceType io ReferenceType FileReader MemberReference file StatementExpression Assignment MemberReference content MethodInvocation FileUtils MemberReference rdr readFully = StatementExpression MethodInvocation rdr close StatementExpression Assignment MemberReference rdr Literal null = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ReturnStatement MemberReference content	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference root ClassCreator MethodInvocation getAbsolutePath MethodInvocation toUpperCase ReferenceType File MemberReference File separator =	1
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a IfStatement BinaryOperation != MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal a single source is supported" IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal single argument resource Literal " are supported" StatementExpression Assignment MemberReference src Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer i StatementExpression Assignment This MemberReference timeout MemberReference i =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MemberReference MSVSS MemberReference MSVSS MemberReference DS_VSS_PROJECT_PATH MemberReference MSVSS BinaryOperation + MemberReference MSVSS MemberReference VSS_USERNAME LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference project setProject StatementExpression MethodInvocation MemberReference VSS_USERNAME StatementExpression MethodInvocation MemberReference DS_VSS_PROJECT_PATH StatementExpression Assignment MemberReference commandline MethodInvocation = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public IfStatement MethodInvocation JavaEnvUtils BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal MemberReference File separator Literal IfStatement MethodInvocation isDirectory BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator kaffeJarFiles ClassCreator ReferenceType FileSet StatementExpression MethodInvocation kaffeJarFiles MemberReference StatementExpression MethodInvocation kaffeJarFiles Literal setIncludes StatementExpression MethodInvocation MemberReference kaffeJarFiles IfStatement Literal MethodInvocation MethodInvocation System Literal "java.vm.name" getProperty equals BlockStatement StatementExpression MethodInvocation MemberReference addExisting IfStatement BinaryOperation >= MethodInvocation System MethodInvocation MemberReference toLowerCase MethodInvocation Literal indexOf Literal "java.vendor" getProperty Literal 0 BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator msZipFiles ClassCreator ReferenceType FileSet StatementExpression MethodInvocation msZipFiles ClassCreator ReferenceType File BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal StatementExpression MethodInvocation msZipFiles Literal setIncludes StatementExpression MethodInvocation MemberReference msZipFiles BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal "lib" MemberReference File separator Literal addExisting StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal MemberReference File separator Literal "lib" MemberReference File separator Literal addExisting LocalVariableDeclaration ReferenceType String VariableDeclarator secJars ArrayInitializer Literal Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference secJars length MemberReference ++ i BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal "lib" MemberReference File separator MemberReference ArraySelector MemberReference i secJars Literal ".jar" addExisting StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal ".." MemberReference File separator Literal MemberReference File separator MemberReference ArraySelector MemberReference i secJars Literal ".jar" addExisting LocalVariableDeclaration ReferenceType String VariableDeclarator ibmJars ArrayInitializer Literal Literal Literal Literal Literal "xml" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ibmJars length MemberReference ++ i BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal "lib" MemberReference File separator MemberReference ArraySelector MemberReference i ibmJars Literal ".jar" addExisting StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal ".." MemberReference File separator Literal MemberReference File separator Literal addExisting StatementExpression MethodInvocation ClassCreator ReferenceType Literal null BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation System Literal "java.home" getProperty MemberReference File separator Literal ".." MemberReference File separator Literal MemberReference File separator Literal addExisting	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal Literal "this is the	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType ZipEntry FormalParameter ReferenceType ZipFile FormalParameter ReferenceType ZipEntry inputEntry LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation inputEntry getName IfStatement BinaryOperation || MethodInvocation inputEntry isDirectory MethodInvocation name Literal ".class" endsWith BlockStatement TryStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator input MethodInvocation MethodInvocation MemberReference name getEntry getInputStream LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation ClassNameReader MemberReference input getClassName StatementExpression MethodInvocation input close IfStatement BinaryOperation != MemberReference className Literal null BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MethodInvocation className Literal '.' Literal '/' replace Literal ".class" = CatchClause CatchClauseParameter IOException ioe LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator outputEntry ClassCreator ReferenceType ZipEntry MemberReference name StatementExpression MethodInvocation outputEntry MethodInvocation inputEntry StatementExpression MethodInvocation outputEntry MethodInvocation inputEntry StatementExpression MethodInvocation outputEntry MethodInvocation inputEntry StatementExpression MethodInvocation outputEntry MethodInvocation inputEntry IfStatement MemberReference BlockStatement StatementExpression MethodInvocation outputEntry MemberReference ZipEntry DEFLATED setMethod BlockStatement StatementExpression MethodInvocation outputEntry MemberReference ZipEntry STORED setMethod StatementExpression MethodInvocation outputEntry MethodInvocation inputEntry StatementExpression MethodInvocation outputEntry MethodInvocation inputEntry getSize setSize ReturnStatement MemberReference outputEntry	1
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper mapper IfStatement BinaryOperation != This MemberReference mapper Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Cannot define more than one StatementExpression Assignment This MemberReference mapper MemberReference mapper =	0
MethodDeclaration Modifier static protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal MemberReference configureProject StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference sw Literal true StatementExpression MethodInvocation t MemberReference pw printStackTrace StatementExpression MethodInvocation pw flush StatementExpression MethodInvocation pw close ReturnStatement MethodInvocation sw toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference MemberReference password =	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal " of assertStringContains StatementExpression MethodInvocation MemberReference contents Literal " This	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r ReturnStatement MethodInvocation r isExists	1
MethodDeclaration Modifier public ReferenceType Long ReturnStatement MemberReference timeout	0
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType List VariableDeclarator ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 5 MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation add LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation createTask LocalVariableDeclaration ReferenceType VariableDeclarator selector ClassCreator ReferenceType StatementExpression MethodInvocation selector Literal setName LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fileset ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fileset MemberReference tempDir StatementExpression MethodInvocation fileset MemberReference selector addFilename StatementExpression MethodInvocation MemberReference fileset StatementExpression MethodInvocation MemberReference sshHostUri StatementExpression MethodInvocation execute LocalVariableDeclaration ReferenceType File VariableDeclarator multi ClassCreator ReferenceType File MemberReference tempDir Literal StatementExpression MethodInvocation multi mkdir StatementExpression MethodInvocation MemberReference multi LocalVariableDeclaration ReferenceType VariableDeclarator scp2 MethodInvocation createTask StatementExpression MethodInvocation scp2 BinaryOperation + MemberReference sshHostUri Literal StatementExpression MethodInvocation scp2 MethodInvocation multi getPath StatementExpression MethodInvocation scp2 execute LocalVariableDeclaration ReferenceType VariableDeclarator match ClassCreator ReferenceType ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType File MethodInvocation i next StatementExpression MethodInvocation match MemberReference f LocalVariableDeclaration ReferenceType File VariableDeclarator f2 ClassCreator ReferenceType File MemberReference multi MethodInvocation f getName StatementExpression MethodInvocation match MemberReference f2 StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Assert file '" MethodInvocation f getPath Literal "' and file '" MethodInvocation f2 getPath Literal "'" MethodInvocation match eval assertTrue	1
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator file Literal null IfStatement BinaryOperation == MemberReference File separatorChar Literal '\\' BlockStatement StatementExpression Assignment MemberReference file ClassCreator ReferenceType File Literal = BlockStatement StatementExpression Assignment MemberReference file ClassCreator ReferenceType File Literal = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference file getSystemId StatementExpression MethodInvocation Literal should start by MethodInvocation Literal "file:/" startsWith assertTrue StatementExpression MethodInvocation Literal should not start with MethodInvocation ! Literal startsWith assertTrue	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference MemberReference s =	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort = StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " Literal " Literal " Literal " Literal " Literal " Literal " Literal " Literal	0
MethodDeclaration Modifier private FormalParameter ReferenceType rexec IfStatement MemberReference BlockStatement StatementExpression MethodInvocation rexec Literal "\n" Literal true StatementExpression MethodInvocation rexec Literal StatementExpression MethodInvocation rexec MemberReference Literal true StatementExpression MethodInvocation rexec Literal StatementExpression MethodInvocation rexec MemberReference password Literal false	0
MethodDeclaration Modifier protected setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public synchronized BasicType boolean setProperty FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value FormalParameter BasicType boolean IfStatement BinaryOperation != Literal null MethodInvocation MemberReference name get BlockStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal ignored for user property \"" MemberReference name Literal "\"" MemberReference Project MSG_VERBOSE log ReturnStatement Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator done MethodInvocation MemberReference ns MemberReference name MemberReference value Literal false Literal false Literal false IfStatement MemberReference done BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation != Literal null MethodInvocation properties MemberReference name get MemberReference BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + Literal previous of property \"" MemberReference name Literal "\"" MemberReference Project MSG_VERBOSE log IfStatement MemberReference BlockStatement StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation properties MemberReference name MemberReference value put ReturnStatement Literal true	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType String command ReturnStatement BinaryOperation + MemberReference command TernaryExpression MemberReference Literal ".exe" Literal ""	0
MethodDeclaration Modifier public ReferenceType String getServer ReturnStatement MemberReference server	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation stream flush StatementExpression MethodInvocation stream	0
MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String desc StatementExpression Assignment This MemberReference MemberReference desc =	0
MethodDeclaration Modifier public ReferenceType ZipShort ReturnStatement MemberReference	0
MethodDeclaration Modifier public IfStatement ClassReference MethodInvocation ReferenceType BlockStatement ReturnStatement StatementExpression MethodInvocation Literal Literal "Assertion statements are ignored in mode" expectLogContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType String change StatementExpression Assignment This MemberReference change MemberReference change =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public static closeQuietly FormalParameter ReferenceType ZipFile IfStatement BinaryOperation != MemberReference Literal null BlockStatement TryStatement StatementExpression MethodInvocation close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList attrs SAXParseException StatementExpression MethodInvocation MemberReference helperImpl This MemberReference target MemberReference name MemberReference attrs handleElement	1
MethodDeclaration Modifier private doit LocalVariableDeclaration ReferenceType Commandline VariableDeclarator commandLine ClassCreator ReferenceType Commandline StatementExpression MethodInvocation commandLine MethodInvocation setExecutable StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation setValue createArgument StatementExpression MethodInvocation MemberReference commandLine checkOptions LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation MemberReference commandLine run IfStatement MethodInvocation Execute MemberReference result isFailure BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Failed executing: " MethodInvocation commandLine toString ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MethodInvocation getLocation	0
MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement This MemberReference file	0
MethodDeclaration Modifier private IOException JSchException LocalVariableDeclaration ReferenceType ChannelSftp VariableDeclarator channel MethodInvocation openSftpChannel TryStatement StatementExpression MethodInvocation channel connect TryStatement StatementExpression MethodInvocation channel MemberReference cd ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Directory VariableDeclarator current Cast ReferenceType Directory MethodInvocation i next StatementExpression MethodInvocation MemberReference channel MemberReference current CatchClause CatchClauseParameter SftpException e ThrowStatement ClassCreator ReferenceType JSchException MethodInvocation e toString IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel disconnect	1
MethodDeclaration Modifier public synchronized BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ref StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference ref addElement	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation fileset MemberReference selector add	1
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType String classname IOException LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MethodInvocation classname Literal '.' Literal '/' replace Literal ".java" ReturnStatement MethodInvocation MemberReference MethodInvocation sourcePath list	1
MethodDeclaration Modifier public processDescriptor FormalParameter ReferenceType String FormalParameter ReferenceType SAXParser saxParser StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment This MemberReference Literal null = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal Tool " MemberReference Literal " (and " MethodInvocation Literal ")" MemberReference Project MSG_VERBOSE log StatementExpression SuperMethodInvocation MemberReference MemberReference saxParser processDescriptor	1
MethodDeclaration Modifier public expectLog FormalParameter ReferenceType String target FormalParameter ReferenceType String log StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getLog StatementExpression MethodInvocation MemberReference log MemberReference assertEquals	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator runner MethodInvocation IfStatement BinaryOperation != MemberReference srcFile Literal null BlockStatement StatementExpression MethodInvocation runner MemberReference srcFile IfStatement BinaryOperation != MemberReference text Literal null BlockStatement StatementExpression MethodInvocation runner MemberReference text IfStatement MemberReference BlockStatement StatementExpression MethodInvocation runner MemberReference BlockStatement StatementExpression MethodInvocation runner MemberReference ReturnStatement MemberReference runner	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier private mainSort LocalVariableDeclaration Modifier final ReferenceType Data VariableDeclarator dataShadow This MemberReference data LocalVariableDeclaration Modifier final BasicType int VariableDeclarator runningOrder MemberReference dataShadow LocalVariableDeclaration Modifier final BasicType int VariableDeclarator copy MemberReference dataShadow LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator bigDone MemberReference dataShadow LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ftab MemberReference dataShadow ftab LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block MemberReference dataShadow block LocalVariableDeclaration Modifier final BasicType int VariableDeclarator fmap MemberReference dataShadow fmap LocalVariableDeclaration Modifier final BasicType char VariableDeclarator quadrant MemberReference dataShadow quadrant LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lastShadow This MemberReference last LocalVariableDeclaration Modifier final BasicType int VariableDeclarator workLimitShadow This MemberReference workLimit LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator firstAttemptShadow This MemberReference firstAttempt ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ftab Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference NUM_OVERSHOOT_BYTES MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference lastShadow MemberReference i Literal 2 block MemberReference ArraySelector BinaryOperation + BinaryOperation % MemberReference i BinaryOperation + MemberReference lastShadow Literal 1 Literal 1 block = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference lastShadow MemberReference NUM_OVERSHOOT_BYTES BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i quadrant Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 block MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 1 block = LocalVariableDeclaration BasicType int VariableDeclarator c1 BinaryOperation & MemberReference ArraySelector Literal 0 block Literal 0xff ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i MemberReference lastShadow MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator c2 BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 block Literal 0xff StatementExpression MemberReference ++ ArraySelector BinaryOperation + BinaryOperation << MemberReference c1 Literal 8 MemberReference c2 ftab StatementExpression Assignment MemberReference c1 MemberReference c2 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i Literal 65536 MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i ftab MemberReference ArraySelector BinaryOperation - MemberReference i Literal 1 ftab += StatementExpression Assignment MemberReference c1 BinaryOperation & MemberReference ArraySelector Literal 1 block Literal 0xff = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lastShadow MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator c2 BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference i Literal 2 block Literal 0xff StatementExpression Assignment MemberReference ArraySelector MemberReference -- ArraySelector BinaryOperation + BinaryOperation << MemberReference c1 Literal 8 MemberReference c2 ftab fmap MemberReference i = StatementExpression Assignment MemberReference c1 MemberReference c2 = StatementExpression Assignment MemberReference ArraySelector MemberReference -- ArraySelector BinaryOperation + BinaryOperation << BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference lastShadow Literal 1 block Literal 0xff Literal 8 BinaryOperation & MemberReference ArraySelector Literal 1 block Literal 0xff ftab fmap MemberReference lastShadow = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 256 BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i bigDone Literal false = StatementExpression Assignment MemberReference ArraySelector MemberReference i runningOrder MemberReference i = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator h Literal 364 BinaryOperation != MemberReference h Literal 1 BlockStatement StatementExpression Assignment MemberReference h Literal 3 /= ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference h BinaryOperation <= MemberReference i Literal 255 MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MemberReference ArraySelector MemberReference i runningOrder LocalVariableDeclaration Modifier final BasicType int VariableDeclarator a BinaryOperation - MemberReference ArraySelector BinaryOperation << BinaryOperation + MemberReference Literal 1 Literal 8 ftab MemberReference ArraySelector BinaryOperation << MemberReference Literal 8 ftab LocalVariableDeclaration Modifier final BasicType int VariableDeclarator b BinaryOperation - MemberReference h Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator j MemberReference i ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator ro MemberReference ArraySelector BinaryOperation - MemberReference j MemberReference h runningOrder BinaryOperation > BinaryOperation - MemberReference ArraySelector BinaryOperation << BinaryOperation + MemberReference ro Literal 1 Literal 8 ftab MemberReference ArraySelector BinaryOperation << MemberReference ro Literal 8 ftab MemberReference a Assignment MemberReference ro MemberReference ArraySelector BinaryOperation - MemberReference j MemberReference h runningOrder = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference j runningOrder MemberReference ro = StatementExpression Assignment MemberReference j MemberReference h -= IfStatement BinaryOperation <= MemberReference j MemberReference b BlockStatement BreakStatement StatementExpression Assignment MemberReference ArraySelector MemberReference j runningOrder MemberReference = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i Literal 255 MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ss MemberReference ArraySelector MemberReference i runningOrder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation <= MemberReference j Literal 255 MemberReference ++ j BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator sb BinaryOperation + BinaryOperation << MemberReference ss Literal 8 MemberReference j LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ftab_sb MemberReference ArraySelector MemberReference sb ftab IfStatement BinaryOperation != BinaryOperation & MemberReference ftab_sb MemberReference SETMASK MemberReference SETMASK BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lo BinaryOperation & MemberReference ftab_sb MemberReference CLEARMASK LocalVariableDeclaration Modifier final BasicType int VariableDeclarator hi BinaryOperation - BinaryOperation & MemberReference ArraySelector BinaryOperation + MemberReference sb Literal 1 ftab MemberReference CLEARMASK Literal 1 IfStatement BinaryOperation > MemberReference hi MemberReference lo BlockStatement StatementExpression MethodInvocation MemberReference dataShadow MemberReference lo MemberReference hi Literal 2 IfStatement BinaryOperation && MemberReference firstAttemptShadow BinaryOperation > This MemberReference workDone MemberReference workLimitShadow BlockStatement ReturnStatement StatementExpression Assignment MemberReference ArraySelector MemberReference sb ftab BinaryOperation | MemberReference ftab_sb MemberReference SETMASK = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation <= MemberReference j Literal 255 MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference j copy BinaryOperation & MemberReference ArraySelector BinaryOperation + BinaryOperation << MemberReference j Literal 8 MemberReference ss ftab MemberReference CLEARMASK = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j BinaryOperation & MemberReference ArraySelector BinaryOperation << MemberReference ss Literal 8 ftab MemberReference CLEARMASK VariableDeclarator hj BinaryOperation & MemberReference ArraySelector BinaryOperation << BinaryOperation + MemberReference ss Literal 1 Literal 8 ftab MemberReference CLEARMASK BinaryOperation < MemberReference j MemberReference hj MemberReference ++ j BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator fmap_j MemberReference ArraySelector MemberReference j fmap StatementExpression Assignment MemberReference c1 BinaryOperation & MemberReference ArraySelector MemberReference fmap_j block Literal 0xff = IfStatement MemberReference ! ArraySelector MemberReference c1 bigDone BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ArraySelector MemberReference c1 copy fmap TernaryExpression BinaryOperation == MemberReference fmap_j Literal 0 MemberReference lastShadow BinaryOperation - MemberReference fmap_j Literal 1 = StatementExpression MemberReference ++ ArraySelector MemberReference c1 copy ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 256 BinaryOperation >= MemberReference -- j Literal 0 StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation << MemberReference j Literal 8 MemberReference ss ftab MemberReference SETMASK |= StatementExpression Assignment MemberReference ArraySelector MemberReference ss bigDone Literal true = IfStatement BinaryOperation < MemberReference i Literal 255 BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator bbStart BinaryOperation & MemberReference ArraySelector BinaryOperation << MemberReference ss Literal 8 ftab MemberReference CLEARMASK LocalVariableDeclaration Modifier final BasicType int VariableDeclarator bbSize BinaryOperation - BinaryOperation & MemberReference ArraySelector BinaryOperation << BinaryOperation + MemberReference ss Literal 1 Literal 8 ftab MemberReference CLEARMASK MemberReference bbStart LocalVariableDeclaration BasicType int VariableDeclarator shifts Literal 0 WhileStatement BinaryOperation > BinaryOperation >> MemberReference bbSize MemberReference shifts Literal BlockStatement StatementExpression MemberReference ++ shifts ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference bbSize MemberReference ++ j BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator a2update MemberReference ArraySelector BinaryOperation + MemberReference bbStart MemberReference j fmap LocalVariableDeclaration Modifier final BasicType char VariableDeclarator qVal Cast BasicType char BinaryOperation >> MemberReference j MemberReference shifts StatementExpression Assignment MemberReference ArraySelector MemberReference a2update quadrant MemberReference qVal = IfStatement BinaryOperation < MemberReference a2update MemberReference NUM_OVERSHOOT_BYTES BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation + MemberReference a2update MemberReference lastShadow Literal 1 quadrant MemberReference qVal =	1
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is a directory" Literal is a expectBuildExceptionContaining	0
MethodDeclaration Modifier public IOException IfStatement MethodInvocation ! Literal hasRegex ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal world world assertStringContains	1
MethodDeclaration Modifier private static ReferenceType String FormalParameter Modifier final ReferenceType String value ReturnStatement TernaryExpression BinaryOperation == Literal null MemberReference value Literal null MethodInvocation value trim	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation p Literal MemberReference StatementExpression MethodInvocation Literal Literal "" Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 WhileStatement BinaryOperation > MemberReference pos Literal - 1 BlockStatement StatementExpression Assignment MemberReference pos MethodInvocation MemberReference log MemberReference pos =	0
MethodDeclaration Modifier private complete IOException StatementExpression Assignment This MemberReference MethodInvocation = StatementExpression Assignment This MemberReference MemberReference EOF = StatementExpression Assignment This MemberReference data Literal null = IfStatement BinaryOperation != This MemberReference This MemberReference BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean eval BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType MethodInvocation e nextElement IfStatement MethodInvocation c eval BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public setMillis FormalParameter BasicType long millis StatementExpression Assignment This MemberReference millis MemberReference millis =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destfile StatementExpression Assignment This MemberReference destfile MemberReference destfile =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType String target StatementExpression MethodInvocation MemberReference target executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator d BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference d LocalVariableDeclaration ReferenceType String VariableDeclarator f BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal StatementExpression MethodInvocation MemberReference f StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation Literal "Removing indexOf Literal - 1 assertTrue StatementExpression MethodInvocation Literal 1 file StatementExpression MethodInvocation Literal 1 directory	0
MethodDeclaration Modifier protected ReferenceType File getNotNullFile IfStatement BinaryOperation == MethodInvocation getFile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is ReturnStatement MethodInvocation getFile	0
MethodDeclaration Modifier public addAnd FormalParameter ReferenceType AndSelector selector StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference selector addAnd	1
MethodDeclaration Modifier protected dieOnCircularReference FormalParameter ReferenceType Project p IfStatement BinaryOperation || MemberReference checked MethodInvocation ! isReference BlockStatement ReturnStatement StatementExpression MethodInvocation ClassCreator ReferenceType IdentityStack This MemberReference p dieOnCircularReference	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation != MemberReference property Literal null BlockStatement ReturnStatement MethodInvocation properties MemberReference property getProperty IfStatement BinaryOperation != MemberReference value Literal null BlockStatement ReturnStatement MemberReference value IfStatement BinaryOperation != This MemberReference value Literal null BlockStatement ReturnStatement This MemberReference value MethodInvocation getText BlockStatement ReturnStatement Literal ""	0
MethodDeclaration * the base directory to output generated * @return the location of the compiled */ Modifier public ReferenceType File getBase ReturnStatement This MemberReference baseDir	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType p StatementExpression MethodInvocation MemberReference p addElement	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal ""	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "property attribute is required." MethodInvocation getLocation LocalVariableDeclaration BasicType boolean VariableDeclarator upToDate MethodInvocation eval IfStatement MemberReference upToDate BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference property MethodInvocation getValue setNewProperty getProject IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "File \"" MethodInvocation targetFile getAbsolutePath Literal "\" is MemberReference Project MSG_VERBOSE log BlockStatement StatementExpression MethodInvocation Literal "All target files are MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType VariableDeclarator reader MethodInvocation getReader TryStatement StatementExpression MethodInvocation reader MemberReference property MemberReference value setProperty CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference MemberReference property MemberReference Project MSG_VERBOSE log ReturnStatement Literal false CatchClause CatchClauseParameter e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference MemberReference property MemberReference Project MSG_VERBOSE log ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier private FormalParameter ReferenceType String name IfStatement BinaryOperation && MethodInvocation ! MemberReference name contains MethodInvocation ! MemberReference name contains BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement IfStatement MethodInvocation ! MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference name addElement BlockStatement StatementExpression MethodInvocation MemberReference name addElement BlockStatement StatementExpression MethodInvocation MemberReference name addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized appendExcludes FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation != MemberReference Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i setName StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation validate LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator displayer ClassCreator ReferenceType IfStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration Modifier final ReferenceType Iterator VariableDeclarator iterator MethodInvocation iterator WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType FileSet VariableDeclarator Cast ReferenceType FileSet MethodInvocation iterator next LocalVariableDeclaration Modifier final ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator basedir MethodInvocation scanner getBasedir LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator files MethodInvocation scanner getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference basedir MemberReference ArraySelector MemberReference i files StatementExpression MethodInvocation displayer MemberReference file BlockStatement StatementExpression MethodInvocation displayer MemberReference	1
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference output Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is required" MethodInvocation getLocation LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out Literal null TryStatement TryStatement StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference output Literal "UTF8" = CatchClause CatchClauseParameter UnsupportedEncodingException ue StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType FileWriter MemberReference output = StatementExpression MethodInvocation MemberReference out MethodInvocation getProject MethodInvocation MethodInvocation getProject MethodInvocation MethodInvocation getDataTypeDefinitions getProject StatementExpression MethodInvocation MemberReference out LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator dataTypes MethodInvocation MethodInvocation getDataTypeDefinitions MethodInvocation keys getProject WhileStatement MethodInvocation dataTypes hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator typeName Cast ReferenceType String MethodInvocation dataTypes nextElement StatementExpression MethodInvocation MemberReference out MethodInvocation getProject MemberReference typeName Cast ReferenceType Class MethodInvocation MethodInvocation getDataTypeDefinitions MethodInvocation MemberReference typeName get getProject LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator tasks MethodInvocation MethodInvocation MethodInvocation keys getProject WhileStatement MethodInvocation tasks hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation tasks nextElement StatementExpression MethodInvocation MemberReference out MethodInvocation getProject MemberReference Cast ReferenceType Class MethodInvocation MethodInvocation MethodInvocation MemberReference get getProject StatementExpression MethodInvocation MemberReference out CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Error " MethodInvocation output getAbsolutePath MemberReference ioe MethodInvocation getLocation IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out close	1
MethodDeclaration Modifier public execute IOException StatementExpression MethodInvocation MemberReference lftp This MemberReference	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator iter MethodInvocation keys WhileStatement MethodInvocation iter hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation iter nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference name get StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-" MemberReference name Literal ":" MethodInvocation value toString setValue createArgument IfStatement BinaryOperation || BinaryOperation == MemberReference targetFile Literal null MethodInvocation ! targetFile isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid target: " MemberReference targetFile LocalVariableDeclaration ReferenceType File VariableDeclarator javaFile Literal null IfStatement BinaryOperation == MemberReference outputDirectory Literal null BlockStatement StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + Literal MethodInvocation setValue createArgument StatementExpression Assignment MemberReference javaFile ClassCreator ReferenceType File MethodInvocation MemberReference targetFile MemberReference outputFile Literal null createOutputFileName = BlockStatement IfStatement MethodInvocation ! outputDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference outputDirectory Literal " is not a directory." StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + Literal MethodInvocation outputDirectory MethodInvocation Literal '\\' Literal '/' replace getAbsolutePath setValue createArgument StatementExpression Assignment MemberReference javaFile ClassCreator ReferenceType File MethodInvocation MemberReference targetFile MemberReference outputFile MethodInvocation outputDirectory getPath createOutputFileName = IfStatement BinaryOperation && MethodInvocation javaFile exists BinaryOperation < MethodInvocation targetFile lastModified MethodInvocation javaFile lastModified BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Target is already built - skipping (" MemberReference targetFile Literal ")" MemberReference Project MSG_VERBOSE log ReturnStatement IfStatement BinaryOperation != MemberReference outputFile Literal null BlockStatement StatementExpression MethodInvocation cmdl MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "-" MemberReference Literal ":" MethodInvocation outputFile Literal '\\' Literal '/' replace setValue createArgument StatementExpression MethodInvocation cmdl MethodInvocation MethodInvocation targetFile getAbsolutePath setValue createArgument LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator classpath MethodInvocation cmdl MethodInvocation getProject createClasspath LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator javaccJar MethodInvocation JavaCC MemberReference getArchiveFile StatementExpression MethodInvocation classpath MethodInvocation MethodInvocation javaccJar getAbsolutePath setPath StatementExpression MethodInvocation classpath StatementExpression MethodInvocation cmdl MethodInvocation JavaCC MemberReference classpath MemberReference JavaCC TASKDEF_TYPE_JJTREE getMainClass setClassname LocalVariableDeclaration Modifier final ReferenceType Commandline ReferenceType VariableDeclarator arg MethodInvocation cmdl StatementExpression MethodInvocation arg Literal "-mx140M" setValue StatementExpression MethodInvocation arg BinaryOperation + Literal "-Dinstall.root=" MethodInvocation getAbsolutePath setValue LocalVariableDeclaration Modifier final ReferenceType Execute VariableDeclarator process ClassCreator ReferenceType Execute ClassCreator ReferenceType LogStreamHandler This MemberReference Project MSG_INFO MemberReference Project MSG_INFO Literal null StatementExpression MethodInvocation MethodInvocation cmdl describeCommand MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation process MethodInvocation cmdl getCommandline setCommandline TryStatement IfStatement BinaryOperation != MethodInvocation process execute Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal failed." CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException Literal "Failed to launch MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType ZipFileSet fs StatementExpression MethodInvocation fs Literal "META-INF/" StatementExpression SuperMethodInvocation MemberReference fs	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal ClassReference ReferenceType getProject TryStatement StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject CatchClause CatchClauseParameter BuildException bx StatementExpression MethodInvocation Literal failed after fail	0
MethodDeclaration Modifier public FormalParameter ReferenceType String substring LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getOutput StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal output to contain \"" MemberReference substring Literal "\" output was \"" MemberReference Literal "\"" BinaryOperation >= MethodInvocation MemberReference substring indexOf Literal 0 assertTrue	0
MethodDeclaration Modifier public FormalParameter BasicType int granularity StatementExpression Assignment This MemberReference granularity MemberReference granularity =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String output StatementExpression Assignment This MemberReference output MemberReference output =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator javaVersion MethodInvocation JavaEnvUtils StatementExpression MethodInvocation MemberReference MagicNames MemberReference javaVersion IfStatement BinaryOperation || MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion MethodInvocation JavaEnvUtils MemberReference JavaEnvUtils isJavaVersion BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Ant cannot work on Java 1.0 / 1.1" StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Detected Java version: " MemberReference javaVersion Literal " in: " MethodInvocation System Literal "java.home" getProperty MemberReference MSG_VERBOSE log StatementExpression MethodInvocation BinaryOperation + Literal "Detected " MethodInvocation System Literal "os.name" getProperty MemberReference MSG_VERBOSE log	0
MethodDeclaration Modifier public write FormalParameter ReferenceType Element root FormalParameter ReferenceType OutputStream out IOException LocalVariableDeclaration ReferenceType Writer VariableDeclarator wri ClassCreator ReferenceType OutputStreamWriter MemberReference out Literal "UTF8" StatementExpression MethodInvocation MemberReference wri StatementExpression MethodInvocation MemberReference root MemberReference wri Literal 0 Literal " " write StatementExpression MethodInvocation wri flush	0
MethodDeclaration Modifier public FormalParameter ReferenceType Throwable exception LocalVariableDeclaration ReferenceType BuildEvent VariableDeclarator event ClassCreator ReferenceType BuildEvent This StatementExpression MethodInvocation event MemberReference exception LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator listener MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference listener ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference listener	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation qualifiedName Literal '.' Literal '_' replace	0
MethodDeclaration Modifier private randomiseBlock LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator inUse This MemberReference data MemberReference inUse LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator block This MemberReference data MemberReference block LocalVariableDeclaration Modifier final BasicType int VariableDeclarator lastShadow This MemberReference last ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 256 BinaryOperation >= MemberReference -- i Literal 0 StatementExpression Assignment MemberReference ArraySelector MemberReference i inUse Literal false = LocalVariableDeclaration BasicType int VariableDeclarator rNToGo Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator rTPos Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator j Literal 1 BinaryOperation <= MemberReference i MemberReference lastShadow Assignment MemberReference i MemberReference j = MemberReference ++ j BlockStatement IfStatement BinaryOperation == MemberReference rNToGo Literal 0 BlockStatement StatementExpression Assignment MemberReference rNToGo Cast BasicType char MemberReference BZip2Constants ArraySelector MemberReference rTPos rNums = IfStatement BinaryOperation == MemberReference ++ rTPos Literal 512 BlockStatement StatementExpression Assignment MemberReference rTPos Literal 0 = StatementExpression MemberReference -- rNToGo StatementExpression Assignment MemberReference ArraySelector MemberReference j block TernaryExpression BinaryOperation == MemberReference rNToGo Literal 1 Literal 1 Literal 0 ^= StatementExpression Assignment MemberReference ArraySelector BinaryOperation & MemberReference ArraySelector MemberReference j block Literal 0xff inUse Literal true = StatementExpression Assignment This MemberReference Literal true =	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation helper MethodInvocation Literal "ANT"	1
MethodDeclaration Modifier public static ReferenceType String IfStatement MethodInvocation JavaEnvUtils BlockStatement ReturnStatement MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean skip ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the " Literal attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public setSummary FormalParameter BasicType boolean summary StatementExpression Assignment This MemberReference summary MemberReference summary =	0
MethodDeclaration Modifier public FormalParameter ReferenceType name StatementExpression Assignment MemberReference MemberReference name =	0
MethodDeclaration Modifier public ReferenceType Enumeration selectorElements ReturnStatement MethodInvocation fileset selectorElements	0
MethodDeclaration Modifier private validate LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 IfStatement BinaryOperation != MemberReference classname Literal null BlockStatement StatementExpression MemberReference ++ IfStatement BinaryOperation != MemberReference resource Literal null BlockStatement StatementExpression MemberReference ++ IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "One of classname or resource must be specified" IfStatement BinaryOperation > MemberReference Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal one of classname or resource be specified" IfStatement BinaryOperation == MemberReference property Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No property	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType other IfStatement BinaryOperation != MethodInvocation size MethodInvocation size BlockStatement ReturnStatement Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator me Cast ReferenceType UnknownElement MethodInvocation MemberReference i get LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator o Cast ReferenceType UnknownElement MethodInvocation MemberReference i get IfStatement MethodInvocation ! me MemberReference o BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType Commandline FormalParameter ReferenceType Commandline cmd FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator sourcepath Literal null IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference sourcepath MemberReference = BlockStatement StatementExpression Assignment MemberReference sourcepath MemberReference src = LocalVariableDeclaration ReferenceType String VariableDeclarator memoryParameterPrefix TernaryExpression MethodInvocation assumeJava11 Literal Literal IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation ! attributes BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + Literal fork is ignoring " Literal MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + BinaryOperation + MemberReference memoryParameterPrefix Literal "ms" MemberReference setValue createArgument IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation ! attributes BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + Literal fork is ignoring " Literal MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + BinaryOperation + MemberReference memoryParameterPrefix Literal MemberReference setValue createArgument IfStatement MethodInvocation attributes BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-nowarn" setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement BinaryOperation != MemberReference destDir Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference destDir createArgument StatementExpression MethodInvocation cmd MethodInvocation Literal "-classpath" setValue createArgument IfStatement MethodInvocation assumeJava11 BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator cp ClassCreator ReferenceType MemberReference project LocalVariableDeclaration ReferenceType VariableDeclarator bp MethodInvocation IfStatement BinaryOperation > MethodInvocation bp size Literal 0 BlockStatement StatementExpression MethodInvocation cp MemberReference bp append IfStatement BinaryOperation != MemberReference extdirs Literal null BlockStatement StatementExpression MethodInvocation cp MemberReference extdirs StatementExpression MethodInvocation cp MemberReference classpath append StatementExpression MethodInvocation cp MemberReference sourcepath append StatementExpression MethodInvocation cmd MethodInvocation MemberReference cp setPath createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference classpath setPath createArgument IfStatement BinaryOperation > MethodInvocation sourcepath size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-sourcepath" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference sourcepath setPath createArgument IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference target setValue createArgument LocalVariableDeclaration ReferenceType VariableDeclarator bp MethodInvocation IfStatement BinaryOperation > MethodInvocation bp size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference bp setPath createArgument IfStatement BinaryOperation && BinaryOperation != MemberReference extdirs Literal null BinaryOperation > MethodInvocation extdirs size Literal 0 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference extdirs setPath createArgument IfStatement BinaryOperation != MemberReference encoding Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference encoding setValue createArgument IfStatement MemberReference debug BlockStatement IfStatement BinaryOperation && MemberReference MethodInvocation ! assumeJava11 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator debugLevel MethodInvocation attributes IfStatement BinaryOperation != MemberReference debugLevel Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + Literal MemberReference debugLevel setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MemberReference BlockStatement IfStatement MethodInvocation assumeJava11 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument IfStatement MethodInvocation assumeJava12 BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument BlockStatement StatementExpression MethodInvocation attributes BinaryOperation + Literal attribute is not supported by the " Literal compiler" MemberReference Project MSG_WARN log IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal setValue createArgument StatementExpression MethodInvocation MemberReference cmd ReturnStatement MemberReference cmd	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation sysProperties MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException StatementExpression MethodInvocation Literal Literal cause" Literal attribute must be expectSpecificBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType File params StatementExpression MethodInvocation MemberReference params	0
MethodDeclaration Modifier private writeManifest FormalParameter Modifier final ReferenceType Manifest manifest IOException LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator output Literal null TryStatement StatementExpression Assignment MemberReference output ClassCreator ReferenceType FileOutputStream MemberReference destFile = StatementExpression MethodInvocation manifest MemberReference output write StatementExpression MethodInvocation output flush IfStatement BinaryOperation != Literal null MemberReference output BlockStatement TryStatement StatementExpression MethodInvocation output close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file BuildException IfStatement MethodInvocation ! file exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "File " MemberReference file Literal " does not exist." LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null TryStatement IfStatement BinaryOperation == This MemberReference encoding Literal null BlockStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MemberReference file = BlockStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MemberReference file This MemberReference encoding = StatementExpression Assignment MemberReference value MethodInvocation FileUtils MemberReference reader readFully = CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException MemberReference ex StatementExpression MethodInvocation FileUtils MemberReference reader close	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal ";"	0
MethodDeclaration Modifier public FormalParameter ReferenceType String res StatementExpression Assignment This MemberReference resource MemberReference res =	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType Project project FormalParameter ReferenceType URL antlibUrl FormalParameter ReferenceType String uri TryStatement StatementExpression MethodInvocation antlibUrl MethodInvocation connect openConnection CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unable to find " MemberReference antlibUrl MemberReference ex LocalVariableDeclaration ReferenceType ComponentHelper VariableDeclarator helper MethodInvocation ComponentHelper MemberReference project getComponentHelper StatementExpression MethodInvocation helper MemberReference uri TryStatement LocalVariableDeclaration ReferenceType ProjectHelper2 VariableDeclarator parser ClassCreator ReferenceType ProjectHelper2 LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator ue MethodInvocation parser MemberReference project MemberReference antlibUrl IfStatement MethodInvocation ! ue getTag BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unexpected tag " MethodInvocation ue getTag Literal " expecting " MemberReference MethodInvocation ue getLocation LocalVariableDeclaration ReferenceType VariableDeclarator antlib ClassCreator ReferenceType StatementExpression MethodInvocation antlib MemberReference project setProject StatementExpression MethodInvocation antlib MethodInvocation ue getLocation setLocation StatementExpression MethodInvocation antlib Literal setTaskName StatementExpression MethodInvocation antlib init StatementExpression MethodInvocation ue MemberReference antlib ReturnStatement MemberReference antlib StatementExpression MethodInvocation helper	1
MethodDeclaration Modifier protected FormalParameter ReferenceType command IfStatement MemberReference BlockStatement StatementExpression MethodInvocation command Literal IfStatement MemberReference BlockStatement StatementExpression MethodInvocation command Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public static BasicType int getValue FormalParameter BasicType byte bytes FormalParameter BasicType int offset LocalVariableDeclaration BasicType int VariableDeclarator value BinaryOperation & BinaryOperation << MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 bytes Literal 8 Literal StatementExpression Assignment MemberReference value BinaryOperation & MemberReference ArraySelector MemberReference offset bytes Literal 0xFF += ReturnStatement MemberReference value	1
MethodDeclaration Modifier public BasicType int read IOException IfStatement MemberReference eof BlockStatement ReturnStatement MemberReference EOF LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation IfStatement BinaryOperation == MemberReference result MemberReference EOF BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference result MethodInvocation = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public synchronized ReferenceType InputStream getInputStream ReturnStatement MemberReference inputStream	0
MethodDeclaration Modifier public synchronized add FormalParameter ReferenceType ResourceCollection c IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation w MemberReference c add	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Source resolve FormalParameter ReferenceType String href FormalParameter ReferenceType String base TransformerException IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference href MemberReference base resolve StatementExpression MethodInvocation dieOnCircularReference LocalVariableDeclaration ReferenceType SAXSource VariableDeclarator source Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation MemberReference href StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal '" MemberReference uri Literal "' with '" MemberReference base Literal "'" MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference source Cast ReferenceType SAXSource MethodInvocation MethodInvocation MemberReference uri MemberReference base resolve getCatalogResolver = IfStatement BinaryOperation == MemberReference source Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "No matching catalog entry found, parser will use: '" MemberReference href Literal "'" MemberReference Project MSG_DEBUG log StatementExpression Assignment MemberReference source ClassCreator ReferenceType SAXSource = LocalVariableDeclaration ReferenceType URL VariableDeclarator baseURL Literal null TryStatement IfStatement BinaryOperation == MemberReference base Literal null BlockStatement StatementExpression Assignment MemberReference baseURL MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject getFileURL = BlockStatement StatementExpression Assignment MemberReference baseURL ClassCreator ReferenceType URL MemberReference base = LocalVariableDeclaration ReferenceType URL VariableDeclarator url TernaryExpression BinaryOperation == MethodInvocation uri length Literal 0 MemberReference baseURL ClassCreator ReferenceType URL MemberReference baseURL MemberReference uri StatementExpression MethodInvocation source ClassCreator ReferenceType InputSource MethodInvocation url toString CatchClause CatchClauseParameter MalformedURLException ex StatementExpression MethodInvocation source ClassCreator ReferenceType InputSource MemberReference uri StatementExpression MethodInvocation MemberReference source setEntityResolver ReturnStatement MemberReference source	1
MethodDeclaration Modifier public execute BuildException StatementExpression Assignment MemberReference isCondition Literal false = LocalVariableDeclaration BasicType boolean VariableDeclarator value MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference TernaryExpression MemberReference value MethodInvocation Boolean.TRUE toString MethodInvocation toString setNewProperty getProject	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation instanceof MemberReference o ReferenceType ZipLong BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation == MemberReference value Cast ReferenceType ZipLong MemberReference o	1
MethodDeclaration Modifier private IOException StatementExpression Assignment This MemberReference This MemberReference crc MethodInvocation = StatementExpression Assignment This MemberReference BinaryOperation | BinaryOperation << This MemberReference Literal 1 BinaryOperation >>> This MemberReference Literal 31 = StatementExpression Assignment This MemberReference This MemberReference ^= IfStatement BinaryOperation == This MemberReference last Literal - 1 BlockStatement ReturnStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation This MemberReference IfStatement This MemberReference BlockStatement StatementExpression MethodInvocation Literal 1 Literal 1 bsW BlockStatement StatementExpression MethodInvocation Literal 1 Literal 0 bsW StatementExpression MethodInvocation	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator specificMessage BinaryOperation + Literal " Literal "not in with LocalVariableDeclaration BasicType char VariableDeclarator c ArrayInitializer Literal 'a' Literal 'b' Literal 'c' LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator target ClassCreator ReferenceType StringBuffer Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference c length MemberReference ++ i BlockStatement StatementExpression MethodInvocation target BinaryOperation - MethodInvocation target length Literal 1 MemberReference ArraySelector MemberReference i c StatementExpression MethodInvocation MethodInvocation target toString Literal is required to fail MemberReference specificMessage expectSpecificBuildException	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String ReturnStatement MethodInvocation Literal '.' Literal '/' replace	0
MethodDeclaration Modifier protected init FormalParameter ReferenceType String args Exception ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i args equalsIgnoreCase BlockStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference ArraySelector MemberReference ++ i args LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties StatementExpression MethodInvocation props MemberReference fis load StatementExpression MethodInvocation fis close StatementExpression MethodInvocation MemberReference props init IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i args equalsIgnoreCase BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j MemberReference ++ i BinaryOperation < MemberReference j MemberReference args length MemberReference ++ j BlockStatement IfStatement MemberReference ArraySelector MemberReference j MethodInvocation Literal "-" startsWith args BreakStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference j args IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i args equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MethodInvocation Integer MemberReference ArraySelector MemberReference ++ i args parseInt IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i args equalsIgnoreCase BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference ++ i args setHost IfStatement Literal MethodInvocation MemberReference ArraySelector MemberReference i args equalsIgnoreCase BlockStatement StatementExpression MethodInvocation Literal true	1
MethodDeclaration Modifier protected ReferenceType Label ReturnStatement This MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation || ClassReference MethodInvocation MemberReference bean isAssignableFrom ReferenceType ClassReference MethodInvocation MemberReference bean isAssignableFrom ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType dtd BuildException IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference dtd addElement getElements StatementExpression MethodInvocation Literal false setChecked	1
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal single argument resource Literal " are supported" StatementExpression Assignment MemberReference src Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator =	0
MethodDeclaration Modifier protected ReferenceType Pattern getCompiledPattern FormalParameter BasicType int options BuildException TryStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation compiler MemberReference pattern MethodInvocation MemberReference options compile ReturnStatement MemberReference p CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public static ReferenceType String fromURI FormalParameter ReferenceType String uri LocalVariableDeclaration ReferenceType Class VariableDeclarator uriClazz Literal null TryStatement StatementExpression Assignment MemberReference uriClazz MethodInvocation Class Literal "java.net.URI" forName = CatchClause CatchClauseParameter ClassNotFoundException cnfe IfStatement BinaryOperation && BinaryOperation != MemberReference uriClazz Literal null MethodInvocation uri Literal "file:/" startsWith BlockStatement TryStatement LocalVariableDeclaration ReferenceType java ReferenceType lang ReferenceType reflect ReferenceType Method VariableDeclarator MethodInvocation uriClazz Literal "create" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod LocalVariableDeclaration ReferenceType Object VariableDeclarator uriObj MethodInvocation Literal null ArrayCreator ReferenceType Object ArrayInitializer MemberReference uri invoke LocalVariableDeclaration ReferenceType java ReferenceType lang ReferenceType reflect ReferenceType Constructor VariableDeclarator ClassReference MethodInvocation ArrayCreator ReferenceType Class ArrayInitializer MemberReference uriClazz getConstructor ReferenceType File LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType File MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference uriObj newInstance ReturnStatement MethodInvocation f getAbsolutePath CatchClause CatchClauseParameter java.lang.reflect.InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator e2 MethodInvocation e getTargetException IfStatement BinaryOperation instanceof MemberReference e2 ReferenceType IllegalArgumentException BlockStatement ThrowStatement Cast ReferenceType IllegalArgumentException MemberReference e2 BlockStatement StatementExpression MethodInvocation e2 printStackTrace CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null TryStatement StatementExpression Assignment MemberReference url ClassCreator ReferenceType URL MemberReference uri = CatchClause CatchClauseParameter MalformedURLException IfStatement BinaryOperation || BinaryOperation == MemberReference url Literal null Literal ! "file" BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal only handle valid file: LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MethodInvocation url getHost IfStatement BinaryOperation > MethodInvocation buf length Literal 0 BlockStatement StatementExpression MethodInvocation buf MethodInvocation Literal 0 MemberReference File separatorChar insert Literal 0 MemberReference File separatorChar insert LocalVariableDeclaration ReferenceType String VariableDeclarator file MethodInvocation url getFile LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation file Literal '?' indexOf StatementExpression MethodInvocation buf TernaryExpression BinaryOperation < MemberReference Literal 0 MemberReference file MethodInvocation file Literal 0 MemberReference substring append StatementExpression Assignment MemberReference uri MethodInvocation buf MethodInvocation Literal '/' MemberReference File separatorChar replace toString = IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference File pathSeparatorChar Literal ';' MethodInvocation uri Literal "\\" startsWith BinaryOperation > MethodInvocation uri length Literal 2 MethodInvocation Character MethodInvocation uri Literal 1 charAt isLetter BinaryOperation > MethodInvocation uri Literal ':' lastIndexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference uri MethodInvocation uri Literal 1 substring = LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal null TryStatement StatementExpression Assignment MemberReference path MethodInvocation MemberReference uri = LocalVariableDeclaration ReferenceType String VariableDeclarator cwd MethodInvocation System Literal "user.dir" getProperty LocalVariableDeclaration BasicType int VariableDeclarator posi MethodInvocation cwd Literal ":" indexOf IfStatement BinaryOperation && BinaryOperation > MemberReference posi Literal 0 MethodInvocation path MemberReference File separator startsWith BlockStatement StatementExpression Assignment MemberReference path BinaryOperation + MethodInvocation cwd Literal 0 BinaryOperation + MemberReference posi Literal 1 substring MemberReference path = CatchClause CatchClauseParameter UnsupportedEncodingException exc ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Could not convert URI to path: " MethodInvocation exc getMessage ReturnStatement MemberReference path	1
MethodDeclaration Modifier public ReferenceType PlanarImage executeDrawOperation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator image Literal null StatementExpression MethodInvocation MemberReference image performScale ReturnStatement MemberReference image ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference overwrite MemberReference =	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String filename IOException LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType FileReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType FileReader MethodInvocation MethodInvocation MemberReference filename getProject = StatementExpression Assignment MemberReference result MethodInvocation FileUtils MemberReference reader readFully = CatchClause CatchClauseParameter IOException eyeOhEx StatementExpression MethodInvocation FileUtils MemberReference reader close ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType String enc StatementExpression MethodInvocation StatementExpression Assignment MemberReference encoding MemberReference enc =	0
MethodDeclaration Modifier public setProperties FormalParameter ReferenceType Properties props StatementExpression Assignment This MemberReference props MemberReference props =	0
MethodDeclaration Modifier public ReferenceType String getClassname ReturnStatement MemberReference classname	0
MethodDeclaration Modifier public BasicType int getLineNumber ReturnStatement MemberReference lineNumber	0
MethodDeclaration Modifier public ReferenceType createClasspath ReturnStatement MethodInvocation helper createClasspath	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType Property getSecondaryDescriptor FormalParameter ReferenceType Type t LocalVariableDeclaration ReferenceType Property VariableDeclarator properties MethodInvocation t getProperties ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference properties length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p MemberReference ArraySelector MemberReference i properties IfStatement BinaryOperation && MethodInvocation p MethodInvocation ! p BlockStatement ReturnStatement MemberReference p ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType String subject StatementExpression Assignment This MemberReference subject MemberReference subject =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator logger ClassCreator ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference logger getProject StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject StatementExpression MethodInvocation Literal " " MemberReference logger assertEquals	0
MethodDeclaration * determine the to use if the is set and the * file * @return 0 for a number */ Modifier protected BasicType long LocalVariableDeclaration BasicType long VariableDeclarator Literal 0 IfStatement BinaryOperation && BinaryOperation && MemberReference BinaryOperation != MemberReference dest Literal null MethodInvocation dest exists BlockStatement StatementExpression Assignment MemberReference MethodInvocation dest lastModified = BlockStatement StatementExpression Assignment MemberReference Literal 0 = ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator data Literal LocalVariableDeclaration ReferenceType Vector VariableDeclarator res MethodInvocation StringUtils MemberReference data Literal ',' split StatementExpression MethodInvocation Literal 4 MethodInvocation res size assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 0 elementAt assertEquals StatementExpression MethodInvocation Literal MethodInvocation res Literal 1 elementAt assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation res Literal 2 elementAt assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation res Literal 3 elementAt assertEquals	0
MethodDeclaration * @see */ Modifier public setMessageOutputLevel FormalParameter BasicType int level IfStatement BinaryOperation && BinaryOperation >= MemberReference level MemberReference Project MSG_ERR BinaryOperation <= MemberReference level MemberReference Project MSG_DEBUG BlockStatement StatementExpression Assignment MemberReference loglevel MemberReference level =	1
MethodDeclaration Modifier public FormalParameter ReferenceType String keys IfStatement BinaryOperation && BinaryOperation != MemberReference keys Literal null BinaryOperation > MethodInvocation keys length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tok ClassCreator ReferenceType StringTokenizer MemberReference keys This MemberReference sep Literal false WhileStatement MethodInvocation tok hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation tok MethodInvocation trim nextToken LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator ClassCreator ReferenceType StringTokenizer MemberReference token Literal "=" Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation nextToken LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation nextToken StatementExpression MethodInvocation replacements MemberReference name MemberReference value put	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType String includes StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MemberReference includes setIncludes	0
MethodDeclaration Modifier public ReferenceType DirectoryScanner getDirectoryScanner FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getDirectoryScanner MemberReference p IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No directory specified for IfStatement MethodInvocation ! dir exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation dir getAbsolutePath Literal " not found." IfStatement MethodInvocation ! dir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation dir getAbsolutePath Literal " is not a directory." LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation MemberReference ds MemberReference p StatementExpression MethodInvocation ds ReturnStatement MemberReference ds	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String alias StatementExpression Assignment This MemberReference alias MemberReference alias =	0
MethodDeclaration Modifier private BuildException IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must a path to LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference File separator LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference File pathSeparator IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference TernaryExpression MemberReference Literal ";" Literal ":" = StatementExpression Assignment MemberReference TernaryExpression MemberReference Literal "\\" Literal "/" = IfStatement BinaryOperation != MemberReference pathSep Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference pathSep = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference pathSep MemberReference = StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Commandline ReferenceType createJvmarg ReturnStatement MethodInvocation cmd	0
MethodDeclaration Modifier public ReferenceType InputStream IOException LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator LocalVariableDeclaration ReferenceType Writer VariableDeclarator writer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator LocalVariableDeclaration ReferenceType Provider VariableDeclarator provider StatementExpression Assignment MemberReference ClassCreator ReferenceType ByteArrayOutputStream = StatementExpression Assignment MemberReference writer ClassCreator ReferenceType OutputStreamWriter MemberReference Literal "UTF-8" = StatementExpression Assignment MemberReference MethodInvocation iterator = WhileStatement MethodInvocation hasNext BlockStatement StatementExpression Assignment MemberReference provider Cast ReferenceType Provider MethodInvocation next = StatementExpression MethodInvocation writer MethodInvocation provider getClassName write StatementExpression MethodInvocation writer Literal "\n" write StatementExpression MethodInvocation writer close ReturnStatement ClassCreator ReferenceType ByteArrayInputStream MethodInvocation toByteArray	0
MethodDeclaration Modifier public FormalParameter ReferenceType File value StatementExpression Assignment MemberReference toDir MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference fromfile	0
MethodDeclaration Modifier public ReferenceType createClasspath IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation classpath createPath	0
MethodDeclaration Modifier private ReferenceType JUnitTest FormalParameter ReferenceType String classname LocalVariableDeclaration ReferenceType JUnitTest VariableDeclarator test ClassCreator ReferenceType JUnitTest StatementExpression MethodInvocation test MemberReference classname setName StatementExpression MethodInvocation test This MemberReference StatementExpression MethodInvocation test This MemberReference StatementExpression MethodInvocation test This MemberReference StatementExpression MethodInvocation test This MemberReference fork StatementExpression MethodInvocation test This MemberReference StatementExpression MethodInvocation test This MemberReference StatementExpression MethodInvocation test This MemberReference destDir StatementExpression MethodInvocation test MemberReference StatementExpression MethodInvocation test MemberReference LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator list This MemberReference MethodInvocation elements WhileStatement MethodInvocation list hasMoreElements BlockStatement StatementExpression MethodInvocation test Cast ReferenceType FormatterElement MethodInvocation list nextElement ReturnStatement MemberReference test	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal Literal Literal	0
MethodDeclaration Modifier public move FormalParameter ReferenceType File from FormalParameter ReferenceType File to BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal Literal MethodInvocation from getPath MethodInvocation to getPath LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args IfStatement BinaryOperation != MethodInvocation res getStatus Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation res	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator MyTask ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation MyTask setUp StatementExpression MethodInvocation MyTask test StatementExpression MethodInvocation MyTask tearDown	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ImageOperation instr StatementExpression MethodInvocation MemberReference instr	0
MethodDeclaration Modifier public FormalParameter ReferenceType CrLf attr StatementExpression MethodInvocation filter MethodInvocation MethodInvocation attr getValue newInstance	0
MethodDeclaration Modifier public static BasicType long FormalParameter BasicType byte header FormalParameter BasicType int offset FormalParameter BasicType int length LocalVariableDeclaration BasicType long VariableDeclarator result Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator stillPadding Literal true LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference offset MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference offset BinaryOperation < MemberReference i MemberReference end MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i header Literal 0 BlockStatement BreakStatement IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference i header Cast BasicType byte Literal ' ' BinaryOperation == MemberReference ArraySelector MemberReference i header Literal '0' BlockStatement IfStatement MemberReference stillPadding BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i header Cast BasicType byte Literal ' ' BlockStatement BreakStatement StatementExpression Assignment MemberReference stillPadding Literal false = StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation << MemberReference result Literal 3 BinaryOperation - MemberReference ArraySelector MemberReference i header Literal '0' = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation	1
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is required" expectBuildException	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The and " Literal cannot both be specified" StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String methodName StatementExpression Assignment This MemberReference methodName MemberReference methodName =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b Literal	0
MethodDeclaration Modifier private BasicType long destClassesModified FormalParameter ReferenceType File destDir LocalVariableDeclaration ReferenceType String VariableDeclarator classnames MethodInvocation LocalVariableDeclaration BasicType long VariableDeclarator destClassesModified ClassCreator MethodInvocation ReferenceType Date LocalVariableDeclaration BasicType boolean VariableDeclarator allClassesFound Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classnames length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation Literal '.' MemberReference File separatorChar replace classnames Literal ".class" LocalVariableDeclaration ReferenceType File VariableDeclarator classFile ClassCreator ReferenceType File MemberReference destDir MemberReference StatementExpression MethodInvocation ejbFiles MemberReference MemberReference classFile put StatementExpression Assignment MemberReference allClassesFound BinaryOperation && MemberReference allClassesFound MethodInvocation classFile exists = IfStatement MemberReference allClassesFound BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation classFile lastModified StatementExpression Assignment MemberReference destClassesModified MethodInvocation Math MemberReference destClassesModified MemberReference min = ReturnStatement TernaryExpression MemberReference allClassesFound MemberReference destClassesModified Literal - 1	1
MethodDeclaration Modifier public FormalParameter ReferenceType File srcFile StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference srcFile	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation server execute CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference caught MemberReference e = StatementExpression MethodInvocation e printStackTrace	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement BinaryOperation != MemberReference union Literal null BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType ArchiveScanner LocalVariableDeclaration ReferenceType VariableDeclarator zs ClassCreator ReferenceType ReturnStatement MemberReference zs	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType user StatementExpression MethodInvocation MemberReference user addElement	0
MethodDeclaration Modifier public IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file Cast ReferenceType File MethodInvocation e nextElement IfStatement BinaryOperation && MethodInvocation file exists BinaryOperation == MethodInvocation file length Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal empty output file " MemberReference file log StatementExpression MethodInvocation file delete	0
MethodDeclaration Modifier public flush IOException IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out flush	1
MethodDeclaration Modifier protected ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator command ClassCreator ReferenceType This MethodInvocation getTaskName MethodInvocation getExecutable ReturnStatement MemberReference command	1
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference stream ClassCreator ReferenceType =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String refid StatementExpression Assignment This MemberReference refid MemberReference refid =	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration BasicType int ReturnStatement MemberReference ~	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation Literal getFile StatementExpression MethodInvocation liaison MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator out ClassCreator ReferenceType File Literal LocalVariableDeclaration ReferenceType File VariableDeclarator in MethodInvocation Literal getFile TryStatement StatementExpression MethodInvocation liaison Literal Literal addParam StatementExpression MethodInvocation liaison MemberReference in MemberReference out transform StatementExpression MethodInvocation out delete	0
MethodDeclaration Modifier public IOException IfStatement MethodInvocation ! Literal hasScript ReturnStatement StatementExpression MethodInvocation Literal Literal Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setMessage FormalParameter ReferenceType String msg StatementExpression Assignment This MemberReference message MemberReference msg =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String user StatementExpression SuperMethodInvocation MemberReference user	0
MethodDeclaration Modifier public FormalParameter BasicType int col StatementExpression Assignment MemberReference column MemberReference col =	0
MethodDeclaration Modifier public ReferenceType Object nextElement NoSuchElementException IfStatement MethodInvocation ! hasMoreElements BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException Literal LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation line toString MethodInvocation eolStr Literal 0 substring StatementExpression MethodInvocation nextLine ReturnStatement MemberReference	1
MethodDeclaration Modifier public IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal loader has not been IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference MethodInvocation getContextClassLoader = LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator loader This IfStatement BinaryOperation && BinaryOperation != MemberReference project Literal null Literal MethodInvocation MethodInvocation project Literal getProperty equals BlockStatement StatementExpression Assignment MemberReference loader This MethodInvocation getClass MethodInvocation getClassLoader = StatementExpression MethodInvocation MemberReference loader StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String parentUri FormalParameter ReferenceType String elementName IfStatement MethodInvocation parentUri MemberReference ProjectHelper ANT_CORE_URI equals BlockStatement StatementExpression Assignment MemberReference parentUri Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation ProjectHelper MemberReference elementName IfStatement MethodInvocation uri MemberReference ProjectHelper ANT_CORE_URI equals BlockStatement StatementExpression Assignment MemberReference uri Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation ProjectHelper MemberReference elementName ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation && MethodInvocation nestedCreators MethodInvocation name MemberReference toLowerCase containsKey BinaryOperation || MethodInvocation uri MemberReference parentUri equals Literal MethodInvocation MemberReference uri equals "" MethodInvocation BinaryOperation != MethodInvocation addTypeMethods size Literal 0	1
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal Literal default	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String filename ReturnStatement MethodInvocation MethodInvocation getAbsolutePath MemberReference filename	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation == MethodInvocation MethodInvocation Literal getProperty getProject Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation Literal "unexpected log BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation Literal getProperty getProject Literal " MethodInvocation MethodInvocation Literal getProperty getProject Literal " MethodInvocation getLog assertEquals	0
MethodDeclaration Modifier private ReferenceType getParent ReturnStatement Cast ReferenceType This MethodInvocation getTask	0
MethodDeclaration Modifier public FormalParameter ReferenceType FileSet set StatementExpression MethodInvocation MemberReference set addElement	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setValue createArgument	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType String VariableDeclarator trace MethodInvocation StringUtils MemberReference t ReturnStatement MethodInvocation MemberReference trace	0
MethodDeclaration Modifier public ReferenceType File ReturnStatement MemberReference outputFile	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Resource getResource FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType FileResource MethodInvocation MemberReference name	1
MethodDeclaration Modifier final protected ReferenceType getServer ReturnStatement This MemberReference server	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference name	0
MethodDeclaration Modifier protected ReferenceType FTPClient ReturnStatement MemberReference client	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Process p Exception LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation p waitFor IfStatement BinaryOperation != MemberReference Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator err MethodInvocation MemberReference p IfStatement BinaryOperation > MethodInvocation err length Literal 0 BlockStatement StatementExpression MethodInvocation System.err Literal println StatementExpression MethodInvocation System.err MemberReference err println ReturnStatement MemberReference	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public BasicType boolean sameDefinition FormalParameter ReferenceType AntTypeDefinition other FormalParameter ReferenceType Project project IfStatement SuperMethodInvocation ! MemberReference other MemberReference project sameDefinition BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType MyAntTypeDefinition VariableDeclarator otherDef Cast ReferenceType MyAntTypeDefinition MemberReference other ReturnStatement MethodInvocation macroDef MemberReference otherDef macroDef sameDefinition	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier protected FormalParameter ReferenceType RetryHandler h FormalParameter ReferenceType Retryable r FormalParameter ReferenceType String filename IOException StatementExpression Assignment This MemberReference This MemberReference = StatementExpression SuperMethodInvocation MemberReference h MemberReference r MemberReference filename	0
MethodDeclaration Modifier public ReferenceType BaseSelector getInstance ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public FormalParameter ReferenceType classpath StatementExpression Assignment This MemberReference classpath MemberReference classpath =	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean b StatementExpression Assignment MemberReference tie MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType fd StatementExpression Assignment MemberReference type MemberReference fd =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String pattern StatementExpression Assignment This MemberReference pattern MemberReference pattern =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator publicId Literal doc LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator path1 BinaryOperation + MethodInvocation project MethodInvocation toString Literal LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd MemberReference publicId StatementExpression MethodInvocation dtd MemberReference setLocation StatementExpression MethodInvocation catalog MemberReference dtd LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project BinaryOperation + Literal MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator uri Literal LocalVariableDeclaration ReferenceType String VariableDeclarator Literal LocalVariableDeclaration ReferenceType String VariableDeclarator path2 BinaryOperation + MethodInvocation project MethodInvocation toString Literal LocalVariableDeclaration ReferenceType VariableDeclarator entity ClassCreator ReferenceType StatementExpression MethodInvocation entity MemberReference uri StatementExpression MethodInvocation entity MemberReference setLocation StatementExpression MethodInvocation catalog MemberReference entity addEntity LocalVariableDeclaration ReferenceType File VariableDeclarator xmlFile MethodInvocation project BinaryOperation + Literal MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference project MemberReference path1 StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference project MemberReference path2 append StatementExpression MethodInvocation catalog MemberReference TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog MemberReference publicId Literal resolveEntity StatementExpression MethodInvocation MemberReference result assertNotNull LocalVariableDeclaration ReferenceType String VariableDeclarator resultStr ClassCreator MethodInvocation getFile ReferenceType URL MethodInvocation result getSystemId StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference resultStr endsWith MemberReference assertTrue CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail TryStatement LocalVariableDeclaration ReferenceType Source VariableDeclarator result MethodInvocation catalog MemberReference uri Literal null resolve StatementExpression MethodInvocation MemberReference result assertNotNull LocalVariableDeclaration ReferenceType String VariableDeclarator resultStr ClassCreator MethodInvocation getFile ReferenceType URL MethodInvocation result getSystemId StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference resultStr endsWith MemberReference xmlFile assertTrue CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail	0
MethodDeclaration Modifier private static FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal "java.io.tmpdir" getProperty IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation out Literal "Warning: is undefined" println ReturnStatement StatementExpression MethodInvocation out BinaryOperation + Literal dir is " MemberReference println LocalVariableDeclaration ReferenceType File VariableDeclarator tempDirectory ClassCreator ReferenceType File MemberReference IfStatement MethodInvocation ! tempDirectory exists BlockStatement StatementExpression MethodInvocation out BinaryOperation + Literal directory does not " MemberReference println ReturnStatement LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis LocalVariableDeclaration ReferenceType File VariableDeclarator tempFile Literal null LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fileout Literal null TryStatement StatementExpression Assignment MemberReference tempFile MethodInvocation File Literal Literal "txt" MemberReference tempDirectory createTempFile = StatementExpression Assignment MemberReference fileout ClassCreator ReferenceType FileOutputStream MemberReference tempFile = LocalVariableDeclaration BasicType byte VariableDeclarator buffer ArrayCreator BasicType byte MemberReference KILOBYTE ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement StatementExpression MethodInvocation fileout MemberReference buffer write StatementExpression MethodInvocation fileout close StatementExpression Assignment MemberReference fileout Literal null = LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation tempFile lastModified StatementExpression MethodInvocation tempFile delete StatementExpression MethodInvocation out Literal dir is println LocalVariableDeclaration BasicType long VariableDeclarator drift BinaryOperation - MemberReference MemberReference now StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal dir with system clock is " MemberReference drift Literal " ms" println IfStatement BinaryOperation > MethodInvocation Math MemberReference drift abs MemberReference BlockStatement StatementExpression MethodInvocation out Literal "Warning: clock drift a println CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation MemberReference e StatementExpression MethodInvocation out BinaryOperation + Literal "Failed to create a temporary file in the temp dir " MemberReference println StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + Literal "File " MemberReference tempFile Literal " could not be to" println StatementExpression MethodInvocation FileUtils MemberReference fileout close IfStatement BinaryOperation && BinaryOperation != MemberReference tempFile Literal null MethodInvocation tempFile exists BlockStatement StatementExpression MethodInvocation tempFile delete	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation Literal " compressed " MethodInvocation MethodInvocation toString getResource	1
MethodDeclaration Modifier protected compile LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation IfStatement BinaryOperation > MemberReference compileList length Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Compiling " MemberReference compileList length Literal " source file" TernaryExpression BinaryOperation == MemberReference compileList length Literal 1 Literal "" Literal "s" TernaryExpression BinaryOperation != MemberReference destDir Literal null BinaryOperation + Literal " to " MemberReference destDir Literal "" log IfStatement MemberReference listFiles BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference compileList length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MemberReference ArraySelector MemberReference i MethodInvocation getAbsolutePath compileList StatementExpression MethodInvocation MemberReference filename log LocalVariableDeclaration ReferenceType CompilerAdapter VariableDeclarator adapter MethodInvocation MemberReference This StatementExpression MethodInvocation adapter This IfStatement MethodInvocation ! adapter execute BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference FAIL_MSG MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation MemberReference FAIL_MSG MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public ReferenceType FormalParameter Modifier final ReferenceType Extension required IfStatement MethodInvocation ! MethodInvocation required equals BlockStatement ReturnStatement MemberReference LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator requiredSpecificationVersion MethodInvocation required IfStatement BinaryOperation != Literal null MemberReference requiredSpecificationVersion BlockStatement IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference specificationVersion MethodInvocation ! MemberReference specificationVersion MemberReference requiredSpecificationVersion BlockStatement ReturnStatement MemberReference LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator requiredImplementationVendorID MethodInvocation required IfStatement BinaryOperation != Literal null MemberReference requiredImplementationVendorID BlockStatement IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference MethodInvocation ! MemberReference requiredImplementationVendorID equals BlockStatement ReturnStatement MemberReference LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator requiredImplementationVersion MethodInvocation required IfStatement BinaryOperation != Literal null MemberReference requiredImplementationVersion BlockStatement IfStatement BinaryOperation || BinaryOperation == Literal null MemberReference implementationVersion MethodInvocation ! MemberReference implementationVersion MemberReference requiredImplementationVersion BlockStatement ReturnStatement MemberReference ReturnStatement MemberReference	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference name MemberReference value =	0
MethodDeclaration Modifier public ReferenceType Object evaluateScript FormalParameter ReferenceType String execName BuildException StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator m MethodInvocation StatementExpression MethodInvocation MemberReference m IfStatement BinaryOperation == MemberReference engine Literal null BlockStatement ReturnStatement MethodInvocation m MethodInvocation getLanguage MemberReference execName Literal 0 Literal 0 MethodInvocation getScript eval BlockStatement ReturnStatement MethodInvocation engine MemberReference execName Literal 0 Literal 0 MethodInvocation getScript eval CatchClause CatchClauseParameter BSFException be StatementExpression MethodInvocation MemberReference be throwBuildException ReturnStatement Literal null StatementExpression MethodInvocation MemberReference	1
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType ReferenceType VariableDeclarator format MethodInvocation StatementExpression MethodInvocation format Literal setProperty StatementExpression MethodInvocation format Literal StatementExpression MethodInvocation format Literal StatementExpression MethodInvocation Literal StatementExpression MethodInvocation execute LocalVariableDeclaration ReferenceType String VariableDeclarator prop MethodInvocation project Literal getProperty StatementExpression MethodInvocation MemberReference prop assertNotNull	0
MethodDeclaration Modifier public ReferenceType File resolve FormalParameter Modifier final ReferenceType Extension extension FormalParameter Modifier final ReferenceType Project project BuildException IfStatement BinaryOperation == Literal null MemberReference location BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message Literal "No location specified for ThrowStatement ClassCreator ReferenceType BuildException MemberReference message ReturnStatement MethodInvocation project MemberReference location	1
MethodDeclaration Modifier protected checkConfiguration IfStatement MemberReference ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Required attribute group not set in " Literal MethodInvocation getLocation StatementExpression SuperMethodInvocation checkConfiguration	1
MethodDeclaration Modifier public execute BuildException ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation e nextElement StatementExpression MethodInvocation validateAttributes StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String name ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference includes length MemberReference ++ i BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation MemberReference ArraySelector MemberReference i includes MemberReference name MethodInvocation isCaseSensitive MethodInvocation MemberReference name MemberReference ArraySelector MemberReference i includes MethodInvocation MemberReference ArraySelector MemberReference i includes MemberReference name BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Literal executeTarget getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator tmpdir BinaryOperation + MethodInvocation MethodInvocation MethodInvocation getAbsolutePath MethodInvocation MemberReference File separatorChar Literal '/' replace getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal BinaryOperation + MemberReference tmpdir Literal setIncludes StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal BinaryOperation + MemberReference tmpdir Literal ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + MemberReference tmpdir Literal compareFiles	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType PrintStream output StatementExpression Assignment This MemberReference out MemberReference output =	0
MethodDeclaration Modifier public IOException LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType VariableDeclarator stream ClassCreator ReferenceType MemberReference StatementExpression MethodInvocation stream close StatementExpression MethodInvocation stream close	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression Assignment MemberReference startTime MethodInvocation System currentTimeMillis =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal - 1 MethodInvocation MethodInvocation Literal file." indexOf assertEquals StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation BinaryOperation != Literal - 1 MethodInvocation MethodInvocation Literal file." indexOf assertTrue	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r LocalVariableDeclaration BasicType long VariableDeclarator diff BinaryOperation - MethodInvocation r getSize MemberReference size ReturnStatement MethodInvocation when TernaryExpression BinaryOperation == MemberReference diff Literal 0 Literal 0 Cast BasicType int BinaryOperation / MemberReference diff MethodInvocation Math MemberReference diff abs evaluate	1
MethodDeclaration Modifier public testStandaloneCR IOException TryStatement StatementExpression SuperMethodInvocation testStandaloneCR StatementExpression MethodInvocation Literal "Should trigger once fixed. {@since JDK 1.4RC1}" fail CatchClause CatchClauseParameter AssertionFailedError e	1
MethodDeclaration Modifier public ReferenceType Option LocalVariableDeclaration ReferenceType Option VariableDeclarator opt ClassCreator ReferenceType Option StatementExpression MethodInvocation options MemberReference opt add ReturnStatement MemberReference opt	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation Literal log	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType long IfStatement BinaryOperation != MemberReference file Literal null BlockStatement ReturnStatement MethodInvocation file lastModified BlockStatement ReturnStatement Literal - 1	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation value toString	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private FormalParameter ReferenceType Execute exe IfStatement BinaryOperation == MemberReference dir Literal null BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation MethodInvocation getProject = IfStatement BinaryOperation || MethodInvocation ! dir exists MethodInvocation ! dir isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation dir getAbsolutePath Literal " is not a valid directory" MethodInvocation getLocation StatementExpression MethodInvocation exe MemberReference dir setWorkingDirectory	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator thisChar SuperMethodInvocation read IfStatement BinaryOperation == MemberReference normalizedEOL Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator numEOL Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator atEnd Literal false SwitchStatement MemberReference thisChar SwitchStatementCase CTRLZ LocalVariableDeclaration BasicType int VariableDeclarator c SuperMethodInvocation read IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement StatementExpression Assignment MemberReference atEnd Literal true = IfStatement BinaryOperation && MemberReference MemberReference ! previousWasEOL BlockStatement StatementExpression Assignment MemberReference numEOL Literal 1 = StatementExpression MethodInvocation MemberReference thisChar push BlockStatement StatementExpression MethodInvocation MemberReference c push BreakStatement SwitchStatementCase Literal - 1 StatementExpression Assignment MemberReference atEnd Literal true = IfStatement BinaryOperation && MemberReference MemberReference ! previousWasEOL BlockStatement StatementExpression Assignment MemberReference numEOL Literal 1 = BreakStatement SwitchStatementCase Literal '\n' StatementExpression Assignment MemberReference numEOL Literal 1 = BreakStatement SwitchStatementCase Literal '\r' StatementExpression Assignment MemberReference numEOL Literal 1 = LocalVariableDeclaration BasicType int VariableDeclarator c1 SuperMethodInvocation read LocalVariableDeclaration BasicType int VariableDeclarator c2 SuperMethodInvocation read IfStatement BinaryOperation && BinaryOperation == MemberReference c1 Literal '\r' BinaryOperation == MemberReference c2 Literal '\n' BlockStatement IfStatement BinaryOperation == MemberReference c1 Literal '\r' BlockStatement StatementExpression Assignment MemberReference numEOL Literal 2 = StatementExpression MethodInvocation MemberReference c2 push IfStatement BinaryOperation == MemberReference c1 Literal '\n' BlockStatement StatementExpression MethodInvocation MemberReference c2 push BlockStatement StatementExpression MethodInvocation MemberReference c2 push StatementExpression MethodInvocation MemberReference c1 push SwitchStatementCase IfStatement BinaryOperation > MemberReference numEOL Literal 0 BlockStatement WhileStatement BinaryOperation > MemberReference -- numEOL Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference eol push StatementExpression Assignment MemberReference normalizedEOL MemberReference eol length += StatementExpression Assignment MemberReference previousWasEOL Literal true = StatementExpression Assignment MemberReference thisChar MethodInvocation read = IfStatement MemberReference ! atEnd BlockStatement StatementExpression Assignment MemberReference previousWasEOL Literal false = BlockStatement StatementExpression MemberReference -- normalizedEOL ReturnStatement MemberReference thisChar	1
MethodDeclaration Modifier public ReferenceType String getName IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef LocalVariableDeclaration ReferenceType File VariableDeclarator b MethodInvocation ReturnStatement TernaryExpression BinaryOperation == MemberReference b Literal null MethodInvocation MethodInvocation getName getNotNullFile MethodInvocation FILE_UTILS MemberReference b MethodInvocation getNotNullFile	1
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal	0
MethodDeclaration Modifier public ReferenceType Hashtable FormalParameter ReferenceType File viewpath LocalVariableDeclaration ReferenceType String VariableDeclarator args ArrayInitializer Literal MethodInvocation viewpath getAbsolutePath Literal Literal Literal Literal Literal LocalVariableDeclaration ReferenceType VariableDeclarator res MethodInvocation MemberReference args LocalVariableDeclaration ReferenceType Vector VariableDeclarator lines MethodInvocation res LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator all MethodInvocation MemberReference lines toFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator MethodInvocation MemberReference viewpath Literal true LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator keys MethodInvocation keys WhileStatement MethodInvocation keys hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator path MethodInvocation keys nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation all MemberReference path remove IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement MemberReference all	1
MethodDeclaration Modifier private FormalParameter ReferenceType Log log FormalParameter ReferenceType String message FormalParameter BasicType int priority FormalParameter ReferenceType Throwable t LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator tmpOut MemberReference System out LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator tmpErr MemberReference System err StatementExpression MethodInvocation System MemberReference out setOut StatementExpression MethodInvocation System MemberReference err setErr SwitchStatement MemberReference priority SwitchStatementCase MemberReference Project MSG_ERR IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression MethodInvocation log MemberReference message error BlockStatement StatementExpression MethodInvocation log MemberReference message MemberReference t error BreakStatement SwitchStatementCase MemberReference Project MSG_WARN IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression MethodInvocation log MemberReference message warn BlockStatement StatementExpression MethodInvocation log MemberReference message MemberReference t warn BreakStatement SwitchStatementCase MemberReference Project MSG_INFO IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression MethodInvocation log MemberReference message info BlockStatement StatementExpression MethodInvocation log MemberReference message MemberReference t info BreakStatement SwitchStatementCase MemberReference Project MSG_VERBOSE StatementExpression MethodInvocation log MemberReference message debug BreakStatement SwitchStatementCase MemberReference Project MSG_DEBUG StatementExpression MethodInvocation log MemberReference message debug BreakStatement SwitchStatementCase StatementExpression MethodInvocation log MemberReference message error BreakStatement StatementExpression MethodInvocation System MemberReference tmpOut setOut StatementExpression MethodInvocation System MemberReference tmpErr setErr	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String ns FormalParameter ReferenceType String name FormalParameter ReferenceType Object value StatementExpression MethodInvocation MemberReference name MemberReference value put StatementExpression MethodInvocation project BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting ro project property: " MemberReference name Literal " -> " MemberReference value MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation MemberReference name MemberReference value put LocalVariableDeclaration BasicType boolean VariableDeclarator done This MethodInvocation MemberReference ns MemberReference name MemberReference value Literal true Literal false Literal false IfStatement MemberReference done BlockStatement ReturnStatement StatementExpression MethodInvocation properties MemberReference name MemberReference value put	0
MethodDeclaration Modifier private ReferenceType getCatalogResolver IfStatement BinaryOperation == MemberReference catalogResolver Literal null BlockStatement LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader Literal null StatementExpression Assignment MemberReference loader MethodInvocation MethodInvocation MemberReference createClassLoader getProject = TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation Class MemberReference Literal true MemberReference loader forName LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation clazz getClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator MethodInvocation Class MemberReference Literal true MemberReference forName LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator MethodInvocation getClassLoader StatementExpression Assignment MemberReference clazz MethodInvocation Class MemberReference Literal true MemberReference forName = LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation clazz newInstance StatementExpression Assignment MemberReference catalogResolver ClassCreator ReferenceType MemberReference clazz MemberReference obj = CatchClause CatchClauseParameter Throwable ex StatementExpression Assignment MemberReference catalogResolver ClassCreator ReferenceType = IfStatement BinaryOperation && BinaryOperation != MethodInvocation getCatalogPath Literal null BinaryOperation != MethodInvocation MethodInvocation list MemberReference length getCatalogPath Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Warning: XML resolver not external Literal " will be ignored" MemberReference Project MSG_WARN log StatementExpression MethodInvocation BinaryOperation + Literal "Failed to load " MemberReference ex MemberReference Project MSG_DEBUG log ReturnStatement MemberReference catalogResolver	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String nextToken NoSuchElementException LocalVariableDeclaration ReferenceType String VariableDeclarator token Literal null IfStatement BinaryOperation != MemberReference lookahead Literal null BlockStatement StatementExpression Assignment MemberReference token MemberReference lookahead = StatementExpression Assignment MemberReference lookahead Literal null = BlockStatement StatementExpression Assignment MemberReference token MethodInvocation tokenizer MethodInvocation trim nextToken = IfStatement MemberReference ! onNetWare BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation token length Literal 1 MethodInvocation Character MethodInvocation token Literal 0 charAt isLetter MemberReference MethodInvocation tokenizer hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nextToken MethodInvocation tokenizer MethodInvocation trim nextToken IfStatement BinaryOperation || MethodInvocation nextToken Literal "\\" startsWith MethodInvocation nextToken Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference token BinaryOperation + Literal ":" MemberReference nextToken += BlockStatement StatementExpression Assignment MemberReference lookahead MemberReference nextToken = BlockStatement IfStatement BinaryOperation || MethodInvocation token MemberReference File pathSeparator equals MethodInvocation token Literal ":" equals BlockStatement StatementExpression Assignment MemberReference token MethodInvocation tokenizer MethodInvocation trim nextToken = IfStatement MethodInvocation tokenizer hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nextToken MethodInvocation tokenizer MethodInvocation trim nextToken IfStatement MethodInvocation ! nextToken MemberReference File pathSeparator equals BlockStatement IfStatement MethodInvocation nextToken Literal ":" equals BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation ! token Literal "/" startsWith MethodInvocation ! token Literal "\\" startsWith MethodInvocation ! token Literal "." startsWith MethodInvocation ! token Literal ".." startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator oneMore MethodInvocation tokenizer MethodInvocation trim nextToken IfStatement MethodInvocation ! oneMore MemberReference File pathSeparator equals BlockStatement StatementExpression Assignment MemberReference token BinaryOperation + Literal ":" MemberReference oneMore += BlockStatement StatementExpression Assignment MemberReference token Literal ":" += StatementExpression Assignment MemberReference lookahead MemberReference oneMore = BlockStatement StatementExpression Assignment MemberReference lookahead MemberReference nextToken = ReturnStatement MemberReference token	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Provider provider StatementExpression MethodInvocation provider check StatementExpression MethodInvocation MemberReference provider add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Task task StatementExpression MethodInvocation MemberReference task	0
MethodDeclaration Modifier public warning FormalParameter ReferenceType SAXParseException exception IfStatement MemberReference warn BlockStatement StatementExpression MethodInvocation MemberReference exception MemberReference Project MSG_WARN doLog	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public addAttribute FormalParameter ReferenceType Attribute attribute StatementExpression MethodInvocation attributes MemberReference attribute add	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference value MethodInvocation cpStream readUTF =	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child InvocationTargetException IllegalAccessException InstantiationException StatementExpression MethodInvocation MethodInvocation MemberReference parent ArrayCreator ReferenceType Object ArrayInitializer MemberReference child invoke getMethod	1
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType String fileName FormalParameter ReferenceType File rootDir ReturnStatement MethodInvocation FILE_UTILS MemberReference rootDir MemberReference fileName	1
MethodDeclaration Modifier public static ReferenceType Object invoke FormalParameter ReferenceType Object obj FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class FormalParameter ReferenceType Object arg1 FormalParameter ReferenceType Class FormalParameter ReferenceType Object arg2 TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method StatementExpression Assignment MemberReference method MethodInvocation obj MethodInvocation MemberReference methodName ArrayCreator ReferenceType Class ArrayInitializer MemberReference MemberReference getMethod getClass = ReturnStatement MethodInvocation method MemberReference obj ArrayCreator ReferenceType Object ArrayInitializer MemberReference arg1 MemberReference arg2 invoke CatchClause CatchClauseParameter Exception t StatementExpression MethodInvocation MemberReference t throwBuildException ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter BasicType boolean value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier private BasicType int run FormalParameter ReferenceType String command BuildException LocalVariableDeclaration ReferenceType PumpStreamHandler VariableDeclarator ClassCreator ReferenceType PumpStreamHandler ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO ClassCreator ReferenceType TeeOutputStream ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_WARN MemberReference bos LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MemberReference Literal null StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation exe MemberReference setWorkingDirectory StatementExpression MethodInvocation exe MemberReference command setCommandline TryStatement ReturnStatement MethodInvocation exe execute CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference bos close	1
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator var MethodInvocation name MemberReference prefixLength BinaryOperation - MethodInvocation name length MemberReference substring ReturnStatement MethodInvocation var MemberReference File separatorChar Literal '.' replace	1
MethodDeclaration Modifier public ReferenceType Object getProperty FormalParameter ReferenceType Object object FormalParameter ReferenceType String propertyName ReturnStatement Cast ReferenceType Hashtable MemberReference object	0
MethodDeclaration Modifier public FormalParameter BasicType boolean repl StatementExpression Assignment MemberReference MemberReference repl =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String target Exception StatementExpression MethodInvocation MethodInvocation ! FileUtils MethodInvocation exists getFileUtils assertTrue StatementExpression MethodInvocation MemberReference target Literal Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Element element FormalParameter ReferenceType Writer out FormalParameter BasicType int indent FormalParameter ReferenceType String IOException StatementExpression MethodInvocation MemberReference element MemberReference out MemberReference indent MemberReference Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType String dirName StatementExpression Assignment MemberReference descriptorDirectory ClassCreator ReferenceType File MemberReference dirName =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String filesToMerge IfStatement BinaryOperation == MemberReference filesToMerge Literal null BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference filesToMerge length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i filesToMerge	1
MethodDeclaration Modifier public BasicType long getSize ReturnStatement MemberReference size	0
MethodDeclaration Modifier public static start FormalParameter ReferenceType String args FormalParameter ReferenceType Properties FormalParameter ReferenceType ClassLoader LocalVariableDeclaration ReferenceType Main VariableDeclarator m ClassCreator ReferenceType Main StatementExpression MethodInvocation m MemberReference args MemberReference MemberReference	0
MethodDeclaration Modifier public resolve FormalParameter ReferenceType ConstantPool constantPool LocalVariableDeclaration ReferenceType VariableDeclarator fieldClass Cast ReferenceType MethodInvocation constantPool MemberReference getEntry StatementExpression MethodInvocation fieldClass MemberReference constantPool resolve StatementExpression Assignment MemberReference MethodInvocation fieldClass getClassName = LocalVariableDeclaration ReferenceType VariableDeclarator nt Cast ReferenceType MethodInvocation constantPool MemberReference getEntry StatementExpression MethodInvocation nt MemberReference constantPool resolve StatementExpression Assignment MemberReference fieldName MethodInvocation nt getName = StatementExpression Assignment MemberReference MethodInvocation nt getType = StatementExpression SuperMethodInvocation MemberReference constantPool resolve	1
MethodDeclaration Modifier public static BasicType boolean isSigned FormalParameter ReferenceType File zipFile FormalParameter ReferenceType String name IOException LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator jarFile Literal null TryStatement StatementExpression Assignment MemberReference jarFile ClassCreator ReferenceType ZipFile MemberReference zipFile = IfStatement BinaryOperation == Literal null MemberReference name BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator entries MethodInvocation jarFile getEntries WhileStatement MethodInvocation entries hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator eName Cast ReferenceType ZipEntry MethodInvocation entries nextElement IfStatement BinaryOperation && MethodInvocation eName MemberReference SIG_START startsWith MethodInvocation eName MemberReference SIG_END endsWith BlockStatement ReturnStatement Literal true ReturnStatement Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation != MethodInvocation jarFile BinaryOperation + BinaryOperation + MemberReference SIG_START MethodInvocation name toUpperCase MemberReference SIG_END getEntry Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator longSig Literal false IfStatement BinaryOperation > MethodInvocation name length MemberReference BlockStatement StatementExpression Assignment MemberReference longSig BinaryOperation != MethodInvocation jarFile BinaryOperation + BinaryOperation + MemberReference SIG_START MethodInvocation name MethodInvocation toUpperCase Literal 0 MemberReference substring MemberReference SIG_END getEntry Literal null = ReturnStatement BinaryOperation || MemberReference MemberReference longSig StatementExpression MethodInvocation ZipFile MemberReference jarFile closeQuietly	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Missing attribute" Literal "Nothing to test for expectSpecificBuildException	0
MethodDeclaration Modifier public log FormalParameter ReferenceType Task task FormalParameter ReferenceType String message FormalParameter BasicType int StatementExpression MethodInvocation MemberReference task MemberReference message Literal null MemberReference	0
MethodDeclaration Modifier public validateConfigured BuildException StatementExpression SuperMethodInvocation validateConfigured IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The attribute must " Literal "be specified"	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private assertPrint FormalParameter ReferenceType String line FormalParameter ReferenceType String from FormalParameter ReferenceType String to LocalVariableDeclaration ReferenceType String VariableDeclarator search BinaryOperation + BinaryOperation + MemberReference from Literal " print to MemberReference to StatementExpression MethodInvocation MemberReference search MemberReference line assertEquals	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType Project p ReturnStatement Cast ReferenceType MethodInvocation MemberReference p getCheckedRef	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType long lines StatementExpression Assignment This MemberReference lines MemberReference lines =	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType String sourceFile FormalParameter ReferenceType String destFile IOException StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference sourceFile ClassCreator ReferenceType File MemberReference destFile Literal null Literal false Literal false copyFile	0
MethodDeclaration Modifier public add FormalParameter ReferenceType FileSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference STATIC TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier private writeFile BuildException LocalVariableDeclaration ReferenceType BufferedOutputStream VariableDeclarator bos Literal null TryStatement StatementExpression Assignment MemberReference bos ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MemberReference propertyfile = StatementExpression MethodInvocation properties MemberReference bos MemberReference store CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException MemberReference ioe MethodInvocation getLocation StatementExpression MethodInvocation FileUtils MemberReference bos close	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal BinaryOperation + Literal MemberReference expectLogContaining	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ReturnStatement Literal file LocalVariableDeclaration ReferenceType String VariableDeclarator absolutePath MethodInvocation file getAbsolutePath ReturnStatement MethodInvocation FILE_UTILS MethodInvocation getAbsolutePath MemberReference absolutePath normalize	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier private ReferenceType Manifest FormalParameter ReferenceType File container IOException IfStatement MethodInvocation container isDirectory BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarFile Literal null TryStatement StatementExpression Assignment MemberReference jarFile ClassCreator ReferenceType JarFile MemberReference container = ReturnStatement MethodInvocation jarFile getManifest IfStatement BinaryOperation != MemberReference jarFile Literal null BlockStatement StatementExpression MethodInvocation jarFile close	1
MethodDeclaration Modifier public FormalParameter ReferenceType RuntimeConfigurable wrapper StatementExpression MethodInvocation wStack MemberReference wrapper addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation sysProperties MemberReference addVariable	0
MethodDeclaration Modifier private static ReferenceType File FormalParameter ReferenceType File source IfStatement BinaryOperation != MemberReference source Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference source MethodInvocation FILE_UTILS MethodInvocation source getAbsolutePath normalize = CatchClause CatchClauseParameter BuildException e ReturnStatement MemberReference source	1
MethodDeclaration Modifier public FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation MemberReference configureProject	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal Literal "no file at file attribute" MemberReference expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true LocalVariableDeclaration BasicType int VariableDeclarator ch Literal - 1 IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression Assignment MemberReference ch MethodInvocation line Literal 0 charAt = IfStatement BinaryOperation == MethodInvocation line length Literal 1 BlockStatement StatementExpression Assignment MemberReference line Literal null = BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference line MethodInvocation readLine = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation size WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation MemberReference i elementAt IfStatement MethodInvocation line MemberReference startsWith BlockStatement StatementExpression Assignment MemberReference line Literal null = BreakStatement IfStatement BinaryOperation == MemberReference line Literal null BlockStatement StatementExpression Assignment MemberReference line MethodInvocation readLine = BlockStatement BreakStatement IfStatement BinaryOperation != MemberReference line Literal null BlockStatement ReturnStatement MethodInvocation read ReturnStatement MemberReference ch	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Commandline cmd LocalVariableDeclaration ReferenceType Vector VariableDeclarator compileList MethodInvocation attributes StatementExpression MethodInvocation attributes BinaryOperation + Literal "Compilation " MethodInvocation cmd MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator niceSourceList ClassCreator ReferenceType StringBuffer Literal "File" LocalVariableDeclaration BasicType int VariableDeclarator cListSize MethodInvocation compileList size IfStatement BinaryOperation != MemberReference cListSize Literal 1 BlockStatement StatementExpression MethodInvocation niceSourceList Literal "s" append StatementExpression MethodInvocation niceSourceList Literal " to be compiled:" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cListSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg Cast ReferenceType String MethodInvocation compileList MemberReference i elementAt StatementExpression MethodInvocation cmd MethodInvocation MemberReference arg setValue createArgument StatementExpression MethodInvocation niceSourceList Literal " " append StatementExpression MethodInvocation niceSourceList MemberReference arg append StatementExpression MethodInvocation attributes MethodInvocation niceSourceList toString MemberReference Project MSG_VERBOSE log	1
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection res StatementExpression MethodInvocation MemberReference res add	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation stream Literal '\n' write StatementExpression MethodInvocation stream	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ReferenceType filter StatementExpression MethodInvocation MemberReference filter addElement	0
MethodDeclaration Modifier public FormalParameter BasicType boolean overwrite StatementExpression MethodInvocation myCopy MemberReference overwrite	0
MethodDeclaration Modifier public FormalParameter ReferenceType Target target StatementExpression MethodInvocation MethodInvocation target getName MemberReference target	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "test5" executeTarget	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String patterns FormalParameter ReferenceType String pName IfStatement BinaryOperation == MemberReference patterns Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator ClassCreator ReferenceType StringTokenizer MemberReference patterns Literal " " WhileStatement MethodInvocation hasMoreTokens BlockStatement IfStatement MethodInvocation DirectoryScanner MethodInvocation nextToken MemberReference pName match BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public registerDTD FormalParameter ReferenceType String FormalParameter ReferenceType String location StatementExpression MethodInvocation handler MemberReference MemberReference location registerDTD	0
MethodDeclaration Modifier protected ReferenceType View FormalParameter ReferenceType View LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference IfStatement BinaryOperation >= MemberReference Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType View MemberReference MethodInvocation MemberReference LocalVariableDeclaration ReferenceType View VariableDeclarator view MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference view Literal null BlockStatement ReturnStatement MemberReference view BlockStatement ReturnStatement ClassCreator ReferenceType View MemberReference MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation toString BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String name SAXException StatementExpression MethodInvocation StatementExpression Assignment MemberReference currentText Literal "" = StatementExpression Assignment This MemberReference currentElement Literal "" = IfStatement BinaryOperation || MethodInvocation name MemberReference equals MethodInvocation name MemberReference equals BlockStatement StatementExpression Assignment MemberReference inEJBRef Literal false = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_ENTITY MethodInvocation name MemberReference ENTITY_BEAN equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_BEANS = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference MethodInvocation name MemberReference equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_BEANS = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference MethodInvocation name MemberReference equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_BEANS = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_BEANS MethodInvocation name MemberReference equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference STATE_IN_EJBJAR = IfStatement BinaryOperation && BinaryOperation == MemberReference parseState MemberReference STATE_IN_EJBJAR MethodInvocation name MemberReference equals BlockStatement StatementExpression Assignment MemberReference parseState MemberReference =	1
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation project MemberReference setDescription	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "checking for use as a selector Literal doesn't support the expectBuildExceptionContaining	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException ex IfStatement BinaryOperation != MethodInvocation ex MethodInvocation Literal error indexOf getMessage Literal - 1 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "error message contained backtrace - " MethodInvocation ex getMessage fail	0
MethodDeclaration Modifier public touch FormalParameter BasicType long modTime IfStatement MethodInvocation isReference BlockStatement StatementExpression Cast ReferenceType FileResource MethodInvocation getCheckedRef ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference modTime setLastModified getNotNullFile	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType int num BuildException IfStatement BinaryOperation < MemberReference num Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal has to be >= 0" MethodInvocation getLocation StatementExpression MethodInvocation cmd MethodInvocation BinaryOperation + Literal MemberReference num setValue createArgument	1
MethodDeclaration Modifier public FormalParameter ReferenceType String basedir StatementExpression MethodInvocation TernaryExpression BinaryOperation == MemberReference basedir Literal null Cast ReferenceType File Literal null ClassCreator ReferenceType File MethodInvocation basedir MethodInvocation Literal '\\' MemberReference File separatorChar replace Literal '/' MemberReference File separatorChar replace	1
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType Class clazz ReturnStatement ClassCreator ReferenceType ClassCreator ReferenceType JUnitTest MethodInvocation clazz getName Literal true Literal true Literal true	0
MethodDeclaration Modifier public from FormalParameter ReferenceType String from StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public FormalParameter ReferenceType File input IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "The and " Literal cannot both be specified" StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference MethodInvocation MemberReference input =	0
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String token IfStatement BinaryOperation == MethodInvocation token length Literal 0 ReturnStatement MemberReference token ReturnStatement BinaryOperation + MethodInvocation token MethodInvocation toUpperCase Literal 0 Literal 1 substring MethodInvocation token Literal 1 substring	1
MethodDeclaration Modifier public ReferenceType Enumeration getDependencies ReturnStatement MethodInvocation dependencies keys	0
MethodDeclaration Modifier public FormalParameter ReferenceType String change StatementExpression Assignment This MemberReference change MemberReference change =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String className ThrowStatement ClassCreator ReferenceType BuildException Literal "Not supported"	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference mapped	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType File file StatementExpression Assignment This MemberReference MemberReference file =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event StatementExpression MethodInvocation MemberReference event check	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "foo" expectPropertySet	0
MethodDeclaration Modifier public FormalParameter ReferenceType String response StatementExpression SuperMethodInvocation MemberReference response	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "No source specified" Literal attribute must be expectBuildExceptionContaining	0
MethodDeclaration Modifier private static ReferenceType JspCompilerAdapter resolveClassName FormalParameter ReferenceType String className FormalParameter ReferenceType AntClassLoader classloader BuildException TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation classloader MemberReference className findClass LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation c newInstance ReturnStatement Cast ReferenceType JspCompilerAdapter MemberReference o CatchClause CatchClauseParameter ClassNotFoundException cnfe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference className Literal " be found." MemberReference cnfe CatchClause CatchClauseParameter ClassCastException cce ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference className Literal " the classname of " Literal "a compiler MemberReference cce CatchClause CatchClauseParameter Throwable t ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + MemberReference className Literal " an " Literal MemberReference t	1
MethodDeclaration Modifier public ReferenceType File IfStatement BinaryOperation instanceof MemberReference src ReferenceType FileResource BlockStatement ReturnStatement Cast ReferenceType FileResource MemberReference src ReturnStatement Literal null	0
MethodDeclaration Modifier private handle FormalParameter ReferenceType Exception e IfStatement MemberReference failonerror BlockStatement ThrowStatement TernaryExpression BinaryOperation instanceof MemberReference e ReferenceType BuildException Cast ReferenceType BuildException MemberReference e ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation MemberReference e TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference verbosity log	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds ClassCreator ReferenceType File MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation ds ArrayCreator ReferenceType String ArrayInitializer Literal setIncludes StatementExpression MethodInvocation ds StatementExpression MethodInvocation MemberReference ds ArrayCreator ReferenceType String ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer compareFiles	0
MethodDeclaration Modifier public setClasspathRef FormalParameter ReferenceType r StatementExpression MethodInvocation MethodInvocation MemberReference r createClasspath	0
MethodDeclaration Modifier public FormalParameter ReferenceType p IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = StatementExpression MethodInvocation MemberReference p append	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public synchronized ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference files copyInto ReturnStatement MemberReference files	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params MethodInvocation getParameters IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference params length MemberReference ++ i BlockStatement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getType params equals BlockStatement StatementExpression MethodInvocation contains MemberReference ArraySelector MemberReference i MethodInvocation getValue params addElement IfStatement MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getType params equals BlockStatement StatementExpression MethodInvocation MethodInvocation Project MemberReference ArraySelector MemberReference i MethodInvocation getValue params toBoolean	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value IfStatement BinaryOperation >= MemberReference currentIndex MethodInvocation values size BlockStatement StatementExpression MethodInvocation values MemberReference value addElement StatementExpression Assignment MemberReference currentIndex BinaryOperation - MethodInvocation values size Literal 1 = BlockStatement StatementExpression MethodInvocation values MemberReference value MemberReference currentIndex	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project init StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference project setProject	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator in MethodInvocation MethodInvocation Literal getProject LocalVariableDeclaration ReferenceType File VariableDeclarator out MethodInvocation MethodInvocation Literal getProject StatementExpression MethodInvocation MethodInvocation FileUtils MethodInvocation MemberReference in MemberReference out Literal true getFileUtils assertTrue	1
MethodDeclaration Modifier protected FormalParameter ReferenceType classpath StatementExpression MethodInvocation classpath MemberReference extdirs	1
MethodDeclaration Modifier public synchronized ReferenceType String toString IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation toString getCheckedRef IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null MethodInvocation isEmpty BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation iterator MethodInvocation i hasNext BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb MemberReference File pathSeparatorChar append StatementExpression MethodInvocation sb MethodInvocation i next append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation BinaryOperation + MemberReference Literal configureProject	0
MethodDeclaration Modifier public BasicType int getMode ReturnStatement MethodInvocation This MethodInvocation getProject	0
MethodDeclaration Modifier public FormalParameter BasicType boolean v BuildException StatementExpression MethodInvocation MemberReference v MemberReference setLockStatus	1
MethodDeclaration Modifier public checkTaskClass FormalParameter Modifier final ReferenceType Class taskClass BuildException IfStatement MethodInvocation ! Modifier MethodInvocation taskClass getModifiers isPublic BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MemberReference taskClass Literal " is not StatementExpression MethodInvocation project MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement MethodInvocation Modifier MethodInvocation taskClass getModifiers isAbstract BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MemberReference taskClass Literal " is StatementExpression MethodInvocation project MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message TryStatement StatementExpression MethodInvocation taskClass Cast ReferenceType Class Literal null getConstructor CatchClause CatchClauseParameter NoSuchMethodException e LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + Literal "No public constructor in " MemberReference taskClass StatementExpression MethodInvocation project MemberReference message MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException MemberReference message IfStatement ClassReference ! MethodInvocation MemberReference taskClass isAssignableFrom ReferenceType Task BlockStatement StatementExpression MethodInvocation MemberReference taskClass MemberReference project checkTaskClass	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal is Literal StatementExpression MethodInvocation Literal is not Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertyUnset	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator dtd ClassCreator ReferenceType StatementExpression MethodInvocation dtd Literal doc LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MethodInvocation System Literal "root" getProperty MemberReference File separator Literal StatementExpression MethodInvocation dtd MemberReference setLocation StatementExpression MethodInvocation catalog MemberReference dtd LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project MemberReference TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator result MethodInvocation catalog Literal doc Literal resolveEntity StatementExpression MethodInvocation MemberReference result assertNotNull StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation result getSystemId assertEquals CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + Literal MethodInvocation e toString fail	0
MethodDeclaration Modifier public FormalParameter ReferenceType String out StatementExpression MethodInvocation MemberReference MemberReference out	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MemberReference closure	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType File getBasedir ReturnStatement MemberReference basedir	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement TernaryExpression BinaryOperation == MemberReference value Literal null Literal "" MemberReference value	0
MethodDeclaration Modifier public FormalParameter BasicType char with StatementExpression Assignment This MemberReference with MemberReference with =	0
MethodDeclaration Modifier public static ReferenceType ProjectComponentHelper ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public setUp StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression MethodInvocation project MethodInvocation System Literal "root" getProperty StatementExpression Assignment MemberReference catalog MethodInvocation =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public synchronized BasicType int hashCode IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation hashCode getCheckedRef ReturnStatement BinaryOperation * SuperMethodInvocation hashCode MemberReference	1
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement This MemberReference value	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using external compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation setExecutable IfStatement BinaryOperation && MethodInvocation ! assumeJava11 MethodInvocation ! assumeJava12 BlockStatement StatementExpression MethodInvocation MemberReference cmd BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal true LocalVariableDeclaration BasicType int VariableDeclarator firstFileName TernaryExpression MethodInvocation assumeJava11 Literal - 1 MethodInvocation cmd size StatementExpression MethodInvocation MemberReference cmd IfStatement MethodInvocation Os Literal "openvms" isFamily BlockStatement ReturnStatement MethodInvocation MemberReference cmd MemberReference firstFileName ReturnStatement BinaryOperation == MethodInvocation MethodInvocation cmd getCommandline MemberReference firstFileName Literal true executeExternalCompile Literal 0	1
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType DateSelector VariableDeclarator s Cast ReferenceType DateSelector MethodInvocation getInstance TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for required fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation BinaryOperation + Literal must a datetime or the number of " Literal MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal AM" setDatetime TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation BinaryOperation + Literal did not check for in the " Literal range" fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal of results in negative " Literal value to " Literal MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression MethodInvocation s Literal "this is not a date" setDatetime TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation BinaryOperation + Literal did not check for in a " Literal fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal of this is not a date" Literal " Cannot be It should be Literal " MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param ClassCreator ReferenceType Parameter StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue LocalVariableDeclaration ReferenceType Parameter VariableDeclarator params ArrayCreator ReferenceType Parameter Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for valid parameter fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid parameter MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression Assignment MemberReference param ClassCreator ReferenceType Parameter = StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for valid millis parameter" fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid setting MethodInvocation getMessage assertEquals StatementExpression Assignment MemberReference s Cast ReferenceType DateSelector MethodInvocation getInstance = StatementExpression Assignment MemberReference param ClassCreator ReferenceType Parameter = StatementExpression MethodInvocation param Literal setName StatementExpression MethodInvocation param Literal setValue StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference param = StatementExpression MethodInvocation s MemberReference params TryStatement StatementExpression MethodInvocation s MemberReference basedir MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 0 files isSelected StatementExpression MethodInvocation Literal did not check for valid granularity parameter" fail CatchClause CatchClauseParameter BuildException StatementExpression MethodInvocation Literal "Invalid granularity setting MethodInvocation getMessage assertEquals	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator testMailServer ClassCreator ReferenceType LocalVariableDeclaration ReferenceType Thread VariableDeclarator server ClassCreator ReferenceType Thread MemberReference testMailServer StatementExpression MethodInvocation server start LocalVariableDeclaration ReferenceType VariableDeclarator testMailClient ClassCreator ReferenceType StatementExpression MethodInvocation testMailClient Literal Message from StatementExpression MethodInvocation testMailClient Literal to StatementExpression MethodInvocation testMailClient Literal StatementExpression MethodInvocation testMailClient Literal StatementExpression MethodInvocation testMailClient Literal StatementExpression MethodInvocation testMailClient Literal "Test StatementExpression MethodInvocation testMailClient BinaryOperation + Literal line Literal line 2" setMessage LocalVariableDeclaration ReferenceType Thread VariableDeclarator client ClassCreator ReferenceType Thread MemberReference testMailClient StatementExpression MethodInvocation client start TryStatement StatementExpression MethodInvocation server BinaryOperation * Literal 60 Literal 1000 join StatementExpression MethodInvocation client BinaryOperation * Literal 30 Literal 1000 join CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference ie fail LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation testMailServer getResult LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal test Literal " MemberReference local Literal Literal " MemberReference local Literal " " MemberReference local Literal " to Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Test Literal Message Literal Literal Literal Literal Literal line Literal line Literal Literal Literal Literal Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator icounter Literal 0 BinaryOperation < MemberReference icounter MethodInvocation length MemberReference ++ icounter BlockStatement IfStatement BinaryOperation < MemberReference icounter MethodInvocation result length BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference icounter charAt MethodInvocation result MemberReference icounter charAt BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference icounter Literal " expected " MethodInvocation MemberReference icounter charAt Literal " result " MethodInvocation result MemberReference icounter charAt println IfStatement BinaryOperation > MethodInvocation length MethodInvocation result length BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal of expected result " MethodInvocation MethodInvocation result length substring println IfStatement BinaryOperation < MethodInvocation length MethodInvocation result length BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + Literal of result " MethodInvocation result MethodInvocation length substring println StatementExpression MethodInvocation MethodInvocation length MethodInvocation result length assertEquals StatementExpression MethodInvocation MemberReference MemberReference result assertEquals IfStatement MethodInvocation testMailClient BlockStatement StatementExpression MethodInvocation MethodInvocation testMailClient fail	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private FormalParameter ReferenceType ZipEntry e IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression MethodInvocation Literal false ReturnStatement StatementExpression MethodInvocation MethodInvocation e getName setName StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MethodInvocation e setLastModified StatementExpression MethodInvocation MethodInvocation e isDirectory setDirectory StatementExpression MethodInvocation MethodInvocation e getSize setSize StatementExpression MethodInvocation MethodInvocation e setMode	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference finished	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining	0
MethodDeclaration Modifier public FormalParameter BasicType long granularity StatementExpression MethodInvocation myCopy MemberReference granularity	0
MethodDeclaration Modifier protected FormalParameter Modifier final BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals StatementExpression MethodInvocation Literal MethodInvocation project Literal "test2" getProperty assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "Missing contains attribute" Literal string and substring are required in expectSpecificBuildException	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType long inputLength ReturnStatement TernaryExpression BinaryOperation > MemberReference inputLength Literal 0 Cast BasicType int MethodInvocation Math BinaryOperation + BinaryOperation / MemberReference inputLength Literal Literal 1 Literal 9 min MemberReference	1
MethodDeclaration * This method does the work of opening the supplied view * calling the method to perform the * classes the * and * BuildException if any error in the * @see * @see */ Modifier public final execute BuildException TryStatement LocalVariableDeclaration ReferenceType Folder VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator MethodInvocation MemberReference StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference MemberReference StatementExpression MethodInvocation MemberReference MemberReference visit CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int size IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType FileSet MethodInvocation MethodInvocation getProject ReturnStatement MethodInvocation MethodInvocation getIncludedFilesCount MethodInvocation getProject getDirectoryScanner	0
MethodDeclaration Modifier public ReferenceType String IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getCheckedRef ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Enumeration ReturnStatement MethodInvocation params elements	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private BasicType int TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator paramTypes ArrayInitializer LocalVariableDeclaration ReferenceType Method VariableDeclarator ClassReference MethodInvocation Literal MemberReference paramTypes getMethod ReferenceType Runtime LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer LocalVariableDeclaration ReferenceType Integer VariableDeclarator ret Cast ReferenceType Integer MethodInvocation MethodInvocation Runtime getRuntime MemberReference args invoke ReturnStatement MethodInvocation ret intValue CatchClause CatchClauseParameter Exception e ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation MethodInvocation createPath	0
MethodDeclaration Modifier public FormalParameter ReferenceType String packageName StatementExpression Assignment MemberReference MemberReference packageName =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator r ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference r StatementExpression MethodInvocation Literal "foo" MethodInvocation r getValue assertEquals	0
MethodDeclaration Modifier public setUp TryStatement StatementExpression Assignment MemberReference local MethodInvocation InetAddress MethodInvocation getHostName = CatchClause CatchClauseParameter uhe	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType Service service StatementExpression MethodInvocation service check StatementExpression MethodInvocation MemberReference service add	0
MethodDeclaration Modifier public IOException IfStatement MethodInvocation ! Literal hasRegex ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation Literal Literal StatementExpression MethodInvocation MemberReference contents Literal world world assertStringContains StatementExpression MethodInvocation MemberReference contents Literal assertStringContains StatementExpression MethodInvocation MemberReference contents Literal assertStringContains StatementExpression MethodInvocation MemberReference contents Literal "found assertStringContains StatementExpression MethodInvocation MemberReference contents Literal "Found digits assertStringContains StatementExpression MethodInvocation MemberReference contents Literal "This is a line with	1
MethodDeclaration Modifier private IOException StatementExpression MethodInvocation LocalVariableDeclaration BasicType byte VariableDeclarator cfh ArrayCreator BasicType byte MemberReference LocalVariableDeclaration BasicType byte VariableDeclarator signatureBytes ArrayCreator BasicType byte Literal 4 StatementExpression MethodInvocation archive MemberReference signatureBytes readFully LocalVariableDeclaration BasicType long VariableDeclarator sig MethodInvocation ZipLong MemberReference signatureBytes getValue LocalVariableDeclaration Modifier final BasicType long VariableDeclarator MethodInvocation ZipLong MemberReference ZipOutputStream getValue WhileStatement BinaryOperation == MemberReference sig MemberReference BlockStatement StatementExpression MethodInvocation archive MemberReference cfh readFully LocalVariableDeclaration BasicType int VariableDeclarator off Literal 0 LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator ze ClassCreator ReferenceType ZipEntry LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ZipShort MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 2 += StatementExpression MethodInvocation ze BinaryOperation & BinaryOperation >> MemberReference Literal 8 Literal StatementExpression Assignment MemberReference off Literal 4 += StatementExpression MethodInvocation ze MethodInvocation ZipShort MemberReference cfh MemberReference off getValue setMethod StatementExpression Assignment MemberReference off Literal 2 += LocalVariableDeclaration BasicType long VariableDeclarator time MethodInvocation MethodInvocation ZipLong MemberReference cfh MemberReference off getValue StatementExpression MethodInvocation ze MemberReference time StatementExpression Assignment MemberReference off Literal 4 += StatementExpression MethodInvocation ze MethodInvocation ZipLong MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 4 += StatementExpression MethodInvocation ze MethodInvocation ZipLong MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 4 += StatementExpression MethodInvocation ze MethodInvocation ZipLong MemberReference cfh MemberReference off getValue setSize StatementExpression Assignment MemberReference off Literal 4 += LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ZipShort MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 2 += LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ZipShort MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 2 += LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ZipShort MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 2 += StatementExpression Assignment MemberReference off Literal 2 += StatementExpression MethodInvocation ze MethodInvocation ZipShort MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 2 += StatementExpression MethodInvocation ze MethodInvocation ZipLong MemberReference cfh MemberReference off getValue StatementExpression Assignment MemberReference off Literal 4 += LocalVariableDeclaration BasicType byte VariableDeclarator fileName ArrayCreator BasicType byte MemberReference StatementExpression MethodInvocation archive MemberReference fileName readFully StatementExpression MethodInvocation ze MethodInvocation MemberReference fileName getString setName LocalVariableDeclaration ReferenceType VariableDeclarator offset ClassCreator ReferenceType StatementExpression Assignment MemberReference offset MethodInvocation ZipLong MemberReference cfh MemberReference off getValue = StatementExpression MethodInvocation entries MemberReference ze MemberReference offset put StatementExpression MethodInvocation nameMap MethodInvocation ze getName MemberReference ze put StatementExpression MethodInvocation archive MemberReference LocalVariableDeclaration BasicType byte VariableDeclarator ArrayCreator BasicType byte MemberReference StatementExpression MethodInvocation archive MemberReference readFully StatementExpression MethodInvocation ze MethodInvocation MemberReference getString StatementExpression MethodInvocation archive MemberReference signatureBytes readFully StatementExpression Assignment MemberReference sig MethodInvocation ZipLong MemberReference signatureBytes getValue =	1
MethodDeclaration Modifier public synchronized FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count IfStatement BinaryOperation == MemberReference count Literal 0 BlockStatement ReturnStatement StatementExpression Assignment MemberReference characters TernaryExpression BinaryOperation == MemberReference characters Literal null ClassCreator ReferenceType StringBuffer MemberReference count MemberReference characters =	0
MethodDeclaration Modifier protected checkConfiguration IfStatement Literal MethodInvocation MethodInvocation getTaskName equals BlockStatement StatementExpression MethodInvocation Literal "!! is deprecated. Use apply instead. !!" log StatementExpression SuperMethodInvocation checkConfiguration IfStatement BinaryOperation && BinaryOperation == MethodInvocation filesets size Literal 0 BinaryOperation == MemberReference resources Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "no resources specified" MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference targetFilePos Literal null BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal specified without MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference destDir Literal null BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal specified without MethodInvocation getLocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference mapper MethodInvocation =	1
MethodDeclaration Modifier public static BasicType byte getBytes FormalParameter BasicType long value LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte Literal 4 StatementExpression Assignment MemberReference ArraySelector Literal 0 result Cast BasicType byte BinaryOperation & MemberReference value Literal 0xFF = StatementExpression Assignment MemberReference ArraySelector Literal 1 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal Literal 8 = StatementExpression Assignment MemberReference ArraySelector Literal 2 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal Literal 16 = StatementExpression Assignment MemberReference ArraySelector Literal 3 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal Literal 24 = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter ReferenceType Reader reader ReturnStatement ClassCreator ReferenceType MemberReference reader MethodDeclaration * @return the next non delete */ Modifier public BasicType int read IOException WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation in read IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement ReturnStatement MemberReference c IfStatement MethodInvocation ! Cast BasicType char MemberReference c BlockStatement ReturnStatement MemberReference c	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r LocalVariableDeclaration ReferenceType String VariableDeclarator teststr Literal null LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null StatementExpression MethodInvocation validate IfStatement MethodInvocation r isDirectory BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference myRegExp Literal null BlockStatement StatementExpression Assignment MemberReference myRegExp ClassCreator ReferenceType = StatementExpression MethodInvocation myRegExp MemberReference StatementExpression Assignment MemberReference MethodInvocation myRegExp MethodInvocation getProject = TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation r getInputStream = CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not get InputStream from " MethodInvocation r toLongString MemberReference e TryStatement StatementExpression Assignment MemberReference teststr MethodInvocation in readLine = WhileStatement BinaryOperation != MemberReference teststr Literal null BlockStatement IfStatement MethodInvocation MemberReference teststr matches BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference teststr MethodInvocation in readLine = ReturnStatement Literal false CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not read " MethodInvocation r toLongString IfStatement BinaryOperation != MemberReference in Literal null BlockStatement TryStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not close " MethodInvocation r toLongString	1
MethodDeclaration Modifier protected BuildException StatementExpression MethodInvocation MethodInvocation createClasspath Literal StatementExpression MethodInvocation MethodInvocation createClasspath Literal StatementExpression MethodInvocation MethodInvocation createClasspath Literal	0
MethodDeclaration Modifier public static ReferenceType Date FormalParameter ReferenceType String ParseException TryStatement ReturnStatement MethodInvocation MemberReference CatchClause CatchClauseParameter ParseException ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public execute StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal is " MemberReference attribute log getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType classpath IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference classpath = BlockStatement StatementExpression MethodInvocation MemberReference classpath append	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MemberReference value	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public execute BuildException IfStatement BinaryOperation == MemberReference regex Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "No expression to IfStatement BinaryOperation == MemberReference subs Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Nothing to replace expression IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null BinaryOperation > MethodInvocation filesets size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal cannot the attribute " Literal filesets at the same LocalVariableDeclaration BasicType int VariableDeclarator options Literal 0 IfStatement BinaryOperation != MethodInvocation flags Literal 'g' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference |= IfStatement BinaryOperation != MethodInvocation flags Literal 'i' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference |= IfStatement BinaryOperation != MethodInvocation flags Literal 'm' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference |= IfStatement BinaryOperation != MethodInvocation flags Literal 's' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference options MemberReference |= IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation file exists BlockStatement TryStatement StatementExpression MethodInvocation MemberReference file MemberReference options doReplace CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "An error occurred processing file: '" MethodInvocation file getAbsolutePath Literal "': " MethodInvocation e toString MemberReference Project MSG_ERR log IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "The following file is missing: '" MethodInvocation file getAbsolutePath Literal "'" MemberReference Project MSG_ERR log LocalVariableDeclaration BasicType int VariableDeclarator sz MethodInvocation filesets size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference sz MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation fs MethodInvocation getProject getDir MemberReference ArraySelector MemberReference j files IfStatement MethodInvocation f exists BlockStatement TryStatement StatementExpression MethodInvocation MemberReference f MemberReference options doReplace CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "An error occurred processing file: '" MethodInvocation f getAbsolutePath Literal "': " MethodInvocation e toString MemberReference Project MSG_ERR log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "The following file is missing: '" MethodInvocation f getAbsolutePath Literal "'" MemberReference Project MSG_ERR log	1
MethodDeclaration Modifier public addDepth FormalParameter ReferenceType selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Exception TryStatement StatementExpression MethodInvocation Literal executeTarget CatchClause CatchClauseParameter BuildException e StatementExpression MethodInvocation BinaryOperation + Literal "A path contain " MemberReference e fail	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation BinaryOperation + MethodInvocation getTaskName Literal ": MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference Literal "true" setNewProperty getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType r BuildException IfStatement MethodInvocation ! elements isEmpty BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression SuperMethodInvocation MemberReference r	1
MethodDeclaration Modifier public BasicType boolean getDebug ReturnStatement MemberReference debug	0
MethodDeclaration Modifier public FormalParameter ReferenceType String needed StatementExpression Assignment This MemberReference needed MemberReference needed =	0
MethodDeclaration Modifier public FormalParameter ReferenceType ZipShort StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Project p StatementExpression MethodInvocation MemberReference p init IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p MemberReference p StatementExpression MethodInvocation ReturnStatement MethodInvocation regexp	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference formatter	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference NONE MemberReference MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String from IfStatement MethodInvocation isReference BlockStatement ThrowStatement MethodInvocation tooManyAttributes StatementExpression Assignment This MemberReference from MemberReference from =	0
MethodDeclaration Modifier public ReferenceType String getExpression FormalParameter ReferenceType Project p IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference p getExpression MemberReference p ReturnStatement MemberReference expression	0
MethodDeclaration Modifier public synchronized ReferenceType OutputStream IOException StatementExpression MethodInvocation TryStatement ReturnStatement ClassCreator ReferenceType StatementExpression MethodInvocation	0
MethodDeclaration Modifier public test3 StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal MethodInvocation project Literal getProperty assertEquals	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration ReferenceType Object create FormalParameter ReferenceType Project project FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object ignore ReturnStatement MemberReference nestedElement	0
MethodDeclaration Modifier public BasicType boolean execute BuildException StatementExpression MethodInvocation attributes Literal "Using compiler" MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cmd MethodInvocation StatementExpression MethodInvocation MemberReference cmd TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation Class MemberReference forName LocalVariableDeclaration ReferenceType Object VariableDeclarator compiler MethodInvocation c newInstance LocalVariableDeclaration ReferenceType Method VariableDeclarator compile MethodInvocation c MemberReference ArrayCreator ReferenceType Class ArrayInitializer ArrayCreator MethodInvocation getClass ReferenceType String ArrayInitializer getMethod LocalVariableDeclaration BasicType int VariableDeclarator result Cast ReferenceType Integer MethodInvocation compile MemberReference compiler ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation cmd invoke ReturnStatement BinaryOperation == MemberReference result MemberReference CatchClause CatchClauseParameter BuildException be ThrowStatement MemberReference be CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType BuildException Literal "Error starting compiler" MemberReference ex MemberReference location	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getProject = ReturnStatement MethodInvocation createPath	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Class testClass ReturnStatement BinaryOperation != MethodInvocation MemberReference testClass Literal null	0
MethodDeclaration Modifier private FormalParameter BasicType long FormalParameter BasicType long time FormalParameter BasicType long StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " is not within " MemberReference Literal " ms of " MemberReference time BinaryOperation <= MethodInvocation Math BinaryOperation - MemberReference time MemberReference abs MemberReference assertTrue	1
MethodDeclaration Modifier public ReferenceType Enumeration LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType String VariableDeclarator paths MethodInvocation path list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference paths length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i paths LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator included Literal null IfStatement MethodInvocation f isDirectory BlockStatement StatementExpression Assignment MemberReference included MethodInvocation MemberReference f = IfStatement BinaryOperation || MethodInvocation f MethodInvocation Literal ".zip" endsWith getName MethodInvocation f MethodInvocation Literal ".jar" endsWith getName BlockStatement StatementExpression Assignment MemberReference included MethodInvocation MemberReference f = BlockStatement ContinueStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator includedCount MethodInvocation included size StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Adding " MemberReference includedCount Literal " from " MemberReference f MemberReference Project MSG_VERBOSE log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference includedCount MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation included MemberReference j get StatementExpression MethodInvocation MemberReference Literal "" put StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation size Literal " from " MemberReference paths length Literal " MemberReference Project MSG_VERBOSE log ReturnStatement MethodInvocation keys	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference s replaceProperties getProject setString	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "properties" Literal "xml"	0
MethodDeclaration Modifier public StatementExpression MethodInvocation project Literal executeTarget StatementExpression MethodInvocation Literal Literal "No to iterate expectLog	0
MethodDeclaration Modifier public validateAttributes BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference src Literal null BinaryOperation == MemberReference dir Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + Literal the file or the dir attribute " Literal "must be specified" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! exists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + BinaryOperation + Literal "Property file " MethodInvocation getPath Literal " does not exist." ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation == MemberReference token Literal null BinaryOperation == MethodInvocation size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message BinaryOperation + Literal token or a " Literal "must be specified" ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation IfStatement BinaryOperation && BinaryOperation != MemberReference token Literal null Literal MethodInvocation MethodInvocation token getText equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal "The token attribute must not be an empty ThrowStatement ClassCreator ReferenceType BuildException MemberReference message MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean binary StatementExpression Assignment This MemberReference binary MemberReference binary =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ZipShort VariableDeclarator zs ClassCreator ReferenceType ZipShort ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte Literal 0xFF Cast BasicType byte Literal 0xFF StatementExpression MethodInvocation Literal MethodInvocation zs getValue assertEquals	0
MethodDeclaration Modifier private validateAttributes BuildException IfStatement BinaryOperation || BinaryOperation == MemberReference targetFile Literal null MethodInvocation ! targetFile isFile BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid target: " MemberReference targetFile IfStatement BinaryOperation == MemberReference outputDirectory Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType File MethodInvocation targetFile getParent IfStatement MethodInvocation ! outputDirectory isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Invalid output directory: " MemberReference outputDirectory	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Properties props BuildException StatementExpression MethodInvocation checkParameters LocalVariableDeclaration ReferenceType String VariableDeclarator oldValue Cast ReferenceType String MethodInvocation props MemberReference key get TryStatement IfStatement BinaryOperation == MemberReference type MemberReference Type BlockStatement StatementExpression MethodInvocation MemberReference oldValue IfStatement BinaryOperation == MemberReference type MemberReference Type BlockStatement StatementExpression MethodInvocation MemberReference oldValue IfStatement BinaryOperation == MemberReference type MemberReference Type BlockStatement StatementExpression MethodInvocation MemberReference oldValue BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Unknown operation type: " MemberReference type CatchClause CatchClauseParameter NullPointerException npe StatementExpression MethodInvocation npe printStackTrace IfStatement BinaryOperation == MemberReference newValue Literal null BlockStatement StatementExpression Assignment MemberReference newValue Literal "" = StatementExpression MethodInvocation props MemberReference key MemberReference newValue put	1
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType type StatementExpression Assignment This MemberReference type MemberReference type =	0
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType String start FormalParameter ReferenceType String suffix BuildException IfStatement BinaryOperation >= MemberReference msgOutputLevel MemberReference Project MSG_INFO BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal "Searching for " MemberReference suffix Literal " println LocalVariableDeclaration ReferenceType File VariableDeclarator parent ClassCreator ReferenceType File ClassCreator MethodInvocation getAbsolutePath ReferenceType File MemberReference start LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference parent MemberReference suffix WhileStatement MethodInvocation ! file exists BlockStatement StatementExpression Assignment MemberReference parent MethodInvocation MemberReference parent getParentFile = IfStatement BinaryOperation == MemberReference parent Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Could not locate a build StatementExpression Assignment MemberReference file ClassCreator ReferenceType File MemberReference parent MemberReference suffix = ReturnStatement MemberReference file	1
MethodDeclaration Modifier public FormalParameter ReferenceType String FormalParameter ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation BinaryOperation + MemberReference MemberReference setValue createArgument	0
MethodDeclaration Modifier public ReferenceType Throwable getCause ReturnStatement MethodInvocation getException	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String server StatementExpression Assignment This MemberReference server MemberReference server =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Task FormalParameter ReferenceType Thread thread LocalVariableDeclaration ReferenceType Task VariableDeclarator task Cast ReferenceType Task MethodInvocation MemberReference thread get IfStatement BinaryOperation == MemberReference task Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator group MethodInvocation thread WhileStatement BinaryOperation && BinaryOperation == MemberReference task Literal null BinaryOperation != MemberReference group Literal null BlockStatement StatementExpression Assignment MemberReference task Cast ReferenceType Task MethodInvocation MemberReference group get = StatementExpression Assignment MemberReference group MethodInvocation group getParent = ReturnStatement MemberReference task	0
MethodDeclaration Modifier public FormalParameter ReferenceType String expression StatementExpression Assignment This MemberReference expression MemberReference expression =	0
MethodDeclaration Modifier public setError FormalParameter ReferenceType File error StatementExpression Assignment This MemberReference error MemberReference error =	0
MethodDeclaration Modifier protected ReferenceType String expand FormalParameter ReferenceType String content ReturnStatement MethodInvocation MethodInvocation MemberReference content replaceProperties getProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dir StatementExpression Assignment MemberReference destDir MemberReference dir = StatementExpression MethodInvocation cmd MethodInvocation Literal "-d" setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MemberReference destDir createArgument	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Exception ex LocalVariableDeclaration BasicType boolean VariableDeclarator baseIOException BinaryOperation == MethodInvocation ex getClass ClassReference ReferenceType IOException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator message ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || MemberReference ! baseIOException BinaryOperation == MethodInvocation ex getMessage Literal null BlockStatement StatementExpression MethodInvocation message MethodInvocation ex MethodInvocation getName getClass append IfStatement BinaryOperation != MethodInvocation ex getMessage Literal null BlockStatement IfStatement MemberReference ! baseIOException BlockStatement StatementExpression MethodInvocation message Literal " " append StatementExpression MethodInvocation message MethodInvocation ex getMessage append IfStatement BinaryOperation != MethodInvocation ex MethodInvocation getName MethodInvocation Literal indexOf getClass Literal - 1 BlockStatement StatementExpression MethodInvocation message MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation message Literal "This is due to the input file containing invalid" append StatementExpression MethodInvocation message MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation message Literal for the character encoding used : " append StatementExpression MethodInvocation message TernaryExpression BinaryOperation == MemberReference inputEncoding Literal null MethodInvocation fileUtils MemberReference inputEncoding append StatementExpression MethodInvocation message MemberReference LINE_SEPARATOR append ReturnStatement MethodInvocation message toString	1
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType Object object FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object value StatementExpression Cast ReferenceType Hashtable MemberReference object	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal Literal Literal Literal Literal MemberReference Literal MemberReference Literal MemberReference Literal Literal "" Literal MemberReference Literal MemberReference DS_VSS_PROJECT_PATH Literal "" Literal "" Literal MemberReference Literal MethodInvocation project MethodInvocation getAbsolutePath LocalVariableDeclaration ReferenceType VariableDeclarator sosGet ClassCreator ReferenceType StatementExpression MethodInvocation sosGet MemberReference project setProject StatementExpression MethodInvocation sosGet MemberReference StatementExpression MethodInvocation sosGet MemberReference StatementExpression MethodInvocation sosGet MemberReference DS_VSS_PROJECT_PATH StatementExpression MethodInvocation sosGet MemberReference StatementExpression MethodInvocation sosGet MemberReference StatementExpression MethodInvocation sosGet MemberReference StatementExpression MethodInvocation sosGet Literal true StatementExpression MethodInvocation sosGet Literal false StatementExpression MethodInvocation sosGet Literal false StatementExpression MethodInvocation sosGet Literal true StatementExpression Assignment MemberReference commandline MethodInvocation sosGet = StatementExpression MethodInvocation MemberReference MethodInvocation commandline getCommandline	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MethodInvocation ! w Literal '	1
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference location ClassCreator ReferenceType Location Literal = StatementExpression Assignment MemberReference project ClassCreator ReferenceType Project = StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference location setLocation StatementExpression MethodInvocation MemberReference project setProject	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal " StatementExpression MethodInvocation buf MethodInvocation MemberReference contains append MethodInvocation Literal '"' append Literal '"' append StatementExpression MethodInvocation buf Literal " " append StatementExpression MethodInvocation buf TernaryExpression MemberReference Literal "true" Literal "false" append StatementExpression MethodInvocation buf Literal " " append StatementExpression MethodInvocation buf TernaryExpression MemberReference Literal "true" Literal "false" append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Node node IfStatement MethodInvocation node MethodInvocation Literal "foo" equals getNodeName BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier synchronized protected checkConfiguration BuildException IfStatement BinaryOperation && BinaryOperation == MemberReference file Literal null BinaryOperation == MethodInvocation resources size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Specify at least one source" Literal file or resource IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation file exists MethodInvocation file isDirectory BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "Use a resource collection to touch IfStatement BinaryOperation && BinaryOperation != MemberReference dateTime Literal null MemberReference ! BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator workmillis MemberReference millis LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator df MethodInvocation LocalVariableDeclaration ReferenceType ParseException VariableDeclarator pe Literal null TryStatement StatementExpression Assignment MemberReference workmillis MethodInvocation df MethodInvocation MemberReference dateTime parse = CatchClause CatchClauseParameter ParseException StatementExpression Assignment MemberReference df MethodInvocation = IfStatement BinaryOperation == MemberReference df Literal null BlockStatement StatementExpression Assignment MemberReference pe MemberReference = BlockStatement TryStatement StatementExpression Assignment MemberReference workmillis MethodInvocation df MethodInvocation MemberReference dateTime parse = CatchClause CatchClauseParameter ParseException StatementExpression Assignment MemberReference pe MemberReference = IfStatement BinaryOperation != MemberReference pe Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MethodInvocation pe getMessage MemberReference pe MethodInvocation getLocation IfStatement BinaryOperation < MemberReference workmillis Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal of " MemberReference dateTime Literal " results in negative " Literal value " Literal to " Literal 1970, " Literal StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Setting millis to " MemberReference workmillis Literal " from datetime attribute" TernaryExpression BinaryOperation < MemberReference millis Literal 0 MemberReference Project MSG_DEBUG MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference workmillis setMillis StatementExpression Assignment MemberReference Literal true =	1
MethodDeclaration Modifier public ReferenceType String getPackage ReturnStatement This MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public synchronized ReferenceType Object clone IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation clone TryStatement LocalVariableDeclaration ReferenceType Files VariableDeclarator f Cast ReferenceType Files SuperMethodInvocation clone StatementExpression Assignment MemberReference f Cast ReferenceType MethodInvocation clone = StatementExpression Assignment MemberReference f ClassCreator ReferenceType Vector MethodInvocation size = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps Cast ReferenceType MethodInvocation iter next StatementExpression MethodInvocation MethodInvocation ps clone add StatementExpression Assignment MemberReference f selectors ClassCreator ReferenceType Vector MemberReference selectors = ReturnStatement MemberReference f CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator dir1 MethodInvocation LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal ".." StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer MethodInvocation dir1 getAbsolutePath MethodInvocation getAbsolutePath	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator sg Literal null IfStatement MethodInvocation Os Literal "dos" isFamily BlockStatement StatementExpression Assignment MemberReference sg MethodInvocation Literal '\\' Literal '/' replace = BlockStatement StatementExpression Assignment MemberReference sg MemberReference = StatementExpression MethodInvocation MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject MemberReference sg	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Properties props StatementExpression MethodInvocation MemberReference props LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props keys WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType String VariableDeclarator propertyValue MethodInvocation props MemberReference propertyName getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator v MethodInvocation MethodInvocation MemberReference propertyValue replaceProperties getProject IfStatement BinaryOperation != MemberReference prefix Literal null BlockStatement StatementExpression Assignment MemberReference propertyName BinaryOperation + MemberReference prefix MemberReference propertyName = StatementExpression MethodInvocation MemberReference propertyName MemberReference v	0
MethodDeclaration Modifier public FormalParameter ReferenceType extdirs IfStatement BinaryOperation == MemberReference extdirs Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal getProperty IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference extdirs ClassCreator ReferenceType MethodInvocation getProject MemberReference = BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dirs MethodInvocation extdirs list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference dirs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator dir MethodInvocation MethodInvocation getProject MemberReference ArraySelector MemberReference i dirs IfStatement BinaryOperation && MethodInvocation dir exists MethodInvocation dir isDirectory BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs ClassCreator ReferenceType FileSet StatementExpression MethodInvocation fs MemberReference dir StatementExpression MethodInvocation fs Literal "*" setIncludes StatementExpression MethodInvocation MemberReference fs	1
MethodDeclaration Modifier public ReferenceType Object clone TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps Cast ReferenceType SuperMethodInvocation clone StatementExpression Assignment MemberReference ps includeList Cast ReferenceType Vector MethodInvocation includeList clone = StatementExpression Assignment MemberReference ps excludeList Cast ReferenceType Vector MethodInvocation excludeList clone = StatementExpression Assignment MemberReference ps includesFileList Cast ReferenceType Vector MethodInvocation includesFileList clone = StatementExpression Assignment MemberReference ps excludesFileList Cast ReferenceType Vector MethodInvocation excludesFileList clone = ReturnStatement MemberReference ps CatchClause CatchClauseParameter CloneNotSupportedException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType getNextEntry IOException IfStatement This MemberReference hasHitEOF BlockStatement ReturnStatement Literal null IfStatement BinaryOperation != This MemberReference currEntry Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator numToSkip BinaryOperation - This MemberReference entrySize This MemberReference entryOffset IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "TarInputStream: SKIP '" This MemberReference currEntry MethodInvocation getName Literal "' " This MemberReference entrySize Literal " OFF " This MemberReference entryOffset Literal " skipping " MemberReference numToSkip Literal " println IfStatement BinaryOperation > MemberReference numToSkip Literal 0 BlockStatement StatementExpression This MethodInvocation MemberReference numToSkip skip StatementExpression Assignment This MemberReference readBuf Literal null = LocalVariableDeclaration BasicType byte VariableDeclarator headerBuf This MemberReference buffer MethodInvocation IfStatement BinaryOperation == MemberReference headerBuf Literal null BlockStatement IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err Literal "READ NULL RECORD" println StatementExpression Assignment This MemberReference hasHitEOF Literal true = IfStatement This MemberReference buffer MethodInvocation MemberReference headerBuf BlockStatement IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err Literal "READ EOF RECORD" println StatementExpression Assignment This MemberReference hasHitEOF Literal true = IfStatement This MemberReference hasHitEOF BlockStatement StatementExpression Assignment This MemberReference currEntry Literal null = BlockStatement StatementExpression Assignment This MemberReference currEntry ClassCreator ReferenceType MemberReference headerBuf = IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + Literal "TarInputStream: SET '" This MemberReference currEntry MethodInvocation getName Literal "' size = " This MemberReference currEntry MethodInvocation getSize println StatementExpression Assignment This MemberReference entryOffset Literal 0 = StatementExpression Assignment This MemberReference entrySize This MemberReference currEntry MethodInvocation getSize = IfStatement BinaryOperation && BinaryOperation != This MemberReference currEntry Literal null This MemberReference currEntry MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator longName ClassCreator ReferenceType StringBuffer LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 256 LocalVariableDeclaration BasicType int VariableDeclarator length Literal 0 WhileStatement BinaryOperation >= Assignment MemberReference length MethodInvocation MemberReference buf read = Literal 0 BlockStatement StatementExpression MethodInvocation longName ClassCreator ReferenceType String MemberReference buf Literal 0 MemberReference length append StatementExpression MethodInvocation getNextEntry IfStatement BinaryOperation == This MemberReference currEntry Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation > MethodInvocation longName length Literal 0 BinaryOperation == MethodInvocation longName BinaryOperation - MethodInvocation longName length Literal 1 charAt Literal 0 BlockStatement StatementExpression MethodInvocation longName BinaryOperation - MethodInvocation longName length Literal 1 deleteCharAt StatementExpression This MemberReference currEntry MethodInvocation MethodInvocation longName toString setName ReturnStatement This MemberReference currEntry	1
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "required argument not specified" expectBuildException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation arguments removeAllElements	0
MethodDeclaration Modifier private BasicType int IOException LocalVariableDeclaration Modifier final BasicType int VariableDeclarator This MemberReference currentChar SwitchStatement This MemberReference SwitchStatementCase EOF ReturnStatement Literal - 1 SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalStateException SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalStateException SwitchStatementCase StatementExpression MethodInvocation BreakStatement SwitchStatementCase StatementExpression MethodInvocation BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalStateException SwitchStatementCase StatementExpression MethodInvocation BreakStatement SwitchStatementCase StatementExpression MethodInvocation BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalStateException ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation newInstance	0
MethodDeclaration Modifier private send FormalParameter ReferenceType String IOException StatementExpression MethodInvocation out MemberReference write StatementExpression MethodInvocation out flush StatementExpression MethodInvocation sb MemberReference append	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType URLConnection connection BuildException ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType OutputStream getOutputStream IfStatement MethodInvocation MemberReference value equals BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference System out IfStatement MethodInvocation MemberReference value equals BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference System err LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation MethodInvocation MemberReference value getProject TryStatement ReturnStatement ClassCreator ReferenceType FileOutputStream MemberReference f CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType BuildEvent event IfStatement BinaryOperation == MethodInvocation event getProject MemberReference project BlockStatement StatementExpression MethodInvocation cleanup	1
MethodDeclaration Modifier public FormalParameter ReferenceType String antFile StatementExpression Assignment This MemberReference antFile MemberReference antFile =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Integer timeout LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is This MethodInvocation getInputStream TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference timeout Literal null BinaryOperation == MethodInvocation timeout intValue Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator read WhileStatement BinaryOperation != Assignment MemberReference read MethodInvocation is read = Literal - 1 BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c Cast BasicType char MemberReference read StatementExpression MethodInvocation sb MemberReference c append IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression MethodInvocation MethodInvocation sb toString MemberReference Project MSG_INFO log StatementExpression MethodInvocation sb Literal 0 MethodInvocation sb length delete BlockStatement LocalVariableDeclaration ReferenceType Calendar VariableDeclarator endTime MethodInvocation Calendar getInstance StatementExpression MethodInvocation endTime MemberReference Calendar SECOND MethodInvocation timeout intValue add LocalVariableDeclaration BasicType int VariableDeclarator read Literal 0 WhileStatement BinaryOperation != MemberReference read Literal - 1 BlockStatement WhileStatement BinaryOperation && MethodInvocation Calendar MethodInvocation MemberReference endTime before getInstance BinaryOperation == MethodInvocation is available Literal 0 BlockStatement StatementExpression MethodInvocation Thread Literal 250 sleep IfStatement BinaryOperation == MethodInvocation is available Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation sb toString MemberReference Project MSG_INFO log ThrowStatement ClassCreator ReferenceType BuildException Literal "Response waiting for EOF" MethodInvocation getLocation StatementExpression Assignment MemberReference read MethodInvocation is read = IfStatement BinaryOperation != MemberReference read Literal - 1 BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c Cast BasicType char MemberReference read StatementExpression MethodInvocation sb MemberReference c append IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression MethodInvocation MethodInvocation sb toString MemberReference Project MSG_INFO log StatementExpression MethodInvocation sb Literal 0 MethodInvocation sb length delete IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation sb toString MemberReference Project MSG_INFO log CatchClause CatchClauseParameter BuildException be ThrowStatement MemberReference be CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectPropertySet	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation StatementExpression MethodInvocation Literal '\r' StatementExpression MethodInvocation Literal '\n' StatementExpression MethodInvocation stream	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal expectLogContaining LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation BinaryOperation + Literal MemberReference LocalVariableDeclaration BasicType long VariableDeclarator lastModified MethodInvocation f lastModified TryStatement StatementExpression MethodInvocation Thread MethodInvocation FILE_UTILS sleep CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Literal Literal expectLogContaining StatementExpression Assignment MemberReference f MethodInvocation BinaryOperation + Literal MemberReference = LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation f lastModified StatementExpression MethodInvocation Literal "File was not BinaryOperation < MemberReference lastModified MemberReference assertTrue	0
MethodDeclaration * that some output is in report files if * watchdog the * */ Modifier private FormalParameter ReferenceType FormatterElement feArray FormalParameter ReferenceType JUnitTest test FormalParameter ReferenceType String testCase StatementExpression MethodInvocation MemberReference feArray MemberReference test BinaryOperation + Literal the time in the report Literal " not reflect the time until the MemberReference testCase	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator log MethodInvocation getLog StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal message ending with is up to but got '" MemberReference log Literal "'" MethodInvocation log Literal is up to endsWith assertTrue	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType List VariableDeclarator nestedElementList Cast ReferenceType List MethodInvocation nestedElementMap MemberReference name get IfStatement BinaryOperation == MemberReference nestedElementList Literal null BlockStatement StatementExpression Assignment MemberReference nestedElementList ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation nestedElementMap MemberReference name MemberReference nestedElementList put LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation MethodInvocation MemberReference name getScript StatementExpression MethodInvocation nestedElementList MemberReference element add ReturnStatement MemberReference element	1
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType File base FormalParameter ReferenceType Vector pathElements FormalParameter BasicType boolean cs IfStatement BinaryOperation == MethodInvocation pathElements size Literal 0 BlockStatement ReturnStatement MemberReference base LocalVariableDeclaration ReferenceType String VariableDeclarator current Cast ReferenceType String MethodInvocation pathElements Literal 0 remove IfStatement BinaryOperation == MemberReference base Literal null BlockStatement ReturnStatement MethodInvocation ClassCreator ReferenceType File MemberReference current MemberReference pathElements MemberReference cs IfStatement MethodInvocation ! base isDirectory BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation MemberReference base list IfStatement BinaryOperation == MemberReference files Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "IO error scanning directory " MethodInvocation base getAbsolutePath LocalVariableDeclaration BasicType boolean VariableDeclarator matchCase TernaryExpression MemberReference cs MemberReference MemberReference ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference matchCase length MemberReference ++ i BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement IfStatement TernaryExpression MemberReference ArraySelector MemberReference i matchCase MemberReference ArraySelector MemberReference j MethodInvocation MemberReference current equals files MemberReference ArraySelector MemberReference j MethodInvocation MemberReference current equalsIgnoreCase files BlockStatement ReturnStatement MethodInvocation ClassCreator ReferenceType File MemberReference base MemberReference ArraySelector MemberReference j files MemberReference pathElements MemberReference cs ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference out MemberReference out =	0
MethodDeclaration Modifier private FormalParameter ReferenceType FTPClient ftp BuildException LocalVariableDeclaration BasicType int VariableDeclarator rc MethodInvocation ftp getReplyCode IfStatement BinaryOperation && MemberReference BinaryOperation || BinaryOperation || BinaryOperation == MemberReference rc MemberReference FTPReply BinaryOperation == MemberReference rc MemberReference FTPReply BinaryOperation == MemberReference rc MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "could not create directory: " MethodInvocation ftp getReplyString	1
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType Resource r StatementExpression MethodInvocation validate IfStatement MethodInvocation r isDirectory BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator userstr MemberReference contains IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference userstr MethodInvocation contains toLowerCase = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference userstr MethodInvocation SelectorUtils MemberReference userstr removeWhitespace = LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MethodInvocation r getInputStream = CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not get InputStream from " MethodInvocation r toLongString MemberReference e TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator teststr MethodInvocation in readLine WhileStatement BinaryOperation != MemberReference teststr Literal null BlockStatement IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference teststr MethodInvocation teststr toLowerCase = IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference teststr MethodInvocation SelectorUtils MemberReference teststr removeWhitespace = IfStatement BinaryOperation > MethodInvocation teststr MemberReference userstr indexOf Literal - 1 BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference teststr MethodInvocation in readLine = ReturnStatement Literal false CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Could not read " MethodInvocation r toLongString StatementExpression MethodInvocation FileUtils MemberReference in close	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project StatementExpression Assignment This MemberReference project MemberReference project =	0
MethodDeclaration Modifier public BasicType boolean sameDefinition FormalParameter ReferenceType AntTypeDefinition other FormalParameter ReferenceType Project project ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference other Literal null BinaryOperation == MethodInvocation other getClass MethodInvocation getClass MethodInvocation other MethodInvocation MethodInvocation MemberReference project equals MemberReference project MethodInvocation other MethodInvocation MethodInvocation MemberReference project equals MemberReference project BinaryOperation == MemberReference other MemberReference BinaryOperation == MemberReference other MemberReference	1
MethodDeclaration Modifier protected FormalParameter ReferenceType File d FormalParameter ReferenceType String files FormalParameter ReferenceType String dirs IfStatement BinaryOperation > MemberReference files length Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Deleting " MemberReference files length Literal " files from " MethodInvocation d getAbsolutePath TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference verbosity log ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference files length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MemberReference d MemberReference ArraySelector MemberReference j files StatementExpression MethodInvocation BinaryOperation + Literal "Deleting " MethodInvocation f getAbsolutePath TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference verbosity log IfStatement MethodInvocation ! MemberReference f delete BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to delete file " MethodInvocation f getAbsolutePath handle IfStatement BinaryOperation && BinaryOperation > MemberReference dirs length Literal 0 MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator dirCount Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j BinaryOperation - MemberReference dirs length Literal 1 BinaryOperation >= MemberReference j Literal 0 MemberReference -- j BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator currDir ClassCreator ReferenceType File MemberReference d MemberReference ArraySelector MemberReference j dirs LocalVariableDeclaration ReferenceType String VariableDeclarator dirFiles MethodInvocation currDir list IfStatement BinaryOperation || BinaryOperation == MemberReference dirFiles Literal null BinaryOperation == MemberReference dirFiles length Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting " MethodInvocation currDir getAbsolutePath TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference verbosity log IfStatement MethodInvocation ! MemberReference currDir delete BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Unable to delete directory " MethodInvocation currDir getAbsolutePath handle BlockStatement StatementExpression MemberReference ++ dirCount IfStatement BinaryOperation > MemberReference dirCount Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Deleted " MemberReference dirCount Literal " director" TernaryExpression BinaryOperation == MemberReference dirCount Literal 1 Literal "y" Literal "ies" Literal " " MethodInvocation d getAbsolutePath TernaryExpression MemberReference MemberReference Project MSG_VERBOSE MemberReference verbosity log	1
MethodDeclaration Modifier protected ReferenceType String IfStatement MethodInvocation MemberReference BlockStatement ReturnStatement BinaryOperation + Literal MemberReference BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isValid ReturnStatement BinaryOperation != MemberReference cachefile Literal null	0
MethodDeclaration Modifier protected scandir FormalParameter ReferenceType File dir FormalParameter ReferenceType String vpath FormalParameter BasicType boolean fast LocalVariableDeclaration ReferenceType String VariableDeclarator newfiles MethodInvocation dir list IfStatement BinaryOperation == MemberReference newfiles Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "IO error scanning directory " MethodInvocation dir getAbsolutePath ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference newfiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MemberReference vpath MemberReference ArraySelector MemberReference i newfiles LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference dir MemberReference ArraySelector MemberReference i newfiles IfStatement MethodInvocation file isDirectory BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement IfStatement MethodInvocation ! MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference name addElement IfStatement MemberReference fast BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference name addElement IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference name addElement IfStatement BinaryOperation && MemberReference fast MethodInvocation MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir IfStatement MemberReference ! fast BlockStatement StatementExpression MethodInvocation MemberReference file BinaryOperation + MemberReference name MemberReference File separator MemberReference fast scandir IfStatement MethodInvocation file isFile BlockStatement IfStatement MethodInvocation MemberReference name isIncluded BlockStatement IfStatement MethodInvocation ! MemberReference name BlockStatement StatementExpression MethodInvocation MemberReference name addElement BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference name addElement BlockStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation MemberReference name addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public ReferenceType Reader chain FormalParameter Modifier final ReferenceType Reader rdr LocalVariableDeclaration ReferenceType VariableDeclarator newFilter ClassCreator ReferenceType MemberReference rdr StatementExpression MethodInvocation newFilter MethodInvocation StatementExpression MethodInvocation newFilter Literal true ReturnStatement MemberReference newFilter	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator chosen MethodInvocation facade TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation StatementExpression MethodInvocation facade MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator result MethodInvocation facade LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation facade IfStatement BinaryOperation && BinaryOperation == MemberReference result length Literal 0 BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation facade MemberReference StatementExpression Assignment MemberReference result MethodInvocation facade = ReturnStatement MemberReference result StatementExpression MethodInvocation facade MemberReference chosen	0
MethodDeclaration Modifier protected FormalParameter ReferenceType s FormalParameter ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType Project p FormalParameter ReferenceType View v FormalParameter ReferenceType Type t FormalParameter ReferenceType Folder f FormalParameter ReferenceType Item item FormalParameter ReferenceType java ReferenceType io ReferenceType File tgt LocalVariableDeclaration ReferenceType Property VariableDeclarator p1 MethodInvocation MemberReference t getPrimaryDescriptor LocalVariableDeclaration ReferenceType Property VariableDeclarator p2 MethodInvocation MemberReference t getSecondaryDescriptor LocalVariableDeclaration ReferenceType String VariableDeclarator pName Cast ReferenceType String MethodInvocation item MethodInvocation p1 getName get IfStatement MethodInvocation ! MemberReference pName BlockStatement ReturnStatement IfStatement MethodInvocation BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation != MemberReference f MemberReference IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator strFolder MethodInvocation f LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation strFolder MemberReference delim indexOf IfStatement BinaryOperation >= MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference strFolder MethodInvocation strFolder BinaryOperation + MemberReference i Literal 1 substring = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal " \"" MemberReference strFolder Literal "\"" log StatementExpression Assignment MemberReference MemberReference f = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator header ClassCreator ReferenceType StringBuffer Literal " Item" StatementExpression MethodInvocation header MethodInvocation MethodInvocation p1 append Literal ",\t" append IfStatement BinaryOperation != MemberReference p2 Literal null BlockStatement StatementExpression MethodInvocation header MethodInvocation MethodInvocation p2 append Literal ",\t" append StatementExpression MethodInvocation MethodInvocation header toString log LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator itemLine ClassCreator ReferenceType StringBuffer Literal " " StatementExpression MethodInvocation itemLine MethodInvocation item append StatementExpression MethodInvocation itemLine MethodInvocation MethodInvocation MemberReference p1 MethodInvocation item MethodInvocation p1 getName get append Literal ",\t" append IfStatement BinaryOperation != MemberReference p2 Literal null BlockStatement StatementExpression MethodInvocation itemLine MethodInvocation MethodInvocation MemberReference p2 MethodInvocation item MethodInvocation p2 getName get append Literal ",\t" append LocalVariableDeclaration BasicType int VariableDeclarator locker MethodInvocation item IfStatement BinaryOperation > MemberReference locker Literal - 1 BlockStatement StatementExpression MethodInvocation itemLine MethodInvocation MemberReference locker append Literal by " append BlockStatement StatementExpression MethodInvocation itemLine Literal append StatementExpression MethodInvocation MethodInvocation itemLine toString log LocalVariableDeclaration ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File VariableDeclarator remote Cast ReferenceType com ReferenceType starbase ReferenceType starteam ReferenceType File MemberReference item LocalVariableDeclaration ReferenceType java ReferenceType io ReferenceType File VariableDeclarator local ClassCreator ReferenceType java ReferenceType io ReferenceType File MemberReference tgt Cast ReferenceType String MethodInvocation item MethodInvocation p1 getName get TryStatement StatementExpression MethodInvocation remote MemberReference local MemberReference Literal false Literal true Literal true StatementExpression MemberReference ++ checkedOut CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal "Failed to checkout '" MemberReference local Literal "'" MemberReference e	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration ReferenceType File VariableDeclarator savedDir MemberReference dir LocalVariableDeclaration ReferenceType VariableDeclarator MemberReference perm LocalVariableDeclaration BasicType int VariableDeclarator err Literal - 1 TryStatement StatementExpression Assignment MemberReference err MethodInvocation executeJava = IfStatement BinaryOperation != MemberReference err Literal 0 BlockStatement IfStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType BinaryOperation + Literal " MemberReference err MemberReference err MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal Result: " MemberReference err MemberReference Project MSG_ERR log StatementExpression MethodInvocation MemberReference err StatementExpression Assignment MemberReference dir MemberReference savedDir = StatementExpression Assignment MemberReference perm MemberReference =	1
MethodDeclaration Modifier public final ReferenceType ReturnStatement MemberReference classpath	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is a expectLog	0
MethodDeclaration Modifier public tearDown TryStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Literal "cleanup" executeTarget	1
MethodDeclaration Modifier public static BasicType byte getBytes FormalParameter BasicType int value LocalVariableDeclaration BasicType byte VariableDeclarator result ArrayCreator BasicType byte Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 result Cast BasicType byte BinaryOperation & MemberReference value Literal 0xFF = StatementExpression Assignment MemberReference ArraySelector Literal 1 result Cast BasicType byte BinaryOperation >> BinaryOperation & MemberReference value Literal Literal 8 = ReturnStatement MemberReference result	0
MethodDeclaration Modifier protected handleErrorFlush FormalParameter ReferenceType String output StatementExpression MethodInvocation MemberReference output handleErrorOutput	0
MethodDeclaration IOException LocalVariableDeclaration BasicType int VariableDeclarator ok ArrayInitializer MemberReference StatementExpression MethodInvocation Literal MemberReference ok send	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment This MemberReference MemberReference b =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ih ClassCreator ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference ih getProject LocalVariableDeclaration ReferenceType VariableDeclarator ic ClassCreator ReferenceType MemberReference ih StatementExpression MethodInvocation MethodInvocation MemberReference ic getProject StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType AssertionFailedError VariableDeclarator ae MethodInvocation ic getError IfStatement BinaryOperation != MemberReference ae Literal null BlockStatement ThrowStatement MemberReference ae StatementExpression MethodInvocation MethodInvocation MemberReference ic getProject	0
MethodDeclaration Modifier public ReferenceType Object next IfStatement MemberReference done BlockStatement ThrowStatement ClassCreator ReferenceType NoSuchElementException StatementExpression Assignment MemberReference done Literal true = ReturnStatement This Resource	0
MethodDeclaration Modifier public FormalParameter BasicType boolean trace StatementExpression Assignment This MemberReference trace MemberReference trace =	0
MethodDeclaration ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str FormalParameter BasicType boolean isCaseSensitive ReturnStatement MethodInvocation SelectorUtils MemberReference pattern MemberReference str MemberReference isCaseSensitive	0
MethodDeclaration Modifier public FormalParameter BasicType boolean q IfStatement MemberReference q BlockStatement StatementExpression MethodInvocation cmd MethodInvocation Literal "-s" setValue createArgument	0
MethodDeclaration Modifier synchronized protected dieOnCircularReference FormalParameter ReferenceType Stack stk FormalParameter ReferenceType Project p BuildException IfStatement MethodInvocation isChecked BlockStatement ReturnStatement IfStatement MethodInvocation isReference BlockStatement StatementExpression SuperMethodInvocation MemberReference stk MemberReference p dieOnCircularReference BlockStatement StatementExpression MethodInvocation DataType MemberReference comp MemberReference stk MemberReference p invokeCircularReferenceCheck StatementExpression MethodInvocation Literal true setChecked	1
MethodDeclaration Modifier public StatementExpression MethodInvocation ClassCreator ReferenceType Literal	0
MethodDeclaration Modifier public test1 StatementExpression MethodInvocation Literal Literal "" Literal ""	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType text StatementExpression Assignment MemberReference MemberReference text =	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType FileSet VariableDeclarator resultFileSet Cast ReferenceType FileSet MethodInvocation p MemberReference RESULT_FILESET getReference LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner MethodInvocation resultFileSet MemberReference p getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator scannedFiles MethodInvocation scanner getIncludedFiles LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator files ClassCreator ReferenceType Hashtable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference scannedFiles length MemberReference ++ i BlockStatement StatementExpression MethodInvocation files MemberReference ArraySelector MemberReference i scannedFiles MemberReference ArraySelector MemberReference i scannedFiles put StatementExpression MethodInvocation BinaryOperation + Literal "Classfileset did not pick up expected number of " Literal "class files" Literal 1 MethodInvocation files size assertEquals StatementExpression MethodInvocation Literal "Result did not contain C.class" MethodInvocation files Literal "C.class" containsKey assertTrue	1
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType cmd IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference cmd BinaryOperation + Literal MemberReference addValue IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cmd Literal addValue LocalVariableDeclaration ReferenceType Vector VariableDeclarator props MethodInvocation sysProperties LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation props elements WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator variable Cast ReferenceType Environment ReferenceType Variable MethodInvocation e nextElement StatementExpression MethodInvocation MemberReference cmd MemberReference variable	1
MethodDeclaration Modifier public FormalParameter ReferenceType ResourceCollection a StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference resource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal must not more than one" Literal " resource" IfStatement BinaryOperation != MethodInvocation a size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal single argument resource Literal " are supported" StatementExpression Assignment MemberReference resource Cast ReferenceType Resource MethodInvocation a MethodInvocation next iterator =	0
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType VariableDeclarator writer ClassCreator ReferenceType MemberReference ! append LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os Literal null TryStatement IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType FileOutputStream MethodInvocation file getAbsolutePath MemberReference append = BlockStatement StatementExpression Assignment MemberReference os ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO = LocalVariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation MethodInvocation getFirstChild IfStatement BinaryOperation == MemberReference n Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference StatementExpression MethodInvocation writer Cast ReferenceType Element MemberReference n MemberReference os write CatchClause CatchClauseParameter BuildException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e StatementExpression MethodInvocation FileUtils MemberReference os close	1
MethodDeclaration Modifier public close IOException IfStatement BinaryOperation != MemberReference out Literal null BlockStatement StatementExpression MethodInvocation out flush StatementExpression MethodInvocation out close StatementExpression Assignment MemberReference out Literal null = IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation in close StatementExpression Assignment MemberReference in Literal null =	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args Exception LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference args init StatementExpression MethodInvocation run	0
MethodDeclaration Modifier private BasicType boolean IfStatement MethodInvocation ! destFile exists BlockStatement StatementExpression MethodInvocation Literal file does not a build is required" MemberReference Project MSG_VERBOSE log ReturnStatement Literal true LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation sourceFile lastModified LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation destFile lastModified IfStatement BinaryOperation > MemberReference BinaryOperation + MemberReference MethodInvocation FILE_UTILS BlockStatement StatementExpression MethodInvocation Literal "Source file is than the dest file: a rebuild is required" MemberReference Project MSG_VERBOSE log ReturnStatement Literal true BlockStatement StatementExpression MethodInvocation Literal "The file is up to date" MemberReference Project MSG_VERBOSE log ReturnStatement Literal false	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType String classname ClassNotFoundException StatementExpression MethodInvocation BinaryOperation + Literal loading " MemberReference classname MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType Class VariableDeclarator theClass MethodInvocation MemberReference classname IfStatement BinaryOperation == MemberReference theClass Literal null BlockStatement StatementExpression Assignment MemberReference theClass MethodInvocation MemberReference classname findClass = ReturnStatement MemberReference theClass	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter BasicType int options FormalParameter BasicType int ReturnStatement BinaryOperation > BinaryOperation & MemberReference options MemberReference Literal 0	1
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String name FormalParameter ReferenceType AttributeList SAXException StatementExpression Assignment MemberReference currentLoc BinaryOperation + Literal "\\" MemberReference name += StatementExpression Assignment MemberReference currentText Literal "" = IfStatement MethodInvocation currentLoc Literal equals BlockStatement StatementExpression Assignment MemberReference iasDescriptor Literal false = IfStatement MethodInvocation currentLoc Literal equals BlockStatement StatementExpression Assignment MemberReference iasDescriptor Literal true = IfStatement BinaryOperation || MethodInvocation name Literal "session" equals MethodInvocation name Literal "entity" equals BlockStatement StatementExpression Assignment MemberReference ejbType MemberReference name =	1
MethodDeclaration Modifier public test2 StatementExpression MethodInvocation Literal "test2" executeTarget	0
MethodDeclaration Modifier public close IOException StatementExpression SuperMethodInvocation close StatementExpression This MethodInvocation TernaryExpression BinaryOperation == MemberReference encoding Literal null MethodInvocation baos toString MethodInvocation baos MemberReference encoding toString setValue	1
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement BinaryOperation || MethodInvocation e1 hasMoreElements MethodInvocation e2 hasMoreElements	0
MethodDeclaration Modifier public FormalParameter ReferenceType File destinationFile StatementExpression Assignment This MemberReference destinationFile MemberReference destinationFile =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String propertyName StatementExpression Assignment This MemberReference propertyName MemberReference propertyName =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal "should fail because no resources specified" expectBuildException	0
MethodDeclaration Modifier private StatementExpression MethodInvocation BinaryOperation + Literal version: " MethodInvocation MemberReference Project MSG_VERBOSE log	0
MethodDeclaration Modifier public FormalParameter ReferenceType String to StatementExpression Assignment This MemberReference to MemberReference to =	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement ClassCreator ReferenceType MemberReference basedir MemberReference dirs	0
MethodDeclaration * @see */ Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal Literal Literal Literal Literal "mac" Literal Literal "dos"	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ZipOutputStream zOut IOException BuildException IfStatement MemberReference index BlockStatement StatementExpression MethodInvocation MemberReference zOut	1
MethodDeclaration Modifier public FormalParameter ReferenceType String env StatementExpression Assignment This MemberReference env MemberReference env =	0
MethodDeclaration Modifier public BasicType boolean isDirectory ReturnStatement MethodInvocation MethodInvocation Literal "/" endsWith getName	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean compile StatementExpression Assignment This MemberReference compile MemberReference compile =	0
MethodDeclaration Modifier private FormalParameter ReferenceType File genericJarFile FormalParameter ReferenceType Hashtable ejbFiles LocalVariableDeclaration ReferenceType Java VariableDeclarator genicTask Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator genicClass Literal null IfStatement MemberReference BlockStatement ReturnStatement StatementExpression Assignment MemberReference genicTask ClassCreator ReferenceType Java MethodInvocation getTask = StatementExpression MethodInvocation genicTask Literal setTaskName StatementExpression MethodInvocation genicTask Literal true StatementExpression MethodInvocation genicTask MethodInvocation BinaryOperation + Literal "-Dinstall.root=" MemberReference jonasroot setValue createJvmarg LocalVariableDeclaration ReferenceType String VariableDeclarator jonasConfigDir BinaryOperation + BinaryOperation + MemberReference jonasroot MemberReference File separator Literal LocalVariableDeclaration ReferenceType File VariableDeclarator javaPolicyFile ClassCreator ReferenceType File MemberReference jonasConfigDir Literal IfStatement MethodInvocation javaPolicyFile exists BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation BinaryOperation + Literal MethodInvocation javaPolicyFile toString setValue createJvmarg TryStatement StatementExpression Assignment MemberReference outputdir MethodInvocation = CatchClause CatchClauseParameter IOException aIOException LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal "Cannot create temp dir: " MethodInvocation aIOException getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference aIOException StatementExpression MethodInvocation BinaryOperation + Literal "Using temporary output directory: " MemberReference outputdir MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genicTask MethodInvocation Literal "-d" setValue createArg StatementExpression MethodInvocation genicTask MethodInvocation MemberReference outputdir createArg LocalVariableDeclaration ReferenceType String VariableDeclarator key LocalVariableDeclaration ReferenceType File VariableDeclarator f LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator keys MethodInvocation ejbFiles keys WhileStatement MethodInvocation keys hasMoreElements BlockStatement StatementExpression Assignment MemberReference key Cast ReferenceType String MethodInvocation keys nextElement = StatementExpression Assignment MemberReference f ClassCreator ReferenceType File BinaryOperation + BinaryOperation + MemberReference outputdir MemberReference File separator MemberReference key = StatementExpression MethodInvocation f MethodInvocation mkdirs getParentFile StatementExpression MethodInvocation Literal a bug of GenIC MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator classpath MethodInvocation IfStatement BinaryOperation == MemberReference classpath Literal null BlockStatement StatementExpression Assignment MemberReference classpath ClassCreator ReferenceType MethodInvocation MethodInvocation getProject getTask = StatementExpression MethodInvocation classpath ClassCreator ReferenceType MethodInvocation classpath getProject MemberReference jonasConfigDir append StatementExpression MethodInvocation classpath ClassCreator ReferenceType MethodInvocation classpath getProject MethodInvocation outputdir toString append IfStatement BinaryOperation != MemberReference orb Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference jonasroot MemberReference File separator Literal "lib" MemberReference File separator MemberReference orb Literal StatementExpression MethodInvocation classpath ClassCreator ReferenceType MethodInvocation classpath getProject MemberReference append StatementExpression MethodInvocation BinaryOperation + Literal "Using classpath: " MethodInvocation classpath toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genicTask MemberReference classpath StatementExpression Assignment MemberReference genicClass MethodInvocation MemberReference classpath = IfStatement BinaryOperation == MemberReference genicClass Literal null BlockStatement StatementExpression MethodInvocation Literal "Cannot find GenIC class in classpath." MemberReference Project MSG_ERR log ThrowStatement ClassCreator ReferenceType BuildException Literal "GenIC class not found, please check the classpath." BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Using '" MemberReference genicClass Literal "' GenIC class." MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genicTask MemberReference genicClass setClassname IfStatement MemberReference BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal "-keepgenerated" setValue createArg IfStatement MemberReference BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg IfStatement MemberReference BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation genicTask MethodInvocation MemberReference setLine createArg IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! Literal "" equals BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation genicTask MethodInvocation MemberReference setLine createArg IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! Literal "" equals BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation genicTask MethodInvocation MemberReference setLine createArg IfStatement MemberReference BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg IfStatement MemberReference BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg IfStatement BinaryOperation != MemberReference additionalargs Literal null BlockStatement StatementExpression MethodInvocation genicTask MethodInvocation MemberReference additionalargs setValue createArg StatementExpression MethodInvocation genicTask MethodInvocation Literal setValue createArg StatementExpression MethodInvocation genicTask MethodInvocation MethodInvocation genericJarFile getPath setValue createArg StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Calling " MemberReference genicClass Literal " for " MethodInvocation MemberReference descriptorDir getConfig MemberReference File separator MemberReference Literal "." MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MethodInvocation genicTask executeJava Literal 0 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "Deleting temp output directory '" MemberReference outputdir Literal "'." MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation MemberReference outputdir deleteAllFiles IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Deleting generic JAR " MethodInvocation genericJarFile toString MemberReference Project MSG_VERBOSE log StatementExpression MethodInvocation genericJarFile delete ThrowStatement ClassCreator ReferenceType BuildException Literal "GenIC reported an error." StatementExpression MethodInvocation MemberReference outputdir Literal "" MemberReference ejbFiles addAllFiles	1
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Commandline cmdline LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + Literal MemberReference ++ LocalVariableDeclaration ReferenceType VariableDeclarator exe ClassCreator ReferenceType This LocalVariableDeclaration ReferenceType Commandline ReferenceType VariableDeclarator arg MethodInvocation exe createArg StatementExpression MethodInvocation exe MethodInvocation cmdline getExecutable setExecutable StatementExpression MethodInvocation arg MethodInvocation Commandline MethodInvocation cmdline toString setLine StatementExpression MethodInvocation exe MemberReference StatementExpression MethodInvocation exe execute ReturnStatement MethodInvocation MethodInvocation MemberReference getProperty getProject	1
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public final ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal doesn't exist" expectBuildException StatementExpression MethodInvocation MethodInvocation MethodInvocation getMessage MethodInvocation Literal " not found." endsWith assertTrue	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort = StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference usedMatchingTask Literal true = StatementExpression SuperMethodInvocation MemberReference	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List add FormalParameter ReferenceType List l ReturnStatement Literal null	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getBranch Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getBranch setValue createArgument	0
MethodDeclaration Modifier public targetStarted FormalParameter ReferenceType BuildEvent event IfStatement MethodInvocation event MethodInvocation getName MethodInvocation Literal "" equals BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference error Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference ++ calls MethodInvocation event MethodInvocation MethodInvocation getAbsolutePath getProject assertEquals CatchClause CatchClauseParameter AssertionFailedError e StatementExpression Assignment MemberReference error MemberReference e =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Mapper mapper StatementExpression MethodInvocation MethodInvocation mapper add	0
MethodDeclaration Modifier public static ReferenceType Iterator FormalParameter Modifier final ReferenceType Enumeration e ReturnStatement ClassCreator ReferenceType Iterator MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MethodInvocation e hasMoreElements MethodDeclaration Modifier public ReferenceType Object next ReturnStatement MethodInvocation e nextElement MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public FormalParameter ReferenceType File directory StatementExpression Assignment This MemberReference directory MemberReference directory =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MethodInvocation getTaskType Literal " doesn\'t support the addsourcefile attribute" MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter BasicType byte data StatementExpression Assignment MemberReference MemberReference data =	0
MethodDeclaration Modifier public synchronized ReferenceType Exception getException ReturnStatement MemberReference exception	0
MethodDeclaration Modifier public ReferenceType StatementExpression MethodInvocation Literal MemberReference Project MSG_VERBOSE log LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation This StatementExpression MethodInvocation MemberReference add ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType long getSize IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef StatementExpression MethodInvocation ReturnStatement SuperMethodInvocation getSize	1
MethodDeclaration Modifier public BasicType long getSize ReturnStatement This MemberReference size	0
MethodDeclaration Modifier public FormalParameter BasicType boolean failonerror StatementExpression Assignment This MemberReference failonerror MemberReference failonerror =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType File component ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation elements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pathComponent Cast ReferenceType File MethodInvocation e nextElement IfStatement MethodInvocation pathComponent MemberReference component equals BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public execute BuildException LocalVariableDeclaration BasicType boolean VariableDeclarator fail TernaryExpression MethodInvocation MethodInvocation BinaryOperation && MethodInvocation MethodInvocation IfStatement MemberReference fail BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator text Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference message Literal null BinaryOperation > MethodInvocation message MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference text MethodInvocation message trim = BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BinaryOperation != MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null BlockStatement StatementExpression Assignment MemberReference text BinaryOperation + Literal MemberReference = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BinaryOperation == MethodInvocation MethodInvocation MemberReference getProperty getProject Literal null BlockStatement IfStatement BinaryOperation == MemberReference text Literal null BlockStatement StatementExpression Assignment MemberReference text Literal "" = BlockStatement StatementExpression Assignment MemberReference text Literal " and " += StatementExpression Assignment MemberReference text BinaryOperation + Literal MemberReference += IfStatement MethodInvocation BlockStatement StatementExpression Assignment MemberReference text Literal = BlockStatement IfStatement BinaryOperation == MemberReference text Literal null BlockStatement StatementExpression Assignment MemberReference text Literal "No = StatementExpression MethodInvocation BinaryOperation + Literal due to " MemberReference text MemberReference Project MSG_DEBUG log ThrowStatement TernaryExpression BinaryOperation == MemberReference status Literal null ClassCreator ReferenceType BuildException MemberReference text ClassCreator ReferenceType MemberReference text MethodInvocation status intValue	1
MethodDeclaration Modifier protected touch BuildException LocalVariableDeclaration BasicType long VariableDeclarator defaultTimestamp MethodInvocation IfStatement BinaryOperation != MemberReference file Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MethodInvocation file getParentFile MethodInvocation file getName MemberReference defaultTimestamp touch LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference r ReferenceType Touchable BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "Can't touch " MemberReference r StatementExpression MethodInvocation MemberReference r MemberReference defaultTimestamp touch ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation filesets size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MethodInvocation filesets MemberReference i elementAt LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs MethodInvocation getProject getDirectoryScanner LocalVariableDeclaration ReferenceType File VariableDeclarator fromDir MethodInvocation fs MethodInvocation getProject getDir LocalVariableDeclaration ReferenceType String VariableDeclarator srcDirs MethodInvocation ds getIncludedDirectories ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference srcDirs length MemberReference ++ j BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType FileResource MemberReference fromDir MemberReference ArraySelector MemberReference j srcDirs MemberReference defaultTimestamp touch	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public final ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest =	0
MethodDeclaration Modifier public copyFile FormalParameter ReferenceType File sourceFile FormalParameter ReferenceType File destFile IOException StatementExpression MethodInvocation FILE_UTILS MemberReference sourceFile MemberReference destFile copyFile	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation Os Literal "windows" isFamily BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + Literal MemberReference Literal = BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + Literal "\"" MemberReference Literal "\"" = StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument	0
MethodDeclaration Modifier protected ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector StatementExpression MethodInvocation v Literal addElement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MethodInvocation getPath addElement BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v MemberReference addElement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation v Literal addElement StatementExpression MethodInvocation v Literal "<pname>" addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier public static ReferenceType String getSystemId FormalParameter ReferenceType File file ReturnStatement MethodInvocation FILE_UTILS MethodInvocation file getAbsolutePath toURI	0
MethodDeclaration Modifier public ReferenceType String getValue IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference value Literal "" = IfStatement BinaryOperation == MethodInvocation value MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference value Literal "" = IfStatement MemberReference BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator current MethodInvocation value toCharArray LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator b ClassCreator ReferenceType StringBuffer MemberReference current length LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 WhileStatement BinaryOperation < MemberReference pos MemberReference current length BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MemberReference ArraySelector MemberReference ++ pos current IfStatement MemberReference BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference ch Literal ' ' BinaryOperation == MemberReference ch Literal '\t' BlockStatement ContinueStatement StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation b MemberReference ch append IfStatement BinaryOperation || BinaryOperation == MemberReference ch Literal '\n' BinaryOperation == MemberReference ch Literal '\r' BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference value MethodInvocation b toString = IfStatement MemberReference trim BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value trim = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal Literal is invalid - Name attribute should not be used" Literal "Specify the section name using the attribute of the expectBuildExceptionContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType Manifest ReferenceType Attribute attribute StatementExpression MethodInvocation MemberReference attribute	0
MethodDeclaration Modifier public push FormalParameter BasicType char cs StatementExpression MethodInvocation MemberReference cs Literal 0 MemberReference cs length push	0
MethodDeclaration Modifier protected handleOutput FormalParameter ReferenceType String output IfStatement MethodInvocation output MemberReference startsWith BlockStatement StatementExpression MethodInvocation MemberReference output MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation != MemberReference runner Literal null BlockStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation runner MemberReference output handleOutput IfStatement MemberReference BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleOutput BlockStatement StatementExpression SuperMethodInvocation MemberReference output handleOutput	1
MethodDeclaration Modifier protected ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference mainClass Literal null BinaryOperation != MethodInvocation mainClass length Literal 0 BlockStatement ReturnStatement BinaryOperation + Literal MemberReference mainClass BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType String line IfStatement MethodInvocation ! line Literal " startsWith BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Unexpected line from " MemberReference line StatementExpression Assignment MemberReference MethodInvocation line Literal MethodInvocation length " substring = StatementExpression MethodInvocation StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference status MemberReference =	0
MethodDeclaration Modifier public setTitle FormalParameter ReferenceType String src LocalVariableDeclaration ReferenceType VariableDeclarator h ClassCreator ReferenceType StatementExpression MethodInvocation h MemberReference src StatementExpression MethodInvocation MemberReference h	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String type LocalVariableDeclaration BasicType int VariableDeclarator pos IfStatement BinaryOperation || BinaryOperation == MemberReference type Literal null BinaryOperation < Assignment MemberReference pos MethodInvocation type Literal "charset" indexOf = Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator token ClassCreator ReferenceType StringTokenizer MethodInvocation type MemberReference pos substring Literal " StatementExpression MethodInvocation token nextToken ReturnStatement MethodInvocation token nextToken	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference className MethodInvocation trim =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public add FormalParameter ReferenceType B StatementExpression MethodInvocation Literal B log	0
MethodDeclaration Modifier public add FormalParameter ReferenceType ResourceCollection rc StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation resources MemberReference rc add	0
MethodDeclaration Modifier public init BuildException StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType reference BuildException IfStatement BinaryOperation || MethodInvocation ! extensions isEmpty MethodInvocation ! isEmpty BlockStatement ThrowStatement MethodInvocation tooManyAttributes LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator object MethodInvocation reference MethodInvocation getProject getReferencedObject IfStatement BinaryOperation instanceof MemberReference object ReferenceType ExtensionSet BlockStatement LocalVariableDeclaration Modifier final ReferenceType ExtensionSet VariableDeclarator other Cast ReferenceType ExtensionSet MemberReference object StatementExpression MethodInvocation extensions MemberReference other extensions addAll StatementExpression MethodInvocation MemberReference other addAll BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator message BinaryOperation + MethodInvocation reference getRefId Literal " doesn\'t refer to a ThrowStatement ClassCreator ReferenceType BuildException MemberReference message StatementExpression SuperMethodInvocation MemberReference reference	1
MethodDeclaration Modifier public FormalParameter ReferenceType File src StatementExpression MethodInvocation MemberReference src	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String c StatementExpression Assignment MemberReference MemberReference c =	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean b StatementExpression Assignment MemberReference cache MemberReference b =	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "This task is and will be removed in a Literal "of It is now part of the Literal MemberReference Project MSG_WARN log LocalVariableDeclaration ReferenceType VariableDeclarator command MethodInvocation StatementExpression MethodInvocation MemberReference command Literal false	0
MethodDeclaration Modifier public ReferenceType ReferenceType NameEntry StatementExpression Assignment MemberReference usedMatchingTask Literal true = ReturnStatement SuperMethodInvocation	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object key IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation load TryStatement ReturnStatement MethodInvocation cache MethodInvocation String MemberReference key valueOf getProperty CatchClause CatchClauseParameter ClassCastException e ReturnStatement Literal null	1
MethodDeclaration Modifier private BasicType boolean matches FormalParameter ReferenceType String input FormalParameter ReferenceType RE reg ReturnStatement MethodInvocation reg MemberReference input match	0
MethodDeclaration Modifier public FormalParameter ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation MethodInvocation MemberReference getCommandLine	0
MethodDeclaration Modifier public BasicType boolean isSelected FormalParameter ReferenceType File basedir FormalParameter ReferenceType String filename FormalParameter ReferenceType File file StatementExpression MethodInvocation validate LocalVariableDeclaration ReferenceType String VariableDeclarator destfiles MethodInvocation map MemberReference filename mapFileName IfStatement BinaryOperation == MemberReference destfiles Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation != MemberReference destfiles length Literal 1 BinaryOperation == MemberReference ArraySelector Literal 0 destfiles Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Invalid destination file results for " MemberReference targetdir Literal " with filename " MemberReference filename LocalVariableDeclaration ReferenceType String VariableDeclarator destname MemberReference ArraySelector Literal 0 destfiles LocalVariableDeclaration ReferenceType File VariableDeclarator destfile ClassCreator ReferenceType File MemberReference targetdir MemberReference destname ReturnStatement BinaryOperation == MethodInvocation destfile exists MemberReference	1
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter BasicType boolean replace StatementExpression Assignment MemberReference MemberReference replace =	0
MethodDeclaration Modifier public ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator classRefs ClassCreator ReferenceType Vector ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation constantPool size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator entry MethodInvocation constantPool MemberReference i getEntry IfStatement BinaryOperation && BinaryOperation != MemberReference entry Literal null BinaryOperation == MethodInvocation entry getTag MemberReference BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference entry IfStatement MethodInvocation ! MethodInvocation MemberReference className equals getClassName BlockStatement StatementExpression MethodInvocation classRefs MethodInvocation MethodInvocation getClassName addElement ReturnStatement MemberReference classRefs	1
MethodDeclaration Modifier public BasicType boolean FormalParameter Modifier final ReferenceType other ReturnStatement MethodInvocation ! MemberReference other	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier public ReferenceType Vector getGroups FormalParameter ReferenceType String input FormalParameter BasicType int options BuildException LocalVariableDeclaration ReferenceType RE VariableDeclarator reg MethodInvocation MemberReference options getCompiledPattern IfStatement MethodInvocation ! MemberReference input MemberReference reg matches BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Vector VariableDeclarator v ClassCreator ReferenceType Vector LocalVariableDeclaration BasicType int VariableDeclarator cnt MethodInvocation reg ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cnt MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator match MethodInvocation reg MemberReference i IfStatement BinaryOperation == MemberReference match Literal null BlockStatement StatementExpression Assignment MemberReference match Literal "" = StatementExpression MethodInvocation v MemberReference match addElement ReturnStatement MemberReference v	1
MethodDeclaration Modifier private IfStatement BinaryOperation != MemberReference classLoader Literal null BlockStatement StatementExpression MethodInvocation classLoader cleanup StatementExpression Assignment MemberReference classLoader Literal null =	0
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType String pattern FormalParameter ReferenceType String str ReturnStatement MethodInvocation MemberReference pattern MemberReference str Literal true	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType StatementExpression MethodInvocation project Literal MemberReference p StatementExpression MethodInvocation p ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation p MemberReference project StatementExpression MethodInvocation Literal make a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p MemberReference project StatementExpression MethodInvocation Literal make a to fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals LocalVariableDeclaration ReferenceType VariableDeclarator p1 ClassCreator ReferenceType StatementExpression MethodInvocation project Literal MemberReference p1 StatementExpression MethodInvocation p1 ClassCreator ReferenceType Literal "dummy2" LocalVariableDeclaration ReferenceType VariableDeclarator p2 ClassCreator ReferenceType StatementExpression MethodInvocation project Literal "dummy2" MemberReference p2 StatementExpression MethodInvocation p2 ClassCreator ReferenceType Literal LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation project Literal MemberReference StatementExpression MethodInvocation ClassCreator ReferenceType Literal TryStatement StatementExpression MethodInvocation p1 MemberReference project StatementExpression MethodInvocation Literal make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals TryStatement StatementExpression MethodInvocation p1 MemberReference project StatementExpression MethodInvocation Literal make reference." fail CatchClause CatchClauseParameter BuildException be StatementExpression MethodInvocation Literal "This data type contains a reference." MethodInvocation be getMessage assertEquals StatementExpression Assignment MemberReference p1 ClassCreator ReferenceType = StatementExpression MethodInvocation project Literal MemberReference p1 StatementExpression MethodInvocation p1 ClassCreator ReferenceType Literal "dummy2" StatementExpression Assignment MemberReference p2 ClassCreator ReferenceType = StatementExpression MethodInvocation project Literal "dummy2" MemberReference p2 StatementExpression MethodInvocation p2 ClassCreator ReferenceType Literal StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation project Literal MemberReference StatementExpression MethodInvocation Literal setIncludes StatementExpression MethodInvocation MethodInvocation Literal setName LocalVariableDeclaration ReferenceType String VariableDeclarator i MethodInvocation p1 MemberReference project StatementExpression MethodInvocation Literal "One pattern inside a Literal 1 MemberReference i length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 i assertEquals StatementExpression Assignment MemberReference i MethodInvocation MemberReference project = StatementExpression MethodInvocation Literal "One pattern inside a Literal 1 MemberReference i length assertEquals StatementExpression MethodInvocation Literal MemberReference ArraySelector Literal 0 i assertEquals	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference next	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public tearDown StatementExpression MethodInvocation Literal "cleanup" executeTarget	0
MethodDeclaration Modifier public execute ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation children iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType UnknownElement VariableDeclarator Cast ReferenceType UnknownElement MethodInvocation i next StatementExpression MethodInvocation maybeConfigure LocalVariableDeclaration ReferenceType VariableDeclarator child Cast ReferenceType MethodInvocation StatementExpression MethodInvocation child This StatementExpression MethodInvocation child perform	1
MethodDeclaration Modifier public FormalParameter BasicType int port StatementExpression Assignment This MemberReference MemberReference port =	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType file ReturnStatement MethodInvocation file	0
MethodDeclaration Modifier private FormalParameter ReferenceType String oldValue BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator newV MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator currentValue MethodInvocation MemberReference oldValue IfStatement BinaryOperation == MemberReference currentValue Literal null BlockStatement StatementExpression Assignment MemberReference currentValue MemberReference = IfStatement BinaryOperation == MemberReference operation MemberReference Operation BlockStatement StatementExpression Assignment MemberReference newV MemberReference currentValue = IfStatement BinaryOperation == MemberReference operation MemberReference Operation BlockStatement StatementExpression Assignment MemberReference newV BinaryOperation + MemberReference currentValue MemberReference value = StatementExpression Assignment This MemberReference newValue MemberReference newV =	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal a foo" MethodInvocation ClassCreator ReferenceType assertEquals	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args Exception LocalVariableDeclaration BasicType int VariableDeclarator time MethodInvocation Integer MemberReference ArraySelector Literal 0 args parseInt IfStatement BinaryOperation < MemberReference time Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Invalid time: " MemberReference time StatementExpression MethodInvocation Thread MemberReference time sleep	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType String err StatementExpression Assignment MemberReference systemError MemberReference err =	0
MethodDeclaration Modifier public ReferenceType String getEncoding ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier private ReferenceType InputSource filesystemLookup FormalParameter ReferenceType matchingEntry LocalVariableDeclaration ReferenceType String VariableDeclarator uri MethodInvocation matchingEntry getLocation StatementExpression Assignment MemberReference uri MethodInvocation uri MemberReference File separatorChar Literal '/' replace = LocalVariableDeclaration ReferenceType URL VariableDeclarator baseURL Literal null IfStatement BinaryOperation != MethodInvocation matchingEntry getBase Literal null BlockStatement StatementExpression Assignment MemberReference baseURL MethodInvocation matchingEntry getBase = BlockStatement TryStatement StatementExpression Assignment MemberReference baseURL MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject getFileURL = CatchClause CatchClauseParameter MalformedURLException ex ThrowStatement ClassCreator ReferenceType BuildException Literal "Project basedir cannot be converted to a URL" LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source Literal null LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null TryStatement StatementExpression Assignment MemberReference url ClassCreator ReferenceType URL MemberReference baseURL MemberReference uri = CatchClause CatchClauseParameter MalformedURLException ex LocalVariableDeclaration ReferenceType File VariableDeclarator testFile ClassCreator ReferenceType File MemberReference uri IfStatement BinaryOperation && MethodInvocation testFile exists MethodInvocation testFile canRead BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal : '" MemberReference uri Literal "' matches a readable file" MemberReference Project MSG_DEBUG log TryStatement StatementExpression Assignment MemberReference url MethodInvocation FILE_UTILS MemberReference testFile getFileURL = CatchClause CatchClauseParameter MalformedURLException ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "could not find an URL for :" MethodInvocation testFile getAbsolutePath BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal : '" MemberReference uri Literal "' does not match a readable file" MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && BinaryOperation != MemberReference url Literal null MethodInvocation url MethodInvocation Literal "file" equals getProtocol BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation FILE_UTILS MethodInvocation url toString fromURI IfStatement BinaryOperation != MemberReference fileName Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal " MemberReference fileName MemberReference Project MSG_DEBUG log LocalVariableDeclaration ReferenceType File VariableDeclarator resFile ClassCreator ReferenceType File MemberReference fileName IfStatement BinaryOperation && MethodInvocation resFile exists MethodInvocation resFile canRead BlockStatement TryStatement StatementExpression Assignment MemberReference source ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference resFile = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference resFile getSystemId StatementExpression MethodInvocation source MemberReference setSystemId StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal entry matched a readable file: '" MemberReference Literal "'" MemberReference Project MSG_DEBUG log CatchClause CatchClauseParameter IOException ex ReturnStatement MemberReference source	1
MethodDeclaration Modifier protected validateAttributes BuildException IfStatement BinaryOperation && BinaryOperation != MemberReference file Literal null MethodInvocation file isDirectory BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference destFile Literal null BinaryOperation != MemberReference destDir Literal null BinaryOperation && BinaryOperation == MemberReference destFile Literal null BinaryOperation == MemberReference destDir Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + Literal "One and only one of tofile and " Literal "must be set." StatementExpression Assignment MemberReference destFile TernaryExpression BinaryOperation == MemberReference destFile Literal null ClassCreator ReferenceType File MemberReference destDir MethodInvocation file getName MemberReference destFile = StatementExpression Assignment MemberReference destDir TernaryExpression BinaryOperation == MemberReference destDir Literal null MethodInvocation destFile getParentFile MemberReference destDir = StatementExpression MethodInvocation completeDirMap MemberReference file MemberReference destFile put StatementExpression Assignment MemberReference file Literal null = BlockStatement StatementExpression SuperMethodInvocation validateAttributes	1
MethodDeclaration Modifier protected BasicType boolean check FormalParameter ReferenceType ResourceCollection rc LocalVariableDeclaration BasicType boolean VariableDeclarator upToDate Literal true IfStatement MethodInvocation MemberReference rc BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs Cast ReferenceType FileSet MemberReference rc StatementExpression Assignment MemberReference upToDate MethodInvocation MethodInvocation fs MethodInvocation getProject getDir MethodInvocation MemberReference fs check = IfStatement BinaryOperation && MethodInvocation ! rc MethodInvocation ! BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal filesystem resources are supported" IfStatement MethodInvocation rc BlockStatement LocalVariableDeclaration ReferenceType HashSet VariableDeclarator basedirs ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType HashMap VariableDeclarator basedirToFilesMap ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation rc iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator r Cast ReferenceType FileResource MethodInvocation iter next LocalVariableDeclaration ReferenceType File VariableDeclarator base MethodInvocation r IfStatement BinaryOperation == MemberReference base Literal null BlockStatement StatementExpression Assignment MemberReference base MemberReference = StatementExpression MethodInvocation basedirs MemberReference base add LocalVariableDeclaration ReferenceType Vector VariableDeclarator files Cast ReferenceType Vector MethodInvocation basedirToFilesMap MemberReference base get IfStatement BinaryOperation == MemberReference files Literal null BlockStatement StatementExpression Assignment MemberReference files ClassCreator ReferenceType Vector = StatementExpression MethodInvocation basedirToFilesMap MemberReference base ClassCreator ReferenceType Vector put StatementExpression MethodInvocation files MethodInvocation r getName add StatementExpression Assignment MemberReference iter MethodInvocation basedirs iterator = WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator base Cast ReferenceType File MethodInvocation iter next LocalVariableDeclaration ReferenceType Vector VariableDeclarator f Cast ReferenceType Vector MethodInvocation basedirToFilesMap MemberReference base get LocalVariableDeclaration ReferenceType String VariableDeclarator files Cast ReferenceType String MethodInvocation f ArrayCreator ReferenceType String MethodInvocation f size toArray StatementExpression Assignment MemberReference upToDate MethodInvocation TernaryExpression BinaryOperation == MemberReference base MemberReference Literal null MemberReference base MemberReference files check &= BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation rc iterator WhileStatement BinaryOperation && MemberReference upToDate MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next StatementExpression Assignment MemberReference upToDate MethodInvocation MemberReference r &= ReturnStatement MemberReference upToDate	1
MethodDeclaration FormalParameter ReferenceType Object element FormalParameter ReferenceType Attributes attr LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation attr Literal "id" getValue IfStatement BinaryOperation != MemberReference id Literal null BlockStatement StatementExpression MethodInvocation project MemberReference id MemberReference element	0
MethodDeclaration Modifier public FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file =	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference TernaryExpression MemberReference MemberReference Boolean TRUE MemberReference Boolean FALSE put	0
MethodDeclaration Modifier public ReferenceType Target ReturnStatement MemberReference currentTarget	0
MethodDeclaration Modifier private FormalParameter ReferenceType Resource stylesheet LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation resources iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Resource VariableDeclarator r Cast ReferenceType Resource MethodInvocation iter next IfStatement MethodInvocation ! r isExists BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator base MemberReference baseDir LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation r getName IfStatement BinaryOperation instanceof MemberReference r ReferenceType FileResource BlockStatement LocalVariableDeclaration ReferenceType FileResource VariableDeclarator f Cast ReferenceType FileResource MemberReference r StatementExpression Assignment MemberReference base MethodInvocation f = IfStatement BinaryOperation == MemberReference base Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation f MethodInvocation getAbsolutePath getFile = StatementExpression MethodInvocation MemberReference base MemberReference name MemberReference destDir MemberReference stylesheet process	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal BinaryOperation + Literal MemberReference expectLogContaining	0
MethodDeclaration Modifier public FormalParameter ReferenceType File StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType a StatementExpression MethodInvocation MemberReference a addElement	0
MethodDeclaration Modifier public synchronized ReferenceType Enumeration getChildren ReturnStatement TernaryExpression BinaryOperation == MemberReference children Literal null ClassCreator ReferenceType CollectionUtils ReferenceType MethodInvocation Collections MemberReference children enumeration	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal executeTarget	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType File VariableDeclarator dir1 MethodInvocation LocalVariableDeclaration ReferenceType File VariableDeclarator MethodInvocation project Literal StatementExpression MethodInvocation Literal ArrayCreator ReferenceType String ArrayInitializer MethodInvocation dir1 getAbsolutePath MethodInvocation getAbsolutePath MethodInvocation dir1 getAbsolutePath	0
MethodDeclaration Modifier public addContainsRegexp FormalParameter ReferenceType ContainsRegexpSelector selector StatementExpression MethodInvocation MemberReference selector appendSelector	1
MethodDeclaration Modifier private IOException IfStatement BinaryOperation < This MemberReference This MemberReference BlockStatement StatementExpression Assignment This MemberReference currentChar This MemberReference su_ch2 = StatementExpression This MemberReference crc MethodInvocation This MemberReference su_ch2 StatementExpression This ++ MemberReference BlockStatement StatementExpression Assignment This MemberReference MemberReference = StatementExpression This ++ MemberReference su_i2 StatementExpression Assignment This MemberReference su_count Literal 0 = StatementExpression MethodInvocation setupRandPartA	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType ZipLong VariableDeclarator ClassCreator ReferenceType ZipLong Literal LocalVariableDeclaration BasicType byte VariableDeclarator result MethodInvocation getBytes StatementExpression MethodInvocation Literal Literal 4 MemberReference result length assertEquals StatementExpression MethodInvocation Literal byte Literal MemberReference ArraySelector Literal 0 result assertEquals StatementExpression MethodInvocation Literal byte Literal MemberReference ArraySelector Literal 1 result assertEquals StatementExpression MethodInvocation Literal byte Literal MemberReference ArraySelector Literal 2 result assertEquals StatementExpression MethodInvocation Literal byte Literal MemberReference ArraySelector Literal 3 result assertEquals	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator tmp ClassCreator ReferenceType File MethodInvocation Literal LocalVariableDeclaration ReferenceType File VariableDeclarator check ClassCreator ReferenceType File MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation tmp exists assertTrue StatementExpression MethodInvocation MethodInvocation FILE_UTILS MemberReference tmp MemberReference check assertTrue	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement This MemberReference	0
MethodDeclaration Modifier public synchronized FormalParameter BasicType boolean createEmptyFiles StatementExpression Assignment This MemberReference createEmptyFiles MemberReference createEmptyFiles =	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation MethodInvocation MemberReference append MethodInvocation Literal " " append MethodInvocation toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation packages MemberReference addElement	0
MethodDeclaration Modifier public setCommandline FormalParameter ReferenceType String commandline StatementExpression Assignment MemberReference cmdl MemberReference commandline =	0
MethodDeclaration Modifier public setProperty FormalParameter Modifier final ReferenceType String property StatementExpression Assignment This MemberReference propertyName MemberReference property =	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort = StatementExpression Assignment MemberReference MethodInvocation cpStream readUnsignedShort =	1
MethodDeclaration Modifier public push FormalParameter BasicType char c StatementExpression MethodInvocation Cast BasicType int MemberReference c push	0
MethodDeclaration Modifier public ReferenceType String getAttributeValue FormalParameter ReferenceType String attributeName LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attribute MethodInvocation MethodInvocation attributeName toLowerCase getAttribute IfStatement BinaryOperation == MemberReference attribute Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation attribute getValue	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal "true" Literal Literal "false" Literal Literal "on" Literal Literal	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation != MemberReference Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType OutputStream os IOException StatementExpression Assignment This MemberReference os MemberReference os =	0
MethodDeclaration Modifier public BasicType int read IOException IfStatement MethodInvocation ! getInitialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true WhileStatement BinaryOperation || BinaryOperation == MemberReference line Literal null BinaryOperation == MethodInvocation line length Literal 0 BlockStatement StatementExpression Assignment MemberReference line MethodInvocation lineTokenizer MemberReference in getToken = IfStatement BinaryOperation == MemberReference line Literal null BlockStatement ReturnStatement Literal - 1 StatementExpression Assignment MemberReference line MethodInvocation MemberReference line = StatementExpression Assignment MemberReference linePos Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation line MemberReference linePos charAt StatementExpression MemberReference ++ linePos IfStatement BinaryOperation == MemberReference linePos MethodInvocation line length BlockStatement StatementExpression Assignment MemberReference line Literal null = ReturnStatement MemberReference ch	1
MethodDeclaration Modifier public BasicType boolean IOException BuildException IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation ReturnStatement MemberReference traversesSymlinks	1
MethodDeclaration Modifier static protected BasicType boolean FormalParameter ReferenceType StringBuffer buffer FormalParameter BasicType int pos IfStatement BinaryOperation || BinaryOperation == MethodInvocation buffer MemberReference pos charAt Literal '/' BinaryOperation == MethodInvocation buffer MemberReference pos charAt Literal '\\' BlockStatement StatementExpression MethodInvocation buffer MemberReference pos MemberReference File separatorChar ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attrs FormalParameter ReferenceType context SAXParseException ThrowStatement ClassCreator ReferenceType SAXParseException BinaryOperation + BinaryOperation + Literal "Unexpected element \"" MemberReference qname Literal " \"" MemberReference context locator	0
MethodDeclaration Modifier public FormalParameter ReferenceType String targetName FormalParameter ReferenceType Target target LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + Literal " " MemberReference targetName StatementExpression MethodInvocation MemberReference msg MemberReference MSG_DEBUG log StatementExpression MethodInvocation target This setProject StatementExpression MethodInvocation targets MemberReference targetName MemberReference target put	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation hasSelectors BlockStatement StatementExpression MethodInvocation buf Literal " append StatementExpression MethodInvocation buf SuperMethodInvocation toString append StatementExpression MethodInvocation buf Literal "}" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier private determineDependencies IOException StatementExpression Assignment MemberReference ClassCreator ReferenceType Hashtable = StatementExpression Assignment MemberReference classFileInfoMap ClassCreator ReferenceType Hashtable = LocalVariableDeclaration BasicType boolean VariableDeclarator cacheDirty Literal false LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencyMap ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType File VariableDeclarator Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator cacheFileExists Literal true LocalVariableDeclaration BasicType long VariableDeclarator cacheLastModified MemberReference Long MAX_VALUE IfStatement BinaryOperation != MemberReference cache Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType File MemberReference cache MemberReference = StatementExpression Assignment MemberReference cacheFileExists MethodInvocation exists = StatementExpression Assignment MemberReference cacheLastModified MethodInvocation lastModified = IfStatement MemberReference cacheFileExists BlockStatement StatementExpression Assignment MemberReference dependencyMap MethodInvocation MemberReference = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation MethodInvocation elements MemberReference WhileStatement MethodInvocation hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ClassFileInfo VariableDeclarator info Cast ReferenceType ClassFileInfo MethodInvocation nextElement StatementExpression MethodInvocation BinaryOperation + Literal "Adding class info for " MemberReference info className MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation classFileInfoMap MemberReference info className MemberReference info put LocalVariableDeclaration ReferenceType Vector VariableDeclarator dependencyList Literal null IfStatement BinaryOperation != MemberReference cache Literal null BlockStatement IfStatement BinaryOperation && MemberReference cacheFileExists BinaryOperation > MemberReference cacheLastModified MethodInvocation lastModified BlockStatement StatementExpression Assignment MemberReference dependencyList Cast ReferenceType Vector MethodInvocation dependencyMap MemberReference info className get = IfStatement BinaryOperation == MemberReference dependencyList Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference info className addRootClass StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference dependencyList ClassCreator ReferenceType Vector = LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator depEnum MethodInvocation WhileStatement MethodInvocation depEnum hasMoreElements BlockStatement StatementExpression MethodInvocation dependencyList MethodInvocation depEnum nextElement addElement StatementExpression Assignment MemberReference cacheDirty Literal true = StatementExpression MethodInvocation dependencyMap MemberReference info className MemberReference dependencyList put LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator depEnum MethodInvocation dependencyList elements WhileStatement MethodInvocation depEnum hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation depEnum nextElement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator affectedClasses Cast ReferenceType Hashtable MethodInvocation MemberReference get IfStatement BinaryOperation == MemberReference affectedClasses Literal null BlockStatement StatementExpression Assignment MemberReference affectedClasses ClassCreator ReferenceType Hashtable = StatementExpression MethodInvocation MemberReference MemberReference affectedClasses put StatementExpression MethodInvocation affectedClasses MemberReference info className MemberReference info put StatementExpression Assignment MemberReference Literal null = LocalVariableDeclaration ReferenceType VariableDeclarator checkPath MethodInvocation IfStatement BinaryOperation != MemberReference checkPath Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType Hashtable = LocalVariableDeclaration ReferenceType AntClassLoader VariableDeclarator loader MethodInvocation MethodInvocation MemberReference checkPath createClassLoader getProject LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator classpathFileCache ClassCreator ReferenceType Hashtable LocalVariableDeclaration ReferenceType Object VariableDeclarator ClassCreator ReferenceType Object ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation dependencyMap keys MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Vector VariableDeclarator dependencyList Cast ReferenceType Vector MethodInvocation dependencyMap MemberReference className get LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator dependencies ClassCreator ReferenceType Hashtable StatementExpression MethodInvocation MemberReference className MemberReference dependencies put LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e2 MethodInvocation dependencyList elements WhileStatement MethodInvocation e2 hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator dependency Cast ReferenceType String MethodInvocation e2 nextElement LocalVariableDeclaration ReferenceType Object VariableDeclarator classpathFileObject MethodInvocation classpathFileCache MemberReference dependency get IfStatement BinaryOperation == MemberReference classpathFileObject Literal null BlockStatement StatementExpression Assignment MemberReference classpathFileObject MemberReference = IfStatement BinaryOperation && MethodInvocation ! dependency Literal "java." startsWith MethodInvocation ! dependency Literal startsWith BlockStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator classURL MethodInvocation loader BinaryOperation + MethodInvocation dependency Literal '.' Literal '/' replace Literal ".class" getResource IfStatement BinaryOperation != MemberReference classURL Literal null BlockStatement IfStatement MethodInvocation classURL MethodInvocation Literal "jar" equals getProtocol BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator jarFilePath MethodInvocation classURL getFile LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation jarFilePath Literal '!' indexOf StatementExpression Assignment MemberReference jarFilePath MethodInvocation jarFilePath Literal 0 MemberReference substring = IfStatement MethodInvocation jarFilePath Literal "file:" startsWith BlockStatement StatementExpression Assignment MemberReference classpathFileObject ClassCreator ReferenceType File MethodInvocation FileUtils MethodInvocation MemberReference jarFilePath fromURI getFileUtils = BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal path in jar: " MemberReference jarFilePath IfStatement MethodInvocation classURL MethodInvocation Literal "file" equals getProtocol BlockStatement StatementExpression Assignment MemberReference classpathFileObject ClassCreator ReferenceType File MethodInvocation FileUtils MethodInvocation MethodInvocation classURL toExternalForm fromURI getFileUtils = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Class " MemberReference className Literal " depends on " MemberReference classpathFileObject Literal " due to " MemberReference dependency MemberReference Project MSG_DEBUG log StatementExpression MethodInvocation classpathFileCache MemberReference dependency MemberReference classpathFileObject put IfStatement BinaryOperation && BinaryOperation != MemberReference classpathFileObject Literal null BinaryOperation != MemberReference classpathFileObject MemberReference BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator jarFile Cast ReferenceType File MemberReference classpathFileObject StatementExpression MethodInvocation dependencies MemberReference jarFile MemberReference jarFile put IfStatement BinaryOperation && BinaryOperation != MemberReference cache Literal null MemberReference cacheDirty BlockStatement StatementExpression MethodInvocation MemberReference dependencyMap	1
MethodDeclaration Modifier private ReferenceType FormalParameter BasicType boolean log IfStatement MethodInvocation Literal "1.1" startsWith BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MemberReference log BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal "Ignoring as " Literal "the target doesn't support it." log BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MethodInvocation TernaryExpression MethodInvocation Literal Literal "ignore" IfStatement MethodInvocation BlockStatement ReturnStatement MemberReference ReturnStatement ClassCreator ReferenceType Literal null	0
MethodDeclaration Modifier public static ReferenceType String describeCommand FormalParameter ReferenceType String args IfStatement BinaryOperation || BinaryOperation == MemberReference args Literal null BinaryOperation == MemberReference args length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal "Executing StatementExpression MethodInvocation buf MemberReference ArraySelector Literal 0 args append StatementExpression MethodInvocation buf Literal "\'" append IfStatement BinaryOperation > MemberReference args length Literal 1 BlockStatement StatementExpression MethodInvocation buf Literal " with " append StatementExpression MethodInvocation buf MethodInvocation MemberReference args Literal 1 append BlockStatement StatementExpression MethodInvocation buf MemberReference append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier protected scanDir FormalParameter ReferenceType File baseDir FormalParameter ReferenceType String files FormalParameter ReferenceType mapper LocalVariableDeclaration ReferenceType String VariableDeclarator newFiles MemberReference files IfStatement MemberReference BlockStatement StatementExpression MethodInvocation Literal "will test to implementation in mode." MemberReference Project MSG_VERBOSE log IfStatement BinaryOperation && BinaryOperation && MemberReference BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation Literal indexOf Literal - 1 BlockStatement StatementExpression MethodInvocation Literal "no test as option has been specified" MemberReference Project MSG_VERBOSE log BlockStatement LocalVariableDeclaration ReferenceType SourceFileScanner VariableDeclarator sfs ClassCreator ReferenceType SourceFileScanner This StatementExpression Assignment MemberReference newFiles MethodInvocation sfs MemberReference files MemberReference baseDir MemberReference baseDir MemberReference mapper = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference newFiles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector MemberReference i MethodInvocation MemberReference File separatorChar Literal '.' replace newFiles StatementExpression Assignment MemberReference name MethodInvocation name Literal 0 MethodInvocation name Literal ".class" lastIndexOf substring = StatementExpression MethodInvocation compileList MemberReference name addElement	1
MethodDeclaration Modifier public ReferenceType String getEncoding IfStatement MethodInvocation isReference BlockStatement LocalVariableDeclaration ReferenceType AbstractFileSet VariableDeclarator ref MethodInvocation MethodInvocation getProject IfStatement BinaryOperation instanceof MemberReference ref ReferenceType ZipFileSet BlockStatement ReturnStatement Cast ReferenceType ZipFileSet MemberReference ref BlockStatement ReturnStatement Literal null ReturnStatement MemberReference encoding	0
MethodDeclaration Modifier public BasicType boolean getVersion ReturnStatement MemberReference	0
MethodDeclaration Modifier public setClassname FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference MemberReference name =	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation Integer MemberReference MemberReference parseInt	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType PlanarImage executeTransformOperation FormalParameter ReferenceType PlanarImage image LocalVariableDeclaration ReferenceType VariableDeclarator bi MethodInvocation image getAsBufferedImage LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics Cast ReferenceType Graphics2D MethodInvocation bi ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation instructions size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ImageOperation VariableDeclarator instr Cast ReferenceType ImageOperation MethodInvocation instructions MemberReference i elementAt IfStatement BinaryOperation instanceof MemberReference instr ReferenceType DrawOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator op Cast ReferenceType DrawOperation MemberReference instr StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal to x=" MemberReference Literal " y=" MemberReference log StatementExpression MethodInvocation graphics MethodInvocation op getAsBufferedImage Literal null MemberReference MemberReference IfStatement BinaryOperation instanceof MemberReference instr ReferenceType TransformOperation BlockStatement LocalVariableDeclaration ReferenceType PlanarImage VariableDeclarator op Cast ReferenceType TransformOperation MemberReference instr LocalVariableDeclaration ReferenceType VariableDeclarator child MethodInvocation op getAsBufferedImage StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal to x=" MemberReference Literal " y=" MemberReference log StatementExpression MethodInvocation graphics MemberReference child Literal null MemberReference MemberReference StatementExpression MethodInvocation PlanarImage MemberReference bi wrapRenderedImage StatementExpression Assignment MemberReference image MethodInvocation PlanarImage MemberReference bi wrapRenderedImage = ReturnStatement MemberReference image	1
MethodDeclaration Modifier public ReferenceType String getOutput ReturnStatement MethodInvocation MemberReference cleanBuffer	0
MethodDeclaration Modifier protected close IfStatement BinaryOperation != MemberReference writer Literal null BlockStatement StatementExpression MethodInvocation writer flush StatementExpression MethodInvocation writer close	0
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation Literal Literal "file:" LocalVariableDeclaration ReferenceType String VariableDeclarator property MethodInvocation Literal getProperty LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassCreator ReferenceType URL MemberReference property LocalVariableDeclaration ReferenceType InputStream VariableDeclarator instream MethodInvocation url openStream StatementExpression MethodInvocation instream close	0
MethodDeclaration Modifier public execute BuildException StatementExpression MethodInvocation Literal "DEPRECATED - The rename task is deprecated. Use move instead." log IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal attribute is required" MethodInvocation getLocation IfStatement BinaryOperation == MemberReference src Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal "src attribute is required" MethodInvocation getLocation IfStatement BinaryOperation && MemberReference ! replace MethodInvocation dest exists BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference dest Literal " already exists." TryStatement StatementExpression MethodInvocation FILE_UTILS MemberReference src MemberReference dest rename CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unable to rename " MemberReference src Literal " to " MemberReference dest MemberReference e MethodInvocation getLocation	1
MethodDeclaration Modifier public FormalParameter BasicType long value StatementExpression Assignment MemberReference MemberReference value =	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType OutputStream getOutputStream ReturnStatement MemberReference outputStream	0
MethodDeclaration Modifier public FormalParameter ReferenceType String beantype StatementExpression Assignment This MemberReference beantype MethodInvocation beantype toLowerCase =	1
MethodDeclaration Modifier public FormalParameter BasicType boolean l StatementExpression Assignment MemberReference MemberReference l =	0
MethodDeclaration Modifier public setUp StatementExpression MethodInvocation Literal configureProject	0
MethodDeclaration Modifier private log FormalParameter ReferenceType String line IfStatement MemberReference ! emacsMode BlockStatement StatementExpression MethodInvocation task Literal "" TernaryExpression MemberReference error MemberReference Project MSG_ERR MemberReference Project MSG_WARN log StatementExpression MethodInvocation task MemberReference line TernaryExpression MemberReference error MemberReference Project MSG_ERR MemberReference Project MSG_WARN log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget IfStatement BinaryOperation >= SuperMethodInvocation MethodInvocation Literal indexOf getLog Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Using input string"	0
MethodDeclaration Modifier protected addDefinition FormalParameter ReferenceType ClassLoader al FormalParameter ReferenceType String name FormalParameter ReferenceType String classname BuildException LocalVariableDeclaration ReferenceType Class VariableDeclarator cl Literal null TryStatement TryStatement StatementExpression Assignment MemberReference name MethodInvocation ProjectHelper MethodInvocation getURI MemberReference name genComponentName = IfStatement BinaryOperation != MemberReference MemberReference IGNORE BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation Class MemberReference classname Literal true MemberReference al forName = IfStatement BinaryOperation != MemberReference adapter Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Class MemberReference adapter Literal true MemberReference al forName = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Class MemberReference Literal true MemberReference al forName = LocalVariableDeclaration ReferenceType AntTypeDefinition VariableDeclarator def ClassCreator ReferenceType AntTypeDefinition StatementExpression MethodInvocation def MemberReference name setName StatementExpression MethodInvocation def MemberReference classname StatementExpression MethodInvocation def MemberReference cl StatementExpression MethodInvocation def MemberReference StatementExpression MethodInvocation def MemberReference StatementExpression MethodInvocation def MemberReference al IfStatement BinaryOperation != MemberReference cl Literal null BlockStatement StatementExpression MethodInvocation def MethodInvocation getProject StatementExpression MethodInvocation ComponentHelper MethodInvocation MemberReference def MethodInvocation getProject getComponentHelper CatchClause CatchClauseParameter ClassNotFoundException cnfe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " class " MemberReference classname Literal " cannot be found" ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference cnfe MethodInvocation getLocation CatchClause CatchClauseParameter NoClassDefFoundError ncdfe LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getTaskName Literal " A class needed by class " MemberReference classname Literal " cannot be found: " MethodInvocation ncdfe getMessage ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg MemberReference ncdfe MethodInvocation getLocation CatchClause CatchClauseParameter BuildException ex SwitchStatement MemberReference SwitchStatementCase MemberReference MemberReference ThrowStatement MemberReference ex SwitchStatementCase MemberReference StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MethodInvocation ex getLocation Literal "Warning: " MethodInvocation ex getMessage MemberReference Project MSG_WARN log BreakStatement SwitchStatementCase StatementExpression MethodInvocation BinaryOperation + MethodInvocation ex getLocation MethodInvocation ex getMessage MemberReference Project MSG_DEBUG log	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference state	0
MethodDeclaration Modifier protected BasicType int FormalParameter BasicType int options LocalVariableDeclaration BasicType int VariableDeclarator MemberReference RE IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference RE |= IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference RE |= IfStatement MethodInvocation MemberReference options MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference RE |= ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType File FormalParameter ReferenceType File libDir LocalVariableDeclaration ReferenceType FilenameFilter VariableDeclarator filter ClassCreator ReferenceType FilenameFilter MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ReturnStatement MethodInvocation name Literal ".jar" endsWith LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation libDir MemberReference filter listFiles ReturnStatement MemberReference files	1
MethodDeclaration Modifier public FormalParameter ReferenceType String targetType BuildException StatementExpression Assignment This MemberReference targetType MethodInvocation targetType toLowerCase = IfStatement BinaryOperation && MethodInvocation ! targetType Literal equals MethodInvocation ! targetType Literal equals BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + Literal " MemberReference targetType Literal " is not a valid type"	1
MethodDeclaration Modifier public ReferenceType Hashtable getFilters ReturnStatement MethodInvocation	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType evt StatementExpression MethodInvocation MemberReference evt addElement	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public ReferenceType String XDocletException LocalVariableDeclaration ReferenceType String VariableDeclarator desc MethodInvocation MethodInvocation getDoc MethodInvocation IfStatement BinaryOperation || BinaryOperation == MemberReference desc Literal null BinaryOperation == MethodInvocation desc length Literal 0 BlockStatement StatementExpression Assignment MemberReference desc Literal "no = StatementExpression Assignment MemberReference desc MethodInvocation desc trim = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation desc toLowerCase ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator prefix BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation toLowerCase Literal " " IfStatement MethodInvocation MemberReference prefix startsWith BlockStatement StatementExpression Assignment MemberReference desc MethodInvocation desc MethodInvocation prefix length substring = BreakStatement StatementExpression Assignment MemberReference desc BinaryOperation + MethodInvocation desc MethodInvocation toUpperCase Literal 0 Literal 1 substring MethodInvocation desc Literal 1 substring = IfStatement MethodInvocation ! desc Literal "." endsWith BlockStatement StatementExpression Assignment MemberReference desc Literal "." += ReturnStatement MemberReference desc	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator myFile ClassCreator ReferenceType File MethodInvocation System Literal "root" getProperty BinaryOperation + BinaryOperation + MemberReference Literal "/" MethodInvocation MethodInvocation Literal getProperty getProject LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation myFile lastModified StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation myFile lastModified StatementExpression MethodInvocation Literal date should not MemberReference MemberReference assertEquals	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public addChild FormalParameter ReferenceType UnknownElement child IfStatement BinaryOperation == MemberReference children Literal null BlockStatement StatementExpression Assignment MemberReference children ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation children MemberReference child add	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String FormalParameter ReferenceType String baseClass FormalParameter ReferenceType String suffix ReturnStatement BinaryOperation + MemberReference baseClass MemberReference suffix	0
MethodDeclaration Modifier public FormalParameter ReferenceType Text text StatementExpression MethodInvocation instructions MemberReference text add	0
MethodDeclaration Modifier protected ReferenceType Commandline StatementExpression Assignment MemberReference commandLine ClassCreator ReferenceType Commandline = IfStatement BinaryOperation != MethodInvocation getFilename Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_FILE setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getFilename setValue createArgument IfStatement BinaryOperation != MethodInvocation getVersion Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getVersion setValue createArgument BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd FLAG_COMMAND setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getRecursive setValue createArgument IfStatement BinaryOperation != MethodInvocation getLabel Literal null BlockStatement StatementExpression MethodInvocation commandLine MethodInvocation MemberReference SOSCmd setValue createArgument StatementExpression MethodInvocation commandLine MethodInvocation MethodInvocation getLabel setValue createArgument StatementExpression MethodInvocation StatementExpression MethodInvocation ReturnStatement MemberReference commandLine	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType File VariableDeclarator expected MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal LocalVariableDeclaration ReferenceType File VariableDeclarator result MethodInvocation FILE_UTILS MethodInvocation MethodInvocation getProject Literal StatementExpression MethodInvocation Literal Result not like expected" MethodInvocation FILE_UTILS MemberReference expected MemberReference result assertTrue	0
MethodDeclaration Modifier protected ReferenceType ArrayList FormalParameter ReferenceType File dir LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation getProject LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation ds MemberReference dir StatementExpression MethodInvocation ds MethodInvocation patterns MemberReference project setIncludes StatementExpression MethodInvocation ds MethodInvocation patterns MemberReference project StatementExpression MethodInvocation ds LocalVariableDeclaration ReferenceType String VariableDeclarator included MethodInvocation ds getIncludedFiles ReturnStatement MethodInvocation MemberReference included testClassNameFromFile	1
MethodDeclaration Modifier private FormalParameter ReferenceType Commandline cmd IfStatement BinaryOperation != MethodInvocation getCommentFile Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation MemberReference setValue createArgument StatementExpression MethodInvocation cmd MethodInvocation MethodInvocation getCommentFile setValue createArgument	0
MethodDeclaration BasicType boolean eval FormalParameter BasicType int t FormalParameter BasicType int f ReturnStatement BinaryOperation == MemberReference t Literal 0	0
MethodDeclaration Modifier public read FormalParameter ReferenceType DataInputStream cpStream IOException StatementExpression MethodInvocation ClassCreator ReferenceType Integer MethodInvocation cpStream readInt setValue	1
MethodDeclaration Modifier public FormalParameter ReferenceType ref StatementExpression MethodInvocation MethodInvocation MemberReference ref	0
MethodDeclaration Modifier public BasicType int size ReturnStatement TernaryExpression BinaryOperation == MemberReference parts Literal null Literal 0 MemberReference parts length	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation < MethodInvocation wStack size Literal 1 ReturnStatement Literal null ReturnStatement Cast ReferenceType MethodInvocation wStack BinaryOperation - MethodInvocation wStack size Literal 1 elementAt	1
MethodDeclaration Modifier public java.io.IOException StatementExpression MethodInvocation Literal executeTarget StatementExpression MethodInvocation MethodInvocation MethodInvocation project Literal MethodInvocation project Literal assertTrue	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String log ReturnStatement BinaryOperation >= MethodInvocation log MemberReference indexOf Literal 0	0
MethodDeclaration Modifier public replyTo FormalParameter ReferenceType String replyTo StatementExpression MethodInvocation replyToList MemberReference replyTo add	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation runner ClassReference MethodInvocation getName ReferenceType StatementExpression MethodInvocation runner run SynchronizedStatement This WhileStatement MemberReference ! done BlockStatement StatementExpression MethodInvocation wait StatementExpression MethodInvocation Literal 1 MethodInvocation size assertEquals	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String other LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator t TernaryExpression BinaryOperation == MemberReference p Literal null Literal null MethodInvocation p getTargets ReturnStatement BinaryOperation && BinaryOperation != MemberReference p Literal null MethodInvocation p MethodInvocation MethodInvocation t MemberReference other get contains MethodInvocation getName MemberReference t Literal false topoSort	1
MethodDeclaration Modifier public synchronized ReferenceType String StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator files ArrayCreator ReferenceType String MethodInvocation size StatementExpression MethodInvocation MemberReference files copyInto ReturnStatement MemberReference files	0
MethodDeclaration Modifier public synchronized BasicType boolean equals FormalParameter ReferenceType Object another IfStatement BinaryOperation == This MemberReference another BlockStatement ReturnStatement Literal true IfStatement MethodInvocation isReference BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference another equals getCheckedRef IfStatement MethodInvocation ! another getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType VariableDeclarator otheru Cast ReferenceType MemberReference another ReturnStatement TernaryExpression BinaryOperation == MethodInvocation getURL Literal null BinaryOperation == MethodInvocation otheru getURL Literal null MethodInvocation MethodInvocation MethodInvocation otheru getURL equals getURL	1
MethodDeclaration Modifier protected ReferenceType createFormatter BuildException IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement ThrowStatement ClassCreator ReferenceType BuildException Literal must type or LocalVariableDeclaration ReferenceType VariableDeclarator f Literal null TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation Class MemberReference classname forName IfStatement ClassReference ! MethodInvocation MemberReference clazz isAssignableFrom ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + MemberReference clazz Literal " is not a StatementExpression Assignment MemberReference f Cast ReferenceType MethodInvocation clazz newInstance = CatchClause CatchClauseParameter BuildException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation filters size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator fe Cast ReferenceType MethodInvocation filters MemberReference i elementAt StatementExpression Assignment MemberReference f MethodInvocation fe MemberReference f = LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation params size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param Cast ReferenceType Parameter MethodInvocation params MemberReference i elementAt StatementExpression MethodInvocation props MethodInvocation param getName MethodInvocation param getValue put StatementExpression MethodInvocation f MemberReference props init ReturnStatement MemberReference f	0
MethodDeclaration * @see */ Modifier public FormalParameter ReferenceType BuildEvent event IfStatement MemberReference initialized BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator targetName MethodInvocation event MethodInvocation getName LocalVariableDeclaration ReferenceType Log VariableDeclarator log MethodInvocation MemberReference MethodInvocation event MethodInvocation getName getLog IfStatement BinaryOperation == MethodInvocation event getException Literal null BlockStatement StatementExpression MethodInvocation MemberReference log BinaryOperation + Literal "Target " MemberReference targetName MemberReference Project MSG_DEBUG Literal null BlockStatement StatementExpression MethodInvocation MemberReference log BinaryOperation + BinaryOperation + Literal "Target \"" MemberReference targetName Literal "\" finished with error." MemberReference Project MSG_ERR MethodInvocation event getException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Task nestedTask StatementExpression MethodInvocation MemberReference nestedTask add	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized ReferenceType OutputStream getOutputStream IOException IfStatement MethodInvocation isReference BlockStatement ReturnStatement Cast ReferenceType Resource MethodInvocation getCheckedRef StatementExpression MethodInvocation connect TryStatement ReturnStatement MethodInvocation conn getOutputStream StatementExpression Assignment MemberReference conn Literal null =	1
MethodDeclaration Modifier public ReferenceType Vector ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType String filter FormalParameter ReferenceType String string LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator output ClassCreator ReferenceType StringBuffer MethodInvocation string length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation string length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation string MemberReference i charAt IfStatement MethodInvocation ! MemberReference ch BlockStatement StatementExpression MethodInvocation output MemberReference ch append ReturnStatement MethodInvocation output toString	1
MethodDeclaration Modifier protected FormalParameter ReferenceType OutputStream out IOException LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 buf Literal 0 = StatementExpression MethodInvocation out MemberReference buf write StatementExpression MethodInvocation out flush	0
MethodDeclaration Modifier public synchronized ReferenceType StatementExpression Assignment MemberReference sources TernaryExpression BinaryOperation == MemberReference sources Literal null ClassCreator ReferenceType MemberReference sources = ReturnStatement MemberReference sources	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project project FormalParameter ReferenceType Object element FormalParameter ReferenceType String text BuildException IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference text MethodInvocation text trim = IfStatement BinaryOperation == MethodInvocation text length Literal 0 BlockStatement ReturnStatement BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation project MemberReference element Literal " doesn't support text data (\"" MethodInvocation MemberReference text Literal ThrowStatement ClassCreator ReferenceType BuildException MemberReference msg TryStatement StatementExpression MethodInvocation MemberReference element ArrayCreator ReferenceType Object ArrayInitializer MemberReference text invoke CatchClause CatchClauseParameter IllegalAccessException ie ThrowStatement ClassCreator ReferenceType BuildException MemberReference ie CatchClause CatchClauseParameter InvocationTargetException ite LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation ite getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType BuildException BlockStatement ThrowStatement Cast ReferenceType BuildException MemberReference t ThrowStatement ClassCreator ReferenceType BuildException MemberReference t	1
MethodDeclaration Modifier public IOException StatementExpression MethodInvocation Literal executeTarget LocalVariableDeclaration ReferenceType String VariableDeclarator tmpdir MethodInvocation project Literal getProperty StatementExpression MethodInvocation ClassCreator ReferenceType File MemberReference tmpdir Literal ClassCreator ReferenceType File MemberReference tmpdir Literal	0
MethodDeclaration Modifier public ReferenceType getExtraFields IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement ArrayCreator ReferenceType Literal 0 LocalVariableDeclaration ReferenceType VariableDeclarator result ArrayCreator ReferenceType MethodInvocation size StatementExpression MethodInvocation MemberReference result copyInto ReturnStatement MemberReference result	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType StatementExpression MethodInvocation MemberReference addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal executeTarget	0
MethodDeclaration Modifier private BasicType boolean readBlock IOException IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "ReadBlock: blkIdx = " This MemberReference currBlkIdx println IfStatement BinaryOperation == This MemberReference inStream Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal "reading from an output buffer" StatementExpression Assignment This MemberReference currRecIdx Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator offset Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator bytesNeeded This MemberReference blockSize WhileStatement BinaryOperation > MemberReference bytesNeeded Literal 0 BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator numBytes This MemberReference inStream MethodInvocation This MemberReference blockBuffer MemberReference offset MemberReference bytesNeeded read IfStatement BinaryOperation == MemberReference numBytes Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference offset Literal 0 BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation Arrays MemberReference blockBuffer MemberReference offset BinaryOperation + MemberReference offset MemberReference bytesNeeded Cast BasicType byte Literal 0 fill BreakStatement StatementExpression Assignment MemberReference offset MemberReference numBytes += StatementExpression Assignment MemberReference bytesNeeded MemberReference numBytes -= IfStatement BinaryOperation != MemberReference numBytes This MemberReference blockSize BlockStatement IfStatement This MemberReference debug BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "ReadBlock: READ " MemberReference numBytes Literal " of " This MemberReference blockSize Literal " bytes read." println StatementExpression This ++ MemberReference currBlkIdx ReturnStatement Literal true	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args StatementExpression MethodInvocation System.out Literal "I tab" println IfStatement MemberReference mybool BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator mychar Literal	1
MethodDeclaration Modifier public BasicType int handleInput FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int length IOException IfStatement BinaryOperation != MemberReference newProject Literal null BlockStatement ReturnStatement MethodInvocation newProject MemberReference buffer MemberReference offset MemberReference length ReturnStatement SuperMethodInvocation MemberReference buffer MemberReference offset MemberReference length handleInput	1
MethodDeclaration Modifier protected ReferenceType String IfStatement MethodInvocation MemberReference references BlockStatement IfStatement MemberReference isWindows BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal '\"' MemberReference MemberReference references Literal '\"' BlockStatement ReturnStatement BinaryOperation + MemberReference MemberReference references BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Project project FormalParameter ReferenceType Object target FormalParameter BasicType char buf FormalParameter BasicType int start FormalParameter BasicType int count BuildException StatementExpression MethodInvocation MemberReference project MemberReference target ClassCreator ReferenceType String MemberReference buf MemberReference start MemberReference count	1
MethodDeclaration Modifier public FormalParameter ReferenceType String uri FormalParameter ReferenceType String tag FormalParameter ReferenceType context StatementExpression Assignment MemberReference context currentTarget MemberReference context =	0
MethodDeclaration Modifier public FormalParameter BasicType long time StatementExpression Assignment This MemberReference modTime BinaryOperation / MemberReference time MemberReference =	0
MethodDeclaration Modifier public ReferenceType Document getRoot IfStatement BinaryOperation == MemberReference docRoot Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator factory MethodInvocation DocumentBuilderFactory newInstance LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator builder MethodInvocation factory newDocumentBuilder StatementExpression Assignment This MemberReference docRoot MethodInvocation builder MemberReference parse = CatchClause CatchClauseParameter ParserConfigurationException pce ThrowStatement ClassCreator ReferenceType BuildException Literal "Error in the configuration of the MemberReference pce CatchClause CatchClauseParameter SAXException se ThrowStatement ClassCreator ReferenceType BuildException Literal "Error during MemberReference se CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType BuildException Literal "Can't load the specified file" MemberReference ioe ReturnStatement MemberReference docRoot	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression MethodInvocation StatementExpression Assignment This MemberReference MemberReference =	0
