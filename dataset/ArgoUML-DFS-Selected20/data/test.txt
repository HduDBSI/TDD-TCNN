MethodDeclaration Modifier public ReferenceType Collection generate FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation elements iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MemberReference elem LocalVariableDeclaration ReferenceType Set VariableDeclarator dependencies Literal null IfStatement MemberReference deps StatementExpression Assignment MemberReference dependencies ClassCreator ReferenceType TreeSet = ForStatement ForControl Assignment MemberReference generatorPass MemberReference HEADER_PASS = BinaryOperation <= MemberReference generatorPass MemberReference SOURCE_PASS MemberReference ++ generatorPass BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MethodInvocation MethodInvocation MemberReference elem getName getFacade MethodInvocation getFileExtension LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation MemberReference elem BinaryOperation + MemberReference path MemberReference name generateFileAsString LocalVariableDeclaration ReferenceType SourceUnit VariableDeclarator ClassCreator ReferenceType SourceUnit MemberReference name MemberReference path MemberReference content StatementExpression MethodInvocation ret MemberReference add StatementExpression Assignment MemberReference generatorPass MemberReference NONE_PASS = StatementExpression MethodInvocation generatedFiles MemberReference elem add IfStatement MemberReference deps BlockStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference dependencies MemberReference deps generate add StatementExpression MethodInvocation ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration BasicType boolean VariableDeclarator problem MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAGeneralizableElement getFacade BlockStatement TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference dm getChildren getCoreHelper CatchClause CatchClauseParameter IllegalStateException ex StatementExpression Assignment MemberReference problem MemberReference PROBLEM_FOUND = StatementExpression MethodInvocation LOG BinaryOperation + Literal "problem found for: " This info ReturnStatement MemberReference problem	1
MethodDeclaration Modifier private ReferenceType buildAssociationRole FormalParameter ReferenceType from FormalParameter ReferenceType to LocalVariableDeclaration ReferenceType VariableDeclarator connector MethodInvocation StatementExpression MethodInvocation from MethodInvocation MethodInvocation MemberReference connector add StatementExpression MethodInvocation connector MethodInvocation MethodInvocation MemberReference from add StatementExpression MethodInvocation connector MethodInvocation MethodInvocation MemberReference to add ReturnStatement MemberReference connector	0
MethodDeclaration Modifier private StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled	0
MethodDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String FormalParameter ReferenceType StringTokenizer st LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator map ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator name LocalVariableDeclaration ReferenceType String VariableDeclarator value WhileStatement MethodInvocation st hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator namevaluepair MethodInvocation st nextToken LocalVariableDeclaration BasicType int VariableDeclarator equalsPos MethodInvocation namevaluepair Literal '=' indexOf IfStatement BinaryOperation < MemberReference equalsPos Literal 0 BlockStatement StatementExpression Assignment MemberReference name MemberReference namevaluepair = StatementExpression Assignment MemberReference value Literal "true" = BlockStatement StatementExpression Assignment MemberReference name MethodInvocation namevaluepair Literal 0 MemberReference equalsPos substring = StatementExpression Assignment MemberReference value MethodInvocation namevaluepair BinaryOperation + MemberReference equalsPos Literal 1 substring = StatementExpression MethodInvocation map MemberReference name MemberReference value put ReturnStatement MemberReference map	1
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEvent event FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEventListener listener IfStatement MethodInvocation SwingUtilities isEventDispatchThread BlockStatement StatementExpression MethodInvocation MemberReference event MemberReference listener BlockStatement StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference event MemberReference listener invokeLater	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal null actionPerformed	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection stereotypes StatementExpression MethodInvocation impl MemberReference modelElement MemberReference stereotypes	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Object elem LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation MethodInvocation MemberReference elem getTaggedValues getFacade WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation MethodInvocation MemberReference tv getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator val MethodInvocation MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation != MemberReference tag Literal null BlockStatement IfStatement MethodInvocation tag MemberReference equals BlockStatement ReturnStatement TernaryExpression MethodInvocation val Literal "false" equals MemberReference NORMAL_MOD MemberReference ReturnStatement Literal - 1	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String en StatementExpression Assignment MemberReference MemberReference en =	0
MethodDeclaration Modifier protected ReferenceType List TypeArgument ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump StatementExpression MethodInvocation Model MethodInvocation getPump StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MethodInvocation Literal getValue Literal null BlockStatement IfStatement MethodInvocation ! ProjectBrowser MethodInvocation getInstance BlockStatement ReturnStatement StatementExpression MethodInvocation ProjectBrowser MethodInvocation getInstance StatementExpression MethodInvocation Designer disableCritiquing StatementExpression MethodInvocation Designer StatementExpression MethodInvocation TargetManager MethodInvocation getInstance StatementExpression MethodInvocation p remove StatementExpression Assignment MemberReference p MethodInvocation ProjectManager MethodInvocation getManager = StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation p MethodInvocation Literal 0 get getDiagramList getInstance StatementExpression MethodInvocation Designer enableCritiquing StatementExpression MethodInvocation Model MethodInvocation getPump	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" Annotation Override FormalParameter ReferenceType node StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply StatementExpression Assignment MemberReference Literal true = IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Literal null IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression Assignment MemberReference vars Cast ReferenceType List MemberReference val = LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator exp Cast ReferenceType MethodInvocation node StatementExpression MethodInvocation ret MemberReference vars add StatementExpression MethodInvocation ret MemberReference exp add StatementExpression MethodInvocation ret ClassCreator ReferenceType LambdaEvaluator MethodDeclaration * @see * */ Modifier public ReferenceType Object evaluate FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator state This MethodInvocation StatementExpression Assignment This MemberReference vt MemberReference = StatementExpression Assignment This MemberReference val Literal null = StatementExpression Assignment This MemberReference Literal null = StatementExpression Cast ReferenceType MemberReference LocalVariableDeclaration ReferenceType Object VariableDeclarator This MemberReference val StatementExpression This MethodInvocation MemberReference state ReturnStatement MemberReference add StatementExpression Assignment MemberReference val MemberReference ret = BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public final RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType Token VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" StatementExpression Assignment MemberReference s MethodInvocation scope_override = StatementExpression MethodInvocation MemberReference TILDE match StatementExpression Assignment MemberReference id MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m BinaryOperation + BinaryOperation + MemberReference s Literal "~" MethodInvocation id getText StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation MemberReference RPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation exception_specification BreakStatement SwitchStatementCase LCURLY SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Attribute FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MethodInvocation Collections emptySet IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Attribute VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Attribute TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature Cast ReferenceType Classifier MemberReference clazz BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Attribute BlockStatement StatementExpression MethodInvocation list Cast ReferenceType Attribute MemberReference feature add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation modelImpl MethodInvocation MemberReference clazz getGeneralizations getFacade BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference gen addAll CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public Annotation Override ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade	0
MethodDeclaration Modifier public final member_declaration RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator q Literal "" IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_public LITERAL_protected LITERAL_private BlockStatement StatementExpression MethodInvocation access_specifier StatementExpression MethodInvocation MemberReference COLON match BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched54 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched54 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_typedef match BreakStatement SwitchStatementCase LITERAL_class LITERAL_struct LITERAL_union BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched54 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched54 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched57 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_enum BinaryOperation || BinaryOperation == MethodInvocation Literal 2 LA MemberReference ID BinaryOperation == MethodInvocation Literal 2 LA MemberReference LCURLY BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched57 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_enum match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID BlockStatement StatementExpression MethodInvocation MemberReference ID match BreakStatement SwitchStatementCase LCURLY BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched57 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched57 BlockStatement StatementExpression MethodInvocation enum_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID COLON LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation member_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched60 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched60 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched60 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched60 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched62 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched62 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" StatementExpression MethodInvocation ctor_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched62 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched62 BlockStatement StatementExpression MethodInvocation ctor_decl_spec StatementExpression MethodInvocation ctor_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched65 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched65 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" StatementExpression MethodInvocation ctor_declarator BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase COLON BlockStatement StatementExpression MethodInvocation MemberReference COLON match BreakStatement SwitchStatementCase LCURLY BlockStatement StatementExpression MethodInvocation MemberReference LCURLY match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched65 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched65 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched67 Literal false IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched67 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched67 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched67 BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched69 Literal false IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched69 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched69 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched69 BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation dtor_body BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched71 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched71 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched71 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched71 BlockStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m StatementExpression MethodInvocation declaration IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endFunctionDeclaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched73 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched73 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched73 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched73 BlockStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m StatementExpression MethodInvocation function_definition IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endFunctionDefinition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched76 Literal false IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_inline BinaryOperation == MethodInvocation Literal 1 LA MemberReference OPERATOR MethodInvocation MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched76 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase OPERATOR BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation conversion_function_decl_or_def CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched76 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched76 BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase OPERATOR BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation conversion_function_decl_or_def BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched79 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_29 MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched79 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation qualified_id StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched79 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched79 BlockStatement StatementExpression Assignment MemberReference q MethodInvocation qualified_id = StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched81 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_11 MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched81 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched81 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched81 BlockStatement StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID COLON LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation member_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched84 Literal false IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_22 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched84 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched84 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched84 BlockStatement StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_22 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation compound_statement BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched87 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched87 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched87 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched87 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement StatementExpression MethodInvocation template_head BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched91 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched91 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched91 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched91 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched93 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched93 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched93 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched93 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched95 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched95 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched95 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched95 BlockStatement StatementExpression MethodInvocation function_definition IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference OPERATOR MethodInvocation _tokenSet_11 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation conversion_function_decl_or_def BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference stereotypeCount Literal 0 = LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Cannot the stereotype " Literal the parent has an debug ReturnStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal stereotypes for " MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade debug LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Fig VariableDeclarator removeCollection ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig MethodInvocation getFigs IfStatement BinaryOperation != MemberReference keyword Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator keywordFig MethodInvocation IfStatement BinaryOperation == MemberReference keywordFig Literal null BlockStatement StatementExpression Assignment MemberReference keywordFig ClassCreator ReferenceType MemberReference keyword MethodInvocation MethodInvocation getSettings = StatementExpression MethodInvocation MemberReference keywordFig addFig BlockStatement StatementExpression MethodInvocation removeCollection MemberReference keywordFig remove StatementExpression MemberReference ++ stereotypeCount ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator stereotypeTextFig MethodInvocation MemberReference stereo findFig IfStatement BinaryOperation == MemberReference stereotypeTextFig Literal null BlockStatement StatementExpression Assignment MemberReference stereotypeTextFig ClassCreator ReferenceType MemberReference stereo MethodInvocation MethodInvocation getSettings = StatementExpression MethodInvocation MemberReference stereotypeTextFig addFig BlockStatement StatementExpression MethodInvocation removeCollection MemberReference stereotypeTextFig remove StatementExpression MemberReference ++ stereotypeCount ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference removeCollection BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference f ReferenceType BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression MethodInvocation MemberReference f StatementExpression MethodInvocation reorderStereotypeFigs StatementExpression MethodInvocation	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled	0
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference ! showem StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns	0
MethodDeclaration Modifier protected ReferenceType getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public ReferenceType TimeEvent FormalParameter ReferenceType String s FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator event MethodInvocation StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal "" setName LocalVariableDeclaration ReferenceType Object VariableDeclarator te MethodInvocation modelImpl MethodInvocation Literal "" MemberReference s StatementExpression MethodInvocation event Cast ReferenceType MemberReference te ReturnStatement MemberReference event	0
MethodDeclaration Modifier public modelElementChanged FormalParameter ReferenceType Object node StatementExpression MethodInvocation Cast ReferenceType MethodInvocation getRoot MemberReference node	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator mAssociationEnd Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference mClassifier getAssociationEnds MethodInvocation iterator getFacade MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation i next LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade IfStatement BinaryOperation && BinaryOperation && MethodInvocation name MethodInvocation Model MethodInvocation MemberReference ae getName getFacade equals BinaryOperation == MethodInvocation Model MethodInvocation MemberReference assoc getConnections MethodInvocation size getFacade Literal 2 BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getFacade getType getFacade MethodInvocation parseState getClassifier BlockStatement StatementExpression Assignment MemberReference mAssociationEnd MemberReference ae = IfStatement BinaryOperation && BinaryOperation == MemberReference mAssociationEnd Literal null MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation MethodInvocation parseState getClassifier MemberReference mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference newName MethodInvocation parseState getClassifier MemberReference mClassifier StatementExpression Assignment MemberReference mAssociationEnd MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference getFacade = ReturnStatement MemberReference mAssociationEnd	0
MethodDeclaration Modifier public FormalParameter ReferenceType String sType LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MethodInvocation Model MethodInvocation MethodInvocation MemberReference sType StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference exp getCoreHelper	0
MethodDeclaration Modifier public removeElement FormalParameter ReferenceType element IfStatement BinaryOperation != MethodInvocation Model Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement MethodInvocation settings MethodInvocation settings MethodInvocation settings MethodInvocation settings toString	0
MethodDeclaration Modifier public static ReferenceType getCommonBehaviorFactory ReturnStatement MethodInvocation impl getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType VariableDeclarator figClone Cast ReferenceType SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation it next StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigRect MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigRect MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public static ReferenceType ActionAggregation newActionAggregation FormalParameter ReferenceType Object FormalParameter ReferenceType Object assocEnd FormalParameter BasicType int ReturnStatement ClassCreator ReferenceType ActionAggregation MethodInvocation MemberReference MemberReference assocEnd MemberReference MemberReference MemberReference assocEnd MemberReference	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType AbstractAction ReturnStatement MemberReference removeFromDiagram	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "[" append StatementExpression MethodInvocation Expressions MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "]" append	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public static FormalParameter ReferenceType StatementExpression Assignment MemberReference impl MemberReference = IfStatement BinaryOperation == MemberReference impl Literal null BlockStatement StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment MemberReference Literal null = BlockStatement StatementExpression Assignment MemberReference MethodInvocation impl = StatementExpression Assignment MemberReference MethodInvocation impl getCollaborationsHelper = StatementExpression Assignment MemberReference MethodInvocation impl getCommonBehaviorHelper = StatementExpression Assignment MemberReference MethodInvocation impl getCoreHelper = StatementExpression Assignment MemberReference MethodInvocation impl = StatementExpression Assignment MemberReference MethodInvocation impl getExtensionMechanismsHelper = StatementExpression Assignment MemberReference MethodInvocation impl getStateMachinesHelper = StatementExpression Assignment MemberReference MethodInvocation impl getUmlHelper = StatementExpression Assignment MemberReference MethodInvocation impl =	1
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator figEdge Literal null AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAMessage getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigMessage MemberReference edge MemberReference settings = BlockStatement StatementExpression Assignment MemberReference figEdge MethodInvocation MemberReference edge MemberReference styleAttributes getFigEdgeFor = StatementExpression MethodInvocation MemberReference lay MemberReference figEdge MemberReference edge addEdge ReturnStatement MemberReference figEdge	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType PrimitiveType	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference handle getFacade IfStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator trans ClassCreator ReferenceType ArrayList MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator transition MemberReference trans BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference transition ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator transition MemberReference BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference transition ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public ReferenceType ClassifierRole FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator classifierRole MethodInvocation StatementExpression MethodInvocation classifierRole MemberReference setNamespace StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference classifierRole Literal 1 Literal 1 setMultiplicity getCoreHelper ReturnStatement MemberReference classifierRole	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType getStateMachinesFactory ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String name StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference name setTitle invokeLater	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType UmlAssociation MemberReference handle MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation MethodInvocation getFillColor getNameFig	0
MethodDeclaration Modifier public ReferenceType Include FormalParameter ReferenceType Object FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType VariableDeclarator base Cast ReferenceType MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator MethodInvocation BlockStatement IfStatement BinaryOperation == MethodInvocation getBase MemberReference base BlockStatement ReturnStatement MemberReference CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Multiplicity FormalParameter Modifier final ReferenceType String str ReturnStatement MethodInvocation MemberReference str	0
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType FormalParameter ReferenceType Layer layer LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType VariableDeclarator partitions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation layer getContents BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation partitions Cast ReferenceType MemberReference o add ReturnStatement MemberReference partitions	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType State MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value StatementExpression MethodInvocation impl MemberReference handle MemberReference value	0
MethodDeclaration Modifier private ReferenceType Property FormalParameter ReferenceType String text FormalParameter ReferenceType String positions FormalParameter ReferenceType Class tab LocalVariableDeclaration ReferenceType VariableDeclarator key MethodInvocation MemberReference tab LocalVariableDeclaration ReferenceType String VariableDeclarator currentValue MethodInvocation Configuration MemberReference key Literal getString ReturnStatement ClassCreator ReferenceType Property MethodInvocation Translator MemberReference text localize ClassReference ReferenceType String MemberReference currentValue MemberReference positions	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc ReturnStatement MethodInvocation impl MemberReference type MemberReference assoc	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private ReferenceType String getParameterTypeString FormalParameter ReferenceType mn LocalVariableDeclaration ReferenceType String VariableDeclarator k Literal "" IfStatement BinaryOperation == MemberReference mn params Literal null BlockStatement ReturnStatement MemberReference k ForStatement EnhancedForControl VariableDeclaration ReferenceType ParamDeclNode VariableDeclarator p MemberReference mn params BlockStatement StatementExpression Assignment MemberReference k BinaryOperation + Literal "|" MethodInvocation MemberReference p.type.Identifier Identifier MemberReference p.type.Identifier.Identifier length buildToParent += ReturnStatement MethodInvocation k toLowerCase	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade setAllElements	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e IfStatement BinaryOperation == MemberReference filename Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got user defined profile entry " MemberReference e error StatementExpression Assignment MemberReference profile MethodInvocation MemberReference filename MethodInvocation ProfileFacade getManager = IfStatement BinaryOperation == MemberReference profile Literal null BlockStatement StatementExpression MethodInvocation MemberReference filename add BlockStatement StatementExpression MethodInvocation profiles MemberReference profile add StatementExpression MethodInvocation LOG BinaryOperation + Literal "Loaded user defined profile - filename = " MemberReference filename debug	1
MethodDeclaration Modifier protected Annotation Override ReferenceType List TypeArgument ReferenceType String ReturnStatement MethodInvocation Collections MemberReference metaClasses	0
MethodDeclaration Modifier private ReferenceType String generateMultiplicity FormalParameter ReferenceType Object m IfStatement BinaryOperation || BinaryOperation == MemberReference m Literal null Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference m toString getFacade equals "1" BlockStatement ReturnStatement Literal "" BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference m toString getFacade	0
MethodDeclaration Modifier public static BasicType boolean ReturnStatement BinaryOperation != MemberReference impl Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object classifier FormalParameter BasicType boolean IfStatement MethodInvocation currentGM MemberReference classifier canAddNode BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator newFig Cast ReferenceType MethodInvocation MemberReference classifier ClassCreator ReferenceType Rectangle Literal 0 Literal 0 Literal 0 Literal 0 createDiagramElement StatementExpression MethodInvocation currentLayer MemberReference newFig add StatementExpression MethodInvocation currentGM MemberReference classifier addNode StatementExpression MethodInvocation currentLayer MemberReference newFig IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference classifier getUmlFactory BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ops MethodInvocation newFig MethodInvocation Model MethodInvocation getOperation getMetaTypes StatementExpression MethodInvocation newFig MemberReference ops MemberReference ! IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference classifier getUmlFactory BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation newFig MethodInvocation Model MethodInvocation getAttribute getMetaTypes StatementExpression MethodInvocation newFig MemberReference MemberReference ! StatementExpression MethodInvocation newFig BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator existingFig Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator figs MethodInvocation currentLayer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation figs size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figs MemberReference i get IfStatement BinaryOperation == MemberReference classifier MethodInvocation fig getOwner BlockStatement StatementExpression Assignment MemberReference existingFig Cast ReferenceType MemberReference fig = StatementExpression MethodInvocation existingFig StatementExpression MethodInvocation currentGM MemberReference classifier addNodeRelatedEdges	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator role MethodInvocation StatementExpression MethodInvocation Model MethodInvocation MemberReference role MemberReference selected getCollaborationsHelper	0
MethodDeclaration ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType FigText IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference LocalVariableDeclaration ReferenceType Collection VariableDeclarator conn MethodInvocation Model MethodInvocation MethodInvocation getOwner getConnections getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference conn Literal null BinaryOperation == MethodInvocation conn size Literal 0 BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference MethodInvocation getRole BlockStatement StatementExpression MethodInvocation MethodInvocation getRole IfStatement BinaryOperation == MemberReference MethodInvocation getRole BlockStatement StatementExpression MethodInvocation MethodInvocation getRole IfStatement BinaryOperation == MemberReference MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation MemberReference col setFillColor	0
MethodDeclaration Modifier protected ReferenceType Object getChangedElement FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference e ReturnStatement MethodInvocation e getNewValue	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setFontSize FormalParameter BasicType int IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier final protected FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal Literal matchRange IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType NotationProviderFactory2 VariableDeclarator MethodInvocation NotationProviderFactory2 getInstance LocalVariableDeclaration ReferenceType VariableDeclarator name MethodInvocation Notation Literal Literal null MethodInvocation Literal StatementExpression MethodInvocation MemberReference NotationProviderFactory2 MemberReference name ClassReference ReferenceType StatementExpression MethodInvocation MemberReference NotationProviderFactory2 MemberReference name ClassReference ReferenceType StatementExpression MethodInvocation MemberReference NotationProviderFactory2 MemberReference name ClassReference ReferenceType StatementExpression MethodInvocation MemberReference NotationProviderFactory2 MemberReference name ClassReference ReferenceType StatementExpression MethodInvocation MemberReference NotationProviderFactory2 MemberReference name ClassReference ReferenceType	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Transition transition FormalParameter ReferenceType Event event StatementExpression MethodInvocation transition MemberReference event StatementExpression MethodInvocation event Literal "" setName LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator MethodInvocation transition LocalVariableDeclaration Modifier final ReferenceType Namespace VariableDeclarator namespace MethodInvocation getNamespace StatementExpression MethodInvocation event MemberReference namespace setNamespace	0
MethodDeclaration Modifier final static protected setMnemonic FormalParameter ReferenceType JMenuItem item FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" IfStatement BinaryOperation instanceof MemberReference item ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + MemberReference MethodInvocation MemberReference key Literal = BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + MemberReference MethodInvocation MemberReference key Literal = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Translator MemberReference localize LocalVariableDeclaration BasicType char VariableDeclarator Literal ' ' IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation length Literal 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 0 charAt = StatementExpression MethodInvocation item MemberReference setMnemonic	0
MethodDeclaration Modifier static protected ReferenceType String getVariable FormalParameter ReferenceType Context context FormalParameter ReferenceType String varName TransformerException LocalVariableDeclaration ReferenceType Value VariableDeclarator variable Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator varString Literal null TryStatement StatementExpression Assignment MemberReference variable MethodInvocation MemberReference context BinaryOperation + Literal "$" MemberReference varName evaluate = StatementExpression Assignment MemberReference varString MethodInvocation variable asString = ReturnStatement MemberReference varString CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal ""	1
MethodDeclaration Modifier private ReferenceType Profile FormalParameter ReferenceType File file ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator p MemberReference profiles BlockStatement IfStatement BinaryOperation instanceof MemberReference p ReferenceType UserDefinedProfile BlockStatement LocalVariableDeclaration ReferenceType UserDefinedProfile VariableDeclarator Cast ReferenceType UserDefinedProfile MemberReference p IfStatement MethodInvocation file MethodInvocation equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object owner FormalParameter ReferenceType String name FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType UMLStateDiagram MemberReference name MemberReference owner	0
MethodDeclaration Modifier public static SynchronizedStatement MethodInvocation StatementExpression MethodInvocation MemberReference MethodInvocation removeAllElements StatementExpression MethodInvocation MemberReference hotQueue MethodInvocation clear StatementExpression MethodInvocation MemberReference MethodInvocation clear StatementExpression MethodInvocation MemberReference addQueue MethodInvocation clear StatementExpression MethodInvocation MemberReference addReasonQueue MethodInvocation clear StatementExpression MethodInvocation MemberReference MethodInvocation clear StatementExpression MethodInvocation MemberReference warmQueue MethodInvocation clear	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName MethodInvocation e getPropertyName IfStatement MethodInvocation propertyName Literal equals BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator actions MethodInvocation MethodInvocation ArrayCreator ReferenceType MethodInvocation size toArray values StatementExpression MethodInvocation Arrays MemberReference actions ClassCreator ReferenceType Comparator TypeArgument ReferenceType MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType o1 FormalParameter ReferenceType o2 LocalVariableDeclaration ReferenceType String VariableDeclarator name1 MethodInvocation o1 IfStatement BinaryOperation == MemberReference name1 Literal null BlockStatement StatementExpression Assignment MemberReference name1 Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator name2 MethodInvocation o2 IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement StatementExpression Assignment MemberReference name2 Literal "" = ReturnStatement MethodInvocation name1 MemberReference name2 compareTo sort ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType VariableDeclarator event MethodInvocation StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal "" setName ReturnStatement MemberReference event	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference expand = ReturnStatement MemberReference	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator ruleNamesArray ArrayInitializer ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoClassifierToBehavioralFeature ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoClassifierToStructuralFeature ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoModelElementToTemplateParameter ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoNamespaceToDiagram ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoProjectToModel ClassCreator ReferenceType ClassCreator ReferenceType GoProjectToProfileConfiguration ClassCreator ReferenceType GoProfileConfigurationToProfile ClassCreator ReferenceType GoProfileToModel ClassCreator ReferenceType GoProfileToCritics ClassCreator ReferenceType GoCriticsToCritic ClassCreator ReferenceType GoProjectToRoots ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoStatemachineToDiagram ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoStateToOutgoingTrans ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType GoTransitionToGuard ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ArrayInitializer ClassCreator ReferenceType ClassCreator ReferenceType GoStateMachineToState LocalVariableDeclaration ReferenceType VariableDeclarator ArrayInitializer IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference ruleNamesArray MethodInvocation MemberReference ruleNamesArray MemberReference = BlockStatement StatementExpression Assignment MemberReference ruleNamesArray MethodInvocation MemberReference ruleNamesArray MemberReference = StatementExpression Assignment MemberReference rules MethodInvocation Arrays MemberReference ruleNamesArray asList =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object expr StatementExpression MethodInvocation Model MethodInvocation MethodInvocation TargetManager MethodInvocation getInstance MemberReference expr getStateMachinesHelper	0
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference target Literal null MethodInvocation ! Model MethodInvocation MemberReference target isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference target isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference target Literal null = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation p MethodInvocation iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation iter next IfStatement MethodInvocation ! Model MethodInvocation MemberReference o isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference target MemberReference o = BreakStatement IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference target = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation Model MethodInvocation MemberReference target getOwner getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference owner Literal null MethodInvocation Model MethodInvocation MemberReference owner isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference owner = IfStatement BinaryOperation && BinaryOperation == MemberReference ns Literal null MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference owner Literal null MethodInvocation Model MethodInvocation MemberReference owner isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference owner = IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation p getRoot = ReturnStatement MemberReference ns	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator s ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType Object VariableDeclarator p MemberReference modelElement LocalVariableDeclaration ReferenceType Stack TypeArgument ReferenceType String VariableDeclarator stack ClassCreator ReferenceType Stack TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference p getNamespace getFacade WhileStatement BinaryOperation && BinaryOperation != MemberReference ns Literal null MethodInvocation ! Model MethodInvocation MemberReference ns isAModel getFacade BlockStatement StatementExpression MethodInvocation stack MethodInvocation Model MethodInvocation MemberReference ns getName getFacade push StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = WhileStatement MethodInvocation ! stack isEmpty BlockStatement StatementExpression MethodInvocation s BinaryOperation + MethodInvocation stack pop Literal "::" append IfStatement BinaryOperation && BinaryOperation > MethodInvocation s length Literal 0 BinaryOperation == MethodInvocation s Literal ":" lastIndexOf BinaryOperation - MethodInvocation s length Literal 1 BlockStatement StatementExpression MethodInvocation s Literal "::" append ReturnStatement MethodInvocation s toString	1
MethodDeclaration Modifier public ReferenceType ExplorerPerspective FormalParameter ReferenceType String newName LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator ep ClassCreator ReferenceType ExplorerPerspective MemberReference newName StatementExpression MethodInvocation MemberReference rules addAll ReturnStatement MemberReference ep	0
MethodDeclaration Modifier private ReferenceType CrOCL FormalParameter ReferenceType Object critique LocalVariableDeclaration ReferenceType String VariableDeclarator ocl BinaryOperation + Literal "" MethodInvocation Model MethodInvocation MemberReference critique getBody getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration BasicType int VariableDeclarator priority MemberReference ToDoItem HIGH_PRIORITY LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator tags MethodInvocation Model MethodInvocation MemberReference critique getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator i18nFound Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator tag MemberReference tags BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal equals getFacade BlockStatement StatementExpression Assignment MemberReference i18nFound Literal true = LocalVariableDeclaration ReferenceType String VariableDeclarator i18nSource MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade StatementExpression Assignment MemberReference MethodInvocation Translator BinaryOperation + MemberReference i18nSource Literal localize = StatementExpression Assignment MemberReference MethodInvocation Translator BinaryOperation + MemberReference i18nSource Literal localize = StatementExpression Assignment MemberReference MethodInvocation Translator BinaryOperation + MemberReference i18nSource Literal localize = IfStatement BinaryOperation && MemberReference ! i18nFound MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal equals getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = IfStatement BinaryOperation && MemberReference ! i18nFound MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "description" equals getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal equals getFacade BlockStatement StatementExpression Assignment MemberReference priority MethodInvocation MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal equals getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference Literal WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator decision MethodInvocation MethodInvocation st MethodInvocation trim MethodInvocation toLowerCase nextToken IfStatement BinaryOperation != MemberReference decision Literal null BlockStatement StatementExpression MethodInvocation MemberReference decision add IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal equals getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference Literal WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator knowledge MethodInvocation MethodInvocation st MethodInvocation trim MethodInvocation toLowerCase nextToken IfStatement BinaryOperation != MemberReference knowledge Literal null BlockStatement StatementExpression MethodInvocation MemberReference knowledge add IfStatement BinaryOperation && MemberReference ! i18nFound MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal equals getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference ocl debug TryStatement ReturnStatement ClassCreator ReferenceType CrOCL MemberReference ocl MemberReference MemberReference MemberReference priority MemberReference MemberReference MemberReference CatchClause CatchClauseParameter InvalidOclException e StatementExpression MethodInvocation LOG Literal "Invalid OCL in MemberReference e error ReturnStatement Literal null	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object modelElement IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" LocalVariableDeclaration ReferenceType String VariableDeclarator sClsSpec Literal "" IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator itSpecifications MethodInvocation iterator IfStatement MethodInvocation itSpecifications hasNext BlockStatement IfStatement BinaryOperation < MemberReference iLanguageMajorVersion Literal 5 BlockStatement StatementExpression Assignment MemberReference sClsSpec BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference INDENT MemberReference INDENT Literal "/* are " Literal "not supported by PHP versions before 5.0 " Literal += StatementExpression Assignment MemberReference sClsSpec BinaryOperation + MemberReference INDENT MemberReference INDENT += IfStatement BinaryOperation < MemberReference iLanguageMajorVersion Literal 5 BlockStatement StatementExpression Assignment MemberReference sClsSpec Literal "/* " += StatementExpression Assignment MemberReference sClsSpec Literal " += WhileStatement MethodInvocation itSpecifications hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation itSpecifications next StatementExpression Assignment MemberReference sClsSpec MethodInvocation NameGenerator MemberReference MemberReference iLanguageMajorVersion generate += IfStatement MethodInvocation itSpecifications hasNext BlockStatement StatementExpression Assignment MemberReference sClsSpec BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference INDENT MemberReference INDENT Literal " " += IfStatement BinaryOperation < MemberReference iLanguageMajorVersion Literal 5 BlockStatement StatementExpression Assignment MemberReference sClsSpec Literal " */" += StatementExpression Assignment MemberReference sClsSpec Literal "\n" += ReturnStatement MemberReference sClsSpec	1
MethodDeclaration Modifier public addElement FormalParameter ReferenceType ToDoItem item StatementExpression MethodInvocation MemberReference item	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object operation StatementExpression MethodInvocation impl MemberReference handle MemberReference operation	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType FigMessage m1 FormalParameter ReferenceType FigMessage m2 LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation < MethodInvocation m1 MethodInvocation m2 BlockStatement StatementExpression Assignment MemberReference result Literal - 1 = IfStatement BinaryOperation > MethodInvocation m1 MethodInvocation m2 BlockStatement StatementExpression Assignment MemberReference result Literal 1 = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator inter MethodInvocation StatementExpression MethodInvocation inter MemberReference StatementExpression MethodInvocation inter Literal setName ReturnStatement MemberReference inter	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation getOwner IfStatement BinaryOperation == MemberReference generalization Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference generalization getFacade IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference Literal "" = StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference Font PLAIN getFont getSettings setFont StatementExpression MethodInvocation MemberReference setText	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigRect MemberReference X MemberReference MemberReference MemberReference HEIGHT MemberReference MemberReference = StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false	0
MethodDeclaration ReferenceType Object FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference t getVisibility getFacade ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null MethodInvocation Model MethodInvocation getPublic getVisibilityKind MemberReference v	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems StatementExpression MethodInvocation impl MemberReference handle MemberReference elems	0
MethodDeclaration Modifier public ReferenceType JMenu getMenu ReturnStatement MemberReference menu	0
MethodDeclaration Modifier public addMessage FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object elem IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference elem ReferenceType Message BlockStatement LocalVariableDeclaration Modifier final ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference elem LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator Cast ReferenceType MemberReference handle LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator MethodInvocation message IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference message remove getMessage StatementExpression MethodInvocation MethodInvocation MemberReference message add getMessage ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference elem ReferenceType Message BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference elem	0
MethodDeclaration Modifier private FormalParameter ReferenceType Set TypeArgument ReferenceType String FormalParameter ReferenceType Object feature FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference feature getType getFacade StatementExpression MethodInvocation MemberReference MemberReference type MemberReference	0
MethodDeclaration Modifier protected setAllElements FormalParameter ReferenceType Collection col IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MemberReference col addAll	0
MethodDeclaration Modifier public ReferenceType Object getBase FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole BlockStatement ReturnStatement Cast ReferenceType AssociationEndRole MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Include BlockStatement ReturnStatement Cast ReferenceType Include MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement Cast ReferenceType ClassifierRole MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal null Literal null	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent BlockStatement ReturnStatement MemberReference ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType Object getOperation FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference feature isAOperation getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference feature getName getFacade equals BlockStatement ReturnStatement MemberReference feature ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType String BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference baseClass	0
MethodDeclaration Modifier protected BasicType int ReturnStatement MemberReference Font PLAIN	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object IfStatement BinaryOperation == MemberReference actions Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator actionList ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation actionList ClassCreator ReferenceType RadioAction ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference actionList StatementExpression MethodInvocation actionList ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal add StatementExpression Assignment MemberReference actions ArrayCreator ReferenceType Object Literal 8 = LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 StatementExpression Assignment MemberReference actions MethodInvocation actionList toArray = ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType AggregationKind	0
MethodDeclaration Modifier public delete FormalParameter ReferenceType Object elem IfStatement BinaryOperation == MemberReference elem Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal may not be null " Literal "in SynchronizedStatement MemberReference lock IfStatement MethodInvocation elementsToBeDeleted MemberReference elem contains BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference top Literal null BlockStatement StatementExpression Assignment MemberReference top MemberReference elem = StatementExpression MethodInvocation elementsToBeDeleted Cast ReferenceType RefObject MemberReference elem add IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement BinaryOperation == MemberReference top MemberReference elem BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal top for cascade delete to " MemberReference elem debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "Deleting " MemberReference elem debug StatementExpression MethodInvocation modelImpl MethodInvocation Literal false getRepository TryStatement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Element BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ModelElement BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge Cast ReferenceType GeneralizableElement MemberReference elem StatementExpression MethodInvocation MethodInvocation MemberReference ge getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator s Cast ReferenceType Stereotype MemberReference elem StatementExpression MethodInvocation MethodInvocation MemberReference s IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Parameter BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Relationship BlockStatement StatementExpression MethodInvocation Cast ReferenceType Relationship MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEnd BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEndRole BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Action BlockStatement StatementExpression MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Message BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteMessage getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType StateVertex BlockStatement StatementExpression MethodInvocation Cast ReferenceType StateVertex MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getStateMachines IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Transition BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getStateMachines IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getStateMachines IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getModelManagement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Feature BlockStatement StatementExpression MethodInvocation Cast ReferenceType Feature MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Namespace BlockStatement StatementExpression MethodInvocation Cast ReferenceType Namespace MemberReference elem deleteNamespace CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Encountered deleted object during delete of " MemberReference elem error CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Encountered deleted object during delete of " MemberReference elem error StatementExpression MethodInvocation modelImpl MethodInvocation getRepository SynchronizedStatement MemberReference lock TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator container Cast ReferenceType RefObject MemberReference elem IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference container Literal null MethodInvocation ! elementsToBeDeleted MemberReference container contains BinaryOperation && BinaryOperation instanceof MemberReference container ReferenceType BinaryOperation instanceof MemberReference elem ReferenceType StateVertex BinaryOperation && BinaryOperation instanceof MemberReference container ReferenceType Transition BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation elementsInDeletionOrder Cast ReferenceType RefObject MemberReference elem add CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal already deleted " MemberReference elem debug IfStatement BinaryOperation == MemberReference elem MemberReference top BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType RefObject VariableDeclarator o MemberReference elementsInDeletionOrder BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference o TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation getContainer IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation BinaryOperation == MethodInvocation MethodInvocation size Literal 1 BlockStatement StatementExpression MethodInvocation Literal false CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal already deleted " MemberReference o debug TryStatement StatementExpression MethodInvocation o CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal already deleted " MemberReference o debug StatementExpression MethodInvocation elementsToBeDeleted MemberReference o remove StatementExpression Assignment MemberReference top Literal null = StatementExpression MethodInvocation elementsInDeletionOrder clear IfStatement MethodInvocation ! elementsToBeDeleted isEmpty BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal deleting " MethodInvocation elementsToBeDeleted size Literal " elements in a deleted debug StatementExpression MethodInvocation elementsToBeDeleted clear StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	1
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType String name IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Attempting to set the name of a generalization " Literal is no longer a NamedElement in 2" MemberReference name MethodInvocation handle toString warn ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "name must be LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType NamedElement MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the name to the named element MemberReference name MemberReference handle execute	0
MethodDeclaration Modifier public ReferenceType Collection ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getConnections getFacade	0
MethodDeclaration Modifier static ReferenceType Rectangle FormalParameter ReferenceType Rectangle area LocalVariableDeclaration BasicType int VariableDeclarator MemberReference area x IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator MemberReference area y IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Math MemberReference MemberReference max IfStatement BinaryOperation < MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference = ReturnStatement ClassCreator ReferenceType Rectangle Literal 0 Literal 0 BinaryOperation + MemberReference area width BinaryOperation * Literal 2 MemberReference BinaryOperation + MemberReference area height BinaryOperation * Literal 2 MemberReference	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation MethodInvocation MemberReference col setFillColor	0
MethodDeclaration Modifier public final FormalParameter ReferenceType Object element StatementExpression MethodInvocation This MemberReference element	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation || BinaryOperation == MethodInvocation size Literal 0 MethodInvocation MethodInvocation MethodInvocation peek isAModel getFacade	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object t StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal with " MemberReference t Literal " as parameter debug StatementExpression Assignment MemberReference t TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t = LocalVariableDeclaration ReferenceType Runnable VariableDeclarator dispatch Literal null IfStatement BinaryOperation != MemberReference t MemberReference target BlockStatement StatementExpression Assignment MemberReference target MemberReference t = StatementExpression Assignment MemberReference modelElement Literal null = IfStatement BinaryOperation == MemberReference listenerList Literal null BlockStatement StatementExpression Assignment MemberReference listenerList MethodInvocation This = IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference modelElement MemberReference target = StatementExpression Assignment MemberReference dispatch ClassCreator ReferenceType This MemberReference = StatementExpression MethodInvocation BlockStatement StatementExpression Assignment MemberReference dispatch ClassCreator ReferenceType This MemberReference = StatementExpression MethodInvocation SwingUtilities MemberReference dispatch invokeLater IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator icon Literal null IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference icon MethodInvocation MethodInvocation MemberReference t getInstance = IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference icon setIcon	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String typeName FormalParameter ReferenceType Object namespace IfStatement BinaryOperation == MemberReference typeName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Looking for the classifier " MemberReference typeName Literal " in a object of " MemberReference namespace Literal ". A namespace was LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference namespace MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference BlockStatement IfStatement MethodInvocation typeName MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade equals BlockStatement ReturnStatement MemberReference classifier ReturnStatement Literal null	0
MethodDeclaration Modifier public endElement FormalParameter BasicType int nameCode TransformerException IfStatement MethodInvocation ! elementStack empty BlockStatement StatementExpression MethodInvocation elementStack pop StatementExpression MethodInvocation rtfEmitter MemberReference nameCode endElement	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getNamespace getFacade addElement	0
MethodDeclaration Modifier public ReferenceType Enumeration LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference target	0
MethodDeclaration Modifier private update LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator newText MethodInvocation model getBody IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation MemberReference newText setText	1
MethodDeclaration Modifier static protected ReferenceType String getVariable FormalParameter ReferenceType Context context FormalParameter ReferenceType String varName LocalVariableDeclaration ReferenceType Value VariableDeclarator variable Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator varString Literal null TryStatement StatementExpression Assignment MemberReference variable MethodInvocation MemberReference context BinaryOperation + Literal "$" MemberReference varName evaluate = StatementExpression Assignment MemberReference varString MethodInvocation variable asString = ReturnStatement MemberReference varString CatchClause CatchClauseParameter TransformerException te StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal "" CatchClause CatchClauseParameter IllegalArgumentException iae StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal ""	1
MethodDeclaration Modifier private ReferenceType GetterSetterManager ReturnStatement MemberReference getterSetterManager	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation This addActionListener	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration BasicType boolean VariableDeclarator problem MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference dm getCoreHelper LocalVariableDeclaration ReferenceType List VariableDeclarator names ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade = IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation name Literal "" equals BlockStatement ContinueStatement IfStatement MethodInvocation names MemberReference name contains BlockStatement StatementExpression Assignment MemberReference problem MemberReference PROBLEM_FOUND = BreakStatement ReturnStatement MemberReference problem	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference X MemberReference MemberReference MemberReference H MemberReference MemberReference StatementExpression MethodInvocation BinaryOperation / MethodInvocation getHeight Literal 2 StatementExpression MethodInvocation Literal 0 setLineWidth ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String id FormalParameter ReferenceType String indent IfStatement BinaryOperation == MemberReference MemberReference SECT_NONE ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference indent IfStatement BinaryOperation != MemberReference MemberReference SECT_BRIEF BlockStatement StatementExpression Assignment MemberReference s Literal "// don't delete the following line as " += StatementExpression Assignment MemberReference s Literal needed to source code of this " += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal MemberReference LINE_SEPARATOR MemberReference indent += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + BinaryOperation + Literal "// section " MemberReference id Literal " MemberReference LINE_SEPARATOR += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public FormalParameter BasicType char c FormalParameter BasicType int offset FormalParameter BasicType int len StatementExpression Assignment MemberReference text MethodInvocation text MemberReference c MemberReference offset MemberReference len append =	0
MethodDeclaration Modifier private FormalParameter ReferenceType IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig	1
MethodDeclaration Modifier public ReferenceType Object getPrivate ReturnStatement MemberReference	0
MethodDeclaration Modifier protected IfStatement MethodInvocation ! BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator minSize MethodInvocation StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr LocalVariableDeclaration ReferenceType Action VariableDeclarator action Cast ReferenceType Action MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation action getRecurrence LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference expr IfStatement MethodInvocation ! MemberReference MemberReference equal BlockStatement StatementExpression MethodInvocation action MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Container parent LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets ReturnStatement BinaryOperation - MethodInvocation parent getWidth BinaryOperation + MemberReference insets left MemberReference insets right	0
MethodDeclaration Modifier public ReferenceType CallAction LocalVariableDeclaration ReferenceType CallAction VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public setRoot FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setRoot getComponent MemberReference MethodInvocation Model MethodInvocation MemberReference handle getFacade createCommand	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component BinaryOperation instanceof MemberReference node ReferenceType Node BlockStatement StatementExpression Cast ReferenceType Component MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or node: " MemberReference node	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType int x FormalParameter BasicType int y LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect Literal null IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigNodeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator fnme Cast ReferenceType FigNodeModelElement MemberReference fig StatementExpression Assignment MemberReference rect MethodInvocation fnme = IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigEdgeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator feme Cast ReferenceType FigEdgeModelElement MemberReference fig StatementExpression Assignment MemberReference rect MethodInvocation feme = StatementExpression Assignment MemberReference fig Literal null = ReturnStatement BinaryOperation && BinaryOperation != MemberReference rect Literal null MethodInvocation rect MemberReference x MemberReference y contains	1
MethodDeclaration ReferenceType Multiplicity FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType MultiplicityRange LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator multiplicity MethodInvocation modelImpl MethodInvocation MethodInvocation getMultiplicity MethodInvocation IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal created for list " MemberReference debug StatementExpression MethodInvocation multiplicity MethodInvocation MemberReference addAll getRange StatementExpression SuperMethodInvocation MemberReference multiplicity ReturnStatement MemberReference multiplicity	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object cls FormalParameter ReferenceType StringBuffer sb IfStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator publicTypedefStatements MethodInvocation MemberReference cls MemberReference findTagValues LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation MemberReference cls MemberReference findTagValues LocalVariableDeclaration ReferenceType Collection VariableDeclarator privateTypedefStatements MethodInvocation MemberReference cls MemberReference findTagValues IfStatement MethodInvocation ! publicTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference indent append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// public type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// Result: typedef " Literal "<tag_value>;" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation publicTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "typedef " append MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation Literal ";" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation typedefEnum next append IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference indent append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// protected type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// Result: typedef " Literal "<tag_value>;" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "typedef " append MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation Literal ";" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation typedefEnum next append IfStatement MethodInvocation ! privateTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference indent append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// private type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// Result: typedef " Literal "<tag_value>;" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation privateTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "typedef " append MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation Literal ";" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation typedefEnum next append	1
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object getBinding FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Object VariableDeclarator multiplicity MethodInvocation Model MethodInvocation MemberReference element getMultiplicity getFacade IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation Model MethodInvocation MemberReference multiplicity getUpper getFacade IfStatement BinaryOperation || BinaryOperation > MemberReference upper Literal 1 BinaryOperation == MemberReference upper Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEvent event FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEventListener listener SwitchStatement MethodInvocation event getEventType SwitchStatementCase MemberReference ArgoEventTypes StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "Invalid event:" MethodInvocation event getEventType error BreakStatement	1
MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o isAPackage getFacade BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference o ReferenceType Diagram BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator res ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Diagram VariableDeclarator d Cast ReferenceType Diagram MemberReference o StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getNodes getGraphModel add StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getEdges getGraphModel add ReturnStatement MethodInvocation Collections MemberReference res enumeration IfStatement MethodInvocation Model MethodInvocation MemberReference o isAUMLElement getFacade BlockStatement ReturnStatement MethodInvocation Collections MethodInvocation Model MethodInvocation MemberReference o getFacade enumeration ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unknown element type " MemberReference o	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle IfStatement BinaryOperation == MemberReference handle MemberReference BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference handle MemberReference BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction BlockStatement ReturnStatement Cast ReferenceType CallAction MemberReference handle ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation MemberReference newValue set ReturnStatement Literal null	0
MethodDeclaration Modifier public setParent FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "parent must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Generalization MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal the as the classifier " Literal "of the generalization MemberReference parent MemberReference handle execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sender StatementExpression MethodInvocation impl MemberReference handle MemberReference sender	0
MethodDeclaration Modifier public removeNotify StatementExpression MethodInvocation LOG Literal "The XML is removed" info StatementExpression MethodInvocation removeAll	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String s FormalParameter ReferenceType Object ns ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected addAll FormalParameter ReferenceType Collection col IfStatement BinaryOperation == MethodInvocation col size Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator StatementExpression Assignment MemberReference Literal false = LocalVariableDeclaration BasicType int VariableDeclarator intervalStart TernaryExpression BinaryOperation == MethodInvocation getSize Literal 0 Literal 0 BinaryOperation - MethodInvocation getSize Literal 1 WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next StatementExpression MethodInvocation MemberReference o addElement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation This MemberReference intervalStart BinaryOperation - MethodInvocation getSize Literal 1 fireIntervalAdded	1
MethodDeclaration Modifier public ReferenceType Collection ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object relation FormalParameter ReferenceType Object FormalParameter BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference relation getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference getName getFacade IfStatement BinaryOperation && MethodInvocation Utils MemberReference BinaryOperation == MemberReference Literal 1 BlockStatement StatementExpression MethodInvocation problems BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal in " MemberReference Literal "." MemberReference Literal ": " Literal is nullable and association lower " Literal one" add IfStatement BinaryOperation && MethodInvocation Utils MemberReference BinaryOperation == MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation problems BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal in " MemberReference Literal "." MemberReference Literal ": " Literal is not nullable and association lower " Literal is add	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal "Not a UML2 model	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference instructions	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Object obj FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference obj IfStatement BinaryOperation && BinaryOperation == MemberReference s Literal null MemberReference BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference obj = ReturnStatement MemberReference s	0
MethodDeclaration Modifier public BasicType boolean isAPackage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model MemberReference getModelManagementHelper addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType String getExtension FormalParameter ReferenceType File f IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MethodInvocation f getName getExtension	0
MethodDeclaration Modifier final protected ReferenceType String convertType FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator sName MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade IfStatement MethodInvocation sName Literal "void" equals BlockStatement ReturnStatement Literal null IfStatement MethodInvocation sName Literal "char" equals BlockStatement ReturnStatement Literal "string" IfStatement MethodInvocation sName Literal "boolean" equals BlockStatement ReturnStatement Literal "bool" IfStatement MethodInvocation sName Literal "bool" equals BlockStatement ReturnStatement Literal "bool" IfStatement MethodInvocation sName Literal "int" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "byte" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "short" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "long" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "float" equals BlockStatement ReturnStatement Literal "float" IfStatement MethodInvocation sName Literal "double" equals BlockStatement ReturnStatement Literal "float" IfStatement MethodInvocation sName Literal "string" equals BlockStatement ReturnStatement Literal "string" IfStatement MethodInvocation sName Literal equals BlockStatement ReturnStatement Literal ReturnStatement Literal null	1
MethodDeclaration Modifier public setReadOnly FormalParameter ReferenceType Object handle FormalParameter BasicType boolean isReadOnly StatementExpression MethodInvocation impl MemberReference handle MemberReference isReadOnly setReadOnly	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String resource ReturnStatement MethodInvocation MemberReference resource containsKey	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String propertyName LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference propertyName get IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType DiagramElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator style IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference style Literal = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference style Literal = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference style Literal = BlockStatement StatementExpression Assignment MemberReference style Literal = StatementExpression MethodInvocation Cast ReferenceType MemberReference figNode MemberReference style MemberReference modelElement MemberReference settings ReturnStatement MemberReference figNode	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object role ReturnStatement Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator editor MethodInvocation Globals curEditor IfStatement BinaryOperation && BinaryOperation != MemberReference editor Literal null MethodInvocation ! MethodInvocation isEmpty getEnclosedFigs BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator lay Cast ReferenceType MethodInvocation editor MethodInvocation getActiveLayer getLayerManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation getEnclosedFigs BlockStatement StatementExpression MethodInvocation lay MemberReference f This IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNode BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator fn Cast ReferenceType FigNode MemberReference f LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation fn MethodInvocation iterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation lay Cast ReferenceType FigEdge MethodInvocation it next This IfStatement BinaryOperation instanceof MemberReference fn ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference fn	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenderResult ClassCreator ReferenceType ListSet IfStatement MethodInvocation Model MethodInvocation MemberReference dm isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator names ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator name1Object MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference name1Object isAAssociation getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference name1Object getName getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation MemberReference name1Object IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null Literal MethodInvocation MemberReference name equals "" BlockStatement ContinueStatement IfStatement MethodInvocation names MemberReference name containsKey BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator offender MethodInvocation names MemberReference name get LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation MemberReference offender IfStatement BinaryOperation && MethodInvocation MemberReference MethodInvocation MemberReference BlockStatement IfStatement MethodInvocation ! offenderResult MemberReference offender contains BlockStatement StatementExpression MethodInvocation offenderResult MemberReference offender add StatementExpression MethodInvocation offenderResult MemberReference name1Object add StatementExpression MethodInvocation names MemberReference name MemberReference name1Object put ReturnStatement MemberReference offenderResult	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType List strings FormalParameter ReferenceType String separators LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation strings iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s Cast ReferenceType String MethodInvocation it next IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb MemberReference separators append StatementExpression MethodInvocation sb MemberReference s append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation Cast ReferenceType String MethodInvocation lookAndFeel getSelectedItem Cast ReferenceType String MethodInvocation metalTheme getSelectedItem getInstance StatementExpression MethodInvocation Configuration MemberReference MethodInvocation isSelected setBoolean IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference MethodInvocation toString setString	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal "This is not a class"	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade setAllElements	0
MethodDeclaration Modifier public final FormalParameter ReferenceType p IfStatement BinaryOperation == MemberReference pcl Literal null BlockStatement StatementExpression Assignment MemberReference pcl ClassCreator ReferenceType This = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "addPropertyChangeListener(" MemberReference p Literal ")" debug StatementExpression MethodInvocation pcl MemberReference p addPropertyChangeListener	1
MethodDeclaration Modifier public ReferenceType ReferenceType getReference FormalParameter ReferenceType RefObject object LocalVariableDeclaration ReferenceType String VariableDeclarator mofId MethodInvocation object refMofId LocalVariableDeclaration ReferenceType XmiReference VariableDeclarator ref MethodInvocation MemberReference mofId get IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MemberReference ref Literal null BlockStatement StatementExpression Assignment MemberReference topSystemId Literal null = BlockStatement StatementExpression Assignment MemberReference topSystemId MethodInvocation ref getSystemId = StatementExpression Assignment MemberReference Literal true = IfStatement BinaryOperation == MemberReference ref Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ReferenceType Literal null MemberReference mofId BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator systemId MethodInvocation ref getSystemId IfStatement BinaryOperation && BinaryOperation != MemberReference topSystemId Literal null MethodInvocation topSystemId MemberReference systemId equals BlockStatement StatementExpression Assignment MemberReference systemId Literal null = ReturnStatement ClassCreator ReferenceType ReferenceType MemberReference systemId MethodInvocation ref getXmiId	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object qualifier StatementExpression SuperMethodInvocation MemberReference handle MemberReference index MemberReference qualifier StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType TimeEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator event MethodInvocation StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal "" setName ReturnStatement MemberReference event	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator Cast ReferenceType MemberReference handle IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator name IfStatement MethodInvocation modelImpl MethodInvocation MemberReference element getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation modelImpl MethodInvocation MemberReference element getName getFacade = BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MethodInvocation modelImpl MethodInvocation MemberReference element getFacade Literal " = StatementExpression MethodInvocation path MemberReference name add ReturnStatement MemberReference path	1
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement MemberReference BlockStatement StatementExpression MethodInvocation pause BlockStatement StatementExpression MethodInvocation resume	0
MethodDeclaration Modifier private ReferenceType Object getStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation StereotypeUtility MemberReference modelElement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation stereotypes iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator candidateStereotype MethodInvocation it next IfStatement MethodInvocation MethodInvocation MemberReference candidateStereotype getName MethodInvocation MemberReference equals getFacade BlockStatement StatementExpression Assignment MemberReference stereotype MemberReference candidateStereotype = BreakStatement ReturnStatement MemberReference stereotype	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object FormalParameter ReferenceType String s ParseException LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference MemberReference s IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference c getCoreHelper ReturnStatement MemberReference IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference getContainer getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MemberReference getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference machine getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation Model MethodInvocation MemberReference s MemberReference ns buildClass getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference clazz getCoreHelper ReturnStatement MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference s ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference args localize Literal 0	1
MethodDeclaration Modifier public synchronized Annotation Override setEnabled FormalParameter Modifier final BasicType boolean IfStatement BinaryOperation == MemberReference This MemberReference BlockStatement ReturnStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement BinaryOperation && MemberReference ! MemberReference BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator ClassCreator ReferenceType Throwable StatementExpression MethodInvocation StatementExpression MethodInvocation LOG Literal action by " MemberReference debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal state changed from " MemberReference Literal " to " MemberReference debug StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj LocalVariableDeclaration ReferenceType ResolvedCritic VariableDeclarator rc IfStatement BinaryOperation || BinaryOperation == MemberReference obj Literal null BinaryOperation instanceof MemberReference obj ReferenceType ResolvedCritic BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference rc Cast ReferenceType ResolvedCritic MemberReference obj = IfStatement BinaryOperation == MemberReference critic Literal null BlockStatement IfStatement BinaryOperation != MemberReference rc critic Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! critic MemberReference rc critic equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference offenders Literal null BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference rc offenders Literal null BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator offender MemberReference offenders BlockStatement IfStatement BinaryOperation == MemberReference offender Literal null BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator j ForStatement ForControl Assignment MemberReference j Literal 0 = BinaryOperation < MemberReference j MethodInvocation rc.offenders size MemberReference ++ j BlockStatement IfStatement MethodInvocation offender MethodInvocation rc.offenders MemberReference j get equals BlockStatement BreakStatement IfStatement BinaryOperation >= MemberReference j MethodInvocation rc.offenders size BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration BasicType boolean removeElement FormalParameter ReferenceType String mofId LocalVariableDeclaration ReferenceType XmiReference VariableDeclarator xref MethodInvocation MemberReference mofId remove IfStatement BinaryOperation != MemberReference xref Literal null BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator m MethodInvocation MethodInvocation xref getSystemId get IfStatement BinaryOperation != MemberReference m Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation m MethodInvocation xref getXmiId remove IfStatement BinaryOperation != MemberReference o Literal null BlockStatement IfStatement MethodInvocation ! mofId Cast ReferenceType RefObject MemberReference o equals BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Internal index for ID " MemberReference mofId Literal " " Cast ReferenceType RefObject MemberReference o error ReturnStatement Literal true StatementExpression MethodInvocation LOG BinaryOperation + Literal "Failed to remove index entries for ID " MemberReference mofId debug ReturnStatement Literal false	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object relation StatementExpression MethodInvocation MemberReference relation StatementExpression MethodInvocation MemberReference relation StatementExpression MethodInvocation MemberReference relation	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation && BinaryOperation == MemberReference MemberReference showem MemberReference BlockStatement ReturnStatement LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator oldValid MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference showem = StatementExpression Assignment MemberReference Literal true = MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression Assignment MemberReference MemberReference oldValid = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier LocalVariableDeclaration ReferenceType String VariableDeclarator tip Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference item Literal null MethodInvocation Globals MethodInvocation MethodInvocation This curEditor BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation item = IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference tip MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade = CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal "A deleted element exists on the warn ReturnStatement MethodInvocation Translator Literal localize BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation toString = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference tip Literal null BinaryOperation > MethodInvocation tip length Literal 0 MethodInvocation ! tip Literal " " endsWith BlockStatement StatementExpression Assignment MemberReference tip Literal " " += ReturnStatement MemberReference tip	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MemberReference target	0
MethodDeclaration Modifier public ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType List StatementExpression SuperMethodInvocation MemberReference enumeration MemberReference StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public BasicType boolean isAAssociationRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Fig ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType JComponent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Setting VariableDeclarator settings Literal null LocalVariableDeclaration ReferenceType VariableDeclarator current MethodInvocation IfStatement BinaryOperation != MemberReference current Literal null BlockStatement StatementExpression Assignment MemberReference settings MethodInvocation current = ReturnStatement ClassCreator ReferenceType MemberReference settings	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public close StatementExpression MethodInvocation Literal false setVisible	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier private FormalParameter ReferenceType NodeCollection TypeArgument ReferenceType node FeatureNotSupportedException SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID LCurly LocalVariableDeclaration ReferenceType BlockStatement VariableDeclarator ClassCreator ReferenceType BlockStatement StatementExpression MethodInvocation node MemberReference add StatementExpression MethodInvocation MemberReference parseBlock BreakStatement SwitchStatementCase MemberReference TokenID Semi StatementExpression MethodInvocation advance StatementExpression MethodInvocation node ClassCreator ReferenceType add BreakStatement SwitchStatementCase MemberReference TokenID If StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID Return StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID Try StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID Lock StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID Using StatementExpression MethodInvocation node MethodInvocation add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression Assignment MemberReference isLocalConst Literal true = StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID MemberReference TokenID Byte MemberReference TokenID MemberReference TokenID Decimal MemberReference TokenID Double MemberReference TokenID Float MemberReference TokenID Int MemberReference TokenID Long MemberReference TokenID Object MemberReference TokenID MemberReference TokenID Short MemberReference TokenID String MemberReference TokenID UInt MemberReference TokenID ULong MemberReference TokenID MemberReference TokenID StringLiteral MemberReference TokenID MemberReference TokenID MemberReference TokenID UIntLiteral MemberReference TokenID LongLiteral MemberReference TokenID ULongLiteral MemberReference TokenID MemberReference TokenID MemberReference TokenID NullLiteral MemberReference TokenID LParen MemberReference TokenID MemberReference TokenID RealLiteral MemberReference TokenID CharLiteral MemberReference TokenID PlusPlus MemberReference TokenID MinusMinus MemberReference TokenID This MemberReference TokenID Base MemberReference TokenID LocalVariableDeclaration ReferenceType ExpressionStatement VariableDeclarator ClassCreator ReferenceType ExpressionStatement MethodInvocation ParseExpression StatementExpression MethodInvocation node MemberReference add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Ident IfStatement BinaryOperation && BinaryOperation > MethodInvocation tokens size BinaryOperation + MemberReference index Literal 1 BinaryOperation == MethodInvocation tokens MemberReference id MemberReference index get MemberReference TokenID Colon BlockStatement LocalVariableDeclaration ReferenceType LabeledStatement VariableDeclarator lsnode ClassCreator ReferenceType LabeledStatement StatementExpression Assignment MemberReference lsnode Name MethodInvocation parseQualifiedIdentifier = StatementExpression MethodInvocation MemberReference TokenID Colon AssertAndAdvance StatementExpression MethodInvocation MemberReference lsnode Statements StatementExpression MethodInvocation node MemberReference lsnode add BlockStatement LocalVariableDeclaration ReferenceType ExpressionStatement VariableDeclarator ClassCreator ReferenceType ExpressionStatement MethodInvocation ParseExpression StatementExpression MethodInvocation node MemberReference add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Unsafe StatementExpression MethodInvocation BreakStatement SwitchStatementCase StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal in statement \"" MemberReference curtok id Literal "\" in line: " MemberReference lineCount println LocalVariableDeclaration ReferenceType ExpressionStatement VariableDeclarator ClassCreator ReferenceType ExpressionStatement MethodInvocation ParseExpression StatementExpression MethodInvocation node MemberReference add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BreakStatement	1
MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference mee Literal null MethodInvocation mee MethodInvocation Literal "stereotype" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation getOwner getStereotypes MethodInvocation MethodInvocation mee getSource contains getFacade BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = IfStatement MemberReference BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MemberReference o LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference machine StatementExpression MethodInvocation MemberReference MemberReference machine setup BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "Cannot find namespace " Literal " Literal	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object t StatementExpression Assignment This MemberReference MemberReference t =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object getAttribute ReturnStatement ClassReference ReferenceType Property	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String token LocalVariableDeclaration ReferenceType String VariableDeclarator knowledge Literal null IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic = ReturnStatement MemberReference knowledge	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigObject VariableDeclarator figClone Cast ReferenceType FigObject SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Attribute FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType ArrayList TryStatement StatementExpression MethodInvocation result MethodInvocation modelImpl MethodInvocation MemberReference classifier getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Classifier MemberReference classifier BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation gen getParent addAll CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType int indexOf FormalParameter ReferenceType Object arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getParameter getFacade addElement	0
MethodDeclaration Modifier protected ReferenceType Action FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation Model MethodInvocation MemberReference metaType getName getMetaTypes ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal MemberReference metaType MemberReference label	0
MethodDeclaration Modifier public FormalParameter ReferenceType Graphics g LocalVariableDeclaration BasicType int VariableDeclarator iconX MethodInvocation getX LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - MethodInvocation getY Literal 10 LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator tdList MethodInvocation Designer MethodInvocation LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tdList MethodInvocation getOwner elementListForOffender ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator icon MethodInvocation item IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation icon Literal null MemberReference g MemberReference iconX MemberReference paintIcon StatementExpression Assignment MemberReference iconX MethodInvocation icon getIconWidth += StatementExpression Assignment MemberReference items MethodInvocation tdList This elementListForOffender = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator icon MethodInvocation item IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation icon Literal null MemberReference g MemberReference iconX MemberReference paintIcon StatementExpression Assignment MemberReference iconX MethodInvocation icon getIconWidth +=	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object model FormalParameter ReferenceType OutputStream stream FormalParameter ReferenceType String version UmlException ReturnStatement ClassCreator ReferenceType This MemberReference model MemberReference stream MemberReference version	0
MethodDeclaration Modifier public ReferenceType ProfileConfiguration ReturnStatement MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public static ReferenceType Designer ReturnStatement MemberReference	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && BinaryOperation instanceof MemberReference evt ReferenceType AttributeChangeEvent MethodInvocation MethodInvocation evt getPropertyName equals BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MethodInvocation evt getNewValue updateText	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object node FormalParameter ReferenceType ArgoDiagram lastDiagram IfStatement BinaryOperation instanceof MemberReference node ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference lastDiagram Cast ReferenceType ArgoDiagram MemberReference node = StatementExpression MethodInvocation clear IfStatement MethodInvocation ! pred MemberReference lastDiagram BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iterator MethodInvocation MemberReference node WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation iterator next IfStatement BinaryOperation && MethodInvocation pred MemberReference child evaluate BinaryOperation || BinaryOperation != MemberReference lastDiagram Literal null MethodInvocation pred Literal "" BlockStatement IfStatement MethodInvocation ! MemberReference child contains BlockStatement StatementExpression MethodInvocation MemberReference child add StatementExpression MethodInvocation results MemberReference child add StatementExpression MethodInvocation diagrams MemberReference lastDiagram add StatementExpression MethodInvocation MemberReference child MemberReference lastDiagram	1
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation getParsingHelp StatementExpression MethodInvocation MemberReference s StatementExpression MethodInvocation setText	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection parameters ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String argument StatementExpression MethodInvocation System Literal 0 exit ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType InputStream LocalVariableDeclaration ReferenceType String VariableDeclarator domainMap MethodInvocation Configuration MemberReference getString LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is ClassCreator ReferenceType MemberReference domainMap IfStatement Literal MethodInvocation MemberReference domainMap equals "" BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation MemberReference getResource MethodInvocation toURI MethodInvocation toURL getClass StatementExpression Assignment MemberReference is MethodInvocation url openStream = CatchClause CatchClauseParameter URISyntaxException e StatementExpression MethodInvocation LOG Literal "Could not find file" MemberReference e warn CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal "Could not find file" MemberReference e warn CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "Error MemberReference e warn ReturnStatement MemberReference is	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType LiteralString	0
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation MethodInvocation size IfStatement BinaryOperation instanceof MemberReference parent ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator g Cast ReferenceType MemberReference parent LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation SynchronizedStatement MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference BlockStatement IfStatement MethodInvocation item MethodInvocation MemberReference g BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count ReturnStatement Literal 0	0
MethodDeclaration Modifier public init StatementExpression MethodInvocation ProfileFacade reset StatementExpression MethodInvocation ProfileFacade ClassCreator ReferenceType org ReferenceType argouml ReferenceType profile ReferenceType internal ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator factory ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference factory StatementExpression ClassCreator MethodInvocation ReferenceType	1
MethodDeclaration Modifier public ReferenceType Generalization FormalParameter ReferenceType Object FormalParameter ReferenceType Object parent1 IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference parent1 ReferenceType GeneralizableElement BinaryOperation != MemberReference MemberReference parent1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Both items must be LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child Cast ReferenceType GeneralizableElement MemberReference LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator parent Cast ReferenceType GeneralizableElement MemberReference parent1 ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen MethodInvocation parent BlockStatement IfStatement MethodInvocation gen MethodInvocation MemberReference child equals getParent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal exists" Literal " in IfStatement MethodInvocation parent isLeaf BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "parent is IfStatement MethodInvocation child BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns MethodInvocation child getNamespace IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference ns Literal null MethodInvocation modelImpl MethodInvocation MemberReference ns isReadOnly getModelManagementHelper BinaryOperation instanceof MemberReference child ReferenceType Namespace BlockStatement StatementExpression Assignment MemberReference ns Cast ReferenceType Namespace MemberReference child = IfStatement BinaryOperation || BinaryOperation == MemberReference ns Literal null MethodInvocation modelImpl MethodInvocation MemberReference ns isReadOnly getModelManagementHelper BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "No valid writeable namespace" LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen MethodInvocation MethodInvocation ns refOutermostPackage StatementExpression MethodInvocation gen MemberReference parent setParent StatementExpression MethodInvocation gen MemberReference child StatementExpression MethodInvocation gen MemberReference ns setNamespace ReturnStatement MemberReference gen	1
MethodDeclaration Modifier protected Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator figIter MethodInvocation figs iterator WhileStatement MethodInvocation figIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation figIter next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigNodeModelElement BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNodeModelElement Cast ReferenceType FigNodeModelElement MemberReference obj IfStatement BinaryOperation && BinaryOperation != MemberReference figNodeModelElement Literal null MethodInvocation Model getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator instance MethodInvocation figNodeModelElement getOwner IfStatement BinaryOperation != MemberReference instance Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference instance getFacade IfStatement BinaryOperation > MethodInvocation col size Literal 0 BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference figNodeModelElement add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier protected BasicType int ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType MemberReference	0
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType String modifier IfStatement BinaryOperation || BinaryOperation == MemberReference modifier Literal null BinaryOperation == MethodInvocation modifier length Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement MethodInvocation modifier MemberReference equals BlockStatement ReturnStatement MemberReference InputEvent CTRL_DOWN_MASK IfStatement MethodInvocation modifier MemberReference equals BlockStatement ReturnStatement MemberReference InputEvent IfStatement MethodInvocation modifier MemberReference equals BlockStatement ReturnStatement MemberReference InputEvent IfStatement MethodInvocation modifier MemberReference equals BlockStatement ReturnStatement MemberReference InputEvent IfStatement MethodInvocation modifier MemberReference equals BlockStatement ReturnStatement MemberReference InputEvent BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Unknown " MemberReference modifier debug ReturnStatement Literal 0	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator figEdge Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference modelElement getConnections MethodInvocation toArray getFacade StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType ClassCreator ReferenceType DiagramEdgeSettings MemberReference modelElement MemberReference ArraySelector Literal 0 associationEnds MemberReference ArraySelector Literal 1 associationEnds MemberReference settings = LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFig MethodInvocation MemberReference ArraySelector Literal 0 associationEnds getFigNodeForAssociationEnd LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFig MethodInvocation MemberReference ArraySelector Literal 1 associationEnds getFigNodeForAssociationEnd StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference destFig setDestFigNode StatementExpression MethodInvocation figEdge MemberReference destFig setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAssociationEnd MemberReference modelElement MemberReference settings = StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement getAssociation getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator associationFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getAssociation getFacade presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator classifierFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference associationFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference associationFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference classifierFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference classifierFN setDestFigNode IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociation getFacade MethodInvocation ! Model MethodInvocation MemberReference modelElement isANaryAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference modelElement getConnections MethodInvocation toArray getFacade StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAssociation ClassCreator ReferenceType DiagramEdgeSettings MemberReference modelElement MemberReference ArraySelector Literal 0 associationEnds MemberReference ArraySelector Literal 1 associationEnds MemberReference settings = LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFig MethodInvocation MemberReference ArraySelector Literal 0 associationEnds getFigNodeForAssociationEnd LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFig MethodInvocation MemberReference ArraySelector Literal 1 associationEnds getFigNodeForAssociationEnd StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference destFig setDestFigNode StatementExpression MethodInvocation figEdge MemberReference destFig setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isALink getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigLink MemberReference modelElement MemberReference settings = LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation toArray LocalVariableDeclaration ReferenceType Object VariableDeclarator fromInst MethodInvocation Model MethodInvocation MemberReference ArraySelector Literal 0 getInstance getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator toInst MethodInvocation Model MethodInvocation MemberReference ArraySelector Literal 1 getInstance getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator fromFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference fromInst presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator toFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference toInst presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference fromFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference fromFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference toFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference toFN setDestFigNode StatementExpression MethodInvocation figEdge MethodInvocation MethodInvocation getLayer setLayer IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigGeneralization MemberReference modelElement MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator client MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator supFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator cliFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference client presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference supFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference supFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference cliFN setDestFigNode StatementExpression MethodInvocation figEdge MemberReference cliFN setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADependency getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType MemberReference modelElement MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType MemberReference modelElement MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAbstraction MemberReference modelElement MemberReference settings = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade = IfStatement MethodInvocation CoreFactory.REALIZE_STEREOTYPE MemberReference name equals BlockStatement BreakStatement IfStatement MethodInvocation CoreFactory.REALIZE_STEREOTYPE MemberReference name equals BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAbstraction MemberReference modelElement MemberReference settings = BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigDependency MemberReference modelElement MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator client MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator supFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator cliFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference client presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference cliFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference cliFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference supFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference supFN setDestFigNode StatementExpression MethodInvocation figEdge MethodInvocation MethodInvocation getLayer setLayer IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType CommentEdge BlockStatement LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator ce Cast ReferenceType CommentEdge MemberReference modelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation ce getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator dest MethodInvocation ce LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference source presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference dest presentationFor getLayer StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigEdgeNote MemberReference modelElement MemberReference settings = StatementExpression MethodInvocation figEdge MemberReference sourceFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference sourceFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference destFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference destFN setDestFigNode StatementExpression MethodInvocation figEdge MethodInvocation MethodInvocation getLayer setLayer IfStatement BinaryOperation != MemberReference figEdge Literal null BlockStatement StatementExpression MethodInvocation figEdge ReturnStatement Cast ReferenceType DiagramElement MemberReference figEdge IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference figNode MethodInvocation MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAStereotype getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigClass MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInterface MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAModel getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASubsystem getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAEnumeration getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADataType getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAException getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActor getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUseCase getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAObject getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigObject MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigObject MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isANodeInstance getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComponentInstance getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComponentInstance MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isANode getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComponent getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComponent MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Model element " MemberReference modelElement Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier public setIcon FormalParameter ReferenceType i IfStatement BinaryOperation != MemberReference i Literal null BlockStatement StatementExpression MethodInvocation MemberReference i setIcon StatementExpression MethodInvocation MethodInvocation Literal 0 Literal 2 Literal 0 Literal 2 createEmptyBorder setBorder BlockStatement StatementExpression MethodInvocation Literal null setIcon StatementExpression MethodInvocation Literal null setBorder StatementExpression MethodInvocation StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object param FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference MemberReference MemberReference param MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType AttributesNode	0
MethodDeclaration Modifier private FormalParameter ReferenceType StatementExpression MethodInvocation	1
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal true LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement BinaryOperation && MethodInvocation i hasNext MemberReference result BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference t IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference MemberReference value = StatementExpression Assignment MemberReference first Literal false = StatementExpression Assignment MemberReference result MethodInvocation MemberReference value equals &= CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression Assignment MemberReference result Literal false = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object ReturnStatement MemberReference curModel	0
MethodDeclaration Modifier public Annotation Override BasicType float StatementExpression MethodInvocation MethodInvocation getWeight ReturnStatement MethodInvocation getWeight	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference handle ReturnStatement BinaryOperation == MethodInvocation m MemberReference	0
MethodDeclaration Modifier public add FormalParameter ReferenceType object StatementExpression MethodInvocation objects MemberReference object add	0
MethodDeclaration Modifier public ReferenceType Iterator FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType List VariableDeclarator res ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Project BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p Cast ReferenceType Project MemberReference parent StatementExpression MethodInvocation res MethodInvocation p addAll StatementExpression MethodInvocation res MethodInvocation p getDiagramList addAll IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ArgoDiagram BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d Cast ReferenceType ArgoDiagram MemberReference parent StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getNodes getGraphModel addAll StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getEdges getGraphModel addAll IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation res MethodInvocation Model MethodInvocation MemberReference parent getFacade addAll ReturnStatement MethodInvocation res iterator	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAFinalState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator stateMachine MethodInvocation Model MethodInvocation MemberReference dm getFacade IfStatement BinaryOperation == MemberReference stateMachine Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement BinaryOperation && BinaryOperation != MemberReference stateMachine Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference stateMachine getTop getFacade MemberReference dm BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference dm getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation > MethodInvocation size Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isACompositeState getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND LocalVariableDeclaration ReferenceType Collection VariableDeclarator transitions MethodInvocation Model MethodInvocation MemberReference stateMachine getTransitions getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference transitions BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceState MethodInvocation Model MethodInvocation MemberReference t getSource getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator targetState MethodInvocation Model MethodInvocation MemberReference t getFacade IfStatement BinaryOperation && MethodInvocation MemberReference sourceState MemberReference dm isSomeSubvertexOf MethodInvocation ! MemberReference targetState MemberReference dm isSomeSubvertexOf BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color c StatementExpression MethodInvocation cover MemberReference c setLineColor	0
MethodDeclaration Modifier public BasicType int skipTemplateQualifiers FormalParameter BasicType int kInOut TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation + MemberReference kInOut Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator value WhileStatement BinaryOperation != MethodInvocation MethodInvocation getType MemberReference k LT MemberReference GREATERTHAN BlockStatement SwitchStatement MethodInvocation MethodInvocation getType MemberReference k LT SwitchStatementCase EOF ReturnStatement MemberReference kInOut SwitchStatementCase LESSTHAN StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipTemplateQualifiers = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference k MemberReference value = BreakStatement SwitchStatementCase LPAREN StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipNestedParens = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference k MemberReference value = BreakStatement SwitchStatementCase StatementExpression MemberReference ++ k BreakStatement IfStatement BinaryOperation > MemberReference k MemberReference CPPvariables BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference kInOut BinaryOperation + MemberReference k Literal 1 = ReturnStatement MemberReference kInOut	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement ArrayCreator ReferenceType String ArrayInitializer Literal Literal "name" Literal "remove" LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference isACallAction getFacade BlockStatement StatementExpression MethodInvocation MemberReference Literal "operation" LocalVariableDeclaration ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference getOperation getFacade IfStatement BinaryOperation != MemberReference operation Literal null BlockStatement StatementExpression MethodInvocation MemberReference operation ArrayCreator ReferenceType String ArrayInitializer Literal "owner" Literal "name" LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference operation getOwner getFacade StatementExpression MethodInvocation MemberReference classifier Literal "name"	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator prio MethodInvocation MethodInvocation trim MethodInvocation e getText decode LocalVariableDeclaration BasicType int VariableDeclarator TryStatement StatementExpression Assignment MemberReference MethodInvocation Integer MemberReference prio parseInt = CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression Assignment MemberReference MemberReference ToDoItem HIGH_PRIORITY = IfStatement MethodInvocation MemberReference prio equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference MemberReference ToDoItem HIGH_PRIORITY = IfStatement MethodInvocation MemberReference prio equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference MemberReference ToDoItem MED_PRIORITY = IfStatement MethodInvocation MemberReference prio equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference MemberReference ToDoItem = StatementExpression Assignment MemberReference priority MemberReference =	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator sm MethodInvocation Model MethodInvocation MemberReference dm getStateMachinesHelper IfStatement BinaryOperation && BinaryOperation != MemberReference sm Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference sm getTop getFacade MemberReference dm BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference dm getFacade IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isACompositeState getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND LocalVariableDeclaration ReferenceType Collection VariableDeclarator transitions MethodInvocation Model MethodInvocation MemberReference sm getTransitions getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference transitions BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceState MethodInvocation Model MethodInvocation MemberReference t getSource getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator targetState MethodInvocation Model MethodInvocation MemberReference t getFacade IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceState MemberReference dm isSomeSubvertexOf MethodInvocation MemberReference targetState MemberReference dm isSomeSubvertexOf BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getFacade MemberReference element	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String n StatementExpression Assignment MemberReference name MemberReference n =	0
MethodDeclaration Modifier protected ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MemberReference options	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType BlockStatement TryStatement StatementExpression Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference name Literal false	0
MethodDeclaration Modifier public static removePropPanelFactory FormalParameter ReferenceType factory StatementExpression MethodInvocation MemberReference factory remove	1
MethodDeclaration Modifier public final relational_expression RecognitionException TokenStreamException StatementExpression MethodInvocation shift_expression BlockStatement DoStatement Literal true BlockStatement IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_42 MethodInvocation Literal 2 LA member BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LESSTHAN BlockStatement StatementExpression MethodInvocation MemberReference LESSTHAN match BreakStatement SwitchStatementCase GREATERTHAN BlockStatement StatementExpression MethodInvocation MemberReference GREATERTHAN match BreakStatement SwitchStatementCase LESSTHANOREQUALTO BlockStatement StatementExpression MethodInvocation MemberReference LESSTHANOREQUALTO match BreakStatement SwitchStatementCase GREATERTHANOREQUALTO BlockStatement StatementExpression MethodInvocation MemberReference GREATERTHANOREQUALTO match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation shift_expression BlockStatement BreakStatement	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAParameter getFacade BlockStatement StatementExpression Assignment MemberReference target MethodInvocation Model MethodInvocation MemberReference target getFacade = IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Project VariableDeclarator currentProject MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator paramType MethodInvocation currentProject StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation Model MethodInvocation MemberReference target MemberReference paramType getCoreFactory getInstance	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds IfStatement BinaryOperation > MemberReference w MemberReference h BlockStatement StatementExpression Assignment MemberReference h MemberReference HEIGHT = BlockStatement StatementExpression Assignment MemberReference w MemberReference HEIGHT = StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation head MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation ReturnStatement TernaryExpression BinaryOperation == MemberReference Literal null Literal MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object context ReturnStatement MethodInvocation impl MemberReference context	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigRect MemberReference X MemberReference MemberReference MemberReference HEIGHT MemberReference MemberReference = StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public ReferenceType Stereotype buildStereotype FormalParameter ReferenceType Object element FormalParameter ReferenceType Object name FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation Cast ReferenceType String MemberReference name Cast ReferenceType Namespace MemberReference namespace buildStereotype ReturnStatement MemberReference stereo	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation ClassReference ReferenceType MemberReference add	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation Literal false Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public final RecognitionException TokenStreamException BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__asm BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__asm match BreakStatement SwitchStatementCase LITERAL___asm BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___asm match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference LCURLY match BlockStatement DoStatement Literal true BlockStatement IfStatement MethodInvocation MethodInvocation Literal 1 LA member BlockStatement StatementExpression MethodInvocation MemberReference RCURLY BlockStatement BreakStatement StatementExpression MethodInvocation MemberReference RCURLY match	1
MethodDeclaration Modifier private FormalParameter ReferenceType IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference getInstance StatementExpression MethodInvocation StatementExpression MethodInvocation project Literal true setDirty	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSynchState VariableDeclarator figClone Cast ReferenceType FigSynchState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigCircle MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public BasicType boolean isATaggedValue FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer MemberReference r x BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer MemberReference r y MemberReference r y BinaryOperation + MemberReference r y MemberReference BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height MemberReference r y LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference MemberReference Literal 6 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object tv IfStatement BinaryOperation == MemberReference tv Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference s Literal null BinaryOperation == MethodInvocation s length Literal 0 MethodInvocation s Literal */" equals BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference tv getFacade IfStatement MethodInvocation MemberReference t equals BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MemberReference t generateName Literal "=" MemberReference s	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Project BlockStatement ReturnStatement Cast ReferenceType Project MemberReference parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	1
MethodDeclaration Modifier public final type_name RecognitionException TokenStreamException StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation abstract_declarator	1
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType Object source FormalParameter Modifier final ReferenceType Object path FormalParameter Modifier final BasicType int FormalParameter Modifier final ReferenceType Object children LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList LocalVariableDeclaration ReferenceType VariableDeclarator e Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType MemberReference source MemberReference path MemberReference MemberReference children = StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier public static ReferenceType String generateStereotype FormalParameter ReferenceType Object st FormalParameter BasicType boolean IfStatement BinaryOperation == MemberReference st Literal null BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation instanceof MemberReference st ReferenceType String BlockStatement ReturnStatement MethodInvocation Cast ReferenceType String MemberReference st MemberReference IfStatement MethodInvocation Model MethodInvocation MemberReference st isAStereotype getFacade BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference st getName getFacade MemberReference IfStatement MethodInvocation Model MethodInvocation MemberReference st isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference st MethodInvocation Model MethodInvocation MemberReference st getStereotypes getFacade = IfStatement BinaryOperation instanceof MemberReference st ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype Cast ReferenceType Collection MemberReference st BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade IfStatement MemberReference ! found BlockStatement StatementExpression Assignment MemberReference result MemberReference name = StatementExpression Assignment MemberReference found Literal true = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference result MemberReference name localize = IfStatement MemberReference found BlockStatement ReturnStatement MethodInvocation MemberReference result MemberReference ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public static ReferenceType FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int width FormalParameter BasicType int height ReturnStatement MethodInvocation MemberReference x MemberReference y MemberReference width MemberReference height MemberReference RIGHT	0
MethodDeclaration Modifier public ReferenceType String getFullName ReturnStatement BinaryOperation + BinaryOperation + MemberReference MethodInvocation System Literal getProperty MemberReference name	0
MethodDeclaration Modifier private FormalParameter ReferenceType Font f FormalParameter ReferenceType Object pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType ArgoFigText BlockStatement StatementExpression Cast ReferenceType ArgoFigText MemberReference pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType FigText BlockStatement StatementExpression Cast ReferenceType FigText MemberReference pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType FigGroup BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator Cast ReferenceType FigGroup MemberReference pathFig BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation editor LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation top IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression SuperMethodInvocation MemberReference me	0
MethodDeclaration Modifier protected Annotation Override updateLayout FormalParameter ReferenceType UmlChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee updateLayout IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation mee getSource MethodInvocation getOwner BinaryOperation instanceof MemberReference mee ReferenceType RemoveAssociationEvent Literal MethodInvocation MethodInvocation mee getPropertyName equals BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getOwner getConnections MethodInvocation size getFacade Literal 2 BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment MemberReference offset MemberReference =	0
MethodDeclaration Modifier protected ReferenceType Rectangle FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h ReturnStatement ClassCreator ReferenceType Rectangle BinaryOperation + MemberReference x MethodInvocation BinaryOperation + MemberReference y MethodInvocation BinaryOperation - MemberReference w BinaryOperation * Literal 2 MethodInvocation BinaryOperation - MemberReference h BinaryOperation * Literal 2 MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object classifier ReturnStatement MethodInvocation impl MemberReference classifier	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier private static ReferenceType NotationSettings LocalVariableDeclaration ReferenceType NotationSettings VariableDeclarator settings ClassCreator ReferenceType NotationSettings StatementExpression Assignment MemberReference settings parent Literal null = StatementExpression MethodInvocation settings MemberReference Notation StatementExpression MethodInvocation settings Literal false StatementExpression MethodInvocation settings Literal true StatementExpression MethodInvocation settings Literal false StatementExpression MethodInvocation settings Literal false StatementExpression MethodInvocation settings Literal false StatementExpression MethodInvocation settings Literal false StatementExpression MethodInvocation settings Literal true StatementExpression MethodInvocation settings Literal true StatementExpression MethodInvocation settings Literal false StatementExpression MethodInvocation settings Literal false ReturnStatement MemberReference settings	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MethodInvocation getContents getFacade addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Object FormalParameter ReferenceType lang LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation languages MemberReference lang indexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement MethodInvocation Collections emptySet ReturnStatement MemberReference ArraySelector MemberReference index checked	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean isALink FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String t StatementExpression Assignment MemberReference text MethodInvocation text MemberReference t append =	0
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType Critic ReturnStatement MemberReference critics	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation cover getFillColor	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator subs MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator classes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator me MemberReference subs BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isAClass getFacade BlockStatement StatementExpression MethodInvocation classes MemberReference me add IfStatement BinaryOperation <= MethodInvocation classes size MethodInvocation getThreshold BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Literal false setEnabled	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ausecase LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference ausecase LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet TryStatement StatementExpression MethodInvocation set MethodInvocation modelImpl MethodInvocation MemberReference getModelManagementHelper addAll LocalVariableDeclaration ReferenceType Set VariableDeclarator ClassCreator ReferenceType HashSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference set BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference o ReferenceType BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation MemberReference o add ReturnStatement MemberReference CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType Object literal StatementExpression MethodInvocation MemberReference enumeration MemberReference literal	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference expand = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter Modifier final ReferenceType Object element FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier private ReferenceType Object illegalArgumentObject FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression SuperMethodInvocation Literal false setFilled	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Collection getAllPossibleImports FormalParameter ReferenceType Object pack ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ToString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MethodInvocation size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + BinaryOperation + MemberReference i Literal "\t" This MethodInvocation MemberReference i get MethodInvocation toString Literal "\n" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem	0
MethodDeclaration Modifier public static ReferenceType Action getApplyStereotypeActions FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Set VariableDeclarator availableStereotypes MethodInvocation MemberReference modelElement IfStatement MethodInvocation ! availableStereotypes isEmpty BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator ArrayCreator ReferenceType Action MethodInvocation availableStereotypes size LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation availableStereotypes iterator ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation it hasNext MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ClassCreator ReferenceType MemberReference modelElement MethodInvocation it next = ReturnStatement MemberReference ReturnStatement ArrayCreator ReferenceType Action Literal 0	0
MethodDeclaration Modifier public ReferenceType Project FormalParameter ReferenceType File file OpenException InterruptedException StatementExpression MethodInvocation LOG Literal "Loading with info TryStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation MethodInvocation getInstance LocalVariableDeclaration BasicType long VariableDeclarator length MethodInvocation file length LocalVariableDeclaration BasicType long VariableDeclarator phaseSpace Literal 100000 LocalVariableDeclaration BasicType int VariableDeclarator phases Cast BasicType int BinaryOperation / MemberReference length MemberReference phaseSpace IfStatement BinaryOperation < MemberReference phases Literal 10 BlockStatement StatementExpression Assignment MemberReference phaseSpace BinaryOperation / MemberReference length Literal 10 = StatementExpression Assignment MemberReference phases Literal 10 = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File length is " MemberReference length Literal " is " MemberReference phaseSpace Literal " phases is " MemberReference phases info LocalVariableDeclaration ReferenceType ProgressMgr VariableDeclarator progressMgr ClassCreator ReferenceType ProgressMgr StatementExpression MethodInvocation progressMgr MemberReference phases setNumberOfPhases StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source ClassCreator ReferenceType InputSource ClassCreator ReferenceType XmiInputStream MethodInvocation file MethodInvocation toURL MethodInvocation openStream toURI This MemberReference phaseSpace MemberReference progressMgr StatementExpression MethodInvocation source MethodInvocation file MethodInvocation toURL MethodInvocation toString toURI setSystemId LocalVariableDeclaration ReferenceType ModelMemberFilePersister VariableDeclarator modelPersister ClassCreator ReferenceType ModelMemberFilePersister StatementExpression MethodInvocation modelPersister MemberReference source readModels LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation modelPersister StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation Model MethodInvocation MemberReference model getUmlHelper StatementExpression MethodInvocation p MethodInvocation modelPersister getUUIDRefs StatementExpression MethodInvocation p MemberReference model addMember StatementExpression MethodInvocation MemberReference p parseXmiExtensions StatementExpression MethodInvocation modelPersister MemberReference p StatementExpression MethodInvocation p MemberReference model setRoot StatementExpression MethodInvocation p MethodInvocation modelPersister StatementExpression MethodInvocation p updateRoots LocalVariableDeclaration ReferenceType File VariableDeclarator defaultProjectFile ClassCreator ReferenceType File BinaryOperation + MethodInvocation file getPath Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 99 MemberReference ++ i BlockStatement IfStatement MethodInvocation ! defaultProjectFile exists BlockStatement BreakStatement StatementExpression Assignment MemberReference defaultProjectFile ClassCreator ReferenceType File BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation file getPath Literal "." MemberReference i Literal = StatementExpression MethodInvocation PersistenceManager MethodInvocation MethodInvocation defaultProjectFile toURI MemberReference p getInstance StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation ProjectManager MethodInvocation Literal false getManager ReturnStatement MemberReference p CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getSource IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getSource getStateMachinesHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation col MethodInvocation Model MethodInvocation MemberReference parent getFacade add ReturnStatement MemberReference col ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object tabValues StatementExpression MethodInvocation impl MemberReference handle MemberReference tabValues	0
MethodDeclaration Modifier private ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MemberReference profiles BlockStatement StatementExpression MethodInvocation MemberReference profile StatementExpression MethodInvocation MemberReference profile	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEndRole BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public synchronized ReferenceType toArray LocalVariableDeclaration ReferenceType VariableDeclarator temp ArrayCreator ReferenceType MethodInvocation size LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 IfStatement BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference model = ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator d MemberReference BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference d = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference = IfStatement BinaryOperation != MemberReference profileConfiguration Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference profileConfiguration = ReturnStatement MemberReference temp	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object addedTargets IfStatement BinaryOperation < MemberReference addedTargets length Literal 1 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator targets ClassCreator ReferenceType HashSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference addedTargets BlockStatement IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement StatementExpression MethodInvocation targets Cast ReferenceType Fig MemberReference t add BlockStatement StatementExpression MethodInvocation targets MemberReference t add StatementExpression MethodInvocation MemberReference t LocalVariableDeclaration BasicType int VariableDeclarator selectedRows MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference selectedRows Literal null BinaryOperation > MemberReference selectedRows length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector Literal 0 selectedRows getPathForRow StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 selectedRows	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ep MethodInvocation Model MethodInvocation MemberReference target StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference ep getInstance	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator title MethodInvocation MemberReference i IfStatement BinaryOperation && BinaryOperation != MemberReference title Literal null MethodInvocation title MemberReference equals BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference cover ClassCreator ReferenceType MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference FILL_COLOR = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 BinaryOperation - MethodInvocation Literal 1 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 MemberReference = StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MethodInvocation addFig LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation == MethodInvocation e getSource MethodInvocation getOkButton BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator fileNames ArrayCreator ReferenceType List MethodInvocation languages size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation languages size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i fileNames ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = LocalVariableDeclaration ReferenceType VariableDeclarator language MethodInvocation languages MemberReference i get LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation getInstance LocalVariableDeclaration ReferenceType VariableDeclarator generator MethodInvocation MemberReference language LocalVariableDeclaration ReferenceType Set VariableDeclarator nodes MethodInvocation MemberReference language IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference path Cast ReferenceType String MethodInvocation outputDirectoryComboBox MethodInvocation getSelectedItem getModel = IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path MethodInvocation path trim = IfStatement BinaryOperation > MethodInvocation path length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator files MethodInvocation generator MemberReference nodes MemberReference path Literal false generateFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator filename MemberReference files BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + BinaryOperation + MemberReference path MemberReference FILE_SEPARATOR MemberReference filename add fileNames BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator nodesPerPath ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Set TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator node MemberReference nodes BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement ContinueStatement StatementExpression Assignment MemberReference path MethodInvocation MemberReference node = IfStatement BinaryOperation == MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade WhileStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression Assignment MemberReference path MethodInvocation MemberReference parent = IfStatement BinaryOperation != MemberReference path Literal null BlockStatement BreakStatement StatementExpression Assignment MemberReference parent MethodInvocation Model MethodInvocation MemberReference parent getNamespace getFacade = IfStatement BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator fileSep MemberReference FILE_SEPARATOR IfStatement MethodInvocation path MemberReference fileSep endsWith BlockStatement StatementExpression Assignment MemberReference path MethodInvocation path Literal 0 BinaryOperation - MethodInvocation path length MethodInvocation fileSep length substring = LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator MethodInvocation nodesPerPath MemberReference path get IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object = StatementExpression MethodInvocation nodesPerPath MemberReference path MemberReference put StatementExpression MethodInvocation MemberReference node add StatementExpression MethodInvocation MemberReference node MemberReference language ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry MethodInvocation nodesPerPath entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Set VariableDeclarator Cast ReferenceType Set MethodInvocation entry getValue LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator files MethodInvocation generator MemberReference MemberReference Literal false generateFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator filename MemberReference files BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + BinaryOperation + MemberReference MemberReference FILE_SEPARATOR MemberReference filename add fileNames	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Namespace MemberReference ns LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference o addAll IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation list MemberReference o add ReturnStatement MemberReference list	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType MethodInvocation MemberReference name get	0
MethodDeclaration Modifier public final ReferenceType Object ReturnStatement MemberReference target	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public setNumberOfPhases FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine StatementExpression MethodInvocation MemberReference modifiers MemberReference sb TraceModifiers StatementExpression MethodInvocation type MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation sb MemberReference name append	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier public synchronized ReferenceType get FormalParameter BasicType int i IfStatement BinaryOperation != MemberReference model Literal null BlockStatement IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement ReturnStatement MemberReference model StatementExpression MemberReference -- i IfStatement BinaryOperation == MemberReference i MethodInvocation size BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference profileConfiguration IfStatement BinaryOperation == MemberReference i BinaryOperation + MethodInvocation size Literal 1 BlockStatement ReturnStatement MemberReference profileConfiguration ReturnStatement MethodInvocation MemberReference i get	1
MethodDeclaration Modifier protected ReferenceType getContainer ReturnStatement MemberReference container	0
MethodDeclaration Modifier private FormalParameter ReferenceType String IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference equalsIgnoreCase toString Literal MethodInvocation MemberReference equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Collection LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType ReferenceType UmlPackage VariableDeclarator pkg MethodInvocation modelImpl IfStatement BinaryOperation != MemberReference pkg Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType RefObject VariableDeclarator obj Cast ReferenceType Collection TypeArgument ReferenceType RefObject MethodInvocation pkg MethodInvocation getElement MethodInvocation getCore BlockStatement IfStatement BinaryOperation == MethodInvocation obj Literal null BlockStatement StatementExpression MethodInvocation elements MemberReference obj add BlockStatement StatementExpression MethodInvocation LOG Literal "No default extent in warn ReturnStatement MemberReference elements	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType ValueSpecification FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType TimeEvent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType TimeEvent MemberReference target	0
MethodDeclaration Modifier protected Annotation SuppressWarnings Literal "unchecked" buildModelList LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator elements ClassCreator ReferenceType TreeSet TypeArgument ReferenceType Object ClassCreator ReferenceType PathComparator LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p BlockStatement StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getModelElement getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation elements MethodInvocation p MethodInvocation MethodInvocation Model MethodInvocation getClassifier getMetaTypes getProfileConfiguration addAll StatementExpression MethodInvocation MemberReference elements	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isANodeInstance BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement MethodInvocation MemberReference handle isAComponentInstance BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement MethodInvocation MemberReference handle isAComponent BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Component MemberReference handle MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType MethodInvocation it next IfStatement BinaryOperation != MemberReference me Literal null BlockStatement StatementExpression MethodInvocation MemberReference me add ReturnStatement MemberReference ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation diagrams size	0
MethodDeclaration Modifier static ReferenceType Object getType FormalParameter ReferenceType String name FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator type Literal null LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression Assignment MemberReference type MethodInvocation p MemberReference name Literal false = IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Model MethodInvocation MemberReference name MemberReference buildClass getCoreFactory = ReturnStatement MemberReference type	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase ReturnStatement Literal from class or jar files" SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase MemberReference ModuleInterface ReturnStatement MemberReference SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier private ReferenceType String generateAssociation FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation LOG Literal modelElement)" debug IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAssociation getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Association required" LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = ReturnStatement BinaryOperation + Literal "// generateAssociation : " MemberReference name	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation getComposite Literal false Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType File destiny FormalParameter ReferenceType Object model IOException UmlException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator stream ClassCreator ReferenceType FileOutputStream MemberReference destiny LocalVariableDeclaration ReferenceType VariableDeclarator xmiWriter MethodInvocation Model MemberReference model MemberReference stream BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation ApplicationVersion getVersion Literal "(" MemberReference UmlFilePersister PERSISTENCE_VERSION Literal ")" StatementExpression MethodInvocation xmiWriter write	1
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation == MemberReference nodes Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST ReturnStatement MemberReference nodes	1
MethodDeclaration Modifier private ReferenceType String LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation Literal localize append StatementExpression MethodInvocation buf Literal "\n\n" append StatementExpression MethodInvocation buf MethodInvocation Literal localize append StatementExpression MethodInvocation buf Literal " append StatementExpression MethodInvocation buf Literal "\n\n" append StatementExpression MethodInvocation buf MethodInvocation Literal localize append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ Sequence append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ PHP append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ User append StatementExpression MethodInvocation buf Literal "+ Localization de append StatementExpression MethodInvocation buf Literal "+ Localization append StatementExpression MethodInvocation buf Literal "+ Localization append StatementExpression MethodInvocation buf Literal "+ Localization append StatementExpression MethodInvocation buf Literal "+ Localization append StatementExpression MethodInvocation buf BinaryOperation + Literal "+ Localization " Literal append StatementExpression MethodInvocation buf Literal "+ Localization append StatementExpression MethodInvocation buf Literal "+ Localization append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal append StatementExpression MethodInvocation buf Literal "\n" append LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator cpbi BinaryOperation + Literal ", of Literal ", StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "+ MemberReference cpbi Literal "\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "+ MemberReference cpbi Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "+ MemberReference cpbi Literal "\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Literal localize append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ David append StatementExpression MethodInvocation buf Literal "+ David append StatementExpression MethodInvocation buf Literal "+ David append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ de append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ append StatementExpression MethodInvocation buf Literal "+ Project append StatementExpression MethodInvocation buf Literal "+ Will append StatementExpression MethodInvocation buf Literal "+ 125 append StatementExpression MethodInvocation buf Literal "+ 125 append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MethodInvocation addFig	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier protected ReferenceType getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection stereos IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation == MemberReference stereos Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal must be LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator element Cast ReferenceType Element MemberReference modelElement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference stereos BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The stereotypes from stereo Literal " must be instances of IfStatement MethodInvocation ! element Cast ReferenceType Stereotype MemberReference o BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The stereotype " MemberReference o Literal " cannot be applied to " MemberReference modelElement LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference stereos BlockStatement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference o LocalVariableDeclaration ReferenceType VariableDeclarator eo MethodInvocation element MemberReference stereotype IfStatement MethodInvocation element MemberReference stereotype BlockStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference stereotype BlockStatement StatementExpression MethodInvocation MemberReference eo remove MethodDeclaration * Call the model event and ask it to an event * a stereotype has been This is a until we * the event that a * has been * @param * @param */ Modifier private FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation MemberReference modelElement Literal null MemberReference stereotype MemberReference Literal "stereotype" Literal null LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd IfStatement BinaryOperation == MethodInvocation stereos size Literal 1 BlockStatement StatementExpression Assignment MemberReference cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the stereotype to the element MethodInvocation stereos MethodInvocation next iterator MemberReference modelElement = BlockStatement StatementExpression Assignment MemberReference cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal stereotypes to the element MethodInvocation stereos size MemberReference modelElement = StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute	0
MethodDeclaration Modifier private Annotation SuppressWarnings Literal FormalParameter ReferenceType Object modelElement LocalVariableDeclaration BasicType boolean VariableDeclarator contained Literal false LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Object VariableDeclarator ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference models StatementExpression MethodInvocation MemberReference profile add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MemberReference BlockStatement StatementExpression Assignment MemberReference contained MethodInvocation model MethodInvocation MethodInvocation MemberReference modelElement getRoot getFacade equals = IfStatement MemberReference contained BlockStatement BreakStatement AssertStatement MemberReference contained BinaryOperation + BinaryOperation + BinaryOperation + Literal "model element (" MemberReference modelElement Literal ") not contained " Literal "in	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType String superclassName FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc StatementExpression MethodInvocation MemberReference name MemberReference modifiers MemberReference EMPTY_STRING_LIST MemberReference superclassName MemberReference interfaces MemberReference javadoc Literal false	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram getDiagram ReturnStatement MemberReference diagram	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb BinaryOperation + MemberReference Value Literal " " append	1
MethodDeclaration Modifier private StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me StatementExpression Assignment MemberReference MethodInvocation me isShiftDown =	0
MethodDeclaration Modifier private static FormalParameter BasicType int FormalParameter ReferenceType StatementExpression MethodInvocation ClassCreator ReferenceType ArgoNotationEvent MemberReference MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object connection StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference connection	0
MethodDeclaration Modifier public BasicType boolean isAComponent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Component	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object element ReturnStatement MethodInvocation MethodInvocation MethodInvocation MemberReference element MethodInvocation	0
MethodDeclaration Modifier private update IfStatement BinaryOperation == MethodInvocation MethodInvocation getSize getModel Literal 0 BlockStatement StatementExpression MethodInvocation addButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation addButton Literal true setEnabled IfStatement BinaryOperation == MethodInvocation MethodInvocation getSize getModel Literal 0 BlockStatement StatementExpression MethodInvocation removeButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation removeButton Literal true setEnabled IfStatement BinaryOperation && BinaryOperation > MethodInvocation MethodInvocation getSize getModel Literal 1 MemberReference ! BlockStatement StatementExpression MethodInvocation addButton Literal false setEnabled StatementExpression MethodInvocation okButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation addButton Literal true setEnabled StatementExpression MethodInvocation okButton Literal true setEnabled	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String IfStatement MethodInvocation Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType OclType Literal IfStatement MethodInvocation Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType OclType Literal IfStatement MethodInvocation Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType OclType Literal ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType getFrame IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator rootFrame MethodInvocation JOptionPane IfStatement BinaryOperation instanceof MemberReference rootFrame ReferenceType JFrame BlockStatement StatementExpression MethodInvocation MemberReference rootFrame setFrame BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator frames MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference frames length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i frames ReferenceType JFrame BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Found multiple warn BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i frames setFrame IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Failed to find JFrame - using warn StatementExpression MethodInvocation MethodInvocation JOptionPane setFrame ReturnStatement MemberReference	1
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation message ReturnStatement MethodInvocation MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object port ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind IfStatement BinaryOperation instanceof MemberReference kind ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement ReturnStatement MethodInvocation MemberReference kind equals CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType List TypeArgument ReferenceType Token tokens LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator t MemberReference tokens BlockStatement StatementExpression MethodInvocation buf MethodInvocation t getValue append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public BasicType boolean isADependency FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Dependency	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object qualifier StatementExpression SuperMethodInvocation MemberReference handle MemberReference qualifier StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType FigNode StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier private static FormalParameter ReferenceType cl StatementExpression MethodInvocation cl Literal "" setName StatementExpression MethodInvocation cl Literal false StatementExpression MethodInvocation cl Literal false StatementExpression MethodInvocation cl Literal false setRoot StatementExpression MethodInvocation cl Literal false StatementExpression MethodInvocation cl Literal false StatementExpression MethodInvocation cl MemberReference setVisibility	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression MethodInvocation ProjectBrowser MethodInvocation getInstance	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MemberReference type Literal ":" MemberReference value	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference target StatementExpression MethodInvocation dialog Literal true setVisible IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference target isAMessage getFacade BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference target getAction getFacade LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram Literal null LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ArgoDiagram VariableDeclarator iter MethodInvocation project MethodInvocation iterator getDiagramList WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference diagram MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference action isACallAction getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference action getOperation getFacade LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference operation Cast ReferenceType DiagramElement MemberReference MemberReference diagram StatementExpression MethodInvocation dialog Literal true setVisible BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator receiver MethodInvocation Model MethodInvocation MemberReference target getFacade LocalVariableDeclaration Modifier final ReferenceType Collection VariableDeclarator c TernaryExpression BinaryOperation != MemberReference receiver Literal null MethodInvocation Model MethodInvocation MemberReference receiver getFacade Literal null LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator cls TernaryExpression BinaryOperation && BinaryOperation != MemberReference c Literal null MethodInvocation ! c isEmpty MethodInvocation c MethodInvocation next iterator Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference cls Literal null MethodInvocation Model MethodInvocation MemberReference cls isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator opName MethodInvocation Model MethodInvocation MemberReference target getName getFacade LocalVariableDeclaration BasicType int VariableDeclarator pos1 MethodInvocation opName Literal "." lastIndexOf LocalVariableDeclaration BasicType int VariableDeclarator pos2 MethodInvocation opName Literal "(" lastIndexOf IfStatement BinaryOperation == MemberReference pos1 Literal - 1 BlockStatement StatementExpression Assignment MemberReference pos1 MethodInvocation opName Literal "new " lastIndexOf = StatementExpression Assignment MemberReference pos1 TernaryExpression BinaryOperation != MemberReference pos1 Literal - 1 BinaryOperation + MemberReference pos1 Literal 4 Literal 0 = BlockStatement StatementExpression MemberReference ++ pos1 StatementExpression Assignment MemberReference pos2 TernaryExpression BinaryOperation != MemberReference pos2 Literal - 1 MemberReference pos2 MethodInvocation opName length = StatementExpression Assignment MemberReference opName MethodInvocation opName MemberReference pos1 MemberReference pos2 substring = ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference cls getCoreHelper BlockStatement IfStatement MethodInvocation opName MethodInvocation Model MethodInvocation MemberReference operation getName getFacade equals BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference operation Cast ReferenceType DiagramElement MemberReference MemberReference diagram StatementExpression MethodInvocation dialog Literal true setVisible BreakStatement	1
MethodDeclaration Modifier public final ReferenceType String getString FormalParameter ReferenceType key FormalParameter ReferenceType String defaultValue StatementExpression MethodInvocation ReturnStatement MethodInvocation MethodInvocation key getKey MemberReference defaultValue getValue	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ArgoDiagram d StatementExpression Assignment MemberReference diagram MemberReference d =	0
MethodDeclaration Modifier public addMember FormalParameter ReferenceType Object m IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A model member must be supplied" IfStatement BinaryOperation instanceof MemberReference m ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation LOG Literal "Adding diagram member" info StatementExpression MethodInvocation Cast ReferenceType ArgoDiagram MemberReference m IfStatement BinaryOperation instanceof MemberReference m ReferenceType ProjectMemberTodoList BlockStatement StatementExpression MethodInvocation LOG Literal "Adding todo member" info StatementExpression MethodInvocation Cast ReferenceType ProjectMemberTodoList MemberReference m IfStatement MethodInvocation Model MethodInvocation MemberReference m isAModel getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Adding model member" info StatementExpression MethodInvocation MemberReference m IfStatement MethodInvocation Model MethodInvocation MemberReference m isAProfile getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Adding profile model member" info StatementExpression MethodInvocation MemberReference m BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The member must be a model todo member or Literal "It is " MethodInvocation m MethodInvocation getName getClass StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal are now " MethodInvocation members size Literal " info	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation StatementExpression SuperMethodInvocation	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String typeName FormalParameter ReferenceType List ReturnStatement MemberReference typeName	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Fig FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int FormalParameter BasicType int LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference MemberReference StatementExpression MethodInvocation p MemberReference MemberReference addPoint StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference Literal 2 = ReturnStatement MemberReference p	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator Cast ReferenceType ModelElement MemberReference IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "the element is " Literal and may not be " Literal LocalVariableDeclaration ReferenceType VariableDeclarator con MethodInvocation StatementExpression MethodInvocation con MethodInvocation MemberReference add StatementExpression MethodInvocation con MethodInvocation getNamespace setNamespace ReturnStatement MemberReference con	0
MethodDeclaration Modifier public ReferenceType String getLanguage LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation getExpression IfStatement BinaryOperation == MemberReference expression Literal null BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator language Literal null TryStatement StatementExpression Assignment MemberReference language MethodInvocation Model MethodInvocation MemberReference expression getLanguage = CatchClause CatchClauseParameter Exception ex ReturnStatement MemberReference language	0
MethodDeclaration Modifier private FormalParameter BasicType boolean value LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs MethodInvocation ce MethodInvocation getFigs ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNodeModelElement BlockStatement StatementExpression Cast ReferenceType FigNodeModelElement MemberReference f StatementExpression Cast ReferenceType MemberReference f StatementExpression MethodInvocation f	0
MethodDeclaration Modifier public static register FormalParameter ReferenceType Critic cr FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Critic VariableDeclarator theCritics MethodInvocation MethodInvocation MemberReference clazz get getCriticRegistry IfStatement BinaryOperation == MemberReference theCritics Literal null BlockStatement StatementExpression Assignment MemberReference theCritics ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Critic = StatementExpression MethodInvocation MemberReference clazz MemberReference theCritics put IfStatement MethodInvocation ! theCritics MemberReference cr contains BlockStatement StatementExpression MethodInvocation theCritics MemberReference cr add StatementExpression MethodInvocation MemberReference cr StatementExpression MethodInvocation LOG BinaryOperation + Literal " MethodInvocation theCritics toString debug StatementExpression MethodInvocation cachedCritics MemberReference clazz remove StatementExpression MethodInvocation MemberReference cr	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected FormalParameter ReferenceType StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object item StatementExpression Assignment MemberReference target MemberReference item = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference item	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType File FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator toDoDirectories ClassCreator ReferenceType LinkedList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType File VariableDeclarator seenDirectories ClassCreator ReferenceType HashSet TypeArgument ReferenceType File StatementExpression MethodInvocation toDoDirectories MemberReference file add WhileStatement MethodInvocation ! toDoDirectories isEmpty BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator curDir MethodInvocation toDoDirectories Literal 0 remove IfStatement MethodInvocation ! curDir isDirectory BlockStatement StatementExpression MethodInvocation results MemberReference curDir add ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation curDir listFiles IfStatement BinaryOperation != MemberReference files Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator curFile MethodInvocation curDir listFiles BlockStatement IfStatement MethodInvocation curFile isDirectory BlockStatement IfStatement MethodInvocation ! seenDirectories MemberReference curFile contains BlockStatement StatementExpression MethodInvocation toDoDirectories MemberReference curFile add StatementExpression MethodInvocation seenDirectories MemberReference curFile add BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation curFile MethodInvocation toLowerCase getName IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation s Literal ".xmi" endsWith MethodInvocation s Literal endsWith MethodInvocation s Literal endsWith MethodInvocation s Literal endsWith BlockStatement StatementExpression MethodInvocation results MemberReference curFile add ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public ReferenceType Include ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType ImageIcon loadIcon FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType URL VariableDeclarator imagePath ClassReference MethodInvocation getClassLoader MethodInvocation BinaryOperation + BinaryOperation + Literal MemberReference name Literal getResource ReferenceType LocalVariableDeclaration ReferenceType ImageIcon VariableDeclarator icon Literal null IfStatement BinaryOperation != MemberReference imagePath Literal null StatementExpression Assignment MemberReference icon ClassCreator ReferenceType ImageIcon MemberReference imagePath = ReturnStatement MemberReference icon	1
MethodDeclaration Modifier private static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator splash ClassCreator ReferenceType StatementExpression MethodInvocation splash Literal true setVisible IfStatement BinaryOperation && MethodInvocation ! BinaryOperation == MethodInvocation Runtime MethodInvocation getRuntime Literal 1 BlockStatement SynchronizedStatement MemberReference splash WhileStatement MethodInvocation ! splash BlockStatement TryStatement StatementExpression MethodInvocation splash wait CatchClause CatchClauseParameter InterruptedException e ReturnStatement MemberReference splash	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MemberReference	0
MethodDeclaration Modifier public ReferenceType Element getArea ReturnStatement MemberReference area	0
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType ExplorerPerspective StatementExpression MethodInvocation perspectives MemberReference remove ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator listener MemberReference BlockStatement StatementExpression MethodInvocation listener MemberReference	0
MethodDeclaration Modifier private ReferenceType JList IfStatement BinaryOperation == MemberReference jlstSizes Literal null BlockStatement StatementExpression Assignment MemberReference jlstSizes ClassCreator ReferenceType JList ArrayCreator ReferenceType Integer ArrayInitializer MethodInvocation Integer Literal 8 valueOf MethodInvocation Integer Literal 9 valueOf MethodInvocation Integer Literal 10 valueOf MethodInvocation Integer Literal 11 valueOf MethodInvocation Integer Literal 12 valueOf MethodInvocation Integer Literal 14 valueOf MethodInvocation Integer Literal 16 valueOf MethodInvocation Integer Literal 18 valueOf MethodInvocation Integer Literal 20 valueOf MethodInvocation Integer Literal 22 valueOf MethodInvocation Integer Literal 24 valueOf MethodInvocation Integer Literal 26 valueOf MethodInvocation Integer Literal 28 valueOf MethodInvocation Integer Literal 36 valueOf MethodInvocation Integer Literal 48 valueOf MethodInvocation Integer Literal 72 valueOf = StatementExpression MethodInvocation jlstSizes MemberReference Literal true setSelectedValue StatementExpression MethodInvocation jlstSizes MethodInvocation ClassCreator ReferenceType MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType e IfStatement BinaryOperation != MethodInvocation jlstSizes getSelectedValue Literal null BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType Integer MethodInvocation jlstSizes getSelectedValue = StatementExpression MethodInvocation addListSelectionListener getSelectionModel ReturnStatement MemberReference jlstSizes	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement TernaryExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation getLabel Literal null	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object FormalParameter ReferenceType Object toP ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean IfStatement MemberReference BlockStatement ReturnStatement MemberReference IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent ReturnStatement MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	1
MethodDeclaration Modifier public ReferenceType ReturnStatement Cast ReferenceType MethodInvocation objects toArray	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file ReturnStatement MethodInvocation MemberReference file MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType Notation getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public BasicType boolean isAMultiplicity FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifier FormalParameter ReferenceType List operations StatementExpression SuperMethodInvocation MemberReference classifier MemberReference operations StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isALink getFacade MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation MemberReference ns ClassReference ReferenceType Namespace getAllModelElementsOfKind	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement BinaryOperation != MemberReference action Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation Model MethodInvocation MemberReference action getScript getFacade IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement StatementExpression Assignment MemberReference ret Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expression getBody getFacade = ReturnStatement TernaryExpression BinaryOperation == MemberReference ret Literal null Literal "" MemberReference ret	0
MethodDeclaration Modifier protected ReferenceType Collection LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation getOwner ReturnStatement MethodInvocation Model MethodInvocation MemberReference classifier getFacade	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Action ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object owner LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference MemberReference StatementExpression Assignment MemberReference label ClassCreator ReferenceType ArgoFigText MemberReference owner ClassCreator ReferenceType Rectangle MemberReference MemberReference y MemberReference MemberReference MethodInvocation getSettings Literal false = StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y MemberReference = StatementExpression MethodInvocation label Literal false setFilled StatementExpression MethodInvocation label Literal 0 setLineWidth StatementExpression MethodInvocation label Literal false StatementExpression MethodInvocation label MethodInvocation getLabel setText StatementExpression MethodInvocation label StatementExpression Assignment MemberReference condition ClassCreator ReferenceType ArgoFigText MemberReference owner ClassCreator ReferenceType Rectangle MemberReference MemberReference y MemberReference MemberReference MethodInvocation getSettings Literal false = StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y MemberReference = StatementExpression MethodInvocation condition Literal false setFilled StatementExpression MethodInvocation condition Literal 0 setLineWidth StatementExpression Assignment MemberReference fg ClassCreator ReferenceType MemberReference owner MethodInvocation getSettings = StatementExpression MethodInvocation fg MemberReference label addFig StatementExpression MethodInvocation fg MemberReference condition addFig StatementExpression MethodInvocation fg StatementExpression MethodInvocation MemberReference fg ClassCreator ReferenceType This MemberReference fg Literal 50 Literal 10 StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal true	1
MethodDeclaration BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType AssociationEnd buildAssociationEnd FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference type Literal null BinaryOperation instanceof MemberReference type ReferenceType Classifier BinaryOperation == MemberReference assoc Literal null BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "one of the arguments is null" ReturnStatement MethodInvocation MemberReference assoc Literal "" MemberReference type Literal null Literal null Literal true Literal null Literal null Literal null Literal null MemberReference buildAssociationEnd	1
MethodDeclaration Modifier protected ReferenceType List ReturnStatement MemberReference actions	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigCircle Literal 0 Literal 0 Literal 1 Literal 1 MemberReference MemberReference FILL_COLOR = StatementExpression MethodInvocation MemberReference addFig	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Iterator iter FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType String VariableDeclarator value Literal null IfStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator obj Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation iter hasNext MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buffer MemberReference append StatementExpression Assignment MemberReference obj MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade BlockStatement StatementExpression MethodInvocation buffer MethodInvocation MemberReference obj MemberReference namespace append BlockStatement StatementExpression MethodInvocation buffer MethodInvocation obj toString append StatementExpression Assignment MemberReference value MethodInvocation buffer toString = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation = ReturnStatement MemberReference value	1
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation MethodInvocation Literal null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal null MethodInvocation ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement Literal true	0
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType Namespace namespace LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement StatementExpression MethodInvocation results MethodInvocation namespace addAll LocalVariableDeclaration ReferenceType Namespace VariableDeclarator owner MethodInvocation namespace getNamespace IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation results MethodInvocation MemberReference owner getContents addAll ReturnStatement MemberReference results	1
MethodDeclaration FormalParameter ReferenceType String path StatementExpression MethodInvocation MemberReference path add	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType Collection FormalParameter ReferenceType Collection packages LocalVariableDeclaration ReferenceType Collection VariableDeclarator ret ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference packages BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference object isAPackage getFacade BlockStatement StatementExpression MethodInvocation ret MemberReference object add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object context TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference context ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType org ReferenceType omg ReferenceType ReferenceType UmlPackage Cast ReferenceType MemberReference handle ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal object " MemberReference handle Literal " or " MemberReference context	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file FormalParameter BasicType boolean showUI FormalParameter ReferenceType ProgressMonitor pmw ReturnStatement BinaryOperation != MethodInvocation MemberReference file MemberReference showUI MemberReference pmw loadProject2 Literal null	1
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MethodInvocation head	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MemberReference text getCoreHelper	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation MethodInvocation getInstance	0
MethodDeclaration Modifier public removeElement FormalParameter ReferenceType Object o LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation objects MemberReference o indexOf IfStatement BinaryOperation == MethodInvocation MemberReference index getElementAt MemberReference BlockStatement IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation TernaryExpression BinaryOperation == MethodInvocation getSize Literal 1 Literal null MethodInvocation BinaryOperation + MemberReference index Literal 1 getElementAt setSelectedItem BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation - MemberReference index Literal 1 getElementAt setSelectedItem IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation objects MemberReference index remove StatementExpression MethodInvocation This MemberReference index MemberReference index	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator p ClassCreator ReferenceType StringBuffer ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation toString StatementExpression MethodInvocation p MethodInvocation Literal "," append MemberReference name append ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator rule MethodInvocation BlockStatement StatementExpression MethodInvocation p MethodInvocation Literal "," append MethodInvocation rule MethodInvocation getName getClass append StatementExpression MethodInvocation p BinaryOperation - MethodInvocation p length Literal 1 deleteCharAt StatementExpression MethodInvocation p Literal ";" append StatementExpression MethodInvocation p BinaryOperation - MethodInvocation p length Literal 1 deleteCharAt ReturnStatement MethodInvocation p toString	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Object cls StatementExpression MethodInvocation StatementExpression Assignment MemberReference MemberReference cls =	0
MethodDeclaration Modifier private BasicType boolean FormalParameter Modifier final ReferenceType Object element SynchronizedStatement MemberReference IfStatement MethodInvocation MemberReference element contains BlockStatement StatementExpression MethodInvocation MemberReference element remove ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation MemberReference operation MemberReference classifier getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MemberReference name setName getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration Modifier public BasicType int hashCode IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation name hashCode	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation size LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation getSelectedIndex ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation % BinaryOperation + MemberReference MemberReference i MemberReference size IfStatement MethodInvocation MemberReference BlockStatement StatementExpression MethodInvocation MemberReference setSelectedIndex ReturnStatement	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation MethodInvocation Literal true	0
MethodDeclaration Modifier protected Annotation Override setText StatementExpression MethodInvocation MemberReference setText	0
MethodDeclaration Modifier private warnClassifierNotFound FormalParameter ReferenceType String name FormalParameter ReferenceType String operation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Modeler.java: a classifier (" MemberReference name Literal ") that was in the source " Literal could not be generated in the model " MemberReference operation logError	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType String FormalParameter ReferenceType Object m IfStatement BinaryOperation instanceof MemberReference m ReferenceType Element BlockStatement ReturnStatement MethodInvocation MethodInvocation m getClass ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Not an	1
MethodDeclaration Modifier public ReferenceType Object getComposite ReturnStatement MemberReference	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType PersistenceManager VariableDeclarator pm MethodInvocation PersistenceManager getInstance LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize setDialogTitle StatementExpression MethodInvocation chooser MethodInvocation getInstance StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize StatementExpression MethodInvocation chooser Literal true StatementExpression MethodInvocation pm MemberReference chooser LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation Configuration MemberReference PersistenceManager getString IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression Assignment MemberReference fn MethodInvocation PersistenceManager MethodInvocation MemberReference fn getInstance = StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation chooser MethodInvocation getFrame showSaveDialog IfStatement BinaryOperation == MemberReference result MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile IfStatement BinaryOperation != MemberReference theFile Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation theFile getName StatementExpression MethodInvocation Configuration MemberReference PersistenceManager MethodInvocation PersistenceManager MethodInvocation MethodInvocation theFile getPath getInstance setString StatementExpression Assignment MemberReference name MethodInvocation pm MemberReference name = StatementExpression Assignment MemberReference theFile ClassCreator ReferenceType File MethodInvocation theFile getParent MemberReference name = StatementExpression MethodInvocation ProjectBrowser MethodInvocation Literal false MemberReference theFile Literal false getInstance	0
MethodDeclaration Modifier public ReferenceType Object getObject ReturnStatement ClassReference ReferenceType	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public Annotation Override setLayer FormalParameter ReferenceType Layer lay StatementExpression SuperMethodInvocation MemberReference lay setLayer ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation lay getContents BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigCompositeState BlockStatement IfStatement BinaryOperation == MethodInvocation f getOwner MethodInvocation Model MethodInvocation MethodInvocation getOwner getContainer getFacade BlockStatement StatementExpression MethodInvocation MemberReference f setEnclosingFig BreakStatement	1
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get IfStatement MethodInvocation ! MemberReference dm MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public deleteCollection FormalParameter ReferenceType Collection col StatementExpression MethodInvocation impl MemberReference col deleteCollection	0
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator target MethodInvocation o toString IfStatement MethodInvocation ! target MemberReference ArraySelector Literal 0 patterns startsWith BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! target MemberReference ArraySelector BinaryOperation - MemberReference Literal 1 patterns endsWith BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator pattern MemberReference patterns BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index BinaryOperation + MemberReference target Literal "*" IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference target MethodInvocation target BinaryOperation + MemberReference index MethodInvocation pattern length substring = ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Vertex	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType MemberReference modelElement	0
MethodDeclaration * the edge for an * this method in the implementation of a to be * * When it would be to take model elements * Figs as arguments the implementation of that interface * then find the Figs without such diagram knowledge * in */ Modifier private ReferenceType Object FormalParameter Modifier final ReferenceType String type FormalParameter Modifier final ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator theClassifier Literal null LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation type Literal "." lastIndexOf IfStatement BinaryOperation != MemberReference pos Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MemberReference model StatementExpression Assignment MemberReference pos Literal 0 = LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference type Literal "." WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation st nextToken StatementExpression Assignment MemberReference pos MethodInvocation s length += LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation Model MethodInvocation MemberReference namespace MemberReference s lookupIn getFacade IfStatement BinaryOperation == MemberReference element Literal null BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference element MethodInvocation Model MethodInvocation MemberReference s = BlockStatement StatementExpression Assignment MemberReference element MethodInvocation Model MethodInvocation MemberReference s buildClass getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference namespace setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference namespace MemberReference element addOwnedElement getCoreHelper StatementExpression Assignment MemberReference namespace MemberReference element = StatementExpression MemberReference ++ pos StatementExpression Assignment MemberReference theClassifier MemberReference namespace = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference classifier getNamespace getFacade StatementExpression Assignment MemberReference theClassifier MethodInvocation Model MethodInvocation MemberReference namespace MemberReference type lookupIn getFacade = IfStatement MethodInvocation ! Model MethodInvocation MemberReference theClassifier isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference theClassifier Literal null = LocalVariableDeclaration ReferenceType Collection VariableDeclarator sdeps MethodInvocation Model MethodInvocation MemberReference classifier getSupplierDependencies getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter1 TernaryExpression BinaryOperation != MemberReference sdeps Literal null MethodInvocation sdeps iterator Literal null WhileStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference theClassifier Literal null BinaryOperation != MemberReference iter1 Literal null MethodInvocation iter1 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dep MethodInvocation iter1 next IfStatement MethodInvocation Model MethodInvocation MemberReference dep isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference dep getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter2 TernaryExpression BinaryOperation != MemberReference clients Literal null MethodInvocation clients iterator Literal null WhileStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference theClassifier Literal null BinaryOperation != MemberReference iter2 Literal null MethodInvocation iter2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator comp MethodInvocation iter2 next IfStatement MethodInvocation Model MethodInvocation MemberReference comp isAComponent getFacade BlockStatement StatementExpression Assignment MemberReference theClassifier MethodInvocation MemberReference comp MemberReference type = IfStatement BinaryOperation == MemberReference theClassifier Literal null BlockStatement StatementExpression Assignment MemberReference theClassifier MethodInvocation Model MethodInvocation MemberReference type buildClass getCoreFactory = LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference classifier getNamespace getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference theClassifier MemberReference namespace setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference namespace MemberReference theClassifier addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference classifier MemberReference theClassifier ReturnStatement MemberReference theClassifier	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object element StatementExpression MethodInvocation Model MethodInvocation This MemberReference element getPump	0
MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier public BasicType boolean StatementExpression MethodInvocation LOG Literal info ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType Collection parse FormalParameter ReferenceType InputSource inputSource FormalParameter BasicType boolean UmlException IfStatement BinaryOperation == MemberReference inputSource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "The input source must be LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator needsClosing Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation inputSource getSystemId IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation inputSource getPublicId = IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation inputSource toString = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing " MemberReference name debug IfStatement BinaryOperation != MethodInvocation inputSource getByteStream Literal null BlockStatement StatementExpression Assignment MemberReference is MethodInvocation inputSource getByteStream = IfStatement BinaryOperation != MethodInvocation inputSource getSystemId Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassCreator ReferenceType URL MethodInvocation inputSource getSystemId IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing URL " MemberReference url debug StatementExpression Assignment MemberReference is MethodInvocation url openStream = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference is ClassCreator ReferenceType BufferedInputStream MemberReference is = StatementExpression Assignment MemberReference needsClosing Literal true = CatchClause CatchClauseParameter MalformedURLException e CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation == MemberReference is Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation inputSource getPublicId IfStatement BinaryOperation == MemberReference id Literal null BlockStatement StatementExpression Assignment MemberReference id MethodInvocation inputSource getSystemId = IfStatement BinaryOperation != MemberReference id Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ix MethodInvocation id Literal '/' lastIndexOf IfStatement BinaryOperation != MemberReference ix Literal - 1 BlockStatement StatementExpression Assignment MemberReference id MethodInvocation id BinaryOperation + MemberReference ix Literal 1 substring = LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation MemberReference modelImpl MethodInvocation URI MemberReference id createURI MemberReference getResource TryStatement StatementExpression MethodInvocation modelImpl MethodInvocation getModelEventPump StatementExpression MethodInvocation r StatementExpression MethodInvocation r MemberReference is Literal null load IfStatement MethodInvocation MemberReference r BlockStatement ThrowStatement ClassCreator ReferenceType UmlException Literal to load file" CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e StatementExpression MethodInvocation modelImpl MethodInvocation getModelEventPump IfStatement MemberReference needsClosing BlockStatement TryStatement StatementExpression MethodInvocation is close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e StatementExpression Assignment MemberReference resource MemberReference r = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal resource " MemberReference resource Literal " with " MethodInvocation resource MethodInvocation size getContents Literal " debug ReturnStatement MethodInvocation r getContents	1
MethodDeclaration Modifier public static FormalParameter ReferenceType ProfileConfiguration pc StatementExpression MethodInvocation MethodInvocation MemberReference pc getManager	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType w IfStatement BinaryOperation instanceof MemberReference w ReferenceType BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator SuperMethodInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference me isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference me LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference sv getContainer getFacade Literal null BlockStatement StatementExpression Assignment MemberReference count MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getContainer getFacade MethodInvocation size getFacade = StatementExpression Assignment MemberReference BinaryOperation + Literal "S" BinaryOperation + MemberReference count Literal 1 = StatementExpression Cast ReferenceType MemberReference w StatementExpression Cast ReferenceType MemberReference w	0
MethodDeclaration Modifier public Annotation Override BasicType boolean add FormalParameter ReferenceType item StatementExpression SuperMethodInvocation MemberReference item add StatementExpression MemberReference ++ ReturnStatement Literal true	1
MethodDeclaration Modifier public synchronized readModels FormalParameter ReferenceType URL url FormalParameter ReferenceType xmiExtensionParser OpenException StatementExpression MethodInvocation LOG Literal info StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference url info TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source ClassCreator ReferenceType InputSource ClassCreator ReferenceType XmiInputStream MethodInvocation url openStream MemberReference xmiExtensionParser Literal 100000 Literal null StatementExpression MethodInvocation source MethodInvocation url toString setSystemId StatementExpression MethodInvocation MemberReference source readModels CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType OpenException MemberReference ex	1
MethodDeclaration Modifier public FormalParameter ReferenceType Enumeration TypeArgument ReferenceType T iter WhileStatement MethodInvocation iter hasMoreElements BlockStatement StatementExpression MethodInvocation MethodInvocation iter nextElement add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object dependency StatementExpression SuperMethodInvocation MemberReference handle MemberReference dependency StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public BasicType boolean isAAttribute FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Property BinaryOperation != Cast ReferenceType Property MemberReference handle Literal null	1
MethodDeclaration Modifier private FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference StatementExpression MethodInvocation Runtime MethodInvocation gc getRuntime StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object dependency IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType ModelElement BinaryOperation instanceof MemberReference dependency ReferenceType Dependency BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference dependency ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " or " MemberReference dependency	0
MethodDeclaration FormalParameter ReferenceType ArgoDiagram diagram IfStatement MethodInvocation ! MemberReference diagram contains BlockStatement StatementExpression MethodInvocation MemberReference diagram add	0
MethodDeclaration BasicType boolean invoke FormalParameter ReferenceType Object element FormalParameter ReferenceType String FormalParameter ReferenceType String value IfStatement MethodInvocation ! name MemberReference equalsIgnoreCase BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation op MemberReference element MemberReference value found ReturnStatement Literal true	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation MethodInvocation Integer MemberReference parseInt	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Object expr IfStatement BinaryOperation == MemberReference expr Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation Model MethodInvocation MemberReference expr getBody MethodInvocation toString getFacade	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference actions MethodInvocation ShortcutMgr = StatementExpression MethodInvocation table ClassCreator ReferenceType setModel	0
MethodDeclaration Modifier public addNodeRelatedEdges FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node addNodeRelatedEdges IfStatement MethodInvocation Model MethodInvocation MemberReference node isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference node getFacade StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference node getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dep MethodInvocation iter next IfStatement MethodInvocation MemberReference dep canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference dep addEdge	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType deploymentDiagram LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation deploymentDiagram MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigLink BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigLink VariableDeclarator figLink Cast ReferenceType FigLink MemberReference obj IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator link MethodInvocation figLink getOwner LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference link getConnections getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference ends Literal null BinaryOperation > MethodInvocation ends size Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MemberReference ends BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator instance MethodInvocation Model MethodInvocation MemberReference end getInstance getFacade IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference instance isAComponentInstance getFacade MethodInvocation Model MethodInvocation MemberReference instance isANodeInstance getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference instance getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression Assignment MemberReference count BinaryOperation + MemberReference count Literal 2 = LocalVariableDeclaration ReferenceType Object VariableDeclarator component MethodInvocation Model MethodInvocation MemberReference instance getFacade IfStatement BinaryOperation != MemberReference component Literal null BlockStatement StatementExpression Assignment MemberReference count BinaryOperation + MemberReference count Literal 1 = IfStatement BinaryOperation == MemberReference count Literal 3 BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference deploymentDiagram add StatementExpression MethodInvocation offs MemberReference figLink add StatementExpression MethodInvocation offs MethodInvocation figLink getSourcePortFig add StatementExpression MethodInvocation offs MethodInvocation figLink getDestPortFig add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation getConcurrencyKind IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrencyKind = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference kind getCoreHelper	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation StatementExpression SuperMethodInvocation MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation Notation MethodInvocation MethodInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference isAState getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 MemberReference This MemberReference getInstance =	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner Literal "remove"	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal "This is not a class"	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e StatementExpression Assignment MemberReference MethodInvocation MethodInvocation trim MethodInvocation e getText decode =	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ReferenceType String IfStatement MethodInvocation BlockStatement ReturnStatement BinaryOperation + Literal " MemberReference label BlockStatement ReturnStatement BinaryOperation + Literal "Can't " MemberReference label	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation IfStatement BinaryOperation instanceof MemberReference t ReferenceType ArgoDiagram BlockStatement ReturnStatement Cast ReferenceType ArgoDiagram MemberReference t ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isASubmachineState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State Cast ReferenceType State MemberReference handle	0
MethodDeclaration Modifier public synchronized run LocalVariableDeclaration BasicType int VariableDeclarator work MethodInvocation progress ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference work MemberReference ++ i BlockStatement StatementExpression MethodInvocation progress MemberReference i setValue StatementExpression MethodInvocation repaint TryStatement StatementExpression MethodInvocation Literal 10 wait CatchClause CatchClauseParameter InterruptedException ex StatementExpression MethodInvocation BinaryOperation + MemberReference Literal StatementExpression MethodInvocation repaint TryStatement StatementExpression MethodInvocation Literal 1000 wait CatchClause CatchClauseParameter InterruptedException ex StatementExpression MethodInvocation progress Literal 0 setValue StatementExpression MethodInvocation Literal "" StatementExpression MethodInvocation repaint	1
MethodDeclaration Modifier public static FormalParameter ReferenceType String location ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator loc Cast ReferenceType String MethodInvocation iter next IfStatement MethodInvocation loc MemberReference location equals BlockStatement StatementExpression MethodInvocation MemberReference loc remove BreakStatement	0
MethodDeclaration Modifier public clear StatementExpression MethodInvocation map clear	0
MethodDeclaration Modifier public BasicType boolean add FormalParameter ReferenceType Object obj LocalVariableDeclaration BasicType boolean VariableDeclarator status MethodInvocation MemberReference obj add LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference obj indexOf StatementExpression MethodInvocation This MemberReference index MemberReference index fireIntervalAdded ReturnStatement MemberReference status	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean isVisible StatementExpression MethodInvocation MemberReference MemberReference isVisible	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference showem = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier protected ReferenceType Context getContext ReturnStatement MemberReference context	0
MethodDeclaration Modifier public FormalParameter ReferenceType container StatementExpression MethodInvocation MemberReference container	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setLineColor StatementExpression MethodInvocation MethodInvocation Literal null setLineColor StatementExpression MethodInvocation MethodInvocation MemberReference col setLineColor getNameFig StatementExpression MethodInvocation body MemberReference col setLineColor IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal 0 StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference FigText getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference Literal 90 MemberReference height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference Literal 90 MemberReference height setBounds StatementExpression Assignment MemberReference ClassCreator ReferenceType FigPoly MemberReference MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 75 Literal 75 Literal 77 Literal 75 Literal 73 Literal 75 LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 33 Literal 24 Literal 24 Literal 15 Literal 24 Literal 24 LocalVariableDeclaration ReferenceType VariableDeclarator polygon ClassCreator ReferenceType MemberReference MemberReference Literal 6 StatementExpression MethodInvocation MemberReference polygon StatementExpression MethodInvocation Literal 100 Literal 10 Literal 5 Literal 18 setBounds StatementExpression MethodInvocation MethodInvocation Literal false setFilled StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference showPath	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String lang FormalParameter ReferenceType String body ReturnStatement MethodInvocation Model MethodInvocation MemberReference lang MemberReference body	0
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator ClassCreator ReferenceType ArgoJMenu Literal StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation getOwner StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation getOwner StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation getOwner StatementExpression MethodInvocation ClassCreator ReferenceType MethodInvocation getOwner ReturnStatement MemberReference	0
MethodDeclaration Modifier private FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "const declaration contains illegal modifiers" ReportError LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType StatementExpression MethodInvocation typeStack MemberReference Constants MethodInvocation MemberReference node add peek IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node type MethodInvocation parseType = LocalVariableDeclaration BasicType boolean VariableDeclarator hasEqual Literal false StatementExpression MethodInvocation node.names MethodInvocation parseQualifiedIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasEqual Literal true = WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation node.names MethodInvocation parseQualifiedIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasEqual Literal true = BlockStatement StatementExpression Assignment MemberReference hasEqual Literal false = IfStatement MemberReference hasEqual BlockStatement StatementExpression Assignment MemberReference node Value MethodInvocation = StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object me IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference me isAClass getFacade MethodInvocation Model MethodInvocation MemberReference me isAInterface getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation MethodInvocation MemberReference me MethodInvocation toString getInstance ReturnStatement MethodInvocation className trim LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference me getName getFacade ReturnStatement TernaryExpression BinaryOperation != MemberReference meName Literal null MemberReference meName Literal ""	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Feature FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator features Cast ReferenceType Classifier MemberReference handle LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator f MemberReference features BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference f ReferenceType Operation BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression MethodInvocation result MemberReference f add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public final RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType List VariableDeclarator declSpecs ClassCreator ReferenceType ArrayList BlockStatement DoStatement Literal true BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline LITERAL__inline LITERAL___inline BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase LITERAL__inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__inline match BreakStatement SwitchStatementCase LITERAL___inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___inline match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation declSpecs Literal "inline" add BreakStatement SwitchStatementCase LITERAL_virtual BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_virtual match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation declSpecs Literal add BreakStatement SwitchStatementCase BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference declSpecs	1
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference ClassCreator ReferenceType Literal 0 Literal 0 Literal 0 Literal 0 = StatementExpression Assignment MemberReference regionCompartment ClassCreator ReferenceType Literal 0 Literal 0 Literal 0 Literal 0 = StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference regionCompartment addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration FormalParameter ReferenceType StatementExpression Assignment MemberReference renderer MemberReference =	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference BOTTOM BinaryOperation == MemberReference index MemberReference LEFT BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType ToDoItem theItems IfStatement BinaryOperation > MethodInvocation theItems size Literal 0 BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList LocalVariableDeclaration ReferenceType VariableDeclarator e Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType ToDoListListener BlockStatement IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType MemberReference theItems = StatementExpression Cast ReferenceType ToDoListListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType DiagramSettings getSettings IfStatement BinaryOperation == MemberReference settings Literal null BlockStatement StatementExpression MethodInvocation LOG Literal back to settings" debug LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation != MemberReference p Literal null BlockStatement ReturnStatement MethodInvocation p MethodInvocation getDefaultDiagramSettings getProjectSettings ReturnStatement MemberReference settings	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Element MemberReference handle IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator c MethodInvocation ns BlockStatement IfStatement MethodInvocation c MethodInvocation MemberReference handle contains BlockStatement StatementExpression MethodInvocation result MemberReference c add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType int StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MemberReference width debug ReturnStatement MemberReference width	1
MethodDeclaration Modifier private StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Translator Literal localize Literal " (" MethodInvocation size Literal ")" setText	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter BasicType int i StatementExpression Assignment MemberReference MemberReference i =	0
MethodDeclaration Modifier public final cast_expression RecognitionException TokenStreamException LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched402 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LPAREN MethodInvocation MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched402 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_const LITERAL_const_cast LITERAL_volatile BlockStatement StatementExpression MethodInvocation type_qualifier BreakStatement SwitchStatementCase ID LITERAL__declspec LITERAL___declspec LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation simple_type_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall STAR AMPERSAND SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation ptr_operator BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched402 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched402 BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_const LITERAL_const_cast LITERAL_volatile BlockStatement StatementExpression MethodInvocation type_qualifier BreakStatement SwitchStatementCase ID LITERAL__declspec LITERAL___declspec LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation simple_type_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall STAR AMPERSAND SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation ptr_operator BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation cast_expression IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_43 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation unary_expression BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier final protected mLongSuffix FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase Literal 'l' BlockStatement StatementExpression MethodInvocation Literal 'l' match BreakStatement SwitchStatementCase Literal 'L' BlockStatement StatementExpression MethodInvocation Literal 'L' match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltForCharException Cast BasicType char MethodInvocation Literal 1 LA MethodInvocation getFilename MethodInvocation getLine MethodInvocation getColumn IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object o ReturnStatement BinaryOperation == MethodInvocation map MemberReference o remove Literal null	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator argument MethodInvocation Model MethodInvocation createArgument getCommonBehaviorFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference argument getCommonBehaviorHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference argument getInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType ev TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filter MethodInvocation ev MethodInvocation Literal 0 MethodInvocation ev MethodInvocation getLength getDocument getText getDocument IfStatement MemberReference keyTyped BlockStatement StatementExpression Cast ReferenceType UMLComboBoxModel MethodInvocation getModel StatementExpression Assignment MemberReference keyTyped Literal false = CatchClause CatchClauseParameter BadLocationException e	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation MemberReference name MemberReference version	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement MethodInvocation isEmpty	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Collection state IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation < MethodInvocation state size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Collection of states must have at least one LocalVariableDeclaration ReferenceType VariableDeclarator c MethodInvocation StatementExpression MethodInvocation c Cast ReferenceType Classifier MemberReference classifier StatementExpression MethodInvocation c MethodInvocation MemberReference state addAll StatementExpression MethodInvocation c Cast ReferenceType Classifier MemberReference classifier setNamespace StatementExpression MethodInvocation c BinaryOperation + BinaryOperation + BinaryOperation + Cast ReferenceType Classifier MemberReference classifier Literal Cast ReferenceType State MethodInvocation state MethodInvocation next iterator Literal "]" setName ReturnStatement MemberReference c	1
MethodDeclaration Modifier public BasicType int getRowCount IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement Literal 0 TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference target getFacade ReturnStatement BinaryOperation + MethodInvocation size Literal 1 CatchClause CatchClauseParameter InvalidElementException e ReturnStatement Literal 0	0
MethodDeclaration Modifier private final updateText FormalParameter ReferenceType String textValue TryStatement IfStatement BinaryOperation == MemberReference textValue Literal null BlockStatement StatementExpression Assignment MemberReference textValue Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator currentValue MethodInvocation Literal 0 MethodInvocation getLength getText IfStatement BinaryOperation && MethodInvocation isFiring MethodInvocation ! textValue MemberReference currentValue equals BlockStatement StatementExpression MethodInvocation Literal false setFiring StatementExpression SuperMethodInvocation Literal 0 MethodInvocation getLength remove StatementExpression SuperMethodInvocation Literal 0 MemberReference textValue Literal null insertString CatchClause CatchClauseParameter BadLocationException b StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "A BadLocationException Literal "The string to set was: " MethodInvocation getProperty MemberReference b error StatementExpression MethodInvocation Literal true setFiring	1
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean isFilled ReturnStatement MethodInvocation MethodInvocation isFilled	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator left MemberReference val StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation node LocalVariableDeclaration ReferenceType Object VariableDeclarator right MemberReference val StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference left Literal null BinaryOperation != MemberReference op Literal null BinaryOperation != MemberReference right Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation - MethodInvocation MemberReference left MemberReference node MethodInvocation MemberReference right MemberReference node = IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation + MethodInvocation MemberReference left MemberReference node MethodInvocation MemberReference right MemberReference node = BlockStatement StatementExpression MethodInvocation MemberReference node error BlockStatement StatementExpression MethodInvocation MemberReference node error StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier public setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType String arg StatementExpression MethodInvocation impl MemberReference handle MemberReference arg setMultiplicity	0
MethodDeclaration Modifier public final RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator qid Literal "" StatementExpression MethodInvocation MemberReference LITERAL_using match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_namespace BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_namespace match StatementExpression Assignment MemberReference qid MethodInvocation qualified_id = BreakStatement SwitchStatementCase ID OPERATOR LITERAL_this LITERAL_true LITERAL_false SCOPE BlockStatement StatementExpression Assignment MemberReference qid MethodInvocation qualified_id = BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match	1
MethodDeclaration Modifier public ReferenceType Object getAssociation ReturnStatement ClassReference ReferenceType UmlAssociation	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceModelElement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator destModelElement Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade IfStatement BinaryOperation < MethodInvocation conns size Literal 2 BlockStatement StatementExpression MethodInvocation LOG Literal rejected. have at least 2 error ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation conns iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference associationEnd0 Literal null BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation LOG Literal rejected. An end is null" error ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference associationEnd0 getType getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference getType getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getAssociation getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getType getFacade = IfStatement BinaryOperation || BinaryOperation == MemberReference sourceModelElement Literal null BinaryOperation == MemberReference destModelElement Literal null BlockStatement StatementExpression MethodInvocation LOG Literal end rejected. An end is null" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceModelElement containsEdge MethodInvocation ! MemberReference sourceModelElement containsNode BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal end rejected. The source model element (" MethodInvocation sourceModelElement MethodInvocation getName getClass Literal ") must be on the error ReturnStatement Literal false IfStatement MethodInvocation ! MemberReference destModelElement containsNode BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal end rejected. " Literal "The destination model element must be " Literal the error ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getGeneral getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference edge getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference clients Literal null BinaryOperation == MemberReference suppliers Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation clients MethodInvocation next iterator = StatementExpression Assignment MemberReference destModelElement MethodInvocation suppliers MethodInvocation next iterator = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isALink getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator roles MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade IfStatement BinaryOperation < MethodInvocation roles size Literal 2 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation roles iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference getInstance getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference getInstance getFacade = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference sourceModelElement Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference destModelElement Cast ReferenceType CommentEdge MemberReference edge = IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator sources MethodInvocation Model MethodInvocation MemberReference edge getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation Model MethodInvocation MemberReference edge getTargets getFacade IfStatement BinaryOperation && BinaryOperation == MethodInvocation sources size Literal 1 BinaryOperation == MethodInvocation targets size Literal 1 BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation sources MethodInvocation next iterator = StatementExpression Assignment MemberReference destModelElement MethodInvocation targets MethodInvocation next iterator = BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. than one source or target for a error ReturnStatement Literal false BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference sourceModelElement Literal null BinaryOperation == MemberReference destModelElement Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. Its ends are not attached to anything" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceModelElement containsNode MethodInvocation ! MemberReference sourceModelElement containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its source end is attached to " MemberReference sourceModelElement Literal " but this is not in the model" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference destModelElement containsNode MethodInvocation ! MemberReference destModelElement containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its destination end is attached to " MemberReference destModelElement Literal " but this is not in the model" error ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType ListSet TypeArgument ReferenceType LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType VariableDeclarator all MemberReference IfStatement BinaryOperation == MemberReference all Literal null BlockStatement StatementExpression Assignment MemberReference all ClassCreator ReferenceType ListSet TypeArgument ReferenceType = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement StatementExpression MethodInvocation all MethodInvocation item add StatementExpression Assignment MemberReference MemberReference all = ReturnStatement MemberReference all	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator ClassCreator ReferenceType StringBuilder Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference getFacade BlockStatement StatementExpression MethodInvocation Literal " append StatementExpression MethodInvocation MethodInvocation NotationUtilityUml MethodInvocation Model MethodInvocation MemberReference getFacade append StatementExpression MethodInvocation Literal " append ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType PropertyChangeEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType subList FormalParameter BasicType int arg0 FormalParameter BasicType int arg1 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType File getFileList FormalParameter ReferenceType File fileArray LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator files ClassCreator ReferenceType ArrayList TypeArgument ReferenceType File ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fileArray length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MemberReference ArraySelector MemberReference i fileArray StatementExpression MethodInvocation files MethodInvocation MemberReference file addAll ReturnStatement MemberReference files	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object m IfStatement BinaryOperation != MemberReference m Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression ReturnStatement Literal ""	1
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType e LocalVariableDeclaration Modifier final BasicType int VariableDeclarator index MethodInvocation MethodInvocation getSelectedIndex StatementExpression MethodInvocation BinaryOperation && BinaryOperation > MemberReference index Literal - 1 BinaryOperation < MemberReference index BinaryOperation - MethodInvocation MethodInvocation getSize getModel Literal 1 setEnabled	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public static ReferenceType JFrame getInstance LocalVariableDeclaration ReferenceType VariableDeclarator frame MethodInvocation getFrame IfStatement BinaryOperation instanceof MemberReference frame ReferenceType JFrame BlockStatement ReturnStatement Cast ReferenceType JFrame MemberReference frame ReturnStatement Literal null	1
MethodDeclaration Modifier private FormalParameter ReferenceType FigEdge edge FormalParameter ReferenceType FigNode dest StatementExpression MethodInvocation edge MemberReference dest setDestPortFig StatementExpression MethodInvocation edge MemberReference dest setDestFigNode	0
MethodDeclaration Modifier static protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public static BasicType boolean getBoolean FormalParameter ReferenceType ExpressionContext context FormalParameter ReferenceType String varName LocalVariableDeclaration ReferenceType String VariableDeclarator stringValue MethodInvocation MemberReference context MemberReference varName getString IfStatement BinaryOperation != MemberReference stringValue Literal null BlockStatement IfStatement BinaryOperation || MethodInvocation stringValue Literal "0" equals MethodInvocation stringValue Literal "" equals BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated FormalParameter ReferenceType Object owner IfStatement BinaryOperation != MemberReference owner MethodInvocation getOwner BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Owner must be set in constructor and left unchanged"	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType List VariableDeclarator classes ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation == MemberReference activeDiagram Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation activeDiagram getNamespace IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement WhileStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = LocalVariableDeclaration ReferenceType Collection VariableDeclarator elems MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference elems BlockStatement IfStatement MethodInvocation MemberReference cls BlockStatement StatementExpression MethodInvocation classes MemberReference cls add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference classes Literal true StatementExpression MethodInvocation Literal true setVisible	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation MethodInvocation MemberReference language MemberReference body StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference parent ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference handle getGeneralizations WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MethodInvocation it next IfStatement BinaryOperation == MethodInvocation gen getParent MemberReference parent BlockStatement ReturnStatement MemberReference gen ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean isAException FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	1
MethodDeclaration Modifier private ReferenceType findPanelFor FormalParameter ReferenceType Object trgt LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference trgt IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Factory created " MethodInvocation MethodInvocation getName getClass Literal " for " MethodInvocation trgt MethodInvocation getName getClass debug StatementExpression MethodInvocation MethodInvocation trgt getClass MemberReference put ReturnStatement MemberReference StatementExpression MethodInvocation LOG BinaryOperation + Literal "Failed to create a prop for : " MemberReference trgt error ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ToString ReturnStatement MethodInvocation String This MemberReference id valueOf	1
MethodDeclaration Modifier private static FormalParameter ReferenceType String string ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + Literal " MemberReference string Literal " isn't	1
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String FormalParameter ReferenceType File file FormalParameter ReferenceType String extension IOException MalformedURLException LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis ClassCreator ReferenceType ZipInputStream MethodInvocation MethodInvocation openStream MemberReference file toURL LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zis getNextEntry WhileStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation entry getName IfStatement BinaryOperation || BinaryOperation == MemberReference extension Literal null MethodInvocation name MemberReference extension endsWith BlockStatement StatementExpression MethodInvocation result MemberReference name add StatementExpression Assignment MemberReference entry MethodInvocation zis getNextEntry = StatementExpression MethodInvocation zis close ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation || BinaryOperation == MethodInvocation MemberReference getValue Literal null BinaryOperation == MethodInvocation MemberReference getValue Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance StatementExpression MethodInvocation Model MethodInvocation MemberReference target getStateMachinesFactory BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MemberReference getValue MethodInvocation MemberReference getValue getStateMachinesFactory	0
MethodDeclaration Modifier public register FormalParameter ReferenceType SuffixFilter f StatementExpression MethodInvocation MemberReference f add	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter BasicType int x LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" SwitchStatement MemberReference x SwitchStatementCase MemberReference TokenID StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Byte StatementExpression Assignment MemberReference s Literal "Base" = BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Decimal StatementExpression Assignment MemberReference s Literal "Decimal" = BreakStatement SwitchStatementCase MemberReference TokenID Double StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Float StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Int StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Long StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Object StatementExpression Assignment MemberReference s Literal "Base" = BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Short StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID String StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID UInt StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID ULong StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Void StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID This StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID Base StatementExpression Assignment MemberReference s Literal "Base" = BreakStatement SwitchStatementCase MemberReference TokenID If StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression Assignment MemberReference s Literal = BreakStatement SwitchStatementCase ReturnStatement Literal "" ReturnStatement MethodInvocation s toLowerCase	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter ReferenceType String text FormalParameter ReferenceType String name FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object trans ReturnStatement MethodInvocation Model MethodInvocation MemberReference text MemberReference ns getStateMachinesFactory	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType DiagramSettings settings FormalParameter Modifier final BasicType int StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference settings Literal 0 Literal 5 BinaryOperation - Literal 180 MemberReference Literal 5 = StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference settings Literal 100 Literal - 5 MemberReference Literal 5 =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String id FormalParameter ReferenceType String indent IfStatement BinaryOperation == MemberReference MemberReference SECT_NONE ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference indent Literal "// section " MemberReference id Literal " end" MemberReference LINE_SEPARATOR IfStatement BinaryOperation != MemberReference MemberReference SECT_BRIEF BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference indent Literal "// don't delete the previous line as " += StatementExpression Assignment MemberReference s Literal needed to source code of this " += StatementExpression Assignment MemberReference s BinaryOperation + Literal MemberReference LINE_SEPARATOR += ReturnStatement MemberReference s	1
MethodDeclaration Modifier protected ReferenceType JLabel FormalParameter ReferenceType String key ReturnStatement ClassCreator ReferenceType JLabel MethodInvocation Translator MemberReference key localize	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MethodInvocation getFacade addAll ReturnStatement MemberReference list	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object theTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator t TernaryExpression BinaryOperation instanceof MemberReference theTarget ReferenceType Fig Cast ReferenceType Fig MemberReference theTarget MemberReference theTarget StatementExpression Assignment MemberReference shouldBeEnabled MethodInvocation Model MethodInvocation MemberReference t isAUMLElement getFacade = ReturnStatement MemberReference shouldBeEnabled	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType String getReference ReturnStatement MemberReference reference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier public ReferenceType Object getElement ReturnStatement ClassReference ReferenceType Element	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement BinaryOperation && SuperMethodInvocation MethodInvocation Model getFacade	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation Target MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append StatementExpression MethodInvocation Statements MemberReference sb ToSource	1
MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType String key FormalParameter ReferenceType Object value StatementExpression MethodInvocation MemberReference key MemberReference value	0
MethodDeclaration Modifier public addAction FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object action IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement StatementExpression Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier final protected FormalParameter BasicType int iMinWidth IfStatement MethodInvocation ! This MethodInvocation getClass MethodInvocation toString containsKey BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbHeadLine ClassCreator ReferenceType StringBuffer Literal "| " StatementExpression MethodInvocation sbHeadLine BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getName Literal " " MethodInvocation MemberReference ModuleInterface Literal " |" append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbCopyLine ClassCreator ReferenceType StringBuffer Literal "| " StatementExpression MethodInvocation sbCopyLine BinaryOperation + MethodInvocation MemberReference ModuleInterface Literal " |" append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbDescLine ClassCreator ReferenceType StringBuffer Literal "| " StatementExpression MethodInvocation sbDescLine BinaryOperation + MethodInvocation MemberReference ModuleInterface Literal " |" append IfStatement BinaryOperation > MethodInvocation sbHeadLine length MemberReference iMinWidth BlockStatement StatementExpression Assignment MemberReference iMinWidth MethodInvocation sbHeadLine length = IfStatement BinaryOperation > MethodInvocation sbCopyLine length MemberReference iMinWidth BlockStatement StatementExpression Assignment MemberReference iMinWidth MethodInvocation sbCopyLine length = IfStatement BinaryOperation > MethodInvocation sbDescLine length MemberReference iMinWidth BlockStatement StatementExpression Assignment MemberReference iMinWidth MethodInvocation sbDescLine length = LocalVariableDeclaration ReferenceType String VariableDeclarator sRulerLine Literal "+" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i BinaryOperation - MemberReference iMinWidth Literal 2 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sRulerLine Literal "-" += StatementExpression Assignment MemberReference sRulerLine Literal "+" += LocalVariableDeclaration ReferenceType String VariableDeclarator sEmptyLine Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference iMinWidth MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sEmptyLine Literal " " += WhileStatement BinaryOperation < MethodInvocation sbHeadLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbHeadLine BinaryOperation - MethodInvocation sbHeadLine length Literal 2 Literal " " insert IfStatement BinaryOperation < MethodInvocation sbHeadLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbHeadLine Literal 2 Literal " " insert WhileStatement BinaryOperation < MethodInvocation sbCopyLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbCopyLine BinaryOperation - MethodInvocation sbCopyLine length Literal 2 Literal " " insert WhileStatement BinaryOperation < MethodInvocation sbDescLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbDescLine BinaryOperation - MethodInvocation sbDescLine length Literal 2 Literal " " insert StatementExpression MethodInvocation LOG MemberReference sEmptyLine info StatementExpression MethodInvocation LOG MemberReference sRulerLine info StatementExpression MethodInvocation LOG MethodInvocation sbHeadLine toString info StatementExpression MethodInvocation LOG MemberReference sRulerLine info StatementExpression MethodInvocation LOG MethodInvocation sbCopyLine toString info StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "| " MethodInvocation sEmptyLine Literal 4 substring Literal " |" info StatementExpression MethodInvocation LOG MethodInvocation sbDescLine toString info StatementExpression MethodInvocation LOG MemberReference sRulerLine info StatementExpression MethodInvocation LOG MemberReference sEmptyLine info StatementExpression MethodInvocation This MethodInvocation getClass MethodInvocation toString Literal "true" put	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Parameter FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement ReturnStatement Cast ReferenceType Event MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator width MemberReference width LocalVariableDeclaration BasicType int VariableDeclarator height MemberReference height LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + BinaryOperation + MemberReference width MethodInvocation MethodInvocation getLeftMargin LocalVariableDeclaration Modifier final BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + MemberReference height MethodInvocation MethodInvocation StatementExpression Assignment MemberReference w MethodInvocation Math MemberReference w MemberReference max = ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference CharLiteral = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '\'' match BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '\\' MethodInvocation _tokenSet_3 MethodInvocation Literal 2 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 3 LA member BlockStatement StatementExpression MethodInvocation Literal false mEscape IfStatement BinaryOperation && BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member BinaryOperation == MethodInvocation Literal 2 LA Literal '\'' Literal true BlockStatement BlockStatement StatementExpression MethodInvocation MemberReference _tokenSet_5 match BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltForCharException Cast BasicType char MethodInvocation Literal 1 LA MethodInvocation getFilename MethodInvocation getLine MethodInvocation getColumn StatementExpression MethodInvocation Literal '\'' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference value ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Element MemberReference value Literal the element from the owner MemberReference value MemberReference handle execute	0
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration FormalParameter ReferenceType Object modelElement AssertStatement MethodInvocation MethodInvocation MemberReference modelElement isAClassifier getFacade BinaryOperation + BinaryOperation + Literal must be a its name is \"" MethodInvocation MethodInvocation MemberReference modelElement getName getFacade Literal	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType textArea StatementExpression MethodInvocation textArea Literal 2 setRows StatementExpression MethodInvocation textArea Literal true StatementExpression MethodInvocation textArea Literal true StatementExpression MethodInvocation textArea Literal false setEnabled StatementExpression MethodInvocation textArea MethodInvocation textArea getForeground LocalVariableDeclaration Modifier final ReferenceType Color VariableDeclarator MethodInvocation UIManager Literal getColor IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation textArea ClassCreator ReferenceType Color MethodInvocation setBackground	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base IfStatement BinaryOperation instanceof MemberReference object ReferenceType Stereotype BlockStatement ReturnStatement Literal false TryStatement IfStatement MethodInvocation MemberReference object MemberReference name MemberReference base BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference object getSupertypes MethodInvocation iterator getCoreHelper WhileStatement MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation MethodInvocation it next MemberReference name MemberReference base BlockStatement ReturnStatement Literal true CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal false	1
MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color c StatementExpression SuperMethodInvocation MemberReference c setLineColor LocalVariableDeclaration ReferenceType VariableDeclarator arrow MethodInvocation IfStatement BinaryOperation != MemberReference arrow Literal null BlockStatement StatementExpression MethodInvocation arrow MethodInvocation getLineColor setLineColor	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Association FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to IfStatement BinaryOperation || BinaryOperation == MemberReference from Literal null BinaryOperation == MemberReference to Literal null BlockStatement ReturnStatement MethodInvocation Collections IfStatement BinaryOperation || BinaryOperation instanceof MemberReference from ReferenceType Classifier BinaryOperation instanceof MemberReference to ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal and 'to' must be instances of LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Association VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Association ForStatement EnhancedForControl VariableDeclaration ReferenceType Association VariableDeclarator a Cast ReferenceType Classifier MemberReference from BlockStatement IfStatement Cast ReferenceType Classifier MemberReference to BlockStatement StatementExpression MethodInvocation result MemberReference a add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation messages	0
MethodDeclaration Modifier public Annotation Override IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation StatementExpression SuperMethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereo StatementExpression MethodInvocation MemberReference modelElement MethodInvocation Collections MemberReference stereo singleton	0
MethodDeclaration Modifier public FormalParameter BasicType int p StatementExpression Assignment MemberReference priority MemberReference p =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation me getSource IfStatement BinaryOperation || BinaryOperation != MethodInvocation me getClickCount Literal 2 BinaryOperation == MethodInvocation getSelectedValue Literal null BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation == MemberReference src MemberReference MethodInvocation BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation == MemberReference src MemberReference MethodInvocation BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object buildStereotype FormalParameter ReferenceType Object element FormalParameter ReferenceType String name FormalParameter ReferenceType Object model FormalParameter ReferenceType Collection models ReturnStatement Literal null	0
MethodDeclaration Modifier private ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference VALID_CONNECTIONS length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Class TypeArgument ? VariableDeclarator connection MemberReference ArraySelector MemberReference i ArraySelector Literal 0 VALID_CONNECTIONS LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Class TypeArgument ? VariableDeclarator validItems MethodInvocation validConnectionMap MemberReference connection get IfStatement BinaryOperation == MemberReference validItems Literal null BlockStatement StatementExpression Assignment MemberReference validItems ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Class TypeArgument ? = StatementExpression MethodInvocation validConnectionMap MemberReference connection MemberReference validItems put IfStatement BinaryOperation < MemberReference ArraySelector MemberReference i MemberReference length VALID_CONNECTIONS Literal 3 BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator modeElementPair ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression Assignment MemberReference ArraySelector Literal 1 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression MethodInvocation validItems MemberReference modeElementPair add BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator modeElementPair ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression Assignment MemberReference ArraySelector Literal 1 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 2 VALID_CONNECTIONS = StatementExpression MethodInvocation validItems MemberReference modeElementPair add IfStatement BinaryOperation < MemberReference ArraySelector MemberReference i MemberReference length VALID_CONNECTIONS Literal 4 BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator reversedModeElementPair ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 reversedModeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 2 VALID_CONNECTIONS = StatementExpression Assignment MemberReference ArraySelector Literal 1 reversedModeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression MethodInvocation validItems MemberReference reversedModeElementPair add	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference target Cast ReferenceType ToDoItem MemberReference t =	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference Literal MethodInvocation Literal = StatementExpression MethodInvocation MethodInvocation MemberReference MethodInvocation getInstance getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehaviors getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean isANode FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Node	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType Collection options StatementExpression Assignment This MemberReference options MemberReference options =	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Diagram diagram StatementExpression Cast ReferenceType ArgoDiagram MemberReference diagram StatementExpression SuperMethodInvocation MemberReference diagram	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator MemberReference dm LocalVariableDeclaration ReferenceType Collection VariableDeclarator sf MethodInvocation Model MethodInvocation MemberReference getFeatures getFacade IfStatement BinaryOperation == MemberReference sf Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation sf iterator MethodInvocation iter hasNext BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation iter next getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType InputSource inputSource SAXException StatementExpression MethodInvocation LOG Literal "Reading info StatementExpression MethodInvocation MemberReference inputSource parse	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference instructions	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement MethodInvocation settings toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point FormalParameter ReferenceType Point anotherPt ReturnStatement MethodInvocation MethodInvocation MemberReference anotherPt	0
MethodDeclaration Modifier public ReferenceType Collection getSupplierDependencies FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation Collections MethodInvocation MethodInvocation getCore MethodInvocation MethodInvocation Cast ReferenceType ModelElement MemberReference handle MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object v IfStatement MethodInvocation Model MethodInvocation MemberReference v getFacade BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Model MethodInvocation MemberReference v getBody getFacade = IfStatement Literal MethodInvocation MemberReference v equals "" BlockStatement StatementExpression Assignment MemberReference v Literal = IfStatement MethodInvocation Model MethodInvocation MemberReference v isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Model MethodInvocation MemberReference v getName getFacade = IfStatement Literal MethodInvocation MemberReference v equals "" BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Translator Literal localize = IfStatement BinaryOperation instanceof MemberReference v ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator acc Literal "[" LocalVariableDeclaration ReferenceType Collection VariableDeclarator collection Cast ReferenceType Collection MemberReference v ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference collection BlockStatement StatementExpression Assignment MemberReference acc BinaryOperation + MethodInvocation MemberReference object Literal "," += StatementExpression Assignment MemberReference acc Literal "]" += StatementExpression Assignment MemberReference v MemberReference acc = ReturnStatement BinaryOperation + Literal "" MemberReference v	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier protected IfStatement MemberReference ! BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds IfStatement MethodInvocation BlockStatement LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator minSize MethodInvocation StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference bbox x MethodInvocation getX BinaryOperation != MemberReference bbox y MethodInvocation getY BinaryOperation != MemberReference bbox width MethodInvocation getWidth BinaryOperation != MemberReference bbox height MethodInvocation getHeight BlockStatement StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String body IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation != MemberReference body Literal null BlockStatement StatementExpression Cast ReferenceType MemberReference handle	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation MemberReference f setFilled StatementExpression MethodInvocation MemberReference f setFilled	0
MethodDeclaration Modifier private FormalParameter ReferenceType FormalParameter ReferenceType Element LocalVariableDeclaration Modifier final ReferenceType NodeList VariableDeclarator MethodInvocation Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator Cast ReferenceType Element MethodInvocation MemberReference i item LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation MethodInvocation Literal "type" getNamedItem MethodInvocation getNodeValue getAttributes LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation MethodInvocation Literal "name" getNamedItem MethodInvocation getNodeValue getAttributes LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation metaTypeByName MemberReference get MemberReference StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType List ThrowStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator tab MethodInvocation getSelectedIndex IfStatement BinaryOperation != MemberReference tab Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation MemberReference tab IfStatement MethodInvocation ! MethodInvocation me getX MethodInvocation me getY contains BlockStatement ReturnStatement IfStatement BinaryOperation == MethodInvocation me getClickCount Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference tab StatementExpression MethodInvocation me consume IfStatement BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation MemberReference tab StatementExpression MethodInvocation me consume	0
MethodDeclaration Modifier public ReferenceType String getUmlVersion ReturnStatement Literal	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly FormalParameter ReferenceType Profile profile ClassifierNotFoundException LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference name lookupIn getFacade IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator classifier LocalVariableDeclaration ReferenceType String VariableDeclarator clazzName MemberReference name IfStatement MethodInvocation ! Model MethodInvocation MemberReference mPackage isAModel getFacade BlockStatement StatementExpression Assignment MemberReference clazzName BinaryOperation + BinaryOperation + MemberReference javaName Literal "." MemberReference name = StatementExpression Assignment MemberReference classifier MethodInvocation MemberReference clazzName MemberReference interfacesOnly findClass = IfStatement BinaryOperation != MemberReference classifier Literal null BlockStatement TryStatement IfStatement MethodInvocation classifier isInterface BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage getCoreFactory = BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage buildClass getCoreFactory = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference mClassifier Literal null = IfStatement BinaryOperation != MemberReference mClassifier Literal null BlockStatement StatementExpression MethodInvocation MemberReference mClassifier IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation getContext Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation MethodInvocation MemberReference name MemberReference interfacesOnly MemberReference profile get getContext = BlockStatement IfStatement BinaryOperation && MemberReference ! interfacesOnly BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation name Literal "int" equals MethodInvocation name Literal "long" equals MethodInvocation name Literal "short" equals MethodInvocation name Literal "byte" equals MethodInvocation name Literal "char" equals MethodInvocation name Literal "float" equals MethodInvocation name Literal "double" equals MethodInvocation name Literal "boolean" equals MethodInvocation name Literal "void" equals BinaryOperation != MethodInvocation name Literal "[]" indexOf Literal - 1 BlockStatement IfStatement BinaryOperation != MemberReference profile Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation profile MethodInvocation iterator MethodInvocation next StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference m MemberReference name lookupIn getFacade = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference mClassifier Literal null = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage getCoreFactory = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType ClassifierNotFoundException MemberReference name ReturnStatement MemberReference mClassifier	1
MethodDeclaration Modifier protected ReferenceType Object search FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference item LocalVariableDeclaration ReferenceType VariableDeclarator model MethodInvocation getModel ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation model getSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation model MemberReference i getElementAt IfStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement IfStatement BinaryOperation instanceof MethodInvocation ReferenceType UMLListCellRenderer2 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator labelText Cast ReferenceType UMLListCellRenderer2 MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference labelText Literal null MethodInvocation labelText MemberReference text startsWith BlockStatement ReturnStatement MemberReference element IfStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MemberReference element LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference elem getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name MemberReference text startsWith BlockStatement ReturnStatement MemberReference element ReturnStatement Literal null	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Dependency BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator rootModel MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference metaType MemberReference source Literal null MemberReference dest Literal null Literal null MemberReference rootModel getUmlFactory CatchClause CatchClauseParameter IllegalModelElementConnectionException e1 StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e1 error	0
MethodDeclaration Modifier public BasicType boolean isPublic FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier public FormalParameter ReferenceType IfStatement MethodInvocation MemberReference containsKey BlockStatement StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public BasicType int getLower FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lower Literal 0 LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation != MethodInvocation end getMultiplicity Literal null BlockStatement StatementExpression Assignment MemberReference lower MethodInvocation MethodInvocation end getMultiplicity getLower = ReturnStatement MemberReference lower IfStatement MethodInvocation MemberReference handle isAMultiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator low Cast ReferenceType Multiplicity MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator ranges ClassCreator ReferenceType ArrayList MethodInvocation low getRange ReturnStatement MethodInvocation MethodInvocation ranges Literal 0 get getLower IfStatement MethodInvocation MemberReference handle BlockStatement LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator low Cast ReferenceType MultiplicityRange MemberReference handle ReturnStatement MethodInvocation low getLower CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e StatementExpression MethodInvocation MemberReference handle ReturnStatement Literal 0	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Fig e StatementExpression Assignment This MemberReference encloser MemberReference e =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Rectangle LocalVariableDeclaration ReferenceType List VariableDeclarator regions MethodInvocation Model MethodInvocation MethodInvocation getOwner getStateMachinesHelper LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Rectangle VariableDeclarator rects ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Rectangle MethodInvocation regions size IfStatement MethodInvocation regions isEmpty BlockStatement StatementExpression MethodInvocation rects MethodInvocation regionCompartment getBounds add BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType DiagramElement VariableDeclarator f MethodInvocation regionCompartment getDiagramElements BlockStatement StatementExpression MethodInvocation rects Cast ReferenceType Fig MemberReference f add ReturnStatement MemberReference rects	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object m IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator event ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation Model MethodInvocation MemberReference m getFacade BlockStatement StatementExpression MethodInvocation event Literal append StatementExpression MethodInvocation event MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression append StatementExpression MethodInvocation event Literal ")" append IfStatement MethodInvocation Model MethodInvocation MemberReference m getFacade BlockStatement StatementExpression MethodInvocation event Literal append StatementExpression MethodInvocation event MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression append StatementExpression MethodInvocation event Literal ")" append IfStatement MethodInvocation Model MethodInvocation MemberReference m getFacade BlockStatement StatementExpression MethodInvocation event MethodInvocation Model MethodInvocation MemberReference m getName getFacade append IfStatement MethodInvocation Model MethodInvocation MemberReference m getFacade BlockStatement StatementExpression MethodInvocation event MethodInvocation Model MethodInvocation MemberReference m getName getFacade append StatementExpression MethodInvocation event MethodInvocation MemberReference m append ReturnStatement MethodInvocation event toString	1
MethodDeclaration Modifier public ReferenceType Object getContainer FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Vertex BlockStatement ReturnStatement Cast ReferenceType Vertex MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier protected updateLayout FormalParameter ReferenceType UmlChangeEvent event AssertStatement BinaryOperation != MemberReference event Literal null IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getOwner MethodInvocation event getSource BinaryOperation != MemberReference properties Literal null MethodInvocation Arrays MethodInvocation MethodInvocation event getPropertyName contains MemberReference properties asList BinaryOperation instanceof MemberReference event ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation setText	1
MethodDeclaration Modifier public ReferenceType List getMetaTypes ReturnStatement MemberReference metaTypes	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal from files" SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal - 231 SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String generateFiles FormalParameter ReferenceType Collection elements FormalParameter ReferenceType String path FormalParameter BasicType boolean deps StatementExpression MethodInvocation LOG Literal debug ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference elements BlockStatement StatementExpression MethodInvocation MemberReference element MemberReference path generateFile ReturnStatement MethodInvocation TempFileUtils ClassCreator ReferenceType File MemberReference path readFileNames	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getContext getFacade	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object ausecase IfStatement BinaryOperation instanceof MemberReference ausecase ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator Cast ReferenceType MemberReference ausecase BlockStatement StatementExpression MethodInvocation result MethodInvocation add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoList list StatementExpression MethodInvocation MemberReference list removeAll	0
MethodDeclaration Modifier public Annotation Override BasicType boolean doesAccept FormalParameter ReferenceType Object objectToAccept IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClassifierRole getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAMessage getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComment getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClassifier getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public BasicType boolean isAStereotype FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement MethodInvocation ns isEmpty	0
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation ce getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType MutableGraphModel BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator instructions Literal null LocalVariableDeclaration ReferenceType VariableDeclarator placeMode Literal null IfStatement BinaryOperation != MemberReference object Literal null BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation && BinaryOperation instanceof MemberReference activeDiagram ReferenceType UMLDiagram Cast ReferenceType UMLDiagram MemberReference activeDiagram BlockStatement StatementExpression Assignment MemberReference instructions Cast ReferenceType UMLDiagram MemberReference activeDiagram = StatementExpression Assignment MemberReference placeMode Cast ReferenceType UMLDiagram MemberReference activeDiagram = StatementExpression MethodInvocation placeMode Literal true BlockStatement StatementExpression Assignment MemberReference instructions MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference object toString getFacade localize = StatementExpression Assignment MemberReference placeMode ClassCreator ReferenceType This MemberReference instructions = StatementExpression MethodInvocation placeMode Literal true StatementExpression MethodInvocation Globals MemberReference instructions IfStatement BinaryOperation == MemberReference location Literal null BlockStatement StatementExpression MethodInvocation Globals MemberReference placeMode Literal false mode BlockStatement LocalVariableDeclaration ReferenceType Point VariableDeclarator p ClassCreator ReferenceType Point BinaryOperation + MemberReference location x BinaryOperation * MemberReference count Literal 100 MemberReference location y LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation ce MethodInvocation getJComponent StatementExpression MethodInvocation p MemberReference r x MemberReference r y translate LocalVariableDeclaration ReferenceType MouseEvent VariableDeclarator me ClassCreator ReferenceType MouseEvent MethodInvocation ce getJComponent Literal 0 Literal 0 Literal 0 MemberReference p x MemberReference p y Literal 0 Literal false StatementExpression MethodInvocation placeMode MemberReference me mousePressed StatementExpression Assignment MemberReference me ClassCreator ReferenceType MouseEvent MethodInvocation ce getJComponent Literal 0 Literal 0 Literal 0 MemberReference p x MemberReference p y Literal 0 Literal false = StatementExpression MethodInvocation placeMode MemberReference me mouseReleased LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation DiagramUtils getActiveDiagram LocalVariableDeclaration ReferenceType Fig VariableDeclarator aFig MethodInvocation diagram MemberReference object presentationFor StatementExpression MethodInvocation aFig MethodInvocation aFig getPreferredSize setSize	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle MemberReference parent getCoreHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType element StatementExpression Assignment This MemberReference MemberReference element =	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade	0
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType filter FormalParameter ReferenceType Object StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference removeNotificationListener	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class clazz FormalParameter ReferenceType StatementExpression MethodInvocation MemberReference clazz MemberReference put	0
MethodDeclaration Modifier public FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType MetalTheme VariableDeclarator theme MethodInvocation MemberReference IfStatement MethodInvocation theme MethodInvocation getName MethodInvocation MethodInvocation equals getClass BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference theme setTheme LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation Configuration MemberReference MemberReference setString	0
MethodDeclaration Modifier public dragEnter FormalParameter ReferenceType DropTargetDragEvent dtde TryStatement IfStatement MethodInvocation dtde MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation dtde MethodInvocation dtde getDropAction acceptDrag ReturnStatement CatchClause CatchClauseParameter NullPointerException e StatementExpression MethodInvocation dtde rejectDrag	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator action Cast ReferenceType Action MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation action LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference element IfStatement MethodInvocation ! MemberReference MemberReference equal BlockStatement StatementExpression MethodInvocation action MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Transition BinaryOperation || BinaryOperation == MemberReference element Literal null BinaryOperation instanceof MemberReference element ReferenceType StateVertex BlockStatement StatementExpression Cast ReferenceType Transition MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference element	0
MethodDeclaration Modifier private ReferenceType String ReturnStatement TernaryExpression BinaryOperation != MethodInvocation getOwner Literal null Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getOwner getBody getFacade Literal null	0
MethodDeclaration Modifier private static ReferenceType Collection TypeArgument ReferenceType Object FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Object allAppliedProfiles LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator profile MemberReference allAppliedProfiles BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference profile getStereotypes getExtensionMechanismsHelper BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference stereotype getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation ret MemberReference stereotype add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected ReferenceType FigNodeModelElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds FormalParameter Modifier final ReferenceType DiagramSettings settings LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator diamondFig ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationClass getFacade BinaryOperation != MemberReference bounds Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference MemberReference diamondFig MemberReference settings StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Point VariableDeclarator location MethodInvocation bounds getLocation StatementExpression Assignment MemberReference location y BinaryOperation - BinaryOperation - MemberReference location y MethodInvocation diamondFig getHeight Literal 32 = IfStatement BinaryOperation < MemberReference location y Literal 16 BlockStatement StatementExpression Assignment MemberReference location y Literal 16 = StatementExpression MethodInvocation MemberReference location setLocation StatementExpression This MethodInvocation MemberReference diamondFig add StatementExpression This MethodInvocation MemberReference add StatementExpression This MethodInvocation MemberReference add ReturnStatement MemberReference diamondFig	1
MethodDeclaration Modifier static FormalParameter ReferenceType Object FormalParameter BasicType boolean derived LocalVariableDeclaration ReferenceType String VariableDeclarator tagName MemberReference DERIVED_TAG LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference MemberReference tagName getTaggedValue getFacade IfStatement MemberReference derived BlockStatement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference tagName Literal "true" buildTaggedValue getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ArrayCreator ReferenceType String ArrayInitializer Literal "true" getExtensionMechanismsHelper BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override setDestFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference MethodInvocation fn getOwner = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation ! Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation fn getOwner = StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner StatementExpression SuperMethodInvocation MemberReference fn setDestFigNode	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Generalization MemberReference handle	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Fig ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation LOG BinaryOperation + Literal targetevent : " MemberReference e debug StatementExpression MethodInvocation MethodInvocation e	1
MethodDeclaration FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator enumeration MethodInvocation parseState getClassifier IfStatement MethodInvocation ! MemberReference enumeration isAEnumeration BlockStatement ThrowStatement ClassCreator ReferenceType Literal "not an LocalVariableDeclaration BasicType short VariableDeclarator MemberReference StatementExpression MethodInvocation MemberReference Literal null MemberReference name Literal null Literal null Literal true addAttribute	0
MethodDeclaration FormalParameter ReferenceType Project project FormalParameter ReferenceType OutputStream FormalParameter ReferenceType ProgressMgr progressMgr SaveException InterruptedException LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator outputStreamWriter TryStatement StatementExpression Assignment MemberReference outputStreamWriter ClassCreator ReferenceType OutputStreamWriter MemberReference MethodInvocation getEncoding = CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter MemberReference outputStreamWriter LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference MethodInvocation getEncoding TryStatement StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + Literal "<?xml version = " Literal = \"" MethodInvocation getEncoding Literal "\" println StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + Literal MemberReference PERSISTENCE_VERSION Literal "\">" println TryStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator templates MethodInvocation TemplateReader MethodInvocation MemberReference read getInstance LocalVariableDeclaration ReferenceType OCLExpander VariableDeclarator expander ClassCreator ReferenceType OCLExpander MemberReference templates StatementExpression MethodInvocation expander MemberReference writer MemberReference project Literal " " expand CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e StatementExpression MethodInvocation writer flush IfStatement BinaryOperation != MemberReference progressMgr Literal null BlockStatement StatementExpression MethodInvocation progressMgr nextPhase ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator projectMember MethodInvocation project getMembers BlockStatement IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Saving member : " MemberReference projectMember info LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister MethodInvocation MemberReference projectMember getMemberFilePersister StatementExpression MethodInvocation StatementExpression MethodInvocation persister MemberReference projectMember MemberReference save TryStatement StatementExpression MethodInvocation flush CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e StatementExpression MethodInvocation writer Literal println StatementExpression MethodInvocation writer flush StatementExpression MethodInvocation writer close TryStatement StatementExpression MethodInvocation CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference Literal Literal = LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference Literal StatementExpression MethodInvocation t start	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigDependency BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigDependency VariableDeclarator figDependency Cast ReferenceType FigDependency MemberReference obj IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dependency MethodInvocation figDependency getOwner LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference dependency getSuppliers getFacade LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 IfStatement BinaryOperation != MemberReference suppliers Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator moe MemberReference suppliers BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference moe isAObject getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator objSup MemberReference moe IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objSup getElementResidences getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference objSup getElementResidences MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference count Literal 2 += IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objSup getFacade Literal null BlockStatement StatementExpression MemberReference ++ count LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference dependency getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference clients Literal null BinaryOperation > MethodInvocation clients size Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator moe MemberReference clients BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference moe isAObject getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator objCli MemberReference moe IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objCli getElementResidences getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference objCli getElementResidences MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference count Literal 2 += IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objCli getFacade Literal null BlockStatement StatementExpression MemberReference ++ count IfStatement BinaryOperation == MemberReference count Literal 3 BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference figDependency add StatementExpression MethodInvocation offs MethodInvocation figDependency getSourcePortFig add StatementExpression MethodInvocation offs MethodInvocation figDependency getDestPortFig add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public BasicType boolean isAClassifierRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o getFacade MethodInvocation Model MethodInvocation MethodInvocation getConnections MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object sf IfStatement MethodInvocation MethodInvocation MemberReference sf isReadOnly getFacade BlockStatement ReturnStatement Literal "const " ReturnStatement Literal ""	0
MethodDeclaration Modifier public BasicType boolean isNavigable FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType Property MemberReference handle	0
MethodDeclaration Modifier private getChildren FormalParameter ReferenceType Collection TypeArgument ReferenceType GeneralizableElement FormalParameter ReferenceType Generalization gen FormalParameter ReferenceType Collection TypeArgument ReferenceType Generalization generalizations LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child MethodInvocation gen getChild IfStatement BinaryOperation && MethodInvocation MemberReference child contains MethodInvocation generalizations MemberReference gen contains BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal BlockStatement StatementExpression MethodInvocation MemberReference child add StatementExpression MethodInvocation generalizations MemberReference gen add LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference child getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator specialization MemberReference specializations BlockStatement StatementExpression MethodInvocation MemberReference MemberReference specialization MemberReference generalizations getChildren	0
MethodDeclaration Modifier private ReferenceType Action FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation MemberReference metaType getLabel ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal MemberReference metaType MemberReference label	0
MethodDeclaration Modifier public static ReferenceType ImageIcon FormalParameter ReferenceType String resource ReturnStatement MethodInvocation MemberReference resource	0
MethodDeclaration Modifier protected ReferenceType StringBuilder FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType StringBuilder varname FormalParameter BasicType boolean mayDeleteExpr IfStatement BinaryOperation == MemberReference varname Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator script MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getAction getFacade getScript getFacade IfStatement BinaryOperation && MemberReference ! mayDeleteExpr BinaryOperation != MemberReference script Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator body Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference script getBody getFacade LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation body Literal ":=" indexOf IfStatement BinaryOperation < MemberReference idx Literal 0 BlockStatement StatementExpression Assignment MemberReference idx MethodInvocation body Literal "=" indexOf = IfStatement BinaryOperation >= MemberReference idx Literal 0 BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder MethodInvocation body Literal 0 MemberReference idx substring = BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder = BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder = ReturnStatement MemberReference varname	1
MethodDeclaration Modifier public setNavigable FormalParameter ReferenceType Object handle FormalParameter BasicType boolean IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public addOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me StatementExpression MethodInvocation impl MemberReference handle MemberReference me addOwnedElement	0
MethodDeclaration Modifier protected Annotation SuppressWarnings Literal "unchecked" Annotation Override LocalVariableDeclaration ReferenceType Collection VariableDeclarator list ClassCreator ReferenceType ArrayList Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation StatementExpression MethodInvocation LOG BinaryOperation + Literal "The selected element is " MemberReference element info IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "The selected element is " MethodInvocation Model MethodInvocation MemberReference element getName getFacade info IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation list MemberReference element add StatementExpression MethodInvocation MemberReference list	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private ReferenceType ReturnStatement Cast ReferenceType MethodInvocation modelImpl getCommonBehaviorFactory	0
MethodDeclaration Modifier public modelChanged FormalParameter ReferenceType UmlChangeEvent evt StatementExpression Assignment MemberReference buildingModel Literal true = IfStatement BinaryOperation instanceof MemberReference evt ReferenceType AttributeChangeEvent BlockStatement IfStatement MethodInvocation evt MethodInvocation MemberReference equals getPropertyName BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation evt getSource MethodInvocation BinaryOperation || MemberReference BinaryOperation != MethodInvocation MemberReference evt getChangedElement Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation MemberReference evt getChangedElement IfStatement BinaryOperation && BinaryOperation != MemberReference elem Literal null MethodInvocation ! MemberReference elem contains BlockStatement StatementExpression MethodInvocation MemberReference elem addElement StatementExpression Assignment MemberReference buildingModel Literal false = StatementExpression MethodInvocation MemberReference elem setSelectedItem IfStatement BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference evt getChangedElement contains BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement StatementExpression MethodInvocation MemberReference o removeElement IfStatement BinaryOperation instanceof MemberReference evt ReferenceType AddAssociationEvent BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null MethodInvocation MemberReference evt isValidEvent BlockStatement IfStatement BinaryOperation && MethodInvocation evt MethodInvocation MemberReference equals getPropertyName BinaryOperation == MethodInvocation evt getSource MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation evt getNewValue StatementExpression MethodInvocation MemberReference elem setSelectedItem BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement StatementExpression MethodInvocation MemberReference o addElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference evt ReferenceType RemoveAssociationEvent MethodInvocation MemberReference evt isValidEvent BlockStatement IfStatement BinaryOperation && MethodInvocation evt MethodInvocation MemberReference equals getPropertyName BinaryOperation == MethodInvocation evt getSource MethodInvocation BlockStatement IfStatement BinaryOperation == MethodInvocation evt getOldValue MethodInvocation MethodInvocation getSelectedItem BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation evt getNewValue setSelectedItem BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement IfStatement MethodInvocation MemberReference o contains BlockStatement StatementExpression MethodInvocation MemberReference o removeElement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation evt getSource ReferenceType ArgoDiagram MethodInvocation evt MethodInvocation MemberReference equals getPropertyName BlockStatement StatementExpression MethodInvocation MethodInvocation evt getNewValue addElement StatementExpression Assignment MemberReference buildingModel Literal false = StatementExpression MethodInvocation MethodInvocation evt getNewValue setSelectedItem StatementExpression Assignment MemberReference buildingModel Literal false =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getClassifier getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType d ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement MethodInvocation c MemberReference d BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object element FormalParameter ReferenceType Object StatementExpression SuperMethodInvocation MemberReference element MemberReference StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration BasicType int VariableDeclarator sel MethodInvocation getSelectedIndex IfStatement BinaryOperation > MemberReference sel Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference sel get LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation BinaryOperation - MemberReference sel Literal 1 get StatementExpression MethodInvocation MemberReference sel MemberReference set StatementExpression MethodInvocation BinaryOperation - MemberReference sel Literal 1 MemberReference set StatementExpression MethodInvocation BinaryOperation - MemberReference sel Literal 1 setSelectedIndex StatementExpression MethodInvocation BinaryOperation - MemberReference sel Literal 1 ensureIndexIsVisible	0
MethodDeclaration Modifier public ReferenceType Object getStereotype ReturnStatement ClassReference ReferenceType Stereotype	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String FormalParameter ReferenceType String key FormalParameter ReferenceType String suffix ReturnStatement MethodInvocation Translator BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal "." MemberReference key MemberReference suffix localize	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cmd MethodInvocation e getActionCommand IfStatement BinaryOperation == MemberReference cmd Literal null BlockStatement StatementExpression Assignment MemberReference Literal - 1 = ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference i get IfStatement MethodInvocation s MemberReference cmd equals BlockStatement StatementExpression Assignment MemberReference MemberReference i = StatementExpression MethodInvocation MethodInvocation doAction StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Node FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Component BlockStatement ReturnStatement Cast ReferenceType Component MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public notifyMessage FormalParameter Modifier final ReferenceType String title FormalParameter Modifier final ReferenceType String FormalParameter Modifier final ReferenceType String message LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MemberReference Literal " : " MemberReference message StatementExpression MethodInvocation MemberReference setNote StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType MethodInvocation getFrame MemberReference title MemberReference MemberReference message StatementExpression MethodInvocation dialog Literal true setVisible invokeLater	1
MethodDeclaration Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1Choice Literal null BinaryOperation != MethodInvocation step1Choice getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator result Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Profile BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType Profile MemberReference handle = LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType VariableDeclarator iter Cast ReferenceType Profile MemberReference handle WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference p ReferenceType Profile BlockStatement StatementExpression MethodInvocation MemberReference p ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object port FormalParameter ReferenceType Fig f IfStatement BinaryOperation != MethodInvocation f getOwner MemberReference port BlockStatement StatementExpression MethodInvocation f MemberReference port	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color color StatementExpression MethodInvocation headFig MemberReference color setFillColor StatementExpression MethodInvocation MemberReference color setFillColor	0
MethodDeclaration Modifier public static FormalParameter ReferenceType predicate StatementExpression MethodInvocation MemberReference predicate add	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public BasicType int getColumn ReturnStatement MemberReference col	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator ownerPackageName VariableDeclarator currentName MemberReference name StatementExpression Assignment MemberReference ownerPackageName MethodInvocation MemberReference currentName getPackageName = WhileStatement Literal ! MethodInvocation MemberReference ownerPackageName equals "" BlockStatement StatementExpression Assignment MemberReference currentName MemberReference ownerPackageName = StatementExpression Assignment MemberReference ownerPackageName MethodInvocation MemberReference currentName getPackageName = LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage MethodInvocation MemberReference currentName Literal false getPackage IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference importSession Literal null BinaryOperation != MethodInvocation importSession Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference getTaggedValue getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MethodInvocation importSession StatementExpression MethodInvocation MemberReference mPackage MemberReference MemberReference buildTaggedValue StatementExpression Assignment MemberReference mPackage MethodInvocation MemberReference name Literal false getPackage = StatementExpression Assignment MemberReference currentPackage MemberReference mPackage = StatementExpression MethodInvocation parseState MemberReference mPackage LocalVariableDeclaration ReferenceType Object VariableDeclarator artifact MethodInvocation Model MethodInvocation MemberReference currentPackage MemberReference fileName lookupIn getFacade IfStatement BinaryOperation == MemberReference artifact Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation parseState MemberReference currentPackage setNamespace getCoreHelper BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldArtifact MethodInvocation parseState StatementExpression MethodInvocation Model MethodInvocation MemberReference oldArtifact delete getUmlFactory StatementExpression MethodInvocation newElements MemberReference oldArtifact remove StatementExpression MethodInvocation parseState MemberReference artifact	1
MethodDeclaration Modifier private BasicType boolean isMsgNumberStartOf FormalParameter ReferenceType String n1 FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator i VariableDeclarator j VariableDeclarator len VariableDeclarator jlen StatementExpression Assignment MemberReference len MethodInvocation n1 length = StatementExpression Assignment MemberReference jlen MethodInvocation length = StatementExpression Assignment MemberReference i Literal 0 = StatementExpression Assignment MemberReference j Literal 0 = ForStatement ForControl BinaryOperation < MemberReference i MemberReference len BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ibv VariableDeclarator isv LocalVariableDeclaration BasicType int VariableDeclarator jbv VariableDeclarator jsv StatementExpression Assignment MemberReference ibv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation n1 MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement BreakStatement StatementExpression Assignment MemberReference ibv Literal 10 *= StatementExpression Assignment MemberReference ibv BinaryOperation - MemberReference c Literal '0' += StatementExpression Assignment MemberReference isv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation n1 MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal 'a' BinaryOperation > MemberReference c Literal 'z' BlockStatement BreakStatement StatementExpression Assignment MemberReference isv Literal 26 *= StatementExpression Assignment MemberReference isv BinaryOperation - MemberReference c Literal 'a' += StatementExpression Assignment MemberReference jbv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference j MemberReference jlen MemberReference ++ j BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation MemberReference j charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement BreakStatement StatementExpression Assignment MemberReference jbv Literal 10 *= StatementExpression Assignment MemberReference jbv BinaryOperation - MemberReference c Literal '0' += StatementExpression Assignment MemberReference jsv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference j MemberReference jlen MemberReference ++ j BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation MemberReference j charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal 'a' BinaryOperation > MemberReference c Literal 'z' BlockStatement BreakStatement StatementExpression Assignment MemberReference jsv Literal 26 *= StatementExpression Assignment MemberReference jsv BinaryOperation - MemberReference c Literal 'a' += IfStatement BinaryOperation || BinaryOperation != MemberReference ibv MemberReference jbv BinaryOperation != MemberReference isv MemberReference jsv BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation < MemberReference i MemberReference len BinaryOperation != MethodInvocation n1 MemberReference i charAt Literal '.' BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ i IfStatement BinaryOperation && BinaryOperation < MemberReference j MemberReference jlen BinaryOperation != MethodInvocation MemberReference j charAt Literal '.' BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ j ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType push FormalParameter ReferenceType item StatementExpression Assignment MemberReference temp MemberReference item = StatementExpression MethodInvocation MemberReference item addElement ReturnStatement MemberReference item	0
MethodDeclaration Modifier public showDialog FormalParameter ReferenceType tab TryStatement StatementExpression MethodInvocation MemberReference tab CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation showDialog	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAUseCase getFacade	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType notifier StatementExpression MethodInvocation MemberReference notifier add StatementExpression SuperMethodInvocation MemberReference notifier	0
MethodDeclaration Modifier public synchronized ReferenceType ListIterator TypeArgument ReferenceType listIterator FormalParameter BasicType int arg0 ReturnStatement MethodInvocation MethodInvocation MemberReference arg0 listIterator	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getEvent getMetaTypes	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setFillColor	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected BlockStatement StatementExpression MethodInvocation MemberReference setSelected	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node StatementExpression Assignment MemberReference val ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration ReferenceType ModelPackage getModelPackage ReturnStatement MemberReference mofExtent	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation getSelectedIndex IfStatement BinaryOperation >= MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference arg0	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType OutgoingDependencyNode	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object FormalParameter ReferenceType String s ReturnStatement MethodInvocation impl MemberReference MemberReference s	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object target LocalVariableDeclaration ReferenceType Object VariableDeclarator newTarget Literal null IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator MethodInvocation project MethodInvocation Literal 0 get getDiagramList IfStatement BinaryOperation != MemberReference target MemberReference BlockStatement StatementExpression Assignment MemberReference newTarget MemberReference = BlockStatement IfStatement BinaryOperation > MethodInvocation project MethodInvocation size getDiagramList Literal 1 BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation project MethodInvocation Literal 1 get getDiagramList = BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation project MethodInvocation iterator MethodInvocation next = BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation project MethodInvocation iterator MethodInvocation next = ReturnStatement MemberReference newTarget	1
MethodDeclaration Modifier private static ReferenceType File FormalParameter ReferenceType ProfileManager IfStatement MethodInvocation MemberReference BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator MethodInvocation ReturnStatement ClassCreator ReferenceType File MethodInvocation Literal 0 get BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MethodInvocation Configuration MethodInvocation MethodInvocation getFactory ReturnStatement MethodInvocation getParentFile	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator features ClassCreator ReferenceType ArrayList TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator classifiers MethodInvocation MemberReference ns MethodInvocation modelImpl MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation classifiers iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation features MethodInvocation modelImpl MethodInvocation MethodInvocation i next getFeatures getFacade addAll CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ii MethodInvocation features iterator WhileStatement MethodInvocation ii hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation ii next IfStatement BinaryOperation instanceof MemberReference f ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation MemberReference f add ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference target MethodInvocation MemberReference t = IfStatement BinaryOperation == MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal true = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference MethodInvocation Model MethodInvocation MemberReference handle isLeaf getFacade createCommand	1
MethodDeclaration Modifier protected Annotation Override ReferenceType String getProperty LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation IfStatement Literal MethodInvocation MemberReference fieldName equals "name" BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference target getName getFacade ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType String decode FormalParameter ReferenceType String str IfStatement BinaryOperation == MemberReference str Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb LocalVariableDeclaration BasicType int VariableDeclarator i1 VariableDeclarator i2 LocalVariableDeclaration BasicType char VariableDeclarator c StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuffer = ForStatement ForControl Assignment MemberReference i1 Literal 0 = Assignment MemberReference i2 Literal 0 = BinaryOperation < MemberReference i2 MethodInvocation str length MemberReference ++ i2 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation str MemberReference i2 charAt = IfStatement BinaryOperation == MemberReference c Literal '%' BlockStatement IfStatement BinaryOperation > MemberReference i2 MemberReference i1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation str MemberReference i1 MemberReference i2 substring append ForStatement ForControl Assignment MemberReference i1 MemberReference ++ i2 = BinaryOperation < MemberReference i2 MethodInvocation str length MemberReference ++ i2 BlockStatement IfStatement BinaryOperation == MethodInvocation str MemberReference i2 charAt Literal ';' BlockStatement BreakStatement IfStatement BinaryOperation >= MemberReference i2 MethodInvocation str length BlockStatement StatementExpression Assignment MemberReference i1 MemberReference i2 = BreakStatement IfStatement BinaryOperation > MemberReference i2 MemberReference i1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ent MethodInvocation str MemberReference i1 MemberReference i2 substring IfStatement Literal MethodInvocation MemberReference ent equals BlockStatement StatementExpression MethodInvocation sb Literal '%' append BlockStatement TryStatement StatementExpression MethodInvocation sb Cast BasicType char MethodInvocation Integer MemberReference ent parseInt append CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression Assignment MemberReference i1 BinaryOperation + MemberReference i2 Literal 1 = IfStatement BinaryOperation > MemberReference i2 MemberReference i1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation str MemberReference i1 MemberReference i2 substring append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private FormalParameter ReferenceType LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement TryStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal calling for " MemberReference Literal " in " MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners Literal " an error is MemberReference e error StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier public ReferenceType Dimension FormalParameter ReferenceType Dimension box StatementExpression Assignment MemberReference MemberReference box = LocalVariableDeclaration Annotation SuppressWarnings Literal BasicType double VariableDeclarator h MemberReference box height LocalVariableDeclaration BasicType double VariableDeclarator w MemberReference box width LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Math Cast BasicType int BinaryOperation / MemberReference w Literal 10.0 MemberReference max ReturnStatement MethodInvocation MemberReference box MemberReference	1
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object transition IfStatement BinaryOperation instanceof MemberReference transition ReferenceType Transition BlockStatement LocalVariableDeclaration ReferenceType Transition VariableDeclarator t Cast ReferenceType Transition MemberReference transition IfStatement BinaryOperation != MethodInvocation t Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation t MethodInvocation getName Literal " on Transition " MethodInvocation t getName warn LocalVariableDeclaration ReferenceType VariableDeclarator guard MethodInvocation StatementExpression MethodInvocation guard Cast ReferenceType Transition MemberReference transition ReturnStatement MemberReference guard ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference transition	1
MethodDeclaration Modifier public Annotation Override ReferenceType Collection TypeArgument ReferenceType Object IfStatement BinaryOperation == MemberReference model Literal null BlockStatement ReturnStatement MethodInvocation Collections BlockStatement ReturnStatement MethodInvocation Collections MemberReference model	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object connectionType FormalParameter ReferenceType Object fromElement FormalParameter ReferenceType Object toElement FormalParameter BasicType boolean checkWFR LocalVariableDeclaration ReferenceType List VariableDeclarator validItems Cast ReferenceType ArrayList MethodInvocation validConnectionMap MemberReference connectionType get IfStatement BinaryOperation == MemberReference validItems Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation validItems iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator modeElementPair Cast ReferenceType Class MethodInvocation it next IfStatement BinaryOperation && MemberReference ArraySelector Literal 0 MethodInvocation MemberReference fromElement isInstance modeElementPair MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toElement isInstance modeElementPair BlockStatement IfStatement MemberReference checkWFR BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Class MemberReference connectionType Cast ReferenceType Element MemberReference fromElement Cast ReferenceType Element MemberReference toElement isConnectionWellformed BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration ReferenceType Object FormalParameter ReferenceType Object FormalParameter ReferenceType Object ans LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator copy Cast ReferenceType ModelElement MethodInvocation MemberReference MemberReference ans copy IfStatement BinaryOperation instanceof MemberReference ReferenceType Namespace BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children Cast ReferenceType Namespace MemberReference IfStatement MethodInvocation ! children isEmpty BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation children iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation it next StatementExpression MethodInvocation MemberReference MemberReference copy ReturnStatement MemberReference copy	0
MethodDeclaration Modifier private ReferenceType getCore ReturnStatement Cast ReferenceType MethodInvocation modelImpl getCoreFactory	0
MethodDeclaration Modifier public BasicType int lastIndexOf FormalParameter ReferenceType Object arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getOperation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file ReturnStatement MethodInvocation file isDirectory	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehaviors getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr Literal "" IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade Literal null BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade = LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator MethodInvocation NotationUtilityUml MethodInvocation Model MethodInvocation MemberReference modelElement getFacade IfStatement BinaryOperation && BinaryOperation == MethodInvocation nameStr length Literal 0 BinaryOperation == MethodInvocation length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation MethodInvocation trim toString IfStatement BinaryOperation < MethodInvocation base length Literal 1 BlockStatement ReturnStatement MethodInvocation nameStr trim ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation nameStr trim Literal " : " MemberReference base	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType VariableDeclarator figClone Cast ReferenceType SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone state Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 4593671619917905917L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String getFilename ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType T iterator ReturnStatement MethodInvocation list iterator	0
MethodDeclaration Modifier public ReferenceType Fig FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int FormalParameter BasicType int LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference MemberReference StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference MemberReference = ReturnStatement MemberReference p	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setFillColor	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType AssociationEndRole	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object c IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference c ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference c	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object create FormalParameter Modifier final ReferenceType String language FormalParameter Modifier final ReferenceType String body ReturnStatement MethodInvocation Model MethodInvocation MemberReference language MemberReference body	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elements MethodInvocation Model MethodInvocation MemberReference parent getOwnedElements MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation elements hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation elements next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation result MemberReference element add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean b StatementExpression SuperMethodInvocation MemberReference b setVisible IfStatement MemberReference b BlockStatement StatementExpression MethodInvocation requestFocus StatementExpression MethodInvocation selectAll	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType VariableDeclarator popUpActions ClassCreator ReferenceType SuperMethodInvocation MemberReference me getPopUpActions MethodInvocation isReadOnly LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType Action VariableDeclarator modulesActions MethodInvocation ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MemberReference modulesActions BlockStatement IfStatement BinaryOperation instanceof MemberReference a ReferenceType List BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator m ClassCreator ReferenceType JMenu Cast ReferenceType Action MemberReference a StatementExpression MethodInvocation popUpActions MemberReference m add ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator Cast ReferenceType List TypeArgument ReferenceType Action MemberReference a BlockStatement StatementExpression MethodInvocation m MemberReference add BlockStatement StatementExpression MethodInvocation popUpActions MemberReference a add StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType JSeparator add StatementExpression Assignment MemberReference popupAddOffset Literal 1 = IfStatement MemberReference removeFromDiagram BlockStatement StatementExpression MethodInvocation popUpActions MethodInvocation MethodInvocation getInstance add StatementExpression MemberReference ++ popupAddOffset StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType add StatementExpression MemberReference ++ popupAddOffset IfStatement BinaryOperation == MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 BlockStatement LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation list MethodInvocation getOwner elementListForOffender IfStatement BinaryOperation && BinaryOperation != MemberReference items Literal null BinaryOperation > MethodInvocation items size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator critiques ClassCreator ReferenceType ArgoJMenu Literal LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator itemUnderMouse MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier IfStatement BinaryOperation != MemberReference itemUnderMouse Literal null BlockStatement StatementExpression MethodInvocation critiques ClassCreator ReferenceType ActionGoToCritique MemberReference itemUnderMouse add StatementExpression MethodInvocation critiques addSeparator ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation == MemberReference item MemberReference itemUnderMouse BlockStatement ContinueStatement StatementExpression MethodInvocation critiques ClassCreator ReferenceType ActionGoToCritique MemberReference item add StatementExpression MethodInvocation popUpActions Literal 0 ClassCreator ReferenceType JSeparator add StatementExpression MethodInvocation popUpActions Literal 0 MemberReference critiques add LocalVariableDeclaration ReferenceType Action VariableDeclarator stereoActions MethodInvocation getApplyStereotypeActions IfStatement BinaryOperation && BinaryOperation != MemberReference stereoActions Literal null BinaryOperation > MemberReference stereoActions length Literal 0 BlockStatement StatementExpression MethodInvocation popUpActions Literal 0 ClassCreator ReferenceType JSeparator add LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator stereotypes ClassCreator ReferenceType ArgoJMenu Literal ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference stereoActions length MemberReference ++ i BlockStatement StatementExpression MethodInvocation stereotypes MemberReference ArraySelector MemberReference i stereoActions StatementExpression MethodInvocation popUpActions Literal 0 MemberReference stereotypes add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade add ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference SHIFTLEFTEQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private BasicType boolean asBoolean FormalParameter ReferenceType Object value FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference value ReferenceType Boolean BlockStatement ReturnStatement Cast ReferenceType Boolean MemberReference value BlockStatement StatementExpression MethodInvocation MemberReference node Literal Literal false ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isSelected ReturnStatement MemberReference selected	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public addNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType filter FormalParameter ReferenceType Object IllegalArgumentException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference addNotificationListener	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UMLDiagram BlockStatement ReturnStatement Cast ReferenceType UMLDiagram MemberReference elem IfStatement MethodInvocation Model MethodInvocation MemberReference elem getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference elem getNamespace getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Critic IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Critic VariableDeclarator SuperMethodInvocation StatementExpression MethodInvocation MethodInvocation addAll StatementExpression This MethodInvocation MemberReference StatementExpression Assignment MemberReference Literal true = ReturnStatement SuperMethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Project project FormalParameter ReferenceType InputStream inputStream OpenException TryStatement StatementExpression MethodInvocation MemberReference project ClassCreator ReferenceType InputSource ClassCreator ReferenceType InputStreamReader MemberReference inputStream MethodInvocation getEncoding load CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation MemberReference sb Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation = ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation getPriority BlockStatement ContinueStatement StatementExpression MemberReference ++ IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator ArrayCreator BasicType int MemberReference LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference StatementExpression Assignment MemberReference Literal 0 = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation getPriority BlockStatement ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference MethodInvocation MemberReference MemberReference item = StatementExpression Assignment MemberReference ArraySelector MemberReference children MemberReference item = StatementExpression MemberReference ++ StatementExpression MethodInvocation This MemberReference path MemberReference MemberReference children	0
MethodDeclaration FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation Model MethodInvocation getPrivate getVisibilityKind setVisibility getCoreHelper	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle StatementExpression Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeEvent	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer d FormalParameter BasicType long LocalVariableDeclaration ReferenceType Class VariableDeclarator MethodInvocation dm getClass LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Critic VariableDeclarator c MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference dm MemberReference d MemberReference c MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation MemberReference MethodInvocation getText setProperty	0
MethodDeclaration Modifier public StatementExpression MethodInvocation UndoManager MethodInvocation This addMementoLock getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType FigNode VariableDeclarator figNode MemberReference BlockStatement StatementExpression MethodInvocation mgm MethodInvocation figNode getOwner removeNode StatementExpression MethodInvocation editor MemberReference figNode remove StatementExpression MethodInvocation UndoManager MethodInvocation This removeMementoLock getInstance	1
MethodDeclaration Modifier protected FormalParameter ReferenceType e StatementExpression Assignment MemberReference Literal "" = StatementExpression Assignment MemberReference priority MemberReference ToDoItem HIGH_PRIORITY = StatementExpression Assignment MemberReference Literal "" = StatementExpression Assignment MemberReference Literal "" =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Operation MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType GeneralizableElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType NodeSetValue FormalParameter ReferenceType Context context FormalParameter ReferenceType NodeSetValue rtf_ns LocalVariableDeclaration ReferenceType FragmentValue VariableDeclarator rtf Cast ReferenceType FragmentValue MemberReference rtf_ns StatementExpression MethodInvocation MemberReference context TryStatement LocalVariableDeclaration ReferenceType Controller VariableDeclarator controller MethodInvocation context LocalVariableDeclaration ReferenceType NamePool VariableDeclarator namePool MethodInvocation controller getNamePool LocalVariableDeclaration ReferenceType VariableDeclarator csEmitter ClassCreator ReferenceType MemberReference namePool StatementExpression MethodInvocation rtf MemberReference csEmitter LocalVariableDeclaration BasicType int VariableDeclarator numColumns MethodInvocation csEmitter LocalVariableDeclaration ReferenceType String VariableDeclarator widths MethodInvocation csEmitter LocalVariableDeclaration BasicType float VariableDeclarator relTotal Literal 0 LocalVariableDeclaration BasicType float VariableDeclarator relParts ArrayCreator BasicType float MemberReference numColumns LocalVariableDeclaration BasicType float VariableDeclarator absTotal Literal 0 LocalVariableDeclaration BasicType float VariableDeclarator absParts ArrayCreator BasicType float MemberReference numColumns ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator width MemberReference ArraySelector MemberReference count widths LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation width Literal "*" indexOf IfStatement BinaryOperation >= MemberReference pos Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator relPart MethodInvocation width Literal 0 MemberReference pos substring LocalVariableDeclaration ReferenceType String VariableDeclarator absPart MethodInvocation width BinaryOperation + MemberReference pos Literal 1 substring TryStatement LocalVariableDeclaration BasicType float VariableDeclarator rel MethodInvocation Float MemberReference relPart StatementExpression Assignment MemberReference relTotal MemberReference rel += StatementExpression Assignment MemberReference ArraySelector MemberReference count relParts MemberReference rel = CatchClause CatchClauseParameter NumberFormatException e StatementExpression MethodInvocation System.out BinaryOperation + MemberReference relPart Literal " is not a valid println LocalVariableDeclaration BasicType int VariableDeclarator pixels Literal 0 IfStatement BinaryOperation && BinaryOperation != MemberReference absPart Literal null MethodInvocation ! absPart Literal "" equals BlockStatement StatementExpression Assignment MemberReference pixels MethodInvocation MemberReference absPart convertLength = StatementExpression Assignment MemberReference absTotal MemberReference pixels += StatementExpression Assignment MemberReference ArraySelector MemberReference count absParts MemberReference pixels = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count relParts Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator pixels Literal 0 IfStatement BinaryOperation && BinaryOperation != MemberReference width Literal null MethodInvocation ! width Literal "" equals BlockStatement StatementExpression Assignment MemberReference pixels MethodInvocation MemberReference width convertLength = StatementExpression Assignment MemberReference absTotal MemberReference pixels += StatementExpression Assignment MemberReference ArraySelector MemberReference count absParts MemberReference pixels = IfStatement BinaryOperation == MemberReference relTotal Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference ArraySelector MemberReference count absParts IfStatement MemberReference foStylesheet BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pixels MethodInvocation f intValue LocalVariableDeclaration BasicType float VariableDeclarator inches BinaryOperation / Cast BasicType float MemberReference pixels MemberReference pixelsPerInch StatementExpression Assignment MemberReference ArraySelector MemberReference count widths BinaryOperation + MemberReference inches Literal = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = IfStatement BinaryOperation == MemberReference absTotal Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator rel BinaryOperation * BinaryOperation / MemberReference ArraySelector MemberReference count relParts MemberReference relTotal Literal 100 LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference rel StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = StatementExpression Assignment MemberReference widths MethodInvocation MemberReference widths correctRoundingError = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pixelWidth MemberReference nominalWidth IfStatement BinaryOperation <= MethodInvocation tableWidth Literal "%" indexOf Literal 0 BlockStatement StatementExpression Assignment MemberReference pixelWidth MethodInvocation MemberReference tableWidth convertLength = IfStatement BinaryOperation <= MemberReference pixelWidth MemberReference absTotal BlockStatement StatementExpression MethodInvocation System.out Literal is wider than table println BlockStatement StatementExpression Assignment MemberReference pixelWidth MemberReference absTotal -= StatementExpression Assignment MemberReference absTotal Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator rel BinaryOperation * BinaryOperation / MemberReference ArraySelector MemberReference count relParts MemberReference relTotal MemberReference pixelWidth StatementExpression Assignment MemberReference ArraySelector MemberReference count relParts BinaryOperation + MemberReference rel MemberReference ArraySelector MemberReference count absParts = StatementExpression Assignment MemberReference absTotal BinaryOperation + MemberReference rel MemberReference ArraySelector MemberReference count absParts += IfStatement BinaryOperation <= MethodInvocation tableWidth Literal "%" indexOf Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference ArraySelector MemberReference count relParts IfStatement MemberReference foStylesheet BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pixels MethodInvocation f intValue LocalVariableDeclaration BasicType float VariableDeclarator inches BinaryOperation / Cast BasicType float MemberReference pixels MemberReference pixelsPerInch StatementExpression Assignment MemberReference ArraySelector MemberReference count widths BinaryOperation + MemberReference inches Literal = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator rel BinaryOperation * BinaryOperation / MemberReference ArraySelector MemberReference count relParts MemberReference absTotal Literal 100 LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference rel StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = StatementExpression Assignment MemberReference widths MethodInvocation MemberReference widths correctRoundingError = LocalVariableDeclaration ReferenceType VariableDeclarator cuEmitter ClassCreator ReferenceType MemberReference controller MemberReference namePool MemberReference widths StatementExpression MethodInvocation rtf MemberReference cuEmitter ReturnStatement MethodInvocation cuEmitter CatchClause CatchClauseParameter TransformerException e StatementExpression MethodInvocation System.out Literal "Transformer Exception in println ReturnStatement MemberReference rtf	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project newProject LocalVariableDeclaration ReferenceType Project VariableDeclarator oldProject MemberReference currentProject StatementExpression Assignment MemberReference currentProject MemberReference newProject = StatementExpression MethodInvocation MemberReference newProject IfStatement BinaryOperation && BinaryOperation != MemberReference currentProject Literal null BinaryOperation == MethodInvocation currentProject getActiveDiagram Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ArgoDiagram VariableDeclarator diagrams MethodInvocation currentProject getDiagramList IfStatement BinaryOperation && BinaryOperation != MemberReference diagrams Literal null MethodInvocation ! diagrams isEmpty BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation diagrams Literal 0 get StatementExpression MethodInvocation currentProject MemberReference activeDiagram StatementExpression MethodInvocation MemberReference newProject MemberReference oldProject	1
MethodDeclaration Modifier public ReferenceType Collection generate FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType File VariableDeclarator tmpdir Literal null TryStatement StatementExpression Assignment MemberReference tmpdir MethodInvocation TempFileUtils = IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation MemberReference elements MethodInvocation tmpdir getPath MemberReference deps generateFiles ReturnStatement MethodInvocation TempFileUtils MemberReference tmpdir ReturnStatement MemberReference Collections EMPTY_LIST IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation TempFileUtils MemberReference tmpdir deleteDir StatementExpression MethodInvocation LOG Literal debug	1
MethodDeclaration Modifier private ReferenceType IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter Modifier final ReferenceType PropertyChangeEvent pve LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation pve getSource LocalVariableDeclaration ReferenceType String VariableDeclarator pName MethodInvocation pve getPropertyName IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pve ReferenceType DeleteInstanceEvent BinaryOperation == MemberReference src MethodInvocation getOwner BlockStatement LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation removeFromDiagram CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal method " Literal MemberReference e error StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater ReturnStatement IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation MethodInvocation pve getNewValue equals BlockStatement StatementExpression MethodInvocation LOG Literal debug StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src StatementExpression MethodInvocation StatementExpression MethodInvocation IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.TRUE MethodInvocation pve getNewValue equals BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src BlockStatement StatementExpression SuperMethodInvocation MemberReference pve propertyChange IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference src isAUMLElement getFacade BinaryOperation != MethodInvocation getOwner Literal null MethodInvocation ! Model MethodInvocation MethodInvocation getOwner isRemoved getUmlFactory BlockStatement StatementExpression MethodInvocation MemberReference pve modelChanged LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pve LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal method " Literal element " MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator st MethodInvocation elem BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p MethodInvocation st getAttributes BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation MemberReference elem MethodInvocation st getQualifiedName MethodInvocation p getName getTaggedValue IfStatement BinaryOperation && BinaryOperation != MemberReference v Literal null BinaryOperation != MemberReference v MemberReference handle BlockStatement IfStatement BinaryOperation instanceof MemberReference v ReferenceType Collection BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Collection MemberReference v BlockStatement StatementExpression MethodInvocation result MemberReference p add BlockStatement StatementExpression MethodInvocation result MemberReference p add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType int getWidth StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MemberReference width debug ReturnStatement MemberReference width	1
MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getDefaultValue getFacade	0
MethodDeclaration Modifier static FormalParameter ReferenceType JPopupMenu FormalParameter ReferenceType String role FormalParameter ReferenceType Object target AssertStatement BinaryOperation != MemberReference role Literal null AssertStatement BinaryOperation != MemberReference target Literal null IfStatement BinaryOperation || MethodInvocation role MemberReference equals MethodInvocation role MemberReference equals BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator select ClassCreator ReferenceType JMenu MethodInvocation Translator Literal localize IfStatement MethodInvocation role MemberReference equals BlockStatement StatementExpression MethodInvocation MemberReference target LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator menuItem ClassCreator ReferenceType JMenuItem MemberReference SINGLETON StatementExpression MethodInvocation select MemberReference menuItem add IfStatement MethodInvocation role MemberReference equals BlockStatement StatementExpression MethodInvocation MemberReference target StatementExpression MethodInvocation select MemberReference SINGLETON add StatementExpression MethodInvocation MemberReference select add LocalVariableDeclaration ReferenceType JMenu VariableDeclarator newMenu ClassCreator ReferenceType JMenu MethodInvocation Translator Literal localize StatementExpression MethodInvocation newMenu MethodInvocation add StatementExpression MethodInvocation MethodInvocation MemberReference target StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference role StatementExpression MethodInvocation newMenu MethodInvocation add StatementExpression MethodInvocation MethodInvocation MemberReference target StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference role StatementExpression MethodInvocation newMenu MethodInvocation add StatementExpression MethodInvocation MethodInvocation MemberReference target StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference role StatementExpression MethodInvocation newMenu MethodInvocation add StatementExpression MethodInvocation MethodInvocation MemberReference target StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference role StatementExpression MethodInvocation MemberReference newMenu add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation MemberReference role MemberReference target getAction StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal localize StatementExpression MethodInvocation MemberReference SINGLETON add	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements IfStatement MethodInvocation Model MethodInvocation MethodInvocation isAModelElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getStereotypes getFacade addAll	0
MethodDeclaration Modifier public ReferenceType Object getStereotype FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object stereo IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Profile BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "profile" IfStatement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "stereotype" LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType Stereotype MemberReference stereo LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class VariableDeclarator Cast ReferenceType Stereotype MemberReference stereo IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation != MethodInvocation size Literal 1 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator baseClass MethodInvocation MethodInvocation next iterator ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator o MethodInvocation MemberReference ns getStereotypes BlockStatement IfStatement BinaryOperation && MethodInvocation name MethodInvocation o getName equals MethodInvocation o MethodInvocation MemberReference baseClass contains BlockStatement ReturnStatement MemberReference o ReturnStatement Literal null	0
MethodDeclaration Modifier private StatementExpression This MethodInvocation ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator top ClassCreator ReferenceType StatementExpression MethodInvocation top ClassCreator ReferenceType IfStatement BinaryOperation == MemberReference scope MemberReference BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator warning ClassCreator ReferenceType StatementExpression MethodInvocation warning ClassCreator ReferenceType BoxLayout MemberReference warning MemberReference BoxLayout LocalVariableDeclaration ReferenceType JLabel VariableDeclarator ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation MemberReference Component StatementExpression MethodInvocation warning MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator projectSettings ClassCreator ReferenceType StatementExpression MethodInvocation projectSettings ClassCreator ReferenceType StatementExpression MethodInvocation projectSettings MethodInvocation Translator Literal localize setText StatementExpression MethodInvocation projectSettings Literal null setIcon StatementExpression MethodInvocation projectSettings MemberReference Component StatementExpression MethodInvocation warning MemberReference projectSettings add StatementExpression MethodInvocation top MemberReference warning MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator settings ClassCreator ReferenceType StatementExpression MethodInvocation settings ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator constraints ClassCreator ReferenceType StatementExpression Assignment MemberReference constraints anchor MemberReference WEST = StatementExpression Assignment MemberReference constraints fill MemberReference HORIZONTAL = StatementExpression Assignment MemberReference constraints Literal 0 = StatementExpression Assignment MemberReference constraints gridx Literal 0 = StatementExpression Assignment MemberReference constraints gridwidth Literal 1 = StatementExpression Assignment MemberReference constraints Literal 1 = StatementExpression Assignment MemberReference constraints weightx Literal 1.0 = StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 0 Literal 30 Literal 0 Literal 4 = StatementExpression Assignment MemberReference constraints MemberReference RELATIVE = StatementExpression Assignment MemberReference MethodInvocation Literal = StatementExpression MethodInvocation settings MemberReference MemberReference constraints add StatementExpression Assignment MemberReference MethodInvocation Literal = StatementExpression MethodInvocation settings MemberReference MemberReference constraints add StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 5 Literal 30 Literal 0 Literal 4 = LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassCreator ReferenceType MemberReference LEFT Literal 5 Literal 0 LocalVariableDeclaration ReferenceType JLabel VariableDeclarator MethodInvocation Literal StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference setLabelFor StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation settings MemberReference MemberReference constraints add StatementExpression Assignment MemberReference ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation MethodInvocation Translator Literal localize setText LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassCreator ReferenceType MemberReference LEFT Literal 5 Literal 0 LocalVariableDeclaration ReferenceType JButton VariableDeclarator MethodInvocation StatementExpression MethodInvocation MemberReference setLabelFor StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation settings MemberReference MemberReference constraints add StatementExpression MethodInvocation top MemberReference settings MemberReference CENTER add StatementExpression This MethodInvocation MemberReference top MemberReference add StatementExpression This MethodInvocation ClassCreator ReferenceType Dimension Literal 296 Literal 169 setSize	0
MethodDeclaration Modifier private BasicType boolean isNameTerminator FormalParameter BasicType char ch ReturnStatement BinaryOperation || BinaryOperation == MemberReference ch Literal '>' MethodInvocation Character MemberReference ch isWhitespace	1
MethodDeclaration Modifier public ReferenceType Object getNamespace ReturnStatement MemberReference namespace	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation dispose	0
MethodDeclaration Modifier public FormalParameter ReferenceType JToolBar toolbar IfStatement MethodInvocation ! Arrays MethodInvocation MemberReference toolbar contains MethodInvocation getComponents asList BlockStatement IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation Cast ReferenceType UMLDiagram MethodInvocation remove StatementExpression MethodInvocation MemberReference toolbar MemberReference add StatementExpression Assignment MemberReference MemberReference toolbar = StatementExpression MethodInvocation StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference newWidth	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation ce MethodInvocation getActiveLayer MethodInvocation getLayerManager IfStatement BinaryOperation || BinaryOperation <= MemberReference width Literal 0 BinaryOperation <= MemberReference height Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator ClassCreator ReferenceType Rectangle Literal 0 Literal 0 Literal 50 Literal 50 TryStatement StatementExpression MethodInvocation MemberReference outputStream MemberReference ce MemberReference CatchClause CatchClauseParameter java.io.IOException e StatementExpression MethodInvocation LOG Literal "Error while MemberReference e error ReturnStatement StatementExpression SuperMethodInvocation MemberReference ae actionPerformed	1
MethodDeclaration ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier public Annotation Override itemStateChanged FormalParameter ReferenceType ItemEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType AssociationEnd MemberReference handle MemberReference handle getRefOutermostPackage IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType ListSet VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation MemberReference parent contains BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation SynchronizedStatement MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator post MethodInvocation item IfStatement BinaryOperation == MemberReference post MemberReference parent BlockStatement StatementExpression MethodInvocation result MemberReference item add ReturnStatement MemberReference result ReturnStatement MethodInvocation Collections	1
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MemberReference text getCoreHelper	0
MethodDeclaration Modifier protected Annotation Override ReferenceType FormalParameter ReferenceType Object owner FormalParameter ReferenceType Rectangle bounds FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType MemberReference owner MemberReference bounds MemberReference settings	0
MethodDeclaration Modifier public FormalParameter ReferenceType TreePath path StatementExpression SuperMethodInvocation MemberReference path StatementExpression MethodInvocation LOG Literal debug IfStatement BinaryOperation || BinaryOperation == MemberReference path Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType TreePath VariableDeclarator expanded MethodInvocation StatementExpression MethodInvocation expanded MemberReference path remove	1
MethodDeclaration Modifier public updateSubTask FormalParameter ReferenceType String action StatementExpression MethodInvocation MemberReference action setNote	1
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator tab MethodInvocation results getSelectedIndex IfStatement BinaryOperation != MemberReference tab Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation results MemberReference tab IfStatement MethodInvocation ! MethodInvocation me getX MethodInvocation me getY contains BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation >= MemberReference tab Literal 1 BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation BinaryOperation - MemberReference tab Literal 1	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation children MethodInvocation Model MethodInvocation MemberReference parent getFacade add ReturnStatement MemberReference children ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Primitive LocalVariableDeclaration ReferenceType Primitive VariableDeclarator obj MethodInvocation MethodInvocation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference obj ReturnStatement MemberReference obj	0
MethodDeclaration Modifier protected initMenuCreate StatementExpression SuperMethodInvocation initMenuCreate StatementExpression MethodInvocation MethodInvocation removeAll getCreateDiagramMenu StatementExpression MethodInvocation MethodInvocation removeAll getCreateDiagramToolbar LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator usecaseDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionUseCaseDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference usecaseDiagram Literal Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionUseCaseDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference usecaseDiagram MemberReference ShortcutMgr ACTION_USE_CASE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator classDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionClassDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference classDiagram Literal "Class Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionClassDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference classDiagram MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator sequenzDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionSequenceDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference sequenzDiagram Literal "Sequenz Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionSequenceDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference sequenzDiagram MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator collaborationDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionCollaborationDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference collaborationDiagram Literal Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionCollaborationDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference collaborationDiagram MemberReference ShortcutMgr ACTION_COLLABORATION_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator stateDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionStateDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference stateDiagram Literal "Statechart Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionStateDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference stateDiagram MemberReference ShortcutMgr ACTION_STATE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator activityDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionActivityDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference activityDiagram Literal Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionActivityDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference activityDiagram MemberReference ShortcutMgr ACTION_ACTIVITY_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator deploymentDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionDeploymentDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference deploymentDiagram Literal Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionDeploymentDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference deploymentDiagram MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation MethodInvocation Literal true getCreateDiagramToolbar	1
MethodDeclaration Modifier public FormalParameter ReferenceType List res FormalParameter ReferenceType List StatementExpression Assignment MemberReference results MemberReference res = StatementExpression Assignment MemberReference diagrams MemberReference = LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation Integer MethodInvocation results size valueOf StatementExpression MethodInvocation MethodInvocation Translator Literal MemberReference msgArgs setText StatementExpression MethodInvocation MemberReference results MemberReference diagrams StatementExpression MethodInvocation Cast ReferenceType List Literal null Cast ReferenceType List Literal null StatementExpression MethodInvocation MethodInvocation Translator Literal localize setText	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType Literal are no Property objects in	0
MethodDeclaration Modifier public BasicType boolean isInitialized FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation != Cast ReferenceType Property MemberReference handle Literal null	0
MethodDeclaration Modifier public ReferenceType Object getInstance ThrowStatement ClassCreator ReferenceType Literal "Not a UML2 model	0
MethodDeclaration Modifier protected Annotation Override ReferenceType IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType Literal 6 ReturnStatement MemberReference icons	0
MethodDeclaration Modifier protected ReferenceType FigNode FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object modelElement AssertStatement BinaryOperation != MemberReference modelElement Literal null Literal "A modelElement must be supplied" ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation lay BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference fig ReferenceType FigNode MethodInvocation modelElement Cast ReferenceType FigNode MemberReference fig equals BlockStatement ReturnStatement Cast ReferenceType FigNode MemberReference fig ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation lay getContentsEdgesOnly BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference fig ReferenceType FigEdgeModelElement MethodInvocation modelElement Cast ReferenceType FigEdgeModelElement MemberReference fig equals BlockStatement ReturnStatement Cast ReferenceType FigEdgeModelElement MemberReference fig ReturnStatement Literal null	1
MethodDeclaration Modifier private BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isACompositeState BlockStatement ReturnStatement BinaryOperation != Cast ReferenceType MemberReference handle Literal null ReturnStatement MethodInvocation MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType ToolBarFactory VariableDeclarator factory ClassCreator ReferenceType ToolBarFactory MethodInvocation StatementExpression MethodInvocation factory Literal true StatementExpression MethodInvocation factory Literal false LocalVariableDeclaration ReferenceType JToolBar VariableDeclarator MethodInvocation factory StatementExpression MethodInvocation Literal setName StatementExpression MethodInvocation buttonPanel removeAll StatementExpression MethodInvocation buttonPanel MemberReference WEST MemberReference add StatementExpression MethodInvocation buttonPanel Literal MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public Annotation Override BasicType float getWeight ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal 0 BinaryOperation * MethodInvocation MethodInvocation getWeight first Literal	1
MethodDeclaration Modifier public FormalParameter ReferenceType cm StatementExpression MethodInvocation MemberReference cm add	0
MethodDeclaration Modifier private FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T map FormalParameter ReferenceType String key FormalParameter ReferenceType T item LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator list MethodInvocation map MemberReference key get IfStatement BinaryOperation == MemberReference list Literal null BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference item Literal null BlockStatement StatementExpression MethodInvocation map MemberReference key remove ReturnStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement MethodInvocation ! list MemberReference item contains BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Attempt to unregister registration" MemberReference key Literal " Listener: " MemberReference item debug WhileStatement MethodInvocation list MemberReference item contains BlockStatement StatementExpression MethodInvocation list MemberReference item remove IfStatement MethodInvocation list isEmpty BlockStatement StatementExpression MethodInvocation map MemberReference key remove	1
MethodDeclaration Modifier private FormalParameter ReferenceType DiagramSettings settings FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference MemberReference settings StatementExpression MethodInvocation MemberReference lay MemberReference StatementExpression MethodInvocation lay MemberReference add StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public progress FormalParameter ReferenceType event InterruptedException StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - Literal 100 MemberReference LocalVariableDeclaration BasicType long VariableDeclarator position MethodInvocation event getPosition LocalVariableDeclaration BasicType long VariableDeclarator length MethodInvocation event getLength LocalVariableDeclaration BasicType long VariableDeclarator BinaryOperation / BinaryOperation * MemberReference position MemberReference MemberReference length StatementExpression MethodInvocation BinaryOperation + MemberReference MemberReference	0
MethodDeclaration Modifier public endFunctionDeclaration IfStatement MethodInvocation ! ignore BlockStatement AssertStatement BinaryOperation != MemberReference Literal null Literal is LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MethodInvocation pop AssertStatement MethodInvocation Model MethodInvocation MemberReference oper isAOperation getFacade BinaryOperation + BinaryOperation + BinaryOperation + Literal "" Literal "The context (\"" MemberReference oper Literal isn't an StatementExpression MethodInvocation finish StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType List VariableDeclarator nodes MethodInvocation MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Literal null WhileStatement BinaryOperation && BinaryOperation < MemberReference i MethodInvocation nodes size MemberReference ! BlockStatement StatementExpression Assignment MemberReference fig Cast ReferenceType Fig MethodInvocation nodes MemberReference i get = IfStatement BinaryOperation && BinaryOperation != MemberReference fig MemberReference BinaryOperation instanceof MemberReference fig ReferenceType FigClassifierRole BlockStatement StatementExpression MethodInvocation MethodInvocation fig getY setY StatementExpression MethodInvocation MethodInvocation fig getHeight StatementExpression Assignment MemberReference Literal true = StatementExpression MemberReference ++ i	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation init ReturnStatement Literal true	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object nodeOrEdge IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAClassifierRole getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object multiplicity ReturnStatement MethodInvocation impl MemberReference multiplicity	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private FormalParameter ReferenceType Rectangle bounds StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MethodInvocation Literal "stereotype" StatementExpression MethodInvocation MethodInvocation Literal true setVisible StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference height getNameFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation Literal true setFilled StatementExpression MethodInvocation MemberReference FILL_COLOR setFillColor StatementExpression MethodInvocation MemberReference setLineColor StatementExpression MethodInvocation MemberReference setLineWidth IfStatement BinaryOperation != MemberReference bounds Literal null BlockStatement StatementExpression MethodInvocation MemberReference bounds x MemberReference bounds y setLocation StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier public ReferenceType String getAttribute FormalParameter ReferenceType String attribute ReturnStatement MethodInvocation attributes MemberReference attribute getValue	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public static addItemsToToolBar FormalParameter ReferenceType JToolBar buttonPanel FormalParameter ReferenceType Collection actions StatementExpression MethodInvocation MemberReference buttonPanel MethodInvocation actions toArray addItemsToToolBar	1
MethodDeclaration Modifier public ReferenceType Profile FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Profile VariableDeclarator found Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation MemberReference startsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference replace = AssertStatement MethodInvocation MethodInvocation getName MethodInvocation MemberReference startsWith getClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator p MemberReference profiles BlockStatement IfStatement MethodInvocation p MethodInvocation getName MethodInvocation MemberReference equals getClass BlockStatement StatementExpression Assignment MemberReference found MemberReference p = BreakStatement ReturnStatement MemberReference found	0
MethodDeclaration Modifier public ReferenceType String expand FormalParameter ReferenceType String desc FormalParameter ReferenceType ListSet offs ReturnStatement MemberReference desc	0
MethodDeclaration Modifier private ReferenceType ReturnStatement Cast ReferenceType MethodInvocation modelImpl	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public static ReferenceType String TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls ClassReference ReferenceType StatementExpression Assignment MemberReference cls ClassReference ReferenceType AttributeList = StatementExpression Assignment MemberReference cls ClassReference ReferenceType Logger = TryStatement StatementExpression Assignment MemberReference cls MethodInvocation Class Literal forName = CatchClause CatchClauseParameter ClassNotFoundException e LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation System Literal getProperty IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MemberReference StatementExpression MethodInvocation sb MethodInvocation Translator Literal MemberReference msgArgs append LocalVariableDeclaration ReferenceType Object VariableDeclarator saxObject Literal null TryStatement StatementExpression Assignment MemberReference saxObject MethodInvocation SAXParserFactory newInstance = LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation saxObject MethodInvocation getName getClass StatementExpression MethodInvocation sb MethodInvocation Translator Literal MemberReference msgArgs append StatementExpression MethodInvocation sb Literal "\n" append CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation sb MethodInvocation Translator Literal localize append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference sb MemberReference ArraySelector MemberReference i IfStatement BinaryOperation != MemberReference saxObject Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation saxObject MethodInvocation getPackage getClass IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference sb MethodInvocation getName StatementExpression MethodInvocation sb Literal "\n" append StatementExpression MethodInvocation sb MethodInvocation Translator Literal localize append StatementExpression MethodInvocation sb MethodInvocation System Literal "os.name" Literal "unknown" getProperty append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb MethodInvocation Translator Literal localize append StatementExpression MethodInvocation sb MethodInvocation System Literal "os.version" Literal "unknown" getProperty append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.language" localize append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation getLanguage append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb MethodInvocation Translator Literal localize append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb Literal '\n' append ReturnStatement MethodInvocation sb toString CatchClause CatchClauseParameter Exception e ReturnStatement MethodInvocation e toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean IfStatement MemberReference BlockStatement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getOwner ClassCreator ReferenceType Rectangle MethodInvocation getX BinaryOperation + MethodInvocation getY MethodInvocation getHeight MethodInvocation getWidth MethodInvocation getWidth MethodInvocation getSettings = StatementExpression MethodInvocation MemberReference addFig BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public static ReferenceType List FormalParameter ReferenceType Object relation LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Collection VariableDeclarator attributes MethodInvocation Model MethodInvocation MemberReference relation getAttributes getFacade ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation attributes iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation it next IfStatement MethodInvocation MemberReference attribute BlockStatement StatementExpression MethodInvocation result MemberReference attribute add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter BasicType boolean TransformerException StatementExpression MethodInvocation rtfEmitter MemberReference	0
MethodDeclaration Modifier public keyPressed FormalParameter ReferenceType KeyEvent e IfStatement BinaryOperation == MethodInvocation e getKeyCode MemberReference KeyEvent BlockStatement LocalVariableDeclaration Modifier final ReferenceType Point VariableDeclarator MethodInvocation MethodInvocation IfStatement BinaryOperation > MemberReference x Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType Point BinaryOperation - MemberReference x Literal 1 MemberReference y IfStatement BinaryOperation == MethodInvocation e getKeyCode MemberReference KeyEvent BlockStatement LocalVariableDeclaration Modifier final ReferenceType Point VariableDeclarator MethodInvocation MethodInvocation IfStatement BinaryOperation > BinaryOperation - MethodInvocation list getWidth MemberReference x MethodInvocation MethodInvocation getWidth BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType Point BinaryOperation + MemberReference x Literal 1 MemberReference y	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String generateFiles FormalParameter ReferenceType Collection elements FormalParameter ReferenceType String path FormalParameter BasicType boolean deps LocalVariableDeclaration ReferenceType String VariableDeclarator filename MemberReference IfStatement MethodInvocation ! path MemberReference FILE_SEPARATOR endsWith BlockStatement StatementExpression Assignment MemberReference path MemberReference FILE_SEPARATOR += LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator fullFilename BinaryOperation + MemberReference path MemberReference filename IfStatement MethodInvocation ! elements isEmpty BlockStatement StatementExpression MethodInvocation LOG Literal model" debug LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator problems MethodInvocation MemberReference elements validate IfStatement BinaryOperation > MethodInvocation problems size Literal 0 BlockStatement StatementExpression MethodInvocation LOG Literal "model not code debug LocalVariableDeclaration ReferenceType String VariableDeclarator error MethodInvocation Utils MemberReference problems MemberReference LINE_SEPARATOR LocalVariableDeclaration ReferenceType VariableDeclarator ed ClassCreator ReferenceType MethodInvocation ProjectBrowser getInstance Literal "Error in model" Literal "Model not valid" MemberReference error StatementExpression MethodInvocation ed Literal true StatementExpression MethodInvocation ed Literal true setVisible IfStatement MethodInvocation SelectCodeCreatorDialog execute BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator code MethodInvocation MemberReference elements StatementExpression MethodInvocation MemberReference fullFilename MemberReference code writeFile StatementExpression MethodInvocation result MemberReference fullFilename add ReturnStatement MemberReference result	1
MethodDeclaration * text callouts into a verbatim * method the <tt>areaset</tt> and * in the supplied and the * result tree fragment with appropriate callout * <p>If a attribute is supplied on an * its content will be used for the otherwise the * number will be surrounded by Callout * also be as * numbered in document All of the in * <tt>areaset</tt> get the same * the <tt>linecolumn</tt> and units * If no unit is <tt>linecolumn</tt> is * If only a line is specified, the callout appears * the will be with blanks to reach * necessary column, but callouts that are located beyond the * line of the verbatim environment will be * are inserted before the character at the * where they are to * <p>If callouts are and the callout number is * than or equal to the the following * will be generated for * * * * * If the is the following image * be * * * * <p>If the callout number exceeds * the callout will be the callout number surrounded * * @param context The stylesheet * @param The source node set that contains the * @param rtf The result tree fragment of the verbatim * @return The modified result tree */ Modifier public static ReferenceType NodeSetValue FormalParameter ReferenceType Context context FormalParameter ReferenceType NodeList areaspecNodeList FormalParameter ReferenceType NodeSetValue rtf_ns LocalVariableDeclaration ReferenceType FragmentValue VariableDeclarator rtf Cast ReferenceType FragmentValue MemberReference rtf_ns StatementExpression MethodInvocation MemberReference context setupCallouts TryStatement LocalVariableDeclaration ReferenceType Controller VariableDeclarator controller MethodInvocation context LocalVariableDeclaration ReferenceType NamePool VariableDeclarator namePool MethodInvocation controller getNamePool LocalVariableDeclaration ReferenceType VariableDeclarator cEmitter ClassCreator ReferenceType MemberReference controller MemberReference namePool MemberReference defaultColumn MemberReference foStylesheet MemberReference fCallout StatementExpression MethodInvocation cEmitter MemberReference areaspecNodeList setupCallouts StatementExpression MethodInvocation rtf MemberReference cEmitter ReturnStatement MethodInvocation cEmitter CatchClause CatchClauseParameter TransformerException e StatementExpression MethodInvocation System.out Literal "Transformer Exception in println ReturnStatement MemberReference rtf	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType VariableDeclarator ep Cast ReferenceType MemberReference elem LocalVariableDeclaration ReferenceType Collection VariableDeclarator Cast ReferenceType org ReferenceType omg ReferenceType ReferenceType UmlPackage MethodInvocation ep refOutermostPackage ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator extend Cast ReferenceType MethodInvocation it next LocalVariableDeclaration ReferenceType Collection VariableDeclarator eps MethodInvocation extend IfStatement BinaryOperation && BinaryOperation == MethodInvocation eps size Literal 1 MethodInvocation eps MemberReference elem contains BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference extend delete getUmlFactory	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation node children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child StatementExpression MethodInvocation MethodInvocation node getUserObject MemberReference node	0
MethodDeclaration Modifier public Annotation Override ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object handle IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference handle ReferenceType String BinaryOperation instanceof MemberReference handle ReferenceType Enumerator BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference handle ReferenceType String BlockStatement ReturnStatement Cast ReferenceType String MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement BlockStatement IfStatement BinaryOperation != Cast ReferenceType NamedElement MemberReference handle Literal null BlockStatement ReturnStatement Cast ReferenceType NamedElement MemberReference handle BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Enumerator BlockStatement ReturnStatement Cast ReferenceType Enumerator MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator name ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation name MethodInvocation Literal '<' append Literal '<' append LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation c IfStatement BinaryOperation instanceof MemberReference p ReferenceType EPackage BlockStatement StatementExpression MethodInvocation name MethodInvocation Literal ':' append Cast ReferenceType EPackage MemberReference p append BlockStatement StatementExpression MethodInvocation name Literal append StatementExpression MethodInvocation name MethodInvocation Literal '>' append MethodInvocation Literal '>' append MethodInvocation c getName append LocalVariableDeclaration ReferenceType Element VariableDeclarator e MethodInvocation Cast ReferenceType MemberReference handle IfStatement BinaryOperation && BinaryOperation != MemberReference e Literal null BinaryOperation instanceof MemberReference e ReferenceType NamedElement BlockStatement StatementExpression MethodInvocation name Cast ReferenceType NamedElement MemberReference e append ReturnStatement MethodInvocation name toString ReturnStatement MethodInvocation handle toString IfStatement BinaryOperation instanceof MemberReference handle ReferenceType EPackage BlockStatement ReturnStatement Cast ReferenceType EPackage MemberReference handle BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The element " MemberReference handle Literal " is not	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference target ReferenceType GeneralizableElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference source Literal " MemberReference target StatementExpression MethodInvocation MemberReference source MemberReference target LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator targetGE Cast ReferenceType GeneralizableElement MemberReference target LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator sourceGE Cast ReferenceType GeneralizableElement MemberReference source StatementExpression MethodInvocation targetGE MethodInvocation sourceGE isAbstract StatementExpression MethodInvocation targetGE MethodInvocation sourceGE isLeaf StatementExpression MethodInvocation targetGE MethodInvocation sourceGE setRoot	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection classifiers StatementExpression Cast ReferenceType MemberReference handle StatementExpression MethodInvocation classifiers Cast ReferenceType MemberReference handle removeAll StatementExpression Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getModelElement getMetaTypes	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e IfStatement BinaryOperation == MethodInvocation e Literal "name" getAttribute Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim Literal "name" getAttribute StatementExpression MethodInvocation project MemberReference	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String type ReturnStatement MethodInvocation MethodInvocation MemberReference type	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object handle FormalParameter BasicType int index IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public ReferenceType FormalParameter Modifier final ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The element must be instance of IfStatement BinaryOperation == Cast ReferenceType Element MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal "The containing package of the Literal " element must be LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator constraint MethodInvocation StatementExpression MethodInvocation constraint MethodInvocation Cast ReferenceType Element MemberReference add StatementExpression MethodInvocation MethodInvocation MemberReference constraint add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the constraint that the element StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference ReturnStatement Cast ReferenceType MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType FigText IfStatement BinaryOperation == MemberReference MethodInvocation getRole BlockStatement StatementExpression MethodInvocation MethodInvocation getRole IfStatement BinaryOperation == MemberReference MethodInvocation getRole BlockStatement StatementExpression MethodInvocation MethodInvocation getRole IfStatement BinaryOperation == MemberReference MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation BlockStatement StatementExpression SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean arg0 StatementExpression SuperMethodInvocation MemberReference arg0 setVisible IfStatement MemberReference arg0 BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation lse getSource IfStatement BinaryOperation || BinaryOperation != MemberReference src MethodInvocation table getSelectionModel BinaryOperation == MethodInvocation table getSelectedRow Literal - 1 BlockStatement ReturnStatement IfStatement MethodInvocation ! isSelected BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator oldAction MethodInvocation MethodInvocation ShortcutMgr MethodInvocation getText IfStatement BinaryOperation != MemberReference oldAction Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation getText MethodInvocation oldAction format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane This MemberReference t MemberReference t MemberReference JOptionPane YES_NO_OPTION showConfirmDialog SwitchStatement MemberReference response SwitchStatementCase MemberReference JOptionPane YES_OPTION StatementExpression MethodInvocation oldAction Literal null StatementExpression MethodInvocation table MemberReference oldAction Literal - 1 Literal - 1 setValueAt BreakStatement SwitchStatementCase MemberReference JOptionPane NO_OPTION StatementExpression MethodInvocation table MethodInvocation This getSelectionModel StatementExpression MethodInvocation table MethodInvocation MemberReference lastRowSelected MemberReference lastRowSelected setSelectionInterval getSelectionModel StatementExpression MethodInvocation table MethodInvocation This addListSelectionListener getSelectionModel ReturnStatement StatementExpression MethodInvocation MemberReference ArraySelector MethodInvocation table getSelectedRow actions StatementExpression Assignment MemberReference lastRowSelected MethodInvocation table getSelectedRow =	1
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType File file FormalParameter ReferenceType ProgressMgr progressMgr OpenException InterruptedException LocalVariableDeclaration ReferenceType File VariableDeclarator combinedFile Literal null TryStatement StatementExpression Assignment MemberReference combinedFile MethodInvocation File Literal Literal createTempFile = StatementExpression MethodInvocation LOG BinaryOperation + Literal old style sub files into new style file " MethodInvocation combinedFile getAbsolutePath info StatementExpression MethodInvocation combinedFile deleteOnExit LocalVariableDeclaration ReferenceType String VariableDeclarator encoding MethodInvocation getEncoding LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator stream ClassCreator ReferenceType FileOutputStream MemberReference combinedFile LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference stream MemberReference encoding StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + Literal "<?xml version = " Literal = \"" MemberReference encoding Literal "\" println StatementExpression MethodInvocation MemberReference file MemberReference encoding MemberReference writer StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation MemberReference file Literal "profile" MemberReference encoding MemberReference writer StatementExpression MethodInvocation MemberReference file MemberReference encoding MemberReference writer StatementExpression MethodInvocation MemberReference file MemberReference encoding MemberReference writer StatementExpression MethodInvocation MemberReference file Literal MemberReference encoding MemberReference writer StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation writer Literal println StatementExpression MethodInvocation writer close StatementExpression MethodInvocation LOG Literal "Completed files" info CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e ReturnStatement MemberReference combinedFile	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getNamespace getFacade MemberReference element	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier protected FormalParameter BasicType boolean v StatementExpression Assignment MemberReference MemberReference v =	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier private FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation node children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child StatementExpression MethodInvocation MethodInvocation node getUserObject MemberReference node	0
MethodDeclaration Modifier public final ReferenceType String getContent IfStatement MemberReference BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement ReturnStatement MemberReference ReturnStatement Literal "" ReturnStatement Literal null	0
MethodDeclaration Modifier private ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation nodeRows size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MethodInvocation nodeRows MemberReference i get BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator children MethodInvocation node IfStatement BinaryOperation > MethodInvocation children size Literal 0 BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType Point BinaryOperation - MethodInvocation MemberReference children BinaryOperation / MethodInvocation node MemberReference width getSize Literal 2 MethodInvocation node MemberReference y getLocation setLocation	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType AssociationEnd FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator a Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation == MemberReference a Literal null BlockStatement ReturnStatement MethodInvocation Collections LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType AssociationEnd VariableDeclarator allEnds MethodInvocation a getConnection IfStatement BinaryOperation == MemberReference allEnds Literal null BlockStatement ReturnStatement MethodInvocation Collections StatementExpression Assignment MemberReference allEnds ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AssociationEnd MemberReference allEnds = StatementExpression MethodInvocation allEnds MemberReference handle remove ReturnStatement MemberReference allEnds CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Point pt LocalVariableDeclaration BasicType int VariableDeclarator nRow MethodInvocation MemberReference pt x MemberReference pt y IfStatement BinaryOperation < MemberReference nRow Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation getBounds StatementExpression Assignment MemberReference nRow TernaryExpression BinaryOperation <= BinaryOperation + MemberReference pt y MemberReference y MemberReference TernaryExpression BinaryOperation <= MemberReference nRow Literal 0 Literal 0 BinaryOperation - MemberReference nRow Literal 1 TernaryExpression BinaryOperation < MemberReference nRow BinaryOperation - MethodInvocation getRowCount Literal 1 BinaryOperation + MemberReference nRow Literal 1 MemberReference nRow = StatementExpression MethodInvocation MemberReference nRow	1
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference scope MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference DiagramAppearance getBoolean setSelected StatementExpression Assignment MemberReference MethodInvocation DiagramAppearance MethodInvocation getInstance = StatementExpression Assignment MemberReference MethodInvocation Configuration MemberReference DiagramAppearance getInteger = StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal true getBoolean setSelected StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal 1 getInteger setSelectedIndex IfStatement BinaryOperation == MemberReference scope MemberReference BlockStatement AssertStatement BinaryOperation != MemberReference p Literal null LocalVariableDeclaration ReferenceType VariableDeclarator ps MethodInvocation p getProjectSettings LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator ds MethodInvocation ps getDefaultDiagramSettings StatementExpression MethodInvocation MethodInvocation ds setSelected StatementExpression Assignment MemberReference MethodInvocation ds = StatementExpression Assignment MemberReference MethodInvocation ds = StatementExpression MethodInvocation MethodInvocation ! ds setSelected StatementExpression MethodInvocation MethodInvocation ds setSelectedIndex	0
MethodDeclaration Modifier private LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 StatementExpression Assignment MemberReference yPos BinaryOperation / MethodInvocation Literal 2 = ForStatement EnhancedForControl VariableDeclaration ReferenceType NodeRow VariableDeclarator row MemberReference nodeRows BlockStatement StatementExpression Assignment MemberReference xPos MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator rowHeight Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference row BlockStatement StatementExpression MethodInvocation MemberReference node StatementExpression Assignment MemberReference rowHeight MethodInvocation Math MemberReference rowHeight MethodInvocation node MemberReference height getSize max = StatementExpression Assignment MemberReference yPos BinaryOperation + MemberReference rowHeight MethodInvocation += StatementExpression MethodInvocation	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation Cast ReferenceType Property MemberReference handle equals	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType ArgoNotationEvent event FormalParameter Modifier final ReferenceType ArgoNotationEventListener listener IfStatement MethodInvocation SwingUtilities isEventDispatchThread BlockStatement StatementExpression MethodInvocation MemberReference event MemberReference listener BlockStatement StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference event MemberReference listener invokeLater	1
MethodDeclaration Modifier public final BasicType boolean addTag FormalParameter BasicType int iTagType FormalParameter ReferenceType String sTagValue IllegalArgumentException SwitchStatement MemberReference iTagType SwitchStatementCase TAG_TYPE_PARAM LocalVariableDeclaration ReferenceType ParamList VariableDeclarator alParams Cast ReferenceType ParamList MethodInvocation tmTags Literal get IfStatement BinaryOperation != MemberReference alParams Literal null BlockStatement LocalVariableDeclaration ReferenceType ParamTag VariableDeclarator ClassCreator ReferenceType ParamTag IfStatement MethodInvocation MemberReference sTagValue setContent BlockStatement ReturnStatement MethodInvocation alParams MemberReference add ReturnStatement Literal false BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal not add a tag of " Literal "type " MemberReference iTagType Literal " with value '" MemberReference sTagValue Literal "' to the ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier private BasicType boolean equal FormalParameter ReferenceType Expression expr1 FormalParameter ReferenceType Expression expr2 IfStatement BinaryOperation == MemberReference expr1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference expr2 Literal null BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation expr1 MemberReference expr2 equals	1
MethodDeclaration Modifier public FormalParameter BasicType double FormalParameter BasicType int StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public BasicType int indexOf FormalParameter ReferenceType Object o LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator IfStatement BinaryOperation == MemberReference o Literal null BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement IfStatement BinaryOperation == MemberReference o MethodInvocation it next BlockStatement ReturnStatement MemberReference index StatementExpression MemberReference ++ index BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation o MethodInvocation it next equals BlockStatement ReturnStatement MemberReference index StatementExpression MemberReference ++ index ReturnStatement Literal - 1	1
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean ReturnStatement MethodInvocation npSettings	0
MethodDeclaration Annotation Override ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public endElement FormalParameter BasicType int nameCode TransformerException StatementExpression MethodInvocation rtfEmitter MemberReference nameCode endElement	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Association FormalParameter ReferenceType Object FormalParameter ReferenceType Object aggregationKind1 FormalParameter ReferenceType Object FormalParameter ReferenceType Object aggregationKind2 FormalParameter ReferenceType Boolean unidirectional IfStatement BinaryOperation != MemberReference unidirectional Literal null BlockStatement ReturnStatement MethodInvocation MemberReference MemberReference ! unidirectional MemberReference aggregationKind1 MemberReference Literal true MemberReference aggregationKind2 Literal null BlockStatement ReturnStatement MethodInvocation MemberReference Literal null MemberReference aggregationKind1 MemberReference Literal null MemberReference aggregationKind2 Literal null	1
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 0L Literal Literal 256L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MethodInvocation toArray	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement This MemberReference saveAction MethodInvocation	0
MethodDeclaration Modifier private ReferenceType Class loadClass FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation Class MemberReference name forName ReturnStatement MemberReference cls CatchClause CatchClauseParameter ClassNotFoundException ignore StatementExpression MethodInvocation LOG BinaryOperation + Literal Could not find class:" MemberReference name debug ReturnStatement Literal null	1
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression SuperMethodInvocation MemberReference oldOwner MemberReference newOwner updateListeners IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference newOwner getSubmachine getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation Literal false Literal Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MethodInvocation cover	0
MethodDeclaration Modifier public startElement FormalParameter BasicType int nameCode FormalParameter ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes attributes FormalParameter BasicType int namespaces FormalParameter BasicType int nscount TransformerException LocalVariableDeclaration BasicType int VariableDeclarator thisFingerprint MethodInvocation namePool MemberReference nameCode getFingerprint LocalVariableDeclaration BasicType boolean VariableDeclarator isLink BinaryOperation || BinaryOperation == MemberReference thisFingerprint MemberReference BinaryOperation == MemberReference thisFingerprint MemberReference IfStatement MemberReference isLink BlockStatement StatementExpression MemberReference ++ StatementExpression Assignment MemberReference tryAgain BinaryOperation || MemberReference tryAgain MemberReference inSkip = IfStatement BinaryOperation && BinaryOperation && MemberReference isLink BinaryOperation > MemberReference Literal 1 MemberReference ! inSkip BlockStatement StatementExpression Assignment MemberReference inSkip Literal true = StatementExpression Assignment MemberReference saveStack ClassCreator ReferenceType Stack = LocalVariableDeclaration ReferenceType Stack VariableDeclarator tempStack ClassCreator ReferenceType Stack WhileStatement MethodInvocation ! elementStack empty BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator elem Cast ReferenceType StartElementInfo MethodInvocation elementStack pop StatementExpression MethodInvocation rtfEmitter MethodInvocation elem endElement StatementExpression MethodInvocation saveStack MemberReference elem push StatementExpression MethodInvocation tempStack MemberReference elem push WhileStatement MethodInvocation ! tempStack empty BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator elem Cast ReferenceType StartElementInfo MethodInvocation tempStack pop StatementExpression MethodInvocation elementStack MemberReference elem push IfStatement MemberReference inSkip BlockStatement StatementExpression MemberReference ++ BlockStatement StatementExpression MethodInvocation rtfEmitter MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount startElement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator sei ClassCreator ReferenceType StartElementInfo MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount StatementExpression MethodInvocation elementStack MemberReference sei push	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression Assignment MemberReference MemberReference oldValid =	0
MethodDeclaration Modifier public final parameter_list RecognitionException TokenStreamException StatementExpression MethodInvocation BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ELLIPSIS BlockStatement StatementExpression MethodInvocation MemberReference ELLIPSIS match BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public notifyObservers StatementExpression MethodInvocation StatementExpression SuperMethodInvocation notifyObservers	1
MethodDeclaration Modifier private logError FormalParameter ReferenceType String message FormalParameter ReferenceType String identifier StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + MemberReference message Literal " : " MemberReference identifier warn	1
MethodDeclaration Modifier public ReferenceType Object getImportedElement FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType MemberReference	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Class getColumnClass FormalParameter BasicType int col SwitchStatement MemberReference col SwitchStatementCase Literal 0 ReturnStatement ClassReference ReferenceType String SwitchStatementCase Literal 1 ReturnStatement ClassReference ReferenceType Boolean SwitchStatementCase ReturnStatement Literal null	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation Model MethodInvocation MemberReference ns getStateMachinesFactory	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class VariableDeclarator clazz MethodInvocation IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation clazz MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType BlockStatement StatementExpression MethodInvocation clazz Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference owner StatementExpression MethodInvocation MethodInvocation MemberReference clazz add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object f IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference f ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier private ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation MemberReference actions Literal ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation group	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression MethodInvocation msg MemberReference s setText StatementExpression MethodInvocation MethodInvocation getBounds	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object client FormalParameter ReferenceType Object FormalParameter ReferenceType List arguments LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Dependency VariableDeclarator Cast ReferenceType ModelElement MemberReference client ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dep MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference dep ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is already client of another IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator params Cast ReferenceType ModelElement MemberReference IfStatement BinaryOperation != MethodInvocation params size MethodInvocation arguments size BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal of arguments doesn't match number of LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType VariableDeclarator ita MethodInvocation arguments iterator ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator param MemberReference params BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation ita next IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MethodInvocation getModelElement Literal null BlockStatement ContinueStatement IfStatement MethodInvocation ! param getParameter BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type of argument doesn't match type of parameter" LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation MethodInvocation Cast ReferenceType ModelElement MemberReference client add StatementExpression MethodInvocation MethodInvocation Cast ReferenceType ModelElement MemberReference add getSupplier IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference arguments addAll ReturnStatement MemberReference	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType g ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation getPseudostate MethodInvocation StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Rectangle ReturnStatement MethodInvocation getBounds	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType getCollaborationsHelper IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference source ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference target ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator targetME Cast ReferenceType ModelElement MemberReference target LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator sourceME Cast ReferenceType ModelElement MemberReference source StatementExpression MethodInvocation targetME MethodInvocation sourceME getName setName StatementExpression MethodInvocation MemberReference source MemberReference target StatementExpression MethodInvocation targetME MethodInvocation sourceME StatementExpression MethodInvocation targetME MethodInvocation sourceME getVisibility setVisibility StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference source MemberReference target getExtensionMechanismsFactory IfStatement MethodInvocation ! sourceME MethodInvocation isEmpty getStereotype BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator s MethodInvocation sourceME getStereotype BlockStatement StatementExpression MethodInvocation targetME MethodInvocation MemberReference s add getStereotype	1
MethodDeclaration Modifier private FormalParameter ReferenceType String dirname LocalVariableDeclaration ReferenceType File VariableDeclarator extensionDir ClassCreator ReferenceType File MemberReference dirname IfStatement MethodInvocation extensionDir isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation extensionDir ClassCreator ReferenceType listFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator file MemberReference files BlockStatement LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarfile Literal null TryStatement StatementExpression Assignment MemberReference jarfile ClassCreator ReferenceType JarFile MemberReference file = IfStatement BinaryOperation != MemberReference jarfile Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classloader ClassCreator ReferenceType URLClassLoader ArrayCreator ReferenceType URL ArrayInitializer MethodInvocation file MethodInvocation toURL toURI MethodInvocation MethodInvocation getClassLoader getClass TryStatement StatementExpression MethodInvocation MemberReference classloader MemberReference file processJarFile CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG Literal "The class is not found." MemberReference e error ReturnStatement CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation LOG BinaryOperation + Literal "Cannot open Jar file " MemberReference file MemberReference ioe error	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index MethodInvocation = IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference TOP BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation ReturnStatement MethodInvocation Model MethodInvocation	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value setNavigable getCoreHelper	0
MethodDeclaration Modifier private ReferenceType Set TypeArgument ReferenceType Critic FormalParameter ReferenceType Attributes attr FormalParameter ReferenceType ClassLoader classloader LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Critic VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Critic LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attr Literal getValue IfStatement BinaryOperation != MemberReference value Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference value Literal "," WhileStatement MethodInvocation st hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entry MethodInvocation st MethodInvocation trim nextToken TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cl MethodInvocation classloader MemberReference entry loadClass LocalVariableDeclaration ReferenceType Critic VariableDeclarator critic Cast ReferenceType Critic MethodInvocation cl newInstance StatementExpression MethodInvocation ret MemberReference critic add CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error loading class: " MemberReference entry MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error class: " MemberReference entry MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private FormalParameter ReferenceType FigEdge edge FormalParameter ReferenceType FigNode source StatementExpression MethodInvocation edge MemberReference source setSourcePortFig StatementExpression MethodInvocation edge MemberReference source setSourceFigNode	0
MethodDeclaration Modifier public Annotation Override ReferenceType String placeString LocalVariableDeclaration ReferenceType String VariableDeclarator placeString MethodInvocation IfStatement BinaryOperation == MemberReference placeString Literal null BlockStatement StatementExpression Assignment MemberReference placeString Literal "new = ReturnStatement MemberReference placeString	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Fig VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation This StatementExpression SuperMethodInvocation MemberReference t LocalVariableDeclaration ReferenceType Fig VariableDeclarator newTarget MethodInvocation IfStatement BinaryOperation != MemberReference newTarget Literal null BlockStatement StatementExpression MethodInvocation newTarget This addPropertyChangeListener	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o getFacade MethodInvocation Model MethodInvocation MethodInvocation getElementResidences MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e StatementExpression Assignment MemberReference critic Literal null = StatementExpression Assignment MemberReference offenders Literal null =	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation AssertStatement MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference state getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator toBeRemoved ClassCreator ReferenceType ArrayList MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference selected BlockStatement IfStatement MethodInvocation MemberReference o contains BlockStatement StatementExpression MethodInvocation toBeRemoved MemberReference o remove BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference state MemberReference o getStateMachinesHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference toBeRemoved BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference state MemberReference o getStateMachinesHelper	1
MethodDeclaration Modifier public static ReferenceType String getComments FormalParameter ReferenceType Object o FormalParameter ReferenceType String header FormalParameter ReferenceType String prefix FormalParameter ReferenceType String footer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MemberReference header Literal null BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference LINE_SEPARATOR append MemberReference header append IfStatement MethodInvocation Model MethodInvocation MemberReference o isAUMLElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference o getComments getFacade IfStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nlcount Literal 2 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Model MethodInvocation MemberReference c getName getFacade StatementExpression Assignment MemberReference nlcount MethodInvocation MemberReference result MemberReference prefix MemberReference s TernaryExpression BinaryOperation > MemberReference nlcount Literal 1 Literal 0 Literal 1 = BlockStatement ReturnStatement Literal "" BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation != MemberReference footer Literal null BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference LINE_SEPARATOR append MemberReference footer append ReturnStatement MethodInvocation result toString	1
MethodDeclaration FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object oldValue FormalParameter ReferenceType Object newValue LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement IfStatement BinaryOperation == MemberReference event Literal null BlockStatement StatementExpression Assignment MemberReference event ClassCreator ReferenceType PropertyChangeEvent This MemberReference propertyName MemberReference oldValue MemberReference newValue = StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners StatementExpression Assignment MemberReference event Literal null =	0
MethodDeclaration Modifier private IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MemberReference BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference append MemberReference s append StatementExpression MethodInvocation Configuration MemberReference MethodInvocation buf toString setString	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object r FormalParameter ReferenceType String n LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference r getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation c iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msg MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference msg IfStatement MethodInvocation MemberReference MemberReference n BlockStatement ReturnStatement MemberReference msg ReturnStatement Literal null	0
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public final FormalParameter ReferenceType key FormalParameter ReferenceType p IfStatement BinaryOperation == MemberReference pcl Literal null BlockStatement StatementExpression Assignment MemberReference pcl ClassCreator ReferenceType This = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "addPropertyChangeListener(" MethodInvocation key getKey Literal ")" debug StatementExpression MethodInvocation pcl MethodInvocation key getKey MemberReference p addPropertyChangeListener	1
MethodDeclaration Modifier public ReferenceType Collection loadModel FormalParameter ReferenceType reference ProfileException StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Loading profile from ZIP '" MethodInvocation reference getPath Literal "'" info IfStatement MethodInvocation ! reference MethodInvocation Literal endsWith getPath BlockStatement ThrowStatement ClassCreator ReferenceType ProfileException Literal "Profile could not be LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator modelFile ClassCreator ReferenceType File MethodInvocation reference getPath LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation modelFile getName LocalVariableDeclaration ReferenceType String VariableDeclarator extension MethodInvocation filename MethodInvocation filename Literal '.' indexOf MethodInvocation filename Literal '.' lastIndexOf substring LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation modelFile getParent IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression MethodInvocation System Literal MemberReference path setProperty TryStatement StatementExpression Assignment MemberReference is MethodInvocation MethodInvocation modelFile MethodInvocation toURL toURI MemberReference extension openZipStreamAt = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception while loading profile '" MethodInvocation reference getPath Literal "'" MemberReference e error ThrowStatement ClassCreator ReferenceType ProfileException MemberReference e CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception while loading profile '" MethodInvocation reference getPath Literal "'" MemberReference e error ThrowStatement ClassCreator ReferenceType ProfileException MemberReference e IfStatement BinaryOperation == MemberReference is Literal null BlockStatement ThrowStatement ClassCreator ReferenceType ProfileException Literal "Profile could not be ReturnStatement SuperMethodInvocation MemberReference is MethodInvocation reference loadModel	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator result SuperMethodInvocation toString IfStatement MethodInvocation result Literal startsWith BlockStatement StatementExpression Assignment MemberReference result MethodInvocation result Literal 3 substring = ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference argument	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator status MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation e getText format StatementExpression MethodInvocation MemberReference status	0
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType o ReturnStatement This	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String target FormalParameter ReferenceType StringBuilder sb LocalVariableDeclaration ReferenceType String VariableDeclarator dot Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MemberReference target BlockStatement StatementExpression MethodInvocation sb BinaryOperation + MemberReference dot MemberReference s append StatementExpression Assignment MemberReference dot Literal "." =	1
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation MemberReference setText StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator text ClassCreator ReferenceType StringBuilder IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade BlockStatement StatementExpression MethodInvocation text MethodInvocation Literal "// append MemberReference INDENT append ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator assocEnd MethodInvocation Model MethodInvocation MemberReference element getAssociationEnds getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference assocEnd IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation text MemberReference INDENT append StatementExpression MethodInvocation text MethodInvocation MemberReference generateAssociationEnd append ReturnStatement MethodInvocation text MethodInvocation toString Literal "\n\n" append	0
MethodDeclaration Modifier public Annotation Override StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation TryStatement StatementExpression SuperMethodInvocation LocalVariableDeclaration Modifier final ReferenceType FigCompartmentBox VariableDeclarator fcb MethodInvocation IfStatement BinaryOperation != MemberReference fcb Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation fcb MethodInvocation Model MethodInvocation getAttribute getMetaTypes StatementExpression MethodInvocation MethodInvocation isVisible setSelected StatementExpression Assignment MemberReference MethodInvocation fcb MethodInvocation Model MethodInvocation getOperation getMetaTypes = StatementExpression MethodInvocation MethodInvocation isVisible setSelected StatementExpression Assignment MemberReference Literal false = LocalVariableDeclaration ReferenceType Fig VariableDeclarator target MemberReference IfStatement BinaryOperation != Cast ReferenceType MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType MemberReference target = LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation target getBounds LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation IfStatement MethodInvocation ! MemberReference equals BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference x Literal "," MemberReference y Literal "," MemberReference width Literal "," MemberReference height setText	0
MethodDeclaration Modifier private FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference MemberReference MemberReference w MemberReference h = StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation MemberReference addFig	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator a ClassCreator ReferenceType MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation a MemberReference SHORT_DESCRIPTION MethodInvocation a MemberReference Action NAME getValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation Literal StatementExpression MethodInvocation a MemberReference MemberReference icon StatementExpression MethodInvocation a MemberReference MemberReference Roles ReturnStatement MemberReference a	0
MethodDeclaration Modifier public Annotation Override addEdge FormalParameter ReferenceType Object edge StatementExpression MethodInvocation LOG Literal "adding class debug IfStatement MethodInvocation ! MemberReference edge canAddEdge BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference edge add getEdges IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference edge isAModelElement getFacade MethodInvocation ! Model MethodInvocation MemberReference edge isAAssociationEnd getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference edge addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference edge	1
MethodDeclaration Modifier public ReferenceType SuffixFilter ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object stereotype FormalParameter ReferenceType Object ns ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override StatementExpression Assignment MemberReference stringField ClassCreator ReferenceType = StatementExpression MethodInvocation stringField MethodInvocation This getDocument StatementExpression MethodInvocation stringField MethodInvocation LookAndFeelMgr MethodInvocation getInstance setFont StatementExpression MethodInvocation stringField Literal 2 setRows StatementExpression Assignment MemberReference ClassCreator ReferenceType JScrollPane MemberReference stringField =	1
MethodDeclaration Modifier protected buildModelList StatementExpression SuperMethodInvocation buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getBase getFacade addElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference StatementExpression MethodInvocation MemberReference key MemberReference MemberReference fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public static ReferenceType getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType = ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType List results FormalParameter ReferenceType List StatementExpression Assignment MemberReference MemberReference results = StatementExpression Assignment MemberReference diagrams MemberReference = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be a ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle	0
MethodDeclaration Modifier public TryStatement StatementExpression MethodInvocation cl CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal already deleted " MemberReference cl warn	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object InvocationTargetException IllegalAccessException LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation MemberReference targetObject Cast ReferenceType Object Literal null invoke IfStatement BinaryOperation == MemberReference result Literal null BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation Boolean MethodInvocation booleanValue MethodInvocation result toString valueOf	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object association IfStatement BinaryOperation instanceof MemberReference association ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Association MemberReference association BlockStatement IfStatement BinaryOperation == MethodInvocation p MemberReference AggregationKind BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier protected FormalParameter ReferenceType OutputStream outStream FormalParameter ReferenceType ce FormalParameter ReferenceType Rectangle IOException LocalVariableDeclaration ReferenceType Layer VariableDeclarator layer MethodInvocation ce MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bounds ClassCreator ReferenceType Rectangle ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation layer getContents BlockStatement StatementExpression Assignment MemberReference bounds x MethodInvocation Math MemberReference bounds x MethodInvocation fig getX min = StatementExpression Assignment MemberReference bounds y MethodInvocation Math MemberReference bounds y MethodInvocation fig getY min = StatementExpression Assignment MemberReference bounds width MethodInvocation Math MemberReference bounds width BinaryOperation + MethodInvocation fig getX MethodInvocation fig getWidth max = StatementExpression Assignment MemberReference bounds height MethodInvocation Math MemberReference bounds height BinaryOperation + MethodInvocation fig getY MethodInvocation fig getHeight max = StatementExpression Assignment MemberReference bounds width MemberReference bounds x -= StatementExpression Assignment MemberReference bounds height MemberReference bounds y -= LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Document VariableDeclarator document MethodInvocation Literal null Literal Literal null LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference document StatementExpression MethodInvocation ce MemberReference print LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true LocalVariableDeclaration ReferenceType Writer VariableDeclarator out ClassCreator ReferenceType OutputStreamWriter MemberReference outStream Literal "UTF-8" StatementExpression MethodInvocation MemberReference out MemberReference stream	0
MethodDeclaration Modifier protected updateElementListeners FormalParameter ReferenceType Set TypeArgument ReferenceType Object listenerSet LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator removes ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference listeners StatementExpression MethodInvocation removes MemberReference listenerSet removeAll StatementExpression MethodInvocation MemberReference removes LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator adds ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference listenerSet StatementExpression MethodInvocation adds MemberReference listeners removeAll StatementExpression MethodInvocation MemberReference adds addElementListeners	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection features IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator Literal null IfStatement BinaryOperation instanceof MemberReference features ReferenceType List BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType List MemberReference features = BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType ArrayList MemberReference features = StatementExpression Cast ReferenceType Classifier MemberReference handle StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	1
MethodDeclaration Modifier public ReferenceType List ReturnStatement Literal null	1
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation impl MemberReference handle MemberReference index MemberReference parameter addParameter	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference item	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object feature StatementExpression SuperMethodInvocation MemberReference cls MemberReference feature StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration ReferenceType Collection LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MemberReference BlockStatement IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation add BlockStatement StatementExpression MethodInvocation MethodInvocation delete StatementExpression MethodInvocation clear ReturnStatement MemberReference	0
MethodDeclaration Modifier public setText FormalParameter ReferenceType String text StatementExpression SuperMethodInvocation MethodInvocation NotationUtilityUml MemberReference text MethodInvocation MethodInvocation MethodInvocation getSettings setText StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Node	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object trans ReturnStatement MethodInvocation impl MemberReference trans	0
MethodDeclaration Modifier private final FormalParameter ReferenceType Object modelElement Exception IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" StatementExpression Assignment MemberReference objDocBlock ClassCreator ReferenceType DocBlock = StatementExpression Assignment MemberReference objModelElement MemberReference modelElement = StatementExpression Assignment MemberReference iDocBlockType MemberReference = StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_PACKAGE enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_SUBPACKAGE enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_STATIC enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ABSTRACT enableTag StatementExpression MethodInvocation objDocBlock BinaryOperation + Literal "Short of class " MethodInvocation NameGenerator MemberReference modelElement generateClassifierName setDefaultDescription StatementExpression MethodInvocation objDocBlock MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade setTags IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAbstract getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ABSTRACT Literal "true" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPublic getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "public" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isProtected getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "protected" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPrivate getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "private" setTag LocalVariableDeclaration ReferenceType String VariableDeclarator sPackageName MethodInvocation NameGenerator MemberReference modelElement generatePackageName IfStatement BinaryOperation && BinaryOperation != MemberReference sPackageName Literal null BinaryOperation != MemberReference sPackageName Literal "" BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator iFirstUnderscore MethodInvocation sPackageName Literal "_" indexOf IfStatement BinaryOperation == MemberReference iFirstUnderscore Literal - 1 BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_PACKAGE MemberReference sPackageName setTag BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_PACKAGE MethodInvocation sPackageName Literal 0 MemberReference iFirstUnderscore substring setTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_SUBPACKAGE MethodInvocation sPackageName BinaryOperation + MemberReference iFirstUnderscore Literal 1 substring setTag	1
MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement MethodInvocation mee MethodInvocation Literal equals getPropertyName BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator IfStatement BinaryOperation <= MemberReference b Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal "*" = BlockStatement StatementExpression Assignment MemberReference MethodInvocation String MemberReference b valueOf = StatementExpression MethodInvocation MemberReference setText StatementExpression MethodInvocation StatementExpression MethodInvocation	1
MethodDeclaration Modifier static BasicType boolean FormalParameter ReferenceType ReturnStatement MethodInvocation MemberReference remove	0
MethodDeclaration Modifier public BasicType boolean isAUMLElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType Element BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference handle ReferenceType Expression BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity BinaryOperation instanceof MemberReference handle ReferenceType MultiplicityRange BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 4593671619915808749L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType String arg LocalVariableDeclaration BasicType int VariableDeclarator lower Literal 1 VariableDeclarator upper Literal 1 IfStatement Literal MethodInvocation MethodInvocation arg trim equals "*" BlockStatement StatementExpression Assignment MemberReference lower Literal 0 = StatementExpression Assignment MemberReference upper Literal - 1 = IfStatement MethodInvocation arg Literal ".." contains BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pieces MethodInvocation arg MethodInvocation Literal split trim IfStatement BinaryOperation > MemberReference pieces length Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Cast ReferenceType String MemberReference arg StatementExpression Assignment MemberReference lower MethodInvocation Integer MemberReference ArraySelector Literal 0 pieces parseInt = IfStatement Literal MethodInvocation MemberReference ArraySelector Literal 1 pieces equals "*" BlockStatement StatementExpression Assignment MemberReference upper Literal - 1 = BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation Integer MemberReference ArraySelector Literal 1 pieces parseInt = IfStatement MethodInvocation arg Literal "_" contains BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pieces MethodInvocation arg MethodInvocation Literal "_" split trim IfStatement BinaryOperation > MemberReference pieces length Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Cast ReferenceType String MemberReference arg StatementExpression Assignment MemberReference lower MethodInvocation Integer MemberReference ArraySelector Literal 0 pieces parseInt = IfStatement BinaryOperation || Literal MethodInvocation MemberReference ArraySelector Literal 1 pieces equals "*" Literal MethodInvocation MemberReference ArraySelector Literal 1 pieces equals BlockStatement StatementExpression Assignment MemberReference upper Literal - 1 = BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation Integer MemberReference ArraySelector Literal 1 pieces parseInt = BlockStatement StatementExpression Assignment MemberReference lower MethodInvocation Integer MemberReference arg parseInt = StatementExpression Assignment MemberReference upper MemberReference lower = ReturnStatement ArrayCreator BasicType int ArrayInitializer MemberReference lower MemberReference upper	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Operation FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType Classifier MemberReference classifier	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String propertyName IfStatement MethodInvocation propertyName Literal "name" equals BlockStatement ReturnStatement Literal of diagram may not exist ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Override LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getOwner IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference moveToTrash getProject ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation getFigs BlockStatement StatementExpression Cast ReferenceType Fig MemberReference fig StatementExpression SuperMethodInvocation	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier private static LocalVariableDeclaration ReferenceType VariableDeclarator cl LocalVariableDeclaration ReferenceType String VariableDeclarator StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getUMLClass getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference BinaryOperation + Literal Literal "values" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference BinaryOperation + Literal Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getAssociation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getInterface getMetaTypes MemberReference cl register IfStatement MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "1" startsWith getFacade BlockStatement StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference BinaryOperation + Literal Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getInstance getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference BinaryOperation + Literal Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference cl register	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference modelElement isAAttribute getFacade MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation MemberReference type ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAUseCase getFacade	0
MethodDeclaration Modifier private FormalParameter ReferenceType List TypeArgument ReferenceType listeners FormalParameter ReferenceType Object element FormalParameter ReferenceType String propName FormalParameter ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType List TypeArgument ReferenceType register LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator list MethodInvocation register MemberReference element get IfStatement BinaryOperation != MemberReference list Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator l MemberReference list BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference propName Literal null BinaryOperation == MethodInvocation l getProperties Literal null MethodInvocation l MethodInvocation MemberReference propName contains getProperties BlockStatement StatementExpression MethodInvocation listeners MethodInvocation l getListener add	0
MethodDeclaration Modifier private openClosedElements FormalParameter ReferenceType DOMBuilder rtf SAXException WhileStatement MethodInvocation ! tempStack empty BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator elem Cast ReferenceType Node MethodInvocation tempStack pop LocalVariableDeclaration ReferenceType String VariableDeclarator ns MethodInvocation elem getNamespaceURI LocalVariableDeclaration ReferenceType String VariableDeclarator localName MethodInvocation elem getLocalName LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType Element MemberReference elem LocalVariableDeclaration ReferenceType NamedNodeMap VariableDeclarator domAttr MethodInvocation elem getAttributes LocalVariableDeclaration ReferenceType AttributesImpl VariableDeclarator attr ClassCreator ReferenceType AttributesImpl ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator acount Literal 0 BinaryOperation < MemberReference acount MethodInvocation domAttr getLength MemberReference ++ acount BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator a MethodInvocation domAttr MemberReference acount item IfStatement BinaryOperation || BinaryOperation && BinaryOperation || BinaryOperation == MemberReference ns Literal null BinaryOperation == MemberReference ns Literal MethodInvocation localName Literal equalsIgnoreCase MethodInvocation a getLocalName BlockStatement BlockStatement StatementExpression MethodInvocation attr MethodInvocation a getNamespaceURI MethodInvocation a getLocalName MethodInvocation a getNodeName Literal "CDATA" MethodInvocation a getNodeValue addAttribute StatementExpression MethodInvocation rtf MemberReference ns MemberReference localName MemberReference name MemberReference attr startElement StatementExpression MethodInvocation elementStack MemberReference elem push StatementExpression Assignment MemberReference tempStack Literal null =	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference selected Literal false =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file ReturnStatement MethodInvocation MemberReference file MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType ReferenceType UmlPackage VariableDeclarator pkg MethodInvocation modelImpl MemberReference name IfStatement BinaryOperation == MemberReference pkg Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator packages MethodInvocation pkg MethodInvocation MethodInvocation getModelManagement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator topLevelPackages ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator pack MemberReference packages BlockStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference pack getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation topLevelPackages MemberReference pack add ReturnStatement MemberReference topLevelPackages	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dependency MethodInvocation StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference add StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference dependency add	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation = LocalVariableDeclaration ReferenceType ListSet VariableDeclarator allOffenders MethodInvocation Designer MethodInvocation MethodInvocation getOffenders SynchronizedStatement MemberReference allOffenders ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator off MemberReference allOffenders BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference off = LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenders MethodInvocation item getOffenders IfStatement MethodInvocation ! offenders MemberReference off contains BlockStatement ContinueStatement StatementExpression MemberReference ++ IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator ArrayCreator BasicType int MemberReference LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference StatementExpression Assignment MemberReference Literal 0 = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenders MethodInvocation item getOffenders IfStatement MethodInvocation ! offenders MemberReference off contains BlockStatement ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference MethodInvocation MemberReference off MemberReference item = StatementExpression Assignment MemberReference ArraySelector MemberReference children MemberReference item = StatementExpression MemberReference ++ StatementExpression MethodInvocation This MemberReference path MemberReference MemberReference children	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s =	0
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getOwner IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement Cast ReferenceType CommentEdge MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator paneBtn ClassCreator ReferenceType ClassCreator ReferenceType LocalVariableDeclaration ReferenceType JButton VariableDeclarator btnApply ClassCreator ReferenceType JButton MethodInvocation Translator Literal localize StatementExpression MethodInvocation btnApply ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration BasicType boolean VariableDeclarator bContinue Literal true IfStatement MethodInvocation ! curLanguage MethodInvocation MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues equals getText BlockStatement StatementExpression Assignment MemberReference bContinue MethodInvocation MemberReference tabValues MethodInvocation curLanguage getText isUniqueLanguage = IfStatement MemberReference bContinue BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation * Literal 2 MemberReference currentIndex tabValues MethodInvocation curBody getText = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues MethodInvocation curLanguage getText = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator ClassCreator ReferenceType JButton Literal "+" StatementExpression MethodInvocation ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration BasicType int VariableDeclarator num MethodInvocation MemberReference tabValues getEmptyLanguage IfStatement BinaryOperation == MemberReference num Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newTabValues ArrayCreator ReferenceType String BinaryOperation + MemberReference tabValues length Literal 2 StatementExpression MethodInvocation System MemberReference tabValues Literal 0 MemberReference newTabValues Literal 0 MemberReference tabValues length arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference tabValues length newTabValues Literal "" = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference tabValues length Literal 1 newTabValues Literal "" = StatementExpression MethodInvocation model MemberReference newTabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation - BinaryOperation / MemberReference newTabValues length Literal 2 Literal 1 = StatementExpression MethodInvocation updateFields BlockStatement StatementExpression Assignment MemberReference currentIndex MemberReference num = StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator ClassCreator ReferenceType JButton Literal "-" StatementExpression MethodInvocation ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue IfStatement BinaryOperation > MemberReference tabValues length Literal 2 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newTabValues ArrayCreator ReferenceType String BinaryOperation - MemberReference tabValues length Literal 2 IfStatement BinaryOperation > MemberReference currentIndex Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference tabValues Literal 0 MemberReference newTabValues Literal 0 BinaryOperation * MemberReference currentIndex Literal 2 arraycopy IfStatement BinaryOperation < MemberReference currentIndex BinaryOperation / MemberReference tabValues length Literal 2 BlockStatement StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 MemberReference newTabValues BinaryOperation * MemberReference currentIndex Literal 2 BinaryOperation - MemberReference tabValues length BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 arraycopy StatementExpression MethodInvocation model MemberReference newTabValues setValue IfStatement BinaryOperation > BinaryOperation * MemberReference currentIndex Literal 2 MemberReference newTabValues length BlockStatement StatementExpression Assignment MemberReference currentIndex BinaryOperation - BinaryOperation / MemberReference newTabValues length Literal 2 Literal 1 = StatementExpression MethodInvocation updateFields BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newTabValues ArrayCreator ReferenceType String Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 newTabValues Literal "" = StatementExpression Assignment MemberReference ArraySelector Literal 1 newTabValues Literal "" = StatementExpression MethodInvocation model MemberReference newTabValues setValue StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator ClassCreator ReferenceType JButton Literal StatementExpression MethodInvocation ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 IfStatement BinaryOperation > MemberReference currentIndex Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String Literal 2 StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation * MemberReference currentIndex Literal 2 MemberReference Literal 0 Literal 2 arraycopy StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference currentIndex Literal 2 tabValues MemberReference ArraySelector BinaryOperation - BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues MemberReference ArraySelector BinaryOperation - BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation * BinaryOperation - MemberReference currentIndex Literal 1 Literal 2 tabValues MemberReference ArraySelector Literal 0 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation - MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues MemberReference ArraySelector Literal 1 = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation - MemberReference currentIndex Literal 1 = StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator ClassCreator ReferenceType JButton Literal StatementExpression MethodInvocation ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 IfStatement BinaryOperation < BinaryOperation + MemberReference currentIndex Literal 1 MethodInvocation listModel size BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String Literal 2 StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation * MemberReference currentIndex Literal 2 MemberReference Literal 0 Literal 2 arraycopy StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference currentIndex Literal 2 tabValues MemberReference ArraySelector BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 tabValues MemberReference ArraySelector Literal 0 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues MemberReference ArraySelector Literal 1 = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation + MemberReference currentIndex Literal 1 = StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType VariableDeclarator c ClassCreator ReferenceType StatementExpression Assignment MemberReference c fill MemberReference NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c Literal 0 = StatementExpression MethodInvocation paneBtn MemberReference btnApply MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType = StatementExpression Assignment MemberReference c fill MemberReference NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c Literal 1 = StatementExpression MethodInvocation paneBtn MemberReference MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType = StatementExpression Assignment MemberReference c fill MemberReference NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c Literal 2 = StatementExpression MethodInvocation paneBtn MemberReference MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType = StatementExpression Assignment MemberReference c fill MemberReference NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression MethodInvocation paneBtn MemberReference MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType = StatementExpression Assignment MemberReference c fill MemberReference NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c Literal 4 = StatementExpression MethodInvocation paneBtn MemberReference MemberReference c add ReturnStatement MemberReference paneBtn	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression ClassCreator MethodInvocation Literal true setVisible ReferenceType	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration ReferenceType String FormalParameter ReferenceType Object ae LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference ae getName getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator ascName MethodInvocation Model MethodInvocation MemberReference asc getName getFacade IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference n Literal null BinaryOperation != MemberReference n Literal null BinaryOperation > MethodInvocation n length Literal 0 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation MemberReference n generateName = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference ascName Literal null BinaryOperation != MemberReference ascName Literal null BinaryOperation > MethodInvocation ascName length Literal 0 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation MemberReference ascName generateName = BlockStatement StatementExpression Assignment MemberReference n BinaryOperation + Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getType getFacade generateClassifierRef = ReturnStatement MemberReference n	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Region	1
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration BasicType boolean VariableDeclarator isAbstract Literal true IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference isAbstract Literal false = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference isAbstract getCoreHelper	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation Literal MethodInvocation MethodInvocation Model MethodInvocation getOperation getMetaTypes Literal ";" LocalVariableDeclaration ReferenceType VariableDeclarator fc MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes IfStatement BinaryOperation != MemberReference fc Literal null BlockStatement StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + Literal MethodInvocation fc isVisible Literal ";" += ReturnStatement MemberReference	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType buildAssociationRole FormalParameter ReferenceType Object from FormalParameter ReferenceType Object agg1 FormalParameter ReferenceType Object to FormalParameter ReferenceType Object agg2 FormalParameter ReferenceType Boolean unidirectional IfStatement BinaryOperation == MemberReference unidirectional Literal null BlockStatement ReturnStatement MethodInvocation MemberReference from MemberReference agg1 MemberReference to MemberReference agg2 Literal false buildAssociationRole BlockStatement ReturnStatement MethodInvocation MemberReference from MemberReference agg1 MemberReference to MemberReference agg2 MethodInvocation unidirectional booleanValue buildAssociationRole	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType String label FormalParameter ReferenceType String xmiExtensionString StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing an extension for " MemberReference label info	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation StatementExpression SuperMethodInvocation MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation Notation MethodInvocation MethodInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference isAState getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 MemberReference This MemberReference getInstance =	0
MethodDeclaration Modifier protected Annotation Override ReferenceType ArgoJMenu ReturnStatement ClassCreator ReferenceType ArgoJMenu Literal	0
MethodDeclaration Modifier public BasicType int skipNestedParens FormalParameter BasicType int kInOut TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation + MemberReference kInOut Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator value WhileStatement BinaryOperation != MethodInvocation MethodInvocation getType MemberReference k LT MemberReference RPAREN BlockStatement SwitchStatement MethodInvocation MethodInvocation getType MemberReference k LT SwitchStatementCase EOF ReturnStatement MemberReference kInOut SwitchStatementCase LPAREN StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipNestedParens = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference k MemberReference value = BreakStatement SwitchStatementCase StatementExpression MemberReference ++ k BreakStatement IfStatement BinaryOperation > MemberReference k MemberReference CPPvariables BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference kInOut BinaryOperation + MemberReference k Literal 1 = ReturnStatement MemberReference kInOut	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter BasicType int fileVersion FormalParameter ReferenceType String releaseVersion OpenException VersionException IfStatement BinaryOperation > MemberReference fileVersion MemberReference PERSISTENCE_VERSION BlockStatement ThrowStatement ClassCreator ReferenceType VersionException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The file selected is from a more up to date version of " Literal It has been with version " MemberReference releaseVersion Literal ". load with that or a more up to date" Literal of ArgoUML" ReturnStatement BinaryOperation >= MemberReference fileVersion MemberReference PERSISTENCE_VERSION	1
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Fig fig FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference o MethodInvocation fig getOwner BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigGroup BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator Cast ReferenceType FigGroup MemberReference fig BlockStatement IfStatement MethodInvocation Cast ReferenceType Fig MemberReference MemberReference o BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType boolean ReturnStatement MethodInvocation MemberReference Literal null	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Property	0
MethodDeclaration Modifier public ReferenceType Object getPseudostateKind ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String key FormalParameter ReferenceType Object args ReturnStatement TernaryExpression BinaryOperation != MemberReference translator Literal null MethodInvocation translator MemberReference key MemberReference args MemberReference key	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation headFig getFillColor	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer MemberReference r x BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer MemberReference r y MemberReference r y BinaryOperation + MemberReference r y MemberReference BinaryOperation + MemberReference r y MemberReference BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height MemberReference r y LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference MemberReference Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation ! isEmpty	0
MethodDeclaration Modifier public makeEdgePort IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation getOwner ClassCreator ReferenceType Rectangle MethodInvocation getSettings = StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation MemberReference ClassCreator ReferenceType This MemberReference Literal 50 Literal 0	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference modelElement getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation equals BlockStatement ReturnStatement MemberReference NONE IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation equals BlockStatement ReturnStatement MemberReference IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getComposite equals BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference NONE	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object relationship ReturnStatement MethodInvocation impl MemberReference relationship getSource	0
MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType String theToken LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation ns iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation result MethodInvocation i next append IfStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation result MemberReference theToken append ReturnStatement MethodInvocation result toString	1
MethodDeclaration FormalParameter ReferenceType Object t StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation	0
MethodDeclaration Modifier public final actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next StatementExpression MethodInvocation MemberReference t	0
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation getConcurrencyKind IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrencyKind = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference kind getCoreHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier public Annotation Override setLayer FormalParameter ReferenceType Layer lay StatementExpression SuperMethodInvocation MemberReference lay setLayer IfStatement BinaryOperation && BinaryOperation != MethodInvocation getLayer Literal null BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference lay MethodInvocation getOwner	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Component FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Node BlockStatement ReturnStatement Cast ReferenceType Node MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public BasicType boolean isStatic FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Feature MemberReference handle equals IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation Cast ReferenceType AssociationEnd MemberReference handle equals ThrowStatement ClassCreator ReferenceType IllegalArgumentException CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType UndoManager getInstance ReturnStatement MemberReference INSTANCE	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private FormalParameter ReferenceType elem StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType org ReferenceType omg ReferenceType ReferenceType ReferenceType ReferenceType Object BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 1054405279954763753L Literal 511L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String getTableName ReturnStatement MemberReference tableName	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Collection VariableDeclarator attrs MethodInvocation MethodInvocation MethodInvocation getOwner getAttributes getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator possibleDuplicateAttr MemberReference attrs BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation getAttribute MemberReference possibleDuplicateAttr MethodInvocation MethodInvocation MethodInvocation getAttribute getName MethodInvocation MethodInvocation MethodInvocation MemberReference possibleDuplicateAttr getName getFacade equals getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation getAttribute getCoreHelper	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation Model MethodInvocation MemberReference parent getClientDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation hasNext BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation next getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation LOG Literal on are changed" debug StatementExpression MethodInvocation update StatementExpression MethodInvocation update	0
MethodDeclaration Modifier public synchronized ReferenceType List TypeArgument ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal object " MemberReference handle Literal " or " MemberReference argument	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isATransition getFacade	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference LCURLY = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '{' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal "Not a	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String s StatementExpression Assignment MemberReference MemberReference s = IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation PersistenceManager MethodInvocation MemberReference project getInstance IfStatement MethodInvocation MemberReference startsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation length substring = LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl BinaryOperation < MemberReference i MethodInvocation length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference i charAt Literal '_' BlockStatement BreakStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference i substring = IfStatement MethodInvocation MethodInvocation endsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 0 BinaryOperation - MethodInvocation length MethodInvocation MethodInvocation length substring =	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType String extentName LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements MethodInvocation MemberReference extentName IfStatement BinaryOperation != MemberReference elements Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference elements BlockStatement IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement StatementExpression MethodInvocation result MemberReference element add ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getMessages getFacade	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - Literal Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected FormalParameter BasicType boolean StatementExpression Assignment This MemberReference buildingModel MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType LiteralInteger	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem LocalVariableDeclaration ReferenceType VariableDeclarator link Cast ReferenceType MemberReference elem IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference link Literal null BinaryOperation != MethodInvocation link getConnection Literal null BinaryOperation == MethodInvocation link MethodInvocation size getConnection Literal 2 BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference link delete getUmlFactory	0
MethodDeclaration Modifier public static ReferenceType List getContents FormalParameter ReferenceType Diagram diagram LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation diagram getLayer LocalVariableDeclaration ReferenceType List VariableDeclarator contents MethodInvocation lay getContents LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation contents size LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList MemberReference size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation contents MemberReference i get IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdge BlockStatement StatementExpression MethodInvocation list MemberReference o add StatementExpression MethodInvocation MemberReference diagram MethodInvocation lay getContentsEdgesOnly MemberReference list getEdges ReturnStatement MemberReference list	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator flags ClassCreator ReferenceType StringBuffer Literal 30 StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation append StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation append StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation append StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation append StatementExpression MethodInvocation flags MethodInvocation append StatementExpression MethodInvocation Configuration MemberReference MethodInvocation flags toString setString StatementExpression MethodInvocation Configuration MemberReference MethodInvocation String MethodInvocation valueOf setString StatementExpression MethodInvocation Configuration MemberReference MethodInvocation setString StatementExpression MethodInvocation dialog Literal false setVisible StatementExpression MethodInvocation dialog dispose	1
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigFinalState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigVertex MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference modelElement getKind getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInitialState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigBranchState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJunctionState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigForkState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJoinState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigDeepHistoryState MemberReference modelElement MemberReference bounds MemberReference settings = ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier private FormalParameter ReferenceType FigNode AssertStatement BinaryOperation != MemberReference Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getOwner LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation Model ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation MethodInvocation getLayer BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator fig Cast ReferenceType MemberReference f LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation fig getOwner IfStatement MethodInvocation fig MethodInvocation MethodInvocation getBounds intersects getBounds BlockStatement StatementExpression MethodInvocation MemberReference MemberReference state addContent IfStatement MethodInvocation MemberReference state MemberReference BlockStatement StatementExpression MethodInvocation MemberReference MemberReference state	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property FormalParameter ReferenceType Object value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference property ReferenceType Property BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType Property VariableDeclarator prop Cast ReferenceType Property MemberReference property IfStatement BinaryOperation && MethodInvocation prop BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation newValue MemberReference value add StatementExpression Assignment MemberReference value MemberReference newValue = IfStatement BinaryOperation && MethodInvocation ! prop BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference value IfStatement MethodInvocation col isEmpty BlockStatement StatementExpression Assignment MemberReference value Literal null = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation col MethodInvocation next iterator = IfStatement BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator v Cast ReferenceType Collection MemberReference value BlockStatement StatementExpression MethodInvocation newValue MethodInvocation MemberReference prop MemberReference v postprocessPropertyValue add StatementExpression Assignment MemberReference value MemberReference newValue = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference prop MemberReference value postprocessPropertyValue = LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MethodInvocation prop StatementExpression MethodInvocation MemberReference elem MemberReference stereotype MethodInvocation prop getName MemberReference value	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType TabTarget MemberReference container	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation MemberReference operation MemberReference classifier getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MemberReference name setName getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration FormalParameter ReferenceType next StatementExpression Assignment This MemberReference MemberReference next =	0
MethodDeclaration Modifier public ReferenceType URI FormalParameter ReferenceType URI in LocalVariableDeclaration ReferenceType URI VariableDeclarator LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation in toString StatementExpression Assignment MemberReference n MethodInvocation MemberReference n = TryStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType URI MemberReference n = CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType MemberReference e ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object impl IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType Classifier BinaryOperation instanceof MemberReference impl ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference elem ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference elem Literal " or " MemberReference impl	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType Literal "Not in	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object relation LocalVariableDeclaration ReferenceType List VariableDeclarator attributes MethodInvocation Model MethodInvocation MemberReference relation getAttributes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation attributes iterator LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation it next IfStatement MethodInvocation Utils MemberReference attribute BlockStatement StatementExpression Assignment MemberReference valid Literal true = BreakStatement IfStatement MemberReference ! valid BlockStatement StatementExpression MethodInvocation problems BinaryOperation + Literal key missing for " MethodInvocation Model MethodInvocation MemberReference relation getName getFacade add	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation > MemberReference currentTarget Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation Literal ""	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation getPseudostateKind Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null remove StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier private setLastModified FormalParameter ReferenceType Project project FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator lm MethodInvocation String MethodInvocation file lastModified valueOf IfStatement BinaryOperation != MemberReference lm Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation project getModel MemberReference fn MemberReference lm getCoreHelper	1
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation IfStatement BinaryOperation == MemberReference asc Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference asc getConnections MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator cls0 MethodInvocation Model MethodInvocation MemberReference ae0 getType getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator cls1 MethodInvocation Model MethodInvocation MemberReference ae1 getType getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator start MethodInvocation Translator Literal localize LocalVariableDeclaration ReferenceType String VariableDeclarator end MethodInvocation Translator Literal localize IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cls0 Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference start MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cls1 Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference end MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade = StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference start MethodInvocation Translator Literal localize MemberReference end add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference start MethodInvocation Translator Literal localize MemberReference end add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference end MethodInvocation Translator Literal localize MemberReference start add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference end MethodInvocation Translator Literal localize MemberReference start add StatementExpression MethodInvocation result MethodInvocation Translator Literal localize add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int i ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isAGeneralization FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization	0
MethodDeclaration Modifier private ReferenceType Object getUML1Stereotype FormalParameter ReferenceType String name StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Trying to find a stereotype of name <<" MemberReference name Literal ">>" debug LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference model MemberReference name lookupIn getFacade IfStatement BinaryOperation == MemberReference stereotype Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Couldn't find so creating it" debug ReturnStatement MethodInvocation Model MethodInvocation MemberReference name MemberReference model buildStereotype getExtensionMechanismsFactory IfStatement MethodInvocation ! Model MethodInvocation MemberReference stereotype isAStereotype getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Found that isn't a stereotype so creating it" debug ReturnStatement MethodInvocation Model MethodInvocation MemberReference name MemberReference model buildStereotype getExtensionMechanismsFactory StatementExpression MethodInvocation LOG Literal "Found it" debug ReturnStatement MemberReference stereotype	1
MethodDeclaration Modifier private ReferenceType FigMessage LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType FigMessage VariableDeclarator messages MethodInvocation LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType FigMessage VariableDeclarator message MemberReference messages BlockStatement IfStatement BinaryOperation && MethodInvocation message MethodInvocation This equals MethodInvocation message BlockStatement StatementExpression Assignment MemberReference MemberReference message = BreakStatement ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType PopupToolBoxButton FormalParameter ReferenceType Object actions FormalParameter BasicType boolean rollover LocalVariableDeclaration ReferenceType PopupToolBoxButton VariableDeclarator toolBox Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference actions length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i actions ReferenceType Action BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Adding a " MemberReference ArraySelector MemberReference i actions Literal " to the info LocalVariableDeclaration ReferenceType Action VariableDeclarator a Cast ReferenceType Action MemberReference ArraySelector MemberReference i actions IfStatement BinaryOperation == MemberReference toolBox Literal null BlockStatement StatementExpression Assignment MemberReference toolBox ClassCreator ReferenceType PopupToolBoxButton MemberReference a Literal 0 Literal 1 MemberReference rollover = StatementExpression MethodInvocation toolBox MemberReference a add IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i actions ReferenceType Component BlockStatement StatementExpression MethodInvocation toolBox Cast ReferenceType Component MemberReference ArraySelector MemberReference i actions add IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i actions ReferenceType Object BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator actionRow Cast ReferenceType Object MemberReference ArraySelector MemberReference i actions ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference actionRow length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a Cast ReferenceType Action MemberReference ArraySelector MemberReference j actionRow IfStatement BinaryOperation == MemberReference toolBox Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cols MemberReference actionRow length StatementExpression Assignment MemberReference toolBox ClassCreator ReferenceType PopupToolBoxButton MemberReference a Literal 0 MemberReference cols MemberReference rollover = StatementExpression MethodInvocation toolBox MemberReference a add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Can't add a " MemberReference ArraySelector MemberReference i actions Literal " to the error ReturnStatement MemberReference toolBox	1
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference val MethodInvocation Boolean MethodInvocation node MethodInvocation getText = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier private ReferenceType String getClassifierName FormalParameter ReferenceType String name LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation name Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference lastDot Literal - 1 BlockStatement ReturnStatement MemberReference name ReturnStatement MethodInvocation name BinaryOperation + MemberReference lastDot Literal 1 substring	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType ReturnStatement MethodInvocation Collections MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public startElement FormalParameter BasicType int nameCode FormalParameter ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes attributes FormalParameter BasicType int namespaces FormalParameter BasicType int nscount TransformerException IfStatement MethodInvocation ! MemberReference nameCode skipThisElement BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator sei ClassCreator ReferenceType StartElementInfo MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount StatementExpression MethodInvocation elementStack MemberReference sei push StatementExpression Assignment MemberReference firstElement Literal false = StatementExpression MethodInvocation rtfEmitter MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount startElement	1
MethodDeclaration Modifier private static ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade BlockStatement ReturnStatement MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateExpression ReturnStatement Literal ""	0
MethodDeclaration Modifier public final BasicType boolean load FormalParameter ReferenceType File file LocalVariableDeclaration BasicType boolean VariableDeclarator status MethodInvocation MemberReference file loadFile IfStatement MemberReference status BlockStatement IfStatement BinaryOperation != MemberReference pcl Literal null BlockStatement StatementExpression MethodInvocation pcl MemberReference Configuration Literal null MemberReference file firePropertyChange StatementExpression Assignment MemberReference MemberReference file = ReturnStatement MemberReference status	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 StatementExpression SuperMethodInvocation MemberReference arg0 actionPerformed IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator gm Cast ReferenceType MutableGraphModel MethodInvocation DiagramUtils MethodInvocation getGraphModel getActiveDiagram IfStatement MethodInvocation gm MemberReference edge canAddEdge BlockStatement StatementExpression MethodInvocation gm MemberReference edge addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationClass getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Globals curEditor MemberReference edge	1
MethodDeclaration Modifier private IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator act MethodInvocation getAction LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator IfStatement BinaryOperation && BinaryOperation != MemberReference act Literal null MethodInvocation Model MethodInvocation MethodInvocation getAction getFacade BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MethodInvocation MethodInvocation getLineColor setFillColor StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated setChangeability FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ck IfStatement BinaryOperation || BinaryOperation == MemberReference ck Literal null BinaryOperation instanceof MemberReference ck ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator changeableKind Cast ReferenceType MemberReference ck IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference ck	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier public ReferenceType DocumentFragment FormalParameter ReferenceType ExpressionContext context FormalParameter ReferenceType xalanNI LocalVariableDeclaration BasicType int VariableDeclarator xalanMod MethodInvocation Params MemberReference context Literal getInt LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Params MemberReference context Literal getInt LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Params MemberReference context Literal getString LocalVariableDeclaration ReferenceType DocumentFragment VariableDeclarator xalanRTF Cast ReferenceType DocumentFragment MethodInvocation xalanNI nextNode LocalVariableDeclaration BasicType int VariableDeclarator numLines BinaryOperation + MethodInvocation MemberReference xalanRTF countLineBreaks Literal 1 LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator docFactory MethodInvocation DocumentBuilderFactory newInstance LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator docBuilder Literal null TryStatement StatementExpression Assignment MemberReference docBuilder MethodInvocation docFactory newDocumentBuilder = CatchClause CatchClauseParameter ParserConfigurationException e StatementExpression MethodInvocation System.out Literal println ReturnStatement MemberReference xalanRTF LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation docBuilder LocalVariableDeclaration ReferenceType DocumentFragment VariableDeclarator df MethodInvocation doc LocalVariableDeclaration ReferenceType DOMBuilder VariableDeclarator db ClassCreator ReferenceType DOMBuilder MemberReference doc MemberReference df StatementExpression Assignment MemberReference elementStack ClassCreator ReferenceType Stack = StatementExpression Assignment MemberReference lineNumber Literal 0 = StatementExpression Assignment MemberReference modulus TernaryExpression BinaryOperation < MemberReference numLines MemberReference xalanMod Literal 1 MemberReference xalanMod = StatementExpression Assignment MemberReference width MemberReference = StatementExpression Assignment MemberReference separator MemberReference = LocalVariableDeclaration BasicType double VariableDeclarator log10numLines BinaryOperation / MethodInvocation Math MemberReference numLines log MethodInvocation Math Literal 10 log IfStatement BinaryOperation < MemberReference width BinaryOperation + MemberReference log10numLines Literal 1 BlockStatement StatementExpression Assignment MemberReference width Cast BasicType int MethodInvocation Math BinaryOperation + MemberReference log10numLines Literal 1 floor = StatementExpression MethodInvocation MemberReference db MemberReference xalanRTF lineNumberFragment ReturnStatement MemberReference df	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation MemberReference obj contains	1
MethodDeclaration Modifier public mouseReleased FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation e isPopupTrigger BlockStatement LocalVariableDeclaration ReferenceType JPopupMenu VariableDeclarator popup ClassCreator ReferenceType JPopupMenu ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator action MemberReference actions BlockStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression MethodInvocation popup Cast ReferenceType Action MemberReference action add IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add IfStatement BinaryOperation > MethodInvocation popup getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation popup This MethodInvocation e getX MethodInvocation e getY show StatementExpression MethodInvocation e consume	0
MethodDeclaration Modifier public Annotation Override select LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference dm IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation p MethodInvocation iterator MemberReference dm WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation next IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference f	0
MethodDeclaration Modifier protected Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation MethodInvocation getOkButton Literal	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType StateVertex FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType StateVertex VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StateVertex TryStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType StateVertex VariableDeclarator vertex Cast ReferenceType MemberReference BlockStatement StatementExpression MethodInvocation result MemberReference vertex add StatementExpression MethodInvocation result MethodInvocation MemberReference vertex addAll CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Operation MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String string FormalParameter BasicType char toRemove ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toRemove length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation string BinaryOperation - MethodInvocation string length Literal 1 charAt MemberReference ArraySelector MemberReference i toRemove BlockStatement StatementExpression Assignment MemberReference string MethodInvocation string Literal 0 BinaryOperation - MethodInvocation string length Literal 1 substring = ReturnStatement MemberReference string ReturnStatement MemberReference string	1
MethodDeclaration Modifier public setFilled FormalParameter BasicType boolean f StatementExpression SuperMethodInvocation Literal false setFilled	0
MethodDeclaration Modifier public ReferenceType Object getExpression FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeEvent BlockStatement ReturnStatement Cast ReferenceType TimeEvent MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType AssociationEnd buildAssociationEnd FormalParameter ReferenceType Object assoc FormalParameter ReferenceType String name FormalParameter ReferenceType Object type FormalParameter ReferenceType Integer multiplicity FormalParameter ReferenceType Object stereo FormalParameter BasicType boolean navigable FormalParameter ReferenceType Object order FormalParameter ReferenceType Object aggregation FormalParameter ReferenceType Object scope FormalParameter ReferenceType Object changeable FormalParameter ReferenceType Object visibility IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference aggregation Literal null MethodInvocation aggregation MemberReference equals BinaryOperation != MemberReference multiplicity Literal null BinaryOperation || BinaryOperation > MemberReference ArraySelector Literal 1 multiplicity Literal 1 BinaryOperation == MemberReference ArraySelector Literal 1 multiplicity Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal is composite " Literal multiplicity > 1" LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae MethodInvocation MemberReference assoc MemberReference name MemberReference type MemberReference stereo MemberReference navigable MemberReference order MemberReference aggregation MemberReference scope MemberReference changeable MemberReference visibility buildAssociationEndInternal IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator m MethodInvocation modelImpl MethodInvocation MemberReference ArraySelector Literal 0 multiplicity MemberReference ArraySelector Literal 1 multiplicity StatementExpression MethodInvocation ae MemberReference m setMultiplicity ReturnStatement MemberReference ae	1
MethodDeclaration Modifier public Annotation Override action StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getOffenders StatementExpression MethodInvocation select	0
MethodDeclaration Modifier public StatementExpression MemberReference -- StatementExpression MethodInvocation finish StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType This MemberReference pce StatementExpression MethodInvocation SwingUtilities MemberReference invokeLater	0
MethodDeclaration Modifier public FormalParameter ReferenceType DiagramSettings StatementExpression Assignment MemberReference settings MemberReference = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override removeFromDiagram StatementExpression MethodInvocation MemberReference ArgoEventTypes This StatementExpression MethodInvocation StatementExpression SuperMethodInvocation removeFromDiagram	0
MethodDeclaration Modifier public static BasicType boolean load ReturnStatement MethodInvocation config	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType ce FormalParameter ReferenceType Object FormalParameter BasicType boolean FormalParameter ReferenceType ReturnStatement ClassCreator ReferenceType MemberReference ce MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object StatementExpression MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object cls IfStatement BinaryOperation instanceof MemberReference cls ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of UML2 ReturnStatement Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class MemberReference cls	0
MethodDeclaration Modifier private FormalParameter ReferenceType listener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String propertyNames IfStatement BinaryOperation || BinaryOperation == MemberReference listener Literal null BinaryOperation == MemberReference modelElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal listener (" MemberReference listener Literal ") or modelElement (" MemberReference modelElement Literal ") be " MemberReference propertyNames Literal "]" LocalVariableDeclaration ReferenceType String VariableDeclarator mofId Cast ReferenceType RefBaseObject MemberReference modelElement TryStatement StatementExpression MethodInvocation Cast ReferenceType RefBaseObject MemberReference modelElement MemberReference propertyNames verifyAttributeNames CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal [" Literal " element:" MethodInvocation MemberReference modelElement Literal ", MethodInvocation MemberReference propertyNames Literal ", MemberReference listener Literal "]" debug SynchronizedStatement MemberReference StatementExpression MethodInvocation elements MemberReference listener MemberReference mofId MemberReference propertyNames register	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Collection selected IfStatement BinaryOperation && BinaryOperation != MemberReference selected Literal null BinaryOperation >= MethodInvocation selected size Literal 1 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation selected MethodInvocation next iterator getCommonBehaviorHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Literal null getCommonBehaviorHelper	1
MethodDeclaration Modifier private ReferenceType ZipInputStream openZipStreamAt FormalParameter ReferenceType URL url FormalParameter ReferenceType String ext IOException LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis ClassCreator ReferenceType ZipInputStream MethodInvocation url openStream LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zis getNextEntry WhileStatement BinaryOperation && BinaryOperation != MemberReference entry Literal null MethodInvocation ! entry MethodInvocation MemberReference ext endsWith getName BlockStatement StatementExpression Assignment MemberReference entry MethodInvocation zis getNextEntry = IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement StatementExpression MethodInvocation zis close ReturnStatement Literal null ReturnStatement MemberReference zis	1
MethodDeclaration Modifier protected ReferenceType FigEdge ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType boolean isValidNamespace FormalParameter Modifier final ReferenceType UmlAssociation assoc FormalParameter Modifier final ReferenceType Namespace ns ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation assoc getConnection BlockStatement IfStatement MethodInvocation ! MethodInvocation end getParticipant MemberReference ns isVisible BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier private writeFile FormalParameter ReferenceType String filename FormalParameter ReferenceType String content LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator fos Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator inputSrcEnc MethodInvocation Configuration MemberReference getString IfStatement BinaryOperation || BinaryOperation == MemberReference inputSrcEnc Literal null MethodInvocation inputSrcEnc MethodInvocation Literal "" equals trim BlockStatement StatementExpression Assignment MemberReference inputSrcEnc MethodInvocation System Literal "file.encoding" getProperty = StatementExpression Assignment MemberReference fos ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference filename MemberReference inputSrcEnc = StatementExpression MethodInvocation fos MemberReference content write CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "IO Exception: " MemberReference e error TryStatement IfStatement BinaryOperation != MemberReference fos Literal null BlockStatement StatementExpression MethodInvocation fos close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "FAILED: " MemberReference filename error	1
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig StatementExpression Assignment MemberReference MethodInvocation MemberReference MethodInvocation = ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator c MemberReference BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference MemberReference c = StatementExpression Assignment MemberReference width MethodInvocation Math MemberReference MemberReference width max = StatementExpression Assignment MemberReference MethodInvocation MemberReference = ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType UncheckedStatement FeatureNotSupportedException LocalVariableDeclaration ReferenceType UncheckedStatement VariableDeclarator node ClassCreator ReferenceType UncheckedStatement StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String IfStatement BinaryOperation == MemberReference labelTextsAndActionCommands Literal null BlockStatement StatementExpression Assignment MemberReference labelTextsAndActionCommands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal localize MemberReference add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal localize MemberReference add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal localize MemberReference add ReturnStatement MemberReference labelTextsAndActionCommands	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig LocalVariableDeclaration ReferenceType VariableDeclarator port ClassCreator ReferenceType Literal 0 Literal 0 MemberReference MemberReference HEIGHT MemberReference StatementExpression MethodInvocation port Literal false setFilled StatementExpression MethodInvocation port Literal 1 setLineWidth ReturnStatement MemberReference port	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation LOG Literal info LocalVariableDeclaration ReferenceType VariableDeclarator lang ClassCreator ReferenceType StatementExpression MethodInvocation MethodInvocation MemberReference lang getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType Action theAction StatementExpression Assignment MemberReference MemberReference theAction = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator c MethodInvocation MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference c ReferenceType ToolButton BlockStatement LocalVariableDeclaration ReferenceType ToolButton VariableDeclarator tb Cast ReferenceType ToolButton MemberReference c LocalVariableDeclaration ReferenceType Action VariableDeclarator action MethodInvocation tb IfStatement BinaryOperation instanceof MemberReference action ReferenceType RadioAction BlockStatement StatementExpression Assignment MemberReference action Cast ReferenceType RadioAction MemberReference action = LocalVariableDeclaration ReferenceType Action VariableDeclarator otherAction MemberReference theAction IfStatement BinaryOperation instanceof MemberReference theAction ReferenceType RadioAction BlockStatement StatementExpression Assignment MemberReference otherAction Cast ReferenceType RadioAction MemberReference theAction = IfStatement BinaryOperation && BinaryOperation != MemberReference action Literal null MethodInvocation ! action MemberReference otherAction equals BlockStatement StatementExpression MethodInvocation tb Literal false setSelected LocalVariableDeclaration ReferenceType ButtonModel VariableDeclarator bm MethodInvocation tb getModel StatementExpression MethodInvocation bm Literal false StatementExpression MethodInvocation bm Literal false setSelected StatementExpression MethodInvocation bm Literal false StatementExpression MethodInvocation bm Literal false IfStatement MethodInvocation ! ToolBarManager alwaysUseStandardRollover BlockStatement StatementExpression MethodInvocation tb Literal false setBorderPainted BlockStatement StatementExpression MethodInvocation tb Literal true setSelected LocalVariableDeclaration ReferenceType ButtonModel VariableDeclarator bm MethodInvocation tb getModel StatementExpression MethodInvocation bm Literal true IfStatement MethodInvocation ! ToolBarManager alwaysUseStandardRollover BlockStatement StatementExpression MethodInvocation tb Literal true setBorderPainted	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Relationship	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier public final ptr_operator RecognitionException TokenStreamException IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase AMPERSAND BlockStatement StatementExpression MethodInvocation MemberReference AMPERSAND match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal "&" ptrOperator BreakStatement SwitchStatementCase LITERAL__cdecl LITERAL___cdecl BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__cdecl BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__cdecl match BreakStatement SwitchStatementCase LITERAL___cdecl BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___cdecl match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL__near LITERAL___near BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__near BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__near match BreakStatement SwitchStatementCase LITERAL___near BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___near match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL__far LITERAL___far BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__far BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__far match BreakStatement SwitchStatementCase LITERAL___far BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___far match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL___interrupt BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___interrupt match BreakStatement SwitchStatementCase LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_pascal BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_pascal match BreakStatement SwitchStatementCase LITERAL__pascal BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__pascal match BreakStatement SwitchStatementCase LITERAL___pascal BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___pascal match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL__stdcall LITERAL___stdcall BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__stdcall BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__stdcall match BreakStatement SwitchStatementCase LITERAL___stdcall BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___stdcall match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase ID STAR SCOPE BlockStatement StatementExpression MethodInvocation BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Collection getRaisedSignals FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getAction getFacade addElement	0
MethodDeclaration Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseClicked StatementExpression MethodInvocation MemberReference setLineColor	0
MethodDeclaration Modifier private doImportPass FormalParameter ReferenceType Project p FormalParameter ReferenceType Collection files FormalParameter ReferenceType ImportSettings settings FormalParameter ReferenceType ProgressMonitor monitor FormalParameter BasicType int startCount FormalParameter BasicType int pass ImportException LocalVariableDeclaration BasicType int VariableDeclarator count MemberReference startCount ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation files iterator MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation monitor isCanceled BlockStatement StatementExpression MethodInvocation monitor MethodInvocation Translator Literal localize updateSubTask ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator file MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference file ReferenceType File BlockStatement StatementExpression MethodInvocation System.out Cast ReferenceType File MemberReference file println StatementExpression MethodInvocation MemberReference p Cast ReferenceType File MemberReference file MemberReference settings MemberReference pass parseFile StatementExpression MethodInvocation monitor MemberReference ++ count updateProgress StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer Cast ReferenceType File MemberReference file localize updateSubTask BlockStatement ThrowStatement ClassCreator ReferenceType ImportException BinaryOperation + Literal isn't a file " MemberReference file	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class VariableDeclarator classes ClassCreator ReferenceType HashSet TypeArgument ReferenceType Class StatementExpression Assignment MemberReference moduleDir ClassCreator ReferenceType File MethodInvocation Utils = StatementExpression MethodInvocation classes MethodInvocation MemberReference moduleDir getClassesFromDir addAll LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator ForStatement EnhancedForControl VariableDeclaration ReferenceType Class VariableDeclarator foundClass MemberReference classes BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundClass ClassReference ReferenceType SqlCodeCreator ClassReference MethodInvocation MemberReference foundClass isAssignableFrom ReferenceType SqlCodeCreator BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Class TypeArgument ReferenceType SqlCodeCreator MemberReference foundClass add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType e IfStatement BinaryOperation != MemberReference lastTab Literal null BlockStatement StatementExpression MethodInvocation lastTab Literal false setVisible StatementExpression Assignment MemberReference lastTab MethodInvocation = StatementExpression MethodInvocation LOG BinaryOperation + Literal state MethodInvocation lastTab MethodInvocation getName getClass debug StatementExpression MethodInvocation lastTab Literal true setVisible IfStatement BinaryOperation instanceof MemberReference lastTab ReferenceType TabModelTarget BlockStatement StatementExpression Cast ReferenceType TabModelTarget MemberReference lastTab	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier final protected StatementExpression MethodInvocation Literal 0	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String s ReturnStatement MethodInvocation MemberReference s Literal true	0
MethodDeclaration Modifier public Annotation Deprecated setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType String BlockStatement StatementExpression MethodInvocation MemberReference handle Cast ReferenceType String MemberReference arg setMultiplicity ReturnStatement IfStatement BinaryOperation || BinaryOperation == MemberReference arg Literal null BinaryOperation instanceof MemberReference arg ReferenceType Multiplicity BlockStatement StatementExpression MethodInvocation MemberReference handle Cast ReferenceType Multiplicity MemberReference arg BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference arg	1
MethodDeclaration Modifier public FormalParameter ReferenceType String path IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression MethodInvocation MemberReference path remove StatementExpression MethodInvocation TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference path CatchClause CatchClauseParameter UmlException e StatementExpression MethodInvocation LOG Literal "Couldn't XMI Reader from MemberReference e error	0
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference -- Literal 0 BlockStatement StatementExpression Assignment MemberReference generatedFiles Literal null =	0
MethodDeclaration Modifier private FeatureNotSupportedException DoStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Using BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator MethodInvocation parseQualifiedIdentifier IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator target MethodInvocation parseQualifiedIdentifier StatementExpression MethodInvocation node MemberReference StatementExpression Assignment MemberReference node Target MemberReference target = BlockStatement StatementExpression Assignment MemberReference node Target MemberReference = StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance StatementExpression MethodInvocation MemberReference node add	0
MethodDeclaration Modifier public ReferenceType List getNodes IfStatement BinaryOperation != MethodInvocation getGraphModel Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNodes getGraphModel ReturnStatement SuperMethodInvocation getNodes	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Designer VariableDeclarator MethodInvocation Designer LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getText LocalVariableDeclaration BasicType int VariableDeclarator priority MemberReference ToDoItem HIGH_PRIORITY SwitchStatement MethodInvocation getSelectedIndex SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference priority MemberReference ToDoItem HIGH_PRIORITY = BreakStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference priority MemberReference ToDoItem MED_PRIORITY = BreakStatement SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference priority MemberReference ToDoItem = BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator desc MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation getText LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffenders ClassCreator ReferenceType ListSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation MethodInvocation getSize getModel MemberReference ++ i BlockStatement StatementExpression MethodInvocation newOffenders MethodInvocation MethodInvocation MemberReference i getElementAt getModel add LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item ClassCreator ReferenceType MemberReference MemberReference MemberReference priority MemberReference desc MemberReference MemberReference newOffenders StatementExpression MethodInvocation MethodInvocation MemberReference item addElement StatementExpression MethodInvocation Designer MemberReference Designer Literal null MemberReference item firePropertyChange	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection classifiers StatementExpression MethodInvocation impl MemberReference handle MemberReference classifiers	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Model MethodInvocation getModel getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType String getText LocalVariableDeclaration ReferenceType String VariableDeclarator text Literal "" IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MethodInvocation getSource getName getFacade = IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MemberReference getBody = IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MemberReference getBody = IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MethodInvocation getSource getName getFacade = ReturnStatement MemberReference text	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object param FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference MemberReference MemberReference param MemberReference	0
MethodDeclaration Modifier protected FormalParameter BasicType int FormalParameter ReferenceType Object mcOld FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator cce Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement IfStatement BinaryOperation == MemberReference cce Literal null BlockStatement StatementExpression Assignment MemberReference cce ClassCreator ReferenceType This MemberReference ClassCreator ReferenceType CR MemberReference mcOld MemberReference ClassCreator ReferenceType CR MemberReference MemberReference = StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference instructions	0
MethodDeclaration ReferenceType DiagramElement FormalParameter ReferenceType Rectangle rect FormalParameter ReferenceType Color FormalParameter ReferenceType Color ReturnStatement ClassCreator ReferenceType MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height MemberReference MemberReference	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation Model MethodInvocation MemberReference child MemberReference parent getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null IfStatement BinaryOperation == MemberReference generalization Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference generalization MethodInvocation MethodInvocation MethodInvocation MethodInvocation getMetaTypes MemberReference child Literal null MemberReference parent Literal null Literal null Literal null getUmlFactory = CatchClause CatchClauseParameter IllegalModelElementConnectionException e StatementExpression MethodInvocation LOG Literal "Exception while creating MemberReference e error ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation MethodInvocation MemberReference generalization getStereotypes getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator aStereotype MemberReference stereotypes BlockStatement IfStatement MethodInvocation MethodInvocation MethodInvocation MemberReference aStereotype getName getFacade equals BlockStatement StatementExpression Assignment MemberReference stereotype MemberReference aStereotype = AssertStatement BinaryOperation != MemberReference generalization Literal null IfStatement BinaryOperation == MemberReference stereotype Literal null BlockStatement StatementExpression Assignment MemberReference stereotype MethodInvocation profile = AssertStatement BinaryOperation != MemberReference stereotype Literal null StatementExpression MethodInvocation MethodInvocation MemberReference generalization MemberReference stereotype getCoreHelper ReturnStatement MemberReference generalization	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text StatementExpression MethodInvocation MemberReference modelElement MemberReference text	1
MethodDeclaration Modifier public final external_declaration RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_namespace BlockStatement StatementExpression MethodInvocation BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched7 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched7 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_template match StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation MemberReference GREATERTHAN match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched7 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched7 BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_template match StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation MemberReference GREATERTHAN match StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched10 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched10 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_typedef match BreakStatement SwitchStatementCase LITERAL_class LITERAL_struct LITERAL_union BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched10 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched10 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched12 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched12 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched12 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched12 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched15 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_enum BinaryOperation || BinaryOperation == MethodInvocation Literal 2 LA MemberReference ID BinaryOperation == MethodInvocation Literal 2 LA MemberReference LCURLY BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched15 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_enum match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID BlockStatement StatementExpression MethodInvocation MemberReference ID match BreakStatement SwitchStatementCase LCURLY BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched15 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched15 BlockStatement StatementExpression MethodInvocation enum_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched19 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_3 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched19 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_template BlockStatement StatementExpression MethodInvocation template_head BreakStatement SwitchStatementCase ID LITERAL_inline LITERAL__inline LITERAL___inline LITERAL_virtual TILDE SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched19 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched19 BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_template BlockStatement StatementExpression MethodInvocation template_head BreakStatement SwitchStatementCase ID LITERAL_inline LITERAL__inline LITERAL___inline LITERAL_virtual TILDE SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation dtor_body BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched23 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched23 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement IfStatement BinaryOperation && Literal true Literal true BlockStatement StatementExpression MethodInvocation ctor_decl_spec BlockStatement IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched23 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched23 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched26 Literal false IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched26 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase ID OPERATOR SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation scope_override StatementExpression MethodInvocation conversion_function_decl_or_def CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched26 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched26 BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase ID OPERATOR SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression Assignment MemberReference s MethodInvocation scope_override = StatementExpression MethodInvocation conversion_function_decl_or_def BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched29 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched29 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched29 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched29 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched31 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched31 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched31 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched31 BlockStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m StatementExpression MethodInvocation function_definition IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endFunctionDefinition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched33 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched33 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation declaration CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched33 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched33 BlockStatement StatementExpression MethodInvocation function_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched36 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched36 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched36 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched36 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement StatementExpression MethodInvocation template_head BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched40 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched40 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched40 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched40 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched42 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched42 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched42 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched42 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched44 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched44 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched44 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched44 BlockStatement StatementExpression MethodInvocation function_definition BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation declaration BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StatementExpression MethodInvocation result ClassCreator ReferenceType MemberReference add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object metaType IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getParameter getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object metaType IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference metaType BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference metaType BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getMetaTypes MemberReference metaType BlockStatement ReturnStatement Literal ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object state StatementExpression MethodInvocation LOG Literal generating state body" debug LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator entry MethodInvocation Model MethodInvocation MemberReference state getEntry getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator exit MethodInvocation Model MethodInvocation MemberReference state getFacade IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entryStr MethodInvocation MemberReference entry generateAction IfStatement BinaryOperation > MethodInvocation entryStr length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal / " MemberReference entryStr += IfStatement BinaryOperation != MemberReference exit Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator exitStr MethodInvocation MemberReference exit generateAction IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression Assignment MemberReference s Literal "\n" += IfStatement BinaryOperation > MethodInvocation exitStr length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal / " MemberReference exitStr += LocalVariableDeclaration ReferenceType Collection VariableDeclarator trans MethodInvocation Model MethodInvocation MemberReference state getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator tran MemberReference trans BlockStatement IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression Assignment MemberReference s Literal "\n" += StatementExpression Assignment MemberReference s MethodInvocation MemberReference tran += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator parameter Cast ReferenceType Parameter MemberReference handle ReturnStatement MethodInvocation MethodInvocation parameter getKind equals CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe valueOf StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet MemberReference dm StatementExpression MethodInvocation offs MethodInvocation Model MethodInvocation MemberReference dm getOwner getFacade add ReturnStatement MemberReference offs	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object namespace IfStatement MethodInvocation Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator returnList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Project VariableDeclarator proj MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation proj getDiagramList BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference diagram ReferenceType UMLStateDiagram BinaryOperation instanceof MemberReference diagram ReferenceType UMLActivityDiagram BinaryOperation instanceof MemberReference diagram ReferenceType SequenceDiagram BlockStatement ContinueStatement IfStatement BinaryOperation == MethodInvocation diagram getNamespace MemberReference namespace BlockStatement StatementExpression MethodInvocation returnList MemberReference diagram add ReturnStatement MemberReference returnList ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator o Literal null IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression Assignment MemberReference o MethodInvocation Model MethodInvocation MethodInvocation getType getFacade = ReturnStatement MemberReference o	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal and code SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object o FormalParameter ReferenceType String referenced IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference o ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference o	0
MethodDeclaration Modifier protected ReferenceType List TypeArgument ReferenceType File getFileList FormalParameter ReferenceType ProgressMonitor monitor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator files MethodInvocation Arrays MethodInvocation getSelectedFiles asList IfStatement BinaryOperation == MethodInvocation files size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation files Literal 0 get LocalVariableDeclaration ReferenceType SuffixFilter VariableDeclarator suffixFilters ArrayInitializer MemberReference IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 suffixFilters Literal null BlockStatement StatementExpression Assignment MemberReference suffixFilters MethodInvocation = StatementExpression Assignment MemberReference files MethodInvocation MemberReference file MethodInvocation MemberReference suffixFilters MemberReference monitor = IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression MethodInvocation MethodInvocation file getAbsolutePath BlockStatement StatementExpression MethodInvocation Literal null IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation files size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation files MemberReference i get LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation f getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator lm MethodInvocation String MethodInvocation f lastModified valueOf IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement IfStatement MethodInvocation lm MethodInvocation Model MethodInvocation MemberReference model MemberReference fn getTaggedValueValue getFacade equals BlockStatement StatementExpression MethodInvocation files MemberReference i remove ReturnStatement MemberReference files	1
MethodDeclaration Modifier public parseXmiExtensions FormalParameter ReferenceType Project project OpenException IfStatement BinaryOperation != MemberReference argoString Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing argoString " MethodInvocation argoString length info LocalVariableDeclaration ReferenceType StringReader VariableDeclarator inputStream ClassCreator ReferenceType StringReader MemberReference argoString LocalVariableDeclaration ReferenceType ArgoParser VariableDeclarator parser ClassCreator ReferenceType ArgoParser TryStatement StatementExpression MethodInvocation parser MemberReference project MemberReference inputStream CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType OpenException Literal "Exception caught" MemberReference e BlockStatement StatementExpression MethodInvocation project ClassCreator ReferenceType ProjectMemberTodoList Literal "" MemberReference project addMember ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator pgml MemberReference BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing pgml " MethodInvocation pgml length info LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream ClassCreator ReferenceType ByteArrayInputStream MethodInvocation pgml getBytes LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister MethodInvocation PersistenceManager MethodInvocation getInstance StatementExpression MethodInvocation persister MemberReference project MemberReference inputStream load IfStatement BinaryOperation != MemberReference todoString Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing todoString " MethodInvocation todoString length info LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream ClassCreator ReferenceType ByteArrayInputStream MethodInvocation todoString getBytes LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister Literal null StatementExpression Assignment MemberReference persister ClassCreator ReferenceType = StatementExpression MethodInvocation persister MemberReference project MemberReference inputStream load BlockStatement StatementExpression MethodInvocation project ClassCreator ReferenceType ProjectMemberTodoList Literal "" MemberReference project addMember	1
MethodDeclaration Modifier private FormalParameter ReferenceType String name IfStatement BinaryOperation != MethodInvocation ele BinaryOperation + MemberReference MemberReference name get Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator pk MethodInvocation Model MethodInvocation MemberReference name StatementExpression MethodInvocation Model MethodInvocation MemberReference pk Literal true setRoot getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference pk MemberReference model setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference model MemberReference pk addOwnedElement getCoreHelper StatementExpression MethodInvocation ele BinaryOperation + MemberReference MemberReference name MemberReference pk put	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg ReturnStatement Literal 0	0
MethodDeclaration Modifier protected remove FormalParameter ReferenceType Object obj StatementExpression MethodInvocation MemberReference obj	0
MethodDeclaration Modifier public BasicType boolean removeAll FormalParameter ReferenceType Collection TypeArgument ? arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Property getAssociationEnds FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Property VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Property ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Classifier MemberReference handle BlockStatement IfStatement BinaryOperation != MethodInvocation p getAssociation Literal null BlockStatement StatementExpression MethodInvocation result MemberReference p add ForStatement EnhancedForControl VariableDeclaration ReferenceType Association VariableDeclarator a Cast ReferenceType Classifier MemberReference handle BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p MethodInvocation MemberReference handle MemberReference a IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation result MemberReference p add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType Class FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation getUMLClass getMetaTypes LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation getInterface getMetaTypes StatementExpression MethodInvocation MemberReference MemberReference register StatementExpression MethodInvocation MemberReference MemberReference register	0
MethodDeclaration Modifier public ReferenceType Iterator ReturnStatement MethodInvocation llsTags iterator	0
MethodDeclaration Modifier private static ReferenceType NotationSettings LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType NotationSettings VariableDeclarator settings IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference settings MethodInvocation p MethodInvocation getProjectSettings = BlockStatement StatementExpression Assignment MemberReference settings MethodInvocation NotationSettings = ReturnStatement MemberReference settings	0
MethodDeclaration Modifier public keyTyped FormalParameter ReferenceType KeyEvent ke StatementExpression MethodInvocation ke consume	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation Translator Literal localize setText StatementExpression MethodInvocation results clear StatementExpression MethodInvocation MemberReference root Literal null StatementExpression MethodInvocation MemberReference results MemberReference diagrams	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of UML2 LocalVariableDeclaration Modifier final ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class VariableDeclarator theClass Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class MemberReference element ReturnStatement MethodInvocation theClass	0
MethodDeclaration Modifier public ReferenceType String getTableName ReturnStatement MethodInvocation table getName	0
MethodDeclaration Modifier private ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e Literal false StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType NotationSettings StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private ForStatement EnhancedForControl VariableDeclaration ReferenceType FigActivation VariableDeclarator MemberReference BlockStatement StatementExpression MethodInvocation MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType FigActivation VariableDeclarator MemberReference BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation clear StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String sBlockFilename IfStatement BinaryOperation != MemberReference objDocBlock Literal null BlockStatement IfStatement BinaryOperation == MemberReference iDocBlockType MemberReference BLOCK_TYPE_FILE BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference sBlockFilename Literal null BinaryOperation > MethodInvocation sBlockFilename MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference sFilename MethodInvocation sBlockFilename trim = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal filename " MemberReference sFilename Literal " info TryStatement StatementExpression MethodInvocation MemberReference objModelElement updateFile CatchClause CatchClauseParameter Exception exp StatementExpression MethodInvocation LOG BinaryOperation + Literal file level DocBlock FAILED: " MethodInvocation exp getMessage warn ReturnStatement Literal true ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal not be empty" StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "method is only available for file " Literal not for type " MemberReference iDocBlockType error ReturnStatement Literal false ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Font getFont FormalParameter BasicType int IfStatement BinaryOperation != BinaryOperation & MemberReference MemberReference Font Literal 0 BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference MemberReference Font BOLD Literal 0 BlockStatement ReturnStatement MethodInvocation BlockStatement ReturnStatement MethodInvocation BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference MemberReference Font BOLD Literal 0 BlockStatement ReturnStatement MethodInvocation BlockStatement ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType g StatementExpression MethodInvocation MemberReference g remove	0
MethodDeclaration Modifier public Annotation Override BasicType boolean add FormalParameter ReferenceType o IfStatement MemberReference BlockStatement IfStatement MethodInvocation MemberReference o BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference o ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference o Cast ReferenceType MethodInvocation Cast ReferenceType JMenu MemberReference o = IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement SuperMethodInvocation MemberReference o add BlockStatement ReturnStatement Literal false	0
MethodDeclaration Modifier public getText FormalParameter BasicType int offset FormalParameter BasicType int length FormalParameter ReferenceType Segment BadLocationException StatementExpression MethodInvocation document MemberReference offset MemberReference length MemberReference getText	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference	0
MethodDeclaration Modifier private ReferenceType String getId ReturnStatement MethodInvocation label getText	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation getSelectedValue LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes MethodInvocation MemberReference stereotype contains getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference stereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager	0
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation MemberReference handle MemberReference MemberReference parameter addParameter	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setLineColor	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to IfStatement MemberReference ! BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference from getName getFacade MethodInvocation Model MethodInvocation MemberReference to getName getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType File FormalParameter ReferenceType Project p LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser MethodInvocation MemberReference p LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation Configuration MemberReference getString IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation chooser MethodInvocation getFrame showSaveDialog IfStatement BinaryOperation == MemberReference retval MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation theFile getPath StatementExpression MethodInvocation Configuration MemberReference MemberReference path setString ReturnStatement MemberReference theFile ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object context ReturnStatement BinaryOperation instanceof MemberReference context ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType	1
MethodDeclaration Modifier public FormalParameter ReferenceType e IfStatement BinaryOperation && BinaryOperation == MethodInvocation e getDocument MethodInvocation getDocument BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation target MethodInvocation getText setText StatementExpression MethodInvocation target	1
MethodDeclaration Modifier public BasicType boolean isCellEditable FormalParameter BasicType int rowIndex FormalParameter BasicType int ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation < MemberReference rowIndex MethodInvocation getRowCount BinaryOperation >= MemberReference Literal 0 BinaryOperation <= MemberReference Literal 1	1
MethodDeclaration Modifier static protected BasicType int FormalParameter BasicType char symbol FormalParameter BasicType char FormalParameter BasicType char FormalParameter ReferenceType String text LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 ForStatement EnhancedForControl VariableDeclaration BasicType char VariableDeclarator c MethodInvocation text toCharArray BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference c MemberReference symbol BinaryOperation == MemberReference count Literal 0 BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference c MemberReference BlockStatement StatementExpression MemberReference ++ count IfStatement BinaryOperation == MemberReference c MemberReference BlockStatement StatementExpression MemberReference -- count StatementExpression MemberReference ++ index ReturnStatement MemberReference index	0
MethodDeclaration Modifier private ReferenceType IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public BasicType boolean isAParameter FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator res ClassCreator ReferenceType StringBuffer MethodInvocation s length LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation s length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement MethodInvocation Character MemberReference c isLetterOrDigit BlockStatement StatementExpression MethodInvocation res MethodInvocation Character MemberReference c toLowerCase append IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference c Literal ']' BinaryOperation > MemberReference i Literal 1 BinaryOperation == MethodInvocation s BinaryOperation - MemberReference i Literal 1 charAt Literal '[' BlockStatement StatementExpression MethodInvocation res Literal "[]" append ReturnStatement MethodInvocation res toString	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator newNode MethodInvocation Model MethodInvocation MethodInvocation Literal buildNode getUmlFactory ReturnStatement MemberReference newNode	1
MethodDeclaration Modifier private static BasicType int FormalParameter ReferenceType String s LocalVariableDeclaration BasicType int VariableDeclarator i VariableDeclarator t StatementExpression Assignment MemberReference t MethodInvocation s length = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference t MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement BreakStatement ReturnStatement MemberReference i	1
MethodDeclaration Modifier public Annotation Override ReferenceType String getExtension ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Dependency ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public IfStatement BinaryOperation && BinaryOperation != MethodInvocation getLayer Literal null BinaryOperation != MethodInvocation MethodInvocation getLayer Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation MethodInvocation iterator getLayer WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType MethodInvocation it next	0
MethodDeclaration Modifier public addNodeRelatedEdges FormalParameter ReferenceType Object node IfStatement MethodInvocation Model MethodInvocation MemberReference node getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator specs ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference node getClientDependencies getFacade StatementExpression MethodInvocation specs MethodInvocation Model MethodInvocation MemberReference node getSupplierDependencies getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation specs iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dependency MethodInvocation iter next IfStatement MethodInvocation MemberReference dependency canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference dependency addEdge LocalVariableDeclaration ReferenceType Collection VariableDeclarator cmnt ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement StatementExpression MethodInvocation cmnt MethodInvocation Model MethodInvocation MemberReference node getFacade addAll IfStatement MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BlockStatement StatementExpression MethodInvocation cmnt MethodInvocation Model MethodInvocation MemberReference node getComments getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation cmnt iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation iter next LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator ce ClassCreator ReferenceType CommentEdge MemberReference node MemberReference ae IfStatement MethodInvocation MemberReference ce canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference ce addEdge	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ev StatementExpression SuperMethodInvocation MemberReference ev actionPerformed IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference element getName getFacade setName ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation Model MethodInvocation MemberReference element getAttributes getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference attribute getName getFacade LocalVariableDeclaration ReferenceType VariableDeclarator cd ClassCreator ReferenceType StatementExpression MethodInvocation cd MemberReference name setName LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference attribute getType getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MethodInvocation getClass MemberReference StatementExpression MethodInvocation cd MemberReference IfStatement MethodInvocation Utils MemberReference attribute BlockStatement StatementExpression MethodInvocation cd MemberReference Boolean TRUE IfStatement MethodInvocation Utils MemberReference attribute BlockStatement StatementExpression MethodInvocation cd MemberReference Boolean FALSE BlockStatement StatementExpression MethodInvocation cd Literal null StatementExpression MethodInvocation MemberReference cd IfStatement MethodInvocation Utils MemberReference attribute BlockStatement StatementExpression MethodInvocation cd MemberReference Boolean FALSE StatementExpression MethodInvocation MemberReference name ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int getSelectedIndex ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object pack FormalParameter ReferenceType Collection IfStatement BinaryOperation instanceof MemberReference pack ReferenceType UmlPackage BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator currentImports Cast ReferenceType UmlPackage MemberReference pack LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator toRemove ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LocalVariableDeclaration ReferenceType Collection VariableDeclarator toAdd ClassCreator ReferenceType ArrayList MemberReference ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType VariableDeclarator ei MemberReference currentImports BlockStatement IfStatement MethodInvocation MethodInvocation ei getImportedElement contains BlockStatement StatementExpression MethodInvocation toAdd MethodInvocation ei getImportedElement remove BlockStatement StatementExpression MethodInvocation toRemove MemberReference ei add StatementExpression MethodInvocation currentImports MemberReference toRemove removeAll LocalVariableDeclaration ReferenceType Collection VariableDeclarator toAddEIs ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation toAdd iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MethodInvocation i next StatementExpression MethodInvocation toAddEIs MethodInvocation modelImpl MethodInvocation MemberReference pack MemberReference me add StatementExpression MethodInvocation currentImports MemberReference toAddEIs addAll ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be a and a ModelElement"	1
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean StatementExpression MethodInvocation theComboBox MemberReference setEnabled StatementExpression MethodInvocation theComboBox MemberReference	1
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType String name ReturnStatement Literal true	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Model MethodInvocation getPackage getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType ArgoDiagram d IfStatement BinaryOperation == MemberReference activeDiagram MemberReference d BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Deleting diagram " MemberReference d debug LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator defaultDiagram Literal null IfStatement BinaryOperation == MethodInvocation diagrams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG Literal "Deleting last diagram - creating new default debug LocalVariableDeclaration ReferenceType Object VariableDeclarator projectRoot MethodInvocation getRoot IfStatement MethodInvocation ! Model MethodInvocation MemberReference projectRoot isRemoved getUmlFactory BlockStatement StatementExpression Assignment MemberReference defaultDiagram MethodInvocation MethodInvocation MemberReference projectRoot getInstance = StatementExpression MethodInvocation MemberReference defaultDiagram addMember BlockStatement StatementExpression Assignment MemberReference defaultDiagram MethodInvocation diagrams Literal 0 get = StatementExpression MethodInvocation LOG BinaryOperation + Literal default diagram is " MemberReference defaultDiagram debug IfStatement BinaryOperation == MemberReference defaultDiagram MemberReference d BlockStatement StatementExpression Assignment MemberReference defaultDiagram MethodInvocation diagrams Literal 1 get = StatementExpression MethodInvocation LOG BinaryOperation + Literal default diagram to " MemberReference defaultDiagram debug StatementExpression Assignment MemberReference activeDiagram MemberReference defaultDiagram = StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference activeDiagram getInstance StatementExpression MethodInvocation LOG BinaryOperation + Literal "New diagram is " MemberReference defaultDiagram debug StatementExpression MethodInvocation MemberReference d StatementExpression MethodInvocation members MemberReference d remove StatementExpression MethodInvocation d remove StatementExpression MethodInvocation Literal true	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation MemberReference operation MemberReference classifier Literal "return" StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MethodInvocation Model MethodInvocation getDirectionKind getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object action FormalParameter ReferenceType List arguments TryStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Action MemberReference action StatementExpression Cast ReferenceType Action MemberReference action ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal object " MemberReference action Literal " or " MemberReference arguments	0
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType g ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement MethodInvocation c MemberReference g BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier private IfStatement MethodInvocation ! ignore BlockStatement IfStatement MethodInvocation ! BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation pop AssertStatement MethodInvocation MemberReference StatementExpression MethodInvocation finish StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode IfStatement BinaryOperation == MemberReference critic Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation critic hashCode	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ArgoDiagram VariableDeclarator returnList ClassCreator ReferenceType HashSet TypeArgument ReferenceType ArgoDiagram LocalVariableDeclaration ReferenceType Project VariableDeclarator proj MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation proj getDiagramList BlockStatement IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType UMLActivityDiagram BlockStatement LocalVariableDeclaration ReferenceType UMLActivityDiagram VariableDeclarator activityDiagram Cast ReferenceType UMLActivityDiagram MemberReference diagram LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation activityDiagram IfStatement BinaryOperation == MemberReference MemberReference parent BlockStatement StatementExpression MethodInvocation returnList MemberReference activityDiagram add ContinueStatement IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType UMLStateDiagram BlockStatement LocalVariableDeclaration ReferenceType UMLStateDiagram VariableDeclarator stateDiagram Cast ReferenceType UMLStateDiagram MemberReference diagram LocalVariableDeclaration ReferenceType Object VariableDeclarator stateMachine MethodInvocation stateDiagram IfStatement BinaryOperation == MemberReference stateMachine MemberReference parent BlockStatement StatementExpression MethodInvocation returnList MemberReference stateDiagram add ContinueStatement ReturnStatement MemberReference returnList ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype StatementExpression SuperMethodInvocation MemberReference modelElement MemberReference stereotype StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getFacade MemberReference element	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType List TypeArgument ReferenceType Token tokens LocalVariableDeclaration ReferenceType String VariableDeclarator brackets Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator t MemberReference tokens BlockStatement IfStatement BinaryOperation == MethodInvocation t getType MemberReference Token BlockStatement ReturnStatement BinaryOperation + MethodInvocation MethodInvocation t getValue MemberReference brackets IfStatement BinaryOperation == MethodInvocation t getType MemberReference Token CLASS_NAME BlockStatement ReturnStatement BinaryOperation + MethodInvocation t MethodInvocation Literal "/" Literal "." replaceAll getValue MemberReference brackets IfStatement BinaryOperation == MethodInvocation t getType MemberReference Token BlockStatement StatementExpression Assignment MemberReference brackets MethodInvocation t getValue += ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal not parse field	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object trans IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference trans ThrowStatement ClassCreator ReferenceType IllegalArgumentException	1
MethodDeclaration Modifier protected Annotation Override LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getOwner IfStatement BinaryOperation == MemberReference me Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference me getStereotypes MethodInvocation isEmpty getFacade BlockStatement IfStatement MethodInvocation MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false setVisible StatementExpression Assignment MemberReference rect y MemberReference height += StatementExpression Assignment MemberReference rect height MemberReference height -= StatementExpression MethodInvocation MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height setBounds StatementExpression MethodInvocation BlockStatement IfStatement MethodInvocation ! MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MethodInvocation Literal true setVisible IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference rect y MemberReference height -= StatementExpression Assignment MemberReference rect height MemberReference height += StatementExpression Assignment MemberReference rect width MethodInvocation Math MethodInvocation MemberReference width MemberReference rect width max = StatementExpression MethodInvocation MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height setBounds StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object method FormalParameter ReferenceType Object specification ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object element StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier public static BasicType int indexOf FormalParameter Modifier final ReferenceType Collection c FormalParameter Modifier final ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference c BlockStatement IfStatement BinaryOperation == MemberReference element MemberReference elem BlockStatement ReturnStatement MemberReference index BlockStatement StatementExpression MemberReference ++ index ReturnStatement Literal - 1	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Point point LocalVariableDeclaration ReferenceType Point VariableDeclarator anchor MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator Cast BasicType int MethodInvocation anchor MemberReference point LocalVariableDeclaration BasicType int VariableDeclarator angl Literal 0 LocalVariableDeclaration BasicType double VariableDeclarator pathSlope MethodInvocation LocalVariableDeclaration BasicType double VariableDeclarator offsetSlope MethodInvocation MemberReference anchor MemberReference point IfStatement BinaryOperation && BinaryOperation && MemberReference swap BinaryOperation > MemberReference pathSlope BinaryOperation / MemberReference Math PI Literal 2 BinaryOperation < MemberReference pathSlope BinaryOperation / BinaryOperation * MemberReference Math PI Literal 3 Literal 2 BlockStatement StatementExpression Assignment MemberReference angl Cast BasicType int BinaryOperation * BinaryOperation / BinaryOperation - MemberReference offsetSlope MemberReference pathSlope MemberReference Math PI Literal 180 = BlockStatement StatementExpression Assignment MemberReference angl Cast BasicType int BinaryOperation * BinaryOperation / BinaryOperation - MemberReference offsetSlope MemberReference pathSlope MemberReference Math PI Literal 180 = LocalVariableDeclaration BasicType int VariableDeclarator result ArrayCreator BasicType int ArrayInitializer MemberReference angl MemberReference ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier private static FormalParameter ReferenceType String FormalParameter ReferenceType KeyStroke FormalParameter ReferenceType AbstractAction action StatementExpression MethodInvocation MemberReference MemberReference MemberReference action MethodInvocation MemberReference action	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object component StatementExpression MethodInvocation impl MemberReference handle MemberReference component	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object parent ReturnStatement BinaryOperation > MethodInvocation MemberReference parent Literal true Literal 0	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode IfStatement BinaryOperation != MemberReference listener Literal null BlockStatement ReturnStatement BinaryOperation + MemberReference MethodInvocation listener hashCode ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object sm IfStatement MethodInvocation ! Model MethodInvocation MemberReference sm getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation != MemberReference sm Literal null BlockStatement StatementExpression Assignment MemberReference machine MemberReference sm =	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getInstance StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation > MethodInvocation listenerList Literal 0 BlockStatement StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public BasicType boolean SynchronizedStatement MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType Document VariableDeclarator MethodInvocation getDocument IfStatement BinaryOperation == MethodInvocation e getDocument MemberReference BlockStatement StatementExpression MethodInvocation StatementExpression SuperMethodInvocation MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object attribute StatementExpression MethodInvocation MemberReference MemberReference attribute	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType Object FormalParameter ReferenceType Collection c IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c ReturnStatement MethodInvocation c MethodInvocation next iterator	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation MethodInvocation Boolean MemberReference	0
MethodDeclaration Modifier public setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType String arg IfStatement BinaryOperation == MemberReference arg Literal null BlockStatement StatementExpression MethodInvocation MemberReference handle Literal null BlockStatement StatementExpression MethodInvocation MemberReference handle MethodInvocation MemberReference arg	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement Literal true toString	0
MethodDeclaration Modifier public final remainder_expression RecognitionException TokenStreamException BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched355 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_43 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched355 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation conditional_expression BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase COMMA BlockStatement StatementExpression MethodInvocation MemberReference COMMA match BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase RPAREN BlockStatement StatementExpression MethodInvocation MemberReference RPAREN match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched355 Literal false = StatementExpression MethodInvocation MemberReference rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched355 BlockStatement StatementExpression MethodInvocation assignment_expression IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_43 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation assignment_expression BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object m ReturnStatement MethodInvocation impl MemberReference m	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal "Not a	0
MethodDeclaration Modifier public ReferenceType Dimension FormalParameter ReferenceType Container parent SynchronizedStatement MethodInvocation parent LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation parent getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator childComp MethodInvocation parent MemberReference i getComponent IfStatement BinaryOperation && MethodInvocation childComp isVisible BinaryOperation instanceof MemberReference childComp ReferenceType BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator childHeight MethodInvocation MemberReference childComp StatementExpression Assignment MemberReference BinaryOperation + MemberReference childHeight This MemberReference += StatementExpression Assignment MemberReference BinaryOperation + BinaryOperation + MemberReference insets left MemberReference MemberReference insets right += StatementExpression Assignment MemberReference BinaryOperation + MemberReference insets top MemberReference insets bottom += ReturnStatement ClassCreator ReferenceType Dimension BinaryOperation + BinaryOperation + BinaryOperation + MemberReference insets left MemberReference MemberReference MemberReference insets right MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isPrivate FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MethodInvocation elem getVisibility equals ReturnStatement MethodInvocation MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Profile FormalParameter ReferenceType Collection TypeArgument ReferenceType String unresolved LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Profile VariableDeclarator profiles ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Profile LocalVariableDeclaration ReferenceType ProfileManager VariableDeclarator MethodInvocation ProfileFacade getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator filename MemberReference unresolved BlockStatement ReturnStatement MemberReference profiles	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType getCollaborationsHelper IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal "::"	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType String getColumnName FormalParameter BasicType int column ReturnStatement MemberReference ArraySelector MemberReference column columnNames	1
MethodDeclaration Modifier public ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType String kind IfStatement BinaryOperation || BinaryOperation == MemberReference nsa Literal null BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST IfStatement BinaryOperation instanceof MemberReference nsa ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "given argument " MemberReference nsa Literal " is not a namespace" LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Literal null TryStatement StatementExpression Assignment MemberReference col MethodInvocation MemberReference nsa MethodInvocation Class MemberReference kind forName getAllModelElementsOfKind = CatchClause CatchClauseParameter ClassNotFoundException cnfe ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Can't a class name from " MemberReference kind ReturnStatement MemberReference col	1
MethodDeclaration Modifier public addComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator component MethodInvocation Model MethodInvocation MemberReference currentPackage MemberReference fileName lookupIn getFacade IfStatement BinaryOperation == MemberReference component Literal null BlockStatement StatementExpression Assignment MemberReference component MethodInvocation Model MethodInvocation getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference component MemberReference fileName setName getCoreHelper StatementExpression MethodInvocation newElements MemberReference component add StatementExpression MethodInvocation parseState MemberReference component addComponent StatementExpression MethodInvocation Model MethodInvocation MethodInvocation parseState getComponent MemberReference model setNamespace getCoreHelper	0
MethodDeclaration Modifier protected nextPhase InterruptedException StatementExpression MethodInvocation StatementExpression MemberReference ++ StatementExpression Assignment MemberReference BinaryOperation / BinaryOperation * MemberReference Literal 100 MemberReference = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public setParent FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Generalization BinaryOperation instanceof MemberReference parent ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference parent	0
MethodDeclaration Modifier protected Annotation Override ReferenceType IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType ArrayInitializer Literal null MemberReference Literal null Literal null Literal null ReturnStatement MemberReference icons	0
MethodDeclaration Modifier public static BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator javaVersion MethodInvocation System Literal "java.version" Literal "" getProperty ReturnStatement MethodInvocation javaVersion Literal startsWith	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getAction getMetaTypes	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object FormalParameter ReferenceType String s ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment MemberReference treeModel MemberReference =	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType Collection VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference cls getAssociationEnds getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference asc Literal null BinaryOperation == MethodInvocation asc size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator descendEnum MethodInvocation MethodInvocation MemberReference cls gen IfStatement MethodInvocation ! descendEnum hasMoreElements BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ListSet VariableDeclarator descendants ClassCreator ReferenceType ListSet WhileStatement MethodInvocation descendEnum hasMoreElements BlockStatement StatementExpression MethodInvocation descendants MethodInvocation descendEnum nextElement add LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator ae MemberReference asc BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator a MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade LocalVariableDeclaration ReferenceType List VariableDeclarator conn ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference a getConnections getFacade IfStatement BinaryOperation != MethodInvocation conn size Literal 2 BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator otherEnd MethodInvocation conn Literal 0 get IfStatement BinaryOperation == MemberReference ae MethodInvocation conn Literal 0 get BlockStatement StatementExpression Assignment MemberReference otherEnd MethodInvocation conn Literal 1 get = IfStatement MethodInvocation ! Model MethodInvocation MemberReference otherEnd isNavigable getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator otherCls MethodInvocation Model MethodInvocation MemberReference otherEnd getType getFacade IfStatement MethodInvocation descendants MemberReference otherCls contains BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference cls add StatementExpression MethodInvocation offs MemberReference a add StatementExpression MethodInvocation offs MemberReference otherCls add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object f IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The handle must be instance of IfStatement BinaryOperation instanceof MemberReference f ReferenceType Feature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Classifier MemberReference handle MemberReference index Cast ReferenceType Feature MemberReference f Literal the feature to the classifier MemberReference f MemberReference handle execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType BinaryOperation instanceof MemberReference ReferenceType Include BlockStatement StatementExpression Cast ReferenceType MemberReference ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " or " MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType ToDoItem BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator i Cast ReferenceType ToDoItem MemberReference o IfStatement MethodInvocation ! MethodInvocation MethodInvocation i equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation MethodInvocation i BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! MethodInvocation MethodInvocation i getOffenders equals getOffenders BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int arg0 ReturnStatement MethodInvocation Model MethodInvocation	0
MethodDeclaration ReferenceType Object FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType FigNodeModelElement BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType FigNodeModelElement MemberReference t valueOf BlockStatement ReturnStatement MemberReference t	0
MethodDeclaration Modifier private FormalParameter ReferenceType Property position FormalParameter ReferenceType Class tab LocalVariableDeclaration ReferenceType VariableDeclarator key MethodInvocation MemberReference tab StatementExpression MethodInvocation position MethodInvocation Configuration MemberReference key Literal getString	1
MethodDeclaration Modifier public FormalParameter ReferenceType String oType FormalParameter ReferenceType String identifier IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation MemberReference identifier MemberReference ns findClass IfStatement BinaryOperation == MemberReference cls Literal null BlockStatement StatementExpression Assignment MemberReference cls MethodInvocation MethodInvocation MemberReference identifier MemberReference ns buildClass getCoreFactory = StatementExpression MethodInvocation profile MemberReference cls StatementExpression MethodInvocation newElements MemberReference cls add StatementExpression MethodInvocation MemberReference cls push IfStatement MethodInvocation MemberReference oType equals BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getPrivate getVisibilityKind = IfStatement MethodInvocation MemberReference oType equals BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation getPublic getVisibilityKind = StatementExpression MethodInvocation profile MemberReference cls Literal IfStatement MethodInvocation MemberReference oType equals BlockStatement Statement BlockStatement AssertStatement Literal false BinaryOperation + Literal "Not expecting any other oType than class, and " Literal	1
MethodDeclaration Modifier public ReferenceType String getVersion ReturnStatement MemberReference version	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MethodInvocation getClass getOwner	0
MethodDeclaration Modifier private BasicType boolean isSomeSubvertexOf FormalParameter ReferenceType Object subject FormalParameter ReferenceType Object composite LocalVariableDeclaration ReferenceType Object VariableDeclarator c MemberReference subject WhileStatement BinaryOperation != MemberReference c Literal null BlockStatement IfStatement BinaryOperation == MemberReference c MemberReference composite BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference c getContainer getFacade = ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Class getColumnClass FormalParameter BasicType int c ReturnStatement ClassReference ReferenceType String	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object kind IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Parameter BinaryOperation instanceof MemberReference kind ReferenceType BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference handle ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference kind ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference kind	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype StatementExpression MethodInvocation impl MemberReference modelElement MemberReference stereotype	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade addElement	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or parameter: " MemberReference parameter	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Literal false ReturnStatement Cast ReferenceType Operation MemberReference handle	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType getAttribute ReturnStatement MemberReference attribute	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Resource r ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator eobj MethodInvocation r getContents BlockStatement IfStatement Literal MethodInvocation MethodInvocation eobj MethodInvocation getName equals BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry VariableDeclarator e1 Cast ReferenceType MemberReference eobj BlockStatement IfStatement BinaryOperation instanceof MemberReference e1 ReferenceType BasicFeatureMapEntry BlockStatement LocalVariableDeclaration ReferenceType BasicFeatureMapEntry VariableDeclarator x1 Cast ReferenceType BasicFeatureMapEntry MemberReference e1 LocalVariableDeclaration ReferenceType String VariableDeclarator n1 MethodInvocation x1 MethodInvocation getName IfStatement Literal MethodInvocation MemberReference n1 equals BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator v Cast ReferenceType MethodInvocation x1 getValue ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry VariableDeclarator e2 MethodInvocation v BlockStatement IfStatement BinaryOperation instanceof MemberReference e2 ReferenceType SimpleFeatureMapEntry BlockStatement LocalVariableDeclaration ReferenceType SimpleFeatureMapEntry VariableDeclarator x Cast ReferenceType SimpleFeatureMapEntry MemberReference e2 LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation x MethodInvocation getName IfStatement Literal MethodInvocation MemberReference n equals BlockStatement IfStatement Literal ! BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal to parse XMI file with " Literal = " Cast ReferenceType String MethodInvocation x getValue warn ReturnStatement Literal false IfStatement Literal MethodInvocation MemberReference n equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator version Cast ReferenceType String MethodInvocation x getValue IfStatement BinaryOperation && BinaryOperation != MemberReference version Literal null MethodInvocation version Literal startsWith BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal to parse XMI file with " Literal = " MemberReference version debug ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference val ClassCreator ReferenceType MethodInvocation node MethodInvocation toString MethodInvocation trim getName = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Diagram BlockStatement ReturnStatement Cast ReferenceType Diagram MemberReference parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier static ReferenceType FormalParameter ReferenceType String ReturnStatement MethodInvocation MethodInvocation MemberReference Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file ReturnStatement BinaryOperation || MethodInvocation file isDirectory MethodInvocation MemberReference file	0
MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation g MemberReference Literal 0 Literal 40 Literal null	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation label MethodInvocation getLabel setText	0
MethodDeclaration Modifier public BasicType int getIconWidth ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType String generateConstraintEnrichedDocComment FormalParameter ReferenceType Object me FormalParameter ReferenceType String header FormalParameter ReferenceType String prefix FormalParameter ReferenceType String footer LocalVariableDeclaration ReferenceType String VariableDeclarator sDocComment MethodInvocation DocumentationManager MemberReference me Literal "" MemberReference header MemberReference prefix MemberReference footer StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference sDocComment debug IfStatement BinaryOperation != MemberReference sDocComment Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation sDocComment Literal '\n' indexOf BinaryOperation && BinaryOperation >= MemberReference i Literal 0 BinaryOperation < MemberReference i MethodInvocation sDocComment length Assignment MemberReference i MethodInvocation sDocComment Literal '\n' BinaryOperation + MemberReference i Literal 1 indexOf = BlockStatement StatementExpression Assignment MemberReference sDocComment BinaryOperation + BinaryOperation + MethodInvocation sDocComment Literal 0 BinaryOperation + MemberReference i Literal 1 substring MemberReference INDENT MethodInvocation sDocComment BinaryOperation + MemberReference i Literal 1 substring = LocalVariableDeclaration ReferenceType Collection VariableDeclarator cConstraints MethodInvocation Model MethodInvocation MemberReference me getFacade IfStatement BinaryOperation == MethodInvocation cConstraints size Literal 0 BlockStatement IfStatement BinaryOperation != MemberReference sDocComment Literal null BlockStatement ReturnStatement MemberReference sDocComment BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation != MemberReference sDocComment Literal null BlockStatement StatementExpression Assignment MemberReference sDocComment MethodInvocation sDocComment Literal 0 BinaryOperation + MethodInvocation sDocComment MemberReference footer indexOf Literal 1 substring = BlockStatement IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference sDocComment BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference INDENT MemberReference footer Literal "\n" MemberReference INDENT Literal " /// \n" MemberReference INDENT Literal " = BlockStatement StatementExpression Assignment MemberReference sDocComment Literal "" = ClassDeclaration TagExtractor FieldDeclaration Modifier private ReferenceType LinkedList TypeArgument ReferenceType String VariableDeclarator llsTags ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String FieldDeclaration Modifier private ReferenceType String VariableDeclarator FieldDeclaration Modifier private BasicType int VariableDeclarator constraintID Literal 0 ConstructorDeclaration Modifier public * * @param */ TagExtractor FormalParameter ReferenceType String sConstraintName StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference MemberReference sConstraintName = MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType String ReturnStatement MethodInvocation llsTags iterator MethodDeclaration Modifier public caseAConstraintBody FormalParameter ReferenceType AConstraintBody node LocalVariableDeclaration ReferenceType String VariableDeclarator sKind Literal null IfStatement BinaryOperation != MethodInvocation node getStereotype Literal null BlockStatement StatementExpression Assignment MemberReference sKind MethodInvocation node MethodInvocation toString getStereotype = LocalVariableDeclaration ReferenceType String VariableDeclarator sExpression Literal null IfStatement BinaryOperation != MethodInvocation node getExpression Literal null BlockStatement StatementExpression Assignment MemberReference sExpression MethodInvocation node MethodInvocation toString getExpression = LocalVariableDeclaration ReferenceType String VariableDeclarator sName IfStatement BinaryOperation != MethodInvocation node getName Literal null BlockStatement StatementExpression Assignment MemberReference sName MethodInvocation node MethodInvocation getText getName = BlockStatement StatementExpression Assignment MemberReference sName BinaryOperation + BinaryOperation + MemberReference Literal "_" MemberReference constraintID = IfStatement BinaryOperation || BinaryOperation == MemberReference sKind Literal null BinaryOperation == MemberReference sExpression Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sTag IfStatement MethodInvocation sKind Literal "inv " equals BlockStatement StatementExpression Assignment MemberReference sTag Literal "@invariant " = IfStatement MethodInvocation sKind Literal " equals BlockStatement StatementExpression Assignment MemberReference sTag Literal " = IfStatement MethodInvocation sKind Literal "pre " equals BlockStatement StatementExpression Assignment MemberReference sTag Literal " = BlockStatement ReturnStatement StatementExpression Assignment MemberReference sTag BinaryOperation + BinaryOperation + MemberReference sName Literal ": " MemberReference sExpression += StatementExpression MethodInvocation llsTags MemberReference sTag addLast ReferenceType tudresden ReferenceType ocl ReferenceType parser ReferenceType ReferenceType DepthFirstAdapter LocalVariableDeclaration ReferenceType tudresden ReferenceType ocl ReferenceType check ReferenceType types ReferenceType VariableDeclarator mf ClassCreator ReferenceType org ReferenceType argouml ReferenceType ocl ReferenceType ArgoFacade MemberReference me ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator constraint MemberReference cConstraints BlockStatement TryStatement LocalVariableDeclaration ReferenceType tudresden ReferenceType ocl ReferenceType OclTree VariableDeclarator otParsed MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference constraint getBody getFacade getBody getFacade MemberReference mf createTree LocalVariableDeclaration ReferenceType TagExtractor VariableDeclarator te ClassCreator ReferenceType TagExtractor MethodInvocation Model MethodInvocation MemberReference constraint getName getFacade StatementExpression MethodInvocation otParsed MemberReference te apply ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator j MethodInvocation te MethodInvocation j hasNext BlockStatement StatementExpression Assignment MemberReference sDocComment BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MethodInvocation j next Literal "\n" MemberReference INDENT Literal " += CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference sDocComment BinaryOperation + Literal "\n" MemberReference footer += ReturnStatement MemberReference sDocComment	1
MethodDeclaration Modifier public ReferenceType Parameter FormalParameter ReferenceType Object o FormalParameter ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference o ReferenceType Event BlockStatement LocalVariableDeclaration ReferenceType Event VariableDeclarator event Cast ReferenceType Event MemberReference o LocalVariableDeclaration ReferenceType Parameter VariableDeclarator res MethodInvocation Cast ReferenceType Classifier MemberReference type MemberReference event StatementExpression MethodInvocation res MemberReference StatementExpression MethodInvocation event MethodInvocation MemberReference res add getParameter StatementExpression MethodInvocation res BinaryOperation + Literal MethodInvocation event MethodInvocation size getParameter setName ReturnStatement MemberReference res IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference o LocalVariableDeclaration ReferenceType Parameter VariableDeclarator res MethodInvocation Cast ReferenceType Classifier MemberReference type MemberReference StatementExpression MethodInvocation res MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference res add getParameter StatementExpression MethodInvocation res BinaryOperation + Literal MethodInvocation MethodInvocation size getParameter setName ReturnStatement MemberReference res IfStatement BinaryOperation instanceof MemberReference o ReferenceType BehavioralFeature BlockStatement LocalVariableDeclaration ReferenceType BehavioralFeature VariableDeclarator oper Cast ReferenceType BehavioralFeature MemberReference o LocalVariableDeclaration ReferenceType Parameter VariableDeclarator res MethodInvocation Cast ReferenceType Classifier MemberReference type MemberReference oper StatementExpression MethodInvocation res MemberReference StatementExpression MethodInvocation oper MethodInvocation MemberReference res add getParameter StatementExpression MethodInvocation res BinaryOperation + Literal MethodInvocation oper MethodInvocation size getParameter setName ReturnStatement MemberReference res IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A containing element must be supplied for the parameter" BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unsupported element for parameter " MethodInvocation o MethodInvocation getName getClass	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object multiplicity IfStatement BinaryOperation instanceof MemberReference multiplicity ReferenceType Multiplicity BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal object: " MemberReference multiplicity TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator rc Literal "" LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType Multiplicity MemberReference multiplicity LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation i hasNext BlockStatement IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference first Literal false = BlockStatement StatementExpression Assignment MemberReference rc Literal "," += StatementExpression Assignment MemberReference rc MethodInvocation Cast ReferenceType MultiplicityRange MethodInvocation i next += ReturnStatement MemberReference rc CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public ReferenceType java ReferenceType util ReferenceType BitSet FormalParameter BasicType int lookahead_offset TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator value LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation + MemberReference lookahead_offset Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator final_type_idx Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator scope_found Literal false IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference SCOPE BlockStatement StatementExpression MemberReference ++ k StatementExpression Assignment MemberReference scope_found Literal true = WhileStatement BinaryOperation && BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference ID MethodInvocation MethodInvocation MethodInvocation getText MemberReference k LT isTypeName BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference final_type_idx Literal 0 MethodInvocation MemberReference final_type_idx LT BlockStatement IfStatement BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference SCOPE BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID BlockStatement ReturnStatement MemberReference CPPvariables QI_CTOR StatementExpression Assignment MemberReference final_type_idx MemberReference k = StatementExpression MemberReference ++ k IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference LESSTHAN BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipTemplateQualifiers = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID StatementExpression Assignment MemberReference k MemberReference value = IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference SCOPE BlockStatement StatementExpression MemberReference ++ k StatementExpression Assignment MemberReference scope_found Literal true = BlockStatement IfStatement MethodInvocation enclosingClass MethodInvocation MethodInvocation getText MemberReference final_type_idx LT equals BlockStatement ReturnStatement MemberReference CPPvariables QI_CTOR BlockStatement ReturnStatement MemberReference CPPvariables QI_TYPE SwitchStatement MethodInvocation MethodInvocation getType MemberReference k LT SwitchStatementCase ID IfStatement BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference SCOPE BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID IfStatement MethodInvocation enclosingClass MethodInvocation MethodInvocation getText MemberReference k LT equals BlockStatement ReturnStatement MemberReference CPPvariables QI_CTOR BlockStatement IfStatement MemberReference scope_found ReturnStatement MemberReference CPPvariables QI_TYPE ReturnStatement MemberReference CPPvariables QI_VAR SwitchStatementCase TILDE IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference ID MethodInvocation MethodInvocation MethodInvocation getText BinaryOperation + MemberReference k Literal 1 LT isTypeName BinaryOperation != MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 2 LT MemberReference SCOPE BlockStatement ReturnStatement MemberReference CPPvariables BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID SwitchStatementCase STAR IfStatement BinaryOperation == MemberReference final_type_idx Literal 0 BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID BlockStatement ReturnStatement MemberReference CPPvariables SwitchStatementCase OPERATOR ReturnStatement MemberReference CPPvariables SwitchStatementCase ReturnStatement MemberReference CPPvariables QI_INVALID	1
MethodDeclaration Modifier private ReferenceType SwitchStatement FeatureNotSupportedException LocalVariableDeclaration ReferenceType SwitchStatement VariableDeclarator node ClassCreator ReferenceType SwitchStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression Assignment MemberReference node Test MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation MemberReference TokenID LCurly AssertAndAdvance WhileStatement BinaryOperation || BinaryOperation == MemberReference curtok id MemberReference TokenID BinaryOperation == MemberReference curtok id MemberReference TokenID BlockStatement StatementExpression MethodInvocation MethodInvocation add StatementExpression MethodInvocation MemberReference TokenID RCurly AssertAndAdvance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public setItem FormalParameter ReferenceType Object anObject IfStatement Cast ReferenceType MethodInvocation getModel BlockStatement StatementExpression MethodInvocation editor Cast ReferenceType UMLListCellRenderer2 MethodInvocation setText IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference anObject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference anObject getInstance setIcon BlockStatement StatementExpression SuperMethodInvocation MemberReference anObject setItem	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "{" MethodInvocation MethodInvocation getName getClass Literal ":" MemberReference Literal "(" MethodInvocation Literal "-" MethodInvocation Literal ")" Literal "/" SuperMethodInvocation toString Literal "}"	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference label	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference argument	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType DiagramElement drop FormalParameter ReferenceType Object droppedObject FormalParameter ReferenceType Point location LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bounds Literal null IfStatement BinaryOperation != MemberReference location Literal null BlockStatement StatementExpression Assignment MemberReference bounds ClassCreator ReferenceType Rectangle MemberReference location x MemberReference location y Literal 0 Literal 0 = LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigActionState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigFinalState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigStubState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isASubmachineState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSubmachineState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isACompositeState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigCompositeState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSynchState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSimpleState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference droppedObject getKind getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "found a null type pseudostate" warn ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInitialState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigBranchState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJunctionState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigForkState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJoinState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigDeepHistoryState MemberReference droppedObject MemberReference bounds MemberReference settings = BlockStatement StatementExpression MethodInvocation LOG Literal "found a type not known" warn IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement IfStatement BinaryOperation != MemberReference location Literal null BlockStatement StatementExpression MethodInvocation figNode MemberReference location x MemberReference location y setLocation StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Dropped object " MemberReference droppedObject Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object target IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target getFacade MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference MemberReference target build ReturnStatement MemberReference BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz IfStatement BinaryOperation instanceof MemberReference element ReferenceType Class BlockStatement StatementExpression Assignment MemberReference clazz Cast ReferenceType Class MemberReference element = BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation element getClass = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation clazz getName LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation name Literal '.' lastIndexOf Literal 1 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator prefix Literal IfStatement MethodInvocation name MethodInvocation MemberReference prefix startsWith MemberReference substring BlockStatement StatementExpression Assignment MemberReference MethodInvocation prefix length += LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator suffix Literal LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation name length IfStatement MethodInvocation name MemberReference suffix endsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation suffix length -= ReturnStatement MethodInvocation name MemberReference MemberReference substring	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType State	1
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier protected BasicType int ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object FormalParameter ReferenceType Object client FormalParameter ReferenceType Object FormalParameter ReferenceType List arguments ReturnStatement MethodInvocation MemberReference client MemberReference MemberReference arguments	1
MethodDeclaration Modifier private Annotation Deprecated FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object owner LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference owner getSource getFacade LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator sourceFN Cast ReferenceType FigNode MethodInvocation lay MemberReference presentationFor IfStatement BinaryOperation != MemberReference sourceFN Literal null BlockStatement StatementExpression MethodInvocation MemberReference sourceFN setSourcePortFig StatementExpression MethodInvocation MemberReference sourceFN setSourceFigNode LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference owner getFacade LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator destFN Cast ReferenceType FigNode MethodInvocation lay MemberReference presentationFor IfStatement BinaryOperation != MemberReference destFN Literal null BlockStatement StatementExpression MethodInvocation MemberReference destFN setDestPortFig StatementExpression MethodInvocation MemberReference destFN setDestFigNode	1
MethodDeclaration Modifier protected BasicType int ReturnStatement Literal 0	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType MethodInvocation getFrame MethodInvocation Translator Literal localize MethodInvocation Translator Literal localize MemberReference message StatementExpression MethodInvocation dialog Literal true setVisible	0
MethodDeclaration Modifier public ReferenceType Dimension getPreferredSize IfStatement MemberReference expanded BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType getDirectionKind IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected StatementExpression SuperMethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object StatementExpression Assignment MemberReference TernaryExpression BinaryOperation instanceof MemberReference ReferenceType Fig Cast ReferenceType Fig MemberReference MemberReference = IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression Assignment MemberReference Literal null = ReturnStatement StatementExpression Assignment MemberReference MemberReference = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference listener add	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Action LocalVariableDeclaration Modifier final ReferenceType ArrayList TypeArgument ReferenceType Action VariableDeclarator actions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getMetaTypes MethodInvocation add StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getMetaTypes MethodInvocation add StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getMetaTypes MethodInvocation add StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getMetaTypes MethodInvocation add ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public ReferenceType Element ReturnStatement MethodInvocation document	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component BinaryOperation instanceof MemberReference node ReferenceType Node BlockStatement StatementExpression Cast ReferenceType Component MemberReference handle ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or node: " MemberReference node	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation initMenuCreate StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType getIcon ReturnStatement MemberReference icon	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal from Java SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase ReturnStatement MemberReference SwitchStatementCase MemberReference ModuleInterface ReturnStatement MemberReference SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType int getSize ReturnStatement MethodInvocation objects size	0
MethodDeclaration Modifier public ReferenceType Operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object returnType ReturnStatement MethodInvocation MemberReference classifier MemberReference returnType Literal null buildOperation2	0
MethodDeclaration Modifier public ReferenceType getObject FormalParameter BasicType int index ReturnStatement MethodInvocation MemberReference index get	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getPseudostateKind getFacade MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference dm getFacade LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression BinaryOperation == MemberReference Literal null Literal 0 MethodInvocation size IfStatement BinaryOperation > MemberReference Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference NAME	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem	0
MethodDeclaration Modifier public FormalParameter ReferenceType l StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference l remove	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr ThrowStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPackage getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public handleEndElement FormalParameter ReferenceType e SAXException TryStatement SwitchStatement MethodInvocation tokens MethodInvocation e getName Literal false toToken SwitchStatementCase MemberReference ProfileConfigurationTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "WARNING: unknown end tag:" MethodInvocation e getName warn BreakStatement CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType SAXException MemberReference ex	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public FormalParameter ReferenceType FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation MemberReference setText StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public addOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me FormalParameter ReferenceType String msg FormalParameter ReferenceType Object objects IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The handle must be instance of IfStatement BinaryOperation instanceof MemberReference me ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal must be instance of we got a " MemberReference me LocalVariableDeclaration ReferenceType Element VariableDeclarator element Cast ReferenceType Element MemberReference me IfStatement BinaryOperation != MethodInvocation element getOwner Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting ignore delete for " MemberReference element info LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation MemberReference element StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Namespace MemberReference handle Cast ReferenceType Element MemberReference me MemberReference msg MemberReference objects execute	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Dependency MemberReference dependency	0
MethodDeclaration Modifier public setBounds FormalParameter BasicType int FormalParameter BasicType int FormalParameter BasicType int w FormalParameter BasicType boolean IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig LocalVariableDeclaration BasicType int VariableDeclarator x BinaryOperation + MemberReference oldBounds x MemberReference LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference oldBounds y MemberReference LocalVariableDeclaration BasicType int VariableDeclarator h MemberReference oldBounds height StatementExpression MethodInvocation MemberReference x MemberReference y BinaryOperation + MemberReference x MemberReference w MemberReference y StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + MemberReference y Literal 2 BinaryOperation - MemberReference w Literal 4 MemberReference height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + BinaryOperation + MemberReference y MemberReference height Literal 4 BinaryOperation - MemberReference w Literal 4 BinaryOperation - BinaryOperation - MemberReference h MemberReference height Literal 8 setBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Cast ReferenceType Element MemberReference element add StatementExpression Cast ReferenceType Namespace MemberReference model StatementExpression MethodInvocation MethodInvocation MemberReference add	0
MethodDeclaration Modifier public characters FormalParameter BasicType char chars FormalParameter BasicType int start FormalParameter BasicType int len javax.xml.transform.TransformerException IfStatement BinaryOperation == MemberReference numLines Literal 0 BlockStatement StatementExpression MemberReference ++ numLines ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count MemberReference start BinaryOperation < MemberReference count BinaryOperation + MemberReference start MemberReference len MemberReference ++ count BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference count chars Literal '\n' BlockStatement StatementExpression MemberReference ++ numLines	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration BasicType boolean VariableDeclarator bContinue Literal true IfStatement MethodInvocation ! curLanguage MethodInvocation MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues equals getText BlockStatement StatementExpression Assignment MemberReference bContinue MethodInvocation MemberReference tabValues MethodInvocation curLanguage getText isUniqueLanguage = IfStatement MemberReference bContinue BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation * Literal 2 MemberReference currentIndex tabValues MethodInvocation curBody getText = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues MethodInvocation curLanguage getText = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression MethodInvocation updateFields	1
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference instructions	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Collection features ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference	0
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list Literal null LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation Model MethodInvocation MemberReference modelElement getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getOwner getFacade isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getFacade = BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getAttributes getFacade = IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference modelElement isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAParameter getFacade BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference owner getConnections getFacade = ReturnStatement MemberReference list	0
MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation && BinaryOperation < MemberReference row MemberReference elements length BinaryOperation < MemberReference col Literal 3 BlockStatement ReturnStatement MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal out of bounds"	0
MethodDeclaration Modifier public updateRoots IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation BlockStatement StatementExpression MethodInvocation p updateRoots StatementExpression MethodInvocation MemberReference ArrayCreator ReferenceType Project ArrayInitializer MemberReference currentProject ArrayCreator ReferenceType Project ArrayInitializer MemberReference currentProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object dependency StatementExpression MethodInvocation MemberReference dependency MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClassifierRole getFacade BlockStatement IfStatement MethodInvocation ! MethodInvocation getNodes MethodInvocation MemberReference modelElement contains getGraphModel BlockStatement StatementExpression Assignment MemberReference figNode MethodInvocation MemberReference modelElement Literal null makeNewFigCR = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference figNode MethodInvocation MethodInvocation MemberReference modelElement MethodInvocation bounds getLocation makeNewFigCR = IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Model element " MemberReference modelElement Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType long ReturnStatement BinaryOperation || BinaryOperation == MemberReference Literal 0 BinaryOperation != BinaryOperation & MemberReference MemberReference Literal 0	1
MethodDeclaration Modifier public BasicType int ReturnStatement TernaryExpression BinaryOperation && MemberReference MemberReference Literal 2 Literal 1	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter BasicType int index ReturnStatement MethodInvocation MemberReference index getElementAt	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType Object obj IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAUMLElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference obj getFacade IfStatement BinaryOperation instanceof MemberReference obj ReferenceType IItemUID BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator Cast ReferenceType IItemUID MemberReference obj ReturnStatement TernaryExpression BinaryOperation == MemberReference Literal null Literal null MethodInvocation toString LocalVariableDeclaration ReferenceType Object VariableDeclarator rv TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation obj MethodInvocation Literal Cast ReferenceType Class Literal null getMethod getClass StatementExpression Assignment MemberReference rv MethodInvocation m MemberReference obj Cast ReferenceType Object Literal null invoke = CatchClause CatchClauseParameter NoSuchMethodException nsme TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation obj MethodInvocation Literal Cast ReferenceType Class Literal null getMethod getClass StatementExpression Assignment MemberReference rv MethodInvocation m MemberReference obj Cast ReferenceType Object Literal null invoke = ReturnStatement Cast ReferenceType String MemberReference rv CatchClause CatchClauseParameter NoSuchMethodException ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iare StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal for " MethodInvocation obj getClass Literal " takes strange parameter: " MemberReference iare error ReturnStatement Literal null CatchClause CatchClauseParameter IllegalAccessException ReturnStatement Literal null CatchClause CatchClauseParameter InvocationTargetException tie StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal for " MethodInvocation obj getClass Literal " " MemberReference tie error ReturnStatement Literal null CatchClause CatchClauseParameter SecurityException se ReturnStatement Literal null CatchClause CatchClauseParameter InvocationTargetException tie StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " " MemberReference tie error ReturnStatement Literal null CatchClause CatchClauseParameter IllegalAccessException ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iare StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " takes strange parameter: " MemberReference iare error ReturnStatement Literal null CatchClause CatchClauseParameter StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " exception: " MemberReference error ReturnStatement Literal null IfStatement BinaryOperation == MemberReference rv Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference rv ReferenceType BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " returns strange value: " MethodInvocation rv getClass error ReturnStatement Literal null ReturnStatement MethodInvocation rv toString	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Property BlockStatement ReturnStatement MethodInvocation Collections emptySet IfStatement BinaryOperation instanceof MemberReference handle ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator theClass Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class MemberReference handle ReturnStatement MethodInvocation theClass ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A must be supplied" IfStatement MethodInvocation ! Model MethodInvocation MemberReference isAComment getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "A cannot be a " MethodInvocation MethodInvocation getName getClass StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Project LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Project VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Project IfStatement BinaryOperation != MemberReference currentProject Literal null BlockStatement StatementExpression MethodInvocation result MemberReference currentProject add ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object message LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType LocalVariableDeclaration BasicType int VariableDeclarator pos BinaryOperation + MethodInvocation MemberReference message MemberReference Literal 1 ReturnStatement MethodInvocation MemberReference message MemberReference message MemberReference pos	0
MethodDeclaration Modifier private ReferenceType String generateScope FormalParameter ReferenceType Object me IfStatement MethodInvocation MethodInvocation MemberReference me isStatic getFacade BlockStatement ReturnStatement Literal "static " ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Include	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int width StatementExpression SuperMethodInvocation MemberReference width setLineWidth	1
MethodDeclaration Modifier private ReferenceType Type FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Type params FormalParameter BasicType boolean OclTypeException IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException Literal "attempting to access features of LocalVariableDeclaration ReferenceType Type VariableDeclarator type MethodInvocation Basic MemberReference name MemberReference params IfStatement BinaryOperation != MemberReference type Literal null BlockStatement ReturnStatement MemberReference type LocalVariableDeclaration ReferenceType Object VariableDeclarator foundOp Literal null LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Collection VariableDeclarator operations MethodInvocation Model MethodInvocation MemberReference classifier getOperations getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation operations iterator WhileStatement BinaryOperation && MethodInvocation iter hasNext BinaryOperation == MemberReference foundOp Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation iter next IfStatement MethodInvocation MemberReference op MemberReference name MemberReference params BlockStatement StatementExpression Assignment MemberReference foundOp MemberReference op = IfStatement BinaryOperation == MemberReference foundOp Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal "operation " MemberReference name Literal " not found in classifier " MethodInvocation toString IfStatement MemberReference BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference foundOp getFacade BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal operations cannot " Literal "be used in OCL (" MemberReference name Literal ")" LocalVariableDeclaration ReferenceType Collection VariableDeclarator returnParams MethodInvocation Model MethodInvocation MemberReference foundOp getReturnParameters getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator rp IfStatement BinaryOperation == MethodInvocation returnParams size Literal 0 BlockStatement StatementExpression Assignment MemberReference rp Literal null = BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation returnParams MethodInvocation next iterator = IfStatement BinaryOperation > MethodInvocation returnParams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal compiler only handles one return parameter" Literal " - Found " MethodInvocation returnParams size Literal " for " MethodInvocation Model MethodInvocation MemberReference foundOp getName getFacade warn IfStatement BinaryOperation || BinaryOperation == MemberReference rp Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference rp getType getFacade Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "WARNING: return type warn ReturnStatement ClassCreator ReferenceType Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation Model MethodInvocation MemberReference rp getType getFacade ReturnStatement MethodInvocation MemberReference returnType	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected ReferenceType JTable getTable ReturnStatement MemberReference table	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public ReferenceType Object getClassifier ReturnStatement ClassReference ReferenceType Classifier	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType String FormalParameter Modifier final ReferenceType String newClassName StatementExpression MethodInvocation MemberReference MemberReference newClassName put	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Diagram d LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation d MethodInvocation size getNodes LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation d MethodInvocation size getEdges LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation Integer MemberReference valueOf MethodInvocation Integer MemberReference valueOf ReturnStatement MethodInvocation Translator Literal MemberReference msgArgs	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType MofClass VariableDeclarator Cast ReferenceType MofClass Cast ReferenceType RefObject MemberReference element ReturnStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation MethodInvocation getName equals	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MethodInvocation getAllPossibleImports getModelManagementHelper addAll ReturnStatement MemberReference list	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object pack IfStatement BinaryOperation instanceof MemberReference pack ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Namespace MemberReference pack	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object o ReturnStatement MethodInvocation objects MemberReference o indexOf	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false IfStatement BinaryOperation > MethodInvocation MemberReference node getChildCount Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference getAttributeModifierType IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal - 1 BinaryOperation != MemberReference MemberReference NORMAL_MOD BinaryOperation != MethodInvocation MethodInvocation MemberReference getKind getFacade Literal null MethodInvocation MethodInvocation MethodInvocation MethodInvocation getDirectionKind equals getFacade BlockStatement ReturnStatement Literal "const " ReturnStatement Literal ""	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference MemberReference	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected FormalParameter ReferenceType FigText IfStatement BinaryOperation == MemberReference MemberReference BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getText parse StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation toString setText	0
MethodDeclaration Modifier private setLookAndFeel FormalParameter ReferenceType String TryStatement IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation != MemberReference defaultLafClass Literal null BlockStatement StatementExpression MethodInvocation UIManager MemberReference defaultLafClass setLookAndFeel BlockStatement StatementExpression MethodInvocation UIManager MemberReference setLookAndFeel CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG MemberReference e error	1
MethodDeclaration Modifier private ReferenceType String generateOperation FormalParameter ReferenceType Object op FormalParameter BasicType boolean documented LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration BasicType boolean VariableDeclarator isDestructor Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation Model MethodInvocation MemberReference op getOwner getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MethodInvocation Model MethodInvocation MemberReference op getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator clsName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference op getOwner getFacade getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator tagStr Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference op Literal getTaggedValueValue getFacade IfStatement Literal MethodInvocation MemberReference tag equals "true" BlockStatement StatementExpression Assignment MemberReference tagStr Literal " " = IfStatement MethodInvocation Model MethodInvocation MemberReference op Literal hasStereotype getExtensionMechanismsHelper BlockStatement StatementExpression Assignment MemberReference nameStr BinaryOperation + Literal "~" MemberReference nameStr = StatementExpression Assignment MemberReference isDestructor Literal true = LocalVariableDeclaration ReferenceType List VariableDeclarator rps MethodInvocation Model MethodInvocation MemberReference op getReturnParameters getCoreHelper IfStatement BinaryOperation > MethodInvocation rps size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal return parameters not supported" LocalVariableDeclaration ReferenceType Object VariableDeclarator rp Literal null IfStatement BinaryOperation == MethodInvocation rps size Literal 1 BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation rps Literal 0 get = LocalVariableDeclaration ReferenceType List VariableDeclarator params ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference op getParameters getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + MethodInvocation MemberReference rp Literal "/// Literal "/// " Literal "/// generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT StatementExpression MethodInvocation params MemberReference rp remove IfStatement MemberReference documented BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MethodInvocation MemberReference op Literal "/// Literal "/// " Literal "/// generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT += ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator p MemberReference params BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MethodInvocation MemberReference p BinaryOperation + BinaryOperation + Literal "/// name=\"" MethodInvocation Model MethodInvocation MemberReference p getName getFacade Literal "\">" Literal "/// " Literal "/// generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT += StatementExpression Assignment MemberReference s MemberReference += IfStatement BinaryOperation && MethodInvocation ! Model getFacade MemberReference ! isDestructor BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference op += StatementExpression Assignment MemberReference s MethodInvocation MemberReference op generateScope += StatementExpression Assignment MemberReference s MethodInvocation MemberReference op += StatementExpression Assignment MemberReference s MethodInvocation MemberReference op generateVisibility += StatementExpression Assignment MemberReference s MemberReference tagStr += IfStatement BinaryOperation != MemberReference rp Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation Model MethodInvocation MemberReference rp getType getFacade IfStatement BinaryOperation && BinaryOperation == MemberReference returnType Literal null MethodInvocation ! nameStr MemberReference clsName equals BlockStatement StatementExpression Assignment MemberReference s Literal " " += IfStatement BinaryOperation != MemberReference returnType Literal null BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal " " MethodInvocation MemberReference returnType generateClassifierRef Literal " " += StatementExpression Assignment MemberReference s BinaryOperation + MemberReference nameStr Literal "(" += LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator p MemberReference params BlockStatement IfStatement MemberReference ! first BlockStatement StatementExpression Assignment MemberReference s Literal ", " += StatementExpression Assignment MemberReference s MethodInvocation MemberReference p generateParameter += StatementExpression Assignment MemberReference first Literal false = StatementExpression Assignment MemberReference s Literal ")" += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public BasicType boolean isAPackage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlPackage	0
MethodDeclaration Modifier public ReferenceType Include FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Include VariableDeclarator MethodInvocation StatementExpression MethodInvocation Cast ReferenceType MemberReference StatementExpression MethodInvocation Cast ReferenceType MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the of the that the StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation MemberReference cmd execute StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference MemberReference ReturnStatement Cast ReferenceType Include MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public FormalParameter ReferenceType Component comp FormalParameter ReferenceType Position position StatementExpression MethodInvocation MemberReference comp MethodInvocation position toString add	0
MethodDeclaration Modifier private ReferenceType JComponent LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator tab ClassCreator ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation ClassCreator ReferenceType Literal 20 Literal 1 Literal 0 Literal 0 MemberReference NONE StatementExpression MethodInvocation ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize add LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator ClassCreator ReferenceType JComboBox MethodInvocation MethodInvocation keySet MethodInvocation toArray StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference tab addActionListener StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation tab MemberReference MethodInvocation Translator Literal localize add LocalVariableDeclaration ReferenceType VariableDeclarator current MethodInvocation IfStatement BinaryOperation != MemberReference current Literal null BlockStatement StatementExpression MethodInvocation tab MethodInvocation MethodInvocation current getName add StatementExpression Assignment MemberReference MemberReference tab = ReturnStatement MemberReference	0
MethodDeclaration Modifier public setItem FormalParameter ReferenceType Object anObject IfStatement Cast ReferenceType UMLComboBoxModel MethodInvocation getModel BlockStatement StatementExpression MethodInvocation editor Cast ReferenceType UMLListCellRenderer2 MethodInvocation setText IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference anObject Literal null StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference anObject getInstance setIcon IfStatement MethodInvocation Model MethodInvocation MemberReference anObject isAUMLElement getFacade BlockStatement StatementExpression SuperMethodInvocation MethodInvocation Model MethodInvocation MemberReference anObject getName getFacade setItem BlockStatement StatementExpression SuperMethodInvocation MemberReference anObject setItem	1
MethodDeclaration Modifier static ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade BlockStatement ReturnStatement MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateExpression ReturnStatement Literal ""	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference ReferenceType Include BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the to the MemberReference MemberReference execute	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Collection TypeArgument ? arg0 ReturnStatement MethodInvocation list MemberReference arg0	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object connectionType FormalParameter ReferenceType Object fromElement FormalParameter ReferenceType Object toElement FormalParameter BasicType boolean checkWFR IfStatement MethodInvocation Model MethodInvocation MemberReference fromElement isReadOnly getModelManagementHelper BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Class TypeArgument ? VariableDeclarator validItems MethodInvocation validConnectionMap MemberReference connectionType get IfStatement BinaryOperation == MemberReference validItems Literal null BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator modeElementPair MemberReference validItems BlockStatement IfStatement BinaryOperation && MemberReference ArraySelector Literal 0 MethodInvocation MemberReference fromElement isInstance modeElementPair MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toElement isInstance modeElementPair BlockStatement IfStatement MemberReference checkWFR BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Class TypeArgument ? MemberReference connectionType Cast ReferenceType ModelElement MemberReference fromElement Cast ReferenceType ModelElement MemberReference toElement isConnectionWellformed BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator status MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation e getText format StatementExpression MethodInvocation MemberReference status	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Object target FormalParameter Modifier final ReferenceType PanelData panelData FormalParameter Modifier final ReferenceType LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference target getName getMetaTypes LocalVariableDeclaration Modifier final ReferenceType ToolBarFactory VariableDeclarator tbf ClassCreator ReferenceType ToolBarFactory ArrayCreator ReferenceType Object Literal 0 StatementExpression MethodInvocation tbf Literal true LocalVariableDeclaration Modifier final ReferenceType JToolBar VariableDeclarator tb MethodInvocation tbf LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator label IfStatement MethodInvocation Model MethodInvocation MemberReference target isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference target getKind getFacade StatementExpression Assignment MemberReference label MethodInvocation Model MethodInvocation MemberReference getName getFacade = BlockStatement StatementExpression Assignment MemberReference label MemberReference = StatementExpression MethodInvocation tb ClassCreator ReferenceType JLabel MemberReference label MethodInvocation MemberReference label MemberReference JLabel LEFT add IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation tb ClassCreator ReferenceType MemberReference target add IfStatement MethodInvocation panelData BlockStatement StatementExpression MethodInvocation tb ClassCreator ReferenceType MemberReference target add StatementExpression MethodInvocation tb ClassCreator ReferenceType MemberReference target add StatementExpression MethodInvocation tb ClassCreator ReferenceType add StatementExpression MethodInvocation tb ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference target MemberReference tb MethodInvocation panelData LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference target getFacade StatementExpression MethodInvocation MemberReference parent MemberReference tb MethodInvocation panelData StatementExpression MethodInvocation MemberReference tb add	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal false get	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal true setVisible	0
MethodDeclaration Modifier private ReferenceType Fig FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation p MemberReference target IfStatement BinaryOperation || BinaryOperation == MemberReference col Literal null MethodInvocation col isEmpty BlockStatement StatementExpression Assignment MemberReference target Literal null = BlockStatement StatementExpression Assignment MemberReference target MethodInvocation col MethodInvocation next iterator = ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target Literal null	1
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - Literal Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference ae BlockStatement StatementExpression SuperMethodInvocation MemberReference ae actionPerformed IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation Model MethodInvocation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getCoreHelper IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation Model MethodInvocation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getCoreHelper IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation Model MethodInvocation getComposite getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getCoreHelper IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation Model MethodInvocation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getComposite getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation Model MethodInvocation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getCoreHelper	0
MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object literal TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType Enumeration BinaryOperation instanceof MemberReference literal ReferenceType BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " or " MemberReference literal	0
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mi MethodInvocation getText StatementExpression MethodInvocation target MemberReference mi	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle	0
MethodDeclaration Modifier public Annotation Deprecated BasicType int ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection getBehaviors FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines MethodInvocation MethodInvocation Cast ReferenceType ModelElement MemberReference handle MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StatementExpression MethodInvocation result ClassCreator ReferenceType MemberReference add ReturnStatement MemberReference result	1
MethodDeclaration ReferenceType Color ReturnStatement MemberReference	0
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String localname FormalParameter ReferenceType String name SAXException IfStatement MethodInvocation MemberReference name BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator e MemberReference ArraySelector MemberReference -- nElements elements IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MethodInvocation e getName Literal " [" MethodInvocation e getText Literal "] " MemberReference e Literal "\n" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation e MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MethodInvocation e MemberReference i Literal " " MethodInvocation e MemberReference i getAttributeValue Literal "\n" append StatementExpression MethodInvocation LOG MemberReference buf debug StatementExpression MethodInvocation MemberReference e handleEndElement	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference child indexOf IfStatement BinaryOperation instanceof MemberReference parent ReferenceType BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator candidates ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference parent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation SynchronizedStatement MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference BlockStatement IfStatement MethodInvocation item MethodInvocation MemberReference BlockStatement StatementExpression MethodInvocation candidates MemberReference item add ReturnStatement MethodInvocation candidates MemberReference child indexOf ReturnStatement Literal - 1	1
MethodDeclaration Modifier public BasicType float getWeight ReturnStatement MemberReference weight	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType int i StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation progress MemberReference i StatementExpression MethodInvocation Literal true setVisible invokeLater	1
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal "The SwitchStatementCase ReturnStatement Literal "The SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType BinaryOperation instanceof MemberReference extend ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference elem ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType BinaryOperation instanceof MemberReference extend ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference extend ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference elem Literal " or " MemberReference extend	1
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType String suffix ReturnStatement MethodInvocation MethodInvocation MemberReference suffix	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter BasicType short modifiers FormalParameter ReferenceType String returnType FormalParameter ReferenceType String name FormalParameter ReferenceType List TypeArgument ReferenceType ParameterDeclaration parameters FormalParameter ReferenceType String javadoc ReturnStatement MethodInvocation MemberReference modifiers MemberReference EMPTY_STRING_LIST MemberReference returnType MemberReference name MemberReference parameters MemberReference javadoc Literal false	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier public final ReferenceType String qualified_type RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator q Literal "" LocalVariableDeclaration ReferenceType Token VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator qitem Literal "" StatementExpression Assignment MemberReference s MethodInvocation scope_override = StatementExpression Assignment MemberReference id MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LESSTHAN MethodInvocation MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation template_argument_list StatementExpression MethodInvocation MemberReference GREATERTHAN match IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_26 MethodInvocation Literal 2 LA member BlockStatement BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference qitem MemberReference s = StatementExpression Assignment MemberReference qitem BinaryOperation + MemberReference qitem MethodInvocation id getText = StatementExpression Assignment MemberReference q MemberReference qitem = ReturnStatement MemberReference q	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object orderingKind IfStatement BinaryOperation == MemberReference orderingKind Literal null BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade Literal null BlockStatement ReturnStatement Literal "" IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade equals "" BlockStatement ReturnStatement Literal "" IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade equals BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + BinaryOperation + Literal "{" MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade Literal "}"	1
MethodDeclaration Modifier public ReferenceType Dimension LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference height MemberReference MemberReference height MemberReference LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation Math BinaryOperation + MemberReference width BinaryOperation * Literal 2 MemberReference BinaryOperation + MemberReference width BinaryOperation * Literal 2 MemberReference max ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ClassReference ReferenceType Literal MethodInvocation Model MethodInvocation getAssociation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int getTypeOrderNumer ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null SuperMethodInvocation getTypeOrderNumer MethodInvocation MethodInvocation getTypeOrderNumer first	1
MethodDeclaration Modifier private static ReferenceType Object getFirstItemOrNull FormalParameter ReferenceType Collection c IfStatement BinaryOperation == MethodInvocation c size Literal 0 BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c ReturnStatement MethodInvocation c MethodInvocation next iterator	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public act FormalParameter ReferenceType File f IOException IfStatement BinaryOperation && MethodInvocation ! f isDirectory MethodInvocation ! f MethodInvocation Literal ".bak" endsWith getName BlockStatement LocalVariableDeclaration ReferenceType FileReader VariableDeclarator fr ClassCreator ReferenceType FileReader MemberReference f LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator bfr ClassCreator ReferenceType BufferedReader MemberReference fr TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer Cast BasicType int MethodInvocation f length LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation bfr readLine DoStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation result MemberReference line append StatementExpression Assignment MemberReference line MethodInvocation bfr readLine = IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation result Literal '\n' append StatementExpression MethodInvocation ret ClassCreator ReferenceType SourceUnit MethodInvocation f MethodInvocation MemberReference prefix substring toString MethodInvocation result toString add StatementExpression MethodInvocation bfr close StatementExpression MethodInvocation fr close	1
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public ReferenceType Namespace LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator result Literal null TryStatement StatementExpression Assignment MemberReference result Cast ReferenceType StringNamespace This MethodInvocation clone = CatchClause CatchClauseParameter CloneNotSupportedException e StatementExpression MethodInvocation LOG MemberReference e debug ReturnStatement Literal null StatementExpression MethodInvocation result ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType VariableDeclarator f MethodInvocation MemberReference metaType IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation f isVisible	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference verboseDocs	0
MethodDeclaration Modifier public ReferenceType Enumeration FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public static FormalParameter ReferenceType event StatementExpression MethodInvocation SINGLETON MemberReference event	0
MethodDeclaration Modifier public ReferenceType Font IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MethodInvocation parent ReturnStatement MemberReference	0
MethodDeclaration Modifier public updateSubTask FormalParameter Modifier final ReferenceType String action StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference action setText invokeLater	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getConnections getFacade setAllElements	0
MethodDeclaration Modifier private ReferenceType JFileChooser IfStatement BinaryOperation == MemberReference fileChooser Literal null BlockStatement StatementExpression Assignment MemberReference fileChooser ClassCreator ReferenceType JFileChooser = StatementExpression MethodInvocation fileChooser ClassCreator ReferenceType setFileFilter ReturnStatement MemberReference fileChooser	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType e StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation getSelectedIndex Literal 0 setEnabled	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public Annotation Override updateListener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && BinaryOperation == MethodInvocation pce getSource MemberReference modelElement BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation pce getPropertyName equals "stereotype" Literal "taggedValue" Literal "type" BlockStatement IfStatement BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent BlockStatement StatementExpression MethodInvocation MethodInvocation pce getNewValue IfStatement BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent BlockStatement StatementExpression MethodInvocation MethodInvocation pce getOldValue	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType FigEdge edge StatementExpression SuperMethodInvocation MemberReference edge IfStatement BinaryOperation instanceof MemberReference edge ReferenceType FigMessage BlockStatement LocalVariableDeclaration Modifier final ReferenceType FigMessage VariableDeclarator figMessage Cast ReferenceType FigMessage MemberReference edge StatementExpression MethodInvocation MemberReference figMessage StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ReferenceType getCorePackage ReturnStatement MethodInvocation modelImpl MethodInvocation getCore	0
MethodDeclaration Modifier public ReferenceType Stereotype LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal a StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute ReturnStatement Cast ReferenceType Stereotype MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier private BasicType boolean isUniqueLanguage FormalParameter ReferenceType String tabValues FormalParameter ReferenceType String LocalVariableDeclaration BasicType boolean VariableDeclarator bContinue Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation && BinaryOperation < MemberReference i MemberReference tabValues length MemberReference bContinue Assignment MemberReference i Literal 2 += BlockStatement IfStatement BinaryOperation != MemberReference i MemberReference currentIndex BlockStatement StatementExpression Assignment MemberReference bContinue MemberReference ! ArraySelector MemberReference i MethodInvocation MemberReference equals tabValues = ReturnStatement MemberReference bContinue	1
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean overwrite FormalParameter Modifier final ReferenceType File file FormalParameter Modifier final BasicType boolean exit IfStatement MethodInvocation ! PersistenceManager MethodInvocation MethodInvocation getFrame MemberReference overwrite MemberReference file getInstance BlockStatement ReturnStatement IfStatement This MethodInvocation MemberReference file BlockStatement StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal localize MethodInvocation Translator Literal localize MemberReference JOptionPane INFORMATION_MESSAGE showMessageDialog ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator worker ClassCreator ReferenceType MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager MemberReference file MemberReference exit StatementExpression MethodInvocation LOG Literal "Starting save thread" info StatementExpression MethodInvocation worker start	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType filter FormalParameter ReferenceType Object StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference removeNotificationListener	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AggregationKind	0
MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigCompositeState VariableDeclarator figClone Cast ReferenceType FigCompositeState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference action isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference action getOperation getFacade IfStatement BinaryOperation != MemberReference operation Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference operation getName getFacade IfStatement BinaryOperation != MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference ret Cast ReferenceType String MemberReference n = StatementExpression Assignment MemberReference n MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference operation getOwner getFacade getName getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference n Literal null MethodInvocation ! n Literal "" equals BlockStatement StatementExpression Assignment MemberReference ret BinaryOperation + BinaryOperation + Literal Cast ReferenceType String MemberReference n Literal ")" += IfStatement BinaryOperation == MemberReference ret Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MemberReference ret	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType boolean isVisiblyOwned FormalParameter Modifier final ReferenceType ModelElement element FormalParameter Modifier final ReferenceType GeneralizableElement ge FormalParameter Modifier final ReferenceType Set TypeArgument ReferenceType ModelElement dupCheck AssertStatement BinaryOperation != MemberReference dupCheck Literal null AssertStatement BinaryOperation != MemberReference ge Literal null AssertStatement BinaryOperation != MemberReference element Literal null LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator MethodInvocation ! dupCheck MemberReference ge add IfStatement MemberReference BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal generalization found " MethodInvocation MemberReference ge getFullName warn ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Generalization VariableDeclarator g MethodInvocation ge BlockStatement LocalVariableDeclaration Modifier final ReferenceType GeneralizableElement VariableDeclarator parent MethodInvocation g getParent IfStatement BinaryOperation && BinaryOperation instanceof MemberReference parent ReferenceType Namespace MethodInvocation MemberReference element Cast ReferenceType Namespace MemberReference parent isVisiblyOwned BlockStatement ReturnStatement Literal true ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Generalization VariableDeclarator g MethodInvocation ge BlockStatement IfStatement MethodInvocation MemberReference element MethodInvocation g getParent MemberReference dupCheck isVisiblyOwned BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getName getFacade	0
MethodDeclaration Modifier private ReferenceType AssociationEnd buildAssociationEndInternal FormalParameter ReferenceType Object assoc FormalParameter ReferenceType String name FormalParameter ReferenceType Object type FormalParameter ReferenceType Object stereo FormalParameter BasicType boolean navigable FormalParameter ReferenceType Object order FormalParameter ReferenceType Object aggregation FormalParameter ReferenceType Object scope FormalParameter ReferenceType Object changeable FormalParameter ReferenceType Object visibility IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference assoc Literal null BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BinaryOperation == MemberReference type Literal null BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal type or association " Literal "are null" IfStatement BinaryOperation && BinaryOperation != MemberReference stereo Literal null BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal IfStatement BinaryOperation && BinaryOperation != MemberReference order Literal null BinaryOperation instanceof MemberReference order ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal IfStatement BinaryOperation && BinaryOperation != MemberReference aggregation Literal null BinaryOperation instanceof MemberReference aggregation ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal IfStatement BinaryOperation && BinaryOperation != MemberReference scope Literal null BinaryOperation instanceof MemberReference scope ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal IfStatement BinaryOperation && BinaryOperation != MemberReference changeable Literal null BinaryOperation instanceof MemberReference changeable ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal IfStatement BinaryOperation && BinaryOperation != MemberReference visibility Literal null BinaryOperation instanceof MemberReference visibility ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation StatementExpression MethodInvocation end Cast ReferenceType UmlAssociation MemberReference assoc StatementExpression MethodInvocation end Cast ReferenceType Classifier MemberReference type StatementExpression MethodInvocation end MemberReference name setName LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AssociationEnd VariableDeclarator ends Cast ReferenceType UmlAssociation MemberReference assoc IfStatement BinaryOperation >= MethodInvocation ends size Literal 3 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator e MemberReference ends BlockStatement StatementExpression MethodInvocation e MemberReference setAggregation IfStatement BinaryOperation != MemberReference stereo Literal null BlockStatement StatementExpression MethodInvocation end MethodInvocation clear getStereotype StatementExpression MethodInvocation end MethodInvocation Cast ReferenceType Stereotype MemberReference stereo add getStereotype StatementExpression MethodInvocation end MemberReference navigable setNavigable IfStatement BinaryOperation != MemberReference order Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference order BlockStatement StatementExpression MethodInvocation end MemberReference IfStatement BinaryOperation != MemberReference aggregation Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType AggregationKind MemberReference aggregation setAggregation BlockStatement StatementExpression MethodInvocation end MemberReference setAggregation IfStatement BinaryOperation != MemberReference scope Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference scope setTargetScope BlockStatement StatementExpression MethodInvocation end MemberReference setTargetScope IfStatement BinaryOperation != MemberReference changeable Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference changeable setChangeability BlockStatement StatementExpression MethodInvocation end MemberReference setChangeability IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference visibility setVisibility BlockStatement StatementExpression MethodInvocation end MemberReference setVisibility ReturnStatement MemberReference end	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getClientDependencies getFacade setAllElements	0
MethodDeclaration Modifier public ReferenceType Object getTop FormalParameter ReferenceType Object sm ReturnStatement MethodInvocation impl MemberReference sm getTop	0
MethodDeclaration Modifier public BasicType int getMinY StatementExpression MethodInvocation LOG Literal = 0" debug ReturnStatement Literal 0	0
MethodDeclaration Modifier private FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation info getText LocalVariableDeclaration ReferenceType VariableDeclarator contents ClassCreator ReferenceType MemberReference LocalVariableDeclaration ReferenceType Clipboard VariableDeclarator clipboard MethodInvocation MethodInvocation getToolkit StatementExpression MethodInvocation clipboard MemberReference contents MemberReference	1
MethodDeclaration Modifier public delete FormalParameter Modifier final ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation Cast ReferenceType MemberReference elem delete StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal from the model the element MemberReference elem execute	0
MethodDeclaration FormalParameter ReferenceType Method source FormalParameter ReferenceType Method target LocalVariableDeclaration ReferenceType VariableDeclarator pe MethodInvocation source getBody LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation target getBody IfStatement MethodInvocation ! MemberReference MemberReference pe equal BlockStatement StatementExpression MethodInvocation target Cast ReferenceType MethodInvocation modelImpl MethodInvocation MethodInvocation pe getLanguage MethodInvocation pe getBody IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory StatementExpression MethodInvocation MemberReference source MemberReference target	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean StatementExpression MethodInvocation theComboBox MemberReference setEnabled StatementExpression MethodInvocation theComboBox MemberReference	0
MethodDeclaration Modifier private ReferenceType String generateKind FormalParameter ReferenceType Object kind LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference kind Literal null BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal "" append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getDirectionKind BlockStatement IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal append ReturnStatement MethodInvocation s toString	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Context c StatementExpression Assignment This MemberReference context MemberReference c =	0
MethodDeclaration Modifier private static getContents FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType ModelElement results FormalParameter Modifier final ReferenceType UmlPackage pkg LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator c MethodInvocation pkg ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator ei MemberReference c BlockStatement StatementExpression MethodInvocation results MethodInvocation ei getImportedElement add StatementExpression MethodInvocation MemberReference results Cast ReferenceType Namespace MemberReference pkg getContents	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child ReturnStatement MethodInvocation MethodInvocation MemberReference child indexOf MemberReference parent	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator cs Cast ReferenceType MemberReference o ReturnStatement BinaryOperation == MethodInvocation cs getContainer Literal null ReturnStatement Literal false CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter StatementExpression SuperMethodInvocation MemberReference handle MemberReference parameter StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public reset StatementExpression Assignment MemberReference numLines Literal 0 =	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade addElement	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier static ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections MemberReference	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation ae getActionCommand ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation Notation BlockStatement IfStatement MethodInvocation key MethodInvocation equals BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation p MethodInvocation MemberReference getProjectSettings BreakStatement	0
MethodDeclaration Modifier public static assignAccelerator FormalParameter ReferenceType JMenuItem menuItem FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType VariableDeclarator shortcut MethodInvocation MemberReference get IfStatement BinaryOperation != MemberReference shortcut Literal null BlockStatement LocalVariableDeclaration ReferenceType KeyStroke VariableDeclarator keyStroke MethodInvocation shortcut getCurrentShortcut IfStatement BinaryOperation != MemberReference keyStroke Literal null BlockStatement StatementExpression MethodInvocation menuItem MemberReference keyStroke LocalVariableDeclaration ReferenceType KeyStroke VariableDeclarator MethodInvocation duplicate MemberReference keyStroke get IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator actionName Cast ReferenceType String MethodInvocation menuItem MethodInvocation MemberReference AbstractAction NAME getValue getAction StatementExpression MethodInvocation menuItem MethodInvocation MemberReference MemberReference actionName put MemberReference JComponent WHEN_IN_FOCUSED_WINDOW getInputMap StatementExpression MethodInvocation menuItem MethodInvocation MemberReference actionName MethodInvocation menuItem getAction put getActionMap	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection StatementExpression SuperMethodInvocation MemberReference handle MemberReference StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation add	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal "Parsing in Java not supported"	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference table Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType StatementExpression Assignment MemberReference table ClassCreator ReferenceType JTable ClassCreator ReferenceType = StatementExpression MethodInvocation table MemberReference JTable StatementExpression MethodInvocation table Literal true StatementExpression MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference table MemberReference CENTER add LocalVariableDeclaration BasicType int VariableDeclarator Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator Literal 5 LocalVariableDeclaration ReferenceType VariableDeclarator top ClassCreator ReferenceType ClassCreator ReferenceType MemberReference MemberReference LocalVariableDeclaration ReferenceType JLabel VariableDeclarator label ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize LocalVariableDeclaration ReferenceType JTextField VariableDeclarator j ClassCreator ReferenceType JTextField StatementExpression Assignment MemberReference MemberReference j = StatementExpression MethodInvocation Literal false setEnabled StatementExpression MethodInvocation label MemberReference setLabelFor StatementExpression MethodInvocation top MemberReference label add StatementExpression MethodInvocation top MemberReference add StatementExpression MethodInvocation MemberReference top MemberReference add ReturnStatement This	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getCoreFactory	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression Assignment MemberReference action MethodInvocation Model MethodInvocation MemberReference newOwner getAction getFacade = LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator listeners ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation getAction StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation getOwner Literal "remove" add IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference action Literal add TryStatement StatementExpression MethodInvocation MemberReference listeners updateElementListeners CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal "Exception caught" MemberReference e error	1
MethodDeclaration Modifier public ReferenceType Context getContext ReturnStatement MemberReference context	0
MethodDeclaration Modifier protected ReferenceType Object IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getSubmachine getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object child FormalParameter ReferenceType Object parnt FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Object VariableDeclarator rel MethodInvocation Model MethodInvocation MemberReference child MemberReference parnt MemberReference namespace getCoreFactory ReturnStatement MemberReference rel	1
MethodDeclaration Modifier public removeElement FormalParameter ReferenceType Object o LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation objects MemberReference o indexOf IfStatement BinaryOperation == MethodInvocation MemberReference index getElementAt MemberReference BlockStatement IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation TernaryExpression BinaryOperation == MethodInvocation getSize Literal 1 Literal null MethodInvocation BinaryOperation + MemberReference index Literal 1 getElementAt setSelectedItem BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation - MemberReference index Literal 1 getElementAt setSelectedItem IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation objects MemberReference index remove StatementExpression MethodInvocation This MemberReference index MemberReference index	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier public BasicType boolean isActive FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object execute LocalVariableDeclaration ReferenceType VariableDeclarator dialog ClassCreator ReferenceType MethodInvocation MethodInvocation MethodInvocation getDialogTitle MethodInvocation MethodInvocation isExclusive LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation dialog MethodInvocation getFrame showDialog IfStatement BinaryOperation == MemberReference result MemberReference JOptionPane BlockStatement StatementExpression MethodInvocation MethodInvocation dialog ReturnStatement Literal null	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade setAllElements	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference target Literal null BlockStatement StatementExpression MethodInvocation Literal false setEnabled StatementExpression MethodInvocation nextButton Literal false setEnabled StatementExpression MethodInvocation Literal false setEnabled StatementExpression MethodInvocation helpButton Literal false setEnabled IfStatement BinaryOperation instanceof MemberReference target ReferenceType ToDoItem BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator tdi Cast ReferenceType ToDoItem MemberReference target LocalVariableDeclaration ReferenceType VariableDeclarator w MethodInvocation StatementExpression MethodInvocation TernaryExpression BinaryOperation != MemberReference w Literal null MethodInvocation w Literal false setEnabled StatementExpression MethodInvocation nextButton TernaryExpression BinaryOperation != MemberReference w Literal null MethodInvocation w Literal false setEnabled StatementExpression MethodInvocation TernaryExpression BinaryOperation != MemberReference w Literal null MethodInvocation w canFinish Literal false setEnabled IfStatement BinaryOperation || BinaryOperation == MethodInvocation tdi Literal null Literal MethodInvocation MethodInvocation tdi equals "" BlockStatement StatementExpression MethodInvocation helpButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation helpButton Literal true setEnabled BlockStatement ReturnStatement	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int i IfStatement BinaryOperation || BinaryOperation == MemberReference i MemberReference BOTTOM BinaryOperation == MemberReference i MemberReference LEFT BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType String getHeader ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object clazz ReturnStatement MethodInvocation impl MemberReference clazz	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object op FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation MemberReference op ReturnStatement MethodInvocation Section MemberReference id MemberReference	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Object d SynchronizedStatement MethodInvocation StatementExpression Assignment MemberReference MemberReference d =	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType UmlAssociation ReturnStatement MethodInvocation MethodInvocation modelImpl	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MemberReference target	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object StatementExpression SuperMethodInvocation MemberReference StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal "ownedElement" getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getUMLClass getMetaTypes Literal "name" getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getInterface getMetaTypes Literal "name" getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getDataType getMetaTypes Literal "name" getPump	0
MethodDeclaration Modifier public setParent FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent StatementExpression SuperMethodInvocation MemberReference handle MemberReference parent setParent StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType String areaLabel FormalParameter ReferenceType Element area LocalVariableDeclaration ReferenceType String VariableDeclarator label Literal null IfStatement BinaryOperation != MethodInvocation area Literal "label" getAttribute Literal null BlockStatement StatementExpression Assignment MemberReference label MethodInvocation area Literal "label" getAttribute = BlockStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator parent Cast ReferenceType Element MethodInvocation area IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference parent Literal null MethodInvocation parent MethodInvocation Literal "areaset" equals getNodeName BinaryOperation != MethodInvocation parent Literal "label" getAttribute Literal null BlockStatement StatementExpression Assignment MemberReference label MethodInvocation parent Literal "label" getAttribute = ReturnStatement MemberReference label	1
MethodDeclaration Modifier public ReferenceType Object getOwner ReturnStatement MemberReference owner	0
MethodDeclaration Modifier private ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer Literal null MemberReference MemberReference ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public Annotation Override doAction FormalParameter BasicType int oldStep IfStatement MemberReference ! BlockStatement StatementExpression SuperMethodInvocation MemberReference oldStep doAction ReturnStatement SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1 getSelectedIndex = SwitchStatement MemberReference choice SwitchStatementCase Literal - 1 ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "nothing selected, should not get SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MethodInvocation getModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation Model MethodInvocation MemberReference oper getRoot getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference m getOwnedElements MethodInvocation iterator getFacade MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator candidate MethodInvocation iter next IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement IfStatement Literal ! "create" BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference candidate getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter2 TernaryExpression BinaryOperation != MemberReference Literal null MethodInvocation iterator Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference iter2 Literal null Literal ! BlockStatement ContinueStatement StatementExpression Assignment MemberReference MemberReference candidate = BreakStatement IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation Literal "create" MemberReference m buildStereotype getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference Literal "create" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference Literal getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MethodInvocation Model MethodInvocation MemberReference oper getNamespace getFacade MethodInvocation Model MethodInvocation MemberReference oper getRoot getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference addOwnedElement getCoreHelper TryStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation Model MethodInvocation MemberReference oper MemberReference getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager StatementExpression Assignment MemberReference Literal true = CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG Literal "could not set MemberReference pve error ReturnStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference Literal false = ReturnStatement SwitchStatementCase ReturnStatement SwitchStatementCase Literal 2 IfStatement MemberReference ! BlockStatement StatementExpression SuperMethodInvocation Literal 1 doAction ReturnStatement SwitchStatementCase	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object multiplicity IfStatement BinaryOperation instanceof MemberReference multiplicity ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal must be instance " Literal "of LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference multiplicity IfStatement BinaryOperation == MethodInvocation getLower MethodInvocation getUpper BlockStatement ReturnStatement MethodInvocation MethodInvocation getLower BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation getLower Literal ".." MethodInvocation MethodInvocation getUpper	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference progress updateProgress	0
MethodDeclaration Modifier public ReferenceType Object getUMLClass ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier static ReferenceType Object FormalParameter ReferenceType String typeName FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Collection VariableDeclarator dataTypes MethodInvocation MethodInvocation MemberReference getCoreHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dt MemberReference dataTypes BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference dt getName MethodInvocation MemberReference typeName equals getFacade BlockStatement ReturnStatement MemberReference dt ReturnStatement Literal null	0
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType InputStream inputStream OpenException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference inputStream MethodInvocation getEncoding = LocalVariableDeclaration ReferenceType String VariableDeclarator rootLine MethodInvocation reader readLine WhileStatement BinaryOperation && BinaryOperation != MemberReference rootLine Literal null MethodInvocation ! rootLine MethodInvocation Literal " startsWith trim BlockStatement StatementExpression Assignment MemberReference rootLine MethodInvocation reader readLine = IfStatement BinaryOperation == MemberReference rootLine Literal null BlockStatement ReturnStatement Literal 1 ReturnStatement MethodInvocation Integer MethodInvocation MemberReference rootLine getVersion parseInt CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e TryStatement IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation close StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public Annotation Override addNodeRelatedEdges FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node addNodeRelatedEdges IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getAssociationEnds getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ends iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator associationEnd MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator association MethodInvocation Model MethodInvocation MemberReference associationEnd getAssociation getFacade IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference association isANaryAssociation getFacade MethodInvocation MemberReference associationEnd canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference associationEnd addEdge IfStatement MethodInvocation MemberReference association canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference association addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference node isAGeneralizableElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator generalizations MethodInvocation Model MethodInvocation MemberReference node getGeneralizations getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation generalizations iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation iter next IfStatement MethodInvocation MemberReference generalization canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference generalization addEdge LocalVariableDeclaration ReferenceType Collection VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference node getSpecializations getFacade StatementExpression Assignment MemberReference iter MethodInvocation specializations iterator = WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator specialization MethodInvocation iter next IfStatement MethodInvocation MemberReference specialization canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference specialization addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ends iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd MethodInvocation iter next IfStatement MethodInvocation MemberReference associationEnd canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference associationEnd addEdge	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference currentTarget	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public ReferenceType Collection getConnections FormalParameter ReferenceType Object handle IfStatement BinaryOperation == MemberReference handle Literal null BlockStatement ReturnStatement MethodInvocation Collections IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType Association MemberReference handle	1
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference BITWISEXOR = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '^' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object getMessage ReturnStatement ClassReference ReferenceType Message	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference EQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "==" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String desc LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Token VariableDeclarator lexer ClassCreator MethodInvocation parse ReferenceType MemberReference desc ReturnStatement MethodInvocation MemberReference lexer	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator l ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation l ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner Literal null add LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference newOwner getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation i next StatementExpression MethodInvocation l ArrayCreator ReferenceType Object ArrayInitializer MemberReference st Literal "name" add StatementExpression MethodInvocation MemberReference l updateElementListeners	1
MethodDeclaration Modifier public ReferenceType String getLabel ReturnStatement MemberReference label	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object ps LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet MemberReference ps LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MethodInvocation Model MethodInvocation MemberReference ps getContainer getFacade IfStatement BinaryOperation == MemberReference cs Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "null parent in valid" debug ReturnStatement MemberReference offs LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference cs getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade MethodInvocation Model MethodInvocation getPseudostateKind getFacade BlockStatement StatementExpression MethodInvocation offs MemberReference sv add ReturnStatement MemberReference offs	0
MethodDeclaration Modifier public final RecognitionException TokenStreamException StatementExpression MethodInvocation	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference cls computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference getType getFacade getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference getType getFacade getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = IfStatement BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference IfStatement BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference IfStatement BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference IfStatement BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public setBounds FormalParameter BasicType int FormalParameter BasicType int IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig LocalVariableDeclaration BasicType int VariableDeclarator x MemberReference oldBounds x LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference oldBounds y MemberReference LocalVariableDeclaration BasicType int VariableDeclarator w MemberReference oldBounds width LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + MemberReference oldBounds height MemberReference StatementExpression MethodInvocation MemberReference x MemberReference y BinaryOperation + MemberReference x MemberReference w MemberReference y StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + MemberReference y Literal 2 BinaryOperation - MemberReference w Literal 4 MemberReference height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + BinaryOperation + MemberReference y MemberReference height Literal 4 BinaryOperation - MemberReference w Literal 4 BinaryOperation - BinaryOperation - MemberReference h MemberReference height Literal 8 setBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator Cast ReferenceType MemberReference handle IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ce Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType Expression VariableDeclarator MethodInvocation ce IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression MethodInvocation ce Cast ReferenceType MemberReference value IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Expression BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator arg Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType Expression VariableDeclarator MethodInvocation arg getValue IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression MethodInvocation arg Cast ReferenceType Expression MemberReference value setValue IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference item StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MemberReference text setMultiplicity getCoreHelper StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getMultiplicity getFacade toString getFacade = LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference text search IfStatement BinaryOperation == MemberReference o Literal null BlockStatement StatementExpression Cast ReferenceType MethodInvocation getModel StatementExpression MethodInvocation MemberReference text setSelectedItem StatementExpression MethodInvocation MethodInvocation MemberReference text setItem getEditor	0
MethodDeclaration Modifier private final FormalParameter ReferenceType Object modelElement Exception IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" StatementExpression Assignment MemberReference objDocBlock ClassCreator ReferenceType DocBlock = StatementExpression Assignment MemberReference objModelElement MemberReference modelElement = StatementExpression Assignment MemberReference iDocBlockType MemberReference BLOCK_TYPE_INCLUDE = StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS disableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_STATIC disableTag StatementExpression MethodInvocation objDocBlock BinaryOperation + Literal "include " MethodInvocation NameGenerator MemberReference modelElement generateClassifierName setDescription StatementExpression MethodInvocation objDocBlock MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade setTags	1
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AttributeChangeEvent BinaryOperation || MethodInvocation pce MethodInvocation Literal equals getPropertyName MethodInvocation pce MethodInvocation Literal equals getPropertyName BlockStatement StatementExpression Cast ReferenceType FigAssociation MemberReference figEdge StatementExpression MethodInvocation IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation pce MethodInvocation Literal equals getPropertyName BlockStatement StatementExpression MethodInvocation figEdge LocalVariableDeclaration ReferenceType String VariableDeclarator pName MethodInvocation pce getPropertyName IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation MethodInvocation pce getNewValue equals BlockStatement StatementExpression MethodInvocation role StatementExpression MethodInvocation StatementExpression MethodInvocation IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.TRUE MethodInvocation pce getNewValue equals BlockStatement StatementExpression MethodInvocation role BlockStatement StatementExpression SuperMethodInvocation MemberReference pce propertyChange	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public synchronized static ReferenceType getInstance IfStatement BinaryOperation != MemberReference singleton Literal null ReturnStatement MemberReference singleton ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public Annotation Override BasicType int getRank ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal 0 MethodInvocation MethodInvocation getRank first	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object at FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference at ReferenceType Attribute BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType Expression BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator Cast ReferenceType Attribute MemberReference at IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference expr equal BlockStatement StatementExpression Cast ReferenceType Attribute MemberReference at IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference at Literal " or " MemberReference expr	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" addProfile FormalParameter ReferenceType Profile p FormalParameter ReferenceType Object m IfStatement MethodInvocation ! profiles MemberReference p contains BlockStatement StatementExpression MethodInvocation profiles MemberReference p add TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator profile MethodInvocation p BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference m MemberReference profile getExtensionMechanismsHelper StatementExpression MethodInvocation MethodInvocation p addAll CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Error retrieving " MemberReference p Literal " packages." MemberReference e warn LocalVariableDeclaration ReferenceType VariableDeclarator fns MethodInvocation p IfStatement BinaryOperation != MemberReference fns Literal null BlockStatement StatementExpression MethodInvocation MemberReference fns add ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator dependency MethodInvocation p getDependencies BlockStatement StatementExpression MethodInvocation MemberReference dependency MemberReference m addProfile StatementExpression MethodInvocation StatementExpression MethodInvocation ClassCreator ReferenceType ArgoProfileEvent MemberReference ArgoEventTypes ClassCreator ReferenceType PropertyChangeEvent This Literal "profile" Literal null MemberReference p	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType Resource TypeArgument ReferenceType Boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Fig FormalParameter ReferenceType FigNode figNode IfStatement BinaryOperation instanceof MemberReference figNode ReferenceType BlockStatement ReturnStatement MemberReference figNode BlockStatement ReturnStatement Cast ReferenceType Fig MethodInvocation figNode MethodInvocation Literal 0 get	1
MethodDeclaration Modifier public ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator tab MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference tab ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference tab ReturnStatement Literal null	0
MethodDeclaration Modifier public resume SynchronizedStatement MemberReference StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public setCondition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator Cast ReferenceType MemberReference handle IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference equal BlockStatement StatementExpression Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation getDataType MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType DataType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal " DataType " MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate " MemberReference name Literal " in metamodel" error ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal " " MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate " MemberReference name Literal " in metamodel" error ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType PrimitiveType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal " PrimitiveType " MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate primitive type " MemberReference name Literal " in metamodel" error ReturnStatement MemberReference names	1
MethodDeclaration Modifier public Annotation Override keyPressed FormalParameter ReferenceType KeyEvent ke IfStatement BinaryOperation || BinaryOperation == MethodInvocation ke getKeyCode MemberReference KeyEvent BinaryOperation == MethodInvocation ke getKeyCode MemberReference KeyEvent BlockStatement StatementExpression MethodInvocation ke consume BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference instructions	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType fnd StatementExpression MethodInvocation MemberReference fnd stereotype MemberReference fnd img put	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Message FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to LocalVariableDeclaration ReferenceType VariableDeclarator l1 Cast ReferenceType MemberReference from LocalVariableDeclaration ReferenceType VariableDeclarator l2 Cast ReferenceType MemberReference to LocalVariableDeclaration ReferenceType Message VariableDeclarator message MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator send MethodInvocation StatementExpression MethodInvocation message MemberReference StatementExpression MethodInvocation message MemberReference send StatementExpression MethodInvocation l1 MethodInvocation MemberReference send add StatementExpression MethodInvocation l2 MethodInvocation MemberReference add ReturnStatement MemberReference message	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object root ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Permission	0
MethodDeclaration Modifier protected ReferenceType Object IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getMultiplicity getFacade toString getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getAssociation getFacade	0
MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement IfStatement BinaryOperation == MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation editor MemberReference x MemberReference y IfStatement BinaryOperation == MemberReference destFig Literal null BlockStatement StatementExpression Assignment MemberReference destFig MethodInvocation editor BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 = LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel IfStatement MethodInvocation ! MemberReference sourceFig MemberReference destFig BlockStatement StatementExpression Assignment MemberReference destFig Literal null = BlockStatement StatementExpression MethodInvocation LOG Literal valid" info IfStatement BinaryOperation && BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeModelElement BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeNote BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator destEdge Cast ReferenceType FigEdgeModelElement MemberReference destFig StatementExpression MethodInvocation destEdge makeEdgePort StatementExpression Assignment MemberReference destFig MethodInvocation destEdge getEdgePort = StatementExpression MethodInvocation destEdge IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigNodeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator Cast ReferenceType FigNode MemberReference destFig LocalVariableDeclaration ReferenceType Object VariableDeclarator foundPort MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation == MemberReference foundPort MethodInvocation getStartPort BinaryOperation < MemberReference Literal 4 BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement IfStatement BinaryOperation != MemberReference foundPort Literal null BlockStatement LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator p Cast ReferenceType FigPoly MemberReference IfStatement BinaryOperation && BinaryOperation == MemberReference foundPort MethodInvocation getStartPort BinaryOperation >= MemberReference Literal 4 BlockStatement StatementExpression MethodInvocation p Literal true StatementExpression MethodInvocation editor StatementExpression MethodInvocation p Literal true setComplete StatementExpression MethodInvocation LOG Literal info LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe MethodInvocation MemberReference MethodInvocation MemberReference sourceFig MemberReference destFig IfStatement BinaryOperation != MemberReference fe Literal null BlockStatement StatementExpression MethodInvocation editor MethodInvocation MemberReference fe select StatementExpression MethodInvocation editor IfStatement BinaryOperation instanceof MemberReference fe ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference fe StatementExpression MethodInvocation MemberReference fe StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement IfStatement MethodInvocation ! MemberReference x MemberReference y BlockStatement StatementExpression MethodInvocation editor LocalVariableDeclaration ReferenceType Point VariableDeclarator snapPt ClassCreator ReferenceType Point MemberReference x MemberReference y StatementExpression MethodInvocation editor MemberReference snapPt snap StatementExpression Cast ReferenceType FigPoly MemberReference StatementExpression MemberReference ++ StatementExpression MethodInvocation editor StatementExpression Assignment MemberReference MemberReference x = StatementExpression Assignment MemberReference MemberReference y = StatementExpression MethodInvocation me consume	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation MemberReference kind equals	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String ReturnStatement MethodInvocation MethodInvocation MemberReference get	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Critic c StatementExpression MethodInvocation critics MemberReference c add	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "using " append StatementExpression MethodInvocation Target MemberReference sb ToSource IfStatement MemberReference BlockStatement StatementExpression MethodInvocation sb Literal " = " append StatementExpression MethodInvocation aliasName MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ";" append StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator source Cast ReferenceType MethodInvocation e getSource LocalVariableDeclaration ReferenceType String VariableDeclarator actionCommand MethodInvocation source getActionCommand LocalVariableDeclaration ReferenceType Object VariableDeclarator target Cast ReferenceType UMLRadioButtonPanel MethodInvocation source getParent IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator kind Literal null IfStatement MethodInvocation actionCommand MemberReference equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrencyKind = IfStatement MethodInvocation actionCommand MemberReference equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrencyKind = BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrencyKind = StatementExpression MethodInvocation Model MethodInvocation MemberReference m MemberReference kind getCoreHelper	1
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner setText StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getBounds setBounds StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Relationship	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType JComponent FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType String propName FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType Class TypeArgument ? types LocalVariableDeclaration ReferenceType JComponent VariableDeclarator list Literal null LocalVariableDeclaration ReferenceType DefaultListModel VariableDeclarator model Literal null IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "context" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "incoming" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "specialization" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "specification" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "supplierDependency" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference modelElement = IfStatement BinaryOperation == MemberReference model Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType GetterSetterManager VariableDeclarator getterSetterManager MethodInvocation GetterSetterManager MethodInvocation types Literal 0 get IfStatement MethodInvocation getterSetterManager MemberReference propName contains BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType MemberReference propName MemberReference types MemberReference modelElement MemberReference getterSetterManager = IfStatement BinaryOperation != MemberReference list Literal null BlockStatement ReturnStatement MemberReference list IfStatement BinaryOperation != MemberReference model Literal null BlockStatement ReturnStatement ClassCreator ReferenceType RowSelector MemberReference model ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color c StatementExpression SuperMethodInvocation MemberReference c setLineColor StatementExpression MethodInvocation MethodInvocation MemberReference c setFillColor	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType char c StatementExpression MemberReference ++ IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference Literal false = ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal 0 BinaryOperation == MemberReference c MemberReference BlockStatement StatementExpression Assignment MemberReference Literal true = ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference Literal 0 BinaryOperation == MemberReference c MemberReference BlockStatement StatementExpression MemberReference ++ level IfStatement BinaryOperation == MemberReference c MemberReference BlockStatement StatementExpression MemberReference -- level ReturnStatement BinaryOperation <= MemberReference level Literal 0	0
MethodDeclaration Modifier public BasicType boolean isProtected FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType FigText IfStatement BinaryOperation == MemberReference MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation Literal	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object source FormalParameter ReferenceType Object dest ReturnStatement MethodInvocation impl MemberReference source MemberReference dest	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator Cast ReferenceType AssociationEnd MemberReference handle LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType AssociationEnd VariableDeclarator MethodInvocation MethodInvocation getConnection getAssociation LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType AssociationEnd VariableDeclarator it MethodInvocation iterator LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator other MethodInvocation it next IfStatement BinaryOperation != MemberReference other MemberReference BlockStatement ReturnStatement MethodInvocation other BlockStatement StatementExpression Assignment MemberReference other MethodInvocation it next = ReturnStatement MethodInvocation other CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference expanded	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean specification StatementExpression MethodInvocation impl MemberReference handle MemberReference specification	0
MethodDeclaration Modifier public ReferenceType Object getType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public FormalParameter ReferenceType Profile profile IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference profile Literal null BinaryOperation != MethodInvocation profile Literal null MethodInvocation MethodInvocation MemberReference profile contains BlockStatement StatementExpression Assignment This MemberReference MethodInvocation profile =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation editor MethodInvocation getFigs LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation ! figs isEmpty LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation editor getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType MemberReference gm = StatementExpression MethodInvocation removeFromDiagram MemberReference setEnabled	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation offs Literal 0 get IfStatement MethodInvocation ! MemberReference f MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference f computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier protected ReferenceType Rectangle LocalVariableDeclaration ReferenceType Fig VariableDeclarator target MethodInvocation LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation bboxField MethodInvocation trim getText IfStatement BinaryOperation == MethodInvocation length Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator res ClassCreator ReferenceType Rectangle LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType java ReferenceType util ReferenceType StringTokenizer MemberReference Literal ", " TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator changed Literal false IfStatement MethodInvocation ! st hasMoreTokens BlockStatement ReturnStatement MethodInvocation target getBounds StatementExpression Assignment MemberReference res x MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement MethodInvocation ! st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference res y MethodInvocation target MemberReference y getBounds = StatementExpression Assignment MemberReference res width MethodInvocation target MemberReference width getBounds = StatementExpression Assignment MemberReference res height MethodInvocation target MemberReference height getBounds = ReturnStatement MemberReference res StatementExpression Assignment MemberReference res y MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement MethodInvocation ! st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference res width MethodInvocation target MemberReference width getBounds = StatementExpression Assignment MemberReference res height MethodInvocation target MemberReference height getBounds = ReturnStatement MemberReference res StatementExpression Assignment MemberReference res width MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement BinaryOperation > BinaryOperation + MemberReference res width MemberReference res x Literal 6000 BlockStatement StatementExpression Assignment MemberReference res width BinaryOperation - Literal 6000 MemberReference res x = StatementExpression Assignment MemberReference changed Literal true = IfStatement MethodInvocation ! st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference res width MethodInvocation target MemberReference width getBounds = ReturnStatement MemberReference res StatementExpression Assignment MemberReference res height MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement BinaryOperation > BinaryOperation + MemberReference res height MemberReference res y Literal 6000 BlockStatement StatementExpression Assignment MemberReference res height BinaryOperation - Literal 6000 MemberReference res y = StatementExpression Assignment MemberReference changed Literal true = IfStatement BinaryOperation || BinaryOperation < MemberReference res x Literal 0 BinaryOperation < MemberReference res y Literal 0 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal of box is off " MemberReference res warn IfStatement BinaryOperation || BinaryOperation < MemberReference res width Literal 0 BinaryOperation < MemberReference res height Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal box has negative size " MemberReference res IfStatement MemberReference changed BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res x toString append StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res y toString append StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res width toString append StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res height toString append StatementExpression MethodInvocation bboxField MethodInvocation sb toString setText CatchClause CatchClauseParameter NumberFormatException ex StatementExpression MethodInvocation bboxField MemberReference Color RED setBackground ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iae StatementExpression MethodInvocation bboxField MemberReference Color RED setBackground ReturnStatement Literal null StatementExpression MethodInvocation bboxField Literal null setBackground ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getCoreHelper ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference	0
MethodDeclaration Modifier public ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension SuperMethodInvocation MemberReference width getPreferredSize MethodInvocation MemberReference height	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator usage MethodInvocation StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType NamedElement MemberReference client add StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType NamedElement MemberReference add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference client StatementExpression MethodInvocation MethodInvocation MemberReference usage add	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setFillColor	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAStateVertex getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference dm isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference dm getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAFinalState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAPseudostate getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference dm getName getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal "" equals BinaryOperation == MethodInvocation myName length Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration FormalParameter ReferenceType String path StatementExpression MethodInvocation MemberReference path remove	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim Literal getAttribute StatementExpression MethodInvocation project MemberReference	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType Vector TypeArgument ReferenceType Fig getEnclosedFigs LocalVariableDeclaration ReferenceType Vector TypeArgument ReferenceType Fig VariableDeclarator SuperMethodInvocation getEnclosedFigs IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType Fig VariableDeclarator figsByY ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType Fig ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigConcurrentRegion BlockStatement StatementExpression MethodInvocation figsByY MethodInvocation fig getY MemberReference fig put ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType Fig MethodInvocation figsByY values ReturnStatement MemberReference	1
MethodDeclaration Modifier public setBase FormalParameter ReferenceType Object arole FormalParameter ReferenceType Object IfStatement BinaryOperation == MemberReference arole Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal is null" IfStatement BinaryOperation instanceof MemberReference arole ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator role Cast ReferenceType MemberReference arole LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator base Cast ReferenceType UmlAssociation MemberReference IfStatement BinaryOperation && BinaryOperation != MemberReference base Literal null MethodInvocation ! MethodInvocation MemberReference base contains MemberReference role BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal is not allowed for " Literal "this StatementExpression MethodInvocation role MemberReference base setBase LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator sender Cast ReferenceType ClassifierRole MethodInvocation modelImpl MethodInvocation MemberReference role getSource getCoreHelper LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator receiver Cast ReferenceType ClassifierRole MethodInvocation modelImpl MethodInvocation MemberReference role getCoreHelper LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Classifier VariableDeclarator MethodInvocation sender getBase LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Classifier VariableDeclarator MethodInvocation receiver getBase LocalVariableDeclaration ReferenceType AssociationEndRole VariableDeclarator Cast ReferenceType AssociationEndRole MethodInvocation modelImpl MethodInvocation MemberReference sender MemberReference role getCoreHelper LocalVariableDeclaration ReferenceType AssociationEndRole VariableDeclarator Cast ReferenceType AssociationEndRole MethodInvocation modelImpl MethodInvocation MemberReference receiver MemberReference role getCoreHelper IfStatement BinaryOperation != MemberReference base Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation base getConnection BlockStatement IfStatement MethodInvocation MethodInvocation end getParticipant contains BlockStatement StatementExpression MethodInvocation MemberReference end setBase IfStatement MethodInvocation MethodInvocation end getParticipant contains BlockStatement StatementExpression MethodInvocation MemberReference end setBase ReturnStatement IfStatement BinaryOperation instanceof MemberReference arole ReferenceType AssociationEndRole BlockStatement LocalVariableDeclaration ReferenceType AssociationEndRole VariableDeclarator role Cast ReferenceType AssociationEndRole MemberReference arole LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator base Cast ReferenceType AssociationEnd MemberReference StatementExpression MethodInvocation role MemberReference base setBase ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "role"	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected ReferenceType Object getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference owner getSource getCoreHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isAClass FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public Annotation Override ReferenceType List ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier protected ReferenceType Object getChangedElement FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AttributeChangeEvent BlockStatement ReturnStatement Cast ReferenceType AttributeChangeEvent MemberReference e ReturnStatement MethodInvocation e getNewValue	0
MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation ! Model MethodInvocation MethodInvocation mee getNewValue isATransition getFacade Literal ! "container" Literal ! Literal ! "subvertex" BlockStatement StatementExpression SuperMethodInvocation MemberReference mee modelChanged	1
MethodDeclaration Modifier private static FormalParameter ReferenceType Context context LocalVariableDeclaration ReferenceType String VariableDeclarator varString MethodInvocation MemberReference context Literal "stylesheet.result.type" getVariable StatementExpression Assignment MemberReference foStylesheet MethodInvocation varString Literal "fo" equals =	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object clazz ReturnStatement MethodInvocation impl MemberReference clazz	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigComponentInstance VariableDeclarator figClone Cast ReferenceType FigComponentInstance SuperMethodInvocation clone ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object feature FormalParameter BasicType short modifiers StatementExpression MethodInvocation Model MethodInvocation MemberReference feature BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_STATIC Literal 0 getCoreHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object StatementExpression Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public final pm_expression RecognitionException TokenStreamException StatementExpression MethodInvocation cast_expression BlockStatement DoStatement Literal true BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference DOTMBR BinaryOperation == MethodInvocation Literal 1 LA MemberReference POINTERTOMBR BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase DOTMBR BlockStatement StatementExpression MethodInvocation MemberReference DOTMBR match BreakStatement SwitchStatementCase POINTERTOMBR BlockStatement StatementExpression MethodInvocation MemberReference POINTERTOMBR match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation cast_expression BlockStatement BreakStatement	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation getModelElement getMetaTypes StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model MemberReference getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation ret MethodInvocation remove ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine StatementExpression This MethodInvocation This MemberReference modifiers MemberReference sb TraceModifiers StatementExpression MethodInvocation sb Literal "const " append StatementExpression This MemberReference type MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " " append LocalVariableDeclaration ReferenceType String VariableDeclarator comma Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MemberReference names MethodInvocation size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb MemberReference comma append StatementExpression Assignment MemberReference comma Literal ", " = StatementExpression This MemberReference names MethodInvocation MemberReference i get MethodInvocation MemberReference sb ToSource IfStatement BinaryOperation != This MemberReference Value Literal null BlockStatement StatementExpression MethodInvocation sb Literal " = " append StatementExpression This MemberReference Value MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ";" append StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public ReferenceType Any getClassifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target getName MethodInvocation MemberReference name equals getFacade BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation p MemberReference name MethodInvocation p getModel IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation p MemberReference name Literal false = IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + Literal "cannot find " MemberReference name ReturnStatement ClassCreator ReferenceType MemberReference classifier	0
MethodDeclaration Modifier public static FormalParameter ReferenceType String location IfStatement MethodInvocation ! MemberReference location BlockStatement StatementExpression MethodInvocation MemberReference location add	0
MethodDeclaration Modifier private ReferenceType String generateMultiplicity FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation LOG Literal modelElement)" debug IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAMultiplicity getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Multiplicity required" ReturnStatement Literal "// modelElement)"	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BinaryOperation instanceof MemberReference ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object item StatementExpression Assignment MemberReference target MemberReference item = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter BasicType boolean expanded StatementExpression Assignment This MemberReference expanded MemberReference expanded =	0
MethodDeclaration Modifier public ReferenceType JList ReturnStatement MemberReference list	0
MethodDeclaration Modifier public static register FormalParameter ReferenceType String crClassName FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Class VariableDeclarator dmClass TryStatement StatementExpression Assignment MemberReference dmClass MethodInvocation Class MemberReference forName = CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error loading dm " MemberReference MemberReference e error ReturnStatement LocalVariableDeclaration ReferenceType Critic VariableDeclarator cr MethodInvocation MemberReference crClassName get IfStatement BinaryOperation == MemberReference cr Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator crClass TryStatement StatementExpression Assignment MemberReference crClass MethodInvocation Class MemberReference crClassName forName = CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error loading cr " MemberReference crClassName MemberReference e error ReturnStatement TryStatement StatementExpression Assignment MemberReference cr Cast ReferenceType Critic MethodInvocation crClass newInstance = CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error cr " MemberReference crClassName MemberReference e error ReturnStatement CatchClause CatchClauseParameter e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error cr " MemberReference crClassName MemberReference e error ReturnStatement StatementExpression MethodInvocation MemberReference crClassName MemberReference cr put StatementExpression MethodInvocation MemberReference cr StatementExpression MethodInvocation MemberReference cr MemberReference dmClass register	1
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions MethodInvocation MethodInvocation getInstance remove StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType JSeparator add StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType addElement ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType State	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object FormalParameter ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Object operation FormalParameter ReferenceType String FormalParameter ReferenceType Type IfStatement MethodInvocation ! MethodInvocation Model MethodInvocation MemberReference operation getName getFacade equals BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference operation getParameters getFacade IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation MethodInvocation next iterator getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal the first operation parameter " Literal be the return this isn't the warn IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation next iterator getFacade BinaryOperation == MethodInvocation size BinaryOperation + MemberReference length Literal 1 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation iterator StatementExpression MethodInvocation next LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation next LocalVariableDeclaration ReferenceType Object VariableDeclarator paramType MethodInvocation Model MethodInvocation MemberReference getType getFacade LocalVariableDeclaration ReferenceType Type VariableDeclarator MethodInvocation MemberReference paramType IfStatement MemberReference ! ArraySelector MemberReference index MethodInvocation MemberReference BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ index ReturnStatement Literal true	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade setSelected	0
MethodDeclaration Modifier private ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation MethodInvocation StatementExpression MethodInvocation MemberReference actions Literal ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension Literal Literal 500	0
MethodDeclaration Modifier private FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression Assignment MemberReference s1 ClassCreator ReferenceType BinaryOperation - MemberReference x Literal 22 BinaryOperation + MemberReference y Literal 3 Literal 8 Literal 6 MemberReference MemberReference FILL_COLOR = StatementExpression Assignment MemberReference s2 ClassCreator ReferenceType BinaryOperation - MemberReference x Literal 11 BinaryOperation + MemberReference y Literal 9 Literal 8 Literal 6 MemberReference MemberReference FILL_COLOR = StatementExpression MethodInvocation s1 Literal true setFilled StatementExpression MethodInvocation s2 Literal true setFilled StatementExpression MethodInvocation s1 MemberReference setLineWidth StatementExpression MethodInvocation s2 MemberReference setLineWidth StatementExpression MethodInvocation s1 MemberReference StatementExpression MethodInvocation s2 MemberReference StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine BinaryOperation - MemberReference x Literal 18 BinaryOperation + MemberReference y Literal 6 BinaryOperation - MemberReference x Literal 7 BinaryOperation + MemberReference y Literal 12 MemberReference = StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference s1 addFig StatementExpression MethodInvocation MemberReference s2 addFig	0
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType MultiplicityRange FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MultiplicityRange VariableDeclarator rc ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MultiplicityRange IfStatement Literal MethodInvocation MemberReference str equals "" BlockStatement StatementExpression MethodInvocation rc MethodInvocation Literal createMultiplicityRange add ReturnStatement MemberReference rc LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator stk ClassCreator ReferenceType StringTokenizer MemberReference str Literal "," WhileStatement MethodInvocation stk hasMoreTokens BlockStatement StatementExpression MethodInvocation rc MethodInvocation MethodInvocation stk nextToken createMultiplicityRange add IfStatement BinaryOperation > MethodInvocation rc size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal does not support multiple multiplicity " MemberReference str debug ReturnStatement MemberReference rc	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent BlockStatement ReturnStatement MemberReference Notation ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getPort ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType List TypeArgument ReferenceType Integer seqno FormalParameter BasicType boolean refindOperation ParseException LocalVariableDeclaration BasicType int VariableDeclarator i IfStatement BinaryOperation != MemberReference seqno Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator root LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator mname ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference umlMessage LocalVariableDeclaration BasicType boolean VariableDeclarator swapRoles Literal false LocalVariableDeclaration BasicType int VariableDeclarator majval Literal 0 IfStatement BinaryOperation != MethodInvocation seqno BinaryOperation - MethodInvocation seqno size Literal 2 get Literal null BlockStatement StatementExpression Assignment MemberReference majval MethodInvocation Math BinaryOperation - MethodInvocation seqno MethodInvocation intValue BinaryOperation - MethodInvocation seqno size Literal 2 get Literal 1 Literal 0 max = LocalVariableDeclaration BasicType int VariableDeclarator minval Literal 0 IfStatement BinaryOperation != MethodInvocation seqno BinaryOperation - MethodInvocation seqno size Literal 1 get Literal null BlockStatement StatementExpression Assignment MemberReference minval MethodInvocation Math MethodInvocation seqno MethodInvocation intValue BinaryOperation - MethodInvocation seqno size Literal 1 get Literal 0 max = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < BinaryOperation + MemberReference i Literal 1 MethodInvocation seqno size Assignment MemberReference i Literal 2 += BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator bv Literal 1 IfStatement BinaryOperation != MethodInvocation seqno MemberReference i get Literal null BlockStatement StatementExpression Assignment MemberReference bv MethodInvocation Math MethodInvocation seqno MethodInvocation intValue MemberReference i get Literal 1 max = LocalVariableDeclaration BasicType int VariableDeclarator sv Literal 0 IfStatement BinaryOperation != MethodInvocation seqno BinaryOperation + MemberReference i Literal 1 get Literal null BlockStatement StatementExpression Assignment MemberReference sv MethodInvocation Math MethodInvocation seqno MethodInvocation intValue BinaryOperation + MemberReference i Literal 1 get Literal 0 max = IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation mname Literal "." append StatementExpression MethodInvocation mname BinaryOperation + MethodInvocation Integer MemberReference bv toString Cast BasicType char BinaryOperation + Literal 'a' MemberReference sv append IfStatement BinaryOperation < BinaryOperation + MemberReference i Literal 3 MethodInvocation seqno size BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation Literal "." append StatementExpression MethodInvocation BinaryOperation + MethodInvocation Integer MemberReference bv toString Cast BasicType char BinaryOperation + Literal 'a' MemberReference sv append StatementExpression Assignment MemberReference root Literal null = IfStatement BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference root MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade MethodInvocation toString = IfStatement BinaryOperation == MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference root MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade MethodInvocation toString = IfStatement BinaryOperation != MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference swapRoles Literal true = IfStatement BinaryOperation && MethodInvocation ! MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade Literal null MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade Literal null BlockStatement StatementExpression Assignment MemberReference swapRoles Literal true = IfStatement MethodInvocation MethodInvocation mname toString MethodInvocation toString BlockStatement IfStatement MethodInvocation MethodInvocation toString MethodInvocation mname toString isMsgNumberStartOf BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation > MethodInvocation Model MethodInvocation MemberReference umlMessage getPredecessors MethodInvocation size getFacade Literal 1 BinaryOperation > MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation size getFacade Literal 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation == MemberReference root Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation && MemberReference swapRoles BinaryOperation > MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation size getFacade Literal 0 BinaryOperation != MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference umlMessage getPredecessors getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator c2 ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it StatementExpression Assignment MemberReference it MethodInvocation c2 iterator = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation it next getCollaborationsHelper StatementExpression Assignment MemberReference it MethodInvocation c iterator = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation c2 iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator pre MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MemberReference pre getCollaborationsHelper WhileStatement MethodInvocation it2 hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation it2 next MemberReference pre getCollaborationsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MemberReference root getCollaborationsHelper IfStatement MemberReference swapRoles BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator r MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade getCollaborationsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MemberReference r getCommonBehaviorHelper IfStatement BinaryOperation == MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference c MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade getFacade Literal null = BlockStatement StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference root getFacade = StatementExpression Assignment MemberReference c2 MethodInvocation MemberReference c MemberReference root MemberReference umlMessage findCandidateRoots = StatementExpression Assignment MemberReference it MethodInvocation c2 iterator = IfStatement BinaryOperation <= MemberReference majval Literal 0 BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation it next getCollaborationsHelper IfStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator pre MethodInvocation MethodInvocation it next BinaryOperation - MemberReference majval Literal 1 Literal false walk LocalVariableDeclaration ReferenceType Object VariableDeclarator post MethodInvocation MemberReference pre MemberReference minval IfStatement BinaryOperation != MemberReference post Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference post MemberReference pre getCollaborationsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference post MemberReference umlMessage getCollaborationsHelper StatementExpression MethodInvocation MemberReference pre MemberReference umlMessage MemberReference minval StatementExpression Assignment MemberReference refindOperation Literal true = ReturnStatement MemberReference refindOperation	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType MemberReference elem deleteCollection getUmlHelper	0
MethodDeclaration Modifier public Annotation Override BasicType int IfStatement MemberReference BlockStatement ReturnStatement Literal 2 ReturnStatement Literal 1	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation MethodInvocation MemberReference language MemberReference body StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection getFeatures FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference obsoleteFeatures BlockStatement IfStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference getName getFacade equals BlockStatement StatementExpression MethodInvocation list MemberReference add ReturnStatement MemberReference list	0
MethodDeclaration ReferenceType ReturnStatement MemberReference topLevelTabbedPane	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference MemberReference	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getOwnedElements getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public init StatementExpression MethodInvocation MethodInvocation This getInstance	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Stereotype getStereotypes FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Profile BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Stereotype Cast ReferenceType Profile MemberReference ns ReturnStatement MethodInvocation Collections emptySet	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation Model MethodInvocation MemberReference clazz getSpecializations getFacade BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator client Cast ReferenceType Generalization MemberReference gen IfStatement BinaryOperation instanceof MemberReference client ReferenceType Classifier BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Classifier MemberReference client add CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean isFrozen FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle isReadOnly	0
MethodDeclaration Modifier protected ReferenceType Object IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public notifyMessage FormalParameter Modifier final ReferenceType String title FormalParameter Modifier final ReferenceType String FormalParameter Modifier final ReferenceType String message StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation messageArea BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation messageArea getText MemberReference title Literal "\n" MemberReference Literal "\n" MemberReference message Literal "\n\n" setText StatementExpression MethodInvocation messageArea MethodInvocation messageArea MethodInvocation length getText	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions IfStatement BinaryOperation == MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 BlockStatement StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getRegion getMetaTypes MethodInvocation getOwner add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String argument IfStatement BinaryOperation == MemberReference argument Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "An argument has to be provided." error ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation argument Literal ':' indexOf IfStatement BinaryOperation || BinaryOperation == MemberReference index Literal - 1 BinaryOperation <= MethodInvocation argument length MemberReference index BlockStatement StatementExpression MethodInvocation LOG Literal "Argument must be error ReturnStatement Literal false LocalVariableDeclaration ReferenceType Import VariableDeclarator imp ClassCreator ReferenceType Import Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator languages MethodInvocation imp IfStatement BinaryOperation || BinaryOperation == MemberReference languages Literal null MethodInvocation languages isEmpty BlockStatement StatementExpression MethodInvocation LOG Literal "No available." error ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation argument Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType VariableDeclarator importer MethodInvocation imp MemberReference IfStatement BinaryOperation == MemberReference importer Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "No support for language " MemberReference error ReturnStatement Literal false StatementExpression MethodInvocation imp MemberReference importer LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation argument BinaryOperation + MemberReference index Literal 1 substring IfStatement MethodInvocation ! file exists BlockStatement StatementExpression MethodInvocation LOG Literal "The specified doesn't exist." error ReturnStatement Literal false StatementExpression MethodInvocation imp ArrayCreator ReferenceType File ArrayInitializer MemberReference file LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassCreator ReferenceType JFrame Literal Literal StatementExpression MethodInvocation imp MemberReference ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType w IfStatement BinaryOperation instanceof MemberReference w ReferenceType BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator SuperMethodInvocation StatementExpression Cast ReferenceType MemberReference w StatementExpression Cast ReferenceType MemberReference w	0
MethodDeclaration Modifier private ReferenceType Stereotype buildStereotype FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getStereotype MethodInvocation StatementExpression SuperMethodInvocation MemberReference stereotype StatementExpression MethodInvocation stereotype MemberReference text setName ReturnStatement MemberReference stereotype	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation Configuration MemberReference Literal null getString IfStatement MethodInvocation MemberReference value equals BlockStatement StatementExpression Assignment MemberReference value Literal null = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType Rectangle r LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MethodInvocation it next IfStatement MethodInvocation f MemberReference r BlockStatement ReturnStatement Literal true ReturnStatement SuperMethodInvocation MemberReference r	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType FieldDeclaration Modifier private final ReferenceType VariableDeclarator key MemberReference Notation MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade addElement	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType Object ns IfStatement MethodInvocation ! Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Not a namespace" error StatementExpression MethodInvocation LOG MemberReference ns error ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal object not a namespace" IfStatement BinaryOperation && BinaryOperation != MemberReference namespace Literal null BinaryOperation != MemberReference namespace MemberReference ns BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace removeModelEventListener getPump LocalVariableDeclaration ReferenceType Object VariableDeclarator oldNs MemberReference namespace StatementExpression Assignment MemberReference namespace MemberReference ns = StatementExpression MethodInvocation MemberReference MemberReference oldNs MemberReference ns firePropertyChange StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace Literal "remove" getPump	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes AssertStatement BinaryOperation != MemberReference edge Literal null AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator newEdge Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType MemberReference edge MemberReference settings = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = StatementExpression MethodInvocation MemberReference lay MemberReference newEdge MemberReference edge addEdge ReturnStatement MemberReference newEdge	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement ReturnStatement Literal LocalVariableDeclaration ReferenceType String VariableDeclarator res Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clsName MemberReference ArraySelector MemberReference i MethodInvocation getName patterns LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation clsName Literal "." lastIndexOf StatementExpression Assignment MemberReference clsName MethodInvocation clsName BinaryOperation + MemberReference lastDot Literal 1 substring = StatementExpression Assignment MemberReference res MemberReference clsName += IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference Literal 1 BlockStatement StatementExpression Assignment MemberReference res Literal ", " += StatementExpression Assignment MemberReference MemberReference res = ReturnStatement MemberReference res	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt LocalVariableDeclaration ReferenceType Object VariableDeclarator mEnum Literal null IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference mEnum MethodInvocation MethodInvocation Model MethodInvocation getCoreFactory MemberReference name MemberReference modifiers MemberReference javadoc MemberReference EMPTY_STRING_LIST = StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum MethodInvocation Literal getUML1Stereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager BlockStatement StatementExpression Assignment MemberReference mEnum MethodInvocation Model MethodInvocation getCoreFactory = LocalVariableDeclaration ReferenceType Object VariableDeclarator mNamespace IfStatement BinaryOperation != MethodInvocation parseState getClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mNamespace MethodInvocation parseState getClassifier = BlockStatement StatementExpression MethodInvocation parseState StatementExpression Assignment MemberReference mNamespace MemberReference currentPackage = IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Created new enumeration for " MemberReference name info StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum MemberReference name setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum MemberReference mNamespace setNamespace getCoreHelper StatementExpression MethodInvocation newElements MemberReference mEnum add StatementExpression MethodInvocation parseState MemberReference mEnum StatementExpression MethodInvocation MemberReference parseState push StatementExpression Assignment MemberReference parseState ClassCreator ReferenceType ParseState MemberReference parseState MemberReference mEnum MemberReference currentPackage = StatementExpression MethodInvocation MemberReference mEnum MemberReference modifiers setVisibility IfStatement BinaryOperation <= MethodInvocation getLevel Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference mEnum MemberReference javadoc addDocumentationTag IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_ABSTRACT Literal 0 BlockStatement StatementExpression MethodInvocation Literal modifier on enum " MemberReference name logError BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum Literal false getCoreHelper IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_FINAL Literal 0 BlockStatement StatementExpression MethodInvocation Literal modifier on enum " MemberReference name logError BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum Literal true getCoreHelper IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum Literal false setRoot getCoreHelper IfStatement BinaryOperation == MethodInvocation getLevel Literal 0 BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference interfaces Literal null BlockStatement StatementExpression MethodInvocation MemberReference mEnum MemberReference interfaces MemberReference forceIt	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Object o FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference o MemberReference getTaggedValue getFacade IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference MemberReference s buildTaggedValue getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference o MemberReference getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference s getExtensionMechanismsHelper	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoDim MethodInvocation MethodInvocation StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + MemberReference y MethodInvocation BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation MemberReference stereoDim height setBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation getY MemberReference stereoDim height Literal 1 BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation MemberReference height setBounds getNameFig StatementExpression Assignment MemberReference _x MemberReference x = StatementExpression Assignment MemberReference _y MemberReference y = StatementExpression Assignment MemberReference MemberReference w = StatementExpression Assignment MemberReference MemberReference h = StatementExpression MethodInvocation	0
MethodDeclaration Modifier private Annotation Deprecated ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Class type FormalParameter ReferenceType Object namespace FormalParameter ReferenceType Object machine LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator diType Literal null IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLStateDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLStateDiagram MemberReference namespace MemberReference machine = StatementExpression Assignment MemberReference diType ClassReference ReferenceType = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLCollaborationDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLCollaborationDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLActivityDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLActivityDiagram MemberReference namespace MemberReference machine = StatementExpression Assignment MemberReference diType ClassReference ReferenceType = IfStatement BinaryOperation == MemberReference diagram Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Unknown diagram type" IfStatement BinaryOperation != MethodInvocation Model Literal null BlockStatement StatementExpression MethodInvocation diagram MethodInvocation MethodInvocation getInstance getGraphModel LocalVariableDeclaration ReferenceType VariableDeclarator dd MethodInvocation MethodInvocation MemberReference diType MemberReference namespace createDiagram getInstance StatementExpression Cast ReferenceType MethodInvocation diagram getGraphModel ReturnStatement MemberReference diagram	1
MethodDeclaration Modifier private ReferenceType Object getStereotype FormalParameter ReferenceType Object me FormalParameter ReferenceType String name FormalParameter ReferenceType String baseClass LocalVariableDeclaration ReferenceType Collection VariableDeclarator models MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModels getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereos MethodInvocation Model MethodInvocation MemberReference models MemberReference me getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference stereos Literal null BinaryOperation > MethodInvocation stereos size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation stereos iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference stereotype MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference stereotype MemberReference name MemberReference baseClass getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Returning the existing stereotype of <<" MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade Literal ">>" info ReturnStatement MemberReference stereotype StatementExpression Assignment MemberReference stereotype MethodInvocation MemberReference name getStereotype = IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereotype MemberReference me getExtensionMechanismsHelper ReturnStatement MemberReference stereotype ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find " Literal "a suitable stereotype for " MethodInvocation Model MethodInvocation MemberReference me getName getFacade Literal " - <<" MemberReference name Literal ">> " MemberReference baseClass	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MemberReference dm IfStatement MethodInvocation Model MethodInvocation MemberReference asc isAAssociationRole getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference conns Literal null BinaryOperation != MethodInvocation conns size Literal 2 BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType int VariableDeclarator aggCount Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator assocEnds MethodInvocation conns iterator WhileStatement MethodInvocation assocEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation assocEnds next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference ae getFacade MethodInvocation Model MethodInvocation MemberReference ae getFacade BlockStatement StatementExpression MemberReference ++ aggCount IfStatement BinaryOperation > MemberReference aggCount Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND BlockStatement ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent e StatementExpression Assignment MemberReference curHandle index Literal - 1 =	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object StatementExpression MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference handle MemberReference ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Element ClassReference ReferenceType checkArgs LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Operation MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the of the element MemberReference MemberReference handle execute	0
MethodDeclaration Modifier private ReferenceType Permission FormalParameter ReferenceType ModelElement client FormalParameter ReferenceType ModelElement LocalVariableDeclaration ReferenceType Permission VariableDeclarator permission MethodInvocation StatementExpression MethodInvocation permission MethodInvocation MemberReference add getSupplier StatementExpression MethodInvocation permission MethodInvocation MemberReference client add IfStatement BinaryOperation instanceof MemberReference client ReferenceType Namespace BlockStatement StatementExpression MethodInvocation permission Cast ReferenceType Namespace MemberReference client setNamespace IfStatement BinaryOperation != MethodInvocation client getNamespace Literal null BlockStatement StatementExpression MethodInvocation permission MethodInvocation client getNamespace setNamespace ReturnStatement MemberReference permission	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigCircle MemberReference X MemberReference MemberReference MemberReference HEIGHT MemberReference MemberReference = StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e StatementExpression Assignment MemberReference MethodInvocation MethodInvocation trim MethodInvocation e getText decode =	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType FigEdge fe LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType VariableDeclarator thisFig Cast ReferenceType MethodInvocation lay MethodInvocation presentationFor StatementExpression MethodInvocation MemberReference editor MemberReference thisFig MemberReference lay	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType State MemberReference handle	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MemberReference t StatementExpression Assignment MemberReference t MethodInvocation f getOwner = ReturnStatement MemberReference t	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MemberReference target	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType ReturnStatement MethodInvocation impl	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object m LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference m getType getFacade IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation Model MethodInvocation MemberReference c getName getFacade	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference instructions	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference LocalVariableDeclaration ReferenceType VariableDeclarator end MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator prop MethodInvocation IfStatement BinaryOperation == MemberReference prop Literal null BlockStatement StatementExpression Assignment MemberReference prop MethodInvocation = StatementExpression MethodInvocation MemberReference prop StatementExpression MethodInvocation end MemberReference prop ReturnStatement MemberReference end	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAGeneralizableElement getFacade MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation source isSelected setRoot getCoreHelper	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator MethodInvocation ProjectBrowser getInstance LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null MethodInvocation saveAction BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p getName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane MemberReference MemberReference t MemberReference t MemberReference JOptionPane showConfirmDialog IfStatement BinaryOperation || BinaryOperation == MemberReference response MemberReference JOptionPane CANCEL_OPTION BinaryOperation == MemberReference response MemberReference JOptionPane BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager Literal null BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getURI getManager Literal null IfStatement MethodInvocation saveAction BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType InheritanceNode BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference next getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add StatementExpression Assignment MemberReference it MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getClientDependencies MethodInvocation iterator getFacade = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference next getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getGeneralizations MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getSpecializations MethodInvocation iterator getFacade WhileStatement MethodInvocation hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation next add WhileStatement MethodInvocation hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation next add ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object link TryStatement IfStatement BinaryOperation instanceof MemberReference link ReferenceType BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference link getCoreHelper CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument is not a link"	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation getComposite Literal true Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Object ReturnStatement MemberReference params	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Component BlockStatement ReturnStatement Cast ReferenceType Component MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier private FormalParameter ReferenceType ArgoDiagram d LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation WhileStatement MethodInvocation ! MethodInvocation d getName BlockStatement TryStatement StatementExpression MethodInvocation d BinaryOperation + BinaryOperation + MethodInvocation d getName Literal " " MemberReference setName CatchClause CatchClauseParameter PropertyVetoException e StatementExpression MemberReference ++ LocalVariableDeclaration ReferenceType VariableDeclarator pm ClassCreator ReferenceType MemberReference d This StatementExpression MethodInvocation MemberReference d StatementExpression MethodInvocation members MemberReference pm add	0
MethodDeclaration Modifier public ReferenceType Object getValueOfTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference property ReferenceType Property BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType Property VariableDeclarator prop Cast ReferenceType Property MemberReference property LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MethodInvocation prop LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference elem MethodInvocation stereotype getQualifiedName MethodInvocation prop getName getTaggedValue IfStatement BinaryOperation && MethodInvocation prop BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation newValue MemberReference value add StatementExpression Assignment MemberReference value MemberReference newValue = IfStatement BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator v Cast ReferenceType Collection MemberReference value BlockStatement StatementExpression MethodInvocation newValue MethodInvocation MemberReference prop MemberReference v postprocessPropertyValue add StatementExpression Assignment MemberReference value MemberReference newValue = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference prop MemberReference value postprocessPropertyValue = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public ReferenceType Object getModel ReturnStatement ClassReference ReferenceType Model	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Object umlAction LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal "" IfStatement MethodInvocation Model MethodInvocation MemberReference umlAction isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference umlAction getOperation getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder MethodInvocation Model MethodInvocation MemberReference getName getFacade IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal "()" append StatementExpression Assignment MemberReference result MethodInvocation sb toString = IfStatement MethodInvocation Model MethodInvocation MemberReference umlAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference umlAction getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference getName getFacade IfStatement BinaryOperation != MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference result MemberReference n = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement TernaryExpression BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation < MemberReference length Literal 1 Literal null MemberReference ArraySelector Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s =	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Collection TypeArgument ReferenceType File files LocalVariableDeclaration BasicType int VariableDeclarator total Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator f MemberReference files BlockStatement IfStatement MethodInvocation f MethodInvocation Literal ".jar" endsWith getName BlockStatement TryStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration TypeArgument ReferenceType JarEntry VariableDeclarator e ClassCreator MethodInvocation entries ReferenceType JarFile MemberReference f MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation e nextElement IfStatement BinaryOperation && MethodInvocation ! entry isDirectory MethodInvocation entry MethodInvocation Literal ".class" endsWith getName BlockStatement StatementExpression MemberReference ++ total CatchClause CatchClauseParameter IOException e StatementExpression MemberReference ++ total BlockStatement StatementExpression MemberReference ++ total ReturnStatement MemberReference total	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType FigEdge BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdge MemberReference dm LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation fe IfStatement BinaryOperation > MemberReference length MemberReference BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object st FormalParameter ReferenceType String s IfStatement BinaryOperation > MethodInvocation s Literal "/" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal "/" indexOf Literal 1 substring = LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference st getFacade IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation MemberReference s buildNewCallAction getStateMachinesHelper BlockStatement StatementExpression MethodInvocation MemberReference MemberReference s	1
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType String name IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression Cast ReferenceType ModelElement MemberReference handle MemberReference name MethodInvocation Model MethodInvocation MemberReference handle getName getFacade BinaryOperation + Literal "name = " MemberReference name createCommand ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or name: " MemberReference name	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig IfStatement MethodInvocation MethodInvocation isVisible BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation StatementExpression Assignment MemberReference width MethodInvocation Math MemberReference width MemberReference width max = StatementExpression Assignment MemberReference height MemberReference height += StatementExpression Assignment MemberReference width MethodInvocation Math Literal MemberReference width max = LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation Math MemberReference width MemberReference height max StatementExpression Assignment MemberReference width MemberReference size = StatementExpression Assignment MemberReference height MemberReference size = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType ArgoNotationEvent event IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation MethodInvocation save getInstance	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType int getLeftMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation < MemberReference row MemberReference elements length BlockStatement ReturnStatement MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType List arguments IfStatement BinaryOperation instanceof MemberReference client ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The must be instance of " Literal IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The must be instance of " Literal IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The list of arguments must be instances" Literal " of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation Cast ReferenceType MemberReference client StatementExpression MethodInvocation Cast ReferenceType MemberReference IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement StatementExpression MethodInvocation MethodInvocation Cast ReferenceType MemberReference o add StatementExpression MethodInvocation MethodInvocation MemberReference add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal the template between " Literal "the client and the StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference client MemberReference ReturnStatement Cast ReferenceType MethodInvocation run MethodInvocation Literal 0 get	1
MethodDeclaration Modifier private ReferenceType Object findConstructor FormalParameter ReferenceType Object modelElement IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Class required" ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MethodInvocation e getNewValue Literal null BinaryOperation == MethodInvocation e getOldValue Literal null MethodInvocation MethodInvocation MemberReference e getChangedElement isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal true = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator IfStatement MethodInvocation ! col isEmpty BlockStatement StatementExpression Assignment MemberReference valid Literal true = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! MemberReference o isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation e getOldValue ReferenceType Collection Cast ReferenceType Collection MethodInvocation e getOldValue BlockStatement StatementExpression Assignment MemberReference valid Literal true = ReturnStatement MemberReference valid	1
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer MemberReference desc StatementExpression MethodInvocation result Literal " (" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result Literal '.' append StatementExpression MethodInvocation result MemberReference ArraySelector MemberReference i append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference length Literal 1 BlockStatement StatementExpression MethodInvocation result Literal ", " append StatementExpression MethodInvocation result Literal ')' append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Collection LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getOwner ReturnStatement MethodInvocation Model MethodInvocation MemberReference getFacade	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation MethodInvocation StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public IfStatement BinaryOperation > MethodInvocation MemberReference length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation Literal 0 getPoint StatementExpression MethodInvocation MethodInvocation StatementExpression SuperMethodInvocation MemberReference StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator tr MemberReference dm LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference tr getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator g MethodInvocation Model MethodInvocation MemberReference tr getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator dv MethodInvocation Model MethodInvocation MemberReference tr getFacade IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dv getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType boolean VariableDeclarator hasTrigger BinaryOperation && BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference t getName getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference t getName MethodInvocation length getFacade Literal 0 IfStatement MemberReference hasTrigger BlockStatement ReturnStatement MemberReference PROBLEM_FOUND LocalVariableDeclaration BasicType boolean VariableDeclarator noGuard BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference g Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade Literal null BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade getBody getFacade Literal null BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade getBody MethodInvocation toString MethodInvocation length getFacade Literal 0 IfStatement MemberReference ! noGuard BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier private ReferenceType ParamDeclNode FeatureNotSupportedException LocalVariableDeclaration ReferenceType ParamDeclNode VariableDeclarator node ClassCreator ReferenceType ParamDeclNode StatementExpression MethodInvocation Literal false parsePossibleAttributes IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node type MethodInvocation parseType = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression Assignment MemberReference node name MethodInvocation strings MemberReference curtok data get = StatementExpression MethodInvocation advance BlockStatement StatementExpression MethodInvocation Literal "Expected arg MemberReference TokenID Ident RecoverFromError ReturnStatement MemberReference node	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String key ReturnStatement MethodInvocation Translator MemberReference key localize	0
MethodDeclaration Modifier protected ReferenceType JCheckBox FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j ClassCreator ReferenceType JCheckBox MethodInvocation Translator MemberReference key localize ReturnStatement MemberReference j	1
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType UmlPackage pkg LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator c MethodInvocation pkg ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator ei MemberReference c BlockStatement StatementExpression MethodInvocation results MethodInvocation ei getImportedElement add StatementExpression MethodInvocation results MethodInvocation Cast ReferenceType Namespace MemberReference pkg getContents addAll ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent	0
MethodDeclaration Modifier public BasicType boolean FormalParameter Modifier final ReferenceType String IfStatement MethodInvocation MethodInvocation MemberReference equals BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MethodInvocation Notation MemberReference Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType FieldDeclaration Modifier private final ReferenceType VariableDeclarator key MemberReference Notation MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference StatementExpression MethodInvocation MemberReference key MemberReference MemberReference fireNotationEvent MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference StatementExpression MethodInvocation MemberReference key MemberReference MemberReference fireNotationEvent StatementExpression MethodInvocation MemberReference ReturnStatement Literal true	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation setAllElements	0
MethodDeclaration Modifier public setIcon FormalParameter ReferenceType StatementExpression Assignment This MemberReference icon MemberReference =	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation MemberReference classifier ArrayCreator ReferenceType String ArrayInitializer Literal "remove" Literal "name"	0
MethodDeclaration Modifier public static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator n MethodInvocation MethodInvocation Configuration MemberReference MethodInvocation getString IfStatement BinaryOperation == MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference n MethodInvocation MemberReference = StatementExpression MethodInvocation LOG BinaryOperation + Literal "default is " MethodInvocation n debug ReturnStatement MemberReference n	1
MethodDeclaration Modifier static ReferenceType Collection LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassReference ReferenceType LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements TryStatement StatementExpression Assignment MemberReference elements MethodInvocation MemberReference loadModel = CatchClause CatchClauseParameter ProfileException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e ReturnStatement MemberReference elements	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType Object FormalParameter BasicType int position LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it LocalVariableDeclaration ReferenceType String VariableDeclarator activatorIntNo Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator umlActivator LocalVariableDeclaration BasicType int VariableDeclarator subpos Literal 0 VariableDeclarator Literal 1 IfStatement BinaryOperation == MemberReference umlMessage Literal null BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference umlActivator MethodInvocation Model MethodInvocation MemberReference umlMessage getFacade = IfStatement BinaryOperation != MemberReference umlActivator Literal null BlockStatement StatementExpression Assignment MemberReference activatorIntNo MethodInvocation MemberReference umlActivator = IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference getFacade StatementExpression Assignment MemberReference MethodInvocation c size = StatementExpression Assignment MemberReference it MethodInvocation c iterator = WhileStatement BinaryOperation && MethodInvocation it hasNext BinaryOperation != MethodInvocation it next MemberReference umlMessage BlockStatement StatementExpression MemberReference ++ subpos LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator result ClassCreator ReferenceType StringBuilder MemberReference activatorIntNo IfStatement BinaryOperation > MethodInvocation activatorIntNo length Literal 0 BlockStatement StatementExpression MethodInvocation result Literal "." append StatementExpression MethodInvocation result MemberReference position append IfStatement BinaryOperation > MemberReference Literal 1 BlockStatement StatementExpression MethodInvocation result Cast BasicType char BinaryOperation + Literal 'a' MemberReference subpos append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier protected ReferenceType String getProperty LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement ReturnStatement Cast ReferenceType ArgoDiagram MemberReference target ReturnStatement Literal ""	0
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Resource r ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator eobj MethodInvocation r getContents BlockStatement IfStatement BinaryOperation instanceof MemberReference eobj ReferenceType Element BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Designer MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object constraint TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference constraint ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference handle StatementExpression MethodInvocation MethodInvocation MemberReference constraint remove ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference constraint	1
MethodDeclaration Modifier public ReferenceType Fig ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType JList LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType JList StatementExpression MethodInvocation list ClassCreator ReferenceType Dimension Literal 50 Literal 50 ReturnStatement MemberReference list	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object role FormalParameter ReferenceType String text ParseException LocalVariableDeclaration ReferenceType MyTokenizer VariableDeclarator st LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator stereotype Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator token LocalVariableDeclaration BasicType boolean VariableDeclarator derived Literal false StatementExpression Assignment MemberReference text MethodInvocation text trim = IfStatement BinaryOperation && BinaryOperation > MethodInvocation text length Literal 0 BinaryOperation >= Literal MethodInvocation MethodInvocation text Literal 0 charAt indexOf "/" Literal 0 BlockStatement StatementExpression Assignment MemberReference derived Literal true = StatementExpression Assignment MemberReference text MethodInvocation text Literal 1 substring = StatementExpression Assignment MemberReference text MethodInvocation text trim = TryStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType MyTokenizer MemberReference text Literal = WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "<<" Literal MethodInvocation MemberReference token equals "«" BlockStatement IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference stereotype ClassCreator ReferenceType StringBuilder = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals ">>" Literal MethodInvocation MemberReference token equals "»" BlockStatement BreakStatement StatementExpression MethodInvocation stereotype MemberReference token append BlockStatement IfStatement BinaryOperation != MemberReference name Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference name MemberReference token = CatchClause CatchClauseParameter NoSuchElementException nsee LocalVariableDeclaration ReferenceType String VariableDeclarator ms Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference ms localize MethodInvocation text length CatchClause CatchClauseParameter ParseException pre ThrowStatement MemberReference pre StatementExpression MethodInvocation MemberReference role MemberReference derived IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name trim = IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "+" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getPublic getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "-" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getPrivate getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "#" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "~" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getPackage getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference role MemberReference name setName getCoreHelper StatementExpression MethodInvocation StereotypeUtility MemberReference role MemberReference stereotype Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType tee LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType VariableDeclarator ps MethodInvocation p getProjectSettings StatementExpression MethodInvocation MethodInvocation ps IfStatement BinaryOperation instanceof MethodInvocation getModel ReferenceType ExplorerTreeModel BlockStatement StatementExpression Cast ReferenceType ExplorerTreeModel MethodInvocation getModel	1
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser IfStatement BinaryOperation || BinaryOperation == MemberReference encloser Literal null BinaryOperation && BinaryOperation != MemberReference encloser Literal null MethodInvocation Model MethodInvocation MethodInvocation encloser getOwner isANode getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation MethodInvocation setEnabled	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object ReturnStatement ClassCreator ReferenceType MemberReference modelElement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Transition	0
MethodDeclaration Modifier public BasicType int getColumnNumber ReturnStatement This MemberReference columnNumber	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dm computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation ReturnStatement MethodInvocation MemberReference target shouldBeEnabled	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getStateMachinesFactory	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType FormalParameter ReferenceType String instructions ReturnStatement ClassCreator ReferenceType MemberReference MemberReference instructions	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Region	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object owner ReturnStatement MethodInvocation Literal null MemberReference owner	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "internal error not from error ReturnStatement Literal false IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "internal error not to error ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference fromPort isAFinalState getFacade BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference toPort isAPseudostate getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference toPort getKind getFacade equals getPseudostateKind BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object metaType LocalVariableDeclaration Modifier final ReferenceType Class TypeArgument ? VariableDeclarator ArrayInitializer ClassReference ReferenceType Action ClassReference ReferenceType ClassReference ReferenceType ClassReference ReferenceType ClassReference ReferenceType Operation ClassReference ReferenceType Parameter ClassReference ReferenceType Property ReturnStatement MethodInvocation Arrays MethodInvocation MemberReference metaType contains MemberReference asList	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference oldValue	0
MethodDeclaration Modifier final ReferenceType Object ReturnStatement MemberReference object	0
MethodDeclaration Modifier private ReferenceType URL makeZipEntryUrl FormalParameter ReferenceType URL url FormalParameter ReferenceType String entryName MalformedURLException LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference url Literal "!/" MemberReference entryName ReturnStatement ClassCreator ReferenceType URL MemberReference	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public removeModelEventListener FormalParameter ReferenceType listener FormalParameter ReferenceType Object StatementExpression MethodInvocation MemberReference listener MemberReference Literal null	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object src LocalVariableDeclaration ReferenceType Object VariableDeclarator sel Literal null LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d Literal null IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation MethodInvocation getMinSelectionIndex getSelectionModel IfStatement BinaryOperation < MemberReference row Literal 0 BlockStatement ReturnStatement StatementExpression Assignment MemberReference sel MethodInvocation results MemberReference row get = StatementExpression Assignment MemberReference d MethodInvocation diagrams MemberReference row get = IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation MethodInvocation getMinSelectionIndex getSelectionModel IfStatement BinaryOperation < MemberReference row Literal 0 BlockStatement ReturnStatement StatementExpression MemberReference ++ StatementExpression Assignment MemberReference sel MethodInvocation related MemberReference row get = IfStatement BinaryOperation != MemberReference d Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference sel Literal " in " MethodInvocation d getName debug StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference d getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference sel isATaggedValue getFacade BlockStatement StatementExpression Assignment MemberReference sel MethodInvocation Model MethodInvocation MemberReference sel getFacade = StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference sel getInstance	1
MethodDeclaration Modifier public setReadOnly FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final BasicType boolean isReadOnly IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal isReadOnly to for the feature MemberReference isReadOnly MemberReference handle execute	0
MethodDeclaration Modifier private BasicType int countLineBreaks FormalParameter ReferenceType Node node LocalVariableDeclaration BasicType int VariableDeclarator numLines Literal 0 IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation node MemberReference Node BinaryOperation == MethodInvocation node MemberReference Node DOCUMENT_NODE BinaryOperation == MethodInvocation node MemberReference Node ELEMENT_NODE BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation node getFirstChild WhileStatement BinaryOperation != MemberReference child Literal null BlockStatement StatementExpression Assignment MemberReference numLines MethodInvocation MemberReference child countLineBreaks += StatementExpression Assignment MemberReference child MethodInvocation child getNextSibling = IfStatement BinaryOperation == MethodInvocation node MemberReference Node BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation node getNodeValue LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MethodInvocation text length MemberReference ++ count BlockStatement IfStatement BinaryOperation == MethodInvocation text MemberReference count charAt Literal '\n' BlockStatement StatementExpression MemberReference ++ numLines BlockStatement ReturnStatement MemberReference numLines	1
MethodDeclaration Modifier private ReferenceType RunnableClass FormalParameter ReferenceType Element owner FormalParameter ReferenceType Element element ReturnStatement MethodInvocation MemberReference owner MemberReference MemberReference element	0
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && Literal MethodInvocation MethodInvocation pce getPropertyName equals "remove" BinaryOperation == MethodInvocation pce getSource MethodInvocation getOwner BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation instanceof MemberReference pce ReferenceType UmlChangeEvent BlockStatement LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pce LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event MethodInvocation getName getClass debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getSource debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getOldValue debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "name = " MethodInvocation event getPropertyName debug StatementExpression MethodInvocation LOG BinaryOperation + Literal method " Literal element " MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 0L Literal Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Cast ReferenceType MemberReference ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType JLabel ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier public Annotation Deprecated setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object arg StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setMultiplicity getComponent MemberReference arg MethodInvocation Model MethodInvocation MemberReference handle getMultiplicity getFacade createCommand	1
MethodDeclaration Modifier public FormalParameter ReferenceType ws IfStatement BinaryOperation != MemberReference lastPanel Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference lastPanel remove IfStatement BinaryOperation != MemberReference ws Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference ws MemberReference CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference ws = BlockStatement StatementExpression MethodInvocation splitPane MemberReference MemberReference CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference = StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation command execute	0
MethodDeclaration Modifier private ReferenceType ArgoDiagram FormalParameter ReferenceType Object theClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference theClassifier getNamespace getFacade MemberReference theClassifier LocalVariableDeclaration Modifier final ReferenceType ArgoDiagram VariableDeclarator newDiagram MethodInvocation MethodInvocation MemberReference DiagramType Sequence MemberReference Literal null createDiagram getInstance StatementExpression MethodInvocation project MemberReference newDiagram addMember StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newDiagram getInstance ReturnStatement MemberReference newDiagram	1
MethodDeclaration Modifier public FormalParameter ReferenceType String tableName StatementExpression Assignment This MemberReference tableName MemberReference tableName =	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object model FormalParameter ReferenceType Object TryStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator MethodInvocation Model MethodInvocation MemberReference model ClassReference ReferenceType getAllModelElementsOfKind getModelManagementHelper StatementExpression MethodInvocation MethodInvocation MemberReference remove ReturnStatement MemberReference CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Parameter FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference o CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference o	0
MethodDeclaration Modifier private FormalParameter ReferenceType Feature elem StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Operation BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Method BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Attribute BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value getCoreHelper	0
MethodDeclaration Modifier private ReferenceType FeatureNotSupportedException LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression Assignment MemberReference node Resource MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation MemberReference node Statements parseBlock IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType Object attribute ReturnStatement MethodInvocation Model MethodInvocation MemberReference attribute MemberReference getFacade	0
MethodDeclaration Modifier public ReferenceType Object buildNode FormalParameter ReferenceType Object elementType FormalParameter ReferenceType Object container FormalParameter ReferenceType String property FormalParameter ReferenceType defaults LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation MemberReference elementType MemberReference container MemberReference property buildNode IfStatement BinaryOperation != MemberReference defaults Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator type MethodInvocation defaults MemberReference elementType LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation defaults MemberReference elementType IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference type getCoreHelper IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference name setName getCoreHelper BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference element Literal "" setName getCoreHelper ReturnStatement MemberReference element	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference MethodInvocation Model MethodInvocation MemberReference handle getFacade createCommand	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType Fig MemberReference target IfStatement MethodInvocation Model MethodInvocation MemberReference owner isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference target MemberReference owner = ReturnStatement TernaryExpression BinaryOperation || BinaryOperation instanceof MemberReference target ReferenceType Diagram MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade MemberReference target Literal null	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setFillColor StatementExpression MethodInvocation MethodInvocation Literal null setFillColor StatementExpression MethodInvocation MethodInvocation Literal null setFillColor getNameFig	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object state StatementExpression MethodInvocation impl MemberReference handle MemberReference state	0
MethodDeclaration Modifier public BasicType boolean StatementExpression MethodInvocation MethodInvocation MemberReference getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType AddAssociationEvent evt LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation evt getNewValue LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator ClassCreator ReferenceType Rectangle BinaryOperation + MethodInvocation getX MethodInvocation getHeight MethodInvocation getY Literal 0 Literal 0 LocalVariableDeclaration ReferenceType VariableDeclarator fn ClassCreator ReferenceType MemberReference element MemberReference MethodInvocation getDiagramSettings MemberReference NAME StatementExpression MethodInvocation MemberReference fn addFig StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference o ReferenceType State BinaryOperation == Cast ReferenceType State MemberReference o Literal null	1
MethodDeclaration Modifier static protected ReferenceType String getVariable FormalParameter ReferenceType Context context FormalParameter ReferenceType String varName LocalVariableDeclaration ReferenceType Value VariableDeclarator variable Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator varString Literal null TryStatement StatementExpression Assignment MemberReference variable MethodInvocation MemberReference context BinaryOperation + Literal "$" MemberReference varName evaluate = StatementExpression Assignment MemberReference varString MethodInvocation variable asString = ReturnStatement MemberReference varString CatchClause CatchClauseParameter TransformerException te StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal "" CatchClause CatchClauseParameter IllegalArgumentException iae StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal ""	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getChildren FormalParameter ReferenceType Object handle TryStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getChildren getCoreHelper CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType Association FormalParameter ReferenceType Object c1 FormalParameter BasicType boolean FormalParameter ReferenceType Object c2 FormalParameter BasicType boolean FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference c1 MemberReference Literal null MemberReference c2 MemberReference Literal null MemberReference name	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType ModuleInterface MethodInvocation IfStatement BinaryOperation < MethodInvocation tab MemberReference name Literal 0 BlockStatement StatementExpression MethodInvocation tab MethodInvocation MemberReference name add	0
MethodDeclaration Modifier public FormalParameter BasicType int upper StatementExpression Assignment This MemberReference upper MemberReference upper =	0
MethodDeclaration Modifier public remove FormalParameter ReferenceType obj StatementExpression MethodInvocation MemberReference obj remove	0
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoItem item StatementExpression MethodInvocation MemberReference item addElement	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Generalization BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference elem	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation attributes getLength	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement IfStatement MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation lse LocalVariableDeclaration ReferenceType Object VariableDeclarator sel MethodInvocation results MemberReference row get StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference sel debug StatementExpression MethodInvocation related clear LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator elems MethodInvocation MethodInvocation MemberReference sel gen IfStatement BinaryOperation != MemberReference elems Literal null BlockStatement WhileStatement MethodInvocation elems hasMoreElements BlockStatement StatementExpression MethodInvocation related MethodInvocation elems nextElement add StatementExpression MethodInvocation MemberReference related Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation Integer MethodInvocation related size valueOf StatementExpression MethodInvocation MethodInvocation Translator Literal MemberReference msgArgs setText	1
MethodDeclaration Modifier protected updateLayout FormalParameter ReferenceType UmlChangeEvent event AssertStatement BinaryOperation != MemberReference event Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation || Literal ! MethodInvocation MethodInvocation event getPropertyName equals "remove" BinaryOperation != MethodInvocation event getSource MethodInvocation getOwner BlockStatement StatementExpression This MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation toString setText StatementExpression MethodInvocation	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator w MethodInvocation IfStatement BinaryOperation != MemberReference w Literal null BlockStatement StatementExpression MethodInvocation w back StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Font IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MethodInvocation parent ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations MethodInvocation MethodInvocation Cast ReferenceType UmlAssociation MemberReference handle MemberReference handle getRefOutermostPackage ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation Model MethodInvocation MemberReference element getOwner getFacade ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element getFacade BinaryOperation || BinaryOperation == MemberReference owner Literal null MethodInvocation Model MethodInvocation MethodInvocation getStereotypes MethodInvocation MemberReference owner contains getFacade	1
MethodDeclaration Modifier public ReferenceType List getInEdges FormalParameter ReferenceType Object port IfStatement MethodInvocation Model MethodInvocation MemberReference port isAStateVertex getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference port getFacade StatementExpression MethodInvocation LOG Literal "TODO: getInEdges of debug ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object extent ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType int newOffset StatementExpression Assignment MemberReference MemberReference newOffset =	0
MethodDeclaration Modifier private BasicType boolean isDocCommentTag FormalParameter ReferenceType String tagName LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal false IfStatement MethodInvocation tagName Literal equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "pre" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "author" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "version" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "see" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal equals BlockStatement StatementExpression Assignment MemberReference result Literal true = ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getSupplierDependencies getFacade setAllElements	0
MethodDeclaration Modifier private verifyAttributeNames FormalParameter ReferenceType String className FormalParameter ReferenceType String attributes LocalVariableDeclaration ReferenceType RefObject VariableDeclarator ro Literal null StatementExpression MethodInvocation MemberReference ro MemberReference attributes verifyAttributeNames	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String ReturnStatement MethodInvocation Collections emptySet	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation MemberReference w setLineWidth StatementExpression MethodInvocation MemberReference w setLineWidth	0
MethodDeclaration Modifier public BasicType int getLine ReturnStatement MemberReference line	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer d LocalVariableDeclaration ReferenceType Class VariableDeclarator MethodInvocation dm getClass LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Critic VariableDeclarator c MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference dm MemberReference d MemberReference c Literal - 1L	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Command ReturnStatement MethodInvocation getterSetterManager MemberReference propertyName MemberReference umlElement	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType String body StatementExpression MethodInvocation ClassCreator ReferenceType MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference body MethodInvocation Model MethodInvocation MemberReference handle getBody getCoreHelper createCommand	1
MethodDeclaration Modifier protected Annotation Override ReferenceType List TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement MethodInvocation Model MethodInvocation MethodInvocation isAStereotype getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getFacade StatementExpression MethodInvocation result MemberReference bases addAll ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String createTable FormalParameter ReferenceType LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb Literal "CREATE TABLE " append StatementExpression MethodInvocation sb MethodInvocation getName append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal " (" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator colDef Cast ReferenceType MethodInvocation it next StatementExpression MethodInvocation sb MethodInvocation Literal " " append MethodInvocation colDef getName append StatementExpression MethodInvocation sb MethodInvocation colDef append LocalVariableDeclaration ReferenceType Boolean VariableDeclarator nullable MethodInvocation colDef IfStatement BinaryOperation != MemberReference nullable Literal null BlockStatement IfStatement MethodInvocation nullable MemberReference Boolean TRUE equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal append Literal " " append IfStatement MethodInvocation nullable MemberReference Boolean FALSE equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "NOT NULL" append Literal " " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal "," append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbPk ClassCreator ReferenceType StringBuffer StatementExpression Assignment MemberReference it MethodInvocation MethodInvocation iterator = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator primaryKeyField Cast ReferenceType String MethodInvocation it next IfStatement BinaryOperation > MethodInvocation sbPk length Literal 0 BlockStatement StatementExpression MethodInvocation sbPk Literal ", " append StatementExpression MethodInvocation sbPk MemberReference primaryKeyField append StatementExpression MethodInvocation sb Literal KEY (" append StatementExpression MethodInvocation sb MemberReference sbPk append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ")" append StatementExpression MethodInvocation sb Literal ");" append StatementExpression MemberReference ++ ReturnStatement MethodInvocation sb toString	1
MethodDeclaration FormalParameter ReferenceType Object elem LocalVariableDeclaration ReferenceType VariableDeclarator role Cast ReferenceType MemberReference elem ForStatement EnhancedForControl VariableDeclaration ReferenceType Message VariableDeclarator message MethodInvocation role getMessage BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference message delete getUmlFactory	0
MethodDeclaration Modifier public FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation MemberReference l	1
MethodDeclaration Modifier public FormalParameter ReferenceType listener FormalParameter ReferenceType Object FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference listener MemberReference ArrayCreator ReferenceType String ArrayInitializer MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference LEFT BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object getPublic ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String systemId LocalVariableDeclaration BasicType int VariableDeclarator lastSlash MethodInvocation systemId Literal "/" lastIndexOf IfStatement BinaryOperation > MemberReference lastSlash Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation systemId BinaryOperation + MemberReference lastSlash Literal 1 substring ReturnStatement MemberReference suffix ReturnStatement MemberReference systemId	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object feature TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference cls ReferenceType Classifier BinaryOperation instanceof MemberReference feature ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference cls ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference cls Literal " or " MemberReference feature	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression SuperMethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType OperationsNode BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set Cast ReferenceType OperationsNode MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getFacade MemberReference elem	0
MethodDeclaration Modifier public BasicType boolean isType FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal "type"	0
MethodDeclaration Modifier final BasicType byte getValue ReturnStatement MemberReference val	0
MethodDeclaration Modifier public Annotation Override setSourceFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Assignment MemberReference MethodInvocation fn getOwner = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation ! Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation fn getOwner = StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner StatementExpression SuperMethodInvocation MemberReference fn setSourceFigNode	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation Cursor MemberReference Cursor getPredefinedCursor setCursor	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation ! c MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation MethodInvocation MemberReference anotherPt ReturnStatement MemberReference p	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener	0
MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent me StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation me consume StatementExpression MethodInvocation editor StatementExpression MethodInvocation done	0
MethodDeclaration ReferenceType StringBuffer FormalParameter ReferenceType StringBuffer FormalParameter ReferenceType Object cls StatementExpression MethodInvocation MethodInvocation MemberReference cls generateClassifierEnd append ReturnStatement MemberReference	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String name FormalParameter BasicType boolean IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator key BinaryOperation + Literal MethodInvocation Boolean MemberReference toString ReturnStatement MethodInvocation Translator MemberReference key ArrayCreator ReferenceType Object ArrayInitializer MemberReference name localize	0
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal false = IfStatement MethodInvocation Model MethodInvocation MemberReference element getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference getCoreHelper	0
MethodDeclaration Modifier private BasicType boolean isNameTerminator FormalParameter BasicType char ch ReturnStatement BinaryOperation || BinaryOperation == MemberReference ch Literal '>' MethodInvocation Character MemberReference ch isWhitespace	1
MethodDeclaration Modifier private static BasicType boolean copyFile FormalParameter Modifier final ReferenceType File source FormalParameter Modifier final ReferenceType File dest TryStatement LocalVariableDeclaration Modifier final ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference source LocalVariableDeclaration Modifier final ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference dest LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement BinaryOperation != Assignment MemberReference i MethodInvocation fis MemberReference buf read = Literal - 1 BlockStatement StatementExpression MethodInvocation fos MemberReference buf Literal 0 MemberReference i write StatementExpression MethodInvocation fis close StatementExpression MethodInvocation fos close ReturnStatement Literal true CatchClause CatchClauseParameter FileNotFoundException e StatementExpression MethodInvocation LOG Literal "File not found while MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "IO error file" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation LOG Literal are not allowed to copy files" MemberReference e error ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType StringBuffer generateClassifierEnd FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference cls isAClass getFacade MethodInvocation MethodInvocation MemberReference cls isAInterface getFacade BlockStatement IfStatement BinaryOperation && MemberReference verboseDocs BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classifierkeyword Literal null IfStatement MethodInvocation MethodInvocation MemberReference cls isAClass getFacade BlockStatement StatementExpression Assignment MemberReference classifierkeyword Literal "class" = BlockStatement StatementExpression Assignment MemberReference classifierkeyword Literal "class" = StatementExpression MethodInvocation sb MethodInvocation Literal of " append MethodInvocation MemberReference classifierkeyword append MethodInvocation Literal " " append MethodInvocation MethodInvocation MethodInvocation MemberReference cls getName getFacade append MethodInvocation MemberReference LINE_SEPARATOR append MemberReference LINE_SEPARATOR append IfStatement BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal append ReturnStatement MemberReference sb	1
MethodDeclaration Modifier public ReferenceType String getLanguage IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference expression MethodInvocation getExpression = IfStatement BinaryOperation == MemberReference expression Literal null BlockStatement ReturnStatement MemberReference ReturnStatement MethodInvocation Model MethodInvocation MemberReference expression getLanguage	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference TOP BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getInterface getMetaTypes IfStatement BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getUMLClass getMetaTypes ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement Literal ReturnStatement MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade	0
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType instance LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement StatementExpression MethodInvocation results MethodInvocation instance addAll StatementExpression MethodInvocation results MethodInvocation instance addAll ReturnStatement MemberReference results	1
MethodDeclaration Modifier public static ReferenceType String localize FormalParameter ReferenceType String key FormalParameter ReferenceType Object args ReturnStatement MethodInvocation MemberReference key MemberReference args	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object getOwner IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Incorrect model of " MethodInvocation MethodInvocation getClass MethodInvocation getName getGraphModel LocalVariableDeclaration ReferenceType VariableDeclarator gm Cast ReferenceType MethodInvocation getGraphModel ReturnStatement MethodInvocation gm	0
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference currentTarget Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + Literal is not allowed " Literal the is at " Literal "the lower boundary " Literal "of the StatementExpression Assignment MemberReference Literal true = IfStatement BinaryOperation == MethodInvocation targets size Literal 0 BlockStatement StatementExpression MethodInvocation Cast ReferenceType WeakReference MethodInvocation history MemberReference currentTarget get BlockStatement StatementExpression MethodInvocation Cast ReferenceType WeakReference MethodInvocation history MemberReference -- currentTarget get StatementExpression Assignment MemberReference Literal false =	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ToDoItem FormalParameter ReferenceType Object parent IfStatement MethodInvocation parent MemberReference equals BlockStatement ReturnStatement MemberReference cachedChildrenList StatementExpression Assignment MemberReference MemberReference parent = LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType ToDoItem VariableDeclarator allOffenders ClassCreator ReferenceType ListSet TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType ToDoItem VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation getOffenders SynchronizedStatement MemberReference StatementExpression MethodInvocation allOffenders MemberReference MethodInvocation IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement StatementExpression Assignment MemberReference cachedChildrenList MemberReference allOffenders = ReturnStatement MemberReference cachedChildrenList IfStatement MethodInvocation allOffenders MemberReference parent contains BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation SynchronizedStatement MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet StatementExpression MethodInvocation offs MethodInvocation item getOffenders MethodInvocation IfStatement MethodInvocation offs MemberReference parent contains BlockStatement StatementExpression MethodInvocation result MemberReference item add StatementExpression Assignment MemberReference cachedChildrenList MemberReference result = ReturnStatement MemberReference cachedChildrenList StatementExpression Assignment MemberReference cachedChildrenList MethodInvocation Collections = ReturnStatement MemberReference cachedChildrenList	1
MethodDeclaration Modifier private StatementExpression Assignment MemberReference ClassCreator ReferenceType RenderingHints Literal null = StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put IfStatement MethodInvocation Configuration MemberReference Literal false getBoolean BlockStatement StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put BlockStatement StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put StatementExpression MethodInvocation MemberReference RenderingHints MemberReference RenderingHints put	0
MethodDeclaration Modifier public IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation pop AssertStatement MethodInvocation MethodInvocation MemberReference cls isAClass getFacade BinaryOperation + BinaryOperation + Literal "The context (\"" MethodInvocation MethodInvocation MemberReference cls getName getFacade Literal isn't a StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public synchronized static ReferenceType getInstance Exception IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType = ReturnStatement MemberReference instance	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier private static BasicType boolean FormalParameter ReferenceType Class target FormalParameter ReferenceType String tag FormalParameter ReferenceType Class TypeArgument ReferenceType MemberFilePersister persister StatementExpression MethodInvocation MemberReference target MemberReference persister put StatementExpression MethodInvocation MemberReference tag MemberReference persister put ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index MethodInvocation = IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference TOP BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation BlockStatement ReturnStatement MethodInvocation Model MethodInvocation	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType source LocalVariableDeclaration ReferenceType VariableDeclarator tv MethodInvocation StatementExpression MethodInvocation tv MethodInvocation source getType StatementExpression MethodInvocation tv MethodInvocation MethodInvocation source addAll StatementExpression MethodInvocation tv MethodInvocation MethodInvocation source addAll ReturnStatement MemberReference tv	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ReturnStatement MemberReference rules	0
MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation IfStatement BinaryOperation || BinaryOperation == MemberReference selected Literal null BinaryOperation == MethodInvocation selected size Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference event Literal null getCommonBehaviorHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference event MethodInvocation selected MethodInvocation next iterator getCommonBehaviorHelper	1
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element delete getUmlFactory	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public FormalParameter ReferenceType n StatementExpression Assignment This MemberReference next MemberReference n =	0
MethodDeclaration Modifier public final RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase AMPERSAND BlockStatement StatementExpression MethodInvocation MemberReference AMPERSAND match BreakStatement SwitchStatementCase STAR BlockStatement StatementExpression MethodInvocation MemberReference STAR match BreakStatement SwitchStatementCase PLUS BlockStatement StatementExpression MethodInvocation MemberReference PLUS match BreakStatement SwitchStatementCase MINUS BlockStatement StatementExpression MethodInvocation MemberReference MINUS match BreakStatement SwitchStatementCase TILDE BlockStatement StatementExpression MethodInvocation MemberReference TILDE match BreakStatement SwitchStatementCase NOT BlockStatement StatementExpression MethodInvocation MemberReference NOT match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation getSize	0
MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color c StatementExpression SuperMethodInvocation MemberReference c setFillColor	1
MethodDeclaration Modifier public ReferenceType Rectangle ReturnStatement ClassCreator ReferenceType Rectangle MemberReference _x BinaryOperation + MemberReference _y MemberReference BinaryOperation - MemberReference MemberReference BinaryOperation - MemberReference MemberReference	0
MethodDeclaration Modifier public Annotation Override insertElementAt FormalParameter ReferenceType o FormalParameter BasicType int index IfStatement MemberReference BlockStatement IfStatement MethodInvocation MemberReference o BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference o Cast ReferenceType MethodInvocation Cast ReferenceType JMenu MemberReference o = IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference o MemberReference index insertElementAt	0
MethodDeclaration Modifier public static ReferenceType String generateMultiplicity FormalParameter ReferenceType Object element FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator multiplicity IfStatement MethodInvocation Model MethodInvocation MemberReference element isAMultiplicity getFacade BlockStatement StatementExpression Assignment MemberReference multiplicity MemberReference element = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference multiplicity MethodInvocation Model MethodInvocation MemberReference element getMultiplicity getFacade = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation Model MethodInvocation MemberReference multiplicity getUpper getFacade LocalVariableDeclaration BasicType int VariableDeclarator lower MethodInvocation Model MethodInvocation MemberReference multiplicity getLower getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation != MemberReference lower Literal 1 BinaryOperation != MemberReference upper Literal 1 MemberReference BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference multiplicity toString getFacade ReturnStatement Literal ""	1
MethodDeclaration Modifier public buildModel LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getVisibility getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPublic getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPackage getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPrivate getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected BlockStatement StatementExpression MethodInvocation MemberReference setSelected	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration ReferenceType Collection TypeArgument ReferenceType MofClass getMetaClasses LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType MofClass VariableDeclarator metaTypes MethodInvocation modelImpl MethodInvocation getMofClass MethodInvocation refAllOfClass getModelPackage ReturnStatement MemberReference metaTypes	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public final RecognitionException TokenStreamException IfStatement MethodInvocation ! MethodInvocation MethodInvocation getText Literal 1 LT isTypeName ThrowStatement ClassCreator ReferenceType Literal StatementExpression MethodInvocation MemberReference ID match	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Cast ReferenceType MemberReference ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference argument	0
MethodDeclaration Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent	0
MethodDeclaration Modifier public buildModel LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MethodInvocation MemberReference tagName getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement Literal MethodInvocation MemberReference tag equals "true" BlockStatement StatementExpression MethodInvocation Literal true setSelected ReturnStatement StatementExpression MethodInvocation Literal false setSelected	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType event StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation toArray getInstance setSelection	0
MethodDeclaration Modifier protected ReferenceType JLabel ReturnStatement MemberReference	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType BlockStatement StatementExpression Assignment MemberReference rules Cast ReferenceType ExplorerPerspective MethodInvocation e getItem = BlockStatement StatementExpression Assignment MemberReference order Cast ReferenceType Comparator MethodInvocation e getItem = StatementExpression MethodInvocation structureChanged StatementExpression MethodInvocation tree MethodInvocation tree Literal 1 getPathForRow expandPath	1
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference SCOPE = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "::" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAModel BlockStatement ReturnStatement MemberReference handle IfStatement MethodInvocation ! MemberReference handle isAUMLElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject IfStatement BinaryOperation == MethodInvocation MemberReference handle Literal null BlockStatement ReturnStatement MemberReference handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation || BinaryOperation == MemberReference p Literal null MethodInvocation ! ProjectBrowser MethodInvocation MethodInvocation getInstance BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p getName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane MethodInvocation getFrame MemberReference message MethodInvocation Translator Literal localize MemberReference JOptionPane YES_NO_OPTION showConfirmDialog IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression MethodInvocation ProjectBrowser MethodInvocation ClassCreator ReferenceType File MethodInvocation p getURI Literal true getInstance	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Object target FormalParameter ReferenceType Method prefsHandler LocalVariableDeclaration BasicType boolean VariableDeclarator enablePrefsMenu BinaryOperation && BinaryOperation != MemberReference target Literal null BinaryOperation != MemberReference prefsHandler Literal null IfStatement MemberReference enablePrefsMenu BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType OSXAdapter Literal MemberReference target MemberReference prefsHandler setHandler TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator MethodInvocation macOSXApplication MethodInvocation Literal ArrayCreator ReferenceType Class ArrayInitializer ClassReference BasicType boolean getDeclaredMethod getClass StatementExpression MethodInvocation MemberReference macOSXApplication ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Boolean MemberReference enablePrefsMenu valueOf invoke CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal "OSXAdapter could not access the error StatementExpression MethodInvocation ex printStackTrace	1
MethodDeclaration Modifier public IfStatement BinaryOperation != MethodInvocation MethodInvocation ShortcutMgr MethodInvocation getText Literal null BlockStatement StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal localize MethodInvocation Translator Literal localize MemberReference JOptionPane WARNING_MESSAGE showMessageDialog BlockStatement StatementExpression MethodInvocation ShortcutMgr MemberReference actions	0
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation MethodInvocation Literal null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal null MethodInvocation MethodInvocation Literal null MethodInvocation MethodInvocation MethodInvocation ReturnStatement MemberReference actions	1
MethodDeclaration Modifier private FormalParameter ReferenceType TypeNode type FormalParameter ReferenceType IdentifierExpression name FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "method declaration contains illegal modifiers" ReportError LocalVariableDeclaration ReferenceType MethodNode VariableDeclarator node ClassCreator ReferenceType MethodNode StatementExpression MethodInvocation typeStack MemberReference MethodInvocation MemberReference node add peek IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression Assignment MemberReference node type MemberReference type = StatementExpression MethodInvocation node.names MemberReference name add StatementExpression Assignment MemberReference node params MethodInvocation parseParamList = StatementExpression MethodInvocation MemberReference node statementBlock parseBlock	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection messages StatementExpression MethodInvocation impl MemberReference handle MemberReference messages	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType String ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator a ClassCreator ReferenceType MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation a MemberReference SHORT_DESCRIPTION MethodInvocation a MemberReference Action NAME getValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation Literal StatementExpression MethodInvocation a MemberReference MemberReference icon StatementExpression MethodInvocation a MemberReference MemberReference Roles ReturnStatement MemberReference a	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType VariableDeclarator figClone Cast ReferenceType SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigCircle MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigCircle MethodInvocation it next = StatementExpression Assignment MemberReference figClone h Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType DocumentFragment FormalParameter ReferenceType FormalParameter ReferenceType xalanNI FormalParameter BasicType int defaultColumn FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference ReturnStatement MethodInvocation MemberReference MemberReference xalanNI MemberReference defaultColumn MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getStateMachinesHelper	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator listeners ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal "remove" Literal "name" Literal "isAbstract" Literal Literal "stereotype" add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator ep MethodInvocation Model MethodInvocation MemberReference newOwner getFacade BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference ep ArrayCreator ReferenceType String ArrayInitializer Literal "location" Literal "name" add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation Model MethodInvocation MemberReference newOwner getStereotypes getFacade BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference st Literal "name" add StatementExpression MethodInvocation MemberReference listeners updateElementListeners	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe valueOf StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal true	1
MethodDeclaration Modifier public static ReferenceType FormalParameter BasicType int value LocalVariableDeclaration BasicType int VariableDeclarator counter Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator sv MethodInvocation values BlockStatement IfStatement BinaryOperation == MemberReference counter MemberReference value BlockStatement ReturnStatement MemberReference sv StatementExpression MemberReference ++ counter ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference lfBeforeCurly	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int getRowCount IfStatement BinaryOperation == MemberReference critics Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation critics size	0
MethodDeclaration Modifier public setVisibility FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object visibility StatementExpression MethodInvocation impl MemberReference handle MemberReference visibility setVisibility	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation image	0
MethodDeclaration Modifier public ReferenceType Project FormalParameter ReferenceType File file OpenException InterruptedException LocalVariableDeclaration ReferenceType ProgressMgr VariableDeclarator progressMgr ClassCreator ReferenceType ProgressMgr StatementExpression MethodInvocation progressMgr MemberReference setNumberOfPhases StatementExpression MethodInvocation ReturnStatement MethodInvocation MemberReference file MemberReference file MemberReference progressMgr	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object d2 IfStatement BinaryOperation instanceof MemberReference d2 ReferenceType BlockStatement ReturnStatement Literal false ReturnStatement Cast ReferenceType MemberReference d2	0
MethodDeclaration Modifier private static ReferenceType ProfileManager IfStatement MethodInvocation ProfileFacade BlockStatement ReturnStatement MethodInvocation ProfileFacade getManager ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation editor MethodInvocation getFigs LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation ! figs isEmpty LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation editor getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType MemberReference gm = StatementExpression MethodInvocation removeFromDiagram MemberReference setEnabled	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Position FormalParameter BasicType int offs BadLocationException ReturnStatement MethodInvocation document MemberReference offs	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object owner StatementExpression SuperMethodInvocation MemberReference handle MemberReference owner StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fm MethodInvocation getFigs BlockStatement StatementExpression Cast ReferenceType FigMessage MemberReference fm	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation This	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType TreeSelectionEvent StatementExpression Assignment MemberReference MethodInvocation =	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getMultiplicity ReturnStatement ClassReference ReferenceType Multiplicity	0
MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getScript getFacade	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType AssociationsNode	0
MethodDeclaration Modifier private printDebugInfo FormalParameter ReferenceType String s FormalParameter ReferenceType String fname FormalParameter ReferenceType StringBuilder guard FormalParameter ReferenceType String paramExpr FormalParameter ReferenceType StringBuilder varname FormalParameter ReferenceType List TypeArgument ReferenceType List predecessors FormalParameter ReferenceType List TypeArgument ReferenceType Integer seqno FormalParameter BasicType boolean parallell FormalParameter BasicType boolean iterative IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal " MemberReference s Literal "\n" append StatementExpression MethodInvocation buf Literal " append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation != MemberReference seqno Literal null BinaryOperation < BinaryOperation + MemberReference i Literal 1 MethodInvocation seqno size Assignment MemberReference i Literal 2 += BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ", " append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation seqno MemberReference i get Literal " (" MethodInvocation seqno BinaryOperation + MemberReference i Literal 1 get Literal ")" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal " MethodInvocation predecessors size Literal "\n" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation predecessors size MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j LocalVariableDeclaration ReferenceType List VariableDeclarator v MethodInvocation predecessors MemberReference i get StatementExpression MethodInvocation buf Literal " " append ForStatement ForControl Assignment MemberReference j Literal 0 = BinaryOperation && BinaryOperation != MemberReference v Literal null BinaryOperation < BinaryOperation + MemberReference j Literal 1 MethodInvocation v size Assignment MemberReference j Literal 2 += BlockStatement IfStatement BinaryOperation > MemberReference j Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ", " append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation v MemberReference j get Literal " (" MethodInvocation v BinaryOperation + MemberReference j Literal 1 get Literal ")" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference guard Literal " " MemberReference iterative Literal " " MemberReference parallell Literal "\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference varname Literal " " MemberReference fname Literal " ( " MemberReference paramExpr Literal " )" Literal "\n" append StatementExpression MethodInvocation LOG MemberReference buf debug	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference PLUSEQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier protected buildModelList IfStatement MethodInvocation ! isEmpty StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getExtension getFacade addElement	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType filter FormalParameter ReferenceType Object StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference removeNotificationListener	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Action	0
MethodDeclaration Modifier public ReferenceType Attribute FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object type LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attr MethodInvocation MemberReference type IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator cls Cast ReferenceType Classifier MemberReference handle StatementExpression MethodInvocation cls MethodInvocation MemberReference attr add getFeature IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator Cast ReferenceType AssociationEnd MemberReference handle StatementExpression MethodInvocation MethodInvocation MemberReference attr add BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement MemberReference attr	0
MethodDeclaration Modifier private warnClassifierNotFound FormalParameter ReferenceType String name FormalParameter ReferenceType String operation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Modeller.java: a classifier (" MemberReference name Literal ") that was in the source " Literal could not be generated in the model " MemberReference operation logError	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation == MethodInvocation e getSource MemberReference combo BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public BasicType boolean isActive ReturnStatement MemberReference isActive	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType T subList FormalParameter BasicType int FormalParameter BasicType int ReturnStatement MethodInvocation MemberReference MemberReference subList	0
MethodDeclaration Modifier public static BasicType boolean getBoolean FormalParameter ReferenceType key ReturnStatement MethodInvocation MemberReference key Literal false getBoolean	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation GUI MethodInvocation This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object m LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getName getFacade generateName LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator g MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator e MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getFacade generateAction IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ": " append StatementExpression MethodInvocation sb MemberReference t append IfStatement BinaryOperation > MethodInvocation g length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference g append MethodInvocation Literal ']' append Literal " [" append IfStatement BinaryOperation > MethodInvocation e length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference e append Literal " / " append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ns ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Namespace ns ReturnStatement MethodInvocation Model MethodInvocation MemberReference ns Literal "profile" getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier private StatementExpression MethodInvocation ClassCreator ReferenceType ActionUseCaseDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionClassDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionSequenceDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionCollaborationDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionStateDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionActivityDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionDeploymentDiagram add	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String MethodInvocation Model MethodInvocation MemberReference modelElement getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType String path StatementExpression Assignment MemberReference MemberReference path =	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations MethodInvocation MethodInvocation Cast ReferenceType ClassifierRole MemberReference handle getMessage MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier private FormalParameter ReferenceType Set TypeArgument ReferenceType String FormalParameter ReferenceType Object element FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference element MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier private static ReferenceType FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType VariableDeclarator first Literal null LocalVariableDeclaration ReferenceType VariableDeclarator p Literal null LocalVariableDeclaration BasicType int VariableDeclarator idx0 VariableDeclarator idx1 VariableDeclarator length LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator val ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType char VariableDeclarator c StatementExpression Assignment MemberReference length MethodInvocation str length = ForStatement ForControl Assignment MemberReference idx0 Literal 0 = BinaryOperation < MemberReference idx0 MemberReference length BlockStatement ForStatement ForControl Assignment MemberReference idx1 MemberReference idx0 = BinaryOperation < MemberReference idx1 MemberReference length MemberReference ++ idx1 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation str MemberReference idx1 charAt = IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement StatementExpression MemberReference ++ idx1 IfStatement BinaryOperation < MemberReference idx1 MemberReference length BlockStatement StatementExpression MethodInvocation val MethodInvocation str MemberReference idx1 charAt append IfStatement BinaryOperation == MemberReference c Literal ',' BlockStatement BreakStatement BlockStatement StatementExpression MethodInvocation val MemberReference c append StatementExpression Assignment MemberReference idx1 MethodInvocation Math MemberReference idx1 MemberReference length min = IfStatement BinaryOperation > MemberReference idx1 MemberReference idx0 BlockStatement StatementExpression Assignment MemberReference p ClassCreator ReferenceType MethodInvocation val toString = StatementExpression Assignment MemberReference val ClassCreator ReferenceType StringBuilder = StatementExpression MethodInvocation p MemberReference first StatementExpression Assignment MemberReference first MemberReference p = StatementExpression Assignment MemberReference idx0 BinaryOperation + MemberReference idx1 Literal 1 = ReturnStatement MemberReference first	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation us MemberReference index setSelection	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object exception StatementExpression MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference handle MemberReference exception ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Operation ClassReference ReferenceType Type checkArgs StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Operation MemberReference handle Cast ReferenceType Type MemberReference exception Literal the Exception to the Operation MemberReference exception MemberReference handle execute	0
MethodDeclaration Modifier protected addAll FormalParameter ReferenceType Collection col LocalVariableDeclaration ReferenceType Object VariableDeclarator selected MethodInvocation getSelectedItem StatementExpression Assignment MemberReference Literal false = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation objects size ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference col BlockStatement StatementExpression MethodInvocation MemberReference o addElement StatementExpression MethodInvocation MethodInvocation MemberReference selected setSelectedItem StatementExpression Assignment MemberReference Literal true = IfStatement BinaryOperation != MethodInvocation objects size MemberReference BlockStatement StatementExpression MethodInvocation This TernaryExpression BinaryOperation == MemberReference Literal 0 Literal 0 BinaryOperation - MemberReference Literal 1 BinaryOperation - MethodInvocation objects size Literal 1 fireIntervalAdded	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference columnNames length	0
MethodDeclaration Modifier public ReferenceType Object getAction ReturnStatement ClassReference ReferenceType Action	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MemberReference MemberReference Literal 10 Literal 300 MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine Literal 150 MemberReference Literal 160 Literal 300 MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MemberReference Literal 300 Literal 150 Literal 300 MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MemberReference MemberReference Literal 150 Literal 10 MemberReference = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference Literal 50 Literal 25 setBounds getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MemberReference BinaryOperation + MemberReference Literal 15 Literal 150 Literal 25 MemberReference = StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier private ReferenceType Collection getModel IfStatement BinaryOperation == MemberReference model Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType TryStatement StatementExpression Assignment MemberReference model MethodInvocation MemberReference loadModel = CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Exception loading " MemberReference MemberReference e error IfStatement BinaryOperation == MemberReference model Literal null BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation model MethodInvocation Model MethodInvocation createModel add ReturnStatement MemberReference model	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier private ReferenceType String generateVisibility FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator visibility IfStatement MethodInvocation Model MethodInvocation MemberReference handle isAFeature getFacade BlockStatement StatementExpression Assignment MemberReference visibility MethodInvocation Model MethodInvocation MemberReference handle getVisibility getFacade = BlockStatement StatementExpression Assignment MemberReference visibility MemberReference handle = IfStatement MethodInvocation Model MethodInvocation getPublic MethodInvocation MemberReference visibility equals getVisibilityKind BlockStatement ReturnStatement Literal "public " IfStatement MethodInvocation Model MethodInvocation getPrivate MethodInvocation MemberReference visibility equals getVisibilityKind BlockStatement ReturnStatement Literal "private " IfStatement MethodInvocation Model MethodInvocation MethodInvocation MemberReference visibility equals getVisibilityKind BlockStatement ReturnStatement Literal "protected " BlockStatement ReturnStatement Literal ""	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier public ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation add StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference MemberReference run execute ReturnStatement Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public Annotation Override setVisible FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference setVisible IfStatement MemberReference BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier private FeatureNotSupportedException IfStatement BinaryOperation != MemberReference curmods MemberReference Modifier Empty StatementExpression MethodInvocation Literal not contain modifiers" ReportError LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType IfStatement BinaryOperation && BinaryOperation == MethodInvocation cu.Namespaces size Literal 1 BinaryOperation == MethodInvocation cu.Namespaces Literal 0 get MemberReference cu BlockStatement StatementExpression MethodInvocation cu.Namespaces clear StatementExpression MethodInvocation cu.Namespaces MemberReference node add StatementExpression MethodInvocation namespaceStack MemberReference node push StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node Name MethodInvocation parseQualifiedIdentifier = StatementExpression MethodInvocation MemberReference TokenID LCurly AssertAndAdvance StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference TokenID RCurly AssertAndAdvance StatementExpression MethodInvocation namespaceStack pop	1
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public ReferenceType Profile FormalParameter ReferenceType String profile ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object getInterface FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal true get	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType FigText StatementExpression SuperMethodInvocation MemberReference IfStatement BinaryOperation == MemberReference MemberReference state BlockStatement StatementExpression MethodInvocation MethodInvocation getParsingHelp	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType String ReturnStatement MethodInvocation MemberReference MemberReference Literal null	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType ActionSequence	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - Literal 511L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig LocalVariableDeclaration ReferenceType Fig VariableDeclarator ClassCreator ReferenceType MemberReference BinaryOperation - MemberReference MemberReference BinaryOperation + MemberReference MemberReference BinaryOperation + MemberReference MemberReference MemberReference StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation Literal 0 setLineWidth ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object state FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference state MemberReference	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MemberReference text	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Collection arg0 SynchronizedStatement MemberReference mutex ReturnStatement MethodInvocation set MemberReference arg0	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference cover ClassCreator ReferenceType FigRect MemberReference Literal 10 MemberReference MemberReference MemberReference MemberReference FILL_COLOR = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigRect Literal 0 BinaryOperation * Literal 2 MemberReference MemberReference MemberReference MemberReference MemberReference FILL_COLOR = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigRect Literal 0 BinaryOperation * Literal 5 MemberReference MemberReference MemberReference MemberReference MemberReference FILL_COLOR = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression MethodInvocation MethodInvocation MethodInvocation placeString setText getNameFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference addFig	0
MethodDeclaration Modifier public ReferenceType Object getComponent ReturnStatement ClassReference ReferenceType Component	0
MethodDeclaration ReferenceType List TypeArgument ReferenceType Point LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Point VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Point LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation MemberReference x LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation MemberReference y LocalVariableDeclaration BasicType double VariableDeclarator radius BinaryOperation + BinaryOperation / MethodInvocation MethodInvocation getWidth Literal 2 Literal 1 LocalVariableDeclaration Modifier final BasicType double VariableDeclarator BinaryOperation * MemberReference Math PI Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference CIRCLE_POINTS MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator x Cast BasicType int BinaryOperation + MemberReference cx BinaryOperation * MethodInvocation Math BinaryOperation / BinaryOperation * MemberReference MemberReference i MemberReference CIRCLE_POINTS cos MemberReference radius LocalVariableDeclaration BasicType int VariableDeclarator y Cast BasicType int BinaryOperation + MemberReference cy BinaryOperation * MethodInvocation Math BinaryOperation / BinaryOperation * MemberReference MemberReference i MemberReference CIRCLE_POINTS sin MemberReference radius StatementExpression MethodInvocation ret ClassCreator ReferenceType Point MemberReference x MemberReference y add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType VariableDeclarator connector Cast ReferenceType Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator prop Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation connector getOwner ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference prop BlockStatement ReturnStatement MemberReference ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The for " MemberReference handle Literal " can't be found in the " MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object connection StatementExpression SuperMethodInvocation MemberReference handle MemberReference connection StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier protected BasicType boolean shouldBeEnabled ReturnStatement MemberReference	0
MethodDeclaration ReferenceType Object FormalParameter ReferenceType Object me FormalParameter ReferenceType Object returnType ReturnStatement MethodInvocation MethodInvocation MemberReference me MemberReference returnType getCoreFactory	0
MethodDeclaration Modifier public static BasicType boolean ReturnStatement MethodInvocation System Literal "os.name" getProperty	0
MethodDeclaration Modifier public BasicType boolean isAGeneralization FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object obj LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference obj indexOf LocalVariableDeclaration BasicType boolean VariableDeclarator rv MethodInvocation MemberReference obj remove IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation This MemberReference index MemberReference index ReturnStatement MemberReference rv	0
MethodDeclaration Modifier public FormalParameter ReferenceType Graphics g LocalVariableDeclaration BasicType int VariableDeclarator iconPos Literal 25 VariableDeclarator gap Literal 1 VariableDeclarator xOff Literal - 4 VariableDeclarator yOff Literal - 4 LocalVariableDeclaration ReferenceType Point VariableDeclarator p ClassCreator ReferenceType Point LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator tdList MethodInvocation Designer MethodInvocation LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tdList MethodInvocation getOwner elementListForOffender ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator icon MethodInvocation item IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference iconPos MemberReference p StatementExpression MethodInvocation icon Literal null MemberReference g BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation + MemberReference p y MemberReference yOff paintIcon StatementExpression Assignment MemberReference iconPos BinaryOperation + MethodInvocation icon getIconWidth MemberReference gap += StatementExpression Assignment MemberReference items MethodInvocation tdList This elementListForOffender = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator icon MethodInvocation item IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference iconPos MemberReference p StatementExpression MethodInvocation icon Literal null MemberReference g BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation + MemberReference p y MemberReference yOff paintIcon StatementExpression Assignment MemberReference iconPos BinaryOperation + MethodInvocation icon getIconWidth MemberReference gap +=	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object theTarget StatementExpression SuperMethodInvocation MemberReference theTarget IfStatement MethodInvocation isVisible BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getModelElement IfStatement BinaryOperation != MemberReference me Literal null BlockStatement StatementExpression MethodInvocation MemberReference me StatementExpression MethodInvocation validate	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner	0
MethodDeclaration Modifier private FormalParameter ReferenceType Property position FormalParameter ReferenceType Class tab LocalVariableDeclaration ReferenceType VariableDeclarator key MethodInvocation MemberReference tab StatementExpression MethodInvocation Configuration MemberReference key MethodInvocation position MethodInvocation toString setString	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object feature StatementExpression MethodInvocation impl MemberReference elem MemberReference i MemberReference feature	0
MethodDeclaration Modifier private ReferenceType Context getContext FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Context VariableDeclarator context MethodInvocation parseState getContext LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference name getPackageName IfStatement Literal ! MethodInvocation MemberReference packageName equals "" BlockStatement StatementExpression Assignment MemberReference context ClassCreator ReferenceType MemberReference context MethodInvocation MemberReference packageName getPackage = ReturnStatement MemberReference context	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object context StatementExpression MethodInvocation impl MemberReference handle MemberReference context	0
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType String figclassname FormalParameter ReferenceType String ownerhref IfStatement BinaryOperation instanceof MemberReference container ReferenceType FigEdgeHandler BlockStatement LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdgeHandler MemberReference container LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation MethodInvocation MemberReference ownerhref findOwner getPGMLStackParser ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation fe BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MemberReference o IfStatement BinaryOperation && MethodInvocation owner MethodInvocation f getOwner equals MethodInvocation figclassname MethodInvocation f MethodInvocation getName getClass equals BlockStatement ReturnStatement MethodInvocation fe MemberReference f StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Could not load path item for fig '" MemberReference figclassname Literal "', using default warn ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType int getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference attr getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null Literal MethodInvocation MemberReference myName equals "" BlockStatement ReturnStatement MemberReference PROBLEM_FOUND IfStatement BinaryOperation == MethodInvocation myName length Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean setContent FormalParameter ReferenceType String sTagContent IfStatement BinaryOperation && BinaryOperation != MemberReference sTagContent Literal null BinaryOperation > MethodInvocation sTagContent MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation sTagContent trim = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine StatementExpression This MethodInvocation This MemberReference modifiers MemberReference sb TraceModifiers StatementExpression This MemberReference type MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "this [" append IfStatement BinaryOperation != MemberReference params Literal null BlockStatement StatementExpression MethodInvocation params MemberReference sb ToSource StatementExpression MethodInvocation sb Literal append IfStatement MemberReference hasGetter BlockStatement StatementExpression MethodInvocation sb Literal append IfStatement MemberReference hasSetter BlockStatement StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation sb Literal "}" append	1
MethodDeclaration ReferenceType Fig ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType String BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference baseClass	0
MethodDeclaration Modifier public ReferenceType UndoManager ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Document getDocument IOException ParserConfigurationException SAXException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator filename MethodInvocation LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream This MethodInvocation getClass MethodInvocation getClassLoader MethodInvocation MemberReference filename getResourceAsStream LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource MemberReference inputStream LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator dbf MethodInvocation DocumentBuilderFactory newInstance LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator db MethodInvocation dbf newDocumentBuilder ReturnStatement MethodInvocation db MemberReference inputSource parse	1
MethodDeclaration ReferenceType Object ReturnStatement MemberReference profile	0
MethodDeclaration Modifier public ReferenceType ReturnStatement Cast ReferenceType MethodInvocation getModel	0
MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint StatementExpression MethodInvocation g BinaryOperation + Literal MethodInvocation ApplicationVersion getVersion BinaryOperation + MethodInvocation MemberReference left getInsets Literal 10 BinaryOperation + MethodInvocation MemberReference top getInsets Literal 18 drawString	1
MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent	0
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MethodInvocation size MemberReference parent	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter BasicType int lower FormalParameter BasicType int upper ThrowStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference scope MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference DiagramAppearance getBoolean setSelected StatementExpression Assignment MemberReference MethodInvocation DiagramAppearance MethodInvocation getInstance = StatementExpression Assignment MemberReference MethodInvocation Configuration MemberReference DiagramAppearance getInteger = StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal true getBoolean setSelected StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal 1 getInteger setSelectedIndex	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h LocalVariableDeclaration Modifier final BasicType int VariableDeclarator labelWidth MethodInvocation MemberReference width LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation MemberReference height LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ArrayCreator BasicType int Literal 7 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ArrayCreator BasicType int Literal 7 StatementExpression Assignment MemberReference ArraySelector Literal 0 MemberReference x = StatementExpression Assignment MemberReference ArraySelector Literal 0 MemberReference y = StatementExpression Assignment MemberReference ArraySelector Literal 1 BinaryOperation - BinaryOperation + MemberReference x MemberReference labelWidth Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 1 MemberReference y = StatementExpression Assignment MemberReference ArraySelector Literal 2 BinaryOperation - BinaryOperation + MemberReference x MemberReference labelWidth Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 2 BinaryOperation - BinaryOperation + MemberReference y MemberReference Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 3 BinaryOperation - BinaryOperation + MemberReference x MemberReference w Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 3 BinaryOperation - BinaryOperation + MemberReference y MemberReference Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 4 BinaryOperation - BinaryOperation + MemberReference x MemberReference w Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 4 BinaryOperation - BinaryOperation + MemberReference y MemberReference h Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 5 MemberReference x = StatementExpression Assignment MemberReference ArraySelector Literal 5 BinaryOperation - BinaryOperation + MemberReference y MemberReference h Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 6 MemberReference x = StatementExpression Assignment MemberReference ArraySelector Literal 6 MemberReference y = LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference MemberReference Literal 7 StatementExpression SuperMethodInvocation MemberReference p StatementExpression MethodInvocation Literal true setFilled StatementExpression MethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier private FormalParameter ReferenceType menu FormalParameter ReferenceType Action a IfStatement BinaryOperation instanceof MemberReference a ReferenceType List TypeArgument ? BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator m ClassCreator ReferenceType JMenu MemberReference a IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JPopupMenu BlockStatement StatementExpression Cast ReferenceType JPopupMenu MemberReference menu IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JMenu BlockStatement StatementExpression Cast ReferenceType JMenu MemberReference menu ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator Cast ReferenceType List TypeArgument ReferenceType Action MemberReference a BlockStatement StatementExpression MethodInvocation MemberReference m MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JPopupMenu BlockStatement StatementExpression Cast ReferenceType JPopupMenu MemberReference menu IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JMenu BlockStatement StatementExpression Cast ReferenceType JMenu MemberReference menu	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator designMaterialName MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference designMaterialName Literal null BinaryOperation == MethodInvocation designMaterialName length Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator elementImports MethodInvocation Model MethodInvocation MemberReference classifier getFacade IfStatement BinaryOperation == MemberReference elementImports Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation elementImports iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator imp MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator pack MethodInvocation Model MethodInvocation MemberReference imp getPackage getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator alias MethodInvocation Model MethodInvocation MemberReference imp getAlias getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference alias Literal null BinaryOperation == MethodInvocation alias length Literal 0 BlockStatement StatementExpression Assignment MemberReference alias MemberReference designMaterialName = LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference pack getOwnedElements getFacade IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elems MethodInvocation iterator WhileStatement MethodInvocation elems hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation elems next LocalVariableDeclaration ReferenceType Object VariableDeclarator me MemberReference eo IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference me MemberReference classifier BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference meName Literal null MethodInvocation meName Literal "" equals BlockStatement ContinueStatement IfStatement MethodInvocation meName MemberReference alias equals BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType AbstractAction action ReturnStatement Cast ReferenceType String MethodInvocation action MemberReference AbstractAction NAME getValue	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public deleteCollection FormalParameter ReferenceType Collection col LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation it next delete getUmlFactory	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Cast ReferenceType MemberReference ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType e StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation getSelectedIndex Literal - 1 setEnabled	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public Annotation Override StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation ! BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation Model MethodInvocation MemberReference target getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target MemberReference model getStateMachinesHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation MemberReference ns StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference event getStateMachinesHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference event getInstance	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int ReturnStatement TernaryExpression BinaryOperation == MethodInvocation Literal 0 MemberReference BinaryOperation + MethodInvocation Literal 99	1
MethodDeclaration Modifier public modelElementAdded FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation treeModel MemberReference element modelElementAdded	1
MethodDeclaration Modifier public BasicType int ReturnStatement Literal 2	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public paintIcon FormalParameter ReferenceType Component c FormalParameter ReferenceType Graphics g FormalParameter BasicType int x FormalParameter BasicType int y IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigCompartmentBox BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator fc Cast ReferenceType FigCompartmentBox MemberReference fig IfStatement BinaryOperation == MemberReference fc Literal null BlockStatement ReturnStatement IfStatement MethodInvocation ! fc isVisible BlockStatement StatementExpression Assignment MemberReference fig Literal null = ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator fr MethodInvocation fc getBounds LocalVariableDeclaration BasicType int VariableDeclarator left BinaryOperation + MemberReference fr x Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator height BinaryOperation - BinaryOperation + MemberReference fr y MemberReference fr height Literal 7 LocalVariableDeclaration BasicType int VariableDeclarator right BinaryOperation - BinaryOperation + MemberReference fr x MemberReference fr width Literal 10 StatementExpression MethodInvocation g MemberReference Color red setColor LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference left WhileStatement Literal true BlockStatement StatementExpression MethodInvocation g MemberReference i MemberReference height BinaryOperation + MemberReference i MemberReference WAVE_LENGTH BinaryOperation + MemberReference height MemberReference WAVE_HEIGHT drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i BinaryOperation + MemberReference height MemberReference WAVE_HEIGHT BinaryOperation + MemberReference i MemberReference WAVE_LENGTH MemberReference height drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i MemberReference height BinaryOperation + MemberReference i MemberReference WAVE_LENGTH BinaryOperation + MemberReference height BinaryOperation / MemberReference WAVE_HEIGHT Literal 2 drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i BinaryOperation + MemberReference height BinaryOperation / MemberReference WAVE_HEIGHT Literal 2 BinaryOperation + MemberReference i MemberReference WAVE_LENGTH MemberReference height drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression Assignment MemberReference fig Literal null =	1
MethodDeclaration Modifier public ReferenceType getUmlHelper IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType double getAngle ReturnStatement BinaryOperation / BinaryOperation * MemberReference angle Literal 180 MemberReference Math PI	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation evt getSource MemberReference namespace BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent Literal MethodInvocation MethodInvocation evt getPropertyName equals "remove" BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace Literal "remove" removeModelEventListener getPump IfStatement BinaryOperation != MethodInvocation getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation This moveToTrash getProject	1
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Object bf LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation MemberReference bf getParameters getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference parameter getFacade BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference getCollaborationsHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Literal "" StatementExpression MethodInvocation state Cast ReferenceType MemberReference ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade addElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference elems ReferenceType List BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference handle MemberReference elems update ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString IfStatement BinaryOperation != MethodInvocation getName Literal null BlockStatement ReturnStatement MethodInvocation getName BlockStatement ReturnStatement SuperMethodInvocation toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier public addActionListener FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation MemberReference l addActionListener	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType rule StatementExpression MethodInvocation rules MemberReference rule remove	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType TreePath destinationPath FormalParameter ReferenceType Transferable IfStatement BinaryOperation == MemberReference destinationPath Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: no destination found." debug ReturnStatement Literal false IfStatement MethodInvocation MemberReference destinationPath BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: move to debug ReturnStatement Literal false IfStatement MethodInvocation ! MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: not debug ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation destinationPath getLastPathComponent IfStatement MethodInvocation ! Model MethodInvocation MemberReference dest isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: not a namespace." debug ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference dest isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "No valid Drag: " Literal "this is not an editable element debug ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference dest isADataType getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: destination is a debug ReturnStatement Literal false TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator Cast ReferenceType Collection MethodInvocation MemberReference TransferableModelElements UML_COLLECTION_FLAVOR getTransferData ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAUMLElement getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference element isReadOnly getModelManagementHelper BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference dest isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference element isANamespace getFacade MethodInvocation Model MethodInvocation MemberReference element MemberReference dest isValidNamespace getCoreHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Valid Drag: namespace " MemberReference dest debug ReturnStatement Literal true IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAFeature getFacade MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator d Cast ReferenceType MemberReference element IfStatement MethodInvocation d MemberReference dest BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Valid Drag: diagram " MemberReference dest debug ReturnStatement Literal true CatchClause CatchClauseParameter UnsupportedFlavorException e StatementExpression MethodInvocation LOG MemberReference e debug CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG MemberReference e debug StatementExpression MethodInvocation LOG Literal "No valid Drag: not a valid namespace." debug ReturnStatement Literal false	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation invokeLater	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal null Literal ""	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean isDataFlavorSupported FormalParameter ReferenceType DataFlavor ReturnStatement MethodInvocation MemberReference UML_COLLECTION_FLAVOR match	0
MethodDeclaration Modifier public ReferenceType getConcurrencyKind IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference Literal 0 =	0
MethodDeclaration Modifier public BasicType int getMinX StatementExpression MethodInvocation LOG Literal = 0" debug ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType Object getMultiplicity FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator sf Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation sf getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator cr Cast ReferenceType ClassifierRole MemberReference handle ReturnStatement MethodInvocation cr getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement MethodInvocation ae getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ar Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation ar getMultiplicity CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType AbstractAction ReturnStatement This MemberReference	0
MethodDeclaration Modifier public updateFields StatementExpression Assignment MemberReference activeUpdateModele Literal false = LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation curBody getText LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation MethodInvocation getValue getModel LocalVariableDeclaration ReferenceType String VariableDeclarator newText Literal "" IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference newText MemberReference ArraySelector BinaryOperation * Literal 2 MemberReference currentText = IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation curBody MemberReference newText setText StatementExpression Assignment MemberReference oldText MethodInvocation curLanguage getText = StatementExpression Assignment MemberReference newText Literal "" = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference newText MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentText Literal 1 = IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation curLanguage MemberReference newText setText StatementExpression Assignment MemberReference activeUpdateModele Literal true =	1
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType File FormalParameter ReferenceType File file FormalParameter BasicType boolean recurse FormalParameter ReferenceType SuffixFilter filters FormalParameter ReferenceType ProgressMonitor monitor IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ReturnStatement MethodInvocation Collections LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator toDoDirectories ClassCreator ReferenceType LinkedList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType File VariableDeclarator seenDirectories ClassCreator ReferenceType HashSet TypeArgument ReferenceType File StatementExpression MethodInvocation toDoDirectories MemberReference file add WhileStatement MethodInvocation ! toDoDirectories isEmpty BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference monitor Literal null MethodInvocation monitor isCanceled BlockStatement ReturnStatement MethodInvocation Collections LocalVariableDeclaration ReferenceType File VariableDeclarator curDir MethodInvocation toDoDirectories Literal 0 remove IfStatement MethodInvocation ! curDir isDirectory BlockStatement StatementExpression MethodInvocation results MemberReference curDir add ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation curDir listFiles IfStatement BinaryOperation != MemberReference files Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator curFile MethodInvocation curDir listFiles BlockStatement IfStatement MethodInvocation curFile isDirectory BlockStatement IfStatement BinaryOperation && MemberReference recurse MethodInvocation ! seenDirectories MemberReference curFile contains BlockStatement StatementExpression MethodInvocation toDoDirectories MemberReference curFile add StatementExpression MethodInvocation seenDirectories MemberReference curFile add BlockStatement IfStatement MethodInvocation MemberReference curFile MemberReference filters BlockStatement StatementExpression MethodInvocation results MemberReference curFile add ReturnStatement MemberReference results	1
MethodDeclaration Modifier private ReferenceType String generateImportType FormalParameter ReferenceType Object type FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal null IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference type isADataType getFacade MethodInvocation MethodInvocation Model MethodInvocation MemberReference type getName getFacade contains BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference type Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference type getNamespace getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation MethodInvocation Model MethodInvocation MemberReference type getNamespace getFacade getPackageName IfStatement BinaryOperation && MethodInvocation ! p MemberReference equals MethodInvocation ! p MemberReference equals BlockStatement IfStatement BinaryOperation > MethodInvocation p length Literal 0 BlockStatement StatementExpression Assignment MemberReference ret BinaryOperation + BinaryOperation + MemberReference p Literal '.' MethodInvocation Model MethodInvocation MemberReference type getName getFacade = BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation Model MethodInvocation MemberReference type getName getFacade = ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o addAll IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation result Cast ReferenceType MemberReference o add CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle IfStatement BinaryOperation || MethodInvocation MemberReference handle MethodInvocation MemberReference handle BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle IfStatement MethodInvocation MemberReference handle BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator trans MethodInvocation MethodInvocation iterator MemberReference handle getTransitions LocalVariableDeclaration ReferenceType List VariableDeclarator outgoings ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation trans hasNext BlockStatement StatementExpression MethodInvocation outgoings MethodInvocation MethodInvocation trans next addAll ReturnStatement MemberReference outgoings IfStatement MethodInvocation MemberReference handle isAStateVertex BlockStatement ReturnStatement Cast ReferenceType Vertex MemberReference handle IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle ThrowStatement ClassCreator ReferenceType IllegalArgumentException	1
MethodDeclaration Modifier public ReferenceType Object getElement ReturnStatement ClassReference ReferenceType Element	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getRuleName	0
MethodDeclaration Modifier private parseEvent FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "Event contains illegal modifiers" ReportError LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType StatementExpression MethodInvocation typeStack MemberReference Events MethodInvocation MemberReference node add peek IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node type MethodInvocation parseType = IfStatement BinaryOperation != MemberReference curtok id MemberReference TokenID Ident StatementExpression MethodInvocation Literal "Expected event member ReportError WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression MethodInvocation node.names MethodInvocation parseQualifiedIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LCurly BlockStatement StatementExpression MethodInvocation advance IfStatement BinaryOperation != MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression MethodInvocation Literal "Event accessor requires add or remove clause." ReportError LocalVariableDeclaration ReferenceType String VariableDeclarator curAccessor MethodInvocation strings MemberReference curtok data get StatementExpression MethodInvocation advance IfStatement MethodInvocation curAccessor Literal equals BlockStatement StatementExpression MethodInvocation MemberReference node parseBlock IfStatement BinaryOperation && BinaryOperation == MemberReference curtok id MemberReference TokenID Ident MethodInvocation strings MethodInvocation Literal "remove" equals MemberReference curtok data get BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference node parseBlock BlockStatement StatementExpression MethodInvocation Literal "Event accessor expected remove clause." ReportError IfStatement MethodInvocation curAccessor Literal "remove" equals BlockStatement StatementExpression MethodInvocation MemberReference node parseBlock IfStatement BinaryOperation && BinaryOperation == MemberReference curtok id MemberReference TokenID Ident MethodInvocation strings MethodInvocation Literal equals MemberReference curtok data get BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference node parseBlock BlockStatement StatementExpression MethodInvocation Literal "Event accessor expected add clause." ReportError BlockStatement StatementExpression MethodInvocation Literal "Event accessor requires add or remove clause." ReportError BlockStatement StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance	1
MethodDeclaration Modifier private static ReferenceType String getExtension FormalParameter ReferenceType String filename LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation filename Literal '.' lastIndexOf IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MethodInvocation filename length Literal 1 BlockStatement ReturnStatement MethodInvocation filename MethodInvocation toLowerCase BinaryOperation + MemberReference i Literal 1 substring ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args ImportInterface.ImportException TryStatement StatementExpression MethodInvocation parseFile CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter FeatureNotSupportedException e StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation Expression MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "++" append	1
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression SuperMethodInvocation MemberReference oldOwner MemberReference newOwner updateListeners IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference newOwner getFacade BlockStatement StatementExpression MethodInvocation MemberReference classifier Literal "name"	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "(" append StatementExpression MethodInvocation Type MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append StatementExpression MethodInvocation MemberReference sb ToSource	1
MethodDeclaration register FormalParameter ReferenceType T item FormalParameter ReferenceType String key FormalParameter ReferenceType String subkeys LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T VariableDeclarator entry MethodInvocation registry MemberReference key get IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement StatementExpression Assignment MemberReference entry ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T = StatementExpression MethodInvocation registry MemberReference key MemberReference entry put IfStatement BinaryOperation || BinaryOperation == MemberReference subkeys Literal null BinaryOperation < MemberReference subkeys length Literal 1 BlockStatement StatementExpression Assignment MemberReference subkeys ArrayCreator ReferenceType String ArrayInitializer Literal "" = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference subkeys length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator list MethodInvocation entry MemberReference ArraySelector MemberReference i subkeys get IfStatement BinaryOperation == MemberReference list Literal null BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T = StatementExpression MethodInvocation entry MemberReference ArraySelector MemberReference i subkeys MemberReference list put IfStatement MethodInvocation ! list MemberReference item contains BlockStatement StatementExpression MethodInvocation list MemberReference item add BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Duplicate registration for " MemberReference key Literal ":" MemberReference subkeys Literal " Listener: " MemberReference item debug	1
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MethodInvocation setValue StatementExpression MethodInvocation clear StatementExpression MethodInvocation SwingUtilities MemberReference invokeLater	0
MethodDeclaration Modifier public FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation MemberReference l	1
MethodDeclaration Modifier protected ReferenceType String getProperty IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType SqlCodeCreator StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Point ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation >= MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal indexOf getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference DiagramType ClassCreator ReferenceType getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier private ReferenceType Class TypeArgument ? findClassOnUserClasspath FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator clazz Literal null TryStatement StatementExpression Assignment MemberReference clazz MethodInvocation ImportClassLoader MethodInvocation MemberReference name loadClass getInstance = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal configuration error" MemberReference e warn CatchClause CatchClauseParameter ClassNotFoundException e ReturnStatement Literal null CatchClause CatchClauseParameter LinkageError e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Linkage error loading found class " MemberReference name MemberReference e warn ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference clazz Literal null MemberReference interfacesOnly MethodInvocation ! clazz isInterface BlockStatement ReturnStatement Literal null ReturnStatement MemberReference clazz	1
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType Object FormalParameter ReferenceType Object toP IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference isAActor getFacade MethodInvocation Model MethodInvocation MemberReference toP isAActor getFacade BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement MethodInvocation ! MethodInvocation isEmpty	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier static protected ReferenceType ImageIcon ReturnStatement MemberReference	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType String s StatementExpression MethodInvocation LOG BinaryOperation + Literal setting src for " MethodInvocation Model MethodInvocation MethodInvocation getName getFacade debug LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation IfStatement BinaryOperation instanceof MethodInvocation ReferenceType FigNode BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType FigNode MethodInvocation = IfStatement BinaryOperation instanceof MethodInvocation ReferenceType FigEdge BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType FigEdge MethodInvocation = IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement	1
MethodDeclaration ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object model FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference model MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType getHandler FormalParameter ReferenceType stack FormalParameter ReferenceType Object container FormalParameter ReferenceType String uri FormalParameter ReferenceType String localname FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attributes SAXException LocalVariableDeclaration ReferenceType String VariableDeclarator href MethodInvocation attributes Literal getValue LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null IfStatement BinaryOperation != MemberReference href Literal null BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation MemberReference href findOwner = IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found href of " MemberReference href Literal " with no matching element in model" warn ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference container ReferenceType FigGroupHandler BlockStatement LocalVariableDeclaration ReferenceType FigGroup VariableDeclarator group Cast ReferenceType FigGroupHandler MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference group ReferenceType FigNode MethodInvocation ! qname Literal "private" equals BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && MethodInvocation qname Literal "private" equals BinaryOperation instanceof MemberReference container ReferenceType Container BlockStatement ReturnStatement ClassCreator ReferenceType This Cast ReferenceType Container MemberReference container LocalVariableDeclaration ReferenceType VariableDeclarator handler SuperMethodInvocation MemberReference stack MemberReference container MemberReference uri MemberReference localname MemberReference qname MemberReference attributes getHandler IfStatement BinaryOperation instanceof MemberReference handler ReferenceType FigEdgeHandler BlockStatement ReturnStatement ClassCreator ReferenceType org ReferenceType argouml ReferenceType ReferenceType FigEdgeHandler This Cast ReferenceType FigEdgeHandler MemberReference handler ReturnStatement MemberReference handler	1
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation equals BlockStatement StatementExpression MethodInvocation MemberReference setSelected BlockStatement StatementExpression MethodInvocation MemberReference setSelected	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String value StatementExpression MethodInvocation MemberReference handle ArrayCreator ReferenceType String ArrayInitializer MemberReference value	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getAction getMetaTypes	0
MethodDeclaration Modifier private FormalParameter ReferenceType LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement TryStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal calling for " MemberReference Literal " in " MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners Literal " an error is MemberReference e warn	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MouseEvent me StatementExpression MethodInvocation MemberReference me StatementExpression MethodInvocation Globals This curEditor StatementExpression MethodInvocation MemberReference me LocalVariableDeclaration ReferenceType Fig VariableDeclarator currentFig MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference currentFig Literal null MethodInvocation Globals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tip MethodInvocation currentFig MemberReference me IfStatement BinaryOperation && BinaryOperation != MemberReference tip Literal null BinaryOperation != MethodInvocation getJComponent Literal null BlockStatement LocalVariableDeclaration ReferenceType JComponent VariableDeclarator c MethodInvocation getJComponent IfStatement BinaryOperation || BinaryOperation == MethodInvocation c getToolTipText Literal null MethodInvocation ! c getToolTipText BlockStatement StatementExpression MethodInvocation c MemberReference tip setToolTipText IfStatement BinaryOperation && BinaryOperation != MethodInvocation getJComponent Literal null BinaryOperation != MethodInvocation MethodInvocation getToolTipText getJComponent Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Literal null setToolTipText getJComponent StatementExpression MethodInvocation MemberReference me StatementExpression MethodInvocation MemberReference me	1
MethodDeclaration Modifier private FormalParameter ReferenceType String newValue IfStatement BinaryOperation && MethodInvocation isFiring MethodInvocation ! newValue MethodInvocation getProperty equals BlockStatement StatementExpression MethodInvocation Literal false setFiring StatementExpression MethodInvocation MemberReference newValue setProperty StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump StatementExpression MethodInvocation Literal true setFiring	1
MethodDeclaration Modifier public final RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LSQUARE BlockStatement StatementExpression MethodInvocation MemberReference LSQUARE match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation constant_expression BreakStatement SwitchStatementCase RSQUARE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RSQUARE match BreakStatement SwitchStatementCase LPAREN BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef LITERAL_enum ID LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LPAREN LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE ELLIPSIS SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation parameter_list BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation cv_qualifier_seq BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation exception_specification BreakStatement SwitchStatementCase GREATERTHAN ASSIGNEQUAL COMMA LPAREN RPAREN LSQUARE ELLIPSIS BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object modelElement ReturnStatement BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType	1
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator profile MethodInvocation Model MethodInvocation StatementExpression MethodInvocation Model MethodInvocation MemberReference profile Literal Java setName getCoreHelper StatementExpression MethodInvocation result MemberReference profile add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation MethodInvocation MemberReference language MemberReference body StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation >= MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal indexOf getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference DiagramType Activity ClassCreator ReferenceType getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference overwrite MemberReference Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection getStereotypes FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection TryStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType URL url ReturnStatement Literal false	0
MethodDeclaration Modifier public final actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next StatementExpression MethodInvocation MemberReference t	0
MethodDeclaration Modifier public ReferenceType Object getNamespace FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Element MemberReference handle IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement ReturnStatement MemberReference o IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference c Literal null BlockStatement ReturnStatement MethodInvocation c ReturnStatement Literal null	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getType FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal be a or a Literal "Got " MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression SuperMethodInvocation MemberReference pce propertyChange IfStatement Literal MethodInvocation MethodInvocation pce getPropertyName equals "isAbstract" BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType String getString ReturnStatement MemberReference	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public BasicType int getOffset ReturnStatement MemberReference offset	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Token parse LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation Literal ';' Literal '<' Literal '>' MemberReference desc LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation desc Literal 0 BinaryOperation + MemberReference index Literal 1 substring StatementExpression Assignment MemberReference desc MethodInvocation desc BinaryOperation + MemberReference index Literal 1 substring = LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation Pattern MethodInvocation MemberReference matcher Literal compile IfStatement MethodInvocation m matches BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation m Literal 1 group LocalVariableDeclaration ReferenceType String VariableDeclarator identifier MethodInvocation m Literal 2 group LocalVariableDeclaration ReferenceType String VariableDeclarator other MethodInvocation m Literal 3 group LocalVariableDeclaration ReferenceType String VariableDeclarator arguments Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference other Literal null BinaryOperation > MethodInvocation other length Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation other Literal 0 charAt Literal '<' BlockStatement StatementExpression Assignment MemberReference arguments MethodInvocation other Literal 0 BinaryOperation + MethodInvocation MemberReference other Literal '<' Literal '>' Literal 1 substring = StatementExpression Assignment MemberReference MethodInvocation other MethodInvocation arguments length substring = IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token PACKAGE MethodInvocation Literal "/" Literal "." replaceAll add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType BinaryOperation + MemberReference identifier MemberReference arguments StatementExpression MethodInvocation result MethodInvocation parse addAll WhileStatement BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 1 substring = StatementExpression Assignment MemberReference index MethodInvocation Literal '.' Literal '<' Literal '>' MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation Literal 0 MemberReference index substring StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal "." add StatementExpression MethodInvocation result ClassCreator MethodInvocation parse ReferenceType MemberReference suffix addAll StatementExpression Assignment MemberReference MethodInvocation MemberReference index substring = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static ReferenceType ActionAddOperation getTargetFollower IfStatement BinaryOperation == MemberReference targetFollower Literal null BlockStatement StatementExpression Assignment MemberReference targetFollower ClassCreator ReferenceType ActionAddOperation = StatementExpression MethodInvocation TargetManager MethodInvocation ClassCreator ReferenceType MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodDeclaration Modifier private StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled addTargetListener getInstance StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled ReturnStatement MemberReference targetFollower	1
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 4593671619917905901L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public FormalParameter ReferenceType p StatementExpression Assignment MemberReference predicate MemberReference p =	0
MethodDeclaration Modifier public final BasicType double FormalParameter ReferenceType key FormalParameter BasicType double defaultValue StatementExpression MethodInvocation TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation key getKey MethodInvocation Double MemberReference defaultValue toString getValue ReturnStatement MethodInvocation Double MemberReference s CatchClause CatchClauseParameter NumberFormatException nfe ReturnStatement MemberReference defaultValue	0
MethodDeclaration Modifier protected BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "The FigEdge has no error ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getLayer Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "The FigEdge has no error ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Fig VariableDeclarator MethodInvocation getSourceFigNode LocalVariableDeclaration ReferenceType Fig VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation getOwner = StatementExpression Assignment MemberReference MethodInvocation getOwner = IfStatement BinaryOperation || BinaryOperation != MemberReference MemberReference BinaryOperation != MemberReference MemberReference BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator MethodInvocation MemberReference LocalVariableDeclaration ReferenceType Fig VariableDeclarator MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference setSourceFigNode StatementExpression MethodInvocation MemberReference setSourcePortFig IfStatement BinaryOperation != MemberReference MemberReference BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference setDestFigNode StatementExpression MethodInvocation MemberReference setDestPortFig StatementExpression Cast ReferenceType FigNode MemberReference StatementExpression Cast ReferenceType FigNode MemberReference StatementExpression MethodInvocation IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression MethodInvocation ReturnStatement Literal true	0
MethodDeclaration Modifier private StatementExpression MethodInvocation ClassCreator ReferenceType FigPoly MemberReference MemberReference LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 125 Literal 130 Literal 135 Literal 125 LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 45 Literal 40 Literal 45 Literal 45 LocalVariableDeclaration ReferenceType VariableDeclarator polygon ClassCreator ReferenceType MemberReference MemberReference Literal 4 StatementExpression MethodInvocation MethodInvocation MemberReference polygon StatementExpression MethodInvocation MethodInvocation Literal false setFilled StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MemberReference BlockStatement StatementExpression MethodInvocation MemberReference action add	0
MethodDeclaration Modifier public BasicType int getUpper FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper Literal 0 LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation != MethodInvocation end getMultiplicity Literal null BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation MethodInvocation end getMultiplicity getUpper = ReturnStatement MemberReference upper IfStatement MethodInvocation MemberReference handle isAMultiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator up Cast ReferenceType Multiplicity MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator ranges ClassCreator ReferenceType ArrayList MethodInvocation up getRange ReturnStatement MethodInvocation MethodInvocation ranges BinaryOperation - MethodInvocation ranges size Literal 1 get getUpper IfStatement MethodInvocation MemberReference handle BlockStatement LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator up Cast ReferenceType MultiplicityRange MemberReference handle ReturnStatement MethodInvocation up getUpper CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e StatementExpression MethodInvocation MemberReference handle ReturnStatement Literal 0	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText	0
MethodDeclaration Modifier private ReferenceType Object ReturnStatement ArrayCreator ReferenceType Object ArrayInitializer MemberReference vt MemberReference val MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null remove StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier private ReferenceType String generateGeneralization FormalParameter ReferenceType Collection generalizations IfStatement BinaryOperation == MemberReference generalizations Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation generalizations iterator WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation next LocalVariableDeclaration ReferenceType Object VariableDeclarator ge MethodInvocation MethodInvocation MemberReference generalization getGeneral getFacade IfStatement BinaryOperation != MemberReference ge Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 StatementExpression MethodInvocation sb Literal ", " append LocalVariableDeclaration ReferenceType String VariableDeclarator visTag MethodInvocation MethodInvocation MemberReference generalization MemberReference getTaggedValueValue MethodInvocation trim getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference visTag Literal null MethodInvocation ! visTag Literal "" equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " " append MemberReference visTag append BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference ge isAInterface getFacade BlockStatement StatementExpression MethodInvocation sb Literal "virtual public " append BlockStatement StatementExpression MethodInvocation sb Literal "public " append StatementExpression MethodInvocation sb MethodInvocation MemberReference ge generateNameWithPkgSelection append StatementExpression MethodInvocation MemberReference ge Literal false addDependency ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private BasicType boolean isSystemClipBoardEmpty LocalVariableDeclaration BasicType boolean VariableDeclarator hasContents Literal false LocalVariableDeclaration ReferenceType Transferable VariableDeclarator content MethodInvocation Toolkit MethodInvocation MethodInvocation Literal null getContents getDefaultToolkit LocalVariableDeclaration ReferenceType DataFlavor VariableDeclarator flavors MethodInvocation content TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference flavors length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation content MemberReference ArraySelector MemberReference i flavors getTransferData Literal null BlockStatement StatementExpression Assignment MemberReference hasContents Literal true = BreakStatement CatchClause CatchClauseParameter UnsupportedFlavorException CatchClause CatchClauseParameter IOException ReturnStatement MemberReference ! hasContents	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Critic IfStatement BinaryOperation == MemberReference critics Literal null BlockStatement StatementExpression MethodInvocation ReturnStatement SuperMethodInvocation	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation Cast ReferenceType Namespace MemberReference pack StatementExpression MethodInvocation Cast ReferenceType MemberReference me StatementExpression MethodInvocation MethodInvocation MemberReference add	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Iterator TypeArgument ReferenceType T iter WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation iter next add	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BlockStatement ReturnStatement Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Property BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal must be instance of AggregationKind " MemberReference Literal " LocalVariableDeclaration Modifier final ReferenceType Property VariableDeclarator property Cast ReferenceType Property MemberReference handle LocalVariableDeclaration Modifier final ReferenceType AggregationKind VariableDeclarator aggregation Cast ReferenceType AggregationKind MemberReference LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation property MemberReference aggregation setAggregation IfStatement BinaryOperation || BinaryOperation == MemberReference aggregation MemberReference AggregationKind BinaryOperation == MemberReference aggregation MemberReference AggregationKind BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator end MethodInvocation property MethodInvocation getAssociation BlockStatement IfStatement MethodInvocation ! end MemberReference property equals BlockStatement StatementExpression MethodInvocation end MemberReference AggregationKind setAggregation StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the aggregation to the association end MemberReference MemberReference handle execute	0
MethodDeclaration Modifier private ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode parseParamList FormalParameter BasicType int FormalParameter BasicType int closeToken FeatureNotSupportedException StatementExpression MethodInvocation MemberReference AssertAndAdvance IfStatement BinaryOperation == MemberReference curtok id MemberReference closeToken BlockStatement StatementExpression MethodInvocation advance ReturnStatement Literal null LocalVariableDeclaration ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode VariableDeclarator result ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode LocalVariableDeclaration BasicType boolean VariableDeclarator isParams Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator hasComma Literal false DoStatement BinaryOperation && MemberReference ! isParams MemberReference hasComma BlockStatement LocalVariableDeclaration ReferenceType ParamDeclNode VariableDeclarator node ClassCreator ReferenceType ParamDeclNode StatementExpression MethodInvocation result MemberReference node add StatementExpression Assignment MemberReference isParams Literal false = StatementExpression MethodInvocation Literal false parsePossibleAttributes IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID BlockStatement StatementExpression Assignment MemberReference node modifiers MemberReference Modifier |= StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Out BlockStatement StatementExpression Assignment MemberReference node modifiers MemberReference Modifier Out |= StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Params BlockStatement StatementExpression Assignment MemberReference isParams Literal true = StatementExpression Assignment MemberReference node modifiers MemberReference Modifier Params |= StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node type MethodInvocation parseType = IfStatement MemberReference isParams BlockStatement IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression Assignment MemberReference node name MethodInvocation strings MemberReference curtok data get = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasComma Literal false = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasComma Literal true = StatementExpression MethodInvocation MemberReference closeToken AssertAndAdvance ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object trans IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Transition MemberReference trans ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference trans	0
MethodDeclaration Modifier public final RecognitionException TokenStreamException StatementExpression MethodInvocation logical_and_expression BlockStatement DoStatement Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference OR BlockStatement StatementExpression MethodInvocation MemberReference OR match StatementExpression MethodInvocation logical_and_expression BlockStatement BreakStatement	1
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object o SynchronizedStatement MemberReference mutex LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation MemberReference o contains IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation list MemberReference o remove StatementExpression MethodInvocation set MemberReference o remove ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType pop LocalVariableDeclaration ReferenceType VariableDeclarator item SuperMethodInvocation pop IfStatement BinaryOperation || BinaryOperation == MethodInvocation size Literal 0 MethodInvocation ! MethodInvocation peek BlockStatement StatementExpression MethodInvocation Literal Literal false ReturnStatement MemberReference item	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement isStatic getFacade	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value getCoreHelper	0
MethodDeclaration Modifier public final Annotation Override removeFromDiagram IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression SuperMethodInvocation removeFromDiagram StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int getRowCount IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier public Annotation Deprecated structureChanged IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation treeModel structureChanged	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Object stereo StatementExpression MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference modelElement MemberReference stereo ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Element ClassReference ReferenceType Stereotype checkArgs LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference stereo StatementExpression Cast ReferenceType Element MemberReference modelElement StatementExpression MethodInvocation MemberReference modelElement MemberReference stereotype MethodDeclaration * Call the model event and ask it to an event * a stereotype has been This is a until we * the event that a * has been * @param * @param */ Modifier private FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation MemberReference modelElement MemberReference stereotype Literal null MemberReference REMOVE Literal "stereotype" Literal null StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the stereotype from the element MemberReference stereo MemberReference modelElement execute	0
MethodDeclaration Modifier public ReferenceType Object getPackage ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier final static protected ReferenceType String FormalParameter ReferenceType Object modelElement FormalParameter BasicType int iMajorVersion IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Attribute required" LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation && BinaryOperation < MemberReference iMajorVersion Literal 5 MethodInvocation ! Model getFacade BlockStatement ReturnStatement BinaryOperation + Literal "_" MemberReference ReturnStatement MemberReference	1
MethodDeclaration Modifier public setModelElementNamespace FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType VariableDeclarator facade MethodInvocation Model getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation facade MemberReference modelElement isANode MethodInvocation facade MemberReference modelElement isANodeInstance MethodInvocation facade MemberReference modelElement isAComponent MethodInvocation facade MemberReference modelElement isAComponentInstance BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting namespace of " MemberReference modelElement info StatementExpression SuperMethodInvocation MemberReference modelElement MemberReference namespace setModelElementNamespace	1
MethodDeclaration Modifier public addAttribute FormalParameter BasicType short modifiers FormalParameter ReferenceType String typeSpec FormalParameter ReferenceType String name FormalParameter ReferenceType String initializer FormalParameter ReferenceType String javadoc StatementExpression MethodInvocation MemberReference modifiers MemberReference typeSpec MemberReference name MemberReference initializer MemberReference javadoc Literal false addAttribute	0
MethodDeclaration Modifier private ReferenceType String getPackageName FormalParameter ReferenceType String name StatementExpression Assignment MemberReference name MethodInvocation MemberReference name = LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation name Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference lastDot Literal - 1 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation name Literal 0 MemberReference lastDot substring IfStatement MethodInvocation Character MethodInvocation MethodInvocation Literal 0 charAt MemberReference isUpperCase BlockStatement ReturnStatement MethodInvocation MemberReference getPackageName BlockStatement ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType listener FormalParameter ReferenceType Object FormalParameter ReferenceType String propertyNames IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType Class ClassReference MethodInvocation Cast ReferenceType Class MemberReference isAssignableFrom ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation MemberReference MemberReference listener MemberReference propertyNames MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Point LocalVariableDeclaration Modifier final BasicType int VariableDeclarator Literal 20 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Point VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Point LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation MemberReference x MemberReference getFigAt LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation MemberReference y MemberReference getFigAt LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation Math BinaryOperation / MethodInvocation MethodInvocation getWidth MemberReference getFigAt Literal 2 round Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation Math BinaryOperation / MethodInvocation MethodInvocation getHeight MemberReference getFigAt Literal 2 round Literal 1 LocalVariableDeclaration ReferenceType Point VariableDeclarator point Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator angle BinaryOperation * BinaryOperation / BinaryOperation * Literal 2 MemberReference Math PI MemberReference MemberReference i StatementExpression Assignment MemberReference point ClassCreator ReferenceType Point Cast BasicType int BinaryOperation + MemberReference cx BinaryOperation * MethodInvocation Math MemberReference angle cos MemberReference Cast BasicType int BinaryOperation + MemberReference cy BinaryOperation * MethodInvocation Math MemberReference angle sin MemberReference = StatementExpression MethodInvocation ret MemberReference point add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt BinaryOperation + Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt MethodInvocation MethodInvocation getHeight getNameFig add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt BinaryOperation + Cast ReferenceType FigLine MethodInvocation MemberReference getFigAt MethodInvocation MethodInvocation getHeight getNameFig add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private FormalParameter ReferenceType ModelElement action IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference action delete getUmlFactory	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e StatementExpression Assignment MemberReference model MethodInvocation e MethodInvocation trim getText = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got model = " MemberReference model debug	1
MethodDeclaration Modifier private StatementExpression MethodInvocation ClassCreator ReferenceType StatementExpression Assignment MemberReference topPanel ClassCreator ReferenceType = StatementExpression MethodInvocation topPanel ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator warning ClassCreator ReferenceType StatementExpression MethodInvocation warning ClassCreator ReferenceType BoxLayout MemberReference warning MemberReference BoxLayout LocalVariableDeclaration ReferenceType JLabel VariableDeclarator ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation MemberReference Component StatementExpression MethodInvocation warning MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator projectSettings ClassCreator ReferenceType StatementExpression MethodInvocation projectSettings ClassCreator ReferenceType StatementExpression MethodInvocation projectSettings MethodInvocation Translator Literal localize setText StatementExpression MethodInvocation projectSettings Literal null setIcon StatementExpression MethodInvocation projectSettings MemberReference Component StatementExpression MethodInvocation warning MemberReference projectSettings add StatementExpression MethodInvocation topPanel MemberReference warning MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator settings ClassCreator ReferenceType StatementExpression MethodInvocation settings ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference anchor MemberReference WEST = StatementExpression Assignment MemberReference Literal 0 = StatementExpression Assignment MemberReference gridx Literal 0 = StatementExpression Assignment MemberReference gridwidth Literal 1 = StatementExpression Assignment MemberReference Literal 1 = StatementExpression Assignment MemberReference insets ClassCreator ReferenceType Insets Literal 2 Literal 20 Literal 2 Literal 4 = LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference anchor MemberReference EAST = StatementExpression Assignment MemberReference fill MemberReference HORIZONTAL = StatementExpression Assignment MemberReference Literal 0 = StatementExpression Assignment MemberReference gridx Literal 1 = StatementExpression Assignment MemberReference gridwidth Literal 3 = StatementExpression Assignment MemberReference Literal 1 = StatementExpression Assignment MemberReference weightx Literal 1.0 = StatementExpression Assignment MemberReference insets ClassCreator ReferenceType Insets Literal 2 Literal 4 Literal 2 Literal 20 = StatementExpression Assignment MemberReference Literal 0 = StatementExpression Assignment MemberReference Literal 0 = StatementExpression MethodInvocation settings ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize MemberReference add LocalVariableDeclaration ReferenceType JTextField VariableDeclarator j ClassCreator ReferenceType JTextField StatementExpression Assignment MemberReference MemberReference j = StatementExpression MethodInvocation settings MemberReference MemberReference add StatementExpression Assignment MemberReference Literal 1 = StatementExpression Assignment MemberReference Literal 1 = StatementExpression MethodInvocation settings ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize MemberReference add LocalVariableDeclaration ReferenceType JTextField VariableDeclarator ClassCreator ReferenceType JTextField StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation settings MemberReference MemberReference add StatementExpression MethodInvocation topPanel MemberReference settings MemberReference CENTER add StatementExpression MethodInvocation MemberReference topPanel MemberReference add	0
MethodDeclaration Modifier private static ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade ReturnStatement MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateExpression ReturnStatement Literal ""	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType getRole ReturnStatement MethodInvocation group getRole	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isActive ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement MethodInvocation c isActive BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration BasicType double VariableDeclarator rx BinaryOperation / MemberReference Literal 2 LocalVariableDeclaration BasicType double VariableDeclarator ry BinaryOperation / MemberReference Literal 2 LocalVariableDeclaration BasicType double VariableDeclarator dx BinaryOperation - MemberReference anotherPt x BinaryOperation + MemberReference _x MemberReference rx LocalVariableDeclaration BasicType double VariableDeclarator dy BinaryOperation - MemberReference anotherPt y BinaryOperation + MemberReference _y MemberReference ry LocalVariableDeclaration BasicType double VariableDeclarator dd BinaryOperation + BinaryOperation * BinaryOperation * BinaryOperation * MemberReference ry MemberReference ry MemberReference dx MemberReference dx BinaryOperation * BinaryOperation * BinaryOperation * MemberReference rx MemberReference rx MemberReference dy MemberReference dy LocalVariableDeclaration BasicType double VariableDeclarator mu BinaryOperation / BinaryOperation * MemberReference rx MemberReference ry MethodInvocation Math MemberReference dd sqrt LocalVariableDeclaration ReferenceType Point VariableDeclarator res ClassCreator ReferenceType Point Cast BasicType int BinaryOperation + BinaryOperation + BinaryOperation * MemberReference mu MemberReference dx MemberReference _x MemberReference rx Cast BasicType int BinaryOperation + BinaryOperation + BinaryOperation * MemberReference mu MemberReference dy MemberReference _y MemberReference ry ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType Object StatementExpression MethodInvocation LOG Literal "new boolean expression" debug ReturnStatement MethodInvocation Model MethodInvocation Literal "" Literal ""	0
MethodDeclaration Modifier private BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Property FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc IfStatement BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type must be instance of IfStatement BinaryOperation instanceof MemberReference assoc ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType Association MemberReference assoc	0
MethodDeclaration Modifier public propertyChange FormalParameter Modifier final ReferenceType PropertyChangeEvent pve LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator src MethodInvocation pve getSource LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator pName MethodInvocation pve getPropertyName IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pve ReferenceType DeleteInstanceEvent BinaryOperation == MemberReference src MethodInvocation getOwner BlockStatement StatementExpression MethodInvocation removeFromDiagram ReturnStatement IfStatement BinaryOperation && MethodInvocation pve MethodInvocation Literal "supplierDependency" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation pve getOldValue isADependency getFacade BlockStatement ReturnStatement IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation MethodInvocation pve getNewValue equals BlockStatement TryStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator minSize MethodInvocation StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds StatementExpression MethodInvocation CatchClause CatchClauseParameter PropertyVetoException ex StatementExpression MethodInvocation LOG BinaryOperation + Literal "could not parse the text " Literal MemberReference ex error IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.TRUE MethodInvocation pve getNewValue equals BlockStatement IfStatement MethodInvocation ! isReadOnly BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src BlockStatement StatementExpression SuperMethodInvocation MemberReference pve propertyChange IfStatement MethodInvocation Model MethodInvocation MemberReference src isAUMLElement getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pve LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation MemberReference event modelChanged CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal method deleted MethodInvocation MemberReference event MemberReference e debug IfStatement BinaryOperation && BinaryOperation == MethodInvocation event getSource MemberReference owner Literal MethodInvocation MethodInvocation event getPropertyName equals "stereotype" BlockStatement StatementExpression MethodInvocation MemberReference event LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal method " Literal element " MethodInvocation MemberReference event MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Object t StatementExpression Assignment This MemberReference MemberReference t =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference o getTaggedValues getFacade IfStatement BinaryOperation != MemberReference i Literal null BlockStatement WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation && BinaryOperation && BinaryOperation || MethodInvocation MemberReference tag equals MethodInvocation MemberReference tag equals BinaryOperation != MemberReference value Literal null BinaryOperation > MethodInvocation value MethodInvocation length trim Literal 0 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal "Not a	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base StatementExpression MethodInvocation MemberReference base setNamespace StatementExpression MethodInvocation ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator node Literal null LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation ce getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType MemberReference gm StatementExpression Assignment MemberReference node MethodInvocation Model MethodInvocation MemberReference owner = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal is not a " Literal diagram model" ReturnStatement MemberReference node	0
MethodDeclaration Modifier public BasicType int getLength ReturnStatement MethodInvocation document getLength	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference TOP	0
MethodDeclaration Modifier public BasicType boolean isACompositeState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private FormalParameter ReferenceType Set TypeArgument ReferenceType Object listenerSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator listener MemberReference listenerSet BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator property MemberReference ArraySelector Literal 1 listener IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 listener removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 listener Cast ReferenceType String MemberReference property removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 listener Cast ReferenceType String MemberReference property removeModelEventListener getPump BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Internal error in removeAllElementListeners" StatementExpression MethodInvocation listeners MemberReference listenerSet removeAll	1
MethodDeclaration Modifier public clear StatementExpression SuperMethodInvocation clear StatementExpression MethodInvocation Literal MethodInvocation size StatementExpression MethodInvocation Literal Literal false	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType w IfStatement BinaryOperation instanceof MemberReference w ReferenceType BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null IfStatement BinaryOperation != MemberReference me Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference me getName getFacade = IfStatement Literal MethodInvocation MemberReference equals "" BlockStatement StatementExpression Assignment MemberReference SuperMethodInvocation = StatementExpression Cast ReferenceType MemberReference w StatementExpression Cast ReferenceType MemberReference w	0
MethodDeclaration ReferenceType MofClass getMofClass FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType MofClass VariableDeclarator metaTypes MethodInvocation getMetaClasses ForStatement EnhancedForControl VariableDeclaration ReferenceType MofClass VariableDeclarator mofClass MemberReference metaTypes BlockStatement IfStatement MethodInvocation MethodInvocation mofClass getName equals BlockStatement ReturnStatement MemberReference mofClass ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getAssociation getFacade addElement	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModel getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent MethodInvocation Model MethodInvocation getMetaTypes getAllModelElementsOfKind getModelManagementHelper ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element getFacade	0
MethodDeclaration Modifier public Annotation Override setValueAt FormalParameter ReferenceType Object FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator newValueAction Cast ReferenceType MemberReference ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i ArraySelector Literal 0 MethodInvocation MethodInvocation newValueAction equals elements BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ArraySelector Literal 1 elements MethodInvocation newValueAction getCurrentShortcut = StatementExpression MethodInvocation repaint BreakStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference actions length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation getKey MethodInvocation MethodInvocation newValueAction getKey equals actions BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation newValueAction getCurrentShortcut actions BreakStatement BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements MemberReference =	1
MethodDeclaration Modifier public BasicType boolean StatementExpression MethodInvocation MethodInvocation MemberReference getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference handle ReturnStatement BinaryOperation == MethodInvocation m MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean ReturnStatement MethodInvocation npSettings	0
MethodDeclaration Modifier public Annotation Override ReferenceType ListSet getOffenders LocalVariableDeclaration Modifier final ReferenceType ListSet VariableDeclarator offenders SuperMethodInvocation getOffenders AssertStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation <= MethodInvocation offenders size Literal 0 MethodInvocation Model MethodInvocation MethodInvocation offenders Literal 0 get isAUMLElement getFacade BinaryOperation instanceof MethodInvocation offenders Literal 0 get ReferenceType Fig BinaryOperation instanceof MethodInvocation offenders Literal 0 get ReferenceType Diagram ReturnStatement MemberReference offenders	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference	0
MethodDeclaration Modifier private final FormalParameter ReferenceType Object modelElement Exception IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Attribute required" StatementExpression Assignment MemberReference objDocBlock ClassCreator ReferenceType DocBlock = StatementExpression Assignment MemberReference objModelElement MemberReference modelElement = StatementExpression Assignment MemberReference iDocBlockType MemberReference = StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_STATIC enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_VAR enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_AUTHOR disableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_VERSION disableTag StatementExpression MethodInvocation objDocBlock BinaryOperation + Literal "Short of attribute " MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade setDefaultDescription StatementExpression MethodInvocation objDocBlock MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade setTags LocalVariableDeclaration ReferenceType Object VariableDeclarator objVarType MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement BinaryOperation != MemberReference objVarType Literal null BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_VAR MethodInvocation Model MethodInvocation MemberReference objVarType getName getFacade setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPublic getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "public" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isProtected getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "protected" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPrivate getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "private" setTag	1
MethodDeclaration Modifier public BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node getFacade BlockStatement ReturnStatement Literal true ReturnStatement SuperMethodInvocation MemberReference node canAddNode	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier static FormalParameter ReferenceType Collection ret LocalVariableDeclaration ReferenceType Collection VariableDeclarator ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator state MemberReference ret BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference state isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference state getFacade BlockStatement StatementExpression MethodInvocation MemberReference state add StatementExpression MethodInvocation ret MemberReference removeAll	0
MethodDeclaration Modifier public act FormalParameter ReferenceType File f IfStatement MethodInvocation ! f isDirectory BlockStatement StatementExpression MethodInvocation ret MethodInvocation f MethodInvocation MemberReference prefix substring toString add	0
MethodDeclaration unregister FormalParameter ReferenceType T item FormalParameter ReferenceType String key FormalParameter ReferenceType String subkeys LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T VariableDeclarator entry MethodInvocation registry MemberReference key get IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation != MemberReference subkeys Literal null BinaryOperation > MemberReference subkeys length Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference subkeys length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference entry MemberReference ArraySelector MemberReference i subkeys MemberReference item BlockStatement IfStatement BinaryOperation == MemberReference item Literal null BlockStatement StatementExpression MethodInvocation registry MemberReference key remove BlockStatement StatementExpression MethodInvocation MemberReference entry Literal "" MemberReference item	1
MethodDeclaration Modifier public FormalParameter ReferenceType event StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference Literal false Literal false	0
MethodDeclaration Modifier private StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAStereotype getFacade	0
MethodDeclaration Modifier public insertString FormalParameter BasicType int offset FormalParameter ReferenceType String str FormalParameter ReferenceType AttributeSet a BadLocationException TryStatement StatementExpression MethodInvocation Integer MemberReference str parseInt StatementExpression SuperMethodInvocation MemberReference offset MemberReference str MemberReference a insertString CatchClause CatchClauseParameter NumberFormatException e	1
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation == MethodInvocation event getSource MemberReference theComboBox BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator item MethodInvocation theComboBox getSelectedItem StatementExpression MethodInvocation MemberReference item setButtonEnabled	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getComments getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null BinaryOperation != MethodInvocation MethodInvocation ProjectManager getManager	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement Cast ReferenceType MethodInvocation table getModel	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAStateVertex getFacade MethodInvocation ! Model MethodInvocation MemberReference element getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference element getName getFacade Literal null	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType Literal has no	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object ok StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference ok MethodInvocation Model MethodInvocation MemberReference handle getFacade createCommand	1
MethodDeclaration Modifier public Annotation Override ReferenceType Collection IfStatement BinaryOperation == MemberReference profilePackages Literal null BlockStatement ReturnStatement MethodInvocation Collections emptySet BlockStatement ReturnStatement MethodInvocation Collections MemberReference profilePackages	0
MethodDeclaration ReferenceType getListener ReturnStatement MemberReference listener	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Fig f StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting the internal fig to " MemberReference f info StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation MethodInvocation Literal true	1
MethodDeclaration resolve IfStatement MethodInvocation unresolvedItems isEmpty BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType Collection TypeArgument ReferenceType T VariableDeclarator items MethodInvocation Collections StatementExpression MethodInvocation MemberReference items resolve	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final BasicType int lower FormalParameter Modifier final BasicType int upper LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle StatementExpression Cast ReferenceType MemberReference handle StatementExpression Cast ReferenceType MemberReference handle StatementExpression Cast ReferenceType MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the multiplicity to the element MemberReference lower MemberReference upper MemberReference handle execute	1
MethodDeclaration Modifier public StatementExpression Assignment MemberReference Literal "" = StatementExpression Assignment MemberReference Literal 0 =	0
MethodDeclaration Modifier public BasicType boolean containsNode FormalParameter ReferenceType Object node ReturnStatement MethodInvocation nodes MemberReference node contains	0
MethodDeclaration Modifier public seek FormalParameter BasicType int index StatementExpression Assignment MemberReference p MemberReference index =	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier synchronized protected ReferenceType String FormalParameter ReferenceType Object self FormalParameter ReferenceType String expr FormalParameter ReferenceType String sep StatementExpression MethodInvocation Literal MemberReference self put LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType List VariableDeclarator values MethodInvocation MemberReference MemberReference expr eval StatementExpression MethodInvocation Literal 0 setLength LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation values iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation MethodInvocation iter next IfStatement Literal ! MethodInvocation MemberReference v equals "" BlockStatement StatementExpression MethodInvocation MemberReference v append IfStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation MemberReference sep append ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation setEnabled	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isAUseCase FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement MethodInvocation Model MethodInvocation MemberReference base isANamespace getFacade	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade setSelected	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private ReferenceType String generateParameter FormalParameter ReferenceType Object param LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 20 LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation MethodInvocation MemberReference param getType getFacade StatementExpression MethodInvocation sb MethodInvocation MemberReference param append LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation MemberReference param IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal ' ' append MemberReference append StatementExpression MethodInvocation sb MethodInvocation MemberReference type generateNameWithPkgSelection append StatementExpression MethodInvocation sb Literal ' ' append StatementExpression MethodInvocation sb MethodInvocation MemberReference param generateAttributeParameterModifier append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation MemberReference param getName getFacade append IfStatement BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MethodInvocation MemberReference param getDefaultValue getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator defval MethodInvocation MethodInvocation MemberReference getBody MethodInvocation toString MethodInvocation trim getFacade IfStatement BinaryOperation > MethodInvocation defval length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference defval append Literal " = " append LocalVariableDeclaration BasicType boolean VariableDeclarator predecl MethodInvocation ! MemberReference param checkIncludeNeeded4Element StatementExpression MethodInvocation MemberReference type MemberReference predecl addDependency ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Configuration MemberReference DiagramAppearance getString IfStatement MethodInvocation Literal "" equals BlockStatement LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation StatementExpression Assignment MemberReference MethodInvocation f getName = StatementExpression MethodInvocation Configuration MemberReference DiagramAppearance MethodInvocation f getName setString StatementExpression MethodInvocation Configuration MemberReference DiagramAppearance MethodInvocation f getSize setInteger ReturnStatement MemberReference	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object root ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Stereotype buildStereotype FormalParameter ReferenceType Object FormalParameter ReferenceType Object FormalParameter ReferenceType Object theNamespaceObject IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference theNamespaceObject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "one of the arguments is MemberReference Literal " MemberReference Literal " MemberReference theNamespaceObject LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference theNamespaceObject LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation MemberReference text buildStereotype StatementExpression MethodInvocation stereo MethodInvocation MethodInvocation modelImpl MethodInvocation MemberReference me getName getMetaTypes add getBaseClass LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator Cast ReferenceType Stereotype MethodInvocation MemberReference ns MemberReference stereo getStereotype IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation me MethodInvocation MemberReference add getStereotype StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference stereo delete getUmlFactory ReturnStatement MemberReference StatementExpression MethodInvocation stereo MemberReference ns setNamespace StatementExpression MethodInvocation me MethodInvocation MemberReference stereo add getStereotype ReturnStatement MemberReference stereo	1
MethodDeclaration Modifier public BasicType int FormalParameter BasicType char key FormalParameter ReferenceType model LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator startAtIndex Literal 0 IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference searchString Literal null BinaryOperation == MemberReference key MemberReference KeyEvent VK_BACK_SPACE BinaryOperation > MethodInvocation searchString length Literal 0 BlockStatement StatementExpression Assignment MemberReference searchString MethodInvocation searchString Literal 0 BinaryOperation - MethodInvocation searchString length Literal 1 substring = BlockStatement IfStatement BinaryOperation < BinaryOperation + MemberReference MemberReference MemberReference now BlockStatement StatementExpression Assignment MemberReference searchString MethodInvocation Character MemberReference key toString = BlockStatement StatementExpression Assignment MemberReference searchString BinaryOperation + MemberReference searchString MemberReference key = StatementExpression Assignment MemberReference startAtIndex MethodInvocation getSelectedIndex = IfStatement BinaryOperation < MemberReference startAtIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference startAtIndex Literal 0 = LocalVariableDeclaration ReferenceType String VariableDeclarator umlElemName Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation searchString toLowerCase LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference startAtIndex VariableDeclarator length MethodInvocation model getSize BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation model MemberReference i getElementAt IfStatement BinaryOperation instanceof MemberReference ReferenceType UMLListCellRenderer2 BlockStatement StatementExpression Assignment MemberReference umlElemName Cast ReferenceType UMLListCellRenderer2 MemberReference = BlockStatement StatementExpression Assignment MemberReference umlElemName MethodInvocation value toString = IfStatement MethodInvocation umlElemName MethodInvocation MemberReference startsWith toLowerCase BlockStatement StatementExpression Assignment MemberReference index MemberReference i = BreakStatement StatementExpression Assignment MemberReference MemberReference now = ReturnStatement MemberReference index	1
MethodDeclaration Modifier public Annotation Override removeFromDiagram ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation getFigs BlockStatement StatementExpression MethodInvocation fig removeFromDiagram StatementExpression SuperMethodInvocation removeFromDiagram	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType DataType LocalVariableDeclaration ReferenceType DataType VariableDeclarator dataType MethodInvocation MethodInvocation getDataType MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference dataType ReturnStatement MemberReference dataType	0
MethodDeclaration Modifier public BasicType boolean isSingleton FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object ReturnStatement ClassCreator ReferenceType MemberReference modelElement MemberReference	0
MethodDeclaration Modifier private BasicType boolean isSystemClipBoardEmpty TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator text MethodInvocation Toolkit MethodInvocation MethodInvocation Literal null getContents MethodInvocation MemberReference DataFlavor stringFlavor getTransferData getDefaultToolkit ReturnStatement BinaryOperation == MemberReference text Literal null CatchClause CatchClauseParameter IOException CatchClause CatchClauseParameter UnsupportedFlavorException ReturnStatement Literal true	1
MethodDeclaration Modifier public synchronized BasicType boolean contains FormalParameter ReferenceType Object member IfStatement BinaryOperation == MemberReference MemberReference member BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference model MemberReference member BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference profileConfiguration MemberReference member BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation MemberReference member contains	0
MethodDeclaration Modifier public ReferenceType List getEnumerationLiterals FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation ! MemberReference handle isAEnumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle ReturnStatement Cast ReferenceType Enumeration MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1 Literal null BinaryOperation != MethodInvocation step1 getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean isReadOnly FormalParameter ReferenceType Object element ReturnStatement Literal false	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation enumeration MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType BlockStatement StatementExpression MethodInvocation enumeration Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference owner StatementExpression MethodInvocation MethodInvocation MemberReference enumeration add	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private verifyAttributeNames FormalParameter ReferenceType RefObject metaobject FormalParameter ReferenceType String attributes IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference metaobject Literal null BinaryOperation == MemberReference attributes Literal null BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference metaobject ReferenceType MofClass BlockStatement StatementExpression Assignment MemberReference metaobject MethodInvocation metaobject = IfStatement BinaryOperation instanceof MemberReference metaobject ReferenceType MofClass BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be MofClass or instance of LocalVariableDeclaration ReferenceType MofClass VariableDeclarator metaclass Cast ReferenceType MofClass MemberReference metaobject LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator names MethodInvocation MethodInvocation metaclass getName get IfStatement BinaryOperation == MemberReference names Literal null BlockStatement StatementExpression Assignment MemberReference names MethodInvocation Collections emptySet = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator attribute MemberReference attributes BlockStatement IfStatement BinaryOperation && MethodInvocation ! names MemberReference attribute contains Literal ! MethodInvocation MemberReference attribute equals "remove" BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Property '" MemberReference attribute Literal "' for class '" MethodInvocation metaclass getName Literal "' doesn't exist in metamodel" error	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object role ReturnStatement MethodInvocation impl MemberReference role	0
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType VariableDeclarator tm Cast ReferenceType MethodInvocation combo getSelectedItem StatementExpression Assignment MemberReference MemberReference tm = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation tree Literal false setVisible BlockStatement StatementExpression MethodInvocation LOG Literal setting tree model" debug StatementExpression MethodInvocation MemberReference root setRoot StatementExpression MethodInvocation tree Literal true StatementExpression MethodInvocation tree MemberReference setModel StatementExpression MethodInvocation tree Literal true setVisible	0
MethodDeclaration Modifier public FormalParameter ReferenceType l StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference l add StatementExpression MethodInvocation LOG Literal debug	0
MethodDeclaration Modifier private FormalParameter ReferenceType UmlPackage source FormalParameter ReferenceType UmlPackage target StatementExpression Cast ReferenceType MethodInvocation modelImpl getCoreFactory	0
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MemberReference parent Literal false	0
MethodDeclaration Modifier public ReferenceType String getSystemId ReturnStatement This MemberReference systemId	0
MethodDeclaration Modifier private FormalParameter ReferenceType FormalParameter ReferenceType String namespace ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator mn MemberReference BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 Identifier MemberReference mn MemberReference namespace	0
MethodDeclaration Modifier public ReferenceType Node ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType Fig MemberReference target = ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference target ReferenceType Diagram MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BinaryOperation && BinaryOperation instanceof MemberReference target ReferenceType Critic BinaryOperation != MethodInvocation MemberReference target findPanelFor Literal null	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set	0
MethodDeclaration ReferenceType Object FormalParameter ReferenceType String paramType FormalParameter ReferenceType String cPackage LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null IfStatement MethodInvocation paramType Literal "." contains BlockStatement ReturnStatement MethodInvocation ele BinaryOperation + MemberReference MemberReference paramType get BlockStatement StatementExpression Assignment MemberReference MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference cPackage Literal "." MemberReference paramType get = IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator u MemberReference cu BlockStatement StatementExpression Assignment MemberReference MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MethodInvocation MemberReference Identifier MemberReference length buildToParent Literal "." MemberReference paramType get = IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType UmlChangeEvent event LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation getOwner AssertStatement BinaryOperation != MemberReference owner Literal null TryStatement IfStatement BinaryOperation != MethodInvocation event getOldValue Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation event getOldValue IfStatement BinaryOperation != MethodInvocation event getNewValue Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation event getNewValue Literal "name" CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal method deleted element " MemberReference e debug	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation toString setText StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration addInterface FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String typeParameters FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt IfStatement BinaryOperation && BinaryOperation != MemberReference typeParameters Literal null BinaryOperation > MethodInvocation typeParameters size Literal 0 BlockStatement StatementExpression MethodInvocation Literal "type parameters not supported on MemberReference name logError LocalVariableDeclaration ReferenceType Object VariableDeclarator mInterface MethodInvocation MethodInvocation Model MethodInvocation getCoreFactory MemberReference name MemberReference modifiers MemberReference javadoc MemberReference typeParameters IfStatement BinaryOperation == MethodInvocation getLevel Literal 0 BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator interfaceName MemberReference interfaces BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parentInterface Literal null TryStatement StatementExpression Assignment MemberReference parentInterface MethodInvocation MethodInvocation MethodInvocation MemberReference interfaceName getClassifierName Literal true MemberReference javaProfile get MemberReference interfaceName getContext = StatementExpression MethodInvocation MemberReference currentPackage MemberReference parentInterface MemberReference mInterface CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference interfaceName Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeller.java: " Literal "forced creation of unknown interface " MemberReference interfaceName info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference interfaceName getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference interfaceName getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName Literal false getPackage MemberReference model StatementExpression Assignment MemberReference parentInterface MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference classifierName lookupIn getFacade = IfStatement BinaryOperation == MemberReference parentInterface Literal null BlockStatement StatementExpression Assignment MemberReference parentInterface MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage getCoreFactory = StatementExpression MethodInvocation newElements MemberReference parentInterface add StatementExpression MethodInvocation MemberReference currentPackage MemberReference parentInterface MemberReference mInterface BlockStatement StatementExpression MethodInvocation MemberReference interfaceName Literal "a generalization" warnClassifierNotFound	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigConcurrentRegion VariableDeclarator figClone Cast ReferenceType FigConcurrentRegion SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MethodInvocation MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType FieldDeclaration Modifier private final ReferenceType VariableDeclarator key MemberReference Notation MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference showem StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference ! showem StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Component VariableDeclarator component MethodInvocation getComponents BlockStatement StatementExpression MethodInvocation component MemberReference setEnabled	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source IfStatement MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference m TernaryExpression MethodInvocation source isSelected MethodInvocation Model MethodInvocation getClassifier MethodInvocation Model MethodInvocation getInstance setTargetScope getCoreHelper	0
MethodDeclaration Modifier final protected FormalParameter ReferenceType listener ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator lis MemberReference listeners BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator property MemberReference ArraySelector Literal 1 lis IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference ArraySelector Literal 0 lis removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference ArraySelector Literal 0 lis Cast ReferenceType String MemberReference property removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference ArraySelector Literal 0 lis Cast ReferenceType String MemberReference property removeModelEventListener getPump BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Internal error in removeAllElementListeners" StatementExpression MethodInvocation listeners clear	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter BasicType int arg0 ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MethodInvocation MemberReference node contains getNodes BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement ReturnStatement Literal true ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List ReturnStatement MemberReference models	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType Profile FormalParameter ReferenceType String fileName FormalParameter ReferenceType ProfileManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator MethodInvocation BlockStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType UserDefinedProfile BlockStatement LocalVariableDeclaration ReferenceType UserDefinedProfile VariableDeclarator Cast ReferenceType UserDefinedProfile MemberReference IfStatement BinaryOperation && BinaryOperation != MethodInvocation Literal null MethodInvocation fileName MethodInvocation MethodInvocation getName equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier private FormalParameter ReferenceType Rectangle r StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBigPort StatementExpression MethodInvocation MethodInvocation Literal false setFilled StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference r setBounds	1
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference setEnabled ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Component VariableDeclarator component MethodInvocation getComponents BlockStatement StatementExpression MethodInvocation component MemberReference setEnabled	1
MethodDeclaration Modifier public remove FormalParameter ReferenceType object StatementExpression MethodInvocation objects MemberReference object remove	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public final FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference LSQUARE = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '[' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private FormalParameter ReferenceType String fileName FormalParameter ReferenceType StringBuffer FormalParameter ReferenceType ProfileManager IOException LocalVariableDeclaration ReferenceType File VariableDeclarator profilesDirectory MethodInvocation MemberReference LocalVariableDeclaration ReferenceType File VariableDeclarator profileFile ClassCreator ReferenceType File MemberReference profilesDirectory MemberReference fileName LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator writer ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference profileFile MethodInvocation getEncoding StatementExpression MethodInvocation writer MethodInvocation toString write StatementExpression MethodInvocation writer close StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Wrote user defined profile \"" MemberReference profileFile Literal "\", with size " MethodInvocation length Literal "." info IfStatement MethodInvocation MemberReference BlockStatement StatementExpression MethodInvocation refreshRegisteredProfiles BlockStatement StatementExpression MethodInvocation MethodInvocation profilesDirectory getAbsolutePath	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dm computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier private FormalParameter ReferenceType Project StatementExpression MethodInvocation LOG Literal info StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference info StatementExpression Assignment MemberReference project MemberReference = StatementExpression Assignment MemberReference ps MethodInvocation project getProjectSettings = StatementExpression Assignment MemberReference MethodInvocation ps getDefaultDiagramSettings = StatementExpression Assignment MemberReference MethodInvocation ps =	1
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration Modifier final ReferenceType Iterator TypeArgument ReferenceType Command VariableDeclarator it MethodInvocation commands iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType Command VariableDeclarator command MethodInvocation it next IfStatement MethodInvocation ! command BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String getAlias FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object edge LocalVariableDeclaration ReferenceType Collection VariableDeclarator Literal null IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade MethodInvocation Model MethodInvocation MemberReference edge isALink getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade = IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference edge getFacade MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference edge getFacade addAll StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade addAll IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType ArrayList = LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference edge getGeneral getFacade StatementExpression MethodInvocation MemberReference parent add StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference parent getChildren getFacade addAll IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation iter next IfStatement BinaryOperation != MemberReference me Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference me MethodInvocation Model MethodInvocation MemberReference me getType getFacade = IfStatement BinaryOperation != MemberReference me Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 BlockStatement StatementExpression Assignment MemberReference name Literal = LocalVariableDeclaration ReferenceType Action VariableDeclarator action ClassCreator ReferenceType BinaryOperation + BinaryOperation + MethodInvocation Literal Literal ": " MemberReference name MemberReference me StatementExpression This MethodInvocation MemberReference action add	1
MethodDeclaration Modifier public FormalParameter BasicType int hint StatementExpression Assignment MemberReference MemberReference hint =	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object ReturnStatement MemberReference theRootModel	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getFacade	0
MethodDeclaration Modifier private FeatureNotSupportedException LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator interior MethodInvocation ParseExpression StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance LocalVariableDeclaration BasicType int VariableDeclarator rightTok MemberReference curtok id IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference interior ReferenceType IType BinaryOperation == MemberReference rightTok MemberReference TokenID Semi BinaryOperation == MemberReference rightTok MemberReference TokenID RParen BinaryOperation == MemberReference rightTok MemberReference TokenID RCurly BinaryOperation == MemberReference rightTok MemberReference TokenID RBracket BinaryOperation == MemberReference rightTok MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MemberReference interior push StatementExpression MethodInvocation ParseContinuingPrimary BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator pe ClassCreator ReferenceType StatementExpression MethodInvocation exprStack MemberReference pe push StatementExpression MethodInvocation ParseExpressionSegment LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator peek MethodInvocation exprStack peek IfStatement BinaryOperation || BinaryOperation instanceof MemberReference peek ReferenceType PrimaryExpression BinaryOperation instanceof MemberReference peek ReferenceType UnaryExpression BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator castNode ClassCreator ReferenceType StatementExpression Assignment MemberReference castNode Type Cast ReferenceType IType MemberReference interior = StatementExpression Assignment MemberReference castNode MethodInvocation exprStack pop = StatementExpression MethodInvocation exprStack pop StatementExpression MethodInvocation exprStack MemberReference castNode push BlockStatement StatementExpression Assignment MemberReference pe Expression MemberReference interior = StatementExpression MethodInvocation ParseContinuingPrimary	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig ReturnStatement ClassCreator ReferenceType FigRect MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier private static traverseDir FormalParameter ReferenceType File dir FormalParameter ReferenceType FileAction action IOException IfStatement MethodInvocation dir exists BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation dir listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isDirectory files BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i files MemberReference action traverseDir BlockStatement StatementExpression MethodInvocation action MemberReference ArraySelector MemberReference i files act StatementExpression MethodInvocation action MemberReference dir act	1
MethodDeclaration Modifier public start LocalVariableDeclaration ReferenceType Thread VariableDeclarator t MethodInvocation get IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression MethodInvocation t start	0
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier private ReferenceType String generateArtifactImports FormalParameter ReferenceType Object artifact LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ret ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference artifact getNamespace getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation Model MethodInvocation MemberReference artifact getClientDependencies getFacade BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isJavaImport Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference o getStereotypes getFacade BlockStatement IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade equals "javaImport" BlockStatement StatementExpression Assignment MemberReference isJavaImport Literal true = BreakStatement IfStatement MemberReference isJavaImport BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation Model MethodInvocation MemberReference o getSuppliers getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference elem getNamespace getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference ns Literal null MethodInvocation ! ns MemberReference equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference ns getPackageName StatementExpression MethodInvocation ret Literal "import " append IfStatement BinaryOperation && BinaryOperation != MemberReference packageName Literal null BinaryOperation > MethodInvocation packageName length Literal 0 BlockStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference ns getPackageName append StatementExpression MethodInvocation ret Literal '.' append StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference elem getName getFacade append IfStatement MethodInvocation Model MethodInvocation MemberReference elem isAPackage getFacade BlockStatement StatementExpression MethodInvocation ret Literal append StatementExpression MethodInvocation ret Literal ";" append StatementExpression MethodInvocation ret MemberReference LINE_SEPARATOR append StatementExpression Assignment MemberReference found Literal true = IfStatement MemberReference found BlockStatement StatementExpression MethodInvocation ret MemberReference LINE_SEPARATOR append ReturnStatement MethodInvocation ret toString	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal " MethodInvocation getName	0
MethodDeclaration Modifier private update LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator newText MethodInvocation model getLanguage IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation MemberReference newText setText	1
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType listener StatementExpression MethodInvocation MemberReference listener add	0
MethodDeclaration Modifier protected IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade IfStatement BinaryOperation == MemberReference c Literal null BlockStatement StatementExpression MethodInvocation condition Literal "" setText BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expr MethodInvocation Model MethodInvocation MemberReference c getBody getFacade IfStatement BinaryOperation == MemberReference expr Literal null BlockStatement StatementExpression MethodInvocation condition Literal "" setText BlockStatement StatementExpression MethodInvocation condition Cast ReferenceType String MemberReference expr setText StatementExpression MethodInvocation fg StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator left MemberReference val StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation node LocalVariableDeclaration ReferenceType Object VariableDeclarator right MemberReference val StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference left Literal null BinaryOperation != MemberReference op Literal null BinaryOperation != MemberReference right Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation / MethodInvocation MemberReference left MemberReference node MethodInvocation MemberReference right MemberReference node = IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation * MethodInvocation MemberReference left MemberReference node MethodInvocation MemberReference right MemberReference node = BlockStatement StatementExpression MethodInvocation MemberReference node error BlockStatement StatementExpression MethodInvocation MemberReference node error StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier public static ReferenceType getStateMachinesFactory ReturnStatement MethodInvocation impl getStateMachinesFactory	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Project project FormalParameter ReferenceType InputSource inputSource OpenException TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator parser ClassCreator ReferenceType StatementExpression MethodInvocation parser MemberReference inputSource parse LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Profile VariableDeclarator profiles MethodInvocation parser LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator unresolved MethodInvocation parser IfStatement MethodInvocation ! unresolved isEmpty BlockStatement StatementExpression MethodInvocation profiles MethodInvocation MemberReference unresolved addAll LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator pc ClassCreator ReferenceType ProfileConfiguration MemberReference project MemberReference profiles StatementExpression MethodInvocation project MemberReference pc CatchClause CatchClauseParameter Exception e IfStatement BinaryOperation instanceof MemberReference e ReferenceType OpenException BlockStatement ThrowStatement Cast ReferenceType OpenException MemberReference e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	1
MethodDeclaration Modifier public final setSelected FormalParameter BasicType boolean selected StatementExpression Assignment This MemberReference value MemberReference selected =	0
MethodDeclaration Modifier protected ReferenceType JLabel ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object child FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MemberReference child MemberReference parent	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType Project getProject ReturnStatement MethodInvocation This getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object operation IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference operation Literal null BinaryOperation instanceof MemberReference operation ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference operation	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind IfStatement BinaryOperation instanceof MemberReference kind ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement ReturnStatement MethodInvocation MemberReference kind equals CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean setName FormalParameter ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment This MemberReference sName MethodInvocation trim = StatementExpression Assignment This MemberReference Literal null = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade addAll ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType int getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object type FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference type ReferenceType Class BinaryOperation instanceof MemberReference ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type and must be instances of ReturnStatement Cast ReferenceType Class MemberReference type	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object transition FormalParameter ReferenceType Object event StatementExpression MethodInvocation impl MemberReference transition MemberReference event	0
MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation e isPopupTrigger BlockStatement LocalVariableDeclaration ReferenceType JPopupMenu VariableDeclarator popup ClassCreator ReferenceType JPopupMenu ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator action MemberReference actions BlockStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression MethodInvocation popup Cast ReferenceType Action MemberReference action add IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add IfStatement BinaryOperation > MethodInvocation popup getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation popup This MethodInvocation e getX MethodInvocation e getY show StatementExpression MethodInvocation e consume	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getOwner AssertStatement BinaryOperation != MemberReference state Literal null IfStatement BinaryOperation == MemberReference state Literal null BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation internal MethodInvocation MethodInvocation getOwner MethodInvocation toString setText StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getInterface getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getClassifier ReturnStatement ClassReference ReferenceType Classifier	0
MethodDeclaration Modifier public ReferenceType SuffixFilter LocalVariableDeclaration ReferenceType SuffixFilter VariableDeclarator result ArrayInitializer ClassCreator ReferenceType SuffixFilter ArrayCreator ReferenceType String ArrayInitializer Literal "class" Literal "jar" Literal files" ClassCreator ReferenceType SuffixFilter Literal "class" Literal class files" ClassCreator ReferenceType SuffixFilter Literal "jar" Literal JAR files" ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier static FormalParameter ReferenceType FigEdge fe FormalParameter BasicType int pct FormalParameter BasicType int delta FormalParameter BasicType int angle FormalParameter BasicType int offset FormalParameter ReferenceType Color color IfStatement Literal false BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigCircle Literal 0 Literal 0 Literal 5 Literal 5 MemberReference color MemberReference Color red = StatementExpression MethodInvocation fe MemberReference f ClassCreator ReferenceType MemberReference fe MemberReference f MemberReference pct MemberReference delta MemberReference angle Literal 0 StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigRect Literal 0 Literal 0 Literal 100 Literal 20 MemberReference color MemberReference Color red = StatementExpression MethodInvocation f Literal false setFilled StatementExpression MethodInvocation fe MemberReference f ClassCreator ReferenceType MemberReference fe MemberReference f MemberReference pct MemberReference delta MemberReference angle MemberReference offset StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigCircle Literal 0 Literal 0 Literal 5 Literal 5 MemberReference color MemberReference Color blue = StatementExpression MethodInvocation fe MemberReference f ClassCreator ReferenceType MemberReference fe MemberReference f MemberReference pct MemberReference delta MemberReference angle MemberReference offset	1
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator listeners ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal "condition" Literal "remove" add StatementExpression MethodInvocation MemberReference listeners updateElementListeners	1
MethodDeclaration Modifier public FormalParameter ReferenceType l StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference l add StatementExpression MethodInvocation LOG Literal debug	0
MethodDeclaration Modifier public static ReferenceType Namespace parse FormalParameter ReferenceType String fqn FormalParameter ReferenceType String token LocalVariableDeclaration ReferenceType String VariableDeclarator MemberReference fqn LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator ClassCreator ReferenceType StringNamespace MemberReference token LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation MemberReference token indexOf WhileStatement BinaryOperation > MemberReference i Literal - 1 BlockStatement StatementExpression MethodInvocation MethodInvocation Literal 0 MemberReference i substring StatementExpression Assignment MemberReference MethodInvocation BinaryOperation + MemberReference i MethodInvocation token length substring = StatementExpression Assignment MemberReference i MethodInvocation MemberReference token indexOf = IfStatement BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isAFinalState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement FormalParameter ReferenceType Object cls1 IfStatement BinaryOperation instanceof MemberReference cls1 ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge Cast ReferenceType GeneralizableElement MemberReference cls1 LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator MethodInvocation MemberReference ge getSupertypes DoStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement ForStatement EnhancedForControl VariableDeclaration ReferenceType GeneralizableElement VariableDeclarator element MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference element getSupertypes addAll StatementExpression MethodInvocation result MemberReference addAll StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation MemberReference result removeAll CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object getPseudostateKind ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Attribute BinaryOperation != Cast ReferenceType Attribute MemberReference handle Literal null BlockStatement ReturnStatement Cast ReferenceType Attribute MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement Cast ReferenceType Feature MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation MethodInvocation isFilled	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getExtension ReturnStatement Literal "xml"	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The source of a edge cannot be null" IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The source of the CommentEdge cannot be a " MethodInvocation MethodInvocation getName getClass StatementExpression Assignment This MemberReference source MemberReference =	0
MethodDeclaration Modifier protected removeAll FormalParameter ReferenceType Collection col LocalVariableDeclaration BasicType int VariableDeclarator first Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator last Literal - 1 StatementExpression Assignment MemberReference Literal false = ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference col BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference o StatementExpression MethodInvocation MemberReference o removeElement IfStatement BinaryOperation == MemberReference first Literal - 1 BlockStatement StatementExpression Assignment MemberReference first MemberReference index = StatementExpression Assignment MemberReference last MemberReference index = BlockStatement IfStatement BinaryOperation != MemberReference index BinaryOperation + MemberReference last Literal 1 BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation This MemberReference first MemberReference last StatementExpression Assignment MemberReference Literal false = StatementExpression Assignment MemberReference first MemberReference index = StatementExpression Assignment MemberReference last MemberReference index = BlockStatement StatementExpression MemberReference ++ last StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object message FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference message MemberReference	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier private BasicType int getEmptyLanguage FormalParameter ReferenceType String tabValues LocalVariableDeclaration BasicType int VariableDeclarator num Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation && BinaryOperation < MemberReference i MemberReference tabValues length BinaryOperation == MemberReference num Literal - 1 Assignment MemberReference i Literal 2 += BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "" equals tabValues BlockStatement StatementExpression Assignment MemberReference num BinaryOperation / BinaryOperation - MemberReference i Literal 1 Literal 2 = ReturnStatement MemberReference num	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getOwner getFacade Literal null BlockStatement StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getOwner getFacade add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement IfStatement BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation ClassCreator ReferenceType Rectangle BinaryOperation - MethodInvocation me getX Literal 2 BinaryOperation - MethodInvocation me getY Literal 2 Literal 4 Literal 4 IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference f IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o This MethodInvocation getFigs BlockStatement StatementExpression Assignment MemberReference f Cast ReferenceType Fig MemberReference o = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference f ReferenceType BinaryOperation instanceof MemberReference f ReferenceType FigText BlockStatement IfStatement Cast ReferenceType FigText MemberReference f BlockStatement StatementExpression Cast ReferenceType MemberReference f StatementExpression MethodInvocation me consume	1
MethodDeclaration Modifier protected FormalParameter ReferenceType e SAXException IfStatement BinaryOperation == MemberReference e Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXException Literal element is null" LocalVariableDeclaration ReferenceType String VariableDeclarator type MethodInvocation e Literal "type" getAttribute StatementExpression MethodInvocation memberList MemberReference type add	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation != MethodInvocation getSelectedIndex Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference remove StatementExpression MethodInvocation MemberReference MemberReference CENTER add StatementExpression MethodInvocation pack BlockStatement StatementExpression MethodInvocation MemberReference remove StatementExpression MethodInvocation MemberReference MemberReference CENTER add StatementExpression MethodInvocation pack	0
MethodDeclaration Modifier public Annotation Override addNode FormalParameter ReferenceType Object node IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference node addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference node fireNodeAdded	1
MethodDeclaration Modifier protected ReferenceType String getInstructions ReturnStatement MethodInvocation Literal	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSimpleState VariableDeclarator figClone Cast ReferenceType FigSimpleState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAAssociationEnd getFacade MethodInvocation Model MethodInvocation MethodInvocation getConnections MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public static ReferenceType getPump ReturnStatement MethodInvocation impl getModelEventPump	0
MethodDeclaration Modifier public BasicType boolean isPackage FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereo TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference modelElement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference stereo IfStatement MethodInvocation me MethodInvocation MemberReference stereo contains getStereotype BlockStatement StatementExpression MethodInvocation me MethodInvocation MemberReference stereotype remove getStereotype ReturnStatement CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference modelElement Literal " or " MemberReference stereo	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MethodInvocation impl	0
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType Object message LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference message getFacade LocalVariableDeclaration Modifier final ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference message getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference getFacade MemberReference BlockStatement ContinueStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count	0
MethodDeclaration Modifier public A ReferenceType A toArray FormalParameter ReferenceType A arg0 ReturnStatement MethodInvocation list MemberReference arg0 toArray	0
MethodDeclaration Modifier public startSpan FormalParameter ReferenceType DOMBuilder rtf SAXException IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType AttributesImpl VariableDeclarator ClassCreator ReferenceType AttributesImpl StatementExpression MethodInvocation Literal "" Literal "class" Literal "class" Literal "CDATA" Literal addAttribute StatementExpression MethodInvocation rtf Literal "" Literal Literal MemberReference startElement	0
MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference ! showem StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object relationship IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference relationship ReferenceType Relationship BinaryOperation instanceof MemberReference relationship ReferenceType BinaryOperation instanceof MemberReference relationship ReferenceType Message BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Argument is not " Literal "a TryStatement IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference relationship getConnections MethodInvocation iterator getFacade IfStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation it next IfStatement MethodInvocation it hasNext BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MethodInvocation it next getInstance getFacade BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType UmlAssociation BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc Cast ReferenceType UmlAssociation MemberReference relationship LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AssociationEnd VariableDeclarator conns MethodInvocation assoc getConnection IfStatement BinaryOperation <= MethodInvocation conns size Literal 1 BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation conns MethodInvocation getParticipant Literal 1 get IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Generalization BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MemberReference relationship ReturnStatement MethodInvocation gen getParent IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Dependency BlockStatement LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dep Cast ReferenceType Dependency MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation dep getSupplier IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference col getFirstItemOrNull IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference col getFirstItemOrNull IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator extend Cast ReferenceType MemberReference relationship ReturnStatement MethodInvocation extend getBase IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Include BlockStatement LocalVariableDeclaration ReferenceType Include VariableDeclarator Cast ReferenceType Include MemberReference relationship ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference getFacade IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference relationship IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference relationship CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String getPath FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType StateVertex BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o1 MemberReference o LocalVariableDeclaration ReferenceType Object VariableDeclarator o2 MethodInvocation Model MethodInvocation MemberReference o1 getContainer getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation Model MethodInvocation MemberReference o1 getName getFacade WhileStatement BinaryOperation && BinaryOperation != MemberReference o2 Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference path BinaryOperation + BinaryOperation + MethodInvocation Model MethodInvocation MemberReference o2 getName getFacade Literal "::" MemberReference path = StatementExpression Assignment MemberReference o1 MemberReference o2 = StatementExpression Assignment MemberReference o2 MethodInvocation Model MethodInvocation MemberReference o1 getContainer getFacade = ReturnStatement MemberReference path CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	1
MethodDeclaration Modifier public BasicType int getPriority FormalParameter ReferenceType ListSet offenders FormalParameter ReferenceType Designer dsgr ReturnStatement MemberReference priority	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration ReferenceType FormalParameter ReferenceType String tagName IfStatement BinaryOperation == MemberReference tagName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument may not be null" ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation modelImpl MethodInvocation getCore MethodInvocation MethodInvocation refAllOfClass MethodInvocation iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation i next IfStatement MethodInvocation tagName MethodInvocation getName equals BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType Object VariableDeclarator rootModel MethodInvocation modelImpl MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference tagName Literal null MemberReference rootModel StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object key FormalParameter ReferenceType JToolBar newToolbar FormalParameter BasicType int StatementExpression MethodInvocation MemberReference key MemberReference newToolbar MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType VariableDeclarator dd Cast ReferenceType MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType Object getParameter FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Project FormalParameter ReferenceType Reader reader SAXException IfStatement BinaryOperation == MemberReference reader Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A reader must be supplied" StatementExpression MethodInvocation MemberReference TryStatement StatementExpression MethodInvocation MemberReference reader parse CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation MethodInvocation reader toString MemberReference e logError ThrowStatement MemberReference e	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Point p LocalVariableDeclaration ReferenceType Point VariableDeclarator This MethodInvocation getFirstPoint LocalVariableDeclaration ReferenceType Point VariableDeclarator This MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator rSquared Cast BasicType int BinaryOperation * Literal MemberReference length IfStatement BinaryOperation > MemberReference rSquared Literal 100 BlockStatement StatementExpression Assignment MemberReference rSquared Literal = BlockStatement StatementExpression Assignment MemberReference rSquared MemberReference rSquared *= LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference p MemberReference LocalVariableDeclaration BasicType int VariableDeclarator destDeterminingFactor MethodInvocation MemberReference p MemberReference ReturnStatement BinaryOperation || BinaryOperation < MemberReference destDeterminingFactor MemberReference rSquared BinaryOperation && BinaryOperation < MemberReference MemberReference rSquared BinaryOperation < MemberReference MemberReference destDeterminingFactor	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier private ReferenceType getModelManagement ReturnStatement Cast ReferenceType MethodInvocation modelImpl	0
MethodDeclaration Modifier private FormalParameter ReferenceType event FormalParameter ReferenceType ArgoGeneratorEventListener listener SwitchStatement MethodInvocation event getEventType SwitchStatementCase MemberReference ArgoEventTypes StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase MemberReference ArgoEventTypes StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase MemberReference ArgoEventTypes StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "Invalid event:" MethodInvocation event getEventType error BreakStatement	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object execute ReturnStatement Literal null	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project AssertStatement BinaryOperation != MemberReference project Literal null StatementExpression Assignment MemberReference p MemberReference project =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement ReturnStatement MethodInvocation name Cast ReferenceType MemberReference obj equals IfStatement MethodInvocation Model MethodInvocation MemberReference obj getFacade BlockStatement ReturnStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference obj getName getFacade equals BlockStatement ReturnStatement Literal false	0
MethodDeclaration Modifier public static ReferenceType getInstance IfStatement BinaryOperation == MemberReference singleton Literal null BlockStatement StatementExpression Assignment MemberReference singleton ClassCreator ReferenceType = ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object nodeOrEdge IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAActor getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation KnowledgeTypeNode MethodInvocation size IfStatement BinaryOperation instanceof MemberReference parent ReferenceType KnowledgeTypeNode BlockStatement LocalVariableDeclaration ReferenceType KnowledgeTypeNode VariableDeclarator Cast ReferenceType KnowledgeTypeNode MemberReference parent LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator MethodInvocation Designer MethodInvocation MethodInvocation SynchronizedStatement MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference BlockStatement IfStatement MethodInvocation item MethodInvocation getName BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getFacade addAll ReturnStatement MemberReference set	0
MethodDeclaration Modifier public static ReferenceType String getShortName FormalParameter ReferenceType String longName FormalParameter BasicType int maxLength LocalVariableDeclaration BasicType char VariableDeclarator vowels ArrayCreator BasicType char ArrayInitializer Literal 'a' Literal 'e' Literal 'i' Literal 'o' Literal 'u' LocalVariableDeclaration ReferenceType String VariableDeclarator shortName MemberReference longName WhileStatement BinaryOperation > MethodInvocation shortName length MemberReference maxLength BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference vowels length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lastIndex MethodInvocation shortName MemberReference ArraySelector MemberReference i vowels lastIndexOf IfStatement BinaryOperation > MemberReference lastIndex MemberReference index BlockStatement StatementExpression Assignment MemberReference index MemberReference lastIndex = IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator firstPart MethodInvocation shortName Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation shortName BinaryOperation + MemberReference index Literal 1 MethodInvocation shortName length substring StatementExpression Assignment MemberReference shortName BinaryOperation + MemberReference firstPart MemberReference = IfStatement BinaryOperation > MethodInvocation shortName length MemberReference maxLength BlockStatement StatementExpression Assignment MemberReference shortName MethodInvocation shortName Literal 0 MemberReference maxLength substring = ReturnStatement MemberReference shortName	1
MethodDeclaration Modifier public FormalParameter ReferenceType Action save StatementExpression Assignment This MemberReference saveAction MemberReference save = StatementExpression MethodInvocation Designer MemberReference save	0
MethodDeclaration Modifier public Annotation Deprecated addProfile FormalParameter ReferenceType Profile p StatementExpression MethodInvocation MemberReference p Literal null addProfile	1
MethodDeclaration Modifier public handle FormalParameter ReferenceType Throwable t Throwable ThrowStatement MemberReference t	1
MethodDeclaration Modifier public BasicType boolean isValidNamespace FormalParameter ReferenceType Object FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType ModelElement BinaryOperation instanceof MemberReference ReferenceType Namespace BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator modelElement Cast ReferenceType ModelElement MemberReference LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference TryStatement IfStatement BinaryOperation == MemberReference modelElement MemberReference ns BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType DataType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Classifier BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Component BlockStatement ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType Component BinaryOperation != MemberReference modelElement MemberReference ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation != MemberReference modelElement MemberReference ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType org ReferenceType omg ReferenceType ReferenceType ReferenceType ReferenceType Object BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType org ReferenceType omg ReferenceType ReferenceType ReferenceType ReferenceType Object BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType org ReferenceType omg ReferenceType ReferenceType ReferenceType ReferenceType Object BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlPackage BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType ClassifierRole BlockStatement ReturnStatement BinaryOperation instanceof MemberReference ns ReferenceType IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType ClassifierRole BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Action BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType UmlPackage BlockStatement IfStatement MethodInvocation MemberReference ns BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BlockStatement ReturnStatement Literal false BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlPackage BinaryOperation instanceof MemberReference modelElement ReferenceType Classifier BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Include BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator cr Cast ReferenceType ClassifierRole MemberReference ns IfStatement BinaryOperation || MethodInvocation cr MethodInvocation MemberReference modelElement contains MethodInvocation cr MethodInvocation MemberReference modelElement contains BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement IfStatement MethodInvocation ! Cast ReferenceType MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BlockStatement IfStatement MethodInvocation ! Cast ReferenceType Generalization MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BlockStatement IfStatement MethodInvocation ! Cast ReferenceType UmlAssociation MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement IfStatement MethodInvocation ! Cast ReferenceType MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false ReturnStatement Literal true CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType VariableDeclarator signal IfStatement BinaryOperation instanceof MemberReference element ReferenceType BehavioralFeature BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element = LocalVariableDeclaration ReferenceType BehavioralFeature VariableDeclarator bf Cast ReferenceType BehavioralFeature MemberReference element StatementExpression Cast ReferenceType UmlPackage MethodInvocation bf refOutermostPackage IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element = StatementExpression Cast ReferenceType MemberReference element IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element = StatementExpression Cast ReferenceType MemberReference element IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element = StatementExpression Cast ReferenceType MemberReference element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Can't build a signal for a " MemberReference element LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MemberReference element WhileStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference namespace MethodInvocation Model MethodInvocation MemberReference namespace getFacade = StatementExpression MethodInvocation Model MethodInvocation MemberReference signal MemberReference namespace setNamespace getCoreHelper ReturnStatement MemberReference signal	1
MethodDeclaration Modifier private ReferenceType ReturnStatement Cast ReferenceType MethodInvocation modelImpl	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object container StatementExpression SuperMethodInvocation MemberReference handle MemberReference container StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public BasicType boolean resolve FormalParameter ReferenceType ToDoItem item LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation MemberReference item StatementExpression MethodInvocation MemberReference item ReturnStatement MemberReference res	0
MethodDeclaration Modifier private setStyleAttributes FormalParameter ReferenceType Fig fig FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String attributeMap LocalVariableDeclaration ReferenceType String VariableDeclarator name LocalVariableDeclaration ReferenceType String VariableDeclarator value ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator entry MethodInvocation attributeMap entrySet BlockStatement StatementExpression Assignment MemberReference name MethodInvocation entry getKey = StatementExpression Assignment MemberReference value MethodInvocation entry getValue = IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigCompartmentBox BlockStatement LocalVariableDeclaration ReferenceType FigCompartmentBox VariableDeclarator fcb Cast ReferenceType FigCompartmentBox MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getOperation getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment IfStatement Literal MethodInvocation MemberReference name equals BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getAttribute getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment IfStatement Literal MethodInvocation MemberReference name equals BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment IfStatement Literal MethodInvocation MemberReference name equals BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment	1
MethodDeclaration Modifier private ReferenceType Element FormalParameter ReferenceType Element element LocalVariableDeclaration ReferenceType Element VariableDeclarator result MemberReference element WhileStatement BinaryOperation != MethodInvocation result getOwner Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation result getOwner = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation MemberReference kind equals	0
MethodDeclaration Modifier public FormalParameter ReferenceType IfStatement MethodInvocation MethodInvocation MethodInvocation getInstance equals getOrientation BlockStatement StatementExpression MethodInvocation splitPane MemberReference MemberReference WEST add BlockStatement StatementExpression MethodInvocation splitPane MemberReference MemberReference add	0
MethodDeclaration Modifier public BasicType boolean isNavigable FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation Literal null getStateMachinesHelper StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent MethodInvocation Model MethodInvocation getEvent getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll ReturnStatement MemberReference list	0
MethodDeclaration Modifier private ReferenceType FigActivation FormalParameter Modifier final ReferenceType Object owner FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h FormalParameter Modifier final ReferenceType DiagramSettings settings FormalParameter Modifier final ReferenceType FigMessage ReturnStatement ClassCreator ReferenceType FigActivation MemberReference owner ClassCreator ReferenceType Rectangle MemberReference x MemberReference y MemberReference w MemberReference h MemberReference settings MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation MethodInvocation item encode	0
MethodDeclaration Modifier protected Annotation Override ReferenceType IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType ArrayInitializer Literal null MemberReference Literal null Literal null Literal null ReturnStatement MemberReference icons	0
MethodDeclaration Modifier private ReferenceType StringBuffer FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference cls isAClass getFacade MethodInvocation MethodInvocation MemberReference cls isAInstance getFacade BlockStatement IfStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator globalTypedefStatements MethodInvocation MemberReference cls Literal findTagValues IfStatement MethodInvocation ! globalTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb BinaryOperation + Literal "// global type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb BinaryOperation + Literal "// Result: typedef " Literal "<tag_value>;" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation globalTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation typedefEnum next append Literal "typedef " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator globalTypedefStatements MethodInvocation MemberReference cls Literal findTagValues IfStatement MethodInvocation ! globalTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal "// global type definitions for class " Literal in source file defined by Tag " Literal in ArgoUML" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb BinaryOperation + Literal "// Result: typedef " Literal "<tag_value>;" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation globalTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation typedefEnum next append Literal "typedef " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append ReturnStatement MemberReference sb	1
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text StatementExpression MethodInvocation document MemberReference text setProperty	0
MethodDeclaration Modifier private ReferenceType Object buildImport FormalParameter ReferenceType Object element FormalParameter ReferenceType Object srcFile LocalVariableDeclaration ReferenceType Collection VariableDeclarator dependencies MethodInvocation Model MethodInvocation MemberReference element MemberReference srcFile getDependencies getCoreHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dep MemberReference dependencies BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dep MemberReference hasStereotype getExtensionMechanismsHelper BlockStatement ReturnStatement MemberReference dep LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference srcFile MemberReference element getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation MemberReference getStereotype getCoreHelper LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation MemberReference srcFile MemberReference element StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference newName setName getCoreHelper StatementExpression MethodInvocation newElements MemberReference add ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator top ClassCreator ReferenceType StatementExpression MethodInvocation top ClassCreator ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference anchor MemberReference WEST = StatementExpression Assignment MemberReference gridx Literal 0 = StatementExpression Assignment MemberReference Literal 0 = StatementExpression Assignment MemberReference insets ClassCreator ReferenceType Insets Literal 10 Literal 2 Literal 2 Literal 2 = LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference anchor MemberReference WEST = StatementExpression Assignment MemberReference fill MemberReference NONE = StatementExpression Assignment MemberReference gridx Literal 1 = StatementExpression Assignment MemberReference Literal 0 = StatementExpression Assignment MemberReference weightx Literal 1.0 = StatementExpression Assignment MemberReference insets ClassCreator ReferenceType Insets Literal 4 Literal 2 Literal 2 Literal 2 = StatementExpression MethodInvocation top ClassCreator ReferenceType JLabel Literal call MemberReference add StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation calls toArray MethodInvocation toArray Literal Literal = LocalVariableDeclaration ReferenceType JTable VariableDeclarator table ClassCreator ReferenceType JTable MemberReference StatementExpression MethodInvocation table Literal true StatementExpression Assignment MemberReference gridx Literal 0 = StatementExpression Assignment MemberReference Literal 1 = StatementExpression Assignment MemberReference gridwidth Literal 2 = StatementExpression Assignment MemberReference anchor MemberReference CENTER = StatementExpression Assignment MemberReference fill MemberReference = StatementExpression Assignment MemberReference weighty Literal 1.0 = StatementExpression MethodInvocation top ClassCreator ReferenceType JScrollPane MemberReference table MemberReference add StatementExpression Assignment MemberReference insets ClassCreator ReferenceType Insets Literal 0 Literal 2 Literal 0 Literal 2 = LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator ClassCreator ReferenceType JCheckBox Literal create Literal true StatementExpression Assignment MemberReference Literal 2 = StatementExpression MethodInvocation top MemberReference MemberReference add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator ClassCreator ReferenceType JCheckBox Literal local Literal true StatementExpression Assignment MemberReference Literal 3 = StatementExpression MethodInvocation top MemberReference MemberReference add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator ClassCreator ReferenceType JCheckBox Literal package Literal true StatementExpression Assignment MemberReference Literal 4 = StatementExpression MethodInvocation top MemberReference MemberReference add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator ClassCreator ReferenceType JCheckBox Literal Literal true StatementExpression Assignment MemberReference Literal 5 = StatementExpression MethodInvocation top MemberReference MemberReference add ReturnStatement MemberReference top	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public run ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator toolbar MethodInvocation BlockStatement StatementExpression MethodInvocation toolbar Cast ReferenceType MethodInvocation e getSource setVisible LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation Configuration MemberReference MethodInvocation toolbar getName StatementExpression MethodInvocation Configuration MemberReference Cast ReferenceType Boolean MethodInvocation toolbar isVisible setString	0
MethodDeclaration FormalParameter ReferenceType String type FormalParameter BasicType boolean forceIt LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation parseState anonymousClass TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier MethodInvocation MethodInvocation MethodInvocation MemberReference type getClassifierName get MemberReference type getContext LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator interfaces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement MethodInvocation Model MethodInvocation MemberReference mClassifier isAInterface getFacade BlockStatement StatementExpression MethodInvocation interfaces MemberReference type add StatementExpression MethodInvocation MemberReference name Cast BasicType short Literal 0 MemberReference EMPTY_STRING_LIST TernaryExpression MethodInvocation Model MethodInvocation MemberReference mClassifier isAClass getFacade MemberReference type Literal null MemberReference interfaces Literal "" MemberReference forceIt CatchClause CatchClauseParameter ClassifierNotFoundException e StatementExpression MethodInvocation MemberReference name Cast BasicType short Literal 0 MemberReference EMPTY_STRING_LIST Literal null MemberReference EMPTY_STRING_LIST Literal "" MemberReference forceIt StatementExpression MethodInvocation LOG BinaryOperation + Literal "Modeler.java: an class was created " Literal it could not be found in the classpath." info	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator obj MethodInvocation MethodInvocation MethodInvocation StatementExpression SuperMethodInvocation MemberReference obj ReturnStatement MemberReference obj	0
MethodDeclaration Modifier protected FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation MethodInvocation Boolean MemberReference	0
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes AssertStatement BinaryOperation != MemberReference edge Literal null AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator newEdge Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType MemberReference edge MemberReference settings = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = StatementExpression MethodInvocation MemberReference lay MemberReference newEdge MemberReference edge addEdge ReturnStatement MemberReference newEdge	1
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType Class targetClass IfStatement BinaryOperation == MemberReference targetClass Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator classNs Cast ReferenceType StringNamespace MethodInvocation StringNamespace MemberReference targetClass parse LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator Cast ReferenceType StringNamespace MethodInvocation StringNamespace Literal MemberReference Namespace parse LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation classNs StatementExpression MethodInvocation LOG BinaryOperation + Literal "Attempt to find style for: " MemberReference classNs debug StatementExpression MethodInvocation classNs LocalVariableDeclaration ReferenceType String VariableDeclarator bases ArrayCreator ReferenceType String ArrayInitializer MethodInvocation classNs toString MethodInvocation toString ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator MemberReference BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator baseName MemberReference bases BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + BinaryOperation + BinaryOperation + MemberReference baseName Literal "." MemberReference MemberReference LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation MemberReference name loadClass IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement ReturnStatement MemberReference cls ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation ReturnStatement MethodInvocation MemberReference target shouldBeEnabled	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference topPanel Literal null BlockStatement StatementExpression Assignment MemberReference topPanel MethodInvocation = ReturnStatement MemberReference topPanel	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType BinaryOperation > MethodInvocation MemberReference node getChildCount Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType l StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference l add StatementExpression MethodInvocation LOG Literal debug	0
MethodDeclaration Modifier public FormalParameter ReferenceType MouseEvent e IfStatement BinaryOperation == MemberReference curHandle index Literal - 1 BlockStatement StatementExpression MethodInvocation Globals MethodInvocation MethodInvocation MethodInvocation getEnclosingFig select curEditor	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection c IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference handle getFacade IfStatement MethodInvocation ! isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ClassCreator ReferenceType ArrayList MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference c BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public final BasicType boolean setDefaultDescription FormalParameter ReferenceType String sBlockDesc IfStatement BinaryOperation && BinaryOperation != MemberReference sBlockDesc Literal null BinaryOperation > MethodInvocation sBlockDesc MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation sBlockDesc trim = ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Collection figs IfStatement MethodInvocation figs isEmpty BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation figs iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Fig BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator Cast ReferenceType Fig MemberReference obj IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator tabValues Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralBoolean BlockStatement LocalVariableDeclaration ReferenceType LiteralBoolean VariableDeclarator Cast ReferenceType LiteralBoolean MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType Boolean ArrayInitializer MethodInvocation = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralString BlockStatement LocalVariableDeclaration ReferenceType LiteralString VariableDeclarator ls Cast ReferenceType LiteralString MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer MethodInvocation ls getValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralUnlimitedNatural BlockStatement LocalVariableDeclaration ReferenceType LiteralUnlimitedNatural VariableDeclarator Cast ReferenceType LiteralUnlimitedNatural MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + Literal "" MethodInvocation getValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralInteger BlockStatement LocalVariableDeclaration ReferenceType LiteralInteger VariableDeclarator Cast ReferenceType LiteralInteger MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType Integer ArrayInitializer MethodInvocation getValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType OpaqueExpression BlockStatement LocalVariableDeclaration ReferenceType OpaqueExpression VariableDeclarator oe Cast ReferenceType OpaqueExpression MemberReference handle LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator bodies MethodInvocation oe getBodies LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator langs MethodInvocation oe IfStatement BinaryOperation > MethodInvocation bodies size Literal 0 BlockStatement StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String BinaryOperation * MethodInvocation bodies size Literal 2 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation bodies size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference i Literal 2 tabValues MethodInvocation bodies MemberReference i get = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference i Literal 2 Literal 1 tabValues MethodInvocation langs MemberReference i get = ReturnStatement MemberReference tabValues	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object newTarget StatementExpression SuperMethodInvocation MemberReference newTarget LocalVariableDeclaration ReferenceType Collection VariableDeclarator connections MethodInvocation Model MethodInvocation MemberReference newTarget getConnections getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator types ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator conn MemberReference connections BlockStatement StatementExpression MethodInvocation types MethodInvocation Model MethodInvocation MemberReference conn getType getFacade add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifierRole MemberReference types BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference classifierRole getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference classifier Literal "feature" getPump	0
MethodDeclaration Modifier protected BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation MethodInvocation getNameFig LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MemberReference width BinaryOperation * MemberReference PADDING Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + MemberReference height MemberReference PADDING StatementExpression Assignment MemberReference MethodInvocation state = StatementExpression Assignment MemberReference w MethodInvocation Math MemberReference w BinaryOperation + MemberReference width BinaryOperation * MemberReference PADDING Literal 2 max = StatementExpression Assignment MemberReference h BinaryOperation + BinaryOperation + BinaryOperation + MemberReference h MemberReference PADDING MemberReference height MemberReference PADDING = ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation Math MemberReference w BinaryOperation / MemberReference Literal 2 max MethodInvocation Math MemberReference h BinaryOperation / MemberReference HEIGHT Literal 2 max	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal default source path	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation getComposite Literal true Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public removeModelEventListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation bases iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal "feature" removeModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Literal "base" removeModelEventListener getPump	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MethodInvocation getFacade addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier private BasicType float LocalVariableDeclaration BasicType float VariableDeclarator w Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference BlockStatement StatementExpression Assignment MemberReference w BinaryOperation / MethodInvocation node MemberReference += ReturnStatement MemberReference w	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Token parse IfStatement BinaryOperation == MethodInvocation desc Literal 0 charAt Literal '<' BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal "<" add LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference desc Literal '<' Literal '>' LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation desc Literal 1 MemberReference substring StatementExpression Assignment MemberReference desc MethodInvocation desc BinaryOperation + MemberReference Literal 1 substring = LocalVariableDeclaration ReferenceType VariableDeclarator l ClassCreator ReferenceType MemberReference StatementExpression MethodInvocation result MethodInvocation l parse addAll StatementExpression MethodInvocation Pattern MethodInvocation MemberReference matcher Literal compile StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal ">" add LocalVariableDeclaration ReferenceType VariableDeclarator l ClassCreator ReferenceType MemberReference desc StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal " " add StatementExpression MethodInvocation result MethodInvocation l parse addAll LocalVariableDeclaration ReferenceType String VariableDeclarator interfaces MethodInvocation l IfStatement BinaryOperation > MethodInvocation interfaces length Literal 0 BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal " " add LocalVariableDeclaration ReferenceType VariableDeclarator l2 ClassCreator ReferenceType MemberReference interfaces StatementExpression MethodInvocation result MethodInvocation l2 parse addAll LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation l2 WhileStatement BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference l2 ClassCreator ReferenceType MemberReference = StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token COMMA Literal "," add StatementExpression MethodInvocation result MethodInvocation l2 parse addAll StatementExpression Assignment MemberReference MethodInvocation l2 = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType JPopupMenu popup FormalParameter BasicType int index ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType lang LocalVariableDeclaration ReferenceType VariableDeclarator old MethodInvocation MemberReference lang remove IfStatement MethodInvocation lang MemberReference equals BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator keySet IfStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType MethodInvocation it next = BlockStatement StatementExpression Assignment MemberReference Literal null = IfStatement BinaryOperation != MemberReference old Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes MemberReference old StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal generator " MemberReference old Literal " for " MemberReference lang debug ReturnStatement MemberReference old	1
MethodDeclaration Modifier public ReferenceType push FormalParameter ReferenceType item StatementExpression SuperMethodInvocation MemberReference item push IfStatement MethodInvocation item BlockStatement StatementExpression MethodInvocation Literal Literal true ReturnStatement MemberReference item	1
MethodDeclaration Modifier private FormalParameter ReferenceType ProgressMonitor monitor LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator lineSepAndListIndent BinaryOperation + MethodInvocation System Literal "line.separator" getProperty Literal " * " LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference lineSepAndListIndent Literal few C++ are " Literal MemberReference lineSepAndListIndent Literal "no support for variables and MemberReference lineSepAndListIndent Literal "no with the C++ generator won't MemberReference lineSepAndListIndent Literal "no operator MemberReference lineSepAndListIndent Literal this list needs to StatementExpression MethodInvocation Configuration MemberReference MemberReference userWarning setBoolean StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MemberReference userWarning debug StatementExpression Assignment MemberReference userWarning Literal false = StatementExpression MethodInvocation monitor Literal "C++ Import Literal "The C++ reverse module is MemberReference notifyMessage	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object message FormalParameter ReferenceType Object messageSort StatementExpression MethodInvocation MemberReference message MemberReference messageSort	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference isAClassifier getFacade StatementExpression MethodInvocation removeAllItems StatementExpression Assignment MemberReference files Literal null = StatementExpression SuperMethodInvocation MemberReference t	1
MethodDeclaration Modifier private StatementExpression Assignment MemberReference edit MethodInvocation ClassCreator ReferenceType JMenu MethodInvocation Literal add = StatementExpression MethodInvocation MemberReference edit Literal setMnemonic StatementExpression Assignment MemberReference select ClassCreator ReferenceType JMenu MethodInvocation Literal = StatementExpression MethodInvocation MemberReference select Literal setMnemonic StatementExpression MethodInvocation edit MemberReference select add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation select ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation select addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation select MemberReference add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation select MemberReference add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation select addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation select ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation edit addSeparator LocalVariableDeclaration ReferenceType Action VariableDeclarator removeFromDiagram MethodInvocation MethodInvocation getInstance LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation edit MemberReference removeFromDiagram add StatementExpression MethodInvocation MemberReference Literal from Diagram" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation edit MethodInvocation getTargetFollower add StatementExpression MethodInvocation MemberReference Literal from setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation edit addSeparator StatementExpression MethodInvocation ShortcutMgr MethodInvocation edit ClassCreator ReferenceType add MemberReference ShortcutMgr assignAccelerator StatementExpression Assignment MemberReference ClassCreator ReferenceType = IfStatement MethodInvocation ! BlockStatement LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation edit MemberReference add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator	0
MethodDeclaration Modifier public FormalParameter ReferenceType listener FormalParameter ReferenceType Object FormalParameter ReferenceType String propertyNames StatementExpression MethodInvocation MemberReference listener MemberReference MemberReference propertyNames	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter Modifier final ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = IfStatement BinaryOperation > MethodInvocation name length Literal 0 BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + Literal "/" MemberReference name = LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation Model MethodInvocation MemberReference modelElement getBase getFacade IfStatement BinaryOperation != MemberReference assoc Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator baseName MethodInvocation Model MethodInvocation MemberReference assoc getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference baseName Literal null BinaryOperation > MethodInvocation baseName length Literal 0 BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + BinaryOperation + MemberReference name Literal ":" MemberReference baseName = ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList Literal 1 StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade add ReturnStatement MemberReference list	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MemberReference selected getCommonBehaviorHelper	0
MethodDeclaration Modifier private ReferenceType Object getExpression LocalVariableDeclaration ReferenceType Object VariableDeclarator expression Literal null IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference expression MethodInvocation getterSetterManager MemberReference target MemberReference propertyName MemberReference type get = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got the expression " MemberReference expression info BlockStatement StatementExpression Assignment MemberReference expression MemberReference target = ReturnStatement MemberReference expression	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object owner FormalParameter ReferenceType String name FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType MemberReference name MemberReference owner	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression MethodInvocation MemberReference type Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace FormalParameter ReferenceType DiagramSettings settings IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No namespace as argument" error StatementExpression MethodInvocation LOG MemberReference namespace error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The argument " MemberReference namespace Literal not a namespace." ReturnStatement MethodInvocation MethodInvocation MemberReference MemberReference namespace MemberReference settings create getInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object qualifier IfStatement BinaryOperation instanceof MemberReference qualifier ReferenceType Attribute BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference qualifier	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener	0
MethodDeclaration Modifier public ReferenceType Message LocalVariableDeclaration ReferenceType Message VariableDeclarator MethodInvocation MethodInvocation getMessage MethodInvocation StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType URL ReturnStatement MemberReference url	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object feature StatementExpression SuperMethodInvocation MemberReference elem MemberReference i MemberReference feature StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getLabel ReturnStatement MethodInvocation label getText	0
MethodDeclaration Modifier public FormalParameter ReferenceType String identifier IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MemberReference identifier setName IfStatement MethodInvocation ! BlockStatement AssertStatement MethodInvocation MethodInvocation peek IfStatement MemberReference BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator tab MemberReference BlockStatement StatementExpression MethodInvocation tab	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 4593671619915808749L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType ResolvedCritic rc ReturnStatement MethodInvocation MemberReference rc add	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Literal true setEnabled StatementExpression MethodInvocation requestFocus StatementExpression MethodInvocation selectAll	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb BinaryOperation + MethodInvocation MethodInvocation getName getClass Literal " {\n" append ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator item This BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal " " MethodInvocation item toString Literal "\n" append StatementExpression MethodInvocation sb Literal " }" append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator lang MethodInvocation BlockStatement IfStatement MethodInvocation lang MethodInvocation MemberReference name equals getName BlockStatement ReturnStatement MemberReference lang ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object o ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public final ReferenceType String toString FormalParameter ReferenceType String sIndent IfStatement BinaryOperation != MemberReference objDocBlock Literal null BlockStatement ReturnStatement MethodInvocation objDocBlock MemberReference sIndent toString ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object mClassifier StatementExpression MethodInvocation MemberReference mClassifier remove	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation MethodInvocation This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType char c LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i BinaryOperation - MemberReference match length Literal 1 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i match MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 match = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference match length Literal 1 match MemberReference c = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference match length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i match MemberReference ArraySelector MemberReference i pattern BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation Test MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " ? " append StatementExpression MethodInvocation Left MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " : " append StatementExpression MethodInvocation Right MemberReference sb ToSource	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigJunctionState VariableDeclarator figClone Cast ReferenceType FigJunctionState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private init FormalParameter BasicType boolean value FormalParameter ReferenceType key StatementExpression MethodInvocation MemberReference key MemberReference value MemberReference value fireNotationEvent	0
MethodDeclaration Modifier private ReferenceType ReturnStatement Cast ReferenceType MethodInvocation modelImpl getExtensionMechanismsFactory	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mousePressed LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This IfStatement BinaryOperation instanceof MemberReference sel ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference sel	0
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType Token FormalParameter ReferenceType String s ReturnStatement ClassCreator MethodInvocation parse ReferenceType MemberReference s	0
MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType VariableDeclarator figClone Cast ReferenceType SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator thisIter This MethodInvocation getFigs MethodInvocation iterator WhileStatement MethodInvocation thisIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator thisFig Cast ReferenceType Fig MethodInvocation thisIter next IfStatement BinaryOperation == MemberReference thisFig MemberReference BlockStatement StatementExpression Assignment MemberReference figClone Cast ReferenceType MemberReference thisFig = ReturnStatement MemberReference figClone ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object link ReturnStatement MethodInvocation impl MemberReference link getSource	0
MethodDeclaration Modifier public removeModelEventListener FormalParameter ReferenceType listener FormalParameter ReferenceType Object FormalParameter ReferenceType String propertyNames ThrowStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private ReferenceType String generateScope FormalParameter ReferenceType Object feature IfStatement MethodInvocation Model MethodInvocation MemberReference feature isStatic getFacade BlockStatement IfStatement MemberReference BlockStatement ReturnStatement Literal "/* static */ " BlockStatement ReturnStatement Literal "static " ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getTransitions getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override addNode FormalParameter ReferenceType Object node StatementExpression MethodInvocation LOG Literal "adding debug IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference node addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference node fireNodeAdded	1
MethodDeclaration Modifier public ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer MemberReference r x BinaryOperation + MemberReference r x MemberReference d BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference d MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer BinaryOperation + MemberReference r y MemberReference d MemberReference r y MemberReference r y BinaryOperation - BinaryOperation + MemberReference r y MemberReference r height MemberReference d BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference d LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference MemberReference Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	1
MethodDeclaration Modifier private FormalParameter ReferenceType Stereotype source FormalParameter ReferenceType Stereotype target StatementExpression Cast ReferenceType MethodInvocation modelImpl getCoreFactory StatementExpression MethodInvocation target MethodInvocation clear getBaseClass StatementExpression MethodInvocation target MethodInvocation MethodInvocation source getBaseClass addAll getBaseClass StatementExpression MethodInvocation target MethodInvocation source getIcon setIcon	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Stereotype getStereotypes FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "A namespace was expected we got " MemberReference ns LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Stereotype VariableDeclarator l ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Stereotype TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Stereotype BlockStatement StatementExpression MethodInvocation l Cast ReferenceType Stereotype MemberReference o add IfStatement BinaryOperation instanceof MemberReference o ReferenceType UmlPackage BlockStatement StatementExpression MethodInvocation l MethodInvocation MemberReference o getStereotypes addAll CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference l	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public FormalParameter ReferenceType URI FormalParameter ReferenceType Project p IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MemberReference = StatementExpression MethodInvocation p MemberReference	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference getCommonBehaviorHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public formatCallout FormalParameter ReferenceType DOMBuilder rtf FormalParameter ReferenceType Callout callout StatementExpression MethodInvocation MemberReference rtf MemberReference callout formatTextCallout	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType MemberReference modelElement	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf	1
MethodDeclaration Modifier public Annotation Override addFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f addFig StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference name MemberReference type put	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator subject MemberReference val LocalVariableDeclaration ReferenceType Object VariableDeclarator feature Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator parameters Literal null StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node getPathName Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getPathName StatementExpression Assignment MemberReference feature MethodInvocation node MethodInvocation toString MethodInvocation trim getPathName = IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node getFeatureCallParameters Literal null BlockStatement StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation node MethodInvocation This apply getFeatureCallParameters StatementExpression Assignment MemberReference parameters Cast ReferenceType List MemberReference val = IfStatement BinaryOperation == MemberReference subject Literal null BlockStatement StatementExpression Assignment MemberReference val MethodInvocation vt MemberReference feature get = IfStatement BinaryOperation == MemberReference val Literal null BlockStatement StatementExpression Assignment MemberReference val This MemberReference interp MethodInvocation MethodInvocation feature MethodInvocation trim toString = BlockStatement StatementExpression Assignment MemberReference val MethodInvocation MemberReference subject MemberReference feature MemberReference MemberReference parameters runFeatureCall = StatementExpression MethodInvocation MemberReference node	1
MethodDeclaration Modifier public ReferenceType Model LocalVariableDeclaration ReferenceType Model VariableDeclarator profile MethodInvocation createModel LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo Cast ReferenceType Stereotype MethodInvocation modelImpl MethodInvocation Literal "profile" MemberReference profile buildStereotype getExtensionMechanismsFactory StatementExpression MethodInvocation profile MethodInvocation MemberReference stereo add getStereotype ReturnStatement MemberReference profile	1
MethodDeclaration ReferenceType Multiplicity FormalParameter BasicType int lower FormalParameter BasicType int upper LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator multiplicity MethodInvocation modelImpl MethodInvocation MethodInvocation getMultiplicity MethodInvocation IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal created for " MemberReference lower Literal ".." MemberReference upper debug StatementExpression MethodInvocation multiplicity MethodInvocation MethodInvocation MemberReference lower MemberReference upper createMultiplicityRange add getRange StatementExpression SuperMethodInvocation MemberReference multiplicity ReturnStatement MemberReference multiplicity	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "new " append StatementExpression MethodInvocation Type MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "[" append IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "]" append IfStatement BinaryOperation != MemberReference AdditionalRankSpecifiers Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation AdditionalRankSpecifiers size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb Literal "[" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MethodInvocation AdditionalRankSpecifiers MemberReference j get MemberReference ++ j BlockStatement StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb Literal "]" append IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference sb ToSource	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType Diagram BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Diagram MemberReference o WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation it next StatementExpression Assignment MemberReference it Cast ReferenceType Diagram MemberReference o = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation it next LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator it MethodInvocation history listIterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType WeakReference VariableDeclarator ref Cast ReferenceType WeakReference MethodInvocation it next LocalVariableDeclaration ReferenceType Object VariableDeclarator historyObject MethodInvocation ref get IfStatement MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference historyObject TernaryExpression BinaryOperation instanceof MemberReference historyObject ReferenceType Fig Cast ReferenceType Fig MemberReference historyObject MemberReference historyObject = IfStatement BinaryOperation == MemberReference o MemberReference historyObject BlockStatement IfStatement BinaryOperation <= MethodInvocation history MemberReference ref indexOf MemberReference currentTarget BlockStatement StatementExpression MemberReference -- currentTarget StatementExpression MethodInvocation it remove	1
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override updateListener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation pce getSource IfStatement BinaryOperation && BinaryOperation == MemberReference obj MemberReference modelElement BinaryOperation || Literal MethodInvocation MethodInvocation pce getPropertyName equals "stereotype" Literal MethodInvocation MethodInvocation pce getPropertyName equals "taggedValue" BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getNewValue isAStereotype getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getNewValue ArrayCreator ReferenceType String ArrayInitializer Literal "name" Literal "remove" IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getOldValue isAStereotype getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getOldValue IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getNewValue isATaggedValue getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getNewValue IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getOldValue isATaggedValue getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getOldValue	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ActivityNode BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType ActivityNode MemberReference handle	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType Object op IfStatement MethodInvocation Model MethodInvocation MemberReference op isAbstract getFacade BlockStatement ReturnStatement Literal " ReturnStatement Literal ""	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType State MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType List VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getTargets getInstance LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType JMenuItem VariableDeclarator menuItems ClassCreator ReferenceType TreeSet TypeArgument ReferenceType JMenuItem IfStatement BinaryOperation >= MethodInvocation targets size Literal 2 BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator classifierRoleFound Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator classifierRolesOnly Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation targets iterator BinaryOperation && MethodInvocation it hasNext MemberReference classifierRolesOnly BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation it next isAClassifierRole getFacade BlockStatement StatementExpression Assignment MemberReference classifierRoleFound Literal true = BlockStatement StatementExpression Assignment MemberReference classifierRolesOnly Literal false = IfStatement MemberReference classifierRolesOnly BlockStatement StatementExpression MethodInvocation menuItems ClassCreator ReferenceType ClassCreator ReferenceType MethodInvocation Model MethodInvocation getMetaTypes MemberReference targets add IfStatement MemberReference ! classifierRoleFound BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator classifiersOnly Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation targets iterator BinaryOperation && MethodInvocation it hasNext MemberReference classifiersOnly BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation it next isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference classifiersOnly Literal false = IfStatement MemberReference classifiersOnly BlockStatement StatementExpression MethodInvocation menuItems ClassCreator ReferenceType ClassCreator ReferenceType MethodInvocation Model MethodInvocation getAssociation getMetaTypes MemberReference targets add IfStatement BinaryOperation == MethodInvocation targets size Literal 2 BlockStatement StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal Literal " " addCreateModelElementAction IfStatement BinaryOperation == MethodInvocation targets size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation targets Literal 0 get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator metaType MethodInvocation Model MethodInvocation getMetaTypes BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference metaType MemberReference target getUmlFactory BlockStatement StatementExpression MethodInvocation menuItems ClassCreator ReferenceType ClassCreator ReferenceType ActionCreateContainedModelElement MemberReference metaType MemberReference target add IfStatement BinaryOperation == MethodInvocation menuItems size Literal 1 BlockStatement StatementExpression MethodInvocation MethodInvocation menuItems MethodInvocation next iterator add IfStatement BinaryOperation > MethodInvocation menuItems size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator menu ClassCreator ReferenceType JMenu MethodInvocation Literal StatementExpression MethodInvocation MemberReference menu add ForStatement EnhancedForControl VariableDeclaration ReferenceType JMenuItem VariableDeclarator item MemberReference menuItems BlockStatement StatementExpression MethodInvocation menu MemberReference item add	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType ForeignKeyDefinition foreignKeyDefinition LocalVariableDeclaration ReferenceType String VariableDeclarator tableName MethodInvocation foreignKeyDefinition getTableName LocalVariableDeclaration ReferenceType List VariableDeclarator columnNames MethodInvocation foreignKeyDefinition getColumnNames LocalVariableDeclaration ReferenceType String VariableDeclarator referencesTableName MethodInvocation foreignKeyDefinition LocalVariableDeclaration ReferenceType List VariableDeclarator MethodInvocation foreignKeyDefinition LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation foreignKeyDefinition LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference tableName append Literal TABLE " append StatementExpression MethodInvocation sb MethodInvocation MemberReference append MethodInvocation MemberReference LINE_SEPARATOR append Literal " " append StatementExpression MethodInvocation sb Literal KEY (" append StatementExpression MethodInvocation sb MethodInvocation Utils MemberReference columnNames append StatementExpression MethodInvocation sb Literal ") " append StatementExpression MethodInvocation sb MethodInvocation Literal " (" append MemberReference referencesTableName append StatementExpression MethodInvocation sb MethodInvocation Utils MemberReference append StatementExpression MethodInvocation sb Literal ")" append LocalVariableDeclaration BasicType int VariableDeclarator refLower MethodInvocation foreignKeyDefinition IfStatement BinaryOperation == MemberReference refLower Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal " SET NULL" append BlockStatement StatementExpression MethodInvocation sb Literal " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation foreignKeyDefinition getUpper IfStatement BinaryOperation == MemberReference upper Literal 1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference foreignKeyDefinition append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Operation LocalVariableDeclaration ReferenceType Operation VariableDeclarator MethodInvocation MethodInvocation getOperation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object message FormalParameter ReferenceType Object messageSort LocalVariableDeclaration ReferenceType VariableDeclarator ms Cast ReferenceType MemberReference messageSort LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference message StatementExpression MethodInvocation m MemberReference ms	0
MethodDeclaration Modifier public final ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections MemberReference	1
MethodDeclaration Modifier protected fireIntervalAdded FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalAdded	1
MethodDeclaration Modifier protected ReferenceType JComboBox ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation Literal ""	0
MethodDeclaration Modifier public static ReferenceType getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType = ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public FormalParameter ReferenceType e IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation textArea getText	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation MethodInvocation This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Enumeration ReturnStatement MethodInvocation	0
MethodDeclaration FormalParameter Modifier final ReferenceType FigMessage message IfStatement BinaryOperation && BinaryOperation && MethodInvocation message MethodInvocation MethodInvocation message equals MethodInvocation ! MethodInvocation message getSourceFigNode equals BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getX MethodInvocation getY MethodInvocation getWidth MethodInvocation getHeight setBounds	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public putToken FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "Cannot put a null StatementExpression Assignment MemberReference putToken MemberReference s =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Extension	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType ArgoDiagram getActiveDiagram ReturnStatement MemberReference activeDiagram	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object at FormalParameter ReferenceType Object expr StatementExpression SuperMethodInvocation MemberReference at MemberReference expr StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p Cast ReferenceType String MethodInvocation priority getSelectedItem IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement IfStatement MethodInvocation p MemberReference ArraySelector Literal 0 equals BlockStatement StatementExpression MethodInvocation target MemberReference ToDoItem HIGH_PRIORITY IfStatement MethodInvocation p MemberReference ArraySelector Literal 1 equals BlockStatement StatementExpression MethodInvocation target MemberReference ToDoItem MED_PRIORITY IfStatement MethodInvocation p MemberReference ArraySelector Literal 2 equals BlockStatement StatementExpression MethodInvocation target MemberReference ToDoItem	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getFacade setAllElements	0
MethodDeclaration Modifier protected BasicType boolean isValidEvent FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MethodInvocation e getNewValue Literal null BinaryOperation != MethodInvocation e getOldValue Literal null MethodInvocation MethodInvocation MemberReference e getChangedElement isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal true = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement IfStatement MethodInvocation ! col isEmpty BlockStatement StatementExpression Assignment MemberReference valid Literal true = ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference col BlockStatement IfStatement MethodInvocation ! MemberReference o isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation e getOldValue ReferenceType Collection Cast ReferenceType Collection MethodInvocation e getOldValue BlockStatement StatementExpression Assignment MemberReference valid Literal true = ReturnStatement MemberReference valid	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation != MemberReference renderer Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation renderer This getOwner IfStatement BinaryOperation && BinaryOperation == MemberReference owner MethodInvocation evt getSource BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference owner isRemoved getUmlFactory BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Encountered deleted object during delete of " MemberReference owner warn ReturnStatement StatementExpression MethodInvocation renderer This MethodInvocation MemberReference owner MethodInvocation renderer This toString IfStatement BinaryOperation || BinaryOperation instanceof MemberReference evt ReferenceType AddAssociationEvent BinaryOperation instanceof MemberReference evt ReferenceType RemoveAssociationEvent BlockStatement StatementExpression MethodInvocation MemberReference owner	1
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal Notation for SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator ep IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ep MethodInvocation = StatementExpression Cast ReferenceType MemberReference BlockStatement StatementExpression Assignment MemberReference ep Cast ReferenceType MemberReference = LocalVariableDeclaration ReferenceType VariableDeclarator extend MethodInvocation StatementExpression MethodInvocation extend Cast ReferenceType MemberReference StatementExpression MethodInvocation extend Cast ReferenceType MemberReference extension StatementExpression MethodInvocation extend MethodInvocation MemberReference ep add StatementExpression MethodInvocation MethodInvocation MemberReference extend add StatementExpression MethodInvocation MethodInvocation MemberReference ep add	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object getContext FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement MethodInvocation MemberReference handle BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier protected IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator sourceArrowType MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator destArrowType MethodInvocation IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! MethodInvocation getSettings BinaryOperation > MemberReference sourceArrowType Literal 2 BinaryOperation > MemberReference destArrowType Literal 2 BlockStatement StatementExpression Assignment MemberReference sourceArrowType Literal 3 -= StatementExpression Assignment MemberReference destArrowType Literal 3 -= StatementExpression MethodInvocation MemberReference ArraySelector MemberReference sourceArrowType StatementExpression MethodInvocation MemberReference ArraySelector MemberReference destArrowType	1
MethodDeclaration Modifier public static ReferenceType create ReturnStatement ClassCreator ReferenceType PredicateMType Literal null Literal 0	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAUseCase getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Deprecated FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MethodInvocation npSettings MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType FieldDeclaration Modifier private final ReferenceType VariableDeclarator key MemberReference Notation MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference showem StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public StatementExpression MethodInvocation npSettings MemberReference ! showem StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg ReturnStatement Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getTargets getInstance StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation MethodInvocation targets toArray setSelection StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object FormalParameter BasicType int x FormalParameter BasicType int y ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier protected IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation getOwner Literal null MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MethodInvocation MethodInvocation getOwner MethodInvocation toString StatementExpression MethodInvocation MemberReference nameStr setText StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object owningState FormalParameter ReferenceType Object source FormalParameter ReferenceType Object dest IfStatement BinaryOperation || BinaryOperation instanceof MemberReference source ReferenceType Vertex BinaryOperation instanceof MemberReference dest ReferenceType Vertex BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The source and dest must both be MemberReference source Literal " dest=" MemberReference dest IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owningState ReferenceType BinaryOperation instanceof MemberReference owningState ReferenceType State BinaryOperation instanceof MemberReference owningState ReferenceType Region BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal not a " MemberReference owningState LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator region IfStatement BinaryOperation || BinaryOperation instanceof MemberReference owningState ReferenceType BinaryOperation instanceof MemberReference owningState ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator regions MethodInvocation Model MethodInvocation MemberReference owningState getStateMachinesHelper IfStatement MethodInvocation regions isEmpty BlockStatement StatementExpression Assignment MemberReference region MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getRegion getMetaTypes MemberReference owningState buildNode getUmlFactory = BlockStatement StatementExpression Assignment MemberReference region MethodInvocation regions Literal 0 get = BlockStatement StatementExpression Assignment MemberReference region Cast ReferenceType Region MemberReference owningState = LocalVariableDeclaration ReferenceType Transition VariableDeclarator transition MethodInvocation StatementExpression MethodInvocation transition Cast ReferenceType Vertex MemberReference source StatementExpression MethodInvocation transition Cast ReferenceType Vertex MemberReference dest StatementExpression MethodInvocation transition Cast ReferenceType Region MemberReference region ReturnStatement MemberReference transition	1
MethodDeclaration Modifier private handleFireHelpEvent FormalParameter ReferenceType event FormalParameter ReferenceType ArgoHelpEventListener listener SwitchStatement MethodInvocation event getEventType SwitchStatementCase MemberReference ArgoEventTypes StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase MemberReference ArgoEventTypes StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "Invalid event:" MethodInvocation event getEventType error BreakStatement	1
MethodDeclaration Modifier protected Annotation Override LocalVariableDeclaration ReferenceType Collection VariableDeclarator list ClassCreator ReferenceType ArrayList Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation IfStatement BinaryOperation == MemberReference element Literal null BlockStatement StatementExpression Assignment MemberReference element Literal " " = StatementExpression MethodInvocation list MemberReference element add StatementExpression MethodInvocation MemberReference list	0
MethodDeclaration ReferenceType DiagramElement FormalParameter Modifier final ReferenceType Rectangle rect FormalParameter Modifier final ReferenceType Color FormalParameter Modifier final ReferenceType Color ReturnStatement ClassCreator ReferenceType Rect MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height MemberReference MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType org ReferenceType ReferenceType ReferenceType ReferenceType Class VariableDeclarator metaclass MethodInvocation MemberReference baseClass getMetaclass LocalVariableDeclaration ReferenceType Profile VariableDeclarator profile Cast ReferenceType Stereotype MemberReference handle IfStatement BinaryOperation && BinaryOperation != MemberReference metaclass Literal null BinaryOperation != MemberReference profile Literal null BlockStatement StatementExpression MethodInvocation profile MemberReference metaclass StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Not a Stereotype or illegal base class"	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLCollaborationDiagram BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target ReturnStatement MethodInvocation impl MemberReference source MemberReference target	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
